#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт



КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.КассоваяСмена) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.КассоваяСмена.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.КассоваяСмена);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	Возврат; //В дальнейшем будет добавлен код команд

КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.УдалитьКассоваяСмена КАК Таблица
	|ГДЕ
	|	Таблица.НоваяКассоваяСмена = ЗНАЧЕНИЕ(Документ.КассоваяСмена.ПустаяСсылка)";
	
	МассивСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, МассивСсылок);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.УдалитьКассоваяСмена";
	МетаданныеОбъекта = Метаданные.Документы.УдалитьКассоваяСмена;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать документ: %Документ% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         МетаданныеОбъекта,
			                         Выборка.Ссылка,
			                         ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
		УдалитьКассоваяСменаОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Если УдалитьКассоваяСменаОбъект = Неопределено Тогда
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			ЗафиксироватьТранзакцию();
			Продолжить;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(УдалитьКассоваяСменаОбъект.НоваяКассоваяСмена) Тогда
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			ЗафиксироватьТранзакцию();
			Продолжить;
			
		КонецЕсли;
		
		НоваяКассоваяСменаОбъект = Документы.КассоваяСмена.СоздатьДокумент();
		НоваяКассоваяСменаОбъект.Номер    = УдалитьКассоваяСменаОбъект.Номер;
		НоваяКассоваяСменаОбъект.Дата     = УдалитьКассоваяСменаОбъект.Дата;
		НоваяКассоваяСменаОбъект.КассаККМ = УдалитьКассоваяСменаОбъект.КассаККМ;
		НоваяКассоваяСменаОбъект.Комментарий = УдалитьКассоваяСменаОбъект.Комментарий;
		НоваяКассоваяСменаОбъект.НачалоКассовойСмены = УдалитьКассоваяСменаОбъект.НачалоКассовойСмены;
		НоваяКассоваяСменаОбъект.ОкончаниеКассовойСмены = УдалитьКассоваяСменаОбъект.ОкончаниеКассовойСмены;
		НоваяКассоваяСменаОбъект.Организация = УдалитьКассоваяСменаОбъект.Организация;
		
		Если УдалитьКассоваяСменаОбъект.СтатусКассовойСмены = Перечисления.УдалитьСтатусыКассовойСмены.Закрыта Тогда
			НоваяКассоваяСменаОбъект.Статус = Перечисления.СтатусыКассовойСмены.Закрыта;
			НоваяКассоваяСменаОбъект.СтатусРегламентныхОпераций = Перечисления.СтатусыРегламентныхОперацийКассовойСмены.СозданОтчет;
		ИначеЕсли УдалитьКассоваяСменаОбъект.СтатусКассовойСмены = Перечисления.УдалитьСтатусыКассовойСмены.Открыта Тогда
			НоваяКассоваяСменаОбъект.Статус = Перечисления.СтатусыКассовойСмены.Открыта;
			НоваяКассоваяСменаОбъект.СтатусРегламентныхОпераций = Перечисления.СтатусыРегламентныхОперацийКассовойСмены.ПустаяСсылка();
		Иначе
			НоваяКассоваяСменаОбъект.Статус = Перечисления.СтатусыКассовойСмены.Закрыта;
			НоваяКассоваяСменаОбъект.СтатусРегламентныхОпераций = Перечисления.СтатусыРегламентныхОперацийКассовойСмены.СозданОтчетЧекиЗаархивированы;
		КонецЕсли;
		
		Попытка
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(НоваяКассоваяСменаОбъект, Истина);
			
			УдалитьКассоваяСменаОбъект.НоваяКассоваяСмена = НоваяКассоваяСменаОбъект.Ссылка;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(УдалитьКассоваяСменаОбъект, Истина);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Документ% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         МетаданныеОбъекта,
			                         Выборка.Ссылка,
			                         ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = НЕ ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли