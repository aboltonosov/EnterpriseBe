
&НаКлиенте
Перем КэшированныеЗначения;

&НаСервере
Перем КэшированныеЗначения;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура УстановитьУсловноеОформление()
	УсловноеОформление.Элементы.Очистить();
	НоменклатураСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтаФорма, "ТоварыХарактеристика");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизитыТабличнойЧасти()
	ПараметрыЗаполненияРеквизитов = Новый Структура;
	ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Объект.Товары, ПараметрыЗаполненияРеквизитов);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	// ВводНаОсновании
	ВводНаОсновании.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюСоздатьНаОсновании);
	// Конец ВводНаОсновании
	
	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	//УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	ЗаполнитьСлужебныеРеквизитыТабличнойЧасти();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииЧтенииНаСервере();
	
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	//УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьСлужебныеРеквизитыТабличнойЧасти();
	
	// Обработчик подсистемы "Свойства"
	//УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Подсистема "Свойства"
	//Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
	//	ОбновитьЭлементыДополнительныхРеквизитов();
	//	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	//Если УчетБланковСтрогойОтчетностиКлиент_Локализация.ПустоеЗначениеРеквизитовБСО(Объект, "Товары", "Тип", "Серия", "НомерС", "НомерПо", "Количество") Тогда
	//	Отказ = Истина;
	//	Возврат;
	//КонецЕсли;
	//
	//Если УчетБланковСтрогойОтчетностиКлиент_Локализация.ПустоеЗначениеРеквизитовБСО(Объект, "Товары", "Тип", "Серия", "НомерСФакт", "НомерПоФакт", "КоличествоФакт") Тогда
	//	Отказ = Истина;
	//	Возврат;
	//КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	Если Объект.ДатаНачала > Объект.ДатаОкончания И Объект.ДатаОкончания <> '000101010000' Тогда
		Объект.ДатаОкончания = Объект.ДатаНачала;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	Если Объект.ДатаОкончания < Объект.ДатаНачала И Объект.ДатаНачала <> '000101010000' Тогда
		Объект.ДатаНачала = Объект.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	Объект.ФизическоеЛицо = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
КонецПроцедуры

&НаКлиенте
Процедура ФизическоеЛицоПриИзменении(Элемент)
	Объект.Склад = ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТЧТоварыФормы

#Область ОбработчикиСобытийЗаполнитьФактПоУчету

&НаКлиенте
Функция КоличествоФактЗаполнено()
	НайденныеСтроки = Объект.Товары.НайтиСтроки(Новый Структура("КоличествоФакт", 0));
	Возврат НайденныеСтроки.Количество() <> Объект.Товары.Количество();
КонецФункции

&НаКлиенте
Процедура ЗаполнитьФактПоУчету(Команда)
	Если КоличествоФактЗаполнено() Тогда
		ТекстВопроса = НСтр("ru='В табличной части уже есть строки с заполненным фактическим количеством.
			|При заполнении эта информация будет утеряна. Продолжить?'");
		Ответ = Неопределено;
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьФактПоУчетуЗавершение", ЭтотОбъект), ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
		Возврат;
	КонецЕсли;
	ЗаполнитьФактПоУчетуКлиент();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФактПоУчетуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Ответ = РезультатВопроса;
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьФактПоУчетуКлиент();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФактПоУчетуКлиент()
	Для Каждого СтрТабл Из Объект.Товары Цикл
		СтрТабл.КоличествоФакт = СтрТабл.Количество;
		СтрТабл.НомерСФакт = СтрТабл.НомерС;
		СтрТабл.НомерПоФакт = СтрТабл.НомерПо;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ЗаполнитьТоварыБСО(ОстаткиПоФизЛицу)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", ?(НачалоДня(Объект.Дата) = Объект.Дата, '00010101', Объект.Дата));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БланкиСтрогойОтчетностиОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БланкиСтрогойОтчетностиОстатки.Номенклатура КАК Номенклатура,
	|	БланкиСтрогойОтчетностиОстатки.Характеристика КАК Характеристика,
	|	БланкиСтрогойОтчетностиОстатки.Тип КАК Тип,
	|	БланкиСтрогойОтчетностиОстатки.Серия КАК Серия,
	|	БланкиСтрогойОтчетностиОстатки.Номер КАК Номер,
	|	БланкиСтрогойОтчетностиОстатки.КоличествоОстаток КАК Количество,
	|	БланкиСтрогойОтчетностиОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрНакопления.БланкиСтрогойОтчетности.Остатки(
	|			&Период,
	|			ИСТИНА
	|				И Склад = &Склад
	|				И ФизическоеЛицо = &ФизическоеЛицо) КАК БланкиСтрогойОтчетностиОстатки";
	
	Если ОстаткиПоФизЛицу Тогда
		Запрос.УстановитьПараметр("ФизическоеЛицо", Объект.ФизическоеЛицо);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Склад = &Склад", "");
	Иначе
		Запрос.УстановитьПараметр("Склад", Объект.Склад);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ФизическоеЛицо = &ФизическоеЛицо", "");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТЗ = УчетБланковСтрогойОтчетностиСервер.СтруктураСлужебнойТаблицыБСО();
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;
	
	ТЗ = УчетБланковСтрогойОтчетностиСервер.СвернутьТаблицуБСО(ТЗ);
	
	Для каждого Стр Из ТЗ Цикл
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
		
		НоваяСтрока.НомерС = Стр.НачальныйНомерБСО;
		НоваяСтрока.НомерПо = Стр.КонечныйНомерБСО;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОстатки(Команда)
	Если Объект.Товары.Количество() > 0 Тогда
		Ответ = Неопределено;
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьЗавершениеЗаполненияБСО", ЭтотОбъект, Новый Структура("ОстаткиПоФизЛицу", Ложь)), НСтр("ru = 'Табличная часть будет очищена. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	Объект.Товары.Очистить();
	ЗаполнитьТоварыБСО(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОстаткиПоФизЛицу(Команда)
	Если Объект.Товары.Количество() > 0 Тогда
		Ответ = Неопределено;
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьЗавершениеЗаполненияБСО", ЭтотОбъект, Новый Структура("ОстаткиПоФизЛицу", Истина)), НСтр("ru = 'Табличная часть будет очищена. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	Объект.Товары.Очистить();
	ЗаполнитьТоварыБСО(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗавершениеЗаполненияБСО(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Ответ = РезультатВопроса;
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Товары.Очистить();
	ЗаполнитьТоварыБСО(ДополнительныеПараметры.ОстаткиПоФизЛицу);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	ПараметрыЗаполненияПартии = Новый Структура("Дата, Организация, Подразделение");
	ЗаполнитьЗначенияСвойств(ПараметрыЗаполненияПартии, Объект);
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекущаяСтрока.Характеристика);
	СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыХарактеристикаПриИзменении(Элемент)
	ПараметрыЗаполненияПартии = Новый Структура("Дата, Организация, Подразделение");
	ЗаполнитьЗначенияСвойств(ПараметрыЗаполненияПартии, Объект);
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	УчетБланковСтрогойОтчетностиКлиент.ПересчитатьНачальныйКонечныйНомерПриИзменении(Элементы, "Товары", "НомерС", "НомерПо", "Количество", "НачальныйНомерБСОПриИзменении");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНомерСПриИзменении(Элемент)
	УчетБланковСтрогойОтчетностиКлиент.ПересчитатьНачальныйКонечныйНомерПриИзменении(Элементы, "Товары", "НомерС", "НомерПо", "Количество", "НачальныйНомерБСОПриИзменении");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНомерПоПриИзменении(Элемент)
	УчетБланковСтрогойОтчетностиКлиент.ПересчитатьНачальныйКонечныйНомерПриИзменении(Элементы, "Товары", "НомерС", "НомерПо", "Количество", "КонечныйНомерБСОПриИзменении");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоФактПриИзменении(Элемент)
	УчетБланковСтрогойОтчетностиКлиент.ПересчитатьНачальныйКонечныйНомерПриИзменении(Элементы, "Товары", "НомерСФакт", "НомерПоФакт", "КоличествоФакт", "НачальныйНомерБСОПриИзменении");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНомерСФактПриИзменении(Элемент)
	УчетБланковСтрогойОтчетностиКлиент.ПересчитатьНачальныйКонечныйНомерПриИзменении(Элементы, "Товары", "НомерСФакт", "НомерПоФакт", "КоличествоФакт", "НачальныйНомерБСОПриИзменении");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНомерПоФактПриИзменении(Элемент)
	УчетБланковСтрогойОтчетностиКлиент.ПересчитатьНачальныйКонечныйНомерПриИзменении(Элементы, "Товары", "НомерСФакт", "НомерПоФакт", "КоличествоФакт", "КонечныйНомерБСОПриИзменении");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// ВводНаОсновании
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ВводНаОсновании

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец МенюОтчеты

&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	ОбщегоНазначенияУТКлиент.РедактироватьПериод(Объект, Новый Структура("ДатаНачала, ДатаОкончания", "ДатаНачала", "ДатаОкончания"));
	
КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

#КонецОбласти