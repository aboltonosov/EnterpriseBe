#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);

КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.УстановкаЦенНоменклатуры) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.УстановкаЦенНоменклатуры.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.УстановкаЦенНоменклатуры);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

	КомандаОтчет = ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуРезультатыСогласованияЦенНоменклатурыПоДокументу(КомандыОтчетов);
	Если КомандаОтчет <> Неопределено Тогда
		КомандаОтчет.СписокФорм = "ФормаДокумента,ФормаСписка";
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаЦеныНоменклатуры(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаЦеныНоменклатуры(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЦеныНоменклатуры";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика        КАК Характеристика,
	|	ТаблицаТовары.Упаковка              КАК Упаковка,
	|	ТаблицаТовары.ВидЦены               КАК ВидЦены,
	|	ТаблицаТовары.Цена                  КАК Цена,
	|	ТаблицаТовары.ВидЦены.ВалютаЦены    КАК Валюта,
	|	ТаблицаТовары.Ссылка.Дата           КАК ПЕРИОД
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыУстановокЦенНоменклатуры.Согласован)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И (ТаблицаТовары.Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	|		ИЛИ (ТаблицаТовары.Номенклатура.ИспользованиеХарактеристик <> ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	|		И ТаблицаТовары.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// 4D:ERP для Беларуси, Дмитрий, 13.08.2017 13:04:12 
	// Розничная торговля, №15729
	// {
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи") И ПолучитьФункциональнуюОпцию("ИспользоватьТорговыеНадбавки") Тогда
		
		// Акт о переоценке товаров
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьПереоценкаВРознице";
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Идентификатор = "ПереоценкаТоваровВРознице";
		КомандаПечати.Представление = НСтр("ru = 'Акт о переоценке товаров'");
		
		// Опись-акт переоценки товаров
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьОписьАкт";
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Идентификатор = "ПечатьОписьАкт";
		КомандаПечати.Представление = НСтр("ru = 'Опись-акт переоценки товаров'");
		
	КонецЕсли;
	// }
	// 4D

	// Установка цен номенклатуры
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьУстановкаЦенНоменклатуры";
	КомандаПечати.МенеджерПечати = "";
	КомандаПечати.Идентификатор = "УстановкаЦенНоменклатуры";
	КомандаПечати.Представление = НСтр("ru = 'Установка цен номенклатуры'");

	Если ПраваПользователяПовтИсп.ПечатьЭтикетокИЦенников() Тогда
		// Ценники
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьЭтикетокИЦенников";
		КомандаПечати.МенеджерПечати = "Документ.УстановкаЦенНоменклатуры";
		КомандаПечати.Идентификатор = "Ценники";
		КомандаПечати.Представление = НСтр("ru = 'Ценники'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
		// Этикетки
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьЭтикетокИЦенников";
		КомандаПечати.МенеджерПечати = "Документ.УстановкаЦенНоменклатуры";
		КомандаПечати.Идентификатор = "Этикетки";
		КомандаПечати.Представление = НСтр("ru = 'Этикетки'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

КонецПроцедуры

// Процедура печати документа.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// 4D:ERP для Беларуси, Дмитрий, 13.08.2017 13:04:12 
	// Розничная торговля, №15729
	// {
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПереоценкаТоваровВРознице") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПереоценкаТоваровВРознице",
			НСтр("ru = 'Переоценка товаров в рознице'"),
			СформироватьПечатнуюФормуПереоценкиТоваровВРознице(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПечатьОписьАкт") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПечатьОписьАкт",
			НСтр("ru = 'Опись-акт переоценки товаров'"),
			СформироватьПечатнуюФормуОписьАктаВРознице(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	// }
	// 4D
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "УстановкаЦенНоменклатуры") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"УстановкаЦенНоменклатуры",
			НСтр("ru = 'Установка цен номенклатуры'"),
			СформироватьПечатнуюФормуУстановкиЦенНоменклатуры(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	
	
КонецПроцедуры

// 4D:ERP для Беларуси, Дмитрий, 13.08.2017 13:04:12 
// Розничная торговля, №15729
// {
Функция СформироватьПечатнуюФормуПереоценкиТоваровВРознице(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПереоценкаТоваровВРознице_ПереоценкаТоваровВРознице";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ПереоценкаТоваровВРознице_Локализация");

	КонтролироватьАссортимент = АссортиментСерверПовтИсп.КонтролироватьАссортимент(ПараметрыПечати.РозничныйМагазин);
	
	ПервыйДокумент = Истина;
	Для Каждого УстановкаЦенНоменклатуры Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("УстановкаЦенНоменклатуры", УстановкаЦенНоменклатуры);
		Запрос.УстановитьПараметр("РозничныйМагазин",         ПараметрыПечати.РозничныйМагазин);
		Запрос.УстановитьПараметр("Организация",              ПараметрыПечати.Организация);
		Запрос.УстановитьПараметр("КонецПредыдущегоДня",      КонецДня(НачалоДня(УстановкаЦенНоменклатуры.Дата) - 1));
		Если КонтролироватьАссортимент Тогда
			
			ОбъектПланирования = АссортиментСервер.ОбъектПланирования(ПараметрыПечати.РозничныйМагазин);
			Запрос.УстановитьПараметр("ОбъектПланирования", ОбъектПланирования);
			Запрос.УстановитьПараметр("ДатаДокумента", УстановкаЦенНоменклатуры.Дата);
			
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	УстановкаЦенНоменклатуры.Номер КАК Номер,
			|	УстановкаЦенНоменклатуры.Дата КАК Дата,
			|	УстановкаЦенНоменклатуры.Ссылка КАК Ссылка,
			|	УстановкаЦенНоменклатуры.Ответственный КАК ОтветственныйПредставление,
			|	&Организация КАК Организация,
			|	&Организация КАК Поставщик,
			|	&РозничныйМагазин КАК Получатель,
			|	&РозничныйМагазин КАК Склад
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Ассортимент.Номенклатура КАК Номенклатура,
			|	Ассортимент.ВидЦены КАК ВидЦены
			|ПОМЕСТИТЬ НоменклатураВидыЦен
			|ИЗ
			|	РегистрСведений.Ассортимент.СрезПоследних(
			|			КОНЕЦПЕРИОДА(&ДатаДокумента, ДЕНЬ),
			|			ОбъектПланирования = &ОбъектПланирования
			|				И Номенклатура В
			|					(ВЫБРАТЬ
			|						Т.Номенклатура
			|					ИЗ
			|						Документ.УстановкаЦенНоменклатуры.Товары КАК Т
			|					ГДЕ
			|						Т.Ссылка = &УстановкаЦенНоменклатуры)) КАК Ассортимент
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
			|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
			|	СправочникНоменклатура.Код КАК Код,
			|	СправочникНоменклатура.Артикул КАК Артикул,
			|	СправочникНоменклатура.НаименованиеПолное КАК ПолноеНаименованиеНоменклатуры,
			|	СправочникНоменклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
			|	ВложенныйЗапрос.Характеристика КАК Характеристика,
			|	СправочникХарактеристикиНоменлатуры.НаименованиеПолное КАК ПолноеНаименованиеХарактеристики,
			|	1 КАК Коэффициент,
			|	ВложенныйЗапрос.НоваяЦенаВРознице КАК ЦенаПосле,
			|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)) КАК ОтклонениеСтоимости,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЦенаДо,
			|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК Количество,
			|	ВложенныйЗапрос.Товар,
			|	ВложенныйЗапрос.ХарактеристикаНаименованиеПолное,
			|	ВложенныйЗапрос.НоваяЦенаВРознице * ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК СуммаПосле,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК СуммаДо
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			УстановкаЦенНоменклатурыТовары.Ссылка КАК Ссылка,
			|			УстановкаЦенНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
			|			УстановкаЦенНоменклатурыТовары.Номенклатура КАК Номенклатура,
			|			УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
			|			УстановкаЦенНоменклатурыТовары.Цена / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) КАК НоваяЦенаВРознице,
			|			УстановкаЦенНоменклатурыТовары.ВидЦены КАК ВидЦены,
			|			УстановкаЦенНоменклатурыТовары.Номенклатура.НаименованиеПолное КАК Товар,
			|			УстановкаЦенНоменклатурыТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименованиеПолное
			|		ИЗ
			|			Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураВидыЦен КАК НоменклатураВидыЦен
			|				ПО (НоменклатураВидыЦен.Номенклатура = УстановкаЦенНоменклатурыТовары.Номенклатура)
			|					И (НоменклатураВидыЦен.ВидЦены = УстановкаЦенНоменклатурыТовары.ВидЦены)
			|		ГДЕ
			|			УстановкаЦенНоменклатурыТовары.Ссылка = &УстановкаЦенНоменклатуры) КАК ВложенныйЗапрос
			|		ПО (ВложенныйЗапрос.Ссылка = УстановкаЦенНоменклатуры.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				КОНЕЦПЕРИОДА(&КонецПредыдущегоДня, ДЕНЬ),
			|				(Номенклатура, ВидЦены) В
			|					(ВЫБРАТЬ
			|						Т.Номенклатура,
			|						Т.ВидЦены
			|					ИЗ
			|						НоменклатураВидыЦен КАК Т)) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО (ВложенныйЗапрос.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура)
			|			И (ВложенныйЗапрос.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика)
			|			И (ВложенныйЗапрос.ВидЦены = ЦеныНоменклатурыСрезПоследних.ВидЦены)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
			|		ПО (ВложенныйЗапрос.Номенклатура = Аналитика.Номенклатура)
			|			И (ВложенныйЗапрос.Характеристика = Аналитика.Характеристика)
			|			И (&РозничныйМагазин = Аналитика.Склад)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(&КонецПредыдущегоДня, Организация = &Организация) КАК ТоварыОрганизацийОстатки
			|		ПО (Аналитика.КлючАналитики = ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
			|		ПО (СправочникНоменклатура.Ссылка = ВложенныйЗапрос.Номенклатура)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СправочникХарактеристикиНоменлатуры
			|		ПО (СправочникХарактеристикиНоменлатуры.Ссылка = ВложенныйЗапрос.Характеристика)
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) <> 0
			|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)) <> 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	ВложенныйЗапрос.НомерСтроки";
		Иначе
			Запрос.УстановитьПараметр("ВидЦены",                  ПараметрыПечати.РозничныйМагазин.РозничныйВидЦены);
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	УстановкаЦенНоменклатуры.Номер КАК Номер,
			|	УстановкаЦенНоменклатуры.Дата КАК Дата,
			|	УстановкаЦенНоменклатуры.Ссылка КАК Ссылка,
			|	УстановкаЦенНоменклатуры.Ответственный КАК ОтветственныйПредставление,
			|	&Организация КАК Организация,
			|	&Организация КАК Поставщик,
			|	&РозничныйМагазин КАК Получатель,
			|	&РозничныйМагазин КАК Склад
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
			|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
			|	СправочникНоменклатура.Код КАК Код,
			|	СправочникНоменклатура.Артикул КАК Артикул,
			|	СправочникНоменклатура.НаименованиеПолное КАК ПолноеНаименованиеНоменклатуры,
			|	СправочникНоменклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
			|	ВложенныйЗапрос.Характеристика КАК Характеристика,
			|	СправочникХарактеристикиНоменлатуры.НаименованиеПолное КАК ПолноеНаименованиеХарактеристики,
			|	1 КАК Коэффициент,
			|	ВложенныйЗапрос.НоваяЦенаВРознице КАК ЦенаПосле,
			|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)) КАК ОтклонениеСтоимости,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЦенаДо,
			|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК Количество,
			|	ВложенныйЗапрос.НоваяЦенаВРознице * ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК СуммаПосле,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК СуммаДо,
			|	ВложенныйЗапрос.Товар,
			|	ВложенныйЗапрос.ХарактеристикаНаименованиеПолное
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			УстановкаЦенНоменклатурыТовары.Ссылка КАК Ссылка,
			|			УстановкаЦенНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
			|			УстановкаЦенНоменклатурыТовары.Номенклатура КАК Номенклатура,
			|			УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
			|			УстановкаЦенНоменклатурыТовары.Цена / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) КАК НоваяЦенаВРознице,
			|			УстановкаЦенНоменклатурыТовары.Номенклатура.НаименованиеПолное КАК Товар,
			|			УстановкаЦенНоменклатурыТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименованиеПолное
			|		ИЗ
			|			Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
			|		ГДЕ
			|			УстановкаЦенНоменклатурыТовары.Ссылка = &УстановкаЦенНоменклатуры
			|			И УстановкаЦенНоменклатурыТовары.ВидЦены = &ВидЦены) КАК ВложенныйЗапрос
			|		ПО (ВложенныйЗапрос.Ссылка = УстановкаЦенНоменклатуры.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				КОНЕЦПЕРИОДА(&КонецПредыдущегоДня, ДЕНЬ),
			|				(Номенклатура, Характеристика, ВидЦены) В
			|					(ВЫБРАТЬ
			|						Т.Номенклатура,
			|						Т.Характеристика,
			|						Т.ВидЦены
			|					ИЗ
			|						Документ.УстановкаЦенНоменклатуры.Товары КАК Т
			|					ГДЕ
			|						Т.Ссылка = &УстановкаЦенНоменклатуры
			|						И Т.ВидЦены = &ВидЦены)) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО (ВложенныйЗапрос.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура)
			|			И (ВложенныйЗапрос.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
			|		ПО (ВложенныйЗапрос.Номенклатура = Аналитика.Номенклатура)
			|			И (ВложенныйЗапрос.Характеристика = Аналитика.Характеристика)
			|			И (&РозничныйМагазин = Аналитика.Склад)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(&КонецПредыдущегоДня, Организация = &Организация) КАК ТоварыОрганизацийОстатки
			|		ПО (Аналитика.КлючАналитики = ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
			|		ПО (СправочникНоменклатура.Ссылка = ВложенныйЗапрос.Номенклатура)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СправочникХарактеристикиНоменлатуры
			|		ПО (СправочникХарактеристикиНоменлатуры.Ссылка = ВложенныйЗапрос.Характеристика)
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) <> 0
			|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)) <> 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	ВложенныйЗапрос.НомерСтроки";
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки1",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
				"ЦеныНоменклатурыСрезПоследних.Упаковка",
				"ЦеныНоменклатурыСрезПоследних.Номенклатура"));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки2",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
				"УстановкаЦенНоменклатурыТовары.Упаковка",
				"УстановкаЦенНоменклатурыТовары.Номенклатура"));
		Запрос.Текст = ТекстЗапроса;
		
		УстановитьПривилегированныйРежим(Истина);
		РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();
		УстановитьПривилегированныйРежим(Ложь);
		
		Шапка = РезультатПакетаЗапросов[0].Выбрать();
		Шапка.Следующий();
		
		Если КонтролироватьАссортимент Тогда
			СтрокаТовары =  РезультатПакетаЗапросов[2].Выбрать();	
		Иначе
			СтрокаТовары =  РезультатПакетаЗапросов[1].Выбрать();
		Конецесли;
		
        КоличествоСтрок =   СтрокаТовары.Количество();
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьЗаголовок.Параметры.Заполнить(Шапка);
		ОбластьЗаголовок.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер, Истина,Истина);
		ОбластьЗаголовок.Параметры.ДатаДокумента = Формат(Шапка.Дата,"ДЛФ=DD");
		ОбластьЗаголовок.Параметры.Организация = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), "ПолноеНаименование");
		
		ОбластьЗаголовок.Параметры.ДолжностьПредседателя                = Шапка.ДолжностьПредседателяКомиссии;
		ОбластьЗаголовок.Параметры.ФИОПредседателя       				= ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.ПредседательКомиссии);
       
		//комиссия
		Руководители = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Шапка.Организация, Шапка.Дата);
		ОбластьЗаголовок.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;
		ОбластьЗаголовок.Параметры.ФИОРуководителя       = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Руководители.Руководитель.Наименование);
		
		ТабДокумент.Вывести(ОбластьЗаголовок);
		ОбластьКомиссия = Макет.ПолучитьОбласть("Комиссия");
				
		Для сч = 1 по 3 Цикл	
			Если ЗначениеЗаполнено(Шапка["ЧленКомиссии"+сч]) Тогда
				ОбластьКомиссия.Параметры["ФИО"] = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка["ЧленКомиссии"+сч]);
				ОбластьКомиссия.Параметры["Должность"] = Шапка["ДолжностьЧленаКомиссии"+сч];
				ТабДокумент.Вывести(ОбластьКомиссия);
			КонецЕсли;	
		КонецЦикла; 
				
		ОбластьОснование = Макет.ПолучитьОбласть("Основание");
		ОбластьОснование.Параметры.Приказ = Шапка.Приказ;
		ТабДокумент.Вывести(ОбластьОснование);
		
		ОбластьШапкатаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		
		ОбластьИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
        ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
        ОбластьМОЛ = Макет.ПолучитьОбласть("МОЛ");

		
		отклонениевсего = 0;
		КоличествоВсего = 0;
		СуммаПослеВсего = 0;
		
		ИтоговыеСуммы = Новый Структура;
			
		// Инициализация итогов по странице.
			
		ИтоговыеСуммы.Вставить("КоличествоПоСтранице", 0);
		ИтоговыеСуммы.Вставить("ОтклонениеПоСтранице", 0);

		ИтоговыеСуммы.Вставить("СуммаДоПоСтранице", 0);
		ИтоговыеСуммы.Вставить("СуммаПослеПоСтранице", 0);
		ИтоговыеСуммы.Вставить("ОтклонениеПоСтранице", 0);
		ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеров",0);
		
		ДанныеСтроки = Новый Структура;
		ДанныеСтроки.Вставить("НомерСтроки", 0);
		ДанныеСтроки.Вставить("Товар", 0);
		ДанныеСтроки.Вставить("Количество", 0);
		ДанныеСтроки.Вставить("ЦенаДо", 0);
		ДанныеСтроки.Вставить("ЦенаПосле", 0);
		ДанныеСтроки.Вставить("ЕдиницаИзмерения", 0);
		ДанныеСтроки.Вставить("СуммаДо", 0);
		ДанныеСтроки.Вставить("СуммаПосле", 0);
		ДанныеСтроки.Вставить("Отклонение", 0);				


		НомерСтраницы = 1;
		НомерСтроки = 1;
		ОтклонениеСтоимостиИтогоПрописью = 0;
		КоличествоОбщееПрописью = 0;
		МассивВыводимыхОбластей = Новый Массив;
		Пока СтрокаТовары.Следующий() Цикл 
			
		    ДанныеСтроки.НомерСтроки = ДанныеСтроки.НомерСтроки + 1;
			ЗаполнитьЗначенияСвойств(ДанныеСтроки,СтрокаТовары,,"НомерСтроки");
			
			Если НЕ СтрокаТовары.СуммаДо = 0 Тогда
				ДанныеСтроки.Отклонение = СтрокаТовары.СуммаПосле-СтрокаТовары.СуммаДо;
			КонецЕсли;	
						
			ДанныеСтроки.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				СтрокаТовары.Товар,
				СтрокаТовары.ПолноеНаименованиеХарактеристики);

			ОбластьСтрока.Параметры.Заполнить(ДанныеСтроки);

			Если НЕ СтрокаТовары.СуммаДо = 0 Тогда
				отклонениевсего = отклонениевсего + СтрокаТовары.СуммаПосле-СтрокаТовары.СуммаДо;
			Конецесли;	
			КоличествоВсего =КоличествоВсего +  СтрокаТовары.Количество;
			СуммаПослеВсего = СуммаПослеВсего + СтрокаТовары.СуммаПосле;
			

			
			//
			//ОбластьСтрока.Параметры.Заполнить(ДанныеСтроки);
			
			Если ДанныеСтроки.НомерСтроки = 1 Тогда // первая строка
				
				ТабДокумент.Вывести(ОбластьШапкатаблицы);
				
			Иначе
				
				МассивВыводимыхОбластей.Очистить();
				
				МассивВыводимыхОбластей.Добавить(ОбластьСтрока);
				МассивВыводимыхОбластей.Добавить(ОбластьИтогоПоСтранице);
				Если ДанныеСтроки.НомерСтроки = КоличествоСтрок Тогда
					
					МассивВыводимыхОбластей.Добавить(ОбластьОснование);
					
				КонецЕсли;
				
				Если ДанныеСтроки.НомерСтроки <> 1 И Не ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					
					ОбластьИтогоПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
					ОбластьИтогоПоСтранице.Параметры.КоличествоПорядковыхНомеров = ЧислоПрописью(ИтоговыеСуммы.КоличествоПорядковыхНомеров, ,",,,,,,,,0");
					
					ОбластьИтогоПоСтранице.Параметры.КоличествоПоСтраницеПрописью = ЧислоПрописью(ИтоговыеСуммы.КоличествоПоСтранице, ,",,,,,,,,0");

					ТабДокумент.Вывести(ОбластьИтогоПоСтранице);
					
					ИтоговыеСуммы.Вставить("КоличествоПорядковыхНомеров", 0);
					ИтоговыеСуммы.Вставить("КоличествоПоСтранице", 0);
					ИтоговыеСуммы.Вставить("СуммаДоПоСтранице", 0);
					ИтоговыеСуммы.Вставить("СуммаПослеПоСтранице", 0);
					ИтоговыеСуммы.Вставить("ОтклонениеПоСтранице", 0);
					ИтоговыеСуммы.Вставить("КоличествоПоСтраницеПрописью",0);
   
					НомерСтраницы = НомерСтраницы + 1;
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабДокумент.Вывести(ОбластьШапкатаблицы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьСтрока);
			
			// Увеличим итоги по странице.
			ИтоговыеСуммы.КоличествоПорядковыхНомеров    = ИтоговыеСуммы.КоличествоПорядковыхНомеров  + 1;
			ИтоговыеСуммы.КоличествоПоСтранице      = ИтоговыеСуммы.КоличествоПоСтранице  + ДанныеСтроки.Количество;
			ИтоговыеСуммы.СуммаДоПоСтранице         = ИтоговыеСуммы.СуммаДоПоСтранице     + ДанныеСтроки.СуммаДо;
			ИтоговыеСуммы.СуммаПослеПоСтранице      = ИтоговыеСуммы.СуммаПослеПоСтранице  + ДанныеСтроки.СуммаПосле;
			ИтоговыеСуммы.ОтклонениеПоСтранице      = ИтоговыеСуммы.ОтклонениеПоСтранице  + ДанныеСтроки.Отклонение;
			
			НомерСтроки = НомерСтроки + 1;
			// Увеличим итоги по документу.
		КонецЦикла;
		
		// Выводим итоги по последней странице
		ОбластьИтогоПоСтранице.Параметры.Заполнить(ИтоговыеСуммы);
		
		ОбластьИтогоПоСтранице.Параметры.КоличествоПорядковыхНомеров = ЧислоПрописью(ИтоговыеСуммы.КоличествоПорядковыхНомеров, ,",,,,,,,,0");
		ОбластьИтогоПоСтранице.Параметры.КоличествоПоСтраницеПрописью = ЧислоПрописью(ИтоговыеСуммы.КоличествоПоСтранице, ,",,,,,,,,0");

				
		ТабДокумент.Вывести(ОбластьИтогоПоСтранице);
		
		НомерСтраницы = НомерСтраницы + 1;
		
		// Выводим подвал документа
		ВалютаРегУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		ОбластьПодвал.параметры.отклонениевсего = Строка(Формат(отклонениевсего,"ЧДЦ=2")) + " (" + РаботаСКурсамиВалют.СформироватьСуммуПрописью(отклонениевсего, ВалютаРегУчета) + ") ";
		ОбластьПодвал.параметры.КоличествоВсего = Строка(Формат(КоличествоВсего,"ЧДЦ=2")) + " (" + ЧислоПрописью(КоличествоВсего, ,",,,,,,,,0") + ") ";
		ОбластьПодвал.параметры.СуммаПослеВсего = Строка(Формат(СуммаПослеВсего,"ЧДЦ=2")) + " (" + РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаПослеВсего, ВалютаРегУчета) + ") ";

		ТабДокумент.Вывести(ОбластьПодвал);

		Для сч = 1 по 3 Цикл
			Если ЗначениеЗаполнено(Шапка["ЧленКомиссии"+сч]) Тогда
				ТабДокумент.Вывести(ОбластьПодписи);
			КонецЕсли;	
		КонецЦикла; 
				
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, УстановкаЦенНоменклатуры);
		
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуОписьАктаВРознице(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОПИСЬАКТ_ОПИСЬАКТ";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("ОбщийМакет.ПФ_MXL_ОписьАктПереоценки_Локализация");

	КонтролироватьАссортимент = АссортиментСерверПовтИсп.КонтролироватьАссортимент(ПараметрыПечати.РозничныйМагазин);
	
	ПервыйДокумент = Истина;
	Для Каждого УстановкаЦенНоменклатуры Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("УстановкаЦенНоменклатуры", УстановкаЦенНоменклатуры);
		Запрос.УстановитьПараметр("РозничныйМагазин",         ПараметрыПечати.РозничныйМагазин);
		Запрос.УстановитьПараметр("Организация",              ПараметрыПечати.Организация);
		Запрос.УстановитьПараметр("КонецПредыдущегоДня",      КонецДня(НачалоДня(УстановкаЦенНоменклатуры.Дата) - 1));
		
		Если КонтролироватьАссортимент Тогда
			
			ОбъектПланирования = АссортиментСервер.ОбъектПланирования(ПараметрыПечати.РозничныйМагазин);
			Запрос.УстановитьПараметр("ОбъектПланирования", ОбъектПланирования);
			Запрос.УстановитьПараметр("ДатаДокумента", УстановкаЦенНоменклатуры.Дата);
			
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	УстановкаЦенНоменклатуры.Номер КАК Номер,
			|	УстановкаЦенНоменклатуры.Дата КАК Дата,
			|	УстановкаЦенНоменклатуры.Ссылка КАК Ссылка,
			|	УстановкаЦенНоменклатуры.Ответственный КАК ОтветственныйПредставление,
			|	&Организация КАК Организация,
			|	&Организация КАК Поставщик,
			|	&РозничныйМагазин КАК Получатель,
			|	&РозничныйМагазин КАК Склад
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Ассортимент.Номенклатура КАК Номенклатура,
			|	Ассортимент.ВидЦены КАК ВидЦены
			|ПОМЕСТИТЬ НоменклатураВидыЦен
			|ИЗ
			|	РегистрСведений.Ассортимент.СрезПоследних(
			|			КОНЕЦПЕРИОДА(&ДатаДокумента, ДЕНЬ),
			|			ОбъектПланирования = &ОбъектПланирования
			|				И Номенклатура В
			|					(ВЫБРАТЬ
			|						Т.Номенклатура
			|					ИЗ
			|						Документ.УстановкаЦенНоменклатуры.Товары КАК Т
			|					ГДЕ
			|						Т.Ссылка = &УстановкаЦенНоменклатуры)) КАК Ассортимент
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
			|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
			|	СправочникНоменклатура.Код КАК Код,
			|	СправочникНоменклатура.Артикул КАК Артикул,
			|	СправочникНоменклатура.НаименованиеПолное КАК ПолноеНаименованиеНоменклатуры,
			|	СправочникНоменклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
			|	ВложенныйЗапрос.Характеристика КАК Характеристика,
			|	СправочникХарактеристикиНоменлатуры.НаименованиеПолное КАК ПолноеНаименованиеХарактеристики,
			|	1 КАК Коэффициент,
			|	ВложенныйЗапрос.НоваяЦенаВРознице КАК ЦенаПосле,
			|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)) КАК ОтклонениеСтоимости,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЦенаДо,
			|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК Количество,
			|	ВложенныйЗапрос.Товар,
			|	ВложенныйЗапрос.ХарактеристикаНаименованиеПолное,
			|	ВложенныйЗапрос.НоваяЦенаВРознице * ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК СуммаПосле,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК СуммаДо
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			УстановкаЦенНоменклатурыТовары.Ссылка КАК Ссылка,
			|			УстановкаЦенНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
			|			УстановкаЦенНоменклатурыТовары.Номенклатура КАК Номенклатура,
			|			УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
			|			УстановкаЦенНоменклатурыТовары.Цена / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) КАК НоваяЦенаВРознице,
			|			УстановкаЦенНоменклатурыТовары.ВидЦены КАК ВидЦены,
			|			УстановкаЦенНоменклатурыТовары.Номенклатура.НаименованиеПолное КАК Товар,
			|			УстановкаЦенНоменклатурыТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименованиеПолное
			|		ИЗ
			|			Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураВидыЦен КАК НоменклатураВидыЦен
			|				ПО (НоменклатураВидыЦен.Номенклатура = УстановкаЦенНоменклатурыТовары.Номенклатура)
			|					И (НоменклатураВидыЦен.ВидЦены = УстановкаЦенНоменклатурыТовары.ВидЦены)
			|		ГДЕ
			|			УстановкаЦенНоменклатурыТовары.Ссылка = &УстановкаЦенНоменклатуры) КАК ВложенныйЗапрос
			|		ПО (ВложенныйЗапрос.Ссылка = УстановкаЦенНоменклатуры.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				КОНЕЦПЕРИОДА(&КонецПредыдущегоДня, ДЕНЬ),
			|				(Номенклатура, ВидЦены) В
			|					(ВЫБРАТЬ
			|						Т.Номенклатура,
			|						Т.ВидЦены
			|					ИЗ
			|						НоменклатураВидыЦен КАК Т)) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО (ВложенныйЗапрос.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура)
			|			И (ВложенныйЗапрос.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика)
			|			И (ВложенныйЗапрос.ВидЦены = ЦеныНоменклатурыСрезПоследних.ВидЦены)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
			|		ПО (ВложенныйЗапрос.Номенклатура = Аналитика.Номенклатура)
			|			И (ВложенныйЗапрос.Характеристика = Аналитика.Характеристика)
			|			И (&РозничныйМагазин = Аналитика.Склад)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(&КонецПредыдущегоДня, Организация = &Организация) КАК ТоварыОрганизацийОстатки
			|		ПО (Аналитика.КлючАналитики = ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
			|		ПО (СправочникНоменклатура.Ссылка = ВложенныйЗапрос.Номенклатура)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СправочникХарактеристикиНоменлатуры
			|		ПО (СправочникХарактеристикиНоменлатуры.Ссылка = ВложенныйЗапрос.Характеристика)
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) <> 0
			|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)) <> 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	ВложенныйЗапрос.НомерСтроки";
		Иначе
			Запрос.УстановитьПараметр("ВидЦены", ПараметрыПечати.РозничныйМагазин.РозничныйВидЦены);
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	УстановкаЦенНоменклатуры.Номер КАК Номер,
			|	УстановкаЦенНоменклатуры.Дата КАК Дата,
			|	УстановкаЦенНоменклатуры.Ссылка КАК Ссылка,
			|	УстановкаЦенНоменклатуры.Ответственный КАК ОтветственныйПредставление,
			|	&Организация КАК Организация,
			|	&Организация КАК Поставщик,
			|	&РозничныйМагазин КАК Получатель,
			|	&РозничныйМагазин КАК Склад
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
			|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
			|	СправочникНоменклатура.Код КАК Код,
			|	СправочникНоменклатура.Артикул КАК Артикул,
			|	СправочникНоменклатура.НаименованиеПолное КАК ПолноеНаименованиеНоменклатуры,
			|	СправочникНоменклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
			|	ВложенныйЗапрос.Характеристика КАК Характеристика,
			|	СправочникХарактеристикиНоменлатуры.НаименованиеПолное КАК ПолноеНаименованиеХарактеристики,
			|	1 КАК Коэффициент,
			|	ВложенныйЗапрос.НоваяЦенаВРознице КАК ЦенаПосле,
			|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)) КАК ОтклонениеСтоимости,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЦенаДо,
			|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК Количество,
			|	ВложенныйЗапрос.НоваяЦенаВРознице * ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК СуммаПосле,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК СуммаДо,
			|	ВложенныйЗапрос.Товар,
			|	ВложенныйЗапрос.ХарактеристикаНаименованиеПолное
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			УстановкаЦенНоменклатурыТовары.Ссылка КАК Ссылка,
			|			УстановкаЦенНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
			|			УстановкаЦенНоменклатурыТовары.Номенклатура КАК Номенклатура,
			|			УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
			|			УстановкаЦенНоменклатурыТовары.Цена / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) КАК НоваяЦенаВРознице,
			|			УстановкаЦенНоменклатурыТовары.Номенклатура.НаименованиеПолное КАК Товар,
			|			УстановкаЦенНоменклатурыТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименованиеПолное
			|		ИЗ
			|			Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
			|		ГДЕ
			|			УстановкаЦенНоменклатурыТовары.Ссылка = &УстановкаЦенНоменклатуры
			|			И УстановкаЦенНоменклатурыТовары.ВидЦены = &ВидЦены) КАК ВложенныйЗапрос
			|		ПО (ВложенныйЗапрос.Ссылка = УстановкаЦенНоменклатуры.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				КОНЕЦПЕРИОДА(&КонецПредыдущегоДня, ДЕНЬ),
			|				(Номенклатура, Характеристика, ВидЦены) В
			|					(ВЫБРАТЬ
			|						Т.Номенклатура,
			|						Т.Характеристика,
			|						Т.ВидЦены
			|					ИЗ
			|						Документ.УстановкаЦенНоменклатуры.Товары КАК Т
			|					ГДЕ
			|						Т.Ссылка = &УстановкаЦенНоменклатуры
			|						И Т.ВидЦены = &ВидЦены)) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО (ВложенныйЗапрос.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура)
			|			И (ВложенныйЗапрос.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
			|		ПО (ВложенныйЗапрос.Номенклатура = Аналитика.Номенклатура)
			|			И (ВложенныйЗапрос.Характеристика = Аналитика.Характеристика)
			|			И (&РозничныйМагазин = Аналитика.Склад)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(&КонецПредыдущегоДня, Организация = &Организация) КАК ТоварыОрганизацийОстатки
			|		ПО (Аналитика.КлючАналитики = ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
			|		ПО (СправочникНоменклатура.Ссылка = ВложенныйЗапрос.Номенклатура)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СправочникХарактеристикиНоменлатуры
			|		ПО (СправочникХарактеристикиНоменлатуры.Ссылка = ВложенныйЗапрос.Характеристика)
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) <> 0
			|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)) <> 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	ВложенныйЗапрос.НомерСтроки
			|ИТОГИ
			|	СУММА(СуммаПосле),
			|	СУММА(СуммаДо)
			|ПО
			|	ОБЩИЕ";
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки1",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
				"ЦеныНоменклатурыСрезПоследних.Упаковка",
				"ЦеныНоменклатурыСрезПоследних.Номенклатура"));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки2",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
				"УстановкаЦенНоменклатурыТовары.Упаковка",
				"УстановкаЦенНоменклатурыТовары.Номенклатура"));
		Запрос.Текст = ТекстЗапроса;
		
		УстановитьПривилегированныйРежим(Истина);
		РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();
		УстановитьПривилегированныйРежим(Ложь);
		
		Шапка = РезультатПакетаЗапросов[0].Выбрать();
		Шапка.Следующий();
		
		Если КонтролироватьАссортимент Тогда
			СтрокаИтоги = РезультатПакетаЗапросов[2].Выбрать();
		Иначе	
		    СтрокаИтоги = РезультатПакетаЗапросов[1].Выбрать();
		КонецЕсли; 
			
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОбластьЗаголовок.Параметры.Заполнить(Шапка);
		ОбластьЗаголовок.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.Номер, Истина,Истина);
		ОбластьЗаголовок.Параметры.ДатаДокумента = Формат(Шапка.Дата,"ДЛФ=DD");
		Сведения = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		
		ОбластьЗаголовок.Параметры.Организация = ФормированиеПечатныхФорм.ОписаниеОрганизации(Сведения, "ПолноеНаименование, ЮридическийАдрес");
		
		ОбластьЗаголовок.Параметры.ДолжностьПредседателя = Шапка.ДолжностьПредседателяКомиссии;
		ОбластьЗаголовок.Параметры.ФИОПредседателя       = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.ПредседательКомиссии);
		ОбластьЗаголовок.Параметры.КодПоОКПО = СтрЗАменить(ФормированиеПечатныхФорм.ОписаниеОрганизации(Сведения, "КодПоОКПО"), "Код по ОКПО ", "");
        ОбластьЗаголовок.Параметры.КодОКВЭД = СтрЗаменить(ФормированиеПечатныхФорм.ОписаниеОрганизации(Сведения, "КодОКВЭД"),"Код ОКВЭД ", "");

		//комиссия
		Руководители = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Шапка.Организация, Шапка.Дата);
		ОбластьЗаголовок.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;
		ОбластьЗаголовок.Параметры.ФИОРуководителя       = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Руководители.Руководитель.Наименование);
		
		ТабДокумент.Вывести(ОбластьЗаголовок);
		ОбластьКомиссия = Макет.ПолучитьОбласть("Комиссия");
				
		Для сч = 1 по 3 Цикл	
			Если ЗначениеЗаполнено(Шапка["ЧленКомиссии"+сч]) Тогда
				ОбластьКомиссия.Параметры["ФИО"] = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка["ЧленКомиссии"+сч]);
				ОбластьКомиссия.Параметры["Должность"] = Шапка["ДолжностьЧленаКомиссии"+сч];
				ТабДокумент.Вывести(ОбластьКомиссия);
			КонецЕсли;	
		КонецЦикла; 

		ВалютаРегУчета = Константы.ВалютаРегламентированногоУчета.Получить();		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		Если СтрокаИтоги.Количество() > 0 Тогда
			СтрокаИтоги.Следующий();
			ОбластьПодвал.Параметры.СуммаДо = Строка(СтрокаИтоги.СуммаДо) +  " (" + РаботаСКурсамиВалют.СформироватьСуммуПрописью(СтрокаИтоги.СуммаДо, ВалютаРегУчета) + ")";
			ОбластьПодвал.Параметры.СуммаПосле = Строка(СтрокаИтоги.СуммаПосле) + " (" + РаботаСКурсамиВалют.СформироватьСуммуПрописью(СтрокаИтоги.СуммаПосле, ВалютаРегУчета) + ")";
		Иначе
		    //первое поступление
			ОбластьПодвал.Параметры.СуммаДо = "0 (" + РаботаСКурсамиВалют.СформироватьСуммуПрописью(0, ВалютаРегУчета) + ")";
			ОбластьПодвал.Параметры.СуммаПосле = "0 (" + РаботаСКурсамиВалют.СформироватьСуммуПрописью(0, ВалютаРегУчета) + ")";
		КонецЕсли; 
		
		ТабДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, УстановкаЦенНоменклатуры);
				
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции
// }
// 4D

Процедура ВывестиТабличнуюЧастьВПечатнуюФормуУстановкаЦенНоменклатуры(Параметры)
	
	// Шапка таблицы
	ИмяДополнительнойКолонки = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ?(ЗначениеЗаполнено(ИмяДополнительнойКолонки), Истина, Ложь);
	
	ШапкаНомера  = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьНомера");
	ШапкаКодов   = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьКодов");
	ШапкаТовар   = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьТовар");
	ШапкаВидЦены = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦены" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
	ШапкаУникальныеИдентификаторы = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|УникальныеИдентификаторы");
	
	Параметры.ТабДокумент.Вывести(ШапкаНомера);
	Если ВыводитьКоды Тогда
		ШапкаКодов.Параметры.ИмяКолонкиКодов = ИмяДополнительнойКолонки;
		Параметры.ТабДокумент.Присоединить(ШапкаКодов);
	КонецЕсли;
	Если Не Параметры.ПараметрыПечати.ВыводитьШапку Тогда
		Параметры.ТабДокумент.Присоединить(ШапкаУникальныеИдентификаторы);
	КонецЕсли;
	Параметры.ТабДокумент.Присоединить(ШапкаТовар);
	
	Табл = Новый ТаблицаЗначений;
	Табл.Колонки.Добавить("ВидЦены");
	Табл.Колонки.Добавить("МакетОбласти");
	Табл.Колонки.Добавить("ВыводитьСуммуИзменения");
	Табл.Колонки.Добавить("ВыводитьПроцентИзменения");
	Табл.Колонки.Добавить("ВыводитьСтаруюЦену");
	
	ВыборкаПоВидамЦен = Параметры.РезультатЗапроса.ВидыЦен.Выбрать();
	Пока ВыборкаПоВидамЦен.Следующий() Цикл
		
		Новая                          = Табл.Добавить();
		Новая.ВидЦены                  = ВыборкаПоВидамЦен.ВидЦены;
		Новая.ВыводитьПроцентИзменения = Ложь;
		Новая.ВыводитьСуммуИзменения   = Ложь;
		Новая.ВыводитьСтаруюЦену       = Ложь;
		
		НайденныеСтроки = Параметры.ДеревоНастроек.Строки.НайтиСтроки(Новый Структура("Параметр", ВыборкаПоВидамЦен.ВидЦены), Ложь);
		Для Каждого ВидЦены Из НайденныеСтроки Цикл
			
			Для Каждого Колонка Из ВидЦены.Строки Цикл
				
				Если Колонка.Параметр = "СтараяЦена" И Колонка.ВыводитьНаПечать Тогда
					Новая.ВыводитьСтаруюЦену = Истина;
				КонецЕсли;
				
				Если Колонка.Параметр = "СуммаИзменения" И Колонка.ВыводитьНаПечать Тогда
					Новая.ВыводитьСуммуИзменения = Истина;
				КонецЕсли;
				
				Если Колонка.Параметр = "ПроцентИзменения" И Колонка.ВыводитьНаПечать Тогда
					Новая.ВыводитьПроцентИзменения = Истина;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Если Новая.ВыводитьСуммуИзменения Тогда
			
			Если Новая.ВыводитьПроцентИзменения И Новая.ВыводитьСтаруюЦену Тогда
				ШапкаВидЦены       = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦеныСтараяЦенаПроцентИзмененияСуммаИзменения" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
				Новая.МакетОбласти = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьВидЦеныСтараяЦенаПроцентИзмененияСуммаИзменения" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
			ИначеЕсли Новая.ВыводитьПроцентИзменения И Не Новая.ВыводитьСтаруюЦену Тогда
				ШапкаВидЦены       = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦеныПроцентИзмененияСуммаИзменения" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
				Новая.МакетОбласти = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьВидЦеныПроцентИзмененияСуммаИзменения");
			ИначеЕсли Не Новая.ВыводитьПроцентИзменения И Новая.ВыводитьСтаруюЦену Тогда
				ШапкаВидЦены       = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦеныСтараяЦенаСуммаИзменения" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
				Новая.МакетОбласти = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьВидЦеныСтараяЦенаСуммаИзменения" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
			ИначеЕсли Не Новая.ВыводитьПроцентИзменения И Не Новая.ВыводитьСтаруюЦену Тогда
				ШапкаВидЦены       = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦеныСуммаИзменения" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
				Новая.МакетОбласти = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьВидЦеныСуммаИзменения" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
			КонецЕсли;
			
		Иначе
			
			Если Новая.ВыводитьПроцентИзменения И Новая.ВыводитьСтаруюЦену Тогда
				ШапкаВидЦены       = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦеныСтараяЦенаПроцентИзменения" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
				Новая.МакетОбласти = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьВидЦеныСтараяЦенаПроцентИзменения" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
			ИначеЕсли Новая.ВыводитьПроцентИзменения И Не Новая.ВыводитьСтаруюЦену Тогда
				ШапкаВидЦены       = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦеныПроцентИзменения" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
				Новая.МакетОбласти = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьВидЦеныПроцентИзменения");
			ИначеЕсли Не Новая.ВыводитьПроцентИзменения И Новая.ВыводитьСтаруюЦену Тогда
				ШапкаВидЦены       = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦеныСтараяЦена" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
				Новая.МакетОбласти = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьВидЦеныСтараяЦена" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
			ИначеЕсли Не Новая.ВыводитьПроцентИзменения И Не Новая.ВыводитьСтаруюЦену Тогда
				ШапкаВидЦены       = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦены" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
				Новая.МакетОбласти = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьВидЦены" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
			КонецЕсли;
			
		КонецЕсли;
		
		ШапкаВидЦены.Параметры.ВидЦены = ВыборкаПоВидамЦен.ВидЦены;
		Параметры.ТабДокумент.Присоединить(ШапкаВидЦены);
		
	КонецЦикла;
	
	ОбластьНомера = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьНомера");
	ОбластьКодов  = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьКодов");
	ОбластьТовар  = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьТовар");
	ОбластьУникальныеИдентификаторы = Параметры.Макет.ПолучитьОбласть("Строка|УникальныеИдентификаторы");
	
	НомерСтроки = 0;
	ВыборкаПоНоменклатуре = Параметры.РезультатЗапроса.Номенклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоНоменклатуре.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаПоНоменклатуре.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		ВыборкаПоХарактеристикам = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоХарактеристикам.Следующий() Цикл
		
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
			Параметры.ТабДокумент.Вывести(ОбластьНомера);
			Если ВыводитьКоды Тогда
				
				Если ИмяДополнительнойКолонки = "Артикул" Тогда
					ОбластьКодов.Параметры.Артикул = ВыборкаПоХарактеристикам.Артикул;
				Иначе
					ОбластьКодов.Параметры.Артикул = ВыборкаПоХарактеристикам.Код;
				КонецЕсли;
				
				Параметры.ТабДокумент.Присоединить(ОбластьКодов);
				
			КонецЕсли;
			
			Если Не Параметры.ПараметрыПечати.ВыводитьШапку Тогда
				ОбластьУникальныеИдентификаторы.Параметры.УникальныйИдентификаторНоменклатура   = Строка(ВыборкаПоХарактеристикам.Номенклатура.УникальныйИдентификатор());
				ОбластьУникальныеИдентификаторы.Параметры.УникальныйИдентификаторХарактеристика = Строка(ВыборкаПоХарактеристикам.Характеристика.УникальныйИдентификатор());
				Параметры.ТабДокумент.Присоединить(ОбластьУникальныеИдентификаторы);
			КонецЕсли;
			
			ОбластьТовар.Параметры.Заполнить(ВыборкаПоХарактеристикам);
			ОбластьТовар.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоХарактеристикам.ПолноеНаименованиеНоменклатуры,
				ВыборкаПоХарактеристикам.ПолноеНаименованиеХарактеристики);
			Параметры.ТабДокумент.Присоединить(ОбластьТовар);
			
			ВыборкаПоВидамЦен = ВыборкаПоХарактеристикам.Выбрать();
			Для Каждого СтрокаТЗ Из Табл Цикл
				
				ВыборкаПоВидамЦен.Сбросить();
				Если ВыборкаПоВидамЦен.НайтиСледующий(Новый Структура("ВидЦены", СтрокаТЗ.ВидЦены)) Тогда
					
					ОбластьВидЦены = СтрокаТЗ.МакетОбласти;
					
					ОбластьВидЦены.Параметры.Цена = ВыборкаПоВидамЦен.Цена;
					
					Если СтрокаТЗ.ВыводитьСтаруюЦену Тогда
						ОбластьВидЦены.Параметры.СтараяЦена = ВыборкаПоВидамЦен.СтараяЦена;
					КонецЕсли;
					
					Если СтрокаТЗ.ВыводитьСуммуИзменения Тогда
						ОбластьВидЦены.Параметры.СуммаИзменения = ВыборкаПоВидамЦен.Цена - ВыборкаПоВидамЦен.СтараяЦена;
					КонецЕсли;
					
					Если СтрокаТЗ.ВыводитьПроцентИзменения Тогда
						ОбластьВидЦены.Параметры.ПроцентИзменения = ВыборкаПоВидамЦен.ПроцентИзменения;
					КонецЕсли;
					
					Если ЗначениеЗаполнено(ВыборкаПоВидамЦен.Упаковка) Тогда
						ОбластьВидЦены.Параметры.ЕдиницаИзмерения = ВыборкаПоВидамЦен.Упаковка;
					Иначе
						ОбластьВидЦены.Параметры.ЕдиницаИзмерения = ВыборкаПоВидамЦен.ЕдиницаИзмерения;
					КонецЕсли;
					
					Если Не Параметры.ПараметрыПечати.ВыводитьШапку Тогда
						ОбластьВидЦены.Параметры.УникальныйИдентификаторЕдиницаИзмерения = Строка(ВыборкаПоВидамЦен.Упаковка.УникальныйИдентификатор());
					КонецЕсли;
					
				Иначе
					
					ОбластьВидЦены = СтрокаТЗ.МакетОбласти;
					
					ОбластьВидЦены.Параметры.Цена = 0;
					
					Если СтрокаТЗ.ВыводитьСтаруюЦену Тогда
						ОбластьВидЦены.Параметры.СтараяЦена = 0;
					КонецЕсли;
					
					Если СтрокаТЗ.ВыводитьСуммуИзменения Тогда
						ОбластьВидЦены.Параметры.СуммаИзменения = ВыборкаПоВидамЦен.Цена - ВыборкаПоВидамЦен.СтараяЦена;
					КонецЕсли;
					
					Если СтрокаТЗ.ВыводитьПроцентИзменения Тогда
						ОбластьВидЦены.Параметры.ПроцентИзменения = 0;
					КонецЕсли;
					
					ОбластьВидЦены.Параметры.ЕдиницаИзмерения = Неопределено;
					
					Если Не Параметры.ПараметрыПечати.ВыводитьШапку Тогда
						ОбластьВидЦены.Параметры.УникальныйИдентификаторЕдиницаИзмерения = Строка(Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка().УникальныйИдентификатор());
					КонецЕсли;
					
				КонецЕсли;
				
				Параметры.ТабДокумент.Присоединить(ОбластьВидЦены);
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой установки цен номенклатуры.
//
// Возвращаемое значение:
//  Табличный документ.
//
Функция СформироватьПечатнуюФормуУстановкиЦенНоменклатуры(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УстановкаЦенНоменклатуры";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.УстановкаЦенНоменклатуры.ПФ_MXL_УстановкаЦенНоменклатуры");
	
	ВидыЦен = Новый Массив;
	ДеревоНастроек = ПолучитьИзВременногоХранилища(ПараметрыПечати.ДеревоНастроек);
	Для Каждого СтрокаДерева Из ДеревоНастроек.Строки Цикл
		Если СтрокаДерева.ВыводитьНаПечать Тогда
			ВидыЦен.Добавить(СтрокаДерева.Параметр);
		КонецЕсли;
	КонецЦикла;
	
	ДанныеДляПечати = Неопределено;
	Если ЗначениеЗаполнено(ПараметрыПечати.АдресДанныеДляПечатиВоВременномХранилище) Тогда
		ДанныеДляПечати = ПолучитьИзВременногоХранилища(ПараметрыПечати.АдресДанныеДляПечатиВоВременномХранилище);
	КонецЕсли;
	
	Если ДанныеДляПечати = Неопределено Тогда
	
		ПервыйДокумент = Истина;
		Для Каждого УстановкаЦенНоменклатуры Из МассивОбъектов Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			
			НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	УстановкаЦенНоменклатуры.Ссылка       КАК Ссылка,
			|	УстановкаЦенНоменклатуры.Ссылка.Номер КАК Номер,
			|	УстановкаЦенНоменклатуры.Ссылка.Дата  КАК Дата,
			|	Представление(УстановкаЦенНоменклатуры.Ссылка.Ответственный) КАК ОтветственныйПредставление
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|;
			|
			|ВЫБРАТЬ
			|	Товары.НомерСтроки                       КАК НомерСтроки,
			|	Товары.Номенклатура                      КАК Номенклатура,
			|	Товары.Характеристика                    КАК Характеристика,
			|	Товары.Упаковка                          КАК Упаковка,
			|	Товары.Цена                              КАК Цена,
			|	Товары.ВидЦены                           КАК ВидЦены,
			|	
			|	ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Упаковка = Товары.Упаковка ТОГДА
			|		ЦеныНоменклатурыСрезПоследних.Цена
			|	ИНАЧЕ
			|		ЦеныНоменклатурыСрезПоследних.Цена/ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1,1)*ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3,1)
			|	КОНЕЦ КАК ДействующаяЦена,
			|	
			|	ВЫРАЗИТЬ(ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Цена <> 0 Тогда 100*(Товары.Цена - ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Упаковка = Товары.Упаковка ТОГДА
			|		ЦеныНоменклатурыСрезПоследних.Цена
			|	ИНАЧЕ
			|		ЦеныНоменклатурыСрезПоследних.Цена/ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1,1)*ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3,1)
			|	КОНЕЦ)/ 
			|	
			|	ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Упаковка = Товары.Упаковка ТОГДА
			|		ЦеныНоменклатурыСрезПоследних.Цена
			|	ИНАЧЕ
			|		ЦеныНоменклатурыСрезПоследних.Цена/ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1,1)*ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3,1)
			|	КОНЕЦ ИНАЧЕ 0.00 КОНЕЦ КАК Число(10,2)) КАК ПроцентИзменения
			|	
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры.Товары КАК Товары
			|	
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаСреза, (Номенклатура, Характеристика, ВидЦены) В (ВЫБРАТЬ Т.Номенклатура, Т.Характеристика, Т.ВидЦены ИЗ Документ.УстановкаЦенНоменклатуры.Товары КАК Т ГДЕ Т.Ссылка = &УстановкаЦенНоменклатуры И Т.ВидЦены В (&ВидыЦен))) КАК ЦеныНоменклатурыСрезПоследних
			|
			|		ПО Товары.Номенклатура      = ЦеныНоменклатурыСрезПоследних.Номенклатура
			|			И Товары.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
			|			И Товары.ВидЦены        = ЦеныНоменклатурыСрезПоследних.ВидЦены
			|
			|ГДЕ
			|	Товары.Ссылка = &УстановкаЦенНоменклатуры
			|	И Товары.ВидЦены В (&ВидыЦен)
			|	И (
			|		ВЫБОР
			|			КОГДА Товары.Номенклатура.ИспользованиеХарактеристик <> ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
			|				И Товары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) ТОГДА Ложь
			|			ИНАЧЕ Истина
			|		КОНЕЦ
			|	)
			|;
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Товары.ВидЦены КАК ВидЦены
			|ИЗ
			|	Товары КАК Товары
			|ГДЕ
			|	Товары.ВидЦены В (&ВидыЦен)
			|	И Товары.ПроцентИзменения <> 0 ИЛИ &Все
			|УПОРЯДОЧИТЬ ПО
			|	Товары.ВидЦены.РеквизитДопУпорядочивания
			|;
			|
			|ВЫБРАТЬ
			|	Товары.Номенклатура                      КАК Номенклатура,
			|	Товары.Характеристика                    КАК Характеристика,
			|	Товары.Номенклатура.НаименованиеПолное   КАК ПолноеНаименованиеНоменклатуры,
			|	Товары.Характеристика.НаименованиеПолное КАК ПолноеНаименованиеХарактеристики,
			|	Товары.Номенклатура.Код                  КАК Код,
			|	Товары.Номенклатура.Артикул              КАК Артикул,
			|	Товары.Упаковка                          КАК Упаковка,
			|	Товары.Номенклатура.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
			|	Товары.Цена                              КАК Цена,
			|	Товары.ВидЦены                           КАК ВидЦены,
			|	ЕСТЬNULL(Товары.ДействующаяЦена,0)       КАК СтараяЦена,
			|	Товары.ПроцентИзменения                  КАК ПроцентИзменения
			|	
			|ИЗ
			|	Товары КАК Товары
			|ГДЕ
			|	Товары.ПроцентИзменения <> 0 ИЛИ &Все
			|УПОРЯДОЧИТЬ ПО
			|	Товары.НомерСтроки
			|
			|ИТОГИ ПО
			|	Номенклатура, Характеристика");
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
				Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
					"ЦеныНоменклатурыСрезПоследних.Упаковка",
					"ЦеныНоменклатурыСрезПоследних.Номенклатура"));
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки3",
				Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
					"Товары.Упаковка",
					"Товары.Номенклатура"));
			Запрос.УстановитьПараметр("УстановкаЦенНоменклатуры", УстановкаЦенНоменклатуры);
			Запрос.УстановитьПараметр("ДатаСреза",                УстановкаЦенНоменклатуры.Дата - 1);
			Запрос.УстановитьПараметр("ВидыЦен",                  ВидыЦен);
			Запрос.УстановитьПараметр("Все",                      Не ПараметрыПечати.ПечататьТолькоИзмененныеЦены);
			РезультатЗапроса = Запрос.ВыполнитьПакет();
			
			РезультатыЗапроса = Новый Структура;
			РезультатыЗапроса.Вставить("Шапка",        РезультатЗапроса[0]);
			РезультатыЗапроса.Вставить("ВидыЦен",      РезультатЗапроса[2]);
			РезультатыЗапроса.Вставить("Номенклатура", РезультатЗапроса[3]);
			
			Параметры = Новый Структура;
			Параметры.Вставить("НомерСтрокиНачало",        НомерСтрокиНачало);
			Параметры.Вставить("ТабДокумент",              ТабДокумент);
			Параметры.Вставить("Макет",                    Макет);
			Параметры.Вставить("ДеревоНастроек",           ДеревоНастроек);
			Параметры.Вставить("УстановкаЦенНоменклатуры", УстановкаЦенНоменклатуры);
			Параметры.Вставить("ОбъектыПечати",            ОбъектыПечати);
			Параметры.Вставить("ПараметрыПечати",          ПараметрыПечати);
			Параметры.Вставить("РезультатЗапроса",         РезультатыЗапроса);
			
			Шапка = Параметры.РезультатЗапроса.Шапка.Выбрать();
			Шапка.Следующий();
			
			Если Параметры.ПараметрыПечати.ВыводитьШапку Тогда
				ОбластьМакета = Параметры.Макет.ПолучитьОбласть("Заголовок");
				ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(
					Параметры.ТабДокумент, Параметры.Макет, ОбластьМакета, Шапка.Ссылка);
				ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(
					Шапка, НСтр("ru = 'Установка цен номенклатуры'"));
				Параметры.ТабДокумент.Вывести(ОбластьМакета);
			КонецЕсли;
			
			ВывестиТабличнуюЧастьВПечатнуюФормуУстановкаЦенНоменклатуры(Параметры);
			
			Если Параметры.ПараметрыПечати.ВыводитьШапку Тогда
				ОбластьМакета = Параметры.Макет.ПолучитьОбласть("Подписи");
				ОбластьМакета.Параметры.Заполнить(Шапка);
				Параметры.ТабДокумент.Вывести(ОбластьМакета);
			КонецЕсли;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(Параметры.ТабДокумент, Параметры.НомерСтрокиНачало, Параметры.ОбъектыПечати, Параметры.УстановкаЦенНоменклатуры);
			
		КонецЦикла;
	
	Иначе
		
		ОбщегоНазначенияУТ.ПронумероватьТаблицуЗначений(ДанныеДляПечати.Товары, "НомерСтроки");
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Неопределено КАК Ссылка,
		|	Неопределено КАК Номер,
		|	Неопределено КАК Дата,
		|	Неопределено КАК ОтветственныйПредставление
		|;
		|
		|ВЫБРАТЬ
		|	Товары.НомерСтроки    КАК НомерСтроки,
		|	Товары.Номенклатура   КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка       КАК Упаковка,
		|	Товары.Цена           КАК Цена,
		|	Товары.ВидЦены        КАК ВидЦены
		|ПОМЕСТИТЬ ТаблицаДанных
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|ВЫБРАТЬ
		|	Товары.НомерСтроки                       КАК НомерСтроки,
		|	Товары.Номенклатура                      КАК Номенклатура,
		|	Товары.Характеристика                    КАК Характеристика,
		|	Товары.Упаковка                          КАК Упаковка,
		|	Товары.Цена                              КАК Цена,
		|	Товары.ВидЦены                           КАК ВидЦены,
		|	
		|	ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Упаковка = Товары.Упаковка ТОГДА
		|		ЦеныНоменклатурыСрезПоследних.Цена
		|	ИНАЧЕ
		|		ЦеныНоменклатурыСрезПоследних.Цена/ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1,1)*ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3,1)
		|	КОНЕЦ КАК ДействующаяЦена,
		|	
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Цена <> 0 Тогда 100*(Товары.Цена - ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Упаковка = Товары.Упаковка ТОГДА
		|		ЦеныНоменклатурыСрезПоследних.Цена
		|	ИНАЧЕ
		|		ЦеныНоменклатурыСрезПоследних.Цена/ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1,1)*ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3,1)
		|	КОНЕЦ)/ 
		|	
		|	ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Упаковка = Товары.Упаковка ТОГДА
		|		ЦеныНоменклатурыСрезПоследних.Цена
		|	ИНАЧЕ
		|		ЦеныНоменклатурыСрезПоследних.Цена/ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1,1)*ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3,1)
		|	КОНЕЦ ИНАЧЕ 0.00 КОНЕЦ КАК Число(10,2)) КАК ПроцентИзменения
		|	
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	ТаблицаДанных КАК Товары
		|	
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаСреза, (Номенклатура, Характеристика, ВидЦены) В (ВЫБРАТЬ Т.Номенклатура, Т.Характеристика, Т.ВидЦены ИЗ ТаблицаДанных КАК Т ГДЕ Т.ВидЦены В (&ВидыЦен))) КАК ЦеныНоменклатурыСрезПоследних
		|
		|		ПО Товары.Номенклатура      = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|			И Товары.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
		|			И Товары.ВидЦены        = ЦеныНоменклатурыСрезПоследних.ВидЦены
		|
		|ГДЕ
		|	Товары.ВидЦены В (&ВидыЦен)
		|	И (
		|		ВЫБОР
		|			КОГДА Товары.Номенклатура.ИспользованиеХарактеристик <> ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
		|				И Товары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) ТОГДА Ложь
		|			ИНАЧЕ Истина
		|		КОНЕЦ
		|	)
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Товары.ВидЦены КАК ВидЦены
		|ИЗ
		|	Товары КАК Товары
		|ГДЕ
		|	Товары.ВидЦены В (&ВидыЦен)
		|	И Товары.ПроцентИзменения <> 0 ИЛИ &Все
		|УПОРЯДОЧИТЬ ПО
		|	Товары.ВидЦены.РеквизитДопУпорядочивания
		|;
		|
		|ВЫБРАТЬ
		|	Товары.Номенклатура                      КАК Номенклатура,
		|	Товары.Характеристика                    КАК Характеристика,
		|	Товары.Номенклатура.НаименованиеПолное   КАК ПолноеНаименованиеНоменклатуры,
		|	Товары.Характеристика.НаименованиеПолное КАК ПолноеНаименованиеХарактеристики,
		|	Товары.Номенклатура.Код                  КАК Код,
		|	Товары.Номенклатура.Артикул              КАК Артикул,
		|	Товары.Упаковка                          КАК Упаковка,
		|	Товары.Номенклатура.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
		|	Товары.Цена                              КАК Цена,
		|	Товары.ВидЦены                           КАК ВидЦены,
		|	ЕСТЬNULL(Товары.ДействующаяЦена,0)       КАК СтараяЦена,
		|	Товары.ПроцентИзменения                  КАК ПроцентИзменения
		|	
		|ИЗ
		|	Товары КАК Товары
		|ГДЕ
		|	Товары.ПроцентИзменения <> 0 ИЛИ &Все
		|УПОРЯДОЧИТЬ ПО
		|	Товары.НомерСтроки
		|
		|ИТОГИ ПО
		|	Номенклатура, Характеристика");
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
				"ЦеныНоменклатурыСрезПоследних.Упаковка",
				"ЦеныНоменклатурыСрезПоследних.Номенклатура"));
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки3",
				Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
					"Товары.Упаковка",
					"Товары.Номенклатура"));
		Запрос.УстановитьПараметр("ДатаСреза",                ДанныеДляПечати.ДатаДействующихЦен);
		Запрос.УстановитьПараметр("ВидыЦен",                  ВидыЦен);
		Запрос.УстановитьПараметр("Товары",                   ДанныеДляПечати.Товары);
		Запрос.УстановитьПараметр("Все",                      Не ПараметрыПечати.ПечататьТолькоИзмененныеЦены);
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		РезультатыЗапроса = Новый Структура;
		РезультатыЗапроса.Вставить("Шапка",        РезультатЗапроса[0]);
		РезультатыЗапроса.Вставить("ВидыЦен",      РезультатЗапроса[3]);
		РезультатыЗапроса.Вставить("Номенклатура", РезультатЗапроса[4]);
		
		Параметры = Новый Структура;
		Параметры.Вставить("НомерСтрокиНачало",        НомерСтрокиНачало);
		Параметры.Вставить("ТабДокумент",              ТабДокумент);
		Параметры.Вставить("Макет",                    Макет);
		Параметры.Вставить("ДеревоНастроек",           ДеревоНастроек);
		Параметры.Вставить("УстановкаЦенНоменклатуры", УстановкаЦенНоменклатуры);
		Параметры.Вставить("ОбъектыПечати",            ОбъектыПечати);
		Параметры.Вставить("ПараметрыПечати",          ПараметрыПечати);
		Параметры.Вставить("РезультатЗапроса",         РезультатыЗапроса);
		
		Шапка = Параметры.РезультатЗапроса.Шапка.Выбрать();
		Шапка.Следующий();
		
		Если Параметры.ПараметрыПечати.ВыводитьШапку Тогда
			ОбластьМакета = Параметры.Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Изменение цен номенклатуры за %1'"),
				Формат(ДанныеДляПечати.ДатаДействующихЦен, НСтр("ru = 'ДФ=dd.MM.yyyy'")));
			Параметры.ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		ВывестиТабличнуюЧастьВПечатнуюФормуУстановкаЦенНоменклатуры(Параметры);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(Параметры.ТабДокумент, Параметры.НомерСтрокиНачало, Параметры.ОбъектыПечати, Параметры.УстановкаЦенНоменклатуры);
		
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//   Адрес   - адрес структуры данных во временном хранилище
//
Функция ДанныеДляПечатиЭтикеток(МассивДокументов) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УстановкаЦенНоменклатурыТовары.Номенклатура   КАК Номенклатура,
	|	УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
	|	УстановкаЦенНоменклатурыТовары.Упаковка       КАК Упаковка,
	|	МИНИМУМ(УстановкаЦенНоменклатурыТовары.НомерСтроки) КАК Порядок,
	|	СУММА(1)                                            КАК Количество
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
	|ГДЕ
	|	УстановкаЦенНоменклатурыТовары.Ссылка В(&МассивДокументов)
	|	И ВЫБОР
	|		КОГДА УстановкаЦенНоменклатурыТовары.Номенклатура.ИспользованиеХарактеристик В (ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры), ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры), ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры))
	|			И УстановкаЦенНоменклатурыТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	УстановкаЦенНоменклатурыТовары.Номенклатура,
	|	УстановкаЦенНоменклатурыТовары.Характеристика,
	|	УстановкаЦенНоменклатурыТовары.Упаковка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УстановкаЦенНоменклатуры.ВидЦены КАК ВидЦены
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.ВидыЦен КАК УстановкаЦенНоменклатуры
	|ГДЕ
	|	УстановкаЦенНоменклатуры.Ссылка В(&МассивДокументов)";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивВидовЦен = ТаблицаРеквизитыДокументов.ВыгрузитьКолонку(0);
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию", Неопределено);
	СтруктураДействий.Вставить("ЗаполнитьСклад",       Неопределено);
	СтруктураДействий.Вставить("ЗаполнитьВидЦены",     ?(МассивВидовЦен.Количество() = 1, МассивВидовЦен[0], Неопределено));
	СтруктураДействий.Вставить("ПоказыватьКолонкуКоличествоВДокументе", Ложь);
	СтруктураДействий.Вставить("УстановитьРежимПечатиИзДокумента");
	СтруктураДействий.Вставить("УстановитьРежим", "ПечатьЭтикеток");
	СтруктураДействий.Вставить("ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе");
	СтруктураДействий.Вставить("ЗаполнитьТаблицуТоваров");
	
	// Подготовка данных для заполенения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураРезультат);
	
КонецФункции

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//   Адрес   - адрес структуры данных во временном хранилище
//
Функция ДанныеДляПечатиЦенников(МассивДокументов) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УстановкаЦенНоменклатурыТовары.Номенклатура   КАК Номенклатура,
	|	УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
	|	УстановкаЦенНоменклатурыТовары.Упаковка       КАК Упаковка,
	|	МИНИМУМ(УстановкаЦенНоменклатурыТовары.НомерСтроки) КАК Порядок,
	|	СУММА(1)                                            КАК Количество
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
	|ГДЕ
	|	УстановкаЦенНоменклатурыТовары.Ссылка В(&МассивДокументов)
	|	И ВЫБОР
	|		КОГДА УстановкаЦенНоменклатурыТовары.Номенклатура.ИспользованиеХарактеристик В (ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры), ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры), ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры))
	|			И УстановкаЦенНоменклатурыТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	УстановкаЦенНоменклатурыТовары.Номенклатура,
	|	УстановкаЦенНоменклатурыТовары.Характеристика,
	|	УстановкаЦенНоменклатурыТовары.Упаковка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УстановкаЦенНоменклатуры.ВидЦены КАК ВидЦены
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.ВидыЦен КАК УстановкаЦенНоменклатуры
	|ГДЕ
	|	УстановкаЦенНоменклатуры.Ссылка В(&МассивДокументов)";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивВидовЦен = ТаблицаРеквизитыДокументов.ВыгрузитьКолонку(0);
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию", Неопределено);
	СтруктураДействий.Вставить("ЗаполнитьСклад",       Неопределено);
	СтруктураДействий.Вставить("ЗаполнитьВидЦены",     ?(МассивВидовЦен.Количество() = 1, МассивВидовЦен[0], Неопределено));
	СтруктураДействий.Вставить("ПоказыватьКолонкуКоличествоВДокументе", Ложь);
	СтруктураДействий.Вставить("УстановитьРежимПечатиИзДокумента");
	СтруктураДействий.Вставить("УстановитьРежим", "ПечатьЦенников");
	СтруктураДействий.Вставить("ЗаполнитьКоличествоЦенниковПоДокументу");
	СтруктураДействий.Вставить("ЗаполнитьТаблицуТоваров");
	
	// Подготовка данных для заполенения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураРезультат);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
