#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЛисткиНетрудоспособности", ДанныеЭЛН.Выгрузить(,"НомерСтроки, ЛистокНетрудоспособности"));
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЛисткиНетрудоспособности.НомерСтроки,
	|	ЛисткиНетрудоспособности.ЛистокНетрудоспособности
	|ПОМЕСТИТЬ ВТЛисткиНетрудоспособности
	|ИЗ
	|	&ЛисткиНетрудоспособности КАК ЛисткиНетрудоспособности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВТЛисткиНетрудоспособности.НомерСтроки) КАК НомерСтроки,
	|	ЛисткиНетрудоспособностиПовторы.НомерСтроки КАК НомерСтрокиПовтора,
	|	ВТЛисткиНетрудоспособности.ЛистокНетрудоспособности КАК ЛистокНетрудоспособности
	|ИЗ
	|	ВТЛисткиНетрудоспособности КАК ВТЛисткиНетрудоспособности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЛисткиНетрудоспособности КАК ЛисткиНетрудоспособностиПовторы
	|		ПО ВТЛисткиНетрудоспособности.ЛистокНетрудоспособности = ЛисткиНетрудоспособностиПовторы.ЛистокНетрудоспособности
	|			И ВТЛисткиНетрудоспособности.НомерСтроки < ЛисткиНетрудоспособностиПовторы.НомерСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЛисткиНетрудоспособности.ЛистокНетрудоспособности,
	|	ЛисткиНетрудоспособностиПовторы.НомерСтроки
	|ИТОГИ ПО
	|	ЛистокНетрудоспособности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЛисткиНетрудоспособности.ЛистокНетрудоспособности,
	|	ВТЛисткиНетрудоспособности.НомерСтроки
	|ИЗ
	|	ВТЛисткиНетрудоспособности КАК ВТЛисткиНетрудоспособности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.БольничныйЛист КАК БольничныеЛисты
	|		ПО ВТЛисткиНетрудоспособности.ЛистокНетрудоспособности = БольничныеЛисты.Ссылка
	|ГДЕ
	|	НЕ БольничныеЛисты.Проведен";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ПовторяющиесяЛН = МассивРезультатов[1];
	НепроведенныеЛН = МассивРезультатов[2];
	
	Ошибки = Неопределено;
	
	Если Не ПовторяющиесяЛН.Пустой() Тогда
		Выборка = ПовторяющиесяЛН.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			Текст = НСтр("ru = '%1 использован в нескольких строках: %2.'");
			ВыборкаПоЛН = Выборка.Выбрать();
			Если ВыборкаПоЛН.Следующий() Тогда
				ТекстПовторныеСтроки = "" + ВыборкаПоЛН.НомерСтроки + ", " + ВыборкаПоЛН.НомерСтрокиПовтора;
				Пока ВыборкаПоЛН.Следующий() Цикл
					ТекстПовторныеСтроки  = ТекстПовторныеСтроки + ", " + ВыборкаПоЛН.НомерСтрокиПовтора;
				КонецЦикла;
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Выборка.ЛистокНетрудоспособности, ТекстПовторныеСтроки);
				ДобавитьОшибкуПользователю(Ошибки, "ЛистокНетрудоспособности", Текст, Истина, Выборка.НомерСтроки);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не НепроведенныеЛН.Пустой() Тогда
		Выборка = НепроведенныеЛН.Выбрать();
		Пока Выборка.Следующий() Цикл
			Текст = НСтр("ru = 'Листок нетрудоспособности в строке %1 непроведен.'");
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Выборка.НомерСтроки);
			ДобавитьОшибкуПользователю(Ошибки, "ЛистокНетрудоспособности", Текст, "Непроведенные", Выборка.НомерСтроки);
		КонецЦикла;
	КонецЕсли;
	
	Если Не Отказ Тогда
		Для Каждого Строка Из ДанныеЭЛН Цикл
			Если Не ЗначениеЗаполнено(Строка.НомерЛисткаНетрудоспособности) Тогда
				Текст = Нстр("ru = 'Номер листка нетрудоспособности обязателен к заполнению!'");
				ДобавитьОшибкуПользователю(Ошибки, "НомерЛисткаНетрудоспособности", Текст, "ДанныеЭЛН", Строка.НомерСтроки)
			КонецЕсли;
			Если Найти("," + Строка.УсловияИсчисленияКод1 + "," + Строка.УсловияИсчисленияКод2 + "," + Строка.УсловияИсчисленияКод3 + ",", ",43,") > 0
				И Не ЗначениеЗаполнено(Строка.ФинансированиеФедеральнымБюджетом) Тогда
				Текст = Нстр("ru = 'Для лица, подвергшегося воздействию радиации, не указана причина этого воздействия'");
				ДобавитьОшибкуПользователю(Ошибки, "ВыплатаЗаСчетФедеральногоБюджета", Текст, "ДанныеЭЛН", Строка.НомерСтроки);
			КонецЕсли;
		КонецЦикла;
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДанныеЭЛН.НомерЛисткаНетрудоспособности");
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОбновитьВторичныеДанныеДокумента(ОбновитьТаблицуЭЛН = Истина, ОчищатьЗначения = Ложь) Экспорт
	ЕстьИзменения = Ложь;
	Если ОбъектЗафиксирован() Тогда
		Возврат ЕстьИзменения;
	КонецЕсли;
	
	ОбновитьРеквизитыШапки(ОчищатьЗначения, ЕстьИзменения);
	
	Если ОбновитьТаблицуЭЛН Тогда
		ОбновитьТаблицуЭЛН(ОчищатьЗначения, ЕстьИзменения);
	КонецЕсли;
	Возврат ЕстьИзменения;
КонецФункции

Функция ОбъектЗафиксирован() Экспорт
	
	Возврат Не ПрямыеВыплатыПособийСоциальногоСтрахования.СтатусПозволяетРедактироватьДокумент(СтатусДокумента);
	
КонецФункции

Процедура ОбновитьРеквизитыШапки(ОчищатьЗначения, ЕстьИзменения)
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	ИменаРеквизитов = "РегистрационныйНомерФСС, ДополнительныйКодФСС, КодПодчиненностиФСС,
	|Руководитель, ГлавныйБухгалтер, ТелефонСоставителя, АдресЭлектроннойПочтыСоставителя";
	РеквизитыШапки = Новый Структура(ИменаРеквизитов);
	
	ИменаРеквизитовОрганизации = "РегистрационныйНомерФСС, КодПодчиненностиФСС, ДополнительныйКодФСС";
	ЗначенияРеквизитовОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, ИменаРеквизитовОрганизации);
	ЗаполнитьЗначенияСвойств(РеквизитыШапки, ЗначенияРеквизитовОрганизации, ИменаРеквизитовОрганизации);
	
	ЗаполняемыеЗначения = Новый Структура("Организация, Руководитель, ГлавныйБухгалтер", Организация);
	ЗарплатаКадры.ПолучитьЗначенияПоУмолчанию(ЗаполняемыеЗначения);
	ЗаполняемыеЗначения.Свойство("Руководитель", РеквизитыШапки.Руководитель);
	ЗаполняемыеЗначения.Свойство("ГлавныйБухгалтер", РеквизитыШапки.ГлавныйБухгалтер);
	
	Сведения = Новый СписокЗначений;
	Сведения.Добавить("", "ТелОрганизации");
	Сведения.Добавить("", "АдресЭлектроннойПочтыОрганизации");
	ДатаПолученияСведений = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаПолученияСведений, Сведения);
	ОргСведения.Свойство("ТелОрганизации", РеквизитыШапки.ТелефонСоставителя);
	ОргСведения.Свойство("АдресЭлектроннойПочтыОрганизации", РеквизитыШапки.АдресЭлектроннойПочтыСоставителя);
	
	МетаданныеРеквизитов = Метаданные().Реквизиты;
	Для Каждого КлючИЗначение Из РеквизитыШапки Цикл
		УстановитьЗначениеРеквизита(ЭтотОбъект, МетаданныеРеквизитов, КлючИЗначение.Ключ, КлючИЗначение.Значение, ОчищатьЗначения, ЕстьИзменения);
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьЗначениеРеквизита(Объект, МетаданныеРеквизитов, ИмяРеквизита, Значение, ОчищатьЗначения, ЕстьИзменения)
	Если ЗначениеЗаполнено(Значение) Тогда
		НовоеЗначение = Значение;
	ИначеЕсли ОчищатьЗначения Тогда
		НовоеЗначение = Неопределено;
	Иначе
		Возврат;
	КонецЕсли;
	
	НовоеЗначение = МетаданныеРеквизитов[ИмяРеквизита].Тип.ПривестиЗначение(НовоеЗначение);
	Если Объект[ИмяРеквизита] <> НовоеЗначение Тогда
		Объект[ИмяРеквизита] = НовоеЗначение;
		ЕстьИзменения = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура ОбновитьТаблицуЭЛН(ОчищатьЗначения, ЕстьИзменения)
	ДанныеБольничных = Документы.БольничныйЛист.ДанныеДляРеестраЭЛН(, ЭтотОбъект);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДанныеБольничных", ДанныеБольничных);
	Запрос.УстановитьПараметр("Больничные", ДанныеЭЛН.Выгрузить().ВыгрузитьКолонку("ЛистокНетрудоспособности"));
	Запрос.Текст =
	"ВЫБРАТЬ *
	|ПОМЕСТИТЬ ВторичныеДанные
	|ИЗ
	|	&ДанныеБольничных КАК ДанныеБольничных
	|ГДЕ
	|	ДанныеБольничных.ЛистокНетрудоспособности В(&Больничные)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ * 
	|ИЗ ВторичныеДанные";
	ВторичныеДанные = Запрос.Выполнить().Выгрузить();
	ВторичныеДанные.Колонки.Удалить("ОсновноеМестоРаботы");
	
	// Полная загрузка данных - быстрый способ, но не дает информации о наличии изменений.
	Если ОчищатьЗначения Тогда
		ДанныеЭЛН.Загрузить(ВторичныеДанные);
		ЕстьИзменения = Истина;
		Возврат;
	КонецЕсли;
	
	// Точечное заполнение - медленней и дает информацию о наличии изменений.
	МетаданныеРеквизитов = Метаданные().ТабличныеЧасти.ДанныеЭЛН.Реквизиты;
	
	ИменаКолонок = Новый Массив;
	Для Каждого Колонка Из ВторичныеДанные.Колонки Цикл
		ИменаКолонок.Добавить(Колонка.Имя);
	КонецЦикла;
	
	ТабличнаяЧасть = ДанныеЭЛН.Выгрузить();
	ТабличнаяЧасть.Колонки.Добавить("Найдена", Новый ОписаниеТипов("Булево"));
	Фильтр = Новый Структура("ЛистокНетрудоспособности, Найдена", Неопределено, Ложь);
	Для Каждого СтрокаТаблицы Из ВторичныеДанные Цикл
		Фильтр.ЛистокНетрудоспособности = СтрокаТаблицы.ЛистокНетрудоспособности;
		Найденные = ТабличнаяЧасть.НайтиСтроки(Фильтр);
		Если Найденные.Количество() = 0 Тогда
			НайденнаяСтрока = ТабличнаяЧасть.Добавить();
		Иначе
			НайденнаяСтрока = Найденные[0];
		КонецЕсли;
		НайденнаяСтрока.Найдена = Истина;
		Для Каждого ИмяКолонки Из ИменаКолонок Цикл
			УстановитьЗначениеРеквизита(НайденнаяСтрока, МетаданныеРеквизитов, ИмяКолонки, СтрокаТаблицы[ИмяКолонки], ОчищатьЗначения, ЕстьИзменения);
		КонецЦикла;
	КонецЦикла;
	
	Найденные = ТабличнаяЧасть.НайтиСтроки(Новый Структура("Найдена", Ложь));
	Для Каждого СтрокаТаблицы Из Найденные Цикл
		ТабличнаяЧасть.Удалить(СтрокаТаблицы);
		ЕстьИзменения = Истина;
	КонецЦикла;
	
	Если ЕстьИзменения Тогда
		ТабличнаяЧасть.Колонки.Удалить("Найдена");
		ДанныеЭЛН.Загрузить(ТабличнаяЧасть);
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьОшибкуПользователю(Ошибки, Поле, Текст, ГруппаОшибок, НомерСтроки)
	ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.ДанныеЭЛН[%1]." + Поле, Текст, ГруппаОшибок, НомерСтроки - 1, Текст);
КонецПроцедуры

#КонецОбласти

#КонецЕсли