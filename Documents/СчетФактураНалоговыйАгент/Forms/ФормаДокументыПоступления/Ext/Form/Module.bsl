#Область ОбработчикиСобытийФормы 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	АдресВременногоХранилища = Параметры.АдресВременногоХранилища;
	Валюта            = Параметры.Валюта;
	ДокументОснование = Параметры.ДокументОснование;
	Поставщик         = Параметры.Поставщик;
	СуммаОплаты       = Параметры.СуммаОплаты;
	
	СуммаОплатыЗаголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Оплачено (%1)'"), Валюта);
	Элементы.ДокументыПоступленияСуммаОплаты.Заголовок = СуммаОплатыЗаголовок;
	
	ДокументыПоступления.Загрузить(ПолучитьИзВременногоХранилища(АдресВременногоХранилища));
	
	ВывестиТекстОжидаетсяКПоступлению();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы И Модифицированность Тогда
		Отказ = Истина;
		ТекстПредупреждения = НСтр("ru = 'Данные не были перенесены в счет-фактуру. После закрытия, сделанные Вами изменения сохранены не будут.'");
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикОповещенияВопросПередЗакрытием", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные не перенесены в счет-фактуру. Перенести?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЭлементовФормы

&НаКлиенте
Процедура ДокументыПоступленияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ВывестиТекстОжидаетсяКПоступлению();
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПоступленияДокументПриИзменении(Элемент)
	
	ДокументыПоступленияДокументПриИзмененииНаСервере(Элементы.ДокументыПоступления.ТекущаяСтрока);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПоДаннымРасчетов(Команда)
	
	Если ДокументыПоступления.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаОповещенияПерезаполнитьДокументыПоступления", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, 
			НСтр("ru='Перед заполнением документы поступления будут очищены. Продолжить?'"),
			РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоДаннымРасчетовСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	Отказ = Ложь;
	
	ОчиститьСообщения();
	ПроверитьЗаполнениеТабличнойЧасти(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Ложь;
	Закрыть(ПоместитьДокументыПоступленияВоВременноеХранилище());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаОповещенияПерезаполнитьДокументыПоступления(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьПоДаннымРасчетовСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоДаннымРасчетовСервер()
	
	ТаблицаДокументы = Документы.СчетФактураНалоговыйАгент.ДокументыПоступленияПоДаннымРасчетов(ДокументОснование, Поставщик);
	ДокументыПоступления.Загрузить(ТаблицаДокументы);
	
	ВывестиТекстОжидаетсяКПоступлению();
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗаполнениеТабличнойЧасти(Отказ)
	
	Для ТекИндекс = 0 По ДокументыПоступления.Количество()-1 Цикл
		
		Если НЕ ЗначениеЗаполнено(ДокументыПоступления[ТекИндекс].Документ) Тогда
			ТекстОшибки = НСтр("ru='Не заполнен документ в строке %НомерСтроки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки,"%НомерСтроки%",ТекИндекс+1);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ДокументыПоступления", ТекИндекс + 1, "Документ"),
				,
				Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДокументыПоступления[ТекИндекс].СуммаОплаты) Тогда
			ТекстОшибки = НСтр("ru='Не заполнена сумма оплаты в строке %НомерСтроки%'");
			ТекстОшибки = СтрЗаменить( ТекстОшибки,"%НомерСтроки%",ТекИндекс+1);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки ,
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ДокументыПоступления", ТекИндекс + 1, "СуммаОплаты"),
				,
				Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
	Если СуммаОплаты - ДокументыПоступления.Итог("СуммаОплаты") < 0 Тогда
		ТекстОшибки = НСтр("ru='Сумма оплаты по поступлениям превышает сумму оплаты по счету фактуре'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			"ДокументыПоступления",
			,
			Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьДокументыПоступленияВоВременноеХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(ДокументыПоступления.Выгрузить(), АдресВременногоХранилища);
	
КонецФункции

&НаКлиенте
Процедура ОбработчикОповещенияВопросПередЗакрытием(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОчиститьСообщения();
		Отказ = Ложь;
		ПроверитьЗаполнениеТабличнойЧасти(Отказ);
		Если НЕ Отказ Тогда
			Модифицированность = Ложь;
			Закрыть(ПоместитьДокументыПоступленияВоВременноеХранилище());
		КонецЕсли;
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиТекстОжидаетсяКПоступлению()
	
	Разница = СуммаОплаты - ДокументыПоступления.Итог("СуммаОплаты");
	Результат = Документы.СчетФактураНалоговыйАгент.НадписьОжидаетсяКПоступлению(Разница, Валюта);
	
	ОжидаетсяКПоступлению = Результат.Текст;
	Элементы.ОжидаетсяКПоступлению.ЦветТекста = Результат.Цвет;
	
КонецПроцедуры

&НаСервере
Процедура ДокументыПоступленияДокументПриИзмененииНаСервере(ТекущаяСтрока)
	
	ТекущиеДанные = ДокументыПоступления.НайтиПоИдентификатору(ТекущаяСтрока);
	ТекущиеДанные.ДатаПоступления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.Документ, "Дата");
	
КонецПроцедуры

#КонецОбласти

