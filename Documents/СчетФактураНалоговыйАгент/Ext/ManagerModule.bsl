#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт


	Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);


КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураНалоговыйАгент) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.СчетФактураНалоговыйАгент.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураНалоговыйАгент);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

// Возвращает структуру параметров для отбора данных по оплатам
// 
// Возвращаемое значение:
//	Структура - параметры отбора.
//
Функция ОтборРасчетов() Экспорт
	
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("НачалоПериода");
	СтруктураОтбора.Вставить("КонецПериода");
	СтруктураОтбора.Вставить("СтавкаНДС");
	СтруктураОтбора.Вставить("Организация");
	СтруктураОтбора.Вставить("РасчетныйДокумент");
	
	Возврат СтруктураОтбора;
	
КонецФункции

// Заполняет таблицу ОплатыПоставщику данными для формирования счетов-фактур налогового агента
//
// Параметры:
//	ОтборРасчетов - Структура - Параметры отбора оплат
//	ОплатыПоставщику - ТаблицаЗначений - таблица, которую необходимо заполнить
//	РасчетныеДокументыБезСчетаФактуры - Массив - Заполняется списком документов, по которым не сформировались счета-фактуры
//
Процедура ЗаполнитьОплатыПоставщикам(ОтборРасчетов, ОплатыПоставщику) Экспорт
	
	НачалоПериода		= НачалоДня(ОтборРасчетов.НачалоПериода);
	КонецПериода		= КонецДня(ОтборРасчетов.КонецПериода);
	Организация			= ОтборРасчетов.Организация;
	РасчетныйДокумент	= ОтборРасчетов.РасчетныйДокумент;
	
	СтавкаНДС = ?(ЗначениеЗаполнено(ОтборРасчетов.СтавкаНДС), ОтборРасчетов.СтавкаНДС, Перечисления.СтавкиНДС.НДС18);
	
	ВозможныйТипДокументаОснования = Метаданные.Документы.СчетФактураНалоговыйАгент.Реквизиты.ДокументОснование.Тип;
	
	Результат = РезультатЗапросаПоОплатамНалоговыйАгент(НачалоПериода, КонецПериода, Организация, РасчетныйДокумент);
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		//Добавим в табличную часть
		Если ВозможныйТипДокументаОснования.СодержитТип(ТипЗнч(Выборка.ДокументОснование)) Тогда
			
			НоваяСтрока = ОплатыПоставщику.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			Если ЗначениеЗаполнено(НоваяСтрока.СчетФактура) Тогда
				НоваяСтрока.СФсформирован = Истина 
			Иначе
				НоваяСтрока.СФсформирован = Ложь
			КонецЕсли;	
				
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.СтавкаНДС) Тогда
				НоваяСтрока.СтавкаНДС = СтавкаНДС;
			КонецЕсли; 
			
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.ВидАгентскогоДоговора) 
				 И НоваяСтрока.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент Тогда
				НоваяСтрока.ВидАгентскогоДоговора = Перечисления.ВидыАгентскихДоговоров.Нерезидент;
			КонецЕсли;
			
			НоваяСтрока.СуммаНДС  = Ценообразование.РассчитатьСуммуНДС(НоваяСтрока.Сумма, НоваяСтрока.СтавкаНДС, Ложь);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает таблицу документов поступления, которые были оплачены основанием счета-фактуры
//
// Параметры:
// 	ДокументОснование - ДокументСсылка.СписаниеБезналичныхДенежныхСредств, 
// 						 ДокументСсылка.ПриходныйКассовыйОрдер -  Документ оплаты поставщику
// 	Поставщик - СправочникСсылка.Контрагенты - Поставщик
//
// Возвращаемое значение:
// 	ДокументыПоступления - ТаблицаЗначений - Таблица документов поступления.
//
Функция ДокументыПоступленияПоДаннымРасчетов(ДокументОснование, Поставщик) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокументыПоступления.Документ КАК Документ,
	|	СУММА(ДокументыПоступления.СуммаОплаты) КАК СуммаОплаты
	|ПОМЕСТИТЬ ВтДокументыПоступления
	|ИЗ
	|	(ВЫБРАТЬ
	|		Расчеты.Регистратор КАК Документ,
	|		Расчеты.ПредоплатаРегл КАК СуммаОплаты
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерамДанные
	|			ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчетаПоПартнерамДанные.КлючАналитики
	|				И (АналитикаУчетаПоПартнерамДанные.Контрагент = &Поставщик)
	|	ГДЕ
	|		(Расчеты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|				ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ПоступлениеУслугПрочихАктивов)
	|		И Расчеты.Регистратор <> Расчеты.ЗаказПоставщику
	|		И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Расчеты.РасчетныйДокумент = &ДокументОснование
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Расчеты.ЗаказПоставщику,
	|		Расчеты.ПредоплатаРегл
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерамДанные
	|			ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчетаПоПартнерамДанные.КлючАналитики
	|				И (АналитикаУчетаПоПартнерамДанные.Контрагент = &Поставщик)
	|	ГДЕ
	|		Расчеты.Регистратор = &ДокументОснование
	|		И Расчеты.РасчетныйДокумент = &ДокументОснование
	|		И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И (Расчеты.ЗаказПоставщику ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|				ИЛИ Расчеты.ЗаказПоставщику ССЫЛКА Документ.ПоступлениеУслугПрочихАктивов)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Расчеты.ЗаказПоставщику,
	|		Расчеты.ДолгРегл
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерамДанные
	|			ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчетаПоПартнерамДанные.КлючАналитики
	|				И (АналитикаУчетаПоПартнерамДанные.Контрагент = &Поставщик)
	|	ГДЕ
	|		Расчеты.Регистратор = &ДокументОснование
	|		И Расчеты.РасчетныйДокумент <> &ДокументОснование
	|		И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И (Расчеты.ЗаказПоставщику ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|				ИЛИ Расчеты.ЗаказПоставщику ССЫЛКА Документ.ПоступлениеУслугПрочихАктивов)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Расчеты.РасчетныйДокумент,
	|		Расчеты.ДолгРегл
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерамДанные
	|			ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчетаПоПартнерамДанные.КлючАналитики
	|				И (АналитикаУчетаПоПартнерамДанные.Контрагент = &Поставщик)
	|	ГДЕ
	|		Расчеты.Регистратор = &ДокументОснование
	|		И Расчеты.РасчетныйДокумент <> Расчеты.ЗаказПоставщику
	|		И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И (Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|				ИЛИ Расчеты.РасчетныйДокумент ССЫЛКА Документ.ПоступлениеУслугПрочихАктивов)) КАК ДокументыПоступления
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыПоступления.Документ
	|;
	|
	|ВЫБРАТЬ
	|	ДокументыПоступления.Документ         КАК Документ,
	|	ДокументыПоступления.Документ.Дата    КАК ДатаПоступления,
	|	ДокументыПоступления.СуммаОплаты      КАК СуммаОплаты
	|ИЗ
	|	ВтДокументыПоступления КАК ДокументыПоступления 
	|";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Возвращает текст и цвет для информационно надписи "ожидается к поступлению"
//
// Параметры:
// 	 СуммаОжидаетсяКПоступлению - Число -  Сумма товаров, работ, услуг, которые ожидаются к поступлению.
// 	 Валюта - СправочникСсылка.Валюты - Валюта документа.
//
// Возвращаемое значение:
// 	Результат - Структура - результат:
// 				* Текст - Строка - Текст надписи.
// 				* Цвет - ЦветаСтиля- Цвет текста надписи.
//
Функция НадписьОжидаетсяКПоступлению(СуммаОжидаетсяКПоступлению, Валюта) Экспорт
	
	ЦветСтиля = ЦветаСтиля.ПоясняющийТекст;
	Если СуммаОжидаетсяКПоступлению > 0 Тогда
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Ожидается поступление на сумму %1 %2'"),
					СуммаОжидаетсяКПоступлению, Валюта);
	ИначеЕсли СуммаОжидаетсяКПоступлению < 0 Тогда
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Сумма выбранных поступлений превышает сумму оплаты на %1 %2'"),
					-СуммаОжидаетсяКПоступлению, Валюта);
		ЦветСтиля = ЦветаСтиля.ПоясняющийОшибкуТекст;
	Иначе
		Текст = НСтр("ru='Все товары, работы, услуги поступили'");
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Текст", Текст);
	Результат.Вставить("Цвет",  ЦветСтиля);
	
	Возврат Результат;
	
КонецФункции

//++ НЕ УТ

#Область ПроведениеПоРеглУчету

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - Текст запроса отражения в регл. учете.
//   
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстНачислениеНДС = 
	"ВЫБРАТЬ // Начисление НДС налогового агента <Дт 76.НА :: Кт 68.32>
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Строки.СуммаНДС,0) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыНДСНалоговогоАгента) КАК СчетДт,
	|
	|	Операция.Поставщик КАК СубконтоДт1,
	|	Операция.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНалоговогоАгента) КАК СчетКт,
	|
	|	Операция.Поставщик КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	Операция.ДокументОснование КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Начисление НДС налогового агента"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНалоговыйАгент КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНалоговыйАгент.РасшифровкаСуммы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|";
	
	ТекстВходящийНДС = "
	|ВЫБРАТЬ // НДС, уплачиваемый налоговым агентом <Дт 19.11 :: Кт 76.НА>
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаНДС КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСУплачиваемыйНалоговымАгентом) КАК СчетДт,
	|
	|	Операция.Поставщик КАК СубконтоДт1,
	|	Операция.Ссылка КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыНДСНалоговогоАгента) КАК СчетКт,
	|
	|	Операция.Поставщик КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""НДС, уплачиваемый налоговым агентом"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНалоговыйАгент КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНалоговыйАгент.РасшифровкаСуммы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|";
	
	ТекстВключениеНДСВСтоимость = "
	|ВЫБРАТЬ // Включение НДС в стоимость <Дт 41.ДР :: Кт 19.11>
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	(Строки.СтоимостьРегл + Строки.ДопРасходыРегл) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходовСписания КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.АналитикаРасходов КАК СубконтоДт1,
	|	Строки.СтатьяРасходовСписания КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСУплачиваемыйНалоговымАгентом) КАК СчетКт,
	|
	|	Операция.Поставщик КАК СубконтоКт1,
	|	Операция.Ссылка КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Включение НДС в стоимость"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНалоговыйАгент КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.СебестоимостьТоваров КАК Строки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Строки.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|	ПО Аналитика.Назначение = Назначения.Ссылка
	|	ПО
	|		Операция.Ссылка = Строки.Регистратор
	|		И Строки.Количество = 0
	|		И (Строки.СтоимостьРегл + Строки.ДопРасходыРегл) <> 0
	|		И НЕ Строки.РасчетСебестоимости
	|	
	|";
	
	Возврат 
		ТекстНачислениеНДС
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВходящийНДС
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВключениеНДСВСтоимость;
		
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - Текст запроса cоздания временных таблиц.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

//-- НЕ УТ

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
 
	ИсточникиДанных = Новый Соответствие;
 
	Возврат ИсточникиДанных; 
 
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт

	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
	//++ НЕ УТ
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)

	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                КАК Ссылка,
	|	ДанныеДокумента.Дата                                  КАК Период,
	|	ДанныеДокумента.Организация                           КАК Организация,
	|	ДанныеДокумента.Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	ДанныеДокумента.Организация.ЦифровойИндексОбособленногоПодразделения КАК ЦифровойИндексОбособленногоПодразделения,
	|	ДанныеДокумента.Поставщик                             КАК Поставщик,
	|	ДанныеДокумента.ДокументОснование                     КАК ДокументОснование,
	|	
	|	ВЫБОР 
	|		КОГДА НЕ СписаниеБезналичныхДенежныхСредств.Ссылка ЕСТЬ NULL И СписаниеБезналичныхДенежныхСредств.ПроведеноБанком
	|		ТОГДА
	|			СписаниеБезналичныхДенежныхСредств.ДатаПроведенияБанком
	|		ИНАЧЕ
	|			ЕСТЬNULL(ДанныеДокумента.ДокументОснование.Дата, ДанныеДокумента.Дата)
	|	КОНЕЦ                                                 КАК ДатаОснования,
	|	
	|	ЕСТЬNULL(СписаниеБезналичныхДенежныхСредств.НомерВходящегоДокумента, 
	|					ДанныеДокумента.ДокументОснование.Номер)       КАК НомерДокументаОплатыПоставщику,
	|	ЕСТЬNULL(СписаниеБезналичныхДенежныхСредств.ДатаВходящегоДокумента, 
	|					ДанныеДокумента.ДокументОснование.Дата)       КАК ДатаДокументаОплатыПоставщику,
	|	ВЫБОР 
	|		КОГДА
	|			ДанныеДокумента.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Аренда)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентАренда)
	|		КОГДА
	|			ДанныеДокумента.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.РеализацияИмущества)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентРеализацияИмущества)
	|		КОГДА
	|			ДанныеДокумента.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Нерезидент)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентИностранцы)
	|	КОНЕЦ                                                 КАК ВидЦенности,
	|	ДанныеДокумента.Номер                                 КАК Номер,
	|	ДанныеДокумента.Дата                                  КАК Дата,
	|	ДанныеДокумента.ВидАгентскогоДоговора                 КАК ВидАгентскогоДоговора,
	|	ДанныеДокумента.КодВидаОперации                       КАК КодВидаОперации,
	|	ДанныеДокумента.Договор                               КАК Договор,
	|	ДанныеДокумента.СуммаКПоступлению                     КАК СуммаКПоступлению,
	|	ДанныеДокумента.НалогПеречислен                       КАК НалогПеречислен,
	|	ДанныеДокумента.ДатаДокументаПеречисленияНалога       КАК ДатаДокументаПеречисленияНалога,
	|	ДанныеДокумента.НомерДокументаПеречисленияНалога      КАК НомерДокументаПеречисленияНалога,
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПеречисленияНалога, ДЕНЬ) КАК ДатаПеречисленияНалога
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
	|	ПО
	|		ДанныеДокумента.ДокументОснование = СписаниеБезналичныхДенежныхСредств.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
		
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Номер = УчетНДСПереопределяемый.НомерСчетаФактурыНаПечать(
				Реквизиты.Номер, 
				Истина,
				Реквизиты.ОбособленноеПодразделение, 
				Реквизиты.ЦифровойИндексОбособленногоПодразделения);
	
	Запрос.УстановитьПараметр("Организация",                      Реквизиты.Организация);
	Запрос.УстановитьПараметр("Поставщик",                        Реквизиты.Поставщик);
	Запрос.УстановитьПараметр("ДокументОплаты",                   Реквизиты.ДокументОснование);
	Запрос.УстановитьПараметр("ДатаОснования",                    Реквизиты.ДатаОснования);
	Запрос.УстановитьПараметр("Номер",                            Номер);
	Запрос.УстановитьПараметр("Период",                           Реквизиты.Период);
	Запрос.УстановитьПараметр("Дата",                             Реквизиты.Дата);
	Запрос.УстановитьПараметр("ВидАгентскогоДоговора",            Реквизиты.ВидАгентскогоДоговора);
	Запрос.УстановитьПараметр("КодВидаОперации",                  Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("Валюта",                           Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("СуммаКПоступлению",                Реквизиты.СуммаКПоступлению);
	Запрос.УстановитьПараметр("СтатьяРасходов",                   ПланыВидовХарактеристик.СтатьиРасходов.НДСНалоговогоАгента);
	Запрос.УстановитьПараметр("НалогПеречислен",                  Реквизиты.НалогПеречислен);
	Запрос.УстановитьПараметр("ДатаДокументаПеречисленияНалога",  Реквизиты.ДатаДокументаПеречисленияНалога);
	Запрос.УстановитьПараметр("НомерДокументаПеречисленияНалога", Реквизиты.НомерДокументаПеречисленияНалога);
	Запрос.УстановитьПараметр("ДатаПеречисленияНалога",           Реквизиты.ДатаПеречисленияНалога);
	Запрос.УстановитьПараметр("НомерДокументаОплатыПоставщику",   Реквизиты.НомерДокументаОплатыПоставщику);
	Запрос.УстановитьПараметр("ДатаДокументаОплатыПоставщику",    Реквизиты.ДатаДокументаОплатыПоставщику);
	Запрос.УстановитьПараметр("ВидЦенности",                      Реквизиты.ВидЦенности);
	Запрос.УстановитьПараметр("Договор",                          Реквизиты.Договор);
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
КонецПроцедуры

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                             КАК Период,
	|	&Организация                        КАК Организация,
	|	&Организация                        КАК Контрагент,
	|	ТаблицаРасшифровка.Ссылка           КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&Период                             КАК ДатаВыставленияПолучения,
	|	1                                   КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации                    КАК КодВидаОперации,
	|	&Номер                              КАК НомерСчетаФактуры,
	|	&Период                             КАК ДатаСчетаФактуры,
	|	&Валюта                             КАК Валюта,
	|	СУММА(ТаблицаРасшифровка.СуммаСНДС) КАК СуммаПоСчетуФактуре,
	|	СУММА(ТаблицаРасшифровка.СуммаНДС)  КАК СуммаНДС,
	|	0                                   КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0                                   КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0                                   КАК СуммаНДСРазницаУменьшение,
	|	0                                   КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ                                КАК ПоСтавкеБезНДС,
	|	ИСТИНА                              КАК СчетФактураНеВыставляется,
	|	
	|	0                                   КАК СуммаПоСчетуФактуреКомиссия,
	|	0                                   КАК СуммаНДСКомиссия,
	|	0                                   КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0                                   КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0                                   КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0                                   КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	""""                                КАК КодВидаОперацииКомиссия
	|	
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент.РасшифровкаСуммы КАК ТаблицаРасшифровка
	|ГДЕ
	|	ТаблицаРасшифровка.Ссылка = &Ссылка
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасшифровка.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьВтНДСЗаписиКнигиПродаж(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтНДСЗаписиКнигиПродажИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросНДСЗаписиКнигиПродаж = Новый Запрос;
	ЗапросНДСЗаписиКнигиПродаж.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("Ссылка",                Запрос.Параметры.Ссылка);
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("ДатаОснования",         Запрос.Параметры.ДатаОснования);
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("Организация",           Запрос.Параметры.Организация);
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("ВидАгентскогоДоговора", Запрос.Параметры.ВидАгентскогоДоговора);
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("ДокументОплаты",        Запрос.Параметры.ДокументОплаты);
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("Поставщик",             Запрос.Параметры.Поставщик);
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("НомерДокументаОплатыПоставщику", Запрос.Параметры.НомерДокументаОплатыПоставщику);
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("ДатаДокументаОплатыПоставщику",  Запрос.Параметры.ДатаДокументаОплатыПоставщику);
	ЗапросНДСЗаписиКнигиПродаж.УстановитьПараметр("ВидЦенности",           Запрос.Параметры.ВидЦенности);
	ЗапросНДСЗаписиКнигиПродаж.Текст = 
	"ВЫБРАТЬ
	|	&ДатаОснования                                                КАК Период,
	|	&Организация                                                  КАК Организация,
	|	&ВидЦенности                                                  КАК ВидЦенности,
	|	&ДокументОплаты                                               КАК СчетФактура,
	|	&Поставщик                                                    КАК Покупатель,
	|	&ДокументОплаты                                               КАК ДокументОплаты,
	|	&ДатаОснования                                                КАК ДатаОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НДСНачисленКУплате) КАК Событие,
	|	&ДатаОснования                                                КАК ДатаСобытия,
	|	ВЫБОР 
	|		КОГДА СчетФактураНалоговыйАгентРасшифровкаСуммы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|		КОГДА СчетФактураНалоговыйАгентРасшифровкаСуммы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|		ИНАЧЕ СчетФактураНалоговыйАгентРасшифровкаСуммы.СтавкаНДС
	|	КОНЕЦ                                                         КАК СтавкаНДС,
	|	СчетФактураНалоговыйАгентРасшифровкаСуммы.СуммаНДС            КАК НДС,
	|	СчетФактураНалоговыйАгентРасшифровкаСуммы.Сумма               КАК СуммаБезНДС,
	|	&НомерДокументаОплатыПоставщику                               КАК НомерДокументаОплаты,
	|	&ДатаДокументаОплатыПоставщику                                КАК ДатаДокументаОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСНалоговымАгентом) КАК ХозяйственнаяОперация,
	|	СчетФактураНалоговыйАгент.Договор                             КАК ДоговорКонтрагента
	|ПОМЕСТИТЬ ВтНДСЗаписиКнигиПродаж
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент.РасшифровкаСуммы КАК СчетФактураНалоговыйАгентРасшифровкаСуммы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураНалоговыйАгент КАК СчетФактураНалоговыйАгент
	|		ПО СчетФактураНалоговыйАгентРасшифровкаСуммы.Ссылка = СчетФактураНалоговыйАгент.Ссылка
	|	
	|ГДЕ
	|	СчетФактураНалоговыйАгентРасшифровкаСуммы.Ссылка = &Ссылка
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)";
	
	ЗапросНДСЗаписиКнигиПродаж.Выполнить();
	
	Запрос.УстановитьПараметр("ВтНДСЗаписиКнигиПродажИнициализирована", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПродаж";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтНДСЗаписиКнигиПродаж(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтНДСЗаписиКнигиПродаж.Период,
	|	ВтНДСЗаписиКнигиПродаж.Организация,
	|	ВтНДСЗаписиКнигиПродаж.ВидЦенности,
	|	ВтНДСЗаписиКнигиПродаж.СчетФактура,
	|	ВтНДСЗаписиКнигиПродаж.Покупатель,
	|	ВтНДСЗаписиКнигиПродаж.ДокументОплаты,
	|	ВтНДСЗаписиКнигиПродаж.ДатаОплаты,
	|	ВтНДСЗаписиКнигиПродаж.Событие,
	|	ВтНДСЗаписиКнигиПродаж.ДатаСобытия,
	|	ВтНДСЗаписиКнигиПродаж.СтавкаНДС,
	|	ВтНДСЗаписиКнигиПродаж.НДС,
	|	ВтНДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	ВтНДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	ВтНДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	ВтНДСЗаписиКнигиПродаж.ХозяйственнаяОперация,
	|	ВтНДСЗаписиКнигиПродаж.ДоговорКонтрагента
	|ИЗ
	|	ВтНДСЗаписиКнигиПродаж";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьВтНДСЗаписиКнигиПокупок(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтНДСЗаписиКнигиПокупокИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьВтНДСЗаписиКнигиПродаж(Запрос);
	УстановитьПараметрЗапросаНалогообложениеОрганизации(Запрос);
	
	ЗапросНДСЗаписиКнигиПокупок = Новый Запрос;
	ЗапросНДСЗаписиКнигиПокупок.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросНДСЗаписиКнигиПокупок.УстановитьПараметр("Ссылка",                           Запрос.Параметры.Ссылка);
	ЗапросНДСЗаписиКнигиПокупок.УстановитьПараметр("ДатаПеречисленияНалога",           Запрос.Параметры.ДатаПеречисленияНалога);
	ЗапросНДСЗаписиКнигиПокупок.УстановитьПараметр("Поставщик",                        Запрос.Параметры.Поставщик);
	ЗапросНДСЗаписиКнигиПокупок.УстановитьПараметр("Организация",                      Запрос.Параметры.Организация);
	ЗапросНДСЗаписиКнигиПокупок.УстановитьПараметр("ВидАгентскогоДоговора",            Запрос.Параметры.ВидАгентскогоДоговора);
	ЗапросНДСЗаписиКнигиПокупок.УстановитьПараметр("ДатаОснования",                    Запрос.Параметры.ДатаОснования);
	ЗапросНДСЗаписиКнигиПокупок.УстановитьПараметр("НомерДокументаПеречисленияНалога", Запрос.Параметры.НомерДокументаПеречисленияНалога);
	ЗапросНДСЗаписиКнигиПокупок.УстановитьПараметр("ДатаДокументаПеречисленияНалога",  Запрос.Параметры.ДатаДокументаПеречисленияНалога);
	ЗапросНДСЗаписиКнигиПокупок.УстановитьПараметр("НалогПеречислен",                  Запрос.Параметры.НалогПеречислен);
	ЗапросНДСЗаписиКнигиПокупок.УстановитьПараметр("СуммаКПоступлению",                Запрос.Параметры.СуммаКПоступлению);
	ЗапросНДСЗаписиКнигиПокупок.УстановитьПараметр("ВидЦенности",                      Запрос.Параметры.ВидЦенности);
	ЗапросНДСЗаписиКнигиПокупок.УстановитьПараметр("Договор",                          Запрос.Параметры.Договор);
	ЗапросНДСЗаписиКнигиПокупок.УстановитьПараметр("НалогообложениеОрганизации",       Запрос.Параметры.НалогообложениеОрганизации);
	
	ЗапросНДСЗаписиКнигиПокупок.Текст = 
	"ВЫБРАТЬ
	|	ВтНДСЗаписиКнигиПродаж.Период,
	|	ВтНДСЗаписиКнигиПродаж.Организация,
	|	ВтНДСЗаписиКнигиПродаж.ВидЦенности,
	|	ВтНДСЗаписиКнигиПродаж.СчетФактура,
	|	ВтНДСЗаписиКнигиПродаж.Покупатель,
	|	ВтНДСЗаписиКнигиПродаж.ДокументОплаты,
	|	ВтНДСЗаписиКнигиПродаж.ДатаОплаты,
	|	ВтНДСЗаписиКнигиПродаж.Событие,
	|	ВтНДСЗаписиКнигиПродаж.ДатаСобытия,
	|	ВтНДСЗаписиКнигиПродаж.СтавкаНДС,
	|	ВтНДСЗаписиКнигиПродаж.НДС,
	|	ВтНДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	ВтНДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	ВтНДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	ВтНДСЗаписиКнигиПродаж.ХозяйственнаяОперация
	|ИЗ
	|	ВтНДСЗаписиКнигиПродаж КАК ВтНДСЗаписиКнигиПродаж
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыПоступления.Ссылка             КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ДокументыПоступления.ДатаПоступления > &ДатаПеречисленияНалога
	|			ТОГДА ДокументыПоступления.ДатаПоступления
	|		ИНАЧЕ &ДатаПеречисленияНалога
	|	КОНЕЦ                                   КАК Период,
	|	ВЫБОР
	|		КОГДА ДокументыПоступления.ДатаПоступления > &ДатаПеречисленияНалога
	|			ТОГДА ДокументыПоступления.ДатаПоступления
	|		ИНАЧЕ &ДатаПеречисленияНалога
	|	КОНЕЦ                                   КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА ДокументыПоступления.Документ.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			И ДокументыПоступления.Документ.ЗакупкаПодДеятельность = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			ТОГДА &НалогообложениеОрганизации
	|		ИНАЧЕ ДокументыПоступления.Документ.ЗакупкаПодДеятельность
	|	КОНЕЦ                                   КАК ЗакупкаПодДеятельность,
	|	&Поставщик                              КАК Поставщик,
	|	&Организация                            КАК Организация,
	|	&ВидЦенности                            КАК ВидЦенности,
	|	&ДатаОснования                          КАК ДатаОплаты,
	|	&Договор                                КАК ДоговорКонтрагента,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету)       КАК Событие,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВычетНДСНалоговымАгентом) КАК ХозяйственнаяОперация,
	|	&НомерДокументаПеречисленияНалога       КАК НомерДокументаОплаты,
	|	&ДатаДокументаПеречисленияНалога        КАК ДатаДокументаОплаты,
	|	СУММА(ДокументыПоступления.СуммаОплаты) КАК СуммаОплаты
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент.ДокументыПоступления КАК ДокументыПоступления
	|ГДЕ
	|	ДокументыПоступления.Ссылка = &Ссылка
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И &НалогПеречислен
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ДокументыПоступления.Документ.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			И ДокументыПоступления.Документ.ЗакупкаПодДеятельность = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			ТОГДА &НалогообложениеОрганизации
	|		ИНАЧЕ ДокументыПоступления.Документ.ЗакупкаПодДеятельность
	|	КОНЕЦ,
	|	ДокументыПоступления.Ссылка,
	|	ВЫБОР
	|		КОГДА ДокументыПоступления.ДатаПоступления > &ДатаПеречисленияНалога
	|			ТОГДА ДокументыПоступления.ДатаПоступления
	|		ИНАЧЕ &ДатаПеречисленияНалога
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументыПоступления.ДатаПоступления > &ДатаПеречисленияНалога
	|			ТОГДА ДокументыПоступления.ДатаПоступления
	|		ИНАЧЕ &ДатаПеречисленияНалога
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	&СуммаКПоступлению
	|ГДЕ
	|	&НалогПеречислен";
	
	Результат = ЗапросНДСЗаписиКнигиПокупок.ВыполнитьПакет();
	
	ПринятиеНДСКВычету = ПринятьНДСКВычету(Результат[0].Выгрузить(), Результат[1].Выгрузить(), Запрос.Параметры);
	ЗапросНДСЗаписиКнигиПокупок.УстановитьПараметр("НДСЗаписиКнигиПокупок", ПринятиеНДСКВычету);
	ЗапросНДСЗаписиКнигиПокупок.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.ВидЦенности,
	|	НДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаОплаты,
	|	НДСЗаписиКнигиПокупок.ДатаСобытия,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.ДокументОплаты,
	|	НДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПокупок.КодВидаОперации,
	|	НДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	НДСЗаписиКнигиПокупок.НДС,
	|	НДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	НДСЗаписиКнигиПокупок.НомерСтроки,
	|	НДСЗаписиКнигиПокупок.Организация,
	|	НДСЗаписиКнигиПокупок.Период,
	|	НДСЗаписиКнигиПокупок.Поставщик,
	|	НДСЗаписиКнигиПокупок.Регистратор,
	|	НДСЗаписиКнигиПокупок.Событие,
	|	НДСЗаписиКнигиПокупок.СтавкаНДС,
	|	НДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	НДСЗаписиКнигиПокупок.СчетУчетаНДС,
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.ХозяйственнаяОперация
	|ПОМЕСТИТЬ ВтНДСЗаписиКнигиПокупок
	|ИЗ
	|	&НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок";
	
	ЗапросНДСЗаписиКнигиПокупок.Выполнить();
	
	Запрос.УстановитьПараметр("ВтНДСЗаписиКнигиПокупокИнициализирована", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПокупок(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСЗаписиКнигиПокупок";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтНДСЗаписиКнигиПокупок(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВтНДСЗаписиКнигиПокупок.ВидЦенности,
	|	ВтНДСЗаписиКнигиПокупок.ДатаДокументаОплаты,
	|	ВтНДСЗаписиКнигиПокупок.ДатаОплаты,
	|	ВтНДСЗаписиКнигиПокупок.ДатаСобытия,
	|	ВтНДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	ВтНДСЗаписиКнигиПокупок.ДокументОплаты,
	|	ВтНДСЗаписиКнигиПокупок.ЗаписьДополнительногоЛиста,
	|	ВтНДСЗаписиКнигиПокупок.ИсправленныйСчетФактура,
	|	ВтНДСЗаписиКнигиПокупок.КодВидаОперации,
	|	ВтНДСЗаписиКнигиПокупок.КорректируемыйПериод,
	|	ВтНДСЗаписиКнигиПокупок.НДС,
	|	ВтНДСЗаписиКнигиПокупок.НомерДокументаОплаты,
	|	ВтНДСЗаписиКнигиПокупок.НомерСтроки,
	|	ВтНДСЗаписиКнигиПокупок.Организация,
	|	ВтНДСЗаписиКнигиПокупок.Период,
	|	ВтНДСЗаписиКнигиПокупок.Поставщик,
	|	ВтНДСЗаписиКнигиПокупок.Регистратор,
	|	ВтНДСЗаписиКнигиПокупок.Событие,
	|	ВтНДСЗаписиКнигиПокупок.СтавкаНДС,
	|	ВтНДСЗаписиКнигиПокупок.СуммаБезНДС,
	|	ВтНДСЗаписиКнигиПокупок.СчетУчетаНДС,
	|	ВтНДСЗаписиКнигиПокупок.СчетФактура,
	|	ВтНДСЗаписиКнигиПокупок.ХозяйственнаяОперация
	|ИЗ
	|	ВтНДСЗаписиКнигиПокупок КАК ВтНДСЗаписиКнигиПокупок";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСПредъявленный";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьВтПартииПрочихРасходов(Запрос);
	ИнициализироватьВтНДСЗаписиКнигиПокупок(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Операция.Дата                          КАК Период,
	|	Операция.Организация                   КАК Организация,
	|	&Ссылка                                КАК СчетФактура,
	|	Операция.Поставщик                     КАК Поставщик,
	|	&ВидЦенности                           КАК ВидЦенности,
	|	ВЫБОР 
	|		КОГДА Строки.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|		КОГДА Строки.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|		ИНАЧЕ Строки.СтавкаНДС
	|	КОНЕЦ                                  КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	0                                      КАК СуммаБезНДС,
	|	СУММА(Строки.СуммаНДС)                 КАК НДС,
	|	НЕОПРЕДЕЛЕНО                           КАК Событие,
	|	ЛОЖЬ                                   КАК РегламентнаяОперация,
	|	НЕОПРЕДЕЛЕНО                           КАК КорВидДеятельностиНДС
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНалоговыйАгент.РасшифровкаСуммы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Операция.Дата,
	|	Операция.Организация,
	|	Операция.Поставщик,
	|	Операция.ВидАгентскогоДоговора,
	|	ВЫБОР 
	|		КОГДА Строки.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|		КОГДА Строки.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|		ИНАЧЕ Строки.СтавкаНДС
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Строки.Период                          КАК Период,
	|	Операция.Организация                   КАК Организация,
	|	&Ссылка                                КАК СчетФактура,
	|	Операция.Поставщик                     КАК Поставщик,
	|	&ВидЦенности                           КАК ВидЦенности,
	|	КлючиАналитикаУчетаПартий.СтавкаНДС    КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	0                                      КАК СуммаБезНДС,
	|	СУММА(Строки.НДСРегл)                  КАК НДС,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС) КАК Событие,
	|	ЛОЖЬ                                   КАК РегламентнаяОперация,
	|	ВЫБОР 
	|		КОГДА Строки.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Строки.ВидДеятельностиНДС 
	|		ИНАЧЕ КлючиАналитикаУчетаПартий.НалогообложениеНДС 
	|	КОНЕЦ КАК КорВидДеятельностиНДС
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтПартииПрочихРасходов КАК Строки
	|	ПО
	|		ИСТИНА
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПартий КАК КлючиАналитикаУчетаПартий
	|	ПО
	|		Строки.АналитикаУчетаПартий = КлючиАналитикаУчетаПартий.КлючАналитики
	|	
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ВЫБОР 
	|		КОГДА Строки.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Строки.ВидДеятельностиНДС 
	|		ИНАЧЕ КлючиАналитикаУчетаПартий.НалогообложениеНДС 
	|	КОНЕЦ В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)) 
	|	
	|СГРУППИРОВАТЬ ПО
	|	Строки.Период,
	|	Операция.Организация,
	|	Операция.Поставщик,
	|	Операция.ВидАгентскогоДоговора,
	|	КлючиАналитикаУчетаПартий.СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА Строки.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Строки.ВидДеятельностиНДС 
	|		ИНАЧЕ КлючиАналитикаУчетаПартий.НалогообложениеНДС 
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Строки.Период                          КАК Период,
	|	Операция.Организация                   КАК Организация,
	|	&Ссылка                                КАК СчетФактура,
	|	Операция.Поставщик                     КАК Поставщик,
	|	&ВидЦенности                           КАК ВидЦенности,
	|	КлючиАналитикаУчетаПартий.СтавкаНДС  КАК СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА Строки.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Строки.ВидДеятельностиНДС 
	|		ИНАЧЕ КлючиАналитикаУчетаПартий.НалогообложениеНДС 
	|	КОНЕЦ                                  КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	0                                      КАК СуммаБезНДС,
	|	СУММА(Строки.НДСРегл)                  КАК НДС,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС) КАК Событие,
	|	ЛОЖЬ                                   КАК РегламентнаяОперация,
	|	НЕОПРЕДЕЛЕНО                           КАК КорВидДеятельностиНДС
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтПартииПрочихРасходов КАК Строки
	|	ПО
	|		ИСТИНА
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПартий КАК КлючиАналитикаУчетаПартий
	|	ПО
	|		Строки.АналитикаУчетаПартий = КлючиАналитикаУчетаПартий.КлючАналитики
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ВЫБОР 
	|		КОГДА Строки.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Строки.ВидДеятельностиНДС 
	|		ИНАЧЕ КлючиАналитикаУчетаПартий.НалогообложениеНДС 
	|	КОНЕЦ  В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)) 
	|
	|СГРУППИРОВАТЬ ПО
	|	Строки.Период,
	|	Операция.Организация,
	|	Операция.Поставщик,
	|	Операция.ВидАгентскогоДоговора,
	|	КлючиАналитикаУчетаПартий.СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА Строки.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Строки.ВидДеятельностиНДС 
	|		ИНАЧЕ КлючиАналитикаУчетаПартий.НалогообложениеНДС 
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)         КАК ВидДвижения,
	|	Регистр.Период                                 КАК Период,
	|	Регистр.Организация                            КАК Организация,
	|	Регистр.СчетФактура                            КАК СчетФактура,
	|	Регистр.Поставщик                              КАК Поставщик,
	|	Регистр.ВидЦенности                            КАК ВидЦенности,
	|	Регистр.СтавкаНДС                              КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) КАК ВидДеятельностиНДС,
	|	Регистр.ИсправленныйСчетФактура                КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                                   КАК РеализацияЭкспорт,
	|	0                                              КАК СуммаБезНДС,
	|	СУММА(ЕСТЬNULL(Регистр.НДС,0))                 КАК НДС,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.НДСПринятКВычету) КАК Событие,
	|	ЛОЖЬ                                           КАК РегламентнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорВидДеятельностиНДС
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтНДСЗаписиКнигиПокупок КАК Регистр
	|	ПО
	|		ИСТИНА
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Регистр.Период,
	|	Операция.Дата,
	|	Регистр.Организация,
	|	Регистр.СчетФактура,
	|	Регистр.Поставщик,
	|	Регистр.ВидЦенности,
	|	Регистр.СтавкаНДС,
	|	Регистр.ИсправленныйСчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Строки.Период                          КАК Период,
	|	Операция.Организация                   КАК Организация,
	|	&Ссылка                                КАК СчетФактура,
	|	Операция.Поставщик                     КАК Поставщик,
	|	&ВидЦенности                           КАК ВидЦенности,
	|	КлючиАналитикаУчетаПартий.СтавкаНДС    КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ЗакупкаПодДеятельность,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	0                                      КАК СуммаБезНДС,
	|	СУММА(Строки.НДСРегл)                  КАК НДС,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.ВключениеНДСВСтоимость) КАК Событие,
	|	ЛОЖЬ                                   КАК РегламентнаяОперация,
	|	НЕОПРЕДЕЛЕНО                           КАК КорВидДеятельностиНДС
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтПартииПрочихРасходов КАК Строки
	|	ПО
	|		ИСТИНА
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПартий КАК КлючиАналитикаУчетаПартий
	|	ПО
	|		Строки.АналитикаУчетаПартий = КлючиАналитикаУчетаПартий.КлючАналитики
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ВЫБОР 
	|		КОГДА Строки.ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Строки.ВидДеятельностиНДС 
	|		ИНАЧЕ КлючиАналитикаУчетаПартий.НалогообложениеНДС 
	|		КОНЕЦ  В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|
	|СГРУППИРОВАТЬ ПО
	|	Строки.Период,
	|	Операция.Организация,
	|	Операция.Поставщик,
	|	Операция.ВидАгентскогоДоговора,
	|	КлючиАналитикаУчетаПартий.СтавкаНДС
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьВтПартииПрочихРасходов(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтПартииПрочихРасходовИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьВтНДСЗаписиКнигиПродаж(Запрос);
	ИнициализироватьКлючиАналитикиУчетаПартийДокумента(Запрос);
	
	ЗапросПартииПрочихРасходов = Новый Запрос;
	ЗапросПартииПрочихРасходов.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросПартииПрочихРасходов.УстановитьПараметр("Ссылка",                 Запрос.Параметры.Ссылка);
	ЗапросПартииПрочихРасходов.УстановитьПараметр("ДатаПеречисленияНалога", Запрос.Параметры.ДатаПеречисленияНалога);
	ЗапросПартииПрочихРасходов.УстановитьПараметр("Организация",            Запрос.Параметры.Организация);
	ЗапросПартииПрочихРасходов.УстановитьПараметр("СтатьяРасходов",         Запрос.Параметры.СтатьяРасходов);
	ЗапросПартииПрочихРасходов.УстановитьПараметр("НалогПеречислен",        Запрос.Параметры.НалогПеречислен);
	ЗапросПартииПрочихРасходов.УстановитьПараметр("СуммаКПоступлению",      Запрос.Параметры.СуммаКПоступлению);
	ЗапросПартииПрочихРасходов.УстановитьПараметр("Период",                 Запрос.Параметры.Период);
	
	ЗапросПартииПрочихРасходов.Текст = 
	"ВЫБРАТЬ
	|	ВтНДСЗаписиКнигиПродаж.Период,
	|	ВтНДСЗаписиКнигиПродаж.Организация,
	|	ВтНДСЗаписиКнигиПродаж.ВидЦенности,
	|	ВтНДСЗаписиКнигиПродаж.СчетФактура,
	|	ВтНДСЗаписиКнигиПродаж.Покупатель,
	|	ВтНДСЗаписиКнигиПродаж.ДокументОплаты,
	|	ВтНДСЗаписиКнигиПродаж.ДатаОплаты,
	|	ВтНДСЗаписиКнигиПродаж.Событие,
	|	ВтНДСЗаписиКнигиПродаж.ДатаСобытия,
	|	ВтНДСЗаписиКнигиПродаж.СтавкаНДС,
	|	ВтНДСЗаписиКнигиПродаж.НДС,
	|	ВтНДСЗаписиКнигиПродаж.СуммаБезНДС,
	|	ВтНДСЗаписиКнигиПродаж.НомерДокументаОплаты,
	|	ВтНДСЗаписиКнигиПродаж.ДатаДокументаОплаты,
	|	ВтНДСЗаписиКнигиПродаж.ХозяйственнаяОперация
	|ИЗ
	|	ВтНДСЗаписиКнигиПродаж КАК ВтНДСЗаписиКнигиПродаж
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	ВЫБОР 
	|		КОГДА ДокументыПоступления.ДатаПоступления > &Период 
	|			ТОГДА ДокументыПоступления.ДатаПоступления 
	|		ИНАЧЕ &Период
	|	КОНЕЦ                                                 КАК Период,
	|	&Организация                                          КАК Организация,
	|	ДокументыПоступления.Документ.Подразделение           КАК Подразделение,
	|	ДокументыПоступления.Документ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС         КАК ВидДеятельностиНДС,
	|	&СтатьяРасходов                                       КАК СтатьяРасходов,
	|	ДокументыПоступления.Документ                         КАК АналитикаРасходов,
	|	ДокументыПоступления.Ссылка                           КАК ДокументПоступленияРасходов,
	|	АналитикиУчетаПартий.Ссылка                    		  КАК АналитикаУчетаПартий,
	|	АналитикиУчетаПартий.СтавкаНДС                        КАК СтавкаНДС,
	|	ДокументыПоступления.СуммаОплаты                      КАК СуммаОплаты
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент.ДокументыПоступления КАК ДокументыПоступления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПартий КАК АналитикиУчетаПартий
	|		ПО ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий = АналитикиУчетаПартий.Ссылка
	|	ПО
	|		(ТаблицаАналитикУчетаПартий.НомерСтроки - ДокументыПоступления.НомерСтроки) >= 0
	|		И (ТаблицаАналитикУчетаПартий.НомерСтроки - ДокументыПоступления.НомерСтроки) < 1
	|ГДЕ
	|	ДокументыПоступления.Ссылка = &Ссылка
	|	И ДокументыПоступления.Документ ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	ВЫБОР 
	|		КОГДА ДокументыПоступления.ДатаПоступления > &Период 
	|			ТОГДА ДокументыПоступления.ДатаПоступления 
	|		ИНАЧЕ &Период
	|	КОНЕЦ                                                 КАК Период,
	|	&Организация                                          КАК Организация,
	|	ДокументыПоступления.Документ.Подразделение           КАК Подразделение,
	|	ДокументыПоступления.Документ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС         КАК ВидДеятельностиНДС,
	|	&СтатьяРасходов                                       КАК СтатьяРасходов,
	|	ДокументыПоступления.Документ                         КАК АналитикаСтатьяРасходов,
	|	ДокументыПоступления.Ссылка                           КАК ДокументПоступленияРасходов,
	|	АналитикиУчетаПартий.Ссылка               			  КАК АналитикаУчетаПартий,
	|	АналитикиУчетаПартий.СтавкаНДС                   	  КАК СтавкаНДС,
	|	ДокументыПоступления.СуммаОплаты                      КАК СуммаОплаты
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент.ДокументыПоступления КАК ДокументыПоступления
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПартий КАК АналитикиУчетаПартий
	|		ПО ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий = АналитикиУчетаПартий.Ссылка
	|	ПО
	|		(ТаблицаАналитикУчетаПартий.НомерСтроки - ДокументыПоступления.НомерСтроки) >= 0
	|		И (ТаблицаАналитикУчетаПартий.НомерСтроки - ДокументыПоступления.НомерСтроки) < 1
	|	
	|ГДЕ
	|	ДокументыПоступления.Ссылка = &Ссылка
	|	И ДокументыПоступления.Документ ССЫЛКА Документ.ПоступлениеУслугПрочихАктивов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	АналитикиУчетаПартий.СтавкаНДС,
	|	&СуммаКПоступлению
	|ИЗ
	|	ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПартий КАК АналитикиУчетаПартий
	|		ПО ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий = АналитикиУчетаПартий.Ссылка
	|";
	
	Результат = ЗапросПартииПрочихРасходов.ВыполнитьПакет();
	
	НДСПартииПрочихРасходов = ВключитьНДСВПартииПрочихРасходов(Результат[0].Выгрузить(), Результат[1].Выгрузить(), Запрос.Параметры);
	
	ЗапросПартииПрочихРасходов.УстановитьПараметр("НДСПартииПрочихРасходов", НДСПартииПрочихРасходов);
	ЗапросПартииПрочихРасходов.Текст = 
	"ВЫБРАТЬ
	|	ПартииПрочихРасходов.АналитикаРасходов,
	|	ПартииПрочихРасходов.АналитикаУчетаНоменклатуры,
	|	ПартииПрочихРасходов.АналитикаУчетаПартий,
	|	ПартииПрочихРасходов.ВидДвижения,
	|	ПартииПрочихРасходов.ВременнаяРазница,
	|	ПартииПрочихРасходов.ДокументПоступленияРасходов,
	|	ПартииПрочихРасходов.ДокументРеализации,
	|	ПартииПрочихРасходов.ВидДеятельностиНДС,
	|	ПартииПрочихРасходов.НДСРегл,
	|	ПартииПрочихРасходов.НалогообложениеНДС,
	|	ПартииПрочихРасходов.НомерСтроки,
	|	ПартииПрочихРасходов.Организация,
	|	ПартииПрочихРасходов.Период,
	|	ПартииПрочихРасходов.Подразделение,
	|	ПартииПрочихРасходов.НаправлениеДеятельности,
	|	ПартииПрочихРасходов.ПостояннаяРазница,
	|	ПартииПрочихРасходов.Регистратор,
	|	ПартииПрочихРасходов.СтатьяОтраженияРасходов,
	|	ПартииПрочихРасходов.СтатьяРасходов,
	|	ПартииПрочихРасходов.Стоимость,
	|	ПартииПрочихРасходов.СтоимостьБезНДС,
	|	ПартииПрочихРасходов.СтоимостьРегл
	|ПОМЕСТИТЬ ВтПартииПрочихРасходов
	|ИЗ
	|	&НДСПартииПрочихРасходов КАК ПартииПрочихРасходов";
	
	ЗапросПартииПрочихРасходов.Выполнить();
	
	Запрос.УстановитьПараметр("ВтПартииПрочихРасходовИнициализирована", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтПартииПрочихРасходов(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПартииПрочихРасходов.АналитикаРасходов,
	|	ПартииПрочихРасходов.АналитикаУчетаНоменклатуры,
	|	ПартииПрочихРасходов.АналитикаУчетаПартий,
	|	ПартииПрочихРасходов.ВидДвижения,
	|	ПартииПрочихРасходов.ВременнаяРазница,
	|	ПартииПрочихРасходов.ДокументПоступленияРасходов,
	|	ПартииПрочихРасходов.ДокументРеализации,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ПартииПрочихРасходов.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ПартииПрочихРасходов.НДСРегл,
	|	ПартииПрочихРасходов.НалогообложениеНДС,
	|	ПартииПрочихРасходов.НомерСтроки,
	|	ПартииПрочихРасходов.Организация,
	|	ПартииПрочихРасходов.Период,
	|	ПартииПрочихРасходов.Подразделение,
	|	ПартииПрочихРасходов.НаправлениеДеятельности,
	|	ПартииПрочихРасходов.ПостояннаяРазница,
	|	ПартииПрочихРасходов.Регистратор,
	|	ПартииПрочихРасходов.СтатьяОтраженияРасходов,
	|	ПартииПрочихРасходов.СтатьяРасходов,
	|	ПартииПрочихРасходов.Стоимость,
	|	ПартииПрочихРасходов.СтоимостьБезНДС,
	|	ПартииПрочихРасходов.СтоимостьРегл
	|ИЗ
	|	ВтПартииПрочихРасходов КАК ПартииПрочихРасходов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ НЕ УТ

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтПартииПрочихРасходов(Запрос);
	ИнициализироватьВтНДСЗаписиКнигиПокупок(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	&Организация                      КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)      КАК ДатаОтражения
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                                            КАК Период,
	|	ВтПартииПрочихРасходов.Организация                 КАК Организация,
	|	НАЧАЛОПЕРИОДА(ВтПартииПрочихРасходов.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	ВтПартииПрочихРасходов КАК ВтПартииПрочихРасходов
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                                             КАК Период,
	|	ВтНДСЗаписиКнигиПокупок.Организация                 КАК Организация,
	|	НАЧАЛОПЕРИОДА(ВтНДСЗаписиКнигиПокупок.Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	ВтНДСЗаписиКнигиПокупок КАК ВтНДСЗаписиКнигиПокупок
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//-- НЕ УТ

#КонецОбласти

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыСчетФактура(ПараметрыПечати, МассивОбъектов) Экспорт 
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетФактура.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	СчетФактура.Номер КАК Номер,
	|	СчетФактура.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	СчетФактура.СтрокаПлатежноРасчетныеДокументы КАК СтрокаПоДокументу,
	|	&ВалютаРеглУчета КАК ВалютаСчетаФактуры,
	|	ВЫБОР
	|		КОГДА СчетФактура.Поставщик.ОбособленноеПодразделение
	|			ТОГДА СчетФактура.Поставщик.ГоловнойКонтрагент
	|		ИНАЧЕ СчетФактура.Поставщик
	|	КОНЕЦ КАК Организация,
	|	СчетФактура.Организация КАК Контрагент,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	СчетФактура.Организация.Префикс КАК Префикс,
	|	ВЫБОР
	|		КОГДА СчетФактура.Организация.ОбособленноеПодразделение
	|			ТОГДА СчетФактура.Организация.ЦифровойИндексОбособленногоПодразделения
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ИндексПодразделения,
	|	СчетФактура.Поставщик КАК Грузополучатель,
	|	СчетФактура.ДокументОснование.Номер КАК НомерПлатежноРасчетногоДокумента,
	|	СчетФактура.ДокументОснование.Дата КАК ДатаПлатежноРасчетногоДокумента,
	|	СчетФактура.Организация КАК Грузоотправитель,
	|	СчетФактура.Поставщик.КПП КАК КПППоставщика,
	|	СчетФактура.Организация.КПП КАК КПППокупателя,
	|	НЕОПРЕДЕЛЕНО КАК АдресДоставки,
	|	&ВалютаРеглУчета КАК Валюта,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаНаименованиеПолное,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКод,
	|	ЛОЖЬ КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК СчетФактура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО СчетФактура.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	СчетФактура.Ссылка В(&МассивДокументов)
	|	И СчетФактура.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.НоменклатураНаименование КАК НоменклатураНаименование,
	|	НЕОПРЕДЕЛЕНО КАК Характеристика,
	|	"""" КАК ХарактеристикаНаименование,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	"""" КАК НомерГТД,
	|	"""" КАК СтранаПроисхождения,
	|	"""" КАК СтранаПроисхожденияКод,
	|	0 КАК Количество,
	|	0 КАК Цена,
	|	СУММА(ВложенныйЗапрос.Сумма - ВложенныйЗапрос.СуммаНДС) КАК СуммаБезНДС,
	|	СУММА(ВложенныйЗапрос.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ВложенныйЗапрос.Сумма) КАК СуммаСНДС,
	|	МАКСИМУМ(ВложенныйЗапрос.НомерСтроки) КАК НомерСтроки,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТовары.Ссылка КАК Ссылка,
	|		НЕОПРЕДЕЛЕНО КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА (ВЫРАЗИТЬ(ТаблицаТовары.Содержание КАК СТРОКА(1))) <> """"
	|				ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.Содержание КАК СТРОКА(100))
	|			ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Ссылка.ВидАгентскогоДоговора)
	|		КОНЕЦ КАК НоменклатураНаименование,
	|		ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаТовары.СуммаСНДС КАК Сумма,
	|		ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|		ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.СчетФактураНалоговыйАгент.РасшифровкаСуммы КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка В(&МассивДокументов)
	|		И ТаблицаТовары.Ссылка.Проведен) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.НоменклатураНаименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, СчетФактураНалоговыйАгент",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти, Истина);
	
	Возврат СтруктураДанныхДляПечати;
КонецФункции

#КонецОбласти

#Область Прочее

Функция ПринятьНДСКВычету(ТаблицаОплаты, ТаблицаПоступления, Реквизиты)
	
	ТаблицаЗаписиКнигиПокупок = РегистрыНакопления.НДСЗаписиКнигиПокупок.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаЗаписиКнигиПокупок.Колонки.Удалить("Активность");
	
	Если ТаблицаОплаты.Количество() = 0 Тогда
		Возврат ТаблицаЗаписиКнигиПокупок
	КонецЕсли;
	
	Для Каждого СтрокаОплаты Из ТаблицаОплаты Цикл
		
		// Определение сумм для принятия к вычету
		МассивСуммаОплаты = Новый Массив();
		
		Для Каждого СтрокаПоступления Из ТаблицаПоступления Цикл
			МассивСуммаОплаты.Добавить(СтрокаПоступления.СуммаОплаты);
		КонецЦикла; 
		
		МассивСуммаБезНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СтрокаОплаты.СуммаБезНДС, МассивСуммаОплаты);
		МассивНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СтрокаОплаты.НДС, МассивСуммаОплаты);
		
		Индекс = 0;
		Для Каждого СтрокаПоступления Из ТаблицаПоступления Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаПоступления.СчетФактура) Тогда
				Продолжить;
			КонецЕсли; 
			
			Если СтрокаПоступления.ЗакупкаПодДеятельность <> Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
				Продолжить;
			КонецЕсли; 
			
			СтрокаРезультата = ТаблицаЗаписиКнигиПокупок.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРезультата, СтрокаОплаты);
			ЗаполнитьЗначенияСвойств(СтрокаРезультата, СтрокаПоступления);
			СтрокаРезультата.НомерДокументаОплаты = Реквизиты.НомерДокументаПеречисленияНалога; 
			СтрокаРезультата.ДатаДокументаОплаты  = Реквизиты.ДатаДокументаПеречисленияНалога;
			
			СтрокаРезультата.СуммаБезНДС = МассивСуммаБезНДС[Индекс];
			СтрокаРезультата.НДС = МассивНДС[Индекс];
			
			Индекс = Индекс + 1;
			
		КонецЦикла; 
		
	КонецЦикла;
	
	Возврат ТаблицаЗаписиКнигиПокупок;
	
КонецФункции

Функция ВключитьНДСВПартииПрочихРасходов(ТаблицаОплаты, ТаблицаПоступления, Реквизиты)
	
	ТаблицаПартииПрочихРасходов = РегистрыНакопления.ПартииПрочихРасходов.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаПартииПрочихРасходов.Колонки.Удалить("Активность");
	
	КурсВалютыУправленческогоУчета = РаботаСКурсамиВалютУТ.ПолучитьКурсВалютыУправленческогоУчета(Реквизиты.Дата);
	
	Если ТаблицаОплаты.Количество() = 0 Тогда
		Возврат ТаблицаПартииПрочихРасходов;
	КонецЕсли;
	
	Для Каждого СтрокаОплаты Из ТаблицаОплаты Цикл
		
		Если СтрокаОплаты.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118 Тогда
			СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
		ИначеЕсли СтрокаОплаты.СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110 Тогда
			СтавкаНДС = Перечисления.СтавкиНДС.НДС10;
		Иначе
			СтавкаНДС = СтрокаОплаты.СтавкаНДС;
		КонецЕсли;
		
		СтрокиПоступления = ТаблицаПоступления.НайтиСтроки(Новый Структура("СтавкаНДС", СтавкаНДС));
		
		МассивСуммаОплаты = Новый Массив();
		Для Каждого СтрокаПоступления Из СтрокиПоступления Цикл
			МассивСуммаОплаты.Добавить(СтрокаПоступления.СуммаОплаты);
		КонецЦикла; 
		
		МассивНДС = ОбщегоНазначенияУТКлиентСервер.РаспределитьПропорционально(СтрокаОплаты.НДС, МассивСуммаОплаты);
		
		Индекс = 0;
		Для Каждого СтрокаПоступления Из СтрокиПоступления Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаПоступления.ДокументПоступленияРасходов) Тогда
				Продолжить;
			КонецЕсли; 
			
			СтрокаРезультата = ТаблицаПартииПрочихРасходов.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРезультата, СтрокаПоступления);
			
			Если КурсВалютыУправленческогоУчета <> 0 Тогда 
				СтрокаРезультата.Стоимость = МассивНДС[Индекс] / КурсВалютыУправленческогоУчета;
			Иначе
				СтрокаРезультата.Стоимость = 0;
			КонецЕсли;
			
			Если СтрокаПоступления.ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением Тогда
				// НДС не требуется привязывать к партии поступления, его необходимо распределить
				СтрокаРезультата.НДСРегл  = 0; 
			Иначе
				СтрокаРезультата.НДСРегл  = МассивНДС[Индекс]; 
			КонецЕсли;
			
			Если СтрокаПоступления.ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением Тогда
				// Cформируем дополнительное движение по отправке НДС к распределению
				СтрокаРезультата = ТаблицаПартииПрочихРасходов.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРезультата, СтрокаПоступления, , "СтатьяРасходов, АналитикаРасходов");
				СтрокаРезультата.НДСРегл  = МассивНДС[Индекс];
			КонецЕсли;
			
			Индекс = Индекс + 1;
			
		КонецЦикла; 
		
	КонецЦикла;
	
	Возврат ТаблицаПартииПрочихРасходов;
	
КонецФункции

Функция РезультатЗапросаПоОплатамНалоговыйАгент(НачалоПериода, КонецПериода, Организация, РасчетныйДокумент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Расчеты.Период КАК Период,
	|	Расчеты.Регистратор КАК ДокументОснование,
	|	Расчеты.Период КАК ДатаДокументаОснования,
	|	Расчеты.ЗаказПоставщику КАК ОбъектРасчетов,
	|	АналитикаУчетаПоПартнерамДанные.Контрагент КАК Контрагент,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.Сумма КАК СуммаОплаты,
	|	Расчеты.СуммаРегл КАК Сумма
	|ПОМЕСТИТЬ Расчеты
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК Расчеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерамДанные
	|		ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчетаПоПартнерамДанные.КлючАналитики
	|		  И АналитикаУчетаПоПартнерамДанные.Организация = &Организация
	|ГДЕ
	|	Расчеты.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И (Расчеты.Регистратор = &РасчетныйДокумент
	|		ИЛИ &РасчетныйДокумент = НЕОПРЕДЕЛЕНО)
	|	И (Расчеты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|		ИЛИ Расчеты.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер)
	|	И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.ДокументОснование,
	|	ВложенныйЗапрос.ДатаДокументаОснования,
	|	ВложенныйЗапрос.Договор,
	|	ВложенныйЗапрос.Контрагент,
	|	ВложенныйЗапрос.Валюта,
	|	СУММА(ВложенныйЗапрос.СуммаОплаты) КАК СуммаОплаты,
	|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма
	|ПОМЕСТИТЬ РасчетыНалоговогоАгента
	|ИЗ
	|	(ВЫБРАТЬ
	|		Расчеты.Период КАК Период,
	|		Расчеты.ДокументОснование КАК ДокументОснование,
	|		Расчеты.ДатаДокументаОснования КАК ДатаДокументаОснования,
	|		ЗаказПоставщику.Договор КАК Договор,
	|		Расчеты.Контрагент КАК Контрагент,
	|		Расчеты.Валюта КАК Валюта,
	|		Расчеты.СуммаОплаты КАК СуммаОплаты,
	|		Расчеты.Сумма КАК Сумма
	|	ИЗ
	|		Расчеты КАК Расчеты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|			ПО Расчеты.ОбъектРасчетов = ЗаказПоставщику.Ссылка
	|				И (ЗаказПоставщику.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Расчеты.Период,
	|		Расчеты.ДокументОснование,
	|		Расчеты.ДатаДокументаОснования,
	|		ПоступлениеТоваровУслуг.Договор,
	|		Расчеты.Контрагент,
	|		Расчеты.Валюта,
	|		Расчеты.СуммаОплаты,
	|		Расчеты.Сумма
	|	ИЗ
	|		Расчеты КАК Расчеты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|			ПО Расчеты.ОбъектРасчетов = ПоступлениеТоваровУслуг.Ссылка
	|				И (ПоступлениеТоваровУслуг.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Расчеты.Период,
	|		Расчеты.ДокументОснование,
	|		Расчеты.ДатаДокументаОснования,
	|		ПоступлениеУслугПрочихАктивов.Договор,
	|		Расчеты.Контрагент,
	|		Расчеты.Валюта,
	|		Расчеты.СуммаОплаты,
	|		Расчеты.Сумма
	|	ИЗ
	|		Расчеты КАК Расчеты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеУслугПрочихАктивов КАК ПоступлениеУслугПрочихАктивов
	|			ПО Расчеты.ОбъектРасчетов = ПоступлениеУслугПрочихАктивов.Ссылка
	|				И (ПоступлениеУслугПрочихАктивов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Расчеты.Период,
	|		Расчеты.ДокументОснование,
	|		Расчеты.ДатаДокументаОснования,
	|		Расчеты.ОбъектРасчетов,
	|		Расчеты.Контрагент,
	|		Расчеты.Валюта,
	|		Расчеты.СуммаОплаты,
	|		Расчеты.Сумма
	|	ИЗ
	|		Расчеты КАК Расчеты
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|			ПО Расчеты.ОбъектРасчетов = ДоговорыКонтрагентов.Ссылка
	|				И (ДоговорыКонтрагентов.УчетАгентскогоНДС)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.ДокументОснование,
	|	ВложенныйЗапрос.ДатаДокументаОснования,
	|	ВложенныйЗапрос.Договор,
	|	ВложенныйЗапрос.Контрагент,
	|	ВложенныйЗапрос.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.Период КАК ДатаОплаты,
	|	Расчеты.ДокументОснование КАК ДокументОснование,
	|	Расчеты.ДокументОснование.Дата КАК ДатаДокументаОснования,
	|	Расчеты.Контрагент КАК Поставщик,
	|	Расчеты.Контрагент.ЮрФизЛицо КАК ЮрФизЛицо,
	|	Расчеты.Договор КАК Договор,
	|	ЕСТЬNULL(ДоговорыКонтрагентов.ВидАгентскогоДоговора, НЕОПРЕДЕЛЕНО) КАК ВидАгентскогоДоговора,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.СуммаОплаты КАК СуммаОплаты,
	|	Расчеты.Сумма КАК Сумма,
	|	ЕСТЬNULL(СчетФактураНалоговыйАгент.Ссылка, НЕОПРЕДЕЛЕНО) КАК СчетФактура,
	|	ЕСТЬNULL(СчетФактураНалоговыйАгент.Сумма, 0) КАК СуммаСчетаФактуры
	|ИЗ
	|	РасчетыНалоговогоАгента КАК Расчеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураНалоговыйАгент КАК СчетФактураНалоговыйАгент
	|		ПО Расчеты.ДокументОснование = СчетФактураНалоговыйАгент.ДокументОснование
	|			И Расчеты.Контрагент = СчетФактураНалоговыйАгент.Поставщик
	|			И (Расчеты.Договор = СчетФактураНалоговыйАгент.Договор
	|				ИЛИ СчетФактураНалоговыйАгент.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|			И (СчетФактураНалоговыйАгент.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО Расчеты.Договор = ДоговорыКонтрагентов.Ссылка
	|ГДЕ
	|	Расчеты.Сумма - ЕСТЬNULL(СчетФактураНалоговыйАгент.Сумма, 0) <> 0";
	
	ОписаниеТиповД = Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	ТаблицаПериодов = Новый ТаблицаЗначений;
	ТаблицаПериодов.Колонки.Добавить("ПериодДень",ОписаниеТиповД);
	
	КонецПериода = ?(КонецПериода = '00010101', НачалоПериода, КонецПериода);
	
	Запрос.УстановитьПараметр("НачалоПериода",     НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      КонецПериода);
	Запрос.УстановитьПараметр("Организация",       Организация);
	Запрос.УстановитьПараметр("РасчетныйДокумент", РасчетныйДокумент);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиУчетаПартийДокумента(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПартийДокументаИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	// Создадим временную таблицу "ВтТаблицаАналитикУчетаПартий"
	
	УстановитьПараметрЗапросаНалогообложениеОрганизации(Запрос);
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""ДокументыПоступления"" КАК ИмяТабличнойЧасти,
	|	ТаблицаДокументыПоступления.НомерСтроки	+ 1 / (ТаблицаРасшифровкаСуммы.НомерСтроки + 1) КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Поставщик,
	|	РеквизитыДокумента.Поставщик КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументыПоступления.Документ.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			И ТаблицаДокументыПоступления.Документ.ЗакупкаПодДеятельность = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			ТОГДА &НалогообложениеОрганизации
	|		ИНАЧЕ ТаблицаДокументыПоступления.Документ.ЗакупкаПодДеятельность
	|	КОНЕЦ КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаРасшифровкаСуммы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|		КОГДА ТаблицаРасшифровкаСуммы.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|		ИНАЧЕ ТаблицаРасшифровкаСуммы.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА РеквизитыДокумента.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.Аренда)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентАренда)
	|		КОГДА РеквизитыДокумента.ВидАгентскогоДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыАгентскихДоговоров.РеализацияИмущества)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентРеализацияИмущества)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентИностранцы)
	|	КОНЕЦ КАК ВидЦенности
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент.ДокументыПоступления КАК ТаблицаДокументыПоступления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураНалоговыйАгент.РасшифровкаСуммы КАК ТаблицаРасшифровкаСуммы
	|		ПО ТаблицаРасшифровкаСуммы.Ссылка = ТаблицаДокументыПоступления.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураНалоговыйАгент КАК РеквизитыДокумента
	|		ПО РеквизитыДокумента.Ссылка = ТаблицаДокументыПоступления.Ссылка
	|ГДЕ
	|	ТаблицаДокументыПоступления.Ссылка = &Ссылка
	|	И РеквизитыДокумента.НалогПеречислен";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПартийДокументаИнициализированы", Истина);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаНалогообложениеОрганизации(Запрос)
	
	Если Запрос.Параметры.Свойство("НалогообложениеОрганизации") Тогда
		Возврат;
	КонецЕсли;
	
	НалогообложениеОрганизации = Справочники.Организации.НалогообложениеНДС(Запрос.Параметры.Организация, Запрос.Параметры.Период);
	Запрос.УстановитьПараметр("НалогообложениеОрганизации", НалогообложениеОрганизации);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецЕсли
