#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Команды

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Документы.ВыработкаСотрудников.ДобавитьКомандуСоздатьНаОснованииСозданиеВыработкиСотрудников(КомандыСоздатьНаОсновании);
	
	ПроизводствоСервер.ДобавитьКомандуСоздатьПередачуМатериаловВПроизводствоНаОсновании(КомандыСоздатьНаОсновании);
	
	ПроизводствоСервер.ДобавитьКомандуСоздатьВозвратМатериаловНаОсновании(КомандыСоздатьНаОсновании);
	
	Документы.РасходныйОрдерНаТовары.ДобавитьКомандуСоздатьНаОснованииРасходныйОрдерНаТовары(КомандыСоздатьНаОсновании);
	
	ПроизводствоСервер.ДобавитьКомандуСоздатьПередачуПродукцииИзПроизводстваНаОсновании(КомандыСоздатьНаОсновании);
	
	Документы.КорректировкаНазначенияТоваров.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	Если ПравоДоступа("Добавление", Метаданные.Документы.ЭтапПроизводства2_2) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ЭтапПроизводства2_2.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ЭтапПроизводства2_2);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьУправлениеПроизводством2_2";

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуКонтрольДвиженияПродукцииИМатериаловПоЭтапуПроизводства(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДиагностикаГрафикаЭтапаПроизводства(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСмежныеЭтапыПроизводства(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуГрафикПартииЗапуска(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти

#Область Серии

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Подразделение,Спецификация,Статус,Дата,ПроизводствоНаСтороне";
	
	Возврат ИменаРеквизитов;
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе
//
// Параметры:
//  Объект	 - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
// 
// Возвращаемое значение:
//  Структура - Состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыСерийПодразделение = СкладыСервер.ИспользованиеСерийВПодразделении(Объект.Подразделение);

	ПараметрыУказанияСерий = Новый Структура;
	
	#Область ВыходныеИзделия
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Документ.ЭтапПроизводства2_2";
	
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Получатель");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Произведено");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("ДатаПроизводства");
	
	ПараметрыУказанияСерийТЧ.ПараметрыЗапроса.Вставить("Подразделение", Объект.Подразделение);
	ПараметрыУказанияСерийТЧ.ПараметрыЗапроса.Вставить("Спецификация", Объект.Спецификация);
	
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад = "Получатель";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары = "ВыходныеИзделия";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии = "ВыходныеИзделияСерии";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура())
																И НЕ Объект.ПроизводствоНаСтороне;
																
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры  = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура())
																И НЕ Объект.ПроизводствоНаСтороне;
	
	ПараметрыУказанияСерийТЧ.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаИзПроизводства);
	
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Произведено");
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийОтправитель");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийПолучатель");
	
	ПараметрыУказанияСерийТЧ.ФактОтбора = (Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Завершен);
	
	ПараметрыУказанияСерийТЧ.Дата = Объект.Дата;
	
	ПараметрыУказанияСерийТЧ.ИменаПолейДляОпределенияРаспоряжения.Добавить("Ссылка");

	ПараметрыУказанияСерий.Вставить("ВыходныеИзделия", ПараметрыУказанияСерийТЧ);
	
	#КонецОбласти
	
	#Область ПобочныеИзделия
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Документ.ЭтапПроизводства2_2";
	
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Получатель");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Произведено");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("ДатаПроизводства");
	
	ПараметрыУказанияСерийТЧ.ПараметрыЗапроса.Вставить("Подразделение", Объект.Подразделение);
	ПараметрыУказанияСерийТЧ.ПараметрыЗапроса.Вставить("Спецификация", Объект.Спецификация);
	
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад = "Получатель";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары = "ПобочныеИзделия";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии = "ПобочныеИзделияСерии";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура())
																И НЕ Объект.ПроизводствоНаСтороне;
																
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры  = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура())
																И НЕ Объект.ПроизводствоНаСтороне;
	
	ПараметрыУказанияСерийТЧ.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаИзПроизводства);
	
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Произведено");
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийОтправитель");
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийПолучатель");
	
	ПараметрыУказанияСерийТЧ.ФактОтбора = (Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Завершен);
	
	ПараметрыУказанияСерийТЧ.Дата = Объект.Дата;
	
	ПараметрыУказанияСерийТЧ.ИменаПолейДляОпределенияРаспоряжения.Добавить("Ссылка");
	
	ПараметрыУказанияСерий.Вставить("ПобочныеИзделия", ПараметрыУказанияСерийТЧ);
	#КонецОбласти
	
	#Область РасходМатериаловИРабот
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Документ.ЭтапПроизводства2_2";
	
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад = "Подразделение";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары = "РасходМатериаловИРабот";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии  = "РасходМатериаловИРабот";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям = Ложь;
																
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры = 
		НЕ Объект.ПроизводствоНаСтороне
		И НоменклатураСервер.ИспользуетсяСправочноеУказаниеСерийВМаршуртныхЛистах(
						Объект.Спецификация, Перечисления.ВидыСтрокДереваСпецификаций.Материал);
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПотреблениеМатериаловПриПроизводстве);
	
	ПараметрыУказанияСерийТЧ.ПараметрыЗапроса.Вставить("Спецификация", Объект.Спецификация);
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	ПараметрыУказанияСерийТЧ.РегистрироватьСерии = Истина; // всегда используется форма регистрации серий (в ней можно также выбрать из остатков)
	
	ПараметрыУказанияСерийТЧ.ПланированиеОтгрузки = Ложь;
	ПараметрыУказанияСерийТЧ.ПланированиеОтбора   = Ложь;
	ПараметрыУказанияСерийТЧ.ФактОтбора           = Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Завершен;
	
	ПараметрыУказанияСерийТЧ.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.Вставить("РасходМатериаловИРабот", ПараметрыУказанияСерийТЧ);
	#КонецОбласти
	
	#Область ЭкономияМатериалов
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Документ.ЭтапПроизводства2_2";
	
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары = "ЭкономияМатериалов";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии  = "ЭкономияМатериаловСерии";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура())
																И НЕ Объект.ПроизводствоНаСтороне;
																
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры  = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура())
																И НЕ Объект.ПроизводствоНаСтороне;
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВозвратИзПроизводстваНаСклад);
	
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Склад");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("ДатаОперации");
	ПараметрыУказанияСерийТЧ.ПоляСвязи.Добавить("Обособить");
	
	ПараметрыУказанияСерийТЧ.ПараметрыЗапроса.Вставить("Подразделение", Объект.Подразделение);
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	ПараметрыУказанияСерийТЧ.РегистрироватьСерии = Истина; // всегда используется форма регистрации серий (в ней можно также выбрать из остатков)
	
	ПараметрыУказанияСерийТЧ.ПланированиеОтгрузки = Ложь;
	ПараметрыУказанияСерийТЧ.ПланированиеОтбора   = Ложь;
	ПараметрыУказанияСерийТЧ.ФактОтбора           = Истина;
	
	ПараметрыУказанияСерийТЧ.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.Вставить("ЭкономияМатериалов", ПараметрыУказанияСерийТЧ);
	#КонецОбласти

	#Область ОбеспечениеМатериаламиИРаботами
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Документ.ЭтапПроизводства2_2";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары      = "ОбеспечениеМатериаламиИРаботами";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии       = "ОбеспечениеМатериаламиИРаботами";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура());
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры  = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура());
	
	Если Объект.ПроизводствоНаСтороне Тогда
		ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКлиенту);
	Иначе
		ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПередачаВПроизводствоОтгрузка);
	КонецЕсли; 
	
	ПараметрыУказанияСерийТЧ.ПараметрыЗапроса.Вставить("Подразделение", Объект.Подразделение);
	ПараметрыУказанияСерийТЧ.ПараметрыЗапроса.Вставить("ПроизводствоНаСтороне", Объект.ПроизводствоНаСтороне);
	
	ПараметрыУказанияСерийТЧ.ИменаПолейДополнительные.Добавить("Склад");
	
	ПараметрыУказанияСерийТЧ.ЭтоЗаказ = Истина;
	ПараметрыУказанияСерийТЧ.ПланированиеОтгрузки = Истина;
	ПараметрыУказанияСерийТЧ.РегистрироватьСерии = Ложь;
	
	ПараметрыУказанияСерийТЧ.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.Вставить("ОбеспечениеМатериаламиИРаботами", ПараметрыУказанияСерийТЧ);
	#КонецОбласти
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает значение распоряжения на поступление или отгрузку.
//
// Параметры:
//  ЗначенияПолейДляОпределенияРаспоряжения	 - Структура - состав полей определяется значением
//  поля ИменаПолейДляОпределенияРаспоряжения параметров указания серий этого документа
// 
// Возвращаемое значение:
//  ДокументСсылка.ЭтапПроизводства2_2 - Ссылка на распоряжение.
//
Функция РаспоряжениеНаВыполнениеСкладскойОперации(ЗначенияПолейДляОпределенияРаспоряжения) Экспорт
	Возврат ЗначенияПолейДляОпределенияРаспоряжения.Ссылка;
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.ИмяТЧТовары = "ВыходныеИзделия" 
		ИЛИ ПараметрыУказанияСерий.ИмяТЧТовары = "ПобочныеИзделия" Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийВыходныеИзделия();
	ИначеЕсли ПараметрыУказанияСерий.ИмяТЧТовары = "ОбеспечениеМатериаламиИРаботами" Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийОбеспечениеМатериаламиИРаботами();
	ИначеЕсли ПараметрыУказанияСерий.ИмяТЧТовары = "РасходМатериаловИРабот" Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийРасходМатериаловИРабот();
	ИначеЕсли ПараметрыУказанияСерий.ИмяТЧТовары = "ЭкономияМатериалов" Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийЭкономияМатериалов();
	КонецЕсли;                                                        
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область Обеспечение

//Используется для получения данных из документа, используемых в обработке "Состояние обеспечения заказов".
//Аналогичные функции объявлены в модулях менеджеров всех типов заказов и учитывают структуру хранения данных документа.
//
//Возвращаемое значение:
// Строка - Текст запроса - Текст запроса для выборки данных:
//                          1) источнике данных о потребности:
//                          - "Заказ", "КодСтроки", "НомерСтроки",
//                          2) аналитики потребности:
//                          - "Номенклатура", "Характеристика", "Склад", "Назначение", "Подразделение",
//                          3) текущем варианте обеспечения:
//                          - "ВариантОбеспечения", "ДатаОтгрузки", "Количество",
//                          4) общих для заказа параметрах обеспечения:
//                          - "ЖелаемаяДатаОтгрузки", "НеОтгружатьЧастями".
//                          5) реквизиты документа отображаемые в форме обработки состояния обеспечения":
//                          - "Упаковка", "Дата", "Партнер", "Статус", "СтатусИспользуется", "Дата".
//                          
//                          "Количество" - количество из заказа, по которому не оформлена накладная,
//                          поступает из таблицы "ВтРегистрЗаказыКлиентов", где предварительно рассчитывается
//                          по ресурсу "Заказано", регистра накопления "ЗаказыКлиентов".
//
Функция ТекстЗапросаЗаказовКОбеспечению() Экспорт

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Т.Ссылка      КАК Заказ,
		|	Т.КодСтроки   КАК КодСтроки,
		|	Т.НомерСтроки КАК НомерСтроки,
		|	0             КАК НомерСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО  КАК Продукция,
		|	НЕОПРЕДЕЛЕНО  КАК Этап,
		|	0             КАК ЭтапПорядок,
		|
		|	Т.Номенклатура               КАК Номенклатура,
		|	Т.Характеристика             КАК Характеристика,
		|	Т.Склад                      КАК Склад,
		|	Т.Ссылка.НазначениеМатериалы КАК Назначение,
		|	Т.Ссылка.Подразделение       КАК Подразделение,
		|
		|	Т.ВариантОбеспечения КАК ВариантОбеспечения,
		|	Т.ДатаОтгрузки       КАК ДатаОтгрузки,
		|
		|	Т.Упаковка             КАК Упаковка,
		|	ДанныеУчета.Количество КАК Количество,
		|
		|	Т.Ссылка.ЖелаемаяДатаОбеспечения КАК ЖелаемаяДатаОтгрузки,
		|	ЛОЖЬ                             КАК НеОтгружатьЧастями,
		|	Т.Ссылка.Дата                    КАК Дата,
		|	Неопределено                     КАК Партнер,
		|	Т.Ссылка.Статус                  КАК Статус,
		|	ИСТИНА                           КАК СтатусИспользуется
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ТаблицаЭтап
		|		ПО Т.Ссылка    = ТаблицаЭтап.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРегистрЗаказыМатериаловВПроизводство КАК ДанныеУчета
		|		ПО Т.Ссылка    = ДанныеУчета.Заказ
		|		 И Т.КодСтроки = ДанныеУчета.КодСтроки
		|ГДЕ
		|	ТаблицаЭтап.Проведен
		|
		|	И Т.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
		|
		|	И (Т.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|		ИЛИ Т.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно))
		|
		|	И НЕ ТаблицаЭтап.ПроизводствоНаСтороне
		|
		|{ГДЕ
		|	Т.Ссылка.*          КАК Заказ,
		|	Т.Склад.*           КАК Склад,
		|	Т.Ссылка.Ответственный.* КАК Менеджер}";
		
	Если ПравоДоступа("Чтение", Метаданные.Документы.ЗаказПереработчику)
		И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ЗаказыКлиентов) Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаЭтап.ЗаказПереработчику КАК Заказ,
		|	Т.КодСтроки                    КАК КодСтроки,
		|	Т.НомерСтроки                  КАК НомерСтроки,
		|	0                              КАК НомерСтрокиПродукция,
		|	НЕОПРЕДЕЛЕНО                   КАК Продукция,
		|	ТаблицаЭтап.Ссылка             КАК Этап,
		|	0                              КАК ЭтапПорядок,
		|
		|	Т.Номенклатура                 КАК Номенклатура,
		|	Т.Характеристика               КАК Характеристика,
		|	Т.Склад                        КАК Склад,
		|	Т.Ссылка.НазначениеМатериалы   КАК Назначение,
		|	Т.Ссылка.Подразделение         КАК Подразделение,
		|
		|	Т.ВариантОбеспечения    КАК ВариантОбеспечения,
		|	Т.ДатаОтгрузки          КАК ДатаОтгрузки,
		|
		|	Т.Упаковка             КАК Упаковка,
		|	ДанныеУчета.Количество КАК Количество,
		|
		|	Т.Ссылка.ЖелаемаяДатаОбеспечения КАК ЖелаемаяДатаОтгрузки,
		|	ЛОЖЬ                             КАК НеОтгружатьЧастями,
		|	Т.Ссылка.Дата                    КАК Дата,
		|	Неопределено                     КАК Партнер,
		|	Т.Ссылка.Статус                  КАК Статус,
		|	ИСТИНА                           КАК СтатусИспользуется
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ТаблицаЭтап
		|		ПО Т.Ссылка    = ТаблицаЭтап.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРегистрЗаказыКлиентов КАК ДанныеУчета
		|		ПО ТаблицаЭтап.ЗаказПереработчику = ДанныеУчета.Заказ
		|		 И Т.КодСтроки = ДанныеУчета.КодСтроки
		|ГДЕ
		|	ТаблицаЭтап.Проведен
		|
		|	И Т.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
		|
		|	И (Т.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|		ИЛИ Т.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно))
		|
		|	И ТаблицаЭтап.ПроизводствоНаСтороне
		|
		|{ГДЕ
		|	ТаблицаЭтап.ЗаказПереработчику.* КАК Заказ,
		|	Т.Склад.*           КАК Склад,
		|	Т.Ссылка.Ответственный.* КАК Менеджер}";
		
	КонецЕсли; 		

	Возврат ТекстЗапроса;

КонецФункции

Функция ЗаполнитьВариантОбеспечения(Объект, Форма, Операция, ДанныеЗаполнения, ПараметрыУказанияСерий = Неопределено) Экспорт
	
	Если ПараметрыУказанияСерий = Неопределено Тогда
		ПараметрыУказанияСерий = Новый ФиксированнаяСтруктура(НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.ЭтапПроизводства2_2));
	КонецЕсли;
	
	Результат = УправлениеПроизводством.ЗаполнитьВариантОбеспеченияЭтапа(
						Объект, 
						Форма, 
						Операция, 
						ДанныеЗаполнения, 
						ПараметрыУказанияСерий);
	
	Возврат Результат;

КонецФункции

// Возвращает признак наличия в заказе возможности управления частичной отгрузкой.
// Используется в состоянии обеспечения. Если возможность есть, то пользователь может
// управлять флагом "Не отгружать частями" из обработки состояния обеспечения,
// при выполнении действий с заказом.
// 
// Возвращаемое значение:
//  Булево - Истина, если есть реквизит НеОтгружатьЧастями.
//
Функция ЕстьНеОтгружатьЧастями() Экспорт
	Возврат Ложь;
КонецФункции

Функция ПараметрыВыбораОбеспечения(Статус) Экспорт
	
	Параметры = Новый Структура;
	Параметры.Вставить("ПутиКДанным",          Новый Соответствие());
	Параметры.Вставить("ИмяТабличнойЧасти",    "ОбеспечениеМатериаламиИРаботами");
	Параметры.Вставить("СтатусКВыполнению",    Истина);
	Параметры.Вставить("ИмяМенеджераРегистра", "ЗаказыМатериаловВПроизводство");
	
	Возврат Параметры;
	
КонецФункции

// Изменяет желаемые даты обеспечения этапов.
//
// Параметры:
//  Этапы - ТаблицаЗначений - содержит колонки:
//		* ЭтапПроизводства - ДокументСсылка.ЭтапПроизводства2_2 - документ, который необходимо изменить.
//		* Дата - Дата - значение, которое необходимо установить в качестве желаемой даты обеспечения.
// 
// Возвращаемое значение:
// 	Число - количество обработанных документов.
//
Функция ИзменитьЖелаемыеДатыОбеспечения(Этапы) Экспорт
	
	КоличествоОбработанных = 0;
	
	Для каждого Строка Из Этапы Цикл
		
		ДокументОбъект = Строка.ЭтапПроизводства.ПолучитьОбъект();
		
		Попытка
			
			ДокументОбъект.Заблокировать();
			
			УправлениеПроизводством.ИзменитьЖелаемуюДатуОбеспеченияЭтапа(
				ДокументОбъект,
				Строка.Дата);
			
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			
			КоличествоОбработанных = КоличествоОбработанных + 1;
			
		Исключение
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Этап производства.Перенос желаемой даты обеспечения'",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка
				,
				,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат КоличествоОбработанных;
	
КонецФункции

// Возвращает даты обеспечения этапов материалами.
//
// Параметры:
//  МассивЭтапов - Массив - содержит ссылки на этапы, даты обеспечения которых необходимо получить.
//  ВРазрезеМатериалов - Булево - если Истина, то даты получаются в разрезе материалов.
//		Если Ложь, то даты обеспечения сворачиваются по этапам производства.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблица, содержащая даты обеспечения, с колонками:
//		Если ВРазрезеМатериалов - Истина:
//			* ЭтапПроизводства - ДокументСсылка.ЭтапПроизводства2_2.
//			* Номенклатура - СправочникСсылка.Номенклатура.
//			* Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры.
//			* Склад - СправочникСсылка.Склады.
//			* ВариантОбеспечения - ПеречислениеСсылка.ВариантыОбеспечения.
//			* ДатаОбеспечения - Дата.
//		Если ВРазрезеМатериалов - Ложь:
//			* ЭтапПроизводства - ДокументСсылка.ЭтапПроизводства2_2.
//			* ДатаОбеспечения - Дата.
//
Функция ДатыОбеспеченияЭтапов(МассивЭтапов, ВРазрезеМатериалов) Экспорт
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Обеспечение.Ссылка                 КАК ЭтапПроизводства,
		|	Обеспечение.Номенклатура           КАК Номенклатура,
		|	Обеспечение.Характеристика         КАК Характеристика,
		|	Обеспечение.Склад                  КАК Склад,
		|	Обеспечение.ВариантОбеспечения     КАК ВариантОбеспечения,
		|	МАКСИМУМ(Обеспечение.ДатаОтгрузки) КАК ДатаОбеспечения
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Обеспечение
		|ГДЕ
		|	Обеспечение.Ссылка В (&МассивЭтапов)
		|
		|	И (
		|		Обеспечение.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов),
		|										 ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется))
		|		
		|		ИЛИ Обеспечение.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно)
		|			И НЕ &ИспользуетсяОбособлениеПоЭтапамПроизводства
		|	)
		|
		|	И Обеспечение.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
		|	И НЕ Обеспечение.Производится
		|
		|СГРУППИРОВАТЬ ПО
		|	Обеспечение.Ссылка,
		|	Обеспечение.Номенклатура,
		|	Обеспечение.Характеристика,
		|	Обеспечение.Склад,
		|	Обеспечение.ВариантОбеспечения
		|
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Обеспечение.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Обеспечение
		|ГДЕ
		|	Обеспечение.Ссылка В(&МассивЭтапов)
		|
		|	И Обеспечение.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно)
		|	И &ИспользуетсяОбособлениеПоЭтапамПроизводства
		|
		|	И НЕ Обеспечение.Производится
		|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"&ИспользуетсяОбособлениеПоЭтапамПроизводства", 
		Документы.ЗаказНаПроизводство2_2.ТекстПоляИспользуетсяОбособлениеПоЭтапамПроизводства("Обеспечение.Ссылка.Распоряжение"));

	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("МассивЭтапов", МассивЭтапов);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ДатыОбеспечения = РезультатыЗапроса[0].Выгрузить();
	
	ЭтапыКРасчету = РезультатыЗапроса[1].Выгрузить().ВыгрузитьКолонку(0);
	Если ЭтапыКРасчету.ВГраница() <> -1 Тогда
		
		ДатыОбособленногоОбеспечения = ОбеспечениеСервер.ДатаОбеспеченияОбособленныхПотребностей(ЭтапыКРасчету);
		
		Для каждого Строка Из ДатыОбособленногоОбеспечения Цикл
			
			НоваяСтрока = ДатыОбеспечения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			НоваяСтрока.ЭтапПроизводства   = Строка.Заказ;
			НоваяСтрока.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Обособленно;
			
		КонецЦикла;
		
	КонецЕсли;
	
	СгруппироватьПоЭтапам = Не ВРазрезеМатериалов;
	Если СгруппироватьПоЭтапам Тогда
		
		МассивЭтапов = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(МассивЭтапов);
		ДатыОбеспечения.Индексы.Добавить("ЭтапПроизводства");
		
		Результат = Новый ТаблицаЗначений;
		Результат.Колонки.Добавить("ЭтапПроизводства", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
		Результат.Колонки.Добавить("ДатаОбеспечения",  Новый ОписаниеТипов("Дата"));
		
		ОтборПоЭтапу = Новый Структура("ЭтапПроизводства");
		
		Для каждого ЭтапПроизводства Из МассивЭтапов Цикл
			
			ОтборПоЭтапу.ЭтапПроизводства = ЭтапПроизводства;
			НайденныеСтроки = ДатыОбеспечения.НайтиСтроки(ОтборПоЭтапу);
			
			ДатаОбеспечения = '00010101';
			Для каждого Строка Из НайденныеСтроки Цикл
				ДатаОбеспечения = Макс(ДатаОбеспечения, Строка.ДатаОбеспечения);
			КонецЦикла;
			
			Если ЗначениеЗаполнено(ДатаОбеспечения) Тогда
				
				НоваяСтрока = Результат.Добавить();
				НоваяСтрока.ЭтапПроизводства = ЭтапПроизводства;
				НоваяСтрока.ДатаОбеспечения  = ДатаОбеспечения;
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		Результат = ДатыОбеспечения;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает материалы и работы этапа, необходимые для его выполнения
//
// Параметры:
//  Этап - ДокументСсылка.ЭтапПроизводства2_2 - этап, данные которого необходимо получить
// 
// Возвращаемое значение:
//  ТаблицаЗначений - обеспечиваемые материалы и работы.
//
Функция ОбеспечиваемыеМатериалыИРаботы(Этап) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Упаковка,
	|	ТабличнаяЧасть.КоличествоУпаковок,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", Этап);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Возвращает обеспечиваемые материалы этапа за вычетом израсходованных материалов.
//
// Параметры:
//  Этап - ДокументСсылка.ЭтапПроизводства2_2 - этап производства.
//	Разрезы - Сторка - перечень полей через запятую, в разрезе которых необходимо получить остатки.
//		Допустимые значения: Характеристика, Серия. Если не передано, то данные получаются только в
//		разрезе номенклатуры.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблицы с материалами.
//
Функция ОстаткиОбеспечиваемыхМатериалов(Этап, Разрезы = Неопределено) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	%ТекстДополнительныеПоляВыбор%
	|	МАКСИМУМ(ТабличнаяЧасть.Упаковка) КАК Упаковка,
	|	СУММА(ТабличнаяЧасть.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТОбеспечение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Этап
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура
	|	%ТекстДополнительныеПоляГруппировка%
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	%ТекстДополнительныеПоляВыбор%
	|	СУММА(ТабличнаяЧасть.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТРасход
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.РасходМатериаловИРабот КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Этап
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура
	|	%ТекстДополнительныеПоляГруппировка%
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	%ТекстДополнительныеПоляВыбор%
	|	ТабличнаяЧасть.Упаковка,
	|	ТабличнаяЧасть.Количество - ЕСТЬNULL(ВТРасход.Количество, 0) КАК Количество,
	|	ТабличнаяЧасть.Количество - ЕСТЬNULL(ВТРасход.Количество, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоУпаковок
	|ИЗ
	|	ВТОбеспечение КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРасход КАК ВТРасход
	|		ПО ТабличнаяЧасть.Номенклатура = ВТРасход.Номенклатура
	|			%ТекстДополнительныеПоляСоединение%
	|ГДЕ
	|	ТабличнаяЧасть.Количество - ЕСТЬNULL(ВТРасход.Количество, 0) > 0";
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТабличнаяЧасть.Упаковка",
			"ТабличнаяЧасть.Номенклатура"));
			
	ТекстДопПоляВыбор = "";
	ТекстДопПоляГруппировка = "";
	ТекстДопПоляСоединение = "";
	
	Если ЗначениеЗаполнено(Разрезы) Тогда
		
		МассивПолей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(Разрезы, ",");
		
		Для каждого Поле Из МассивПолей Цикл
			
			Поле = СокрЛП(Поле);
			
			ТекстДопПоляВыбор = ТекстДопПоляВыбор
				+ "ТабличнаяЧасть." + Поле + " КАК " + Поле + ",";
			
			ТекстДопПоляГруппировка = ТекстДопПоляГруппировка
				+ ?(ЗначениеЗаполнено(ТекстДопПоляГруппировка), ", ", "")
				+ "ТабличнаяЧасть." + Поле;
			
			ТекстДопПоляСоединение = ТекстДопПоляСоединение
				+ " И ТабличнаяЧасть." + Поле + " = ВТРасход." + Поле;
			
		КонецЦикла;
		
		ТекстДопПоляГруппировка = ", " + ТекстДопПоляГруппировка;
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстДополнительныеПоляВыбор%", ТекстДопПоляВыбор);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстДополнительныеПоляГруппировка%", ТекстДопПоляГруппировка);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстДополнительныеПоляСоединение%", ТекстДопПоляСоединение);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("Этап", Этап);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#Область РасчетСостояния

// Возвращает структуру, содержащую тексты запросов временных таблиц для расчета состояния.
// 
// Возвращаемое значение:
//   - Структура - тексты запросов временных таблиц для расчета состояния
//
Функция ВременныеТаблицыДляРасчетаСостояния() Экспорт
	
	Результат = Новый Структура();
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Таблица.Ссылка        КАК Ссылка,
		|	Таблица.Проведен      КАК Проведен,
		|	Таблица.Статус        КАК Статус,
		|	Таблица.Распоряжение  КАК Распоряжение,
		|	Таблица.Подразделение КАК Подразделение,
		|	
		|	ВЫБОР КОГДА &ИспользуетсяОбособлениеПоЭтапамПроизводства ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|	КОНЕЦ                       КАК ИспользуетсяОбособлениеПоЭтапамПроизводства,
		|	Таблица.НазначениеМатериалы КАК НазначениеМатериалы,
		|	
		|	ВЫБОР КОГДА Таблица.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен) ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|	КОНЕЦ                 КАК СтатусЗавершен
		|	
		|ПОМЕСТИТЬ ВТРеквизитыДокумента
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В(&МассивСсылок)";
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"&ИспользуетсяОбособлениеПоЭтапамПроизводства", 
		Документы.ЗаказНаПроизводство2_2.ТекстПоляИспользуетсяОбособлениеПоЭтапамПроизводства("Таблица.Распоряжение"));
	
	Результат.Вставить("Реквизиты", ТекстЗапроса);
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Набор.Ссылка КАК Ссылка,
		|	
		|	МАКСИМУМ(Набор.ЕстьКОбеспечению)            КАК ЕстьКОбеспечению,
		|	МАКСИМУМ(Набор.ЕстьРезервироватьКДате)      КАК ЕстьРезервироватьКДате,
		|	МАКСИМУМ(Набор.ЕстьКОбеспечениюОбособленно) КАК ЕстьКОбеспечениюОбособленно
		|	
		|ПОМЕСТИТЬ ВТОбеспечениеЗаказа
		|ИЗ(
		|	ВЫБРАТЬ
		|		Таблица.Ссылка КАК Ссылка,
		|		
		|		ВЫБОР КОГДА Таблица.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется) ТОГДА
		|					ИСТИНА
		|				ИНАЧЕ
		|					ЛОЖЬ
		|			КОНЕЦ      КАК ЕстьКОбеспечению,
		|		
		|		ВЫБОР КОГДА Таблица.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов) ТОГДА
		|					ИСТИНА
		|				ИНАЧЕ
		|					ЛОЖЬ
		|			КОНЕЦ      КАК ЕстьРезервироватьКДате,
		|			
		|		ВЫБОР КОГДА Таблица.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно) ТОГДА
		|					ИСТИНА
		|				ИНАЧЕ
		|					ЛОЖЬ
		|			КОНЕЦ      КАК ЕстьКОбеспечениюОбособленно
		|	
		|	ИЗ
		|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Таблица
		|	ГДЕ
		|		Таблица.Ссылка В(&МассивСсылок)
		|		И НЕ Таблица.Производится 
		|
		|) КАК Набор
		|
		|СГРУППИРОВАТЬ ПО
		|	Набор.Ссылка";
	
	Результат.Вставить("Обеспечение", ТекстЗапроса);
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаСвязи.Этап КАК Ссылка,
		|	ВЫБОР
		|		КОГДА СУММА(ВЫБОР
		|					КОГДА Предшественники.Статус = &СтатусЗавершен
		|						ТОГДА 1
		|					ИНАЧЕ 0
		|				КОНЕЦ) = КОЛИЧЕСТВО(Предшественники.Ссылка)
		|			ТОГДА &ЗавершеныПредшественники
		|		КОГДА СУММА(ВЫБОР
		|					КОГДА Предшественники.Статус = &СтатусНачат
		|						ТОГДА 1
		|					ИНАЧЕ 0
		|				КОНЕЦ) > 0
		|			ТОГДА &НачатыПредшественники
		|		КОГДА СУММА(ВЫБОР
		|					КОГДА Предшественники.Статус = &СтатусНачат
		|						ТОГДА 1
		|					ИНАЧЕ 0
		|				КОНЕЦ) = 0
		|			ТОГДА &НеНачатыПредшественники
		|	КОНЕЦ КАК Состояние
		|ПОМЕСТИТЬ ВТСостоянияПредшественников
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК ТаблицаСвязи
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Предшественники
		|		ПО ТаблицаСвязи.Ссылка = Предшественники.Ссылка
		|ГДЕ
		|	ТаблицаСвязи.Этап В(&МассивСсылок)
		|	И Предшественники.Проведен
		|	И НЕ Предшественники.Ссылка В(&МассивСсылокКОчистке)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаСвязи.Этап
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка";
		
	Результат.Вставить("СостоянияПредшественников", ТекстЗапроса);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ЦепочкаЭтапов

// Возвращает цепочку этапов по идентификатору - выпускающему этапу.
//
// Параметры:
//  Идентификатор	 - ДокументСсылка.ЭтапПроизводства2_2	 - выпускающий этап цепочки
//  Направление		 - НаправлениеСортировки				 - направление сортировки этапов в цепочке
// 
// Возвращаемое значение:
//  Массив - цепочка этапов
//
Функция ЦепочкаЭтапов(Идентификатор, Направление = Неопределено) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Таблица
	|	//ТекстСоединение
	|ГДЕ
	|	Таблица.ВыпускающийЭтап = &Идентификатор
	|	И НЕ Таблица.ПометкаУдаления
	|//ТекстУпорядочивание
	|";
	ТекстСоединение = "";
	ТекстУпорядочивание = "";
	Если Направление <> Неопределено Тогда
		ТекстСоединение = "
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафик
		|		ПО Таблица.Ссылка = НормативныйГрафик.ЭтапПроизводства
		|";
		Если Направление = НаправлениеСортировки.Возр Тогда
			ТекстУпорядочивание = "УПОРЯДОЧИТЬ ПО ЕСТЬNULL(НормативныйГрафик.ДлительностьДоЗапуска,0)";
		ИначеЕсли Направление = НаправлениеСортировки.Убыв Тогда
			ТекстУпорядочивание = "УПОРЯДОЧИТЬ ПО ЕСТЬNULL(НормативныйГрафик.ДлительностьДоВыпуска,0)";
		КонецЕсли;
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ТекстСоединение",ТекстСоединение);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ТекстУпорядочивание",ТекстУпорядочивание);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
	
КонецФункции

// Возвращает ближайших последователей
//
// Параметры:
//  Ссылка - Документ.ЭтапПроизводства2_2 - этап
// 
// Возвращаемое значение:
//   - Массив - массив ближайших последователей
//
Функция Последователи(Ссылка) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.Этап КАК Последователь
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка
		|	И Таблица.Этап.Проведен");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат Новый Массив;
		
	Иначе
		
		Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку(0);
		
	КонецЕсли;
	
КонецФункции

// Возвращает ближайших предшественников
//
// Параметры:
//  Ссылка - Документ.ЭтапПроизводства2_2 - этап
// 
// Возвращаемое значение:
//   - Массив - массив ближайших предшественников
//
Функция Предшественники(Ссылка) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Предшественник
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	Таблица.Этап = &Ссылка
		|	И Таблица.Ссылка.Проведен");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат Новый Массив;
		
	Иначе
		
		Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку(0);
		
	КонецЕсли;
	
КонецФункции

// Возвращает ближайшее окружение этапа
//
// Параметры:
//  Ссылка			 - Документ.ЭтапПроизводства2_2	 - этап
//  Предшественники	 - Массив - в параметр будут записаны предшественники.
//  Последователи	 - Массив - в параметр будут записаны последователи.
// 
// Возвращаемое значение:
//   - Массив - массив ближайших смежных этапов
//
Функция СмежныеЭтапы(Ссылка, Предшественники = Неопределено, Последователи = Неопределено) Экспорт
	
	Результат = Новый Массив;
	
	Предшественники = Предшественники(Ссылка);
	
	Для каждого Элемент Из Предшественники Цикл
		
		Результат.Добавить(Элемент);
		
	КонецЦикла;
	
	Последователи = Последователи(Ссылка);
	
	Для каждого Элемент Из Последователи Цикл
		
		Результат.Добавить(Элемент);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает всех последователей
//
// Параметры:
//  Ссылка - Документ.ЭтапПроизводства2_2 - этап
// 
// Возвращаемое значение:
//   - Массив - массив всех последователей
//
Функция ВсеПоследователи(Ссылка) Экспорт
	
	Идентификатор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Распоряжение");
	
	НаправлениеОбхода = УправлениеПроизводством.НаправлениеОбходаГрафаВперед();
	
	Вершина = ГрафЦепочкиЭтапов(Идентификатор, НаправлениеОбхода).Найти(Ссылка, "Ссылка");
	
	Если Вершина <> Неопределено Тогда
		Возврат УправлениеПроизводством.НайтиОкружениеВершины(Вершина);
	Иначе
		Возврат Новый Массив;
	КонецЕсли;
	
КонецФункции

// Возвращает всех предшественников
//
// Параметры:
//  Ссылка - Документ.ЭтапПроизводства2_2 - этап
// 
// Возвращаемое значение:
//   - Массив - массив всех предшественников
//
Функция ВсеПредшественники(Ссылка) Экспорт
	
	Идентификатор = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Распоряжение");
	
	НаправлениеОбхода = УправлениеПроизводством.НаправлениеОбходаГрафаНазад();
	
	Вершина = ГрафЦепочкиЭтапов(Идентификатор, НаправлениеОбхода).Найти(Ссылка, "Ссылка");
	
	Если Вершина <> Неопределено Тогда
		Возврат УправлениеПроизводством.НайтиОкружениеВершины(Вершина);
	Иначе
		Возврат Новый Массив;
	КонецЕсли;
	
КонецФункции

// Текст запроса для создания временной таблицы ВТПоследователи.
//
Функция ТекстЗапросаВТПоследователи() Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка,
		|	Таблица.Этап   КАК Последователь
		|ПОМЕСТИТЬ ВТПоследователи
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&МассивСсылок)
		|	И Таблица.Этап.Проведен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Последователь";
		
	Возврат ТекстЗапроса;
	
КонецФункции

// Создает в менеджере временную таблицу ВТПоследователи.
//
// Параметры:
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц	 - менеджер временных таблиц
//  Этапы					 - Массив					 - этапы
//
Процедура СоздатьВТПоследователи(МенеджерВременныхТаблиц, Этапы) Экспорт
	
	Запрос = Новый Запрос(ТекстЗапросаВТПоследователи());
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ТипЗнч(Этапы) = Тип("Массив") Тогда
		МассивСсылок = Этапы;
	ИначеЕсли ТипЗнч(Этапы) = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(Этапы);
	КонецЕсли;

	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Текст запроса для создания временной таблицы ВТПредшественники.
//
Функция ТекстЗапросаВТПредшественники() Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Таблица.Этап   КАК Ссылка,
		|	Таблица.Ссылка КАК Предшественник
		|ПОМЕСТИТЬ ВТПредшественники
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	Таблица.Этап В (&МассивСсылок)
		|	И Таблица.Ссылка.Проведен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	Предшественник";
		
	Возврат ТекстЗапроса;
	
КонецФункции

// Создает в менеджере временную таблицу ВТПредшественники.
//
// Параметры:
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц	 - менеджер временных таблиц
//  Этапы					 - Массив					 - этапы
//
Процедура СоздатьВТПредшественники(МенеджерВременныхТаблиц, Этапы) Экспорт
	
	Запрос = Новый Запрос(ТекстЗапросаВТПредшественники());
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ТипЗнч(Этапы) = Тип("Массив") Тогда
		МассивСсылок = Этапы;
	ИначеЕсли ТипЗнч(Этапы) = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(Этапы);
	КонецЕсли;

	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Создает в менеджере временную таблицу ВТСвязиЭтапов.
//  Поля таблицы:
//  - Этап
//  - СледующийЭтап
//
// Параметры:
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц - менеджер для создания временной таблицы
//  МассивСсылок			 - Массив - этапы производства
//  ТолькоВнутренниеСвязи	 - Булево - признак, связи нужно получить в пределах одного распоряжения
//
Процедура СоздатьВТСвязиЭтапов(МенеджерВременныхТаблиц, МассивСсылок, ТолькоВнутренниеСвязи = Ложь) Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Этап,
		|	Таблица.Этап   КАК СледующийЭтап
		|ПОМЕСТИТЬ ВТСвязиЭтапов
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&МассивСсылок)
		|	И Таблица.Этап.Проведен
		|	И &ОтборПоТипуСвязи
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка,
		|	Таблица.Этап
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	Таблица.Этап В (&МассивСсылок)
		|	И Таблица.Ссылка.Проведен
		|	И &ОтборПоТипуСвязи
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Этап,
		|	СледующийЭтап";
		
	Если ТолькоВнутренниеСвязи Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоТипуСвязи", 
			"Таблица.Ссылка.Распоряжение = Таблица.Этап.Распоряжение");
		
	Иначе
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &ОтборПоТипуСвязи", "");
		
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Создает в менеджере временную таблицу ВТСвязиЭтапов.
//  Поля таблицы:
//  - Этап
//  - СледующийЭтап
//
// Параметры:
//  МенеджерВременныхТаблиц	 - МенеджерВременныхТаблиц - менеджер для создания временной таблицы
//  Распоряжение			 - ДокументСсылка.ЗаказНаПроизводство2_2 - распоряжение
//  ТолькоВнутренниеСвязи	 - Булево - признак, связи нужно получить в пределах одного распоряжения
//
Процедура СоздатьВТСвязиЭтаповПоРаспоряжению(МенеджерВременныхТаблиц, Распоряжение, ТолькоВнутренниеСвязи = Ложь) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Этап,
		|	Таблица.Этап   КАК СледующийЭтап
		|ПОМЕСТИТЬ ВТСвязиЭтапов
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка.Распоряжение = &Распоряжение
		|	И Таблица.Ссылка.Проведен
		|	И Таблица.Этап.Проведен
		|	И (&ТолькоВнутренниеСвязи И Таблица.Этап.Распоряжение = &Распоряжение
		|			ИЛИ НЕ &ТолькоВнутренниеСвязи)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка,
		|	Таблица.Этап
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	НЕ &ТолькоВнутренниеСвязи
		|	И Таблица.Этап.Распоряжение = &Распоряжение
		|	И Таблица.Ссылка.Проведен
		|	И Таблица.Этап.Проведен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Этап,
		|	СледующийЭтап");
		
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
	Запрос.УстановитьПараметр("ТолькоВнутренниеСвязи", ТолькоВнутренниеСвязи);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Выполняет поиск циклов в цепочке этапов
//  в качестве идентификатора может быть передан заказ на производство
//  или выпускающий этап цепочки
//
// Параметры:
//  Идентификатор	 - ДокументСсылка.ЗаказНаПроизводство2_2, ДокументСсылка.ЭтапПроизводства2_2 - Идентификатор цепочки.
//  ЭтапОшибка		 - ДокументСсылка.ЭтапПроизводства2_2 - Ссылка на этап, в котором обнаружено зацикливание.
// 
// Возвращаемое значение:
//   - Булево - Истина, если цикл найден
//
Функция ЕстьЦиклыВЦепочкеЭтапов(Идентификатор, ЭтапОшибка = Неопределено) Экспорт
	
	Граф = ГрафЦепочкиЭтапов(Идентификатор);
	
	Возврат УправлениеПроизводством.ЕстьЦиклыВГрафе(Граф, ЭтапОшибка);
	
КонецФункции

// Возвращает назначения всех этапов цепочки
//
// Параметры:
//  Ссылка - Документ.ЭтапПроизводства2_2 - выпускающий этап
// 
// Возвращаемое значение:
//   - Массив - массив назначений
//
Функция НазначенияЦепочкиЭтапов(Ссылка) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЭтапыЦепочки.Назначение
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ЭтапыЦепочки
		|ГДЕ
		|	ЭтапыЦепочки.ВыпускающийЭтап = &Ссылка");
		
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Возврат Новый Массив;
		
	Иначе
		
		Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку(0);
		
	КонецЕсли;
	
КонецФункции

// Возвращает назначения этапов
//
// Параметры:
//  МассивСсылок - Массив - массив этапов
//  РезультатВМассив - Булево - признак, результатом должен быть массив назначений
// 
// Возвращаемое значение:
//   - Массив, Соответствие - назначений этапов
//
Функция НазначенияЭтапов(МассивСсылок, РезультатВМассив = Ложь) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.Назначение КАК Назначение,
		|	Таблица.Ссылка     КАК Ссылка
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&МассивСсылок)");
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Если РезультатВМассив Тогда
	
		Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
		
	Иначе
		
		Результат = Новый Соответствие;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Результат.Вставить(Выборка.Ссылка, Выборка.Назначение);
		КонецЦикла;
		
		Возврат Результат;
		
	КонецЕсли;
	
КонецФункции

// Возвращает этапы по назначению
//
// Параметры:
//  МассивСсылок - Массив - массив назначений
//  РезультатВМассив - Булево - признак, результатом должен быть массив этапов
// 
// Возвращаемое значение:
//   - Массив, Соответствие - найденные этапы
//
Функция НайтиЭтапыПоНазначению(МассивСсылок, РезультатВМассив = Ложь) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка     КАК Ссылка,
	|	Таблица.Назначение КАК Назначение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Таблица
	|ГДЕ
	|	Таблица.Назначение В (&МассивСсылок)");
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Если РезультатВМассив Тогда
	
		Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
		
	Иначе
		
		Результат = Новый Соответствие;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Результат.Вставить(Выборка.Назначение, Выборка.Ссылка);
		КонецЦикла;
		
		Возврат Результат;
		
	КонецЕсли;

КонецФункции

// Возвращает основное выходное изделие цепочки этапов (определяется по первой строке)
//
// Параметры:
//  Ссылка - Документ.ЭтапПроизводства2_2 - этап производства.
// 
// Возвращаемое значение:
//   - Структура - номенклатура и характеристика основного изделия.
//
Функция ОсновноеИзделиеЦепочкиЭтапов(Ссылка) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЭтапПроизводства22.ВыпускающийЭтап.ОсновноеИзделиеНоменклатура КАК Номенклатура,
		|	ЭтапПроизводства22.ВыпускающийЭтап.ОсновноеИзделиеХарактеристика КАК Характеристика
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства22
		|ГДЕ
		|	ЭтапПроизводства22.Ссылка = &Ссылка");
		
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Результат = Новый Структура("Номенклатура, Характеристика");
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Выбирает из переданного списка этапы-назначения обособленного обеспечения
//
// Параметры:
//  МассивСсылок - Массив - массив этапов
// 
// Возвращаемое значение:
//  - Массив - массив этапов
//
Функция ВыбратьЭтапыНазначения(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрЗаменить(
		"ВЫБРАТЬ
		|	Таблица.Ссылка
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&МассивСсылок)
		|	И &ИспользуетсяОбособлениеПоЭтапамПроизводства",
		"&ИспользуетсяОбособлениеПоЭтапамПроизводства", 
		Документы.ЗаказНаПроизводство2_2.ТекстПоляИспользуетсяОбособлениеПоЭтапамПроизводства("Таблица.Распоряжение"));
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
	
КонецФункции

// Возвращает список общих реквизитов цепочки этапов
//
// Параметры:
//  ВключитьРеквизитыРаспоряжения				 - Булево	 - признак, список необходимо дополнить реквизитами распоряжения
// 
// Возвращаемое значение:
//   - Массив - общие реквизиты цепочки этапов
//
Функция ОбщиеРеквизитыЦепочкиЭтапов(ВключитьРеквизитыРаспоряжения = Ложь) Экспорт
	
	Реквизиты = Новый Массив;
	
	Реквизиты.Добавить("Распоряжение");
	
	Реквизиты.Добавить("Спецификация");
	Реквизиты.Добавить("Запланировано");
	
	Реквизиты.Добавить("НазначениеПродукция");
	
	Реквизиты.Добавить("ВыпускающийЭтап");
	
	Если ВключитьРеквизитыРаспоряжения Тогда
		
		Реквизиты.Добавить("Организация");
		Реквизиты.Добавить("НаправлениеДеятельности");
		Реквизиты.Добавить("ВыпускПодДеятельность");
		Реквизиты.Добавить("ХозяйственнаяОперация");
		Реквизиты.Добавить("Партнер");
		Реквизиты.Добавить("Договор");
		
	КонецЕсли;
	
	Возврат Реквизиты;
	
КонецФункции

// Возвращает значения общих реквизитов цепочки этапов
//
// Параметры:
//  ВыпускающийЭтап					 - Документ.ЭтапПроизводства2_2	 - выпускающий этап
//  ВключитьРеквизитыРаспоряжения	 - Булево						 - признак, список необходимо дополнить реквизитами распоряжения
// 
// Возвращаемое значение:
//   - Структура - значения общих реквизитов цепочки этапов
//
Функция ЗначенияОбщихРеквизитовЦепочки(ВыпускающийЭтап, ВключитьРеквизитыРаспоряжения = Ложь) Экспорт
	
	Реквизиты = СтрСоединить(ОбщиеРеквизитыЦепочкиЭтапов(ВключитьРеквизитыРаспоряжения), ",");
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВыпускающийЭтап, Реквизиты);
	
КонецФункции

#КонецОбласти

#Область УправлениеЭтапами

// Формирует/перезаполняет этапы производства и обосабливает выпуск полуфабрикатов, производимых на этапе.
// Тем самым удовлетворяются потребности производства в продукции и полуфабрикатах.
//
// Параметры:
//  Параметры - Структура - настройки формирования и заполнения документов со свойствами:
//		* Распоряжения - Массив - массив заказов, потребности которых необходимо обеспечить.
//		* Этапы - Массив - массив этапов производства, потребности которых необходимо обеспечить.
//		* ВариантыОбеспечения - Массив - содержит перечень доступных для заполнения вариантов обеспечения.
//  АдресХранилища - Строка - адрес хранилища, в которое будет помещен результат. Результатом является
//		количество записанных документов.
//
Процедура ОбеспечитьПотребностиПроизводстваВПродукцииИПолуфабрикатах(Параметры, АдресХранилища) Экспорт
	
	КлючеваяОперация = "МежцеховоеУправление2_2.ФормированиеЭтаповПроизводства";
	ОписаниеЗамера = Производительность.НачатьЗамерВремени(КлючеваяОперация);
	
	Результат = ОбеспечитьПотребностиПроизводстваВнутриЗамераВремени(Параметры);
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
	Производительность.ЗакончитьЗамерВремени(ОписаниеЗамера, Результат.СформированоДокументов);
	
КонецПроцедуры

// Создает новые/изменяет существующие этапы производства, принадлежащие заданной цепочке.
// 
// Параметры:
//	Параметры - Структура - параметры изменения этапов:
// 		* ЦепочкаЭтапов - ТаблицаЗначений - содержит данные, в соответствии с которыми необходимо изменить/дополнить
//			цепочку этапов производства. Колонки:
//			** НомерЭтапа - Число - номер этапа.
//			** НомерСледующегоЭтапа - Число - номер следующего этапа.
//			** НаименованиеЭтапа - Строка - наименование этапа.
//			** Подразделение - СправочникСсылка.СтруктураПредприятия - подразделение, в котором выполняется этап.
//			** Этап - ДокументСсылка.ЭтапПроизводства2_2 - ссылка на документ, который необходимо изменить. Если не
//				заполнено, то будет создан новый документ.
//			** ПометитьНаУдаление - Булево - флаг, отмечающий необходимость пометки данного этапа на удаление.
//				Значение "ИСТИНА" имеет смысл только в том случае, если заполнена колонка "Этап".
//  	* ВыпускающийЭтап - ДокументСсылка.ЭтапПроизводства2_2 - этап, идентифицирующий изменяемую цепочку.
//  АдресХранилища - УникальныйИдентификатор, Строка - адрес во временном хранилище, по которому будет
//		помещен результат работы процедуры - ссылка на выпускающий этап.
//
Процедура МодифицироватьЦепочкуЭтапов(Параметры, АдресХранилища) Экспорт
	
	Распоряжение    = Параметры.Распоряжение;
	ВыпускающийЭтап = Параметры.ВыпускающийЭтап;
	ЦепочкаЭтапов   = Параметры.ЦепочкаЭтапов;
	Потребность     = Параметры.Потребность;
	
	ЦепочкаЭтапов.Колонки.Добавить("СоздатьЭтап", Новый ОписаниеТипов("Булево"));
	Для каждого Строка Из ЦепочкаЭтапов Цикл
		Если НЕ ЗначениеЗаполнено(Строка.Этап) Тогда
			Строка.СоздатьЭтап = Истина;
			Строка.Этап = Документы.ЭтапПроизводства2_2.ПолучитьСсылку();
		КонецЕсли;
	КонецЦикла;
	
	СтрокаВыпускающийЭтап = ЦепочкаЭтапов.Найти(0, "НомерСледующегоЭтапа");
	НовыйВыпускающийЭтап = СтрокаВыпускающийЭтап.Этап;
	НовыеЭтапы = Новый Массив;
	
	ДанныеОснования = ДанныеЗаполненияДляМодификацииЦепочки(ВыпускающийЭтап, Распоряжение, Потребность);
	НомерЭтапаВПартииЗапуска = ДанныеОснования.ЗначенияЗаполнения.НомерЭтапаВПартииЗапуска;
	
	НачатьТранзакцию();
	Попытка
		
		Для каждого Строка Из ЦепочкаЭтапов Цикл
			
			ПоследующиеЭтапы = Новый Массив;
			СтруктураПоиска = Новый Структура("НомерЭтапа", Строка.НомерСледующегоЭтапа);
			НайденныеСтроки = ЦепочкаЭтапов.НайтиСтроки(СтруктураПоиска);
			Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				ПоследующиеЭтапы.Добавить(НайденнаяСтрока.Этап);
			КонецЦикла;
			
			Если Строка.Этап = НовыйВыпускающийЭтап Тогда
				ВыходныеИзделия = ДанныеОснования.ВыходныеИзделия;
			Иначе
				ВыходныеИзделия = Неопределено;
			КонецЕсли;
			
			Если Строка.СоздатьЭтап Тогда
				
				ЗначенияЗаполнения = Новый Структура(ДанныеОснования.ОбщиеРеквизиты);
				ЗаполнитьЗначенияСвойств(ЗначенияЗаполнения, ДанныеОснования.ЗначенияЗаполнения);
				
				ЗначенияЗаполнения.Вставить("НомерЭтапа", Строка.НомерЭтапа);
				ЗначенияЗаполнения.Вставить("НомерСледующегоЭтапа", Строка.НомерСледующегоЭтапа);
				
				ЗначенияЗаполнения.Вставить("НаименованиеЭтапа", Строка.НаименованиеЭтапа);
				ЗначенияЗаполнения.Вставить("Подразделение",     Строка.Подразделение);
				
				ЗначенияЗаполнения.Вставить("НомерПартииЗапуска", ДанныеОснования.ЗначенияЗаполнения.НомерПартииЗапуска);
				ЗначенияЗаполнения.Вставить("НомерЭтапаВПартииЗапуска", НомерЭтапаВПартииЗапуска);
				
				ЗначенияЗаполнения.Вставить("СсылкаНового", Строка.Этап);
				ЗначенияЗаполнения.Вставить("ВыпускающийЭтап", НовыйВыпускающийЭтап);
				
				НовыйДокумент = СоздатьИЗаполнитьЭтапПоДаннымПользователя(
					ЗначенияЗаполнения,
					ПоследующиеЭтапы,
					ВыходныеИзделия);
				НовыеЭтапы.Добавить(НовыйДокумент);
				
				НомерЭтапаВПартииЗапуска = НомерЭтапаВПартииЗапуска + 1;
				
			Иначе
				
				ДокументОбъект = Строка.Этап.ПолучитьОбъект();
				
				ДокументОбъект.Заблокировать();
				
				Если Не Строка.ПометитьНаУдаление Тогда
					
					ДанныеЗаполнения = Новый Структура;
					
					ДанныеЗаполнения.Вставить("ВыпускающийЭтап", НовыйВыпускающийЭтап);
					ДанныеЗаполнения.Вставить("ВыходныеИзделия", ВыходныеИзделия);
					
					ДанныеЗаполнения.Вставить("ПоследующиеЭтапы", ПоследующиеЭтапы);
					
					ДанныеЗаполнения.Вставить("НомерЭтапа", Строка.НомерЭтапа);
					ДанныеЗаполнения.Вставить("НомерСледующегоЭтапа", Строка.НомерСледующегоЭтапа);
					
					ДокументОбъект.ИзменитьПорядокСледования(ДанныеЗаполнения);
					
					// при изменении порядка следования этапов изменяется состав выходных изделий, 
					//  необходимо выполнить проверку заполнения (требуется для переработке на стороне).
					Если Не ДокументОбъект.ПроверитьЗаполнение() Тогда
						
						Если ДокументОбъект.Статус <> Перечисления.СтатусыЭтаповПроизводства2_2.Сформирован Тогда
							
							ТекстИсключения = НСтр("ru='Ошибка изменения документа: %1'");
							ВызватьИсключение СтрШаблон(ТекстИсключения, Строка.Этап);
							
						КонецЕсли;
						ДокументОбъект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Формируется;
						
					КонецЕсли;
					
					ДокументОбъект.ОтключитьЗаполнениеНормативногоГрафикаПриЗаписи();
					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
					
				Иначе
					
					ДокументОбъект.УстановитьПометкуУдаления(Истина);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
 		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Этап производства.Модификация цепочки'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка
			,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ВызватьИсключение;
		
	КонецПопытки;
	
	Распоряжения = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Распоряжение);
	РассчитатьНормативныйГрафик(Распоряжения);
	
	Если НовыеЭтапы.Количество() > 0
		И УправлениеПроизводствомПовтИсп.ИспользуетсяГрафикПроизводства() Тогда
		
		РегистрыСведений.ЗаданияКРасчетуГрафикаПроизводства.ДобавитьЗадания(НовыеЭтапы);
		
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(НовыйВыпускающийЭтап, АдресХранилища);
	
КонецПроцедуры

// Заполняет документы по данным завершенных производственных операций.
//
// Параметры:
//  Параметры - Структура - параметры заполнения этапа.
//
Процедура ЗаполнитьПоПроизводственнымОперациям(Параметры) Экспорт
	
	ДокументСсылка = Параметры.ДокументСсылка;
	
	НомерЗадания = Неопределено;
	Если Параметры.Свойство("НомерЗадания", НомерЗадания) Тогда
		ОписаниеОшибки = Неопределено;
		Если НЕ РегистрыСведений.ЗаданияКЗаполнениюЭтаповПроизводства.ПроверитьОжидатьЗавершениеЗаписиИсточника(
					ДокументСсылка,
					НомерЗадания,
					ОписаниеОшибки
			) Тогда
			ЗаписатьОшибкуЗаполненияПоОперациям(ДокументСсылка, ОписаниеОшибки);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЕстьОшибки = Ложь;
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	Попытка
		
		ЗаблокироватьДанныеДляРедактирования(ДокументСсылка);
		
		ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		ДокументОбъект.ЗаполнитьПоПроизводственнымОперациям();
		
		Если Не ДокументОбъект.ПроверитьЗаполнение() Тогда
			ВызватьИсключение НСтр("ru='Ошибка проверки заполнения документа!'");
		КонецЕсли;
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
		Если НомерЗадания <> Неопределено Тогда
			РегистрыСведений.ЗаданияКЗаполнениюЭтаповПроизводства.УдалитьЗадания(ДокументСсылка, НомерЗадания);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ЗаписатьОшибкуЗаполненияПоОперациям(ДокументСсылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЕстьОшибки = Истина;
		
	КонецПопытки;
	
	Если Не ЕстьОшибки И НомерЗадания <> Неопределено Тогда
		РегистрыСведений.ЗаданияКЗаполнениюЭтаповПроизводства.ПроверитьНаличиеЗаданийКЗаполнениюПоОперациям(ДокументСсылка);
	КонецЕсли;
	
КонецПроцедуры

// Помечает на удаление цепочки этапов по переданному отбору.
//
// Параметры:
//  Отбор               - ДокументСсылка.ЗаказНаПроизводство2_2,ДокументСсылка.ЭтапПроизводства2_2 - отбор
//  ВключатьПодчиненные - Булево - определяет, будут ли помечены на удаление подчиненные цепочки 
// 
// Возвращаемое значение:
//  Структура - результат
//
Функция ПометитьНаУдалениеЭтапы(Отбор, ВключатьПодчиненные = Истина) Экспорт
	
	Результат = Новый Структура("КоличествоОбработано,ЕстьОшибки,ОшибкаСсылка",0,Ложь);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафик
		|			ПО Таблица.Ссылка = НормативныйГрафик.ЭтапПроизводства
		|
		|ГДЕ
		|	Таблица.ВыпускающийЭтап = Таблица.Ссылка И НЕ Таблица.ПометкаУдаления
		|	//&Отбор
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЕСТЬNULL(НормативныйГрафик.ДлительностьДоЗапуска,0)
		|");
	
	УстановленыОтборы = Ложь;
	Если ЗначениеЗаполнено(Отбор) Тогда
		
		ТипОтбора = ТипЗнч(Отбор);
		ДоступныеОтборы = Новый Структура;
		Если ТипОтбора = Тип("ДокументСсылка.ЗаказНаПроизводство2_2") Тогда
			ДоступныеОтборы.Вставить("Распоряжение", Отбор);
		ИначеЕсли ТипОтбора = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
			ДоступныеОтборы.Вставить("ВыпускающийЭтап", ?(ВключатьПодчиненные,ВсеПредшественники(Отбор),Отбор));
		КонецЕсли;
		
		ТекстОтбора = "";
		
		Для каждого КлючЗначение Из ДоступныеОтборы Цикл
			
			ТекстОтбора = 
				ТекстОтбора
				+ " И Таблица."
				+ КлючЗначение.Ключ
				+ " В(&"
				+ КлючЗначение.Ключ
				+ ")";
			Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
			
			УстановленыОтборы = Истина;
			
		КонецЦикла;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//&Отбор", ТекстОтбора);
		
	КонецЕсли;
	Если Не УстановленыОтборы Тогда
		Возврат Результат;
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ВыпускающийЭтап = Выборка.Ссылка;
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("Документ.ЭтапПроизводства2_2");
			ЭлементБлокировки.УстановитьЗначение("ВыпускающийЭтап", ВыпускающийЭтап);
			
			Блокировка.Заблокировать();
			
			ЦепочкаЭтапов = ЦепочкаЭтапов(ВыпускающийЭтап, НаправлениеСортировки.Возр);
			
			Если ЦепочкаЭтапов.ВГраница() = -1 Тогда
				ВызватьИсключение НСтр("ru = 'Ошибка чтения цепочки этапов по идентификатору'");
			КонецЕсли;
			
			Для каждого СсылкаНаОбъект Из ЦепочкаЭтапов Цикл
				
				ДокументОбъект = СсылкаНаОбъект.ПолучитьОбъект();
				ДокументОбъект.УстановитьПометкуУдаления(Истина);
				
				Результат.КоличествоОбработано = Результат.КоличествоОбработано + 1;
				
			КонецЦикла;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			Результат.ЕстьОшибки = Истина;
			Результат.ОшибкаСсылка = ВыпускающийЭтап;
			
			СобытиеЖурналаРегистрации = ПроизводствоСервер.СобытиеПометкаНаУдалениеЭтапов();
			
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Не удалось пометить на удаление цепочку этапов: %1 по причине: %2'"),
								ВыпускающийЭтап,
								ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации, УровеньЖурналаРегистрации.Ошибка, ВыпускающийЭтап.Метаданные(), ВыпускающийЭтап, ТекстСообщения);
			
			Прервать;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ГрафикПроизводства

// Возвращает статусы документа, находясь в которых он может быть запланирован в графике производства.
// 
// Возвращаемое значение:
//  Массив - массив статусов документа.
//
Функция СтатусыЭтапМожетБытьЗапланирован() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.Формируется);
	Результат.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.Сформирован);
	Результат.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.КВыполнению);
	
	Возврат Результат;
	
КонецФункции

// Период выполнения этапа по графику производства
//
// Параметры:
//  Ссылка - ДокументСсылка.ЭтапПроизводства2_2 - Этап производства.
// 
// Возвращаемое значение:
//   - Структура - период выполнения этапа по графику производства
//
Функция ГрафикПроизводства(Ссылка) Экспорт
	
	Результат = УправлениеПроизводствомКлиентСервер.СтруктураРазмещенияЭтапаВГрафике();
	
	Если Ссылка.Пустая() Тогда
		Возврат Результат;
	КонецЕсли;
	
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(Ссылка);
	
	ГрафикПроизводства = РегистрыСведений.ГрафикЭтаповПроизводства2_2.ГрафикПроизводства(МассивСсылок);
	
	Если ГрафикПроизводства.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(Результат, ГрафикПроизводства[0]);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Период выполнения этапа по нормативному графику производства
//
// Параметры:
//  Ссылка - ДокументСсылка.ЭтапПроизводства2_2 - Этап производства.
// 
// Возвращаемое значение:
//   - Структура - период выполнения этапа по нормативному графику производства
//
Функция НормативныйГрафикПроизводства(Ссылка) Экспорт
	
	Результат = УправлениеПроизводствомКлиентСервер.СтруктураРазмещенияЭтапаВГрафике();
	
	Если Ссылка.Пустая() Тогда
		Возврат Результат;
	КонецЕсли;
	
	МассивСсылок = Новый Массив;
	МассивСсылок.Добавить(Ссылка);
	
	ГрафикПроизводства = РегистрыСведений.НормативныйГрафикЭтаповПроизводства.ГрафикПроизводства(МассивСсылок);
	
	Если ГрафикПроизводства.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(Результат, ГрафикПроизводства[0]);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Плановая дата поступления изделий 
//
// Если график производства используется, то дата окончания этапа из графика,
//  иначе плановая дата по нормативному графику.
//
// Параметры:
//  Ссылка - ДокументСсылка.ЭтапПроизводства2_2 - Этап производства.
// 
// Возвращаемое значение:
//   - Дата - плановая дата поступления изделий 
//
Функция ПлановаяДатаПоступления(Ссылка) Экспорт
	
	Если УправлениеПроизводствомПовтИсп.ИспользуетсяГрафикПроизводства() Тогда
		ГрафикПроизводства = ГрафикПроизводства(Ссылка);
	Иначе
		ГрафикПроизводства = НормативныйГрафикПроизводства(Ссылка);
	КонецЕсли;
	
	Возврат ПлановаяДатаПоступленияПоГрафику(ГрафикПроизводства);
	
КонецФункции

// Плановая дата поступления изделий 
//
// Параметры:
//  ГрафикПроизводства - Структура - см. УправлениеПроизводствомКлиентСервер.СтруктураРазмещенияЭтапаВГрафике()
// 
// Возвращаемое значение:
//   - Дата - плановая дата поступления изделий 
//
Функция ПлановаяДатаПоступленияПоГрафику(ГрафикПроизводства) Экспорт
	
	Возврат НачалоДня(ГрафикПроизводства.ОкончаниеЭтапа);
	
КонецФункции

// Обновляет график движения товаров после расчета графика производства
//
// Параметры:
//  Этапы - Массив - Список этапов производства
//
Процедура ОбновитьПланируемоеПоступлениеТоваров(Этапы) Экспорт
	
	ЛокальнаяТранзакция = НЕ ТранзакцияАктивна();
	
	Если ЛокальнаяТранзакция Тогда
		НачатьТранзакцию();
	КонецЕсли;
	
	Регистры = Новый Структура;
	
	МенеджерРегистра = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени("РегистрНакопления.ДвижениеТоваров");
	Регистры.Вставить("ДвижениеТоваров", МенеджерРегистра);
	
	МенеджерРегистра = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени("РегистрНакопления.ОбеспечениеЗаказов");
	Регистры.Вставить("ОбеспечениеЗаказов", МенеджерРегистра);
	
	МенеджерРегистра = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени("РегистрНакопления.ПродукцияИПолуфабрикатыВПроизводстве");
	Регистры.Вставить("ПродукцияИПолуфабрикатыВПроизводстве", МенеджерРегистра);
	
	Попытка
	
		УстановитьПривилегированныйРежим(Истина);
		
		ЗаблокироватьЭтапы(Этапы);
		
		// Выполним ответственное чтение реквизитов
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ЭтапПроизводства22.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства22
			|ГДЕ
			|	ЭтапПроизводства22.Ссылка В(&Этапы)
			|	И ЭтапПроизводства22.Статус = &СтатусКВыполнению
			|	И ЭтапПроизводства22.Проведен");
			
		Запрос.УстановитьПараметр("Этапы", Этапы);
		Запрос.УстановитьПараметр("СтатусКВыполнению", Перечисления.СтатусыЭтаповПроизводства2_2.КВыполнению);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			Возврат;
		КонецЕсли;
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл

			ТекущийОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			ДополнительныеСвойства = ТекущийОбъект.ДополнительныеСвойства;
			
			ДополнительныеСвойства.Вставить("ЭтоНовый",    Ложь);
			ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
			
			ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(
						Выборка.Ссылка,
						ДополнительныеСвойства);
			
			Документы.ЭтапПроизводства2_2.ИнициализироватьДанныеДокумента(
						Выборка.Ссылка, 
						ДополнительныеСвойства, 
						Регистры);
			
			Для каждого КлючИЗначение Из Регистры Цикл
				
				ИмяРегистра = КлючИЗначение.Ключ;
				
				ДвиженияПоРегистру = ТекущийОбъект.Движения[ИмяРегистра];
				
				ТаблицаДвижений = ДополнительныеСвойства.ТаблицыДляДвижений["Таблица" + ИмяРегистра];
			
				Для каждого Запись Из ТаблицаДвижений Цикл
					
					ЗаполнитьЗначенияСвойств(ДвиженияПоРегистру.Добавить(), Запись);
					
				КонецЦикла;
				
				ДвиженияПоРегистру.Записывать = Истина;
				
			КонецЦикла;
	
			ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ТекущийОбъект);
			ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
			
			ТекущийОбъект = Неопределено;
			
		КонецЦикла;
		
		Если ЛокальнаяТранзакция Тогда
			ЗафиксироватьТранзакцию();
		КонецЕсли;
		
	Исключение
		
		Если ЛокальнаяТранзакция Тогда
			ОтменитьТранзакцию();
		КонецЕсли;
		
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

// Снимает признак ручного размещения в графике производства у этапов.
//
// Параметры:
//  Этапы - Массив - массив этапов производства, для которых необходимо снять признак ручного размещения в графике.
//	КонтролироватьПараметрыРазмещения - Булево - флаг, обозначающий что при записи этапа необходимо выполнить
//		контроль изменения параметров размещения в графике и соответственно при их изменении отметить этап
//		как требующий пересчета графика.
//
Процедура ОтменитьРучноеРазмещениеЭтаповВГрафике(Этапы, КонтролироватьПараметрыРазмещения) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.Ссылка КАК Этап
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Т
	|ГДЕ
	|	Т.Ссылка В(&Этапы)
	|	И Т.РучноеРазмещениеВГрафике
	|	И Т.Проведен");
	Запрос.УстановитьПараметр("Этапы", Этапы);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			
			ДокументОбъект = Выборка.Этап.ПолучитьОбъект();
			ДокументОбъект.Заблокировать();
			ДокументОбъект.РучноеРазмещениеВГрафике = Ложь;
			
			Если НЕ КонтролироватьПараметрыРазмещения Тогда
				ДокументОбъект.ОтключитьКонтрольПараметровРазмещенияВГрафике();
			КонецЕсли;
			ДокументОбъект.ОтключитьОбновлениеСостоянияЗаказа();
			
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			
		Исключение
		
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Этап производства.Отмена ручного размещения в графике'",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				,
				,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СтатусДокумента

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
//	МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
//	НовыйСтатус - Строка - Имя нового статуса
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Запрос - Запрос проверки перед сменой статуса
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыЭтаповПроизводства2_2[НовыйСтатус];
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка                КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
		|	ТаблицаДокументов.Статус                КАК ТекущийСтатус,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
		|	&Статус                                 КАК НовыйСтатус,
		|	ПРЕДСТАВЛЕНИЕ(&Статус)                  КАК ПредставлениеНовогоСтатуса,
		|	ВЫБОР
		|		КОГДА ТаблицаДокументов.Статус = &Статус
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                   КАК СтатусСовпадает,
		|	ТаблицаДокументов.Проведен              КАК Проведен,
		|	ТаблицаДокументов.ПометкаУдаления       КАК ПометкаУдаления,
		|	ИСТИНА                                  КАК ЗаписьПроведением,
		|	ТаблицаДокументов.ПроизводствоНаСтороне КАК ПроизводствоНаСтороне,
		|	ТаблицаДокументов.ЗаказПереработчику    КАК ЗаказПереработчику
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ТаблицаДокументов
		|ГДЕ
		|	ТаблицаДокументов.Ссылка В(&МассивДокументов)");
		
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
//	ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	НовыйСтатус - Перечисление - Новый статус
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Булево - Истина, в случае успешного завершения проверки
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Отказ = Ложь;
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыЭтаповПроизводства2_2[НовыйСтатус];
	
	Если ЗначениеНовогоСтатуса = Перечисления.СтатусыЭтаповПроизводства2_2.КВыполнению
		И УправлениеПроизводствомКлиентСервер.СравнениеСтатусовЭтапа(ЗначениеНовогоСтатуса, ВыборкаПроверки.ТекущийСтатус) < 0 Тогда
		
		ТекстОшибки = НСтр("ru='У документа %Документ% статус ""%Статус%"" не установлен, т.к. этап уже был передан к выполнению'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаПроверки.Ссылка);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%", ВыборкаПроверки.ПредставлениеНовогоСтатуса);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстОшибки,
					ВыборкаПроверки.Ссылка,
					"Статус",,
					Отказ); 
	
	ИначеЕсли ВыборкаПроверки.ПроизводствоНаСтороне 
			И ВыборкаПроверки.ЗаказПереработчику.Пустая()
			И (ЗначениеНовогоСтатуса = Перечисления.СтатусыЭтаповПроизводства2_2.Начат 
				ИЛИ ЗначениеНовогоСтатуса = Перечисления.СтатусыЭтаповПроизводства2_2.Завершен) Тогда
		
		ТекстОшибки = НСтр("ru='У документа %Документ% статус ""%Статус%"" не установлен, т.к. не оформлен заказ переработчику'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаПроверки.Ссылка);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%", ВыборкаПроверки.ПредставлениеНовогоСтатуса);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ТекстОшибки, 
					ВыборкаПроверки.Ссылка, 
					"Статус",, 
					Отказ); 
		
	КонецЕсли; 
	
	Возврат Не Отказ;
	
КонецФункции

#КонецОбласти

#Область Операции

// Возвращает статусы документа, в которых доступно исполнение с помощью производственных операций.
// 
// Возвращаемое значение:
//  Массив - массив статусов документа.
//
Функция СтатусыДоступноВыполнениеОпераций() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.Начат);
	Результат.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.Завершен);
	
	Возврат Результат;
	
КонецФункции

// Проверяет, требуется ли отразить выполнение операций для этапа
//
// Параметры:
//  ДокументСсылка	 - ДокументСсылка.ЭтапПроизводства2_2	 - этап производства
// 
// Возвращаемое значение:
//   - Булево - Истина, требуется отразить выполнение операций
//
Функция ТребуетсяОтразитьВыполнениеОпераций(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЭтапПроизводства22.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства22
		|ГДЕ
		|	ЭтапПроизводства22.Ссылка = &ДокументСсылка
		|	И ЭтапПроизводства22.Статус В (&ДоступныеСтатусы)
		|	И ЭтапПроизводства22.Подразделение.ИспользоватьПооперационноеУправление");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ДоступныеСтатусы", СтатусыДоступноВыполнениеОпераций());
	
	Возврат Не Запрос.Выполнить().Пустой()
	
КонецФункции

#КонецОбласти

#Область Представление

// Возвращает строку, формирующую представление этапа производства, для подстановки в текст запроса.
//
// Параметры:
//  СинонимТаблицыЭтапПроизводства - Строка - синоним таблицы запроса, получающей данные документа ЭтапПроизводства2_2.
// 
// Возвращаемое значение:
//  Строка - строка для подстановки в текст запроса.
//
Функция ТекстЗапросаПредставлениеЭтапа(СинонимТаблицыЭтапПроизводства) Экспорт
	
	Результат = "Т.Номер + "", "" + Т.НаименованиеЭтапа";
	Результат = СтрЗаменить(Результат, "Т", СинонимТаблицыЭтапПроизводства);
	
	Возврат Результат;
	
КонецФункции

// Формирует представление этапа производства по данным документа.
// Если представление необходимо получить в запросе, то следует
// воспользоваться функцией ТекстЗапросаПредставлениеЭтапа.
//
// Параметры:
//  ДанныеЭтапа - Структура - данные этапа для формирования представления:
//		* Номер - Строка
//		* НаименованиеЭтапа - Строка
// 
// Возвращаемое значение:
//  Строка - представление этапа производства.
//
Функция ПредставлениеЭтапа(ДанныеЭтапа) Экспорт
	
	Если ТипЗнч(ДанныеЭтапа) = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЭтапа, "Номер,НаименованиеЭтапа");
	Иначе
		Реквизиты = ДанныеЭтапа;
	КонецЕсли;
	
	Возврат СтрШаблон("%1, %2", Реквизиты.Номер, Реквизиты.НаименованиеЭтапа);
	
КонецФункции

// Формирует представление этапа производства по переданным ссылкам
//
// Параметры:
//  МассивСсылок - Массив - массив этапов
// 
// Возвращаемое значение:
//  Соответствие - представления этапов.
//
Функция ПредставлениеЭтапов(МассивСсылок) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = СтрЗаменить(
		"ВЫБРАТЬ
		|	&ПредставлениеЭтапа КАК Представление,
		|	Таблица.Ссылка      КАК Ссылка
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&МассивСсылок)",
		"&ПредставлениеЭтапа",
		ТекстЗапросаПредставлениеЭтапа("Таблица"));
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Результат = Новый Соответствие;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат.Вставить(Выборка.Ссылка, Выборка.Представление);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Формирует представление основного изделия этапа.
//
// Параметры:
//  Ссылка - Документ.ЭтапПроизводства2_2 - этап
// 
// Возвращаемое значение:
//  Строка - представление основного изделия.
//
Функция ОсновноеИзделиеПредставление(Ссылка) Экспорт
	
	ОсновноеИзделиеПредставление = "";
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЕСТЬNULL(Таблица.ВыпускающийЭтап.ОсновноеИзделиеНоменклатура.Наименование, """") КАК НоменклатураПредставление,
		|	ВЫБОР
		|		КОГДА Таблица.ВыпускающийЭтап.ОсновноеИзделиеХарактеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|				И Таблица.ВыпускающийЭтап.ОсновноеИзделиеНоменклатура.ИспользованиеХарактеристик В (
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры), 
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры), 
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры))
		|			ТОГДА Таблица.ВыпускающийЭтап.ОсновноеИзделиеХарактеристика.Наименование
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ХарактеристикаПредставление
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновныеИзделия.Номенклатура КАК Номенклатура,
		|	ОсновныеИзделия.Характеристика КАК Характеристика
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ОсновныеИзделия
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства
		|		ПО ОсновныеИзделия.Ссылка = ЭтапПроизводства.ВыпускающийЭтап
		|ГДЕ
		|	ЭтапПроизводства.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ОсновныеИзделия.Номенклатура,
		|	ОсновныеИзделия.Характеристика");
		
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ Результат[0].Пустой() Тогда

		Выборка = Результат[0].Выбрать();
		Выборка.Следующий();
		
		ОсновноеИзделиеПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
																	Выборка.НоменклатураПредставление, 
																	Выборка.ХарактеристикаПредставление);
		
		КоличествоИзделия = Результат[1].Выбрать().Количество();
	
		Если КоличествоИзделия > 1 Тогда
			
			ОсновноеИзделиеПредставление =
				ОсновноеИзделиеПредставление
				+ " "
				+ СтрШаблон(НСтр("ru='и еще %1 %2'"), 
					Формат(КоличествоИзделия-1, "ЧГ="),
					ОбщегоНазначенияУТКлиентСервер.ФормаМножественногоЧисла(
						НСтр("ru='изделие'"),
						НСтр("ru='изделия'"),
						НСтр("ru='изделий'"),
						КоличествоИзделия-1));
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ОсновноеИзделиеПредставление;
	
КонецФункции

#КонецОбласти

#Область ОбслуживаниеЗаданий

// Передает этапы к выполнению
//
// Параметры:
//  Параметры		 - Структура - параметры передачи
//  АдресХранилища	 - Строка	 - адрес хранилища, в которое будет помещен результат
//
Процедура ПередатьЭтапыКВыполнениюОтложенно(Параметры, АдресХранилища) Экспорт
	
	Перем Распоряжения;
	
	Если НЕ Параметры.Свойство("Распоряжения", Распоряжения) Тогда
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура("Количество", 0);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СостоянияЭтаповПроизводства.Этап КАК Ссылка
		|ИЗ
		|	РегистрСведений.СостоянияЭтаповПроизводства КАК СостоянияЭтаповПроизводства
		|ГДЕ
		|	СостоянияЭтаповПроизводства.Распоряжение В (&Распоряжения)
		|	И СостоянияЭтаповПроизводства.СостояниеНаМежцеховомУровне = &ГотовКВыполнению");

	Запрос.УстановитьПараметр("Распоряжения",     Распоряжения);
	Запрос.УстановитьПараметр("ГотовКВыполнению", Перечисления.СостоянияЭтаповНаМежцеховомУровне.ГотовКВыполнению);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		СтатусСформирован = Перечисления.СтатусыЭтаповПроизводства2_2.Сформирован;
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НачатьТранзакцию();
			Попытка
				
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить("Документ.ЭтапПроизводства2_2");
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
				Блокировка.Заблокировать();
				
				ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
				Если ДокументОбъект = Неопределено
					ИЛИ ДокументОбъект.Статус <> СтатусСформирован Тогда
					ЗафиксироватьТранзакцию();
					Продолжить;
				КонецЕсли;
				
				ДокументОбъект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.КВыполнению;
				
				ДокументОбъект.ОтключитьОбновлениеСостоянияЗаказа();
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				
				СобытиеЖурналаРегистрации = ПроизводствоСервер.СобытиеПередачаЭтаповКВыполнению();
				
				ТекстСообщения = НСтр("ru = 'Не удалось передать к выполнению этап: %Ссылка% по причине: %Причина%'");
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
				ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации, УровеньЖурналаРегистрации.Предупреждение, Выборка.Ссылка.Метаданные(), Выборка.Ссылка, ТекстСообщения);
				
			КонецПопытки;
			
			Результат.Количество = Результат.Количество + 1;
			
		КонецЦикла;
		
		РегистрыСведений.СостоянияЗаказовНаПроизводство.ОтразитьСостояние(Распоряжения);
		
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

// Помечает на удаление цепочки этапов по переданному отбору.
//
// Параметры:
//  Отбор		     - Структура - структура параметров
//  АдресХранилища	 - Строка	 - адрес хранилища, в которое будет помещен результат
//
Процедура ПометитьНаУдалениеЭтапыОтложенно(Отбор, АдресХранилища) Экспорт
	
	Если ТипЗнч(Отбор) = Тип("Массив") Тогда
		
		Результат = Новый Структура("КоличествоОбработано,ЕстьОшибки,ОшибкаСсылка",0,Ложь);
		Для каждого ЭлементОтбора Из Отбор Цикл
			
			РезультатПорции = ПометитьНаУдалениеЭтапы(ЭлементОтбора);
			
			Результат.КоличествоОбработано = Результат.КоличествоОбработано + РезультатПорции.КоличествоОбработано;
			
			Если РезультатПорции.ЕстьОшибки Тогда
				ЗаполнитьЗначенияСвойств(Результат,РезультатПорции,,"КоличествоОбработано");
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		Результат = ПометитьНаУдалениеЭтапы(Отбор);
		
	КонецЕсли;
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Возвращает подразделение-исполнитель этапа
//
// Параметры:
//  ДокументСсылка	 - ДокументСсылка.ЭтапПроизводства2_2	 - этап производства
// 
// Возвращаемое значение:
//   - СправочникСсылка.СтруктураПредприятия - подразделение исполнитель
//
Функция ПодразделениеИсполнитель(ДокументСсылка) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка, "Подразделение");
	
КонецФункции

// Определяет наличие права доступа "ДиспетчированиеЭтаповПроизводства" для текущего пользователя
// 
// Возвращаемое значение:
//   - Булево - Истина, если доступно диспетчирование этапов
//
Функция ДоступноДиспетчированиеЭтапов() Экспорт
	
	Возврат Пользователи.РолиДоступны("ДиспетчированиеЭтаповПроизводства");
	
КонецФункции

// Формирует временные таблицы документа, которые используются при проверке
//
// Параметры:
//  Объект	 - ДокументОбъект.ЭтапПроизводства2_2, ОбработкаОбъект.РедактированиеЭтаповПроизводства	 - объект, который нужно проверить
// 
// Возвращаемое значение:
//  МенеджерВременныхТаблиц - менеджер временных таблиц
//
Функция СформироватьВременныеТаблицыДляПроверки(Объект) Экспорт
	
	ТекстыЗапроса = Новый Массив;

	ЭтоПроверкаДокумента = ТипЗнч(Объект) = Тип("ДокументОбъект.ЭтапПроизводства2_2");
	
	ПроверятьТЧВыходныеИзделия = НЕ ЭтоПроверкаДокумента
								ИЛИ Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Начат
								ИЛИ Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Завершен
								ИЛИ Объект.ВыходныеИзделия.Количество() > 0;
	
	ПроверятьТЧПобочныеИзделия  = НЕ ЭтоПроверкаДокумента
								ИЛИ Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Начат
								ИЛИ Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Завершен
								ИЛИ Объект.ПобочныеИзделия.Количество() > 0;
	
	ПроверятьТЧОбеспечениеМатериаламиИРаботами = НЕ ЭтоПроверкаДокумента
												 ИЛИ Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Начат
												 ИЛИ Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Завершен
												 ИЛИ Объект.ОбеспечениеМатериаламиИРаботами.Количество() > 0;
										
	ПроверятьТЧРасходМатериаловИРабот = ЭтоПроверкаДокумента
										И (Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Начат
										ИЛИ Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Завершен);
										
	ПроверятьТЧЭкономияМатериалов     = ЭтоПроверкаДокумента
										И (Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Начат
										ИЛИ Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Завершен);
										
	ПроверятьТЧТрудозатраты           = ЭтоПроверкаДокумента
										И (Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Начат
										ИЛИ Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Завершен);
	
	Если ЭтоПроверкаДокумента Тогда
			
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	&Ссылка КАК Ссылка,
			|	&Статус КАК Статус,
			|	&ПроизводствоОднойДатой КАК ПроизводствоОднойДатой,
			|	&НеОтгружатьЧастями КАК НеОтгружатьЧастями,
			|	&РасходОднойДатой КАК РасходОднойДатой,
			|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
			|	&ПроизводствоНаСтороне КАК ПроизводствоНаСтороне,
			|	&ЗаказПереработчику КАК ЗаказПереработчику,
			|	&Подразделение КАК Подразделение
			|ПОМЕСТИТЬ РеквизитыЭтапов";
			
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
		Если ПроверятьТЧВыходныеИзделия Тогда
			
			ТекстЗапроса = 
				"ВЫБРАТЬ
				|	&Ссылка,
				|	ТабличнаяЧасть.НомерСтроки,
				|	ТабличнаяЧасть.Номенклатура,
				|	ТабличнаяЧасть.СписатьНаРасходы,
				|	ТабличнаяЧасть.СтатьяРасходов,
				|	ТабличнаяЧасть.Назначение,
				|	ТабличнаяЧасть.ЭтапПотребитель,
				|	ТабличнаяЧасть.Получатель,
				|	ТабличнаяЧасть.ДатаПроизводства,
				|	ТабличнаяЧасть.ДоляСтоимости,
				|	ТабличнаяЧасть.Произведено,
				|	0 КАК Цена,
				|	0 КАК Сумма
				|ПОМЕСТИТЬ ВыходныеИзделия
				|ИЗ
				|	&ВыходныеИзделия КАК ТабличнаяЧасть";
				
			ТекстыЗапроса.Добавить(ТекстЗапроса);
			
		КонецЕсли;
		
		Если ПроверятьТЧПобочныеИзделия Тогда
			
			ТекстЗапроса = 
				"ВЫБРАТЬ
				|	&Ссылка,
				|	ТабличнаяЧасть.НомерСтроки,
				|	ТабличнаяЧасть.Номенклатура,
				|	ТабличнаяЧасть.СписатьНаРасходы,
				|	ТабличнаяЧасть.СтатьяРасходов,
				|	ТабличнаяЧасть.Назначение,
				|	ТабличнаяЧасть.ЭтапПотребитель,
				|	ТабличнаяЧасть.Получатель,
				|	ТабличнаяЧасть.Произведено,
				|	ТабличнаяЧасть.Цена,
				|	ТабличнаяЧасть.Сумма,
				|	0 КАК ДоляСтоимости
				|ПОМЕСТИТЬ ПобочныеИзделия
				|ИЗ
				|	&ПобочныеИзделия КАК ТабличнаяЧасть";
				
			ТекстыЗапроса.Добавить(ТекстЗапроса);
			
		КонецЕсли;
		
		Если ПроверятьТЧОбеспечениеМатериаламиИРаботами Тогда
			
			ТекстЗапроса = 
				"ВЫБРАТЬ
				|	&Ссылка,
				|	ТабличнаяЧасть.НомерСтроки,
				|	ТабличнаяЧасть.Номенклатура,
				|	ТабличнаяЧасть.Характеристика,
				|	ТабличнаяЧасть.Упаковка,
				|	ТабличнаяЧасть.Количество,
				|	ТабличнаяЧасть.Склад,
				|	ТабличнаяЧасть.ДатаОтгрузки,
				|	ТабличнаяЧасть.ВариантОбеспечения,
				|	ТабличнаяЧасть.Производится,
				|	ТабличнаяЧасть.Спецификация,
				|	ТабличнаяЧасть.СтатьяКалькуляции
				|ПОМЕСТИТЬ ОбеспечениеМатериаламиИРаботами
				|ИЗ
				|	&ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть";
				
			ТекстыЗапроса.Добавить(ТекстЗапроса);
			
		КонецЕсли;
			
		Если ПроверятьТЧРасходМатериаловИРабот Тогда
			
			ТекстЗапроса = 
				"ВЫБРАТЬ
				|	&Ссылка КАК Ссылка,
				|	ТабличнаяЧасть.НомерСтроки,
				|	ТабличнаяЧасть.Номенклатура,
				|	ТабличнаяЧасть.Характеристика,
				|	ТабличнаяЧасть.Упаковка,
				|	ТабличнаяЧасть.ДатаРасхода,
				|	ТабличнаяЧасть.СтатьяКалькуляции,
				|	ТабличнаяЧасть.Количество
				|ПОМЕСТИТЬ РасходМатериаловИРабот
				|ИЗ
				|	&РасходМатериаловИРабот КАК ТабличнаяЧасть";
					
			ТекстыЗапроса.Добавить(ТекстЗапроса);
			
		КонецЕсли;
			
		Если ПроверятьТЧЭкономияМатериалов Тогда
			
			ТекстЗапроса = 
				"ВЫБРАТЬ
				|	&Ссылка КАК Ссылка,
				|	ТабличнаяЧасть.НомерСтроки,
				|	ТабличнаяЧасть.Номенклатура,
				|	ТабличнаяЧасть.Характеристика,
				|	ТабличнаяЧасть.СписатьНаРасходы,
				|	ТабличнаяЧасть.ДатаОперации,
				|	ТабличнаяЧасть.СтатьяРасходов,
				|	ТабличнаяЧасть.АналитикаРасходов,
				|	ТабличнаяЧасть.Склад,
				|	ТабличнаяЧасть.Упаковка,
				|	ТабличнаяЧасть.Количество
				|ПОМЕСТИТЬ ЭкономияМатериалов
				|ИЗ
				|	&ЭкономияМатериалов КАК ТабличнаяЧасть";
					
			ТекстыЗапроса.Добавить(ТекстЗапроса);
			
		КонецЕсли;
		
		Если ПроверятьТЧТрудозатраты Тогда
			
			ТекстЗапроса = 
				"ВЫБРАТЬ
				|	&Ссылка КАК Ссылка,
				|	ТабличнаяЧасть.НомерСтроки,
				|	ТабличнаяЧасть.Бригада,
				|	ТабличнаяЧасть.Выполнено,
				|	ТабличнаяЧасть.ДатаВыполнения
				|ПОМЕСТИТЬ Трудозатраты
				|ИЗ
				|	&Трудозатраты КАК ТабличнаяЧасть";
				
			ТекстыЗапроса.Добавить(ТекстЗапроса);
			
		КонецЕсли;
		
	Иначе	
		
		ТекстЗапроса = 
			"ВЫБРАТЬ
			|	РеквизитыЭтапов.Распоряжение КАК Ссылка,
			|	РеквизитыЭтапов.Статус КАК Статус,
			|	&ПроизводствоОднойДатой КАК ПроизводствоОднойДатой,
			|	&НеОтгружатьЧастями КАК НеОтгружатьЧастями,
			|	ВЫРАЗИТЬ(РеквизитыЭтапов.Заказ КАК Документ.ЗаказНаПроизводство2_2) КАК Распоряжение,
			|	РеквизитыЭтапов.ПроизводствоНаСтороне КАК ПроизводствоНаСтороне,
			|	ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) КАК ЗаказПереработчику,
			|	РеквизитыЭтапов.Подразделение КАК Подразделение
			|ПОМЕСТИТЬ ВТРеквизитыЭтаповВременная
			|ИЗ
			|	&РеквизитыЭтапов КАК РеквизитыЭтапов
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РеквизитыЭтапов.Ссылка КАК Ссылка,
			|	РеквизитыЭтапов.Статус КАК Статус,
			|	РеквизитыЭтапов.ПроизводствоОднойДатой КАК ПроизводствоОднойДатой,
			|	РеквизитыЭтапов.НеОтгружатьЧастями КАК НеОтгружатьЧастями,
			|	РеквизитыЭтапов.Распоряжение.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
			|	РеквизитыЭтапов.ПроизводствоНаСтороне КАК ПроизводствоНаСтороне,
			|	РеквизитыЭтапов.ЗаказПереработчику КАК ЗаказПереработчику,
			|	РеквизитыЭтапов.Подразделение КАК Подразделение
			|ПОМЕСТИТЬ РеквизитыЭтапов
			|ИЗ
			|	ВТРеквизитыЭтаповВременная КАК РеквизитыЭтапов
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	РеквизитыЭтапов.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТРеквизитыЭтаповВременная";
			
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
		Если ПроверятьТЧВыходныеИзделия Тогда
			
			ТекстЗапроса =
				"ВЫБРАТЬ
				|	ТабличнаяЧасть.Распоряжение КАК Ссылка,
				|	ТабличнаяЧасть.НомерСтроки,
				|	ТабличнаяЧасть.Номенклатура,
				|	ТабличнаяЧасть.Назначение,
				|	ТабличнаяЧасть.ЭтапПотребитель,
				|	ТабличнаяЧасть.Получатель,
				|	ЛОЖЬ КАК СписатьНаРасходы,
				|	ТабличнаяЧасть.ДоляСтоимости,
				|	0 КАК Цена,
				|	0 КАК Сумма,
				|	ЛОЖЬ КАК Произведено,
				|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов
				|ПОМЕСТИТЬ ВыходныеИзделия
				|ИЗ
				|	&ВыходныеИзделия КАК ТабличнаяЧасть";
					
			ТекстыЗапроса.Добавить(ТекстЗапроса);
			
		КонецЕсли;
		
		Если ПроверятьТЧПобочныеИзделия Тогда
			
			ТекстЗапроса =
				"ВЫБРАТЬ
				|	ТабличнаяЧасть.Распоряжение КАК Ссылка,
				|	ТабличнаяЧасть.НомерСтроки,
				|	ТабличнаяЧасть.Номенклатура,
				|	ТабличнаяЧасть.Назначение,
				|	ТабличнаяЧасть.ЭтапПотребитель,
				|	ТабличнаяЧасть.Получатель,
				|	ЛОЖЬ КАК СписатьНаРасходы,
				|	ТабличнаяЧасть.Цена,
				|	ТабличнаяЧасть.Сумма,
				|	ЛОЖЬ КАК Произведено,
				|	0 КАК ДоляСтоимости,
				|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов
				|ПОМЕСТИТЬ ПобочныеИзделия
				|ИЗ
				|	&ПобочныеИзделия КАК ТабличнаяЧасть";
				
			ТекстыЗапроса.Добавить(ТекстЗапроса);
			
		КонецЕсли;
		
		Если ПроверятьТЧОбеспечениеМатериаламиИРаботами Тогда
			
			ТекстЗапроса =
				"ВЫБРАТЬ
				|	ТабличнаяЧасть.Распоряжение КАК Ссылка,
				|	ТабличнаяЧасть.НомерСтроки,
				|	ТабличнаяЧасть.Номенклатура,
				|	ТабличнаяЧасть.Характеристика,
				|	ТабличнаяЧасть.Упаковка,
				|	ТабличнаяЧасть.Количество,
				|	ТабличнаяЧасть.Склад,
				|	ТабличнаяЧасть.ДатаОтгрузки,
				|	ТабличнаяЧасть.ВариантОбеспечения,
				|	ТабличнаяЧасть.Производится,
				|	ТабличнаяЧасть.Спецификация,
				|	ТабличнаяЧасть.СтатьяКалькуляции
				|ПОМЕСТИТЬ ОбеспечениеМатериаламиИРаботами
				|ИЗ
				|	&ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть";
				
			ТекстыЗапроса.Добавить(ТекстЗапроса);
			
		КонецЕсли;
			
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ТекстыЗапроса.Количество() > 1 Тогда
		
		ТекстЗапроса = УправлениеПроизводством.ОбъединитьТекстыЗапросаВПакет(ТекстыЗапроса);
		
		Запрос = Новый Запрос(ТекстЗапроса);
		
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("ПроизводствоОднойДатой", Объект.ПроизводствоОднойДатой);
		Запрос.УстановитьПараметр("НеОтгружатьЧастями", Объект.НеОтгружатьЧастями);
		
		Если ПроверятьТЧВыходныеИзделия Тогда
			Запрос.УстановитьПараметр("ВыходныеИзделия", Объект.ВыходныеИзделия.Выгрузить());
		КонецЕсли;
		
		Если ПроверятьТЧПобочныеИзделия Тогда
			Запрос.УстановитьПараметр("ПобочныеИзделия", Объект.ПобочныеИзделия.Выгрузить());
		КонецЕсли;
		
		Если ПроверятьТЧОбеспечениеМатериаламиИРаботами Тогда
			Запрос.УстановитьПараметр("ОбеспечениеМатериаламиИРаботами", Объект.ОбеспечениеМатериаламиИРаботами.Выгрузить());
		КонецЕсли;
		
		Если ПроверятьТЧРасходМатериаловИРабот Тогда
			Запрос.УстановитьПараметр("РасходМатериаловИРабот", Объект.РасходМатериаловИРабот.Выгрузить());
		КонецЕсли;
		
		Если ПроверятьТЧЭкономияМатериалов Тогда
			Запрос.УстановитьПараметр("ЭкономияМатериалов", Объект.ЭкономияМатериалов.Выгрузить());
		КонецЕсли;
		
		Если ПроверятьТЧТрудозатраты Тогда
			Запрос.УстановитьПараметр("Трудозатраты", Объект.Трудозатраты.Выгрузить());
		КонецЕсли;
		
		Если ЭтоПроверкаДокумента Тогда
			
			Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
			Запрос.УстановитьПараметр("Статус", Объект.Статус);
			Запрос.УстановитьПараметр("ХозяйственнаяОперация", Объект.ХозяйственнаяОперация);
			Запрос.УстановитьПараметр("ПроизводствоНаСтороне", Объект.ПроизводствоНаСтороне);
			Запрос.УстановитьПараметр("ЗаказПереработчику", Объект.ЗаказПереработчику);
			Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
			Запрос.УстановитьПараметр("РасходОднойДатой", Объект.РасходОднойДатой);
			
		Иначе
			
			Запрос.УстановитьПараметр("РеквизитыЭтапов", Объект.Этапы.Выгрузить());
			
		КонецЕсли;
		
		Результат = Запрос.Выполнить();
		
	КонецЕсли;
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

// Выполняет проверку заполнения реквизитов этапа
//
// Параметры:
//  Объект					- ДокументОбъект.ЭтапПроизводства2_2, ОбработкаОбъект.РедактированиеЭтаповПроизводства	 - объект, который нужно проверить
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит временные таблицы документа
//  Отказ					- Булево - присваивается Истина, если есть ошибки
//  ПроверяемыеРеквизиты	- Массив - параметр обработчика ОбработкаПроверкиЗаполнения
//
Процедура ПроверитьЗаполнениеОбъекта(Объект, МенеджерВременныхТаблиц, Отказ, ПроверяемыеРеквизиты) Экспорт

	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ЭтапПроизводства2_2") Тогда
		ЭтоПроверкаДокумента            = Истина;
		ВыполняетсяПакетноеФормирование = Объект.ВыполняетсяПакетноеФормирование();
	Иначе
		ЭтоПроверкаДокумента            = Ложь;
		ВыполняетсяПакетноеФормирование = Ложь;
	КонецЕсли;
	
	Если ЭтоПроверкаДокумента Тогда
		ПредставлениеОбеспечение = НСтр("ru = 'Обеспечение материалами и работами'");
	Иначе
		ПредставлениеОбеспечение = НСтр("ru = 'Сырье и материалы'");
	КонецЕсли; 
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.Назначение");
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.Получатель");
	МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.ДоляСтоимости");
	
	МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.Назначение");
	МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.Получатель");
	МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.Цена");
	МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.Сумма");
	
	МассивНепроверяемыхРеквизитов.Добавить("ОбеспечениеМатериаламиИРаботами.Спецификация");
	МассивНепроверяемыхРеквизитов.Добавить("ОбеспечениеМатериаламиИРаботами.Склад");
	МассивНепроверяемыхРеквизитов.Добавить("ОбеспечениеМатериаламиИРаботами.ДатаОтгрузки");
	МассивНепроверяемыхРеквизитов.Добавить("ОбеспечениеМатериаламиИРаботами.СтатьяКалькуляции");
	
	МассивНепроверяемыхРеквизитов.Добавить("Трудозатраты.Бригада");
	
	МассивНепроверяемыхРеквизитов.Добавить("РасходМатериаловИРабот.СтатьяКалькуляции");
	
	// Дата производства обязательна к заполнению:
	// - в собственном производстве после статуса "Начат"
	// - при производстве на стороне, если заказ переработчику создан
	#Область ПроверкаДатыПроизводства
	Если Не ЭтоПроверкаДокумента
		Или Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Начат
		Или Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Завершен
		Или ЭтоПроверкаДокумента И Не Объект.ЗаказПереработчику.Пустая() Тогда
		
		Если Объект.ПроизводствоОднойДатой Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.ДатаПроизводства");
			МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.ДатаПроизводства");
		КонецЕсли;
		Если Не Объект.ПроизводствоОднойДатой 
			ИЛИ Объект.ВыходныеИзделия.Количество() = 0 
				И Объект.ПобочныеИзделия.Количество() = 0 Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ДатаПроизводства");
		КонецЕсли;
		
	Иначе
		
		МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.ДатаПроизводства");
		МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.ДатаПроизводства");
		
		МассивНепроверяемыхРеквизитов.Добавить("ДатаПроизводства");
		
	КонецЕсли;
	#КонецОбласти
	
	Если ЭтоПроверкаДокумента И Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Сформирован
		ИЛИ НЕ Объект.НеОтгружатьЧастями
		ИЛИ Объект.ОбеспечениеМатериаламиИРаботами.Количество() = 0 Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ДатаОтгрузки");
		
	КонецЕсли;
	
	Если ЭтоПроверкаДокумента Тогда
		ЭтоВыпускающийЭтап = УправлениеПроизводствомКлиентСервер.ЭтоВыпускающийЭтап(Объект);
		Если ЭтоВыпускающийЭтап Тогда
			ПроверяемыеРеквизиты.Добавить("ВыходныеИзделия");
		ИначеЕсли НЕ ЭтоВыпускающийЭтап 
			И Объект.ПроизводствоНаСтороне Тогда
			ПроверяемыеРеквизиты.Добавить("ПобочныеИзделия");
		КонецЕсли;
	КонецЕсли;
	
	ПроверитьВыходныеИзделия(Объект, МенеджерВременныхТаблиц, Отказ);
	ПроверитьОбеспечениеМатериаламиИРаботами(Объект, МенеджерВременныхТаблиц, ПредставлениеОбеспечение, Отказ);
	
	// Проверка количества
	#Область ПроверкаКоличества
	
	ПроверитьЗаполнениеКоличестваВТЧ(Объект, "ВыходныеИзделия",                 МассивНепроверяемыхРеквизитов, Отказ);
	ПроверитьЗаполнениеКоличестваВТЧ(Объект, "ПобочныеИзделия",                 МассивНепроверяемыхРеквизитов, Отказ);
	ПроверитьЗаполнениеКоличестваВТЧ(Объект, "ОбеспечениеМатериаламиИРаботами", МассивНепроверяемыхРеквизитов, Отказ);
	
	Если ЭтоПроверкаДокумента
		И ( Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Начат
		ИЛИ Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Завершен) Тогда
		
		ПроверитьЗаполнениеКоличестваВТЧ(Объект, "РасходМатериаловИРабот", МассивНепроверяемыхРеквизитов, Отказ);
		ПроверитьЗаполнениеКоличестваВТЧ(Объект, "ЭкономияМатериалов",     МассивНепроверяемыхРеквизитов, Отказ);
		
	КонецЕсли;

	#КонецОбласти
	
	// Проверка характеристик
	#Область ПроверкаХарактеристик
	
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверки.ИмяТЧ = "ВыходныеИзделия";
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(Объект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
	
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверки.ИмяТЧ = "ПобочныеИзделия";
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(Объект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
	
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверки.ИмяТЧ = "ОбеспечениеМатериаламиИРаботами";
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(Объект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
	
	Если ЭтоПроверкаДокумента
		И ( Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Начат
		ИЛИ Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Завершен) Тогда
		
		ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
		ПараметрыПроверки.ИмяТЧ = "РасходМатериаловИРабот";
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(Объект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
		
		ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
		ПараметрыПроверки.ИмяТЧ = "ЭкономияМатериалов";
		НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(Объект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
	КонецЕсли;
	
	#КонецОбласти
	
	// Проверка заполнения серий
	#Область ПроверкаСерий
	Если ВыполняетсяПакетноеФормирование Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделия.Серия");
		МассивНепроверяемыхРеквизитов.Добавить("ВыходныеИзделияСерии.Серия");
		МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделия.Серия");
		МассивНепроверяемыхРеквизитов.Добавить("ПобочныеИзделияСерии.Серия");
		МассивНепроверяемыхРеквизитов.Добавить("ОбеспечениеМатериаламиИРаботами.Серия");
		МассивНепроверяемыхРеквизитов.Добавить("РасходМатериаловИРабот.Серия");
		МассивНепроверяемыхРеквизитов.Добавить("ЭкономияМатериалов.Серия");
		
	Иначе
		
		Если ЭтоПроверкаДокумента Тогда
			
			ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.ЭтапПроизводства2_2);
			НоменклатураСервер.ПроверитьЗаполнениеСерий(Объект, ПараметрыУказанияСерий.ВыходныеИзделия, Отказ, МассивНепроверяемыхРеквизитов);
			НоменклатураСервер.ПроверитьЗаполнениеСерий(Объект, ПараметрыУказанияСерий.ПобочныеИзделия, Отказ, МассивНепроверяемыхРеквизитов);
			НоменклатураСервер.ПроверитьЗаполнениеСерий(Объект, ПараметрыУказанияСерий.ОбеспечениеМатериаламиИРаботами, Отказ, МассивНепроверяемыхРеквизитов);
			
			Если Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Начат
				ИЛИ Объект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Завершен Тогда
				НоменклатураСервер.ПроверитьЗаполнениеСерий(Объект, ПараметрыУказанияСерий.РасходМатериаловИРабот, Отказ, МассивНепроверяемыхРеквизитов);
				НоменклатураСервер.ПроверитьЗаполнениеСерий(Объект, ПараметрыУказанияСерий.ЭкономияМатериалов, Отказ, МассивНепроверяемыхРеквизитов);
			КонецЕсли;
			
		Иначе
			ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(Объект, Обработки.РедактированиеЭтаповПроизводства);
			НоменклатураСервер.ПроверитьЗаполнениеСерий(Объект, ПараметрыУказанияСерий.ОбеспечениеМатериаламиИРаботами, Отказ, МассивНепроверяемыхРеквизитов);
		КонецЕсли;
		
	КонецЕсли;
	#КонецОбласти
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

// Возвращает список реквизитов обязательных к заполнению в статусе "Формируется"
//
// Параметры:
//  Объект	 - ДокументОбъект.ЭтапПроизводства2_2	 - объект, для которого нужно подготовить список реквизитов
// 
// Возвращаемое значение:
//   - Массив - список обязательных реквизитов в статусе "Формируется"
//
Функция СписокОбязательныхРеквизитовВСтатусеФормируется(Объект) Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("ВыходныеИзделия.Номенклатура");
	Результат.Добавить("ПобочныеИзделия.Номенклатура");
	
	Если НЕ Объект.ПланироватьРаботуВидовРабочихЦентров И НЕ Объект.РучноеРазмещениеВГрафике Тогда
		
		Результат.Добавить("ЕдиницаИзмеренияДлительностиЭтапа");
		
	КонецЕсли;
	
	Если Объект.ПланироватьРаботуВидовРабочихЦентров И НЕ Объект.РучноеРазмещениеВГрафике  Тогда
		
		Результат.Добавить("ЕдиницаИзмеренияПредварительногоБуфера");
		Результат.Добавить("ЕдиницаИзмеренияЗавершающегоБуфера");
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

// Заполняет реквизит "Цена" в побочном выпуске этапа производства
//
// Параметры:
//  Объект	 - ДокументОбъект	 - обрабатываемый документ
//
Процедура ЗаполнитьЦеныПоВидуЦен(Объект) Экспорт
	
	Если Объект.ВидЦены.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиКОбработке = Новый Массив;
	
	Для каждого Строка Из Объект.ПобочныеИзделия Цикл
		Если Строка.Произведено Тогда
			СтрокиКОбработке.Добавить(Строка);
		КонецЕсли;
		Строка.Цена  = 0;
		Строка.Сумма = 0;
	КонецЦикла;
	
	Если СтрокиКОбработке.Количество() > 0 Тогда
		
		ПараметрыЗаполнения = УправлениеПроизводствомКлиентСервер.ПараметрыЗаполненияЦенПобочногоВыпуска(
			Объект, 
			Константы.ВалютаУправленческогоУчета.Получить());
		
		ПродажиСервер.ЗаполнитьЦены(
			Объект.ПобочныеИзделия, // Табличная часть
			СтрокиКОбработке, // Массив строк или структура отбора
			ПараметрыЗаполнения, // Параметры заполнения
			Новый Структура( // Структура действий с измененными строками
				"ПересчитатьСумму",
				"КоличествоУпаковок"));
				
	КонецЕсли;
	
КонецПроцедуры

// Функция проверяет, требуется ли уточнить этапы для заказов
//
// Параметры:
//  Заказы - ДокументСсылка.ЗаказНаПроизводство2_2, Массив - Заказы на производство
// 
// Возвращаемое значение:
//   - Истина - требуется уточнить этапы
//
Функция ТребуетсяУточнитьЭтапы(Заказы) Экспорт
	
	МассивСсылок = УправлениеПроизводствомКлиентСервер.МассивЗначений(Заказы);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Таблица
		|ГДЕ
		|	Таблица.Распоряжение В (&МассивСсылок)
		|	И Таблица.Статус = &СтатусФормируется
		|	И Таблица.Проведен");
		
	Запрос.УстановитьПараметр("МассивСсылок",      МассивСсылок);
	Запрос.УстановитьПараметр("СтатусФормируется", Перечисления.СтатусыЭтаповПроизводства2_2.Формируется);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

#Область Инициализация

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;
	
	Возврат ИсточникиДанных; 
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ЭтапПроизводства2_2";
	СинонимТаблицыДокумента = "ТабличнаяЧасть";
	
	Если ИмяРегистра = "ДвижениеТоваров" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДвижениеТоваров(Неопределено, ТекстыЗапроса, Неопределено);
		
	ИначеЕсли ИмяРегистра = "ОбеспечениеЗаказов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаОбеспечениеЗаказов(Неопределено, ТекстыЗапроса, Неопределено);
		
	ИначеЕсли ИмяРегистра = "ГрафикОтгрузкиТоваров" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаГрафикОтгрузкиТоваров(Неопределено, ТекстыЗапроса, Неопределено);
		
	ИначеЕсли ИмяРегистра = "ПродукцияИПолуфабрикатыВПроизводстве" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаПродукцияИПолуфабрикатыВПроизводстве(Неопределено, ТекстыЗапроса, Неопределено);
		
	ИначеЕсли ИмяРегистра = "ТоварыНаСкладах" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыНаСкладах(Неопределено, ТекстыЗапроса, Неопределено);
		
	ИначеЕсли ИмяРегистра = "РаспоряженияНаПередачуИзПроизводства" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРаспоряженияНаПередачуИзПроизводства(Неопределено, ТекстыЗапроса, Неопределено);
		
	ИначеЕсли ИмяРегистра = "ДвиженияСерийТоваров" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДвиженияСерийТоваров(Неопределено, ТекстыЗапроса, Неопределено);
		
	ИначеЕсли ИмяРегистра = "ТоварыКПоступлению" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыКПоступлению(Неопределено, ТекстыЗапроса, ИмяРегистра);
		
	ИначеЕсли ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Неопределено, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ЭтапПроизводства2_2";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ПереопределениеРасчетаПараметров = ПереопределениеРасчетаПараметров(СинонимТаблицыДокумента + ".Ссылка");
	ПереопределениеРасчетаПараметров.Вставить("РабочийГрафик", РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
		
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("НакладнаяЯвляетсяРаспоряжением", ЗакупкиСервер.РаспоряжениеНаПриемкуТовараНакладная(Неопределено));
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
		ТекстЗапроса,
		ПолноеИмяДокумента,
		СинонимТаблицыДокумента,
		ПереопределениеРасчетаПараметров);
	
	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Если ДополнительныеСвойства.Свойство("ПериодЗаданияКРасчетуСебестоимости") Тогда
		Запрос.УстановитьПараметр("ПериодЗаданияКРасчетуСебестоимости", ДополнительныеСвойства.ПериодЗаданияКРасчетуСебестоимости);
	Иначе
		Запрос.УстановитьПараметр("ПериодЗаданияКРасчетуСебестоимости", Неопределено);
	КонецЕсли;
	
	ЗаполнитьПараметрыИнициализации(Запрос);
	ЗаполнитьПараметрыИнициализацииПоСсылке(Запрос);
	
	ТекстыЗапроса = ТекстыЗапросаДляФормированияДвижений(Запрос, Регистры);
	
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Функция ТекстыЗапросаДляФормированияДвижений(Запрос, Регистры = Неопределено)
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаУслугиДавальцуКОформлению(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаГрафикОтгрузкиТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВыпускПродукции(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗаказыМатериаловВПроизводство(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРаспоряженияНаПередачуИзПроизводства(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказовРаботами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТрудозатратыКОформлению(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗаказыКлиентов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗаказыПоставщикам(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПродукцияИПолуфабрикатыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДоступностьВидовРабочихЦентров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	Возврат ТекстыЗапроса;
	
КонецФункции

// Заполняет параметры запроса, которые не зависят от конкретного экземпляра документа.
//
// Параметры:
//  Запрос	- Запрос	запрос, инициализирующий данные документа.
//
Процедура ЗаполнитьПараметрыИнициализации(Запрос)
	
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	Запрос.УстановитьПараметр("ПустаяСсылкаНазначение",Справочники.Назначения.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСсылкаСклад", Справочники.Склады.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСсылкаПодразделение", Справочники.СтруктураПредприятия.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСсылкаРаспоряжение", Документы.ЗаказНаПроизводство2_2.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСсылкаЭтап", Документы.ЭтапПроизводства2_2.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСсылкаСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	Запрос.УстановитьПараметр(
		"РабочийГрафик", 
		РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	
	Запрос.УстановитьПараметр(
		"ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", 
		ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	Запрос.УстановитьПараметр(
		"ВалютаУпрУчета", 
		Константы.ВалютаУправленческогоУчета.Получить());
	
	Запрос.УстановитьПараметр(
		"ИспользуетсяНазначение", 
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	
	Запрос.УстановитьПараметр(
		"НакладнаяЯвляетсяРаспоряжением", 
		ЗакупкиСервер.РаспоряжениеНаПриемкуТовараНакладная(Неопределено));
	
	Запрос.УстановитьПараметр(
		"АналитическийУчетПоГруппамПродукции", 
		ПолучитьФункциональнуюОпцию("АналитическийУчетПоГруппамПродукции"));
		
	Запрос.УстановитьПараметр(
		"ИдентификаторМетаданных",
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных(Тип("ДокументСсылка.ЭтапПроизводства2_2")));
	
КонецПроцедуры

// Заполняет параметры запроса, которые зависят от конкретного экземпляра документа.
//
// Параметры:
//  Запрос - Запрос - запрос, инициализирующий данные документа.
//
Процедура ЗаполнитьПараметрыИнициализацииПоСсылке(Запрос)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Реквизиты.Ссылка                         КАК Ссылка,
		|	Реквизиты.Дата                           КАК Период,
		|	Реквизиты.Статус                         КАК Статус,
		|	Реквизиты.Организация                    КАК Организация,
		|	Реквизиты.ВыпускПодДеятельность 		 КАК ВыпускПодДеятельность,
		|	Реквизиты.Подразделение                  КАК Подразделение,
		|	Реквизиты.Назначение                     КАК Назначение,
		|	Реквизиты.НазначениеМатериалы            КАК НазначениеМатериалы,
		|	Реквизиты.ВыпускающийЭтап                КАК ВыпускающийЭтап,
		|	Реквизиты.Спецификация                   КАК Спецификация,
		|	Реквизиты.Распоряжение                   КАК Распоряжение,
		|	Реквизиты.ФактическоеНачалоЭтапа         КАК ФактическоеНачалоЭтапа,
		|	Реквизиты.ФактическоеОкончаниеЭтапа      КАК ФактическоеОкончаниеЭтапа,
		|	Реквизиты.РучноеРазмещениеВГрафике       КАК РучноеРазмещениеВГрафике,
		|	Реквизиты.ДатаОтгрузки                   КАК ДатаОтгрузки,
		|	Реквизиты.ПроизводствоНаСтороне          КАК ПроизводствоНаСтороне,
		|	Реквизиты.Партнер                        КАК Партнер,
		|	Реквизиты.НаправлениеДеятельности        КАК НаправлениеДеятельности,
		|	Реквизиты.Номер                          КАК Номер,
		|	Реквизиты.Ответственный                  КАК Ответственный,
		|	Реквизиты.Комментарий                    КАК Комментарий,
		|	Реквизиты.Проведен                       КАК Проведен,
		|	Реквизиты.ПометкаУдаления                КАК ПометкаУдаления,
		|	&ПереопределяемыеПоля
		|
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Реквизиты
		|ГДЕ
		|	Реквизиты.Ссылка = &Ссылка";
	
	
	ПереопределяемыеПоля = "";
	
	ПереопределениеРасчетаПараметров = ПереопределениеРасчетаПараметров("Реквизиты");
	Для каждого КлючИЗначение Из ПереопределениеРасчетаПараметров Цикл
		
		ПереопределяемыеПоля = ПереопределяемыеПоля
			+ ?(ЗначениеЗаполнено(ПереопределяемыеПоля), "," + Символы.ПС, "")
			+ КлючИЗначение.Значение
			+ " КАК "
			+ КлючИЗначение.Ключ;
		
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПереопределяемыеПоля", ПереопределяемыеПоля);
	
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для каждого Колонка из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
КонецПроцедуры

Функция ПереопределениеРасчетаПараметров(ОсновнаяТаблица)
	
	Результат = Новый Структура;
	
	ТекстПараметра = СтрЗаменить(
		"%ОсновнаяТаблица%.Распоряжение.ДатаПотребности",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("ДатаПотребности", ТекстПараметра);
	
	ТекстПараметра = СтрЗаменить(
		"%ОсновнаяТаблица%.ЗаказПереработчику.Партнер",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("Переработчик", ТекстПараметра);
	
	ТекстПараметра = СтрЗаменить(
		"%ОсновнаяТаблица%.Подразделение.ВариантОбособленногоУчетаТоваров",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("ВариантОбособленногоУчетаТоваров", ТекстПараметра);
	
	ТекстПараметра = СтрЗаменить(
		"ЕСТЬNULL(%ОсновнаяТаблица%.НазначениеМатериалы.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("ДвиженияПоСкладскимРегистрам", ТекстПараметра);
	
	ТекстПараметра = СтрЗаменить(
		"ВЫБОР 
		|		КОГДА %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|				И %ОсновнаяТаблица%.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
		|				И %ОсновнаяТаблица%.ЗаказПереработчику.Проведен
		|			ТОГДА %ОсновнаяТаблица%.ЗаказПереработчику 
		|		ИНАЧЕ %ОсновнаяТаблица%.Ссылка
		|КОНЕЦ",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("ДокументПоступления", ТекстПараметра);
	
	ТекстПараметра = СтрЗаменить(
		"ВЫБОР 
		|		КОГДА %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|				И %ОсновнаяТаблица%.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
		|				И %ОсновнаяТаблица%.ЗаказПереработчику.Проведен
		|				И %ОсновнаяТаблица%.ЗаказПереработчику.Статус В(
		|							ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПереработчикам.КОбеспечению),
		|							ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПереработчикам.КИсполнению),
		|							ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПереработчикам.Закрыт))
		|			ТОГДА %ОсновнаяТаблица%.ЗаказПереработчику 
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
		|КОНЕЦ",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("ЗаказПереработчику", ТекстПараметра);
	
	ТекстПараметра = СтрЗаменить(
		"ВЫБОР 
		|		КОГДА %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|				И %ОсновнаяТаблица%.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
		|			ТОГДА %ОсновнаяТаблица%.ЗаказПереработчику.Контрагент 
		|		КОГДА НЕ %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|				И %ОсновнаяТаблица%.Договор <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|			ТОГДА %ОсновнаяТаблица%.Договор.Контрагент 
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|КОНЕЦ",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("Контрагент", ТекстПараметра);
	
	ТекстПараметра = СтрЗаменить(
		"ВЫБОР 
		|		КОГДА %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|				И %ОсновнаяТаблица%.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
		|			ТОГДА %ОсновнаяТаблица%.ЗаказПереработчику.Партнер 
		|		КОГДА НЕ %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|			ТОГДА %ОсновнаяТаблица%.Партнер
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|КОНЕЦ",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("ПартнерРеестраДокументов", ТекстПараметра);
		
	ТекстПараметра = СтрЗаменить(
		"ВЫБОР 
		|		КОГДА %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|				И %ОсновнаяТаблица%.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
		|			ТОГДА %ОсновнаяТаблица%.ЗаказПереработчику.Договор 
		|		КОГДА НЕ %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|			ТОГДА %ОсновнаяТаблица%.Договор
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|КОНЕЦ",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("Договор", ТекстПараметра);
	
	ТекстПараметра = СтрЗаменить(
		"ВЫБОР 
		|		КОГДА %ОсновнаяТаблица%.ПроизводствоНаСтороне
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоУПереработчика)
		|		КОГДА %ОсновнаяТаблица%.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СобственноеПроизводство)
		|КОНЕЦ",
		"%ОсновнаяТаблица%",
		ОсновнаяТаблица);
	Результат.Вставить("ХозяйственнаяОперация", ТекстПараметра);
		
	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)

	Если Запрос = Неопределено ИЛИ Запрос.Параметры.Свойство("КлючиАналитикиНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитики = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Склад             КАК Склад,
	|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика    КАК Характеристика,
	|	ТаблицаТовары.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	ТаблицаТовары.Назначение        КАК Назначение,
	|	ТаблицаТовары.Серия             КАК Серия
	|ИЗ
	// Для обеспечения с назначением (материалы в цехе)
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение                  КАК Склад,
	|		ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|		ТаблицаТовары.Характеристика    КАК Характеристика,
	|		&ПустаяСтатья                   КАК СтатьяКалькуляции,
	|		&Назначение                     КАК Назначение,
	|		&ПустаяСерия                    КАК Серия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для обеспечения без назначения (материалы в цехе)
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&ПустоеНазначение,
	|		&ПустаяСерия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для обеспечения со статьей калькуляции (план по материалам в НЗП)
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение                  КАК Склад,
	|		ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|		ТаблицаТовары.Характеристика    КАК Характеристика,
	|		ТаблицаТовары.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|		&Назначение                     КАК Назначение,
	|		&ПустаяСерия                    КАК Серия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для расхода с назначением
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение                  КАК Склад,
	|		ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|		ТаблицаТовары.Характеристика    КАК Характеристика,
	|		ТаблицаТовары.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|		&Назначение                     КАК Назначение,
	|		&ПустаяСерия                    КАК Серия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.РасходМатериаловИРабот КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для расхода без назначения
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение КАК Склад,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.РасходМатериаловИРабот КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для склада с назначением
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Склад,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка),
	|		&Назначение КАК Назначение,
	|		ТаблицаТовары.Серия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Склад,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка),
	|		&Назначение КАК Назначение,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для склада без назначения
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Склад,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		ТаблицаТовары.Серия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Склад,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для работ по выходным изделиям давальца с назначением
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВЫРАЗИТЬ(ТаблицаТовары.Назначение.Заказ КАК Документ.ЗаказДавальца).Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		ТаблицаТовары.Назначение,
	|		&ПустаяСерия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.ПередатьДавальцу
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для работ по выходным изделиям давальца без назначения
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВЫРАЗИТЬ(ТаблицаТовары.Назначение.Заказ КАК Документ.ЗаказДавальца).Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&ПустоеНазначение,
	|		&ПустаяСерия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.ПередатьДавальцу
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для выходных изделий без назначения по отправителю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&ПустоеНазначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для выходных изделий с назначением по получателю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Получатель,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		ТаблицаТовары.Назначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И НЕ ТаблицаТовары.Получатель = &Подразделение
	|		И НЕ ТаблицаТовары.СписатьНаРасходы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для выходных изделий без назначения по получателю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Получатель,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&ПустоеНазначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И НЕ ТаблицаТовары.Получатель = &Подразделение
	|		И НЕ ТаблицаТовары.СписатьНаРасходы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для работ по побочным изделиям давальца с назначением
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВЫРАЗИТЬ(ТаблицаТовары.Назначение.Заказ КАК Документ.ЗаказДавальца).Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		ТаблицаТовары.Назначение,
	|		&ПустаяСерия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.ПередатьДавальцу
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для работ по побочным изделиям давальца без назначения
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВЫРАЗИТЬ(ТаблицаТовары.Назначение.Заказ КАК Документ.ЗаказДавальца).Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&ПустоеНазначение,
	|		&ПустаяСерия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.ПередатьДавальцу
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для побочных изделий без назначения по отправителю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&ПустоеНазначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для побочных изделий с назначением по получателю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Получатель,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		ТаблицаТовары.Назначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И НЕ ТаблицаТовары.Получатель = &Подразделение
	|		И НЕ ТаблицаТовары.СписатьНаРасходы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для побочных изделий без назначения по получателю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Получатель,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&ПустоеНазначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И НЕ ТаблицаТовары.Получатель = &Подразделение
	|		И НЕ ТаблицаТовары.СписатьНаРасходы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для побочных изделий со статьей калькуляции с назначением по отправителю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		ТаблицаТовары.СтатьяКалькуляции,
	|		&Назначение,
	|		&ПустаяСерия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для побочных изделий со статьей калькуляции без назначения по отправителю
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Подразделение,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		ТаблицаТовары.СтатьяКалькуляции,
	|		&ПустоеНазначение,
	|		&ПустаяСерия
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	// Для экономии с назначением
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Склад,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&НазначениеМатериалы,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерий = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.Склад.ЦеховаяКладовая
	|		И ТаблицаТовары.Склад.Подразделение = &Подразделение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	// Для экономии без назначения
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Склад,
	|		ТаблицаТовары.Номенклатура,
	|		ТаблицаТовары.Характеристика,
	|		&ПустаяСтатья,
	|		&ПустоеНазначение,
	|		ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерий = 14 ТОГДА ТаблицаТовары.Серия ИНАЧЕ &ПустаяСерия КОНЕЦ
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.Склад.ЦеховаяКладовая
	|		И ТаблицаТовары.Склад.Подразделение = &Подразделение
	|
	|	) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|		И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|		И ТаблицаТовары.Серия = Аналитика.Серия
	|		И ТаблицаТовары.Склад = Аналитика.Склад
	|		И ТаблицаТовары.Назначение = Аналитика.Назначение
	|		И ТаблицаТовары.СтатьяКалькуляции = Аналитика.СтатьяКалькуляции
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.СтатьяКалькуляции,
	|	ТаблицаТовары.Назначение,
	|	ТаблицаТовары.Серия");
	
	ЗапросАналитики.УстановитьПараметр("Ссылка",                 Запрос.Параметры.Ссылка);
	ЗапросАналитики.УстановитьПараметр("Подразделение",          Запрос.Параметры.Подразделение);
	ЗапросАналитики.УстановитьПараметр("Назначение",             Запрос.Параметры.Назначение);
	ЗапросАналитики.УстановитьПараметр("НазначениеМатериалы",    Запрос.Параметры.НазначениеМатериалы);
	ЗапросАналитики.УстановитьПараметр("ИспользуетсяНазначение", Запрос.Параметры.ИспользуетсяНазначение);
	ЗапросАналитики.УстановитьПараметр("ПустаяСерия",            Справочники.СерииНоменклатуры.ПустаяСсылка());
	ЗапросАналитики.УстановитьПараметр("ПустаяСтатья",           Справочники.СтатьиКалькуляции.ПустаяСсылка());
	ЗапросАналитики.УстановитьПараметр("ПустоеНазначение",       Справочники.Назначения.ПустаяСсылка());
	ЗапросАналитики.УстановитьПараметр("Статус",                 Запрос.Параметры.Статус);
	
	Выборка = ЗапросАналитики.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;

	Запрос.УстановитьПараметр("КлючиАналитикиНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаПустаяАналитикаУчетаПартий(Запрос)
	
	Если Запрос.Параметры.Свойство("ПустаяАналитикаУчетаПартий") Тогда
		Возврат;
	КонецЕсли;
	
	ОтборПоАналитикеПартии = Новый Структура("Дата, ВидЦенности",
		Запрос.Параметры.Период, Перечисления.ВидыЦенностей.Товары);
	
	Запрос.УстановитьПараметр("ПустаяАналитикаУчетаПартий",
		Справочники.КлючиАналитикиУчетаПартий.ПолучитьКлючАналитики(ОтборПоАналитикеПартии));
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаВидЗапасовРаботы(Запрос)
	
	Если Запрос.Параметры.Свойство("ВидЗапасовРаботы") Тогда
		Возврат;
	КонецЕсли;
	
	ДопКолонки = Новый Структура("Комитент, Соглашение, Валюта, НалогообложениеНДС, НалогообложениеОрганизации, Поставщик, Подразделение, Менеджер, Сделка");
	ДопКолонки.Вставить("ОбособленныйУчетТоваровПоСделке",	Ложь);
	ДопКолонки.Вставить("ДеятельностьОблагаетсяЕНВД",		Ложь);
	ДопКолонки.Вставить("ВидЗапасов",						Справочники.ВидыЗапасов.ПустаяСсылка());
	ДопКолонки.Вставить("ТипЗапасов",						Перечисления.ТипыЗапасов.Услуга);
	ДопКолонки.Вставить("ГруппаФинансовогоУчета",			Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка());
	ДопКолонки.Вставить("ВариантОбособленногоУчетаТоваров",	Перечисления.ВариантыОбособленногоУчетаТоваров.НеВедется);
	ДопКолонки.Вставить("Организация",						Запрос.Параметры.Организация);
	ДопКолонки.Вставить("ХозяйственнаяОперация",			Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство);
	
	Запрос.УстановитьПараметр("ВидЗапасовРаботы", Справочники.ВидыЗапасов.ВидЗапасовДокумента(ДопКолонки.Организация, ДопКолонки.ХозяйственнаяОперация, ДопКолонки));
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаТаблицаКоэффициентыПересчетаВалют(Запрос)
	
	ЗапросКурсов = Новый Запрос;
	ЗапросКурсов.Текст =
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ЭтапПроизводства2_2ПобочныеИзделия.ДатаПроизводства, ДЕНЬ) КАК Период
		|ПОМЕСТИТЬ втПериоды
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ЭтапПроизводства2_2ПобочныеИзделия
		|ГДЕ
		|	ЭтапПроизводства2_2ПобочныеИзделия.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЭтапПроизводства2_2ПобочныеИзделия.ДатаПроизводства, ДЕНЬ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(КурсыВалют.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
		|	втПериоды.Период КАК Период,
		|	МАКСИМУМ(ЕСТЬNULL(КурсыВалют.Период, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаПоследнегоКурса
		|ПОМЕСТИТЬ втДатыПоследнихКурсовВалют
		|ИЗ
		|	втПериоды КАК втПериоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|		ПО (КурсыВалют.Период <= втПериоды.Период)
		|			И (КурсыВалют.Валюта = &ВалютаРеглУчета
		|				ИЛИ КурсыВалют.Валюта = &ВалютаУпрУчета)
		|
		|СГРУППИРОВАТЬ ПО
		|	втПериоды.Период,
		|	ЕСТЬNULL(КурсыВалют.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КурсыВалют.Валюта ЕСТЬ NULL
		|					И КурсыВалют.Валюта = &ВалютаРеглУчета
		|				ТОГДА КурсыВалют.Курс
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КурсРеглУчета,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КурсыВалют.Валюта ЕСТЬ NULL
		|					И КурсыВалют.Валюта = &ВалютаРеглУчета
		|				ТОГДА КурсыВалют.Кратность
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КратностьРеглУчета,
		|	втДатыПоследнихКурсовВалют.Период КАК Период,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КурсыВалют.Валюта ЕСТЬ NULL
		|					И КурсыВалют.Валюта = &ВалютаУпрУчета
		|				ТОГДА КурсыВалют.Курс
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КурсУпрУчета,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НЕ КурсыВалют.Валюта ЕСТЬ NULL
		|					И КурсыВалют.Валюта = &ВалютаУпрУчета
		|				ТОГДА КурсыВалют.Кратность
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КратностьУпрУчета
		|ПОМЕСТИТЬ втКурсыВалютНаДату
		|ИЗ
		|	втДатыПоследнихКурсовВалют КАК втДатыПоследнихКурсовВалют
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
		|		ПО втДатыПоследнихКурсовВалют.ДатаПоследнегоКурса = КурсыВалют.Период
		|			И втДатыПоследнихКурсовВалют.Валюта = КурсыВалют.Валюта
		|
		|СГРУППИРОВАТЬ ПО
		|	втДатыПоследнихКурсовВалют.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втКурсыВалютНаДату.Период,
		|	1 КАК КоэффициентПересчетаВВалютуУпр,
		|	ВЫБОР
		|		КОГДА втКурсыВалютНаДату.КратностьУпрУчета * втКурсыВалютНаДату.КурсРеглУчета = 0
		|			ТОГДА 1
		|		ИНАЧЕ втКурсыВалютНаДату.КурсУпрУчета * втКурсыВалютНаДату.КратностьРеглУчета / втКурсыВалютНаДату.КратностьУпрУчета * втКурсыВалютНаДату.КурсРеглУчета
		|	КОНЕЦ КАК КоэффициентПересчетаВВалютуРегл
		|ИЗ
		|	втКурсыВалютНаДату КАК втКурсыВалютНаДату";

	ЗапросКурсов.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросКурсов.УстановитьПараметр("ВалютаУпрУчета", Константы.ВалютаУправленческогоУчета.Получить());
	ЗапросКурсов.УстановитьПараметр("ВалютаРеглУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	
	Запрос.УстановитьПараметр("ВтКоэффициентыПересчетаВалют", ЗапросКурсов.Выполнить().Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#Область ТекстыЗапросовПроведения

Функция ТекстЗапросаВтКоэффициентыПересчетаВалют(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтКоэффициентыПересчетаВалют";
	
	УстановитьПараметрЗапросаТаблицаКоэффициентыПересчетаВалют(Запрос);
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВтКоэффициентыПересчетаВалют.Период,
		|	ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр,
		|	ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл
		|ПОМЕСТИТЬ ВтКоэффициентыПересчетаВалют
		|ИЗ
		|	&ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаУслугиДавальцуКОформлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "УслугиДавальцуКОформлению";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ТабличнаяЧасть.Назначение.Заказ         КАК ЗаказДавальца,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ТабличнаяЧасть.Количество               КАК КОформлению,
	|	0 КАК Заказано,
	|	0 КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.ПричиныОтменыЗаказовКлиентов.ПустаяСсылка) КАК ПричинаОтмены,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС)                  КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Произведено
	|	И ТабличнаяЧасть.ПередатьДавальцу
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ТабличнаяЧасть.Назначение.Заказ         КАК ЗаказДавальца,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ТабличнаяЧасть.Количество               КАК КОформлению,
	|	0 КАК Заказано,
	|	0 КАК Сумма,
	|	ЗНАЧЕНИЕ(Справочник.ПричиныОтменыЗаказовКлиентов.ПустаяСсылка) КАК ПричинаОтмены,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС)                  КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Произведено
	|	И ТабличнаяЧасть.ПередатьДавальцу
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	// Потребность в материалах на складе.
	"ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.Склад                    КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	&НазначениеМатериалы                    КАК Назначение,
	|	ТабличнаяЧасть.Количество               КАК КЗаказу,
	|	ТабличнаяЧасть.Количество               КАК Потребность,
	|	0                                       КАК НаличиеПодЗаказ,
	|	ЛОЖЬ                                    КАК КонтролироватьТолькоНаличиеПодЗаказ
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТабличнаяЧасть.ВариантОбеспечения В(
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Выдача распоряжения на отгрузку со склада.
	|ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.Склад                    КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	&НазначениеМатериалы                    КАК Назначение,
	|	0                                       КАК КЗаказу,
	|	ТабличнаяЧасть.Количество               КАК Потребность,
	|	ТабличнаяЧасть.Количество               КАК НаличиеПодЗаказ,
	|	ЛОЖЬ                                    КАК КонтролироватьТолькоНаличиеПодЗаказ
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Обеспечение склада выходными изделиями.
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.Получатель              КАК Склад,
	|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
	|	ТабличнаяЧасть.Назначение              КАК Назначение,
	|	-ТабличнаяЧасть.Количество             КАК КЗаказу,
	|	0                                      КАК Потребность,
	|	0                                      КАК НаличиеПодЗаказ,
	|	&Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК КонтролироватьТолькоНаличиеПодЗаказ
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	// Операция ""Приход обеспечения"", условие синхронное по РН ""Движение товаров"", ""Обесепечение заказов"", ""Обеспечение заказов работами"".
	|	И (&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|					ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|				И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И &ПроизводствоНаСтороне
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|		И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление выходных изделий в кладовую.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ТабличнаяЧасть.Назначение               КАК Назначение,
	|	0                                       КАК КЗаказу,
	|	0                                       КАК Потребность,
	|	ТабличнаяЧасть.Количество               КАК НаличиеПодЗаказ,
	|	&Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК КонтролироватьТолькоНаличиеПодЗаказ
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И ТабличнаяЧасть.Произведено
	|	
	|	// Операция ""Приход обеспечения"", условие синхронное по РН ""Движение товаров"", ""Обесепечение заказов"", ""Обеспечение заказов работами"".
	|	И (&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|					ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|				И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И &ПроизводствоНаСтороне
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|		И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Обеспечение склада побочными изделиями.
	|ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ТабличнаяЧасть.Назначение               КАК Назначение,
	|	-ТабличнаяЧасть.Количество              КАК КЗаказу,
	|	0                                       КАК Потребность,
	|	0                                       КАК НаличиеПодЗаказ,
	|	&Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК КонтролироватьТолькоНаличиеПодЗаказ
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	// Операция ""Приход обеспечения"", условие синхронное по РН ""Движение товаров"", ""Обесепечение заказов"", ""Обеспечение заказов работами"".
	|	И (&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|					ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|				И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И &ПроизводствоНаСтороне
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|		И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление побочных изделий в кладовую.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ТабличнаяЧасть.Назначение               КАК Назначение,
	|	0                                       КАК КЗаказу,
	|	0                                       КАК Потребность,
	|	ТабличнаяЧасть.Количество               КАК НаличиеПодЗаказ,
	|	&Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК КонтролироватьТолькоНаличиеПодЗаказ
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|		
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И ТабличнаяЧасть.Произведено
	|
	|	// Операция ""Приход обеспечения"", условие синхронное по РН ""Движение товаров"", ""Обесепечение заказов"", ""Обеспечение заказов работами"".
	|	И (&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|					ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|				И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И &ПроизводствоНаСтороне
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|		И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Обеспечение склада неизрасходованными материалами.
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.Склад                   КАК Склад,
	|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
	|	&НазначениеМатериалы                   КАК Назначение,
	|	-ТабличнаяЧасть.Количество             КАК КЗаказу,
	|	0                                      КАК Потребность,
	|	0                                      КАК НаличиеПодЗаказ,
	|	&Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК КонтролироватьТолькоНаличиеПодЗаказ // давальческие назначения
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТабличнаяЧасть.Обособить
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление неизрасходованных материалов в кладовую.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОперации            КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.Склад                    КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	&НазначениеМатериалы                    КАК Назначение,
	|	0                                       КАК КЗаказу,
	|	0                                       КАК Потребность,
	|	ТабличнаяЧасть.Количество               КАК НаличиеПодЗаказ,
	|	&Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК КонтролироватьТолькоНаличиеПодЗаказ // давальческие назначения
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Склад
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТабличнаяЧасть.Обособить
	|	
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "СвободныеОстатки";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	// Резерв материалов на складе.
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТабличнаяЧасть.Склад                    КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ТабличнаяЧасть.Количество               КАК ВРезервеСоСклада,
	|	0                                      КАК ВРезервеПодЗаказ,
	|	0                                      КАК ВНаличии
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
	|
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Распоряжение на отгрузку материалов со склада.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТабличнаяЧасть.Склад                    КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	0                                      КАК ВРезервеСоСклада,
	|	ВЫБОР КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно) ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                              КАК ВРезервеПодЗаказ,
	|	ТабличнаяЧасть.Количество               КАК ВНаличии
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.ВариантОбеспечения В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление выходных изделий в кладовую.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	0                                      КАК ВРезервеСоСклада,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                              КАК ВРезервеПодЗаказ,
	|	ТабличнаяЧасть.Количество               КАК ВНаличии
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление побочных изделий в кладовую.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	0                                      КАК ВРезервеСоСклада,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                              КАК ВРезервеПодЗаказ,
	|	ТабличнаяЧасть.Количество               КАК ВНаличии
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление неизрасходованных материалов в кладовую.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОперации            КАК Период,
	|	ТабличнаяЧасть.Склад                   КАК Склад,
	|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
	|	0                                      КАК ВРезервеСоСклада,
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                              КАК ВРезервеПодЗаказ,
	|	ТабличнаяЧасть.Количество              КАК ВНаличии
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Склад
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказовРаботами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказовРаботами";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	// Потребность в работах в подразделении.
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОтгрузки            КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Подразделение                         КАК Подразделение,
	|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
	|	&НазначениеМатериалы                   КАК Назначение,
	|	ТабличнаяЧасть.Количество              КАК КОбеспечению
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|	И НЕ ТабличнаяЧасть.Производится
	|
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|
	|	И ТабличнаяЧасть.ВариантОбеспечения В(
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаГрафикОтгрузкиТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ГрафикОтгрузкиТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
		// График отгрузки материалов со склада.
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.ДатаОтгрузки              КАК Период,
		|	ТабличнаяЧасть.ДатаОтгрузки              КАК ДатаОтгрузки,
		|
		|	ТабличнаяЧасть.Номенклатура              КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика            КАК Характеристика,
		|	ТабличнаяЧасть.Склад                     КАК Склад,
		|
		|	ВЫБОР КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно) ТОГДА
		|			&НазначениеМатериалы
		|		КОНЕЦ                                КАК Назначение,
		|
		|	ВЫБОР КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов) ТОГДА
		|			ТабличнаяЧасть.Количество
		|		КОНЕЦ                                КАК КоличествоИзЗаказов,
		|
		|	ВЫБОР КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно) ТОГДА
		|				ТабличнаяЧасть.Количество
		|		КОНЕЦ                                КАК КоличествоПодЗаказ,
		|
		|	ВЫБОР КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется) ТОГДА
		|			ТабличнаяЧасть.Количество
		|		КОНЕЦ                                КАК КоличествоНеобеспечено
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
		|
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|
		|	И &Статус В (
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
		|
		|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|
		|	И ТабличнаяЧасть.ВариантОбеспечения В(
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвижениеТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	// График поступления выходных изделий.
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Статус В (
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) ТОГДА
	|			ТабличнаяЧасть.ДатаПроизводства
	|		КОГДА &ПроизводствоНаСтороне
	|				И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА
	|			ТабличнаяЧасть.ДатаПроизводства
	|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|								ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|									И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL ТОГДА
	|			НАЧАЛОПЕРИОДА(ГрафикПроизводства.ОкончаниеЭтапа, День)
	|		ИНАЧЕ
	|			&Период
	|	КОНЕЦ                          КАК Период,
	|	
	|	&ДокументПоступления           КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель      КАК Склад,
	|	ТабличнаяЧасть.Номенклатура    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика  КАК Характеристика,
	|	ТабличнаяЧасть.Назначение      КАК Назначение,
	|	
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				
	|				// Операция ""Приход обеспечения"", условие синхронное по РН ""Движение товаров"", ""Обесепечение заказов"", ""Обеспечение заказов работами"".
	|				И( &Статус В(
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|					ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|								ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|									И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
	|					ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И &ПроизводствоНаСтороне
	|							И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|				
	|			ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступление,
	|	
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				
	|				// Операция ""Приход обеспечения"", условие синхронное по РН ""Движение товаров"", ""Обесепечение заказов"", ""Обеспечение заказов работами"".
	|				И( &Статус В(
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|					ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|								ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|									И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
	|					ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И &ПроизводствоНаСтороне
	|							И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|				
	|			ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказ,
	|	
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Закрытие графика поступления выходных изделий по заказу на производство.
	// Текст запроса должен быть синхронным тексту запроса графика поступления выходных изделий по этапу, отличие только в знаке движения и Распоряжении.
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Статус В(
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) ТОГДА
	|			ТабличнаяЧасть.ДатаПроизводства
	|		КОГДА &ПроизводствоНаСтороне
	|				И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА
	|			ТабличнаяЧасть.ДатаПроизводства
	|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|								ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|									И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL ТОГДА
	|			НАЧАЛОПЕРИОДА(ГрафикПроизводства.ОкончаниеЭтапа, День)
	|		ИНАЧЕ
	|			&Период
	|	КОНЕЦ                          КАК Период,
	|	
	|	&Распоряжение                  КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель      КАК Склад,
	|	ТабличнаяЧасть.Номенклатура    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика  КАК Характеристика,
	|	ТабличнаяЧасть.Назначение      КАК Назначение,
	|	0                              КАК ПланируемоеПоступление,
	|	0                              КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				-ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				-ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Закрытие графика поступления выходных изделий в кладовую.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаПроизводства КАК Период,
	|	&ДокументПоступления           КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель       КАК Склад,
	|	ТабличнаяЧасть.Номенклатура     КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика   КАК Характеристика,
	|	ТабличнаяЧасть.Назначение       КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                          КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                          КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                          КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                          КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И ТабличнаяЧасть.Произведено
	|
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// График поступления побочных изделий.
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Статус В(
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) ТОГДА
	|			ТабличнаяЧасть.ДатаПроизводства
	|		КОГДА &ПроизводствоНаСтороне
	|				И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА
	|			ТабличнаяЧасть.ДатаПроизводства
	|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|								ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|									И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL ТОГДА
	|			НАЧАЛОПЕРИОДА(ГрафикПроизводства.ОкончаниеЭтапа, День)
	|		ИНАЧЕ
	|			&Период
	|	КОНЕЦ                          КАК Период,
	|	
	|	&ДокументПоступления           КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель      КАК Склад,
	|	ТабличнаяЧасть.Номенклатура    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика  КАК Характеристика,
	|	ТабличнаяЧасть.Назначение      КАК Назначение,
	|	
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				
	|				// Операция ""Приход обеспечения"", условие синхронное по РН ""Движение товаров"", ""Обесепечение заказов"", ""Обеспечение заказов работами"".
	|				И( &Статус В(
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|					ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|								ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|									И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
	|					ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И &ПроизводствоНаСтороне
	|							И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|				
	|			ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступление,
	|	
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				
	|				// Операция ""Приход обеспечения"", условие синхронное по РН ""Движение товаров"", ""Обесепечение заказов"", ""Обеспечение заказов работами"".
	|				И &Статус В(
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|					ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|								ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|									И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL
	|					ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И &ПроизводствоНаСтороне
	|							И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|				
	|			ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказ,
	|	
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Закрытие графика поступления побочных изделий по заказу на производство.
	// Текст запроса должен быть синхронным тексту запроса графика поступления побочных изделий по этапу, отличие только в знаке движения и Распоряжении.
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Статус В(
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) ТОГДА
	|			ТабличнаяЧасть.ДатаПроизводства
	|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
	|							И (Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
	|								ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
	|									И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL ТОГДА
	|			НАЧАЛОПЕРИОДА(ГрафикПроизводства.ОкончаниеЭтапа, День)
	|		ИНАЧЕ
	|			&Период
	|	КОНЕЦ                          КАК Период,
	|	
	|	&Распоряжение                  КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель      КАК Склад,
	|	ТабличнаяЧасть.Номенклатура    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика  КАК Характеристика,
	|	ТабличнаяЧасть.Назначение      КАК Назначение,
	|	0                              КАК ПланируемоеПоступление,
	|	0                              КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				-ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				-ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|		
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Закрытие графика поступления побочных изделий в кладовую.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаПроизводства КАК Период,
	|	&ДокументПоступления            КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель       КАК Склад,
	|	ТабличнаяЧасть.Номенклатура     КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика   КАК Характеристика,
	|	ТабличнаяЧасть.Назначение       КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                          КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                          КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                          КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТабличнаяЧасть.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                          КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
	|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
	|			И ГрафикПроизводства.Распоряжение = &Распоряжение
	|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И ТабличнаяЧасть.Произведено
	|
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// График поступления неизрасходованных материалов.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОперации    КАК Период,
	|	&ДокументПоступления           КАК Распоряжение,
	|	ТабличнаяЧасть.Склад           КАК Склад,
	|	ТабличнаяЧасть.Номенклатура    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика  КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Обособить ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                     КАК Назначение,
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				0
	|			ИНАЧЕ
	|				ТабличнаяЧасть.Количество
	|		КОНЕЦ                     КАК ПланируемоеПоступление,
	|	
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				0
	|			ИНАЧЕ
	|				ТабличнаяЧасть.Количество
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	
	|	И &Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) // фактически эти движения появляются начиная со статуса ""Начат"", до этого момента табличная часть ""Экономия материалов пуста"".
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Закрытие графика неизрасходованных материалов в кладовую.
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОперации     КАК Период,
	|	&ДокументПоступления           КАК Распоряжение,
	|	ТабличнаяЧасть.Склад            КАК Склад,
	|	ТабличнаяЧасть.Номенклатура     КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика   КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Обособить ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                     КАК Назначение,
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				0
	|			ИНАЧЕ
	|				-ТабличнаяЧасть.Количество
	|		КОНЕЦ                     КАК ПланируемоеПоступление,
	|	
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				-ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				0
	|			ИНАЧЕ
	|				-ТабличнаяЧасть.Количество
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	
	|	ВЫБОР КОГДА &НазначениеМатериалы <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) И ТабличнаяЧасть.Обособить ТОГДА
	|				-ТабличнаяЧасть.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Склад
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	
	|	И &Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) // фактически эти движения появляются начиная со статуса ""Начат"", до этого момента табличная часть ""Экономия материалов пуста"".
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОтгрузке";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	// Резерв серий материалов.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки             КАК Период,
	|	ТабличнаяЧасть.Склад                    КАК Склад,
	|	ВЫБОР 
	|		КОГДА &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|			ТОГДА &Переработчик
	|		ИНАЧЕ &Подразделение                         
	|	КОНЕЦ                                  КАК Получатель,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ВЫБОР КОГДА ТабличнаяЧасть.СтатусУказанияСерий В(10, 14) ТОГДА
	|			ТабличнаяЧасть.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	ТабличнаяЧасть.Количество               КАК ВРезерве,
	|	0                                      КАК КОтгрузке,
	|	0                                      КАК КОформлению
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	И ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Распоряжение на отгрузку материалов
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки             КАК Период,
	|	ТабличнаяЧасть.Склад                    КАК Склад,
	|	ВЫБОР 
	|		КОГДА &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|			ТОГДА &Переработчик
	|		ИНАЧЕ &Подразделение                         
	|	КОНЕЦ                                  КАК Получатель,
	|	ВЫБОР 
	|		КОГДА &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|			ТОГДА &ЗаказПереработчику 
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ                                  КАК ДокументОтгрузки,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)
	|			И &ДвиженияПоСкладскимРегистрам ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТабличнаяЧасть.СтатусУказанияСерий В(10, 14) ТОГДА
	|			ТабличнаяЧасть.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	0                                      КАК ВРезерве,
	|	ТабличнаяЧасть.Количество               КАК КОтгрузке,
	|	ТабличнаяЧасть.Количество               КАК КОформлению
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТабличнаяЧасть.ВариантОбеспечения В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Отгрузка материалов из кладовой.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки             КАК Период,
	|	ТабличнаяЧасть.Склад                    КАК Склад,
	|	ВЫБОР 
	|		КОГДА &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|			ТОГДА &Переработчик
	|		ИНАЧЕ &Подразделение                         
	|	КОНЕЦ                                  КАК Получатель,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)
	|			И &ДвиженияПоСкладскимРегистрам ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТабличнаяЧасть.СтатусУказанияСерий В(10, 14) ТОГДА
	|			ТабличнаяЧасть.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	0                                      КАК ВРезерве,
	|	ТабличнаяЧасть.Количество               КАК КОтгрузке,
	|	ТабличнаяЧасть.Количество               КАК КОформлению
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Склад
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И НЕ &ПроизводствоНаСтороне
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТабличнаяЧасть.ВариантОбеспечения В(
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКПоступлению";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	// Распоряжение на приемку выходных изделий.
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	&Подразделение                          КАК Отправитель,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	&ДокументПоступления                   КАК ДокументПоступления,
	|	ТабличнаяЧасть.Количество               КАК КПоступлению,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|					ТабличнаяЧасть.Назначение
	|				ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И НЕ &НакладнаяЯвляетсяРаспоряжением
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|	И (ТабличнаяЧасть.Произведено 
	|			ИЛИ &ПроизводствоНаСтороне 
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И СпрСклад.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ТабличнаяЧасть.ДатаПроизводства >= СпрСклад.ДатаНачалаОрдернойСхемыПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Распоряжение на приемку побочных изделий.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	&Подразделение                          КАК Отправитель,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	&ДокументПоступления                   КАК ДокументПоступления,
	|	ТабличнаяЧасть.Количество               КАК КПоступлению,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И НЕ &НакладнаяЯвляетсяРаспоряжением
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|	И (ТабличнаяЧасть.Произведено 
	|			ИЛИ &ПроизводствоНаСтороне 
	|				И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И СпрСклад.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ТабличнаяЧасть.ДатаПроизводства >= СпрСклад.ДатаНачалаОрдернойСхемыПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Распоряжение на приемку неизрасходованных материалов.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОперации             КАК Период,
	|	ТабличнаяЧасть.Склад                    КАК Склад,
	|	&Подразделение                          КАК Отправитель,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	&ДокументПоступления                   КАК ДокументПоступления,
	|	ТабличнаяЧасть.Количество               КАК КПоступлению,
	|	ВЫБОР КОГДА &ДвиженияПоСкладскимРегистрам И ТабличнаяЧасть.Обособить ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Склад
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И НЕ &НакладнаяЯвляетсяРаспоряжением
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И СпрСклад.ИспользоватьОрдернуюСхемуПриПоступлении
	|	И ТабличнаяЧасть.ДатаОперации >= СпрСклад.ДатаНачалаОрдернойСхемыПриПоступлении";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	// Передача из нашей кладовой в производство
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки                   КАК Период,
	|	ТабличнаяЧасть.Склад                          КАК Склад,
	|	ТабличнаяЧасть.Номенклатура                   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                 КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)
	|		И &ДвиженияПоСкладскимРегистрам ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                                    КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СтатусУказанияСерий В (4, 6, 8, 10, 14)
	|			ТОГДА ТабличнаяЧасть.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	ТабличнаяЧасть.Количество                     КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СтатусУказанияСерий В (6, 8, 10, 14)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                        КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Склад
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ &ПроизводствоНаСтороне
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И ТабличнаяЧасть.ВариантОбеспечения В(
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногоОборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Передача выходных и побочных изделий в нашу кладовую
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СтатусУказанияСерийПолучатель В (4, 6, 8, 10, 14)
	|			ТОГДА ТабличнаяЧасть.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                    КАК Серия,
	|	ТабличнаяЧасть.Количество               КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ &ПроизводствоНаСтороне
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И (НЕ ТабличнаяЧасть.СтатусУказанияСерийПолучатель В (4, 6, 8, 10)
	|			ИЛИ ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства         КАК Период,
	|	ТабличнаяЧасть.Получатель               КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ТабличнаяЧасть.Серия                    КАК Серия,
	|	ТабличнаяЧасть.Количество               КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ &ПроизводствоНаСтороне
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И (НЕ ТабличнаяЧасть.СтатусУказанияСерийПолучатель В (4, 6, 8, 10)
	|			ИЛИ ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства          КАК Период,
	|	ТабличнаяЧасть.Получатель                КАК Склад,
	|	ТабличнаяЧасть.Номенклатура              КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика            КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ТабличнаяЧасть.Серия                     КАК Серия,
	|	ТабличнаяЧасть.Количество                КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделияСерии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ВыходныеИзделия
	|		ПО ТабличнаяЧасть.Ссылка = ВыходныеИзделия.Ссылка
	|			И ТабличнаяЧасть.Номенклатура = ВыходныеИзделия.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ВыходныеИзделия.Характеристика
	|			И ТабличнаяЧасть.Назначение = ВыходныеИзделия.Назначение
	|			И ТабличнаяЧасть.Получатель = ВыходныеИзделия.Получатель
	|			И ТабличнаяЧасть.ДатаПроизводства = ВыходныеИзделия.ДатаПроизводства
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ВыходныеИзделия.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ &ПроизводствоНаСтороне
	|	И НЕ ВыходныеИзделия.СписатьНаРасходы
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Ссылка,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Назначение,
	|	ТабличнаяЧасть.Получатель,
	|	ТабличнаяЧасть.ДатаПроизводства,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВыходныеИзделия.СтатусУказанияСерийПолучатель) В (4, 6, 8, 10)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства          КАК Период,
	|	ТабличнаяЧасть.Получатель                КАК Склад,
	|	ТабличнаяЧасть.Номенклатура              КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика            КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ТабличнаяЧасть.Серия                     КАК Серия,
	|	ТабличнаяЧасть.Количество                КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделияСерии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ПобочныеИзделия
	|		ПО ТабличнаяЧасть.Ссылка = ПобочныеИзделия.Ссылка
	|			И ТабличнаяЧасть.Номенклатура = ПобочныеИзделия.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ПобочныеИзделия.Характеристика
	|			И ТабличнаяЧасть.Назначение = ПобочныеИзделия.Назначение
	|			И ТабличнаяЧасть.Получатель = ПобочныеИзделия.Получатель
	|			И ТабличнаяЧасть.ДатаПроизводства = ПобочныеИзделия.ДатаПроизводства
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ПобочныеИзделия.Получатель
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ &ПроизводствоНаСтороне
	|	И НЕ ПобочныеИзделия.СписатьНаРасходы
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Ссылка,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Назначение,
	|	ТабличнаяЧасть.Получатель,
	|	ТабличнаяЧасть.ДатаПроизводства,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТабличнаяЧасть.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ПобочныеИзделия.СтатусУказанияСерийПолучатель) В (4, 6, 8, 10)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Передача неизрасходованных материалов в нашу кладовую
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОперации             КАК Период,
	|	ТабличнаяЧасть.Склад                    КАК Склад,
	|	ТабличнаяЧасть.Номенклатура             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Обособить И &ДвиженияПоСкладскимРегистрам ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ТабличнаяЧасть.Серия                    КАК Серия,
	|	ТабличнаяЧасть.Количество               КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТабличнаяЧасть.Склад
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ &ПроизводствоНаСтороне
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|	И (НЕ ТабличнаяЧасть.СтатусУказанияСерий В (4, 6, 8, 10)
	|			ИЛИ ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОперации              КАК Период,
	|	ТабличнаяЧасть.Склад                     КАК Склад,
	|	ТабличнаяЧасть.Номенклатура              КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика            КАК Характеристика,
	|	ВЫБОР КОГДА &ДвиженияПоСкладскимРегистрам И ТабличнаяЧасть.Обособить ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ТабличнаяЧасть.Серия                     КАК Серия,
	|	ТабличнаяЧасть.Количество                КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериаловСерии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ЭкономияМатериалов
	|		ПО ТабличнаяЧасть.Ссылка = ЭкономияМатериалов.Ссылка
	|			И ТабличнаяЧасть.Номенклатура = ЭкономияМатериалов.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ЭкономияМатериалов.Характеристика
	|			И ТабличнаяЧасть.Склад = ЭкономияМатериалов.Склад
	|			И ТабличнаяЧасть.ДатаОперации = ЭкономияМатериалов.ДатаОперации
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ЭкономияМатериалов.Склад
	|		 И СпрСклад.ЦеховаяКладовая
	|		 И СпрСклад.Подразделение = &Подразделение
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ &ПроизводствоНаСтороне
	|	И НЕ ЭкономияМатериалов.СписатьНаРасходы
	|	И НЕ СпрСклад.Ссылка ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Ссылка,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Склад,
	|	ТабличнаяЧасть.ДатаОперации,
	|	ВЫБОР КОГДА &ДвиженияПоСкладскимРегистрам И ТабличнаяЧасть.Обособить ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ЭкономияМатериалов.СтатусУказанияСерий) В (4, 6, 8, 10)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаПродукцияИПолуфабрикатыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПродукцияИПолуфабрикатыВПроизводстве";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
		//Обеспечение потребности
		"ВЫБРАТЬ
		|	&ДатаПотребности                       КАК Период,
		|	&Распоряжение                          КАК Распоряжение,
		|
		|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
		|
		|	&Спецификация                          КАК Спецификация,
		|	ТабличнаяЧасть.Получатель              КАК Получатель,
		|
		|	ТабличнаяЧасть.Назначение              КАК Назначение,
		|	ТабличнаяЧасть.ЭтапПотребитель         КАК Этап,
		|
		|	0                                      КАК Требуется,
		|
		|	ВЫБОР КОГДА &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется),
		|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован)) ТОГДА
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК Запланировано,
		|
		|	ВЫБОР
		|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
		|				И НЕ ((Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
		|						ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
		|						И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL) 
		|			ТОГДА
		|
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК ПереданоКПроизводству,
		|
		|	ВЫБОР
		|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
		|				И ((Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
		|					ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
		|					И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL) 
		|			ТОГДА
		|
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК ОжидаетПроизводства,
		|
		|	ВЫБОР 
		|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат)
		|				И НЕ ТабличнаяЧасть.Произведено 
		|			ТОГДА
		|
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК Производится,
		|
		|	ВЫБОР 
		|		КОГДА &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
		|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) 
		|					И ТабличнаяЧасть.Произведено
		|				ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
		|					И &ПроизводствоНаСтороне
		|			ТОГДА
		|
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК Произведено
		|
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
		|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
		|			И ГрафикПроизводства.Распоряжение = &Распоряжение
		|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&ДатаПотребности                       КАК Период,
		|	&Распоряжение                          КАК Распоряжение,
		|
		|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
		|
		|	ВЫБОР КОГДА ТабличнаяЧасть.ЭтапПотребитель <> ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|		И ТабличнаяЧасть.ЭтапПотребитель.ВыпускающийЭтап = &ВыпускающийЭтап ТОГДА
		|		ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
		|	ИНАЧЕ
		|		&Спецификация
		|	КОНЕЦ                                  КАК Спецификация,
		|	ТабличнаяЧасть.Получатель              КАК Получатель,
		|
		|	ТабличнаяЧасть.Назначение              КАК Назначение,
		|	ТабличнаяЧасть.ЭтапПотребитель         КАК Этап,
		|
		|	0                                      КАК Требуется,
		|
		|	ВЫБОР КОГДА &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется),
		|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован)) ТОГДА
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК Запланировано,
		|
		|	ВЫБОР
		|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
		|				И НЕ ((Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
		|						ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
		|						И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL) 
		|			ТОГДА
		|
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК ПереданоКПроизводству,
		|
		|	ВЫБОР
		|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению)
		|				И ((Константы.ИспользоватьПланированиеПоМатериальнымРесурсам
		|					ИЛИ Константы.ИспользоватьПланированиеПоПроизводственнымРесурсам)
		|					И НЕ ГрафикПроизводства.ЭтапПроизводства ЕСТЬ NULL) 
		|			ТОГДА
		|
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК ОжидаетПроизводства,
		|
		|	ВЫБОР 
		|		КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат)
		|				И НЕ ТабличнаяЧасть.Произведено 
		|			ТОГДА
		|
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК Производится,
		|
		|	ВЫБОР 
		|		КОГДА &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
		|							ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) 
		|					И ТабличнаяЧасть.Произведено
		|				ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
		|					И &ПроизводствоНаСтороне
		|			ТОГДА
		|
		|		ТабличнаяЧасть.Количество
		|	КОНЕЦ                                  КАК Произведено
		|
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
		|		ПО (ТабличнаяЧасть.Ссылка = ГрафикПроизводства.ЭтапПроизводства
		|			И ГрафикПроизводства.Распоряжение = &Распоряжение
		|			И ГрафикПроизводства.СтатусГрафика = &РабочийГрафик)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Константы КАК Константы
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		//Формирование потребности
		|ВЫБРАТЬ
		|	&ДатаПотребности                       КАК Период,
		|	&Распоряжение                          КАК Распоряжение,
		|
		|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
		|
		|	ТабличнаяЧасть.Спецификация            КАК Спецификация,
		|	ВЫБОР КОГДА ТабличнаяЧасть.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) Тогда
		|		&Подразделение
		|	ИНАЧЕ
		|		ТабличнаяЧасть.Склад
		|	КОНЕЦ                                  КАК Получатель,
		|
		|	&НазначениеМатериалы                   КАК Назначение,
		|	&Ссылка                                КАК Этап,
		|
		|	ТабличнаяЧасть.Количество              КАК Требуется,
		|	0                                      КАК Запланировано,
		|	0                                      КАК ПереданоКПроизводству,
		|	0                                      КАК ОжидаетПроизводства,
		|	0                                      КАК Производится,
		|	0                                      КАК Произведено
		|
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|	И ТабличнаяЧасть.Производится";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДоступностьВидовРабочихЦентров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДоступностьВидовРабочихЦентров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	&Период КАК Период,
		|
		|	ТабличнаяЧасть.ВидРабочегоЦентра КАК ВидРабочегоЦентра,
		|	ТабличнаяЧасть.ДатаИнтервала     КАК ДатаИнтервала,
		|
		|	СУММА(ТабличнаяЧасть.Количество) КАК Занято,
		|
		|	&Подразделение КАК Подразделение
		|
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ЗанятостьВидовРабочихЦентров КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|	И &РучноеРазмещениеВГрафике
		|	
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧасть.ВидРабочегоЦентра,
		|	ТабличнаяЧасть.ДатаИнтервала";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МатериалыИРаботыВПроизводстве";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	// выпуск работ по расчитываемой стоимости
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаПроизводства       КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	ТабличнаяЧасть.Получатель             КАК Подразделение,
	|	ТабличнаяЧасть.Номенклатура           КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика         КАК Характеристика,
	|	ТабличнаяЧасть.Назначение             КАК Назначение,
	|	ТабличнаяЧасть.Количество             КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// выпуск работ по фиксированной стоимости
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаПроизводства,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Организация,
	|	ТабличнаяЧасть.Получатель,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Назначение,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И ТабличнаяЧасть.Произведено
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// потребление не обособленных работ
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОтгрузки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Организация,
	|	&Подразделение,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	НЕОПРЕДЕЛЕНО,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// потребление обособленных работ
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОтгрузки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Организация,
	|	&Подразделение,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	&НазначениеМатериалы,
	|	ТабличнаяЧасть.Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВыпускПродукции(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВыпускПродукции";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Запрос.Параметры);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса, ИмяРегистра);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО								КАК КодСтроки,
	|	ТабличнаяЧасть.ДатаПоступления				КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ										КАК АналитикаУчетаНоменклатуры,
	|	&Организация								КАК Организация,
	|	НЕОПРЕДЕЛЕНО								КАК Распоряжение,
	|	ТабличнаяЧасть.Количество					КАК Количество,
	|	ТабличнаяЧасть.ВидЗапасов					КАК ВидЗапасов,
	|	&Спецификация								КАК Спецификация,
	|	&Подразделение								КАК Подразделение,
	|	ТабличнаяЧасть.СтатьяРасходов				КАК СтатьяРасходов,
	|	ТабличнаяЧасть.АналитикаРасходов			КАК АналитикаРасходов,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов		КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО								КАК Заказ,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
	|				И &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатуры
	|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
	|				И НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыБезНазначения
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ										КАК АналитикаУчетаПродукции
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
	|	И НЕ ТабличнаяЧасть.ДополнениеДляДавальца";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	// Отгрузка материалов из цеховой кладовой
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОтгрузки                             КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)
	|			ТОГДА &НазначениеМатериалы
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                  	КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	ТабличнаяЧасть.Склад                                    КАК Отправитель,
	|	&Подразделение                                         	КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПередачаВПроизводствоОтгрузка) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	НЕ ТабличнаяЧасть.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|		ИЛИ &Период < ТабличнаяЧасть.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Склад.ЦеховаяКладовая
	|	И ТабличнаяЧасть.Склад.Подразделение = &Подразделение
	|	И НЕ &ПроизводствоНаСтороне
	|	И ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТабличнаяЧасть.ВариантОбеспечения В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Производство продукции в подразделении
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Период
	|		ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ													КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ТабличнаяЧасть.Назначение                               КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                              			КАК Отправитель,
	|	&Подразделение                                         	КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтражениеВыходныхИзделийВМаршрутныхЛистах) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	ИСТИНА                                                 	КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Период
	|		ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ													КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ТабличнаяЧасть.Назначение                               КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                                         	КАК Отправитель,
	|	&Подразделение                                         	КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтражениеВыходныхИзделийВМаршрутныхЛистах) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	ИСТИНА                                                 	КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Производство продукции в подразделении
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Период
	|		ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ													КАК Период,
	|	ТабличнаяЧасть.Номенклатура                           	КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ТабличнаяЧасть.Назначение                               КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                                         	КАК Отправитель,
	|	&Подразделение                                         	КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтражениеВыходныхИзделийВМаршрутныхЛистах) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	ИСТИНА                                                 	КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделияСерии КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Период
	|		ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ													КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ТабличнаяЧасть.Назначение                               КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                                         	КАК Отправитель,
	|	&Подразделение                                         	КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтражениеВыходныхИзделийВМаршрутныхЛистах) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	ИСТИНА                                                 	КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделияСерии КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Приемка продукции в цеховую кладовую
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Период
	|		ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ													КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТабличнаяЧасть.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                  	КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                                         	КАК Отправитель,
	|	ТабличнаяЧасть.Получатель                               КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПродукцииИзПроизводства) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	ВЫБОР
	|		КОГДА НЕ ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|				ИЛИ НЕ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ ВЫБОР
	|						КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|							ТОГДА &Период
	|						ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|					КОНЕЦ < ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                 	КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|	И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ЦеховаяКладовая
	|	И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).Подразделение = &Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Период
	|		ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ													КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТабличнаяЧасть.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                  	КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                                         	КАК Отправитель,
	|	ТабличнаяЧасть.Получатель                               КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПродукцииИзПроизводства) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	ВЫБОР
	|		КОГДА НЕ ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|				ИЛИ НЕ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ ВЫБОР
	|						КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|							ТОГДА &Период
	|						ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|					КОНЕЦ < ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                  КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|	И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ЦеховаяКладовая
	|	И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).Подразделение = &Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Приемка продукции в цеховую кладовую
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Период
	|		ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ													КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТабличнаяЧасть.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                  	КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                                         	КАК Отправитель,
	|	ТабличнаяЧасть.Получатель                               КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПродукцииИзПроизводства) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	ВЫБОР
	|		КОГДА НЕ ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|				ИЛИ НЕ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ ВЫБОР
	|						КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|							ТОГДА &Период
	|						ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|					КОНЕЦ < ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                  	КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделияСерии КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|	И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ЦеховаяКладовая
	|	И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).Подразделение = &Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА &Период
	|		ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|	КОНЕЦ													КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТабличнаяЧасть.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТабличнаяЧасть.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                  	КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                                         	КАК Отправитель,
	|	ТабличнаяЧасть.Получатель                               КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПродукцииИзПроизводства) КАК СкладскаяОперация,
	|	&Ссылка                                                	КАК Документ,
	|	ВЫБОР
	|		КОГДА НЕ ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|				ИЛИ НЕ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ ВЫБОР
	|						КОГДА ТабличнаяЧасть.ДатаПроизводства = ДАТАВРЕМЯ(1,1,1)
	|							ТОГДА &Период
	|						ИНАЧЕ ТабличнаяЧасть.ДатаПроизводства
	|					КОНЕЦ < ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                  	КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделияСерии КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|	И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ЦеховаяКладовая
	|	И ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).Подразделение = &Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Возврат неизрасходованных материалов в нашу кладовую
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОперации                              КАК Период,
	|	ТабличнаяЧасть.Номенклатура                              КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                            КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.Обособить И &ДвиженияПоСкладскимРегистрам
	|			ТОГДА &НазначениеМатериалы
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                  КАК Назначение,
	|	ТабличнаяЧасть.Серия                                     КАК Серия,
	|	ТабличнаяЧасть.Количество                                КАК Количество,
	|	&Подразделение                                         КАК Отправитель,
	|	ТабличнаяЧасть.Склад                                     КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПоПрочемуОприходованию) КАК СкладскаяОперация,
	|	&Ссылка                                                КАК Документ,
	|	ВЫБОР
	|		КОГДА НЕ ТабличнаяЧасть.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ ТабличнаяЧасть.ДатаОперации < ТабличнаяЧасть.Склад.ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                  КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТабличнаяЧасть.Склад.ЦеховаяКладовая
	|	И ТабличнаяЧасть.Склад.Подразделение = &Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОперации                              КАК Период,
	|	ТабличнаяЧасть.Номенклатура                              КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                            КАК Характеристика,
	|	ВЫБОР
	|		КОГДА &ДвиженияПоСкладскимРегистрам И ТабличнаяЧасть.Обособить
	|			ТОГДА &НазначениеМатериалы
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                  КАК Назначение,
	|	ТабличнаяЧасть.Серия                                     КАК Серия,
	|	ТабличнаяЧасть.Количество                                КАК Количество,
	|	&Подразделение                                         КАК Отправитель,
	|	ТабличнаяЧасть.Склад                                     КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПоПрочемуОприходованию) КАК СкладскаяОперация,
	|	&Ссылка                                                КАК Документ,
	|	ВЫБОР
	|		КОГДА НЕ ТабличнаяЧасть.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ ТабличнаяЧасть.ДатаОперации < ТабличнаяЧасть.Склад.ДатаНачалаОрдернойСхемыПриПоступлении 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                  КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериаловСерии КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	И ТабличнаяЧасть.Склад.ЦеховаяКладовая
	|	И ТабличнаяЧасть.Склад.Подразделение = &Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Расход материалов
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаРасхода                              КАК Период,
	|	ТабличнаяЧасть.Номенклатура                             КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                           КАК Характеристика,
	|	&Назначение				                                КАК Назначение,
	|	ТабличнаяЧасть.Серия                                    КАК Серия,
	|	ТабличнаяЧасть.Количество                               КАК Количество,
	|	&Подразделение                                          КАК Отправитель,
	|	&Подразделение                                          КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПотреблениеМатериаловПриПроизводстве) КАК СкладскаяОперация,
	|	&Ссылка                                                 КАК Документ,
	|	ЛОЖЬ                                                    КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.РасходМатериаловИРабот КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса, ИмяРегистра);
	КонецЕсли;
	
	ТекстЗапроса = "
	// расход материалов из под этапа на производство
	|ВЫБРАТЬ
	|	0                                              КАК Порядок,
	|	0                                              КАК НомерСтроки,
	|	ДД.ВидДвижения                                 КАК ВидДвижения,
	|	ДД.Период                                      КАК Период,
	|	ДД.ОрганизацияОтгрузки                         КАК ОрганизацияОтгрузки,
	|	ДД.Организация                                 КАК Организация,
	|	ДД.ВидЗапасов                                  КАК ВидЗапасов,
	|	ДД.КорВидЗапасов                               КАК КорВидЗапасов,
	|	ДД.Номенклатура                                КАК Номенклатура,
	|	ДД.Характеристика                              КАК Характеристика,
	|	ДД.НомерГТД                                    КАК НомерГТД,
	|	ДД.Количество                                  КАК Количество,
	|	ДД.ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	ДД.НалогообложениеНДС                          КАК НалогообложениеНДС,
	|	ДД.АналитикаУчетаНоменклатуры                  КАК АналитикаУчетаНоменклатуры,
	|	ДД.СтатьяРасходов                              КАК СтатьяРасходов,
	|	ДД.АналитикаРасходов                           КАК АналитикаРасходов,
	|	ДД.АналитикаАктивовПассивов                    КАК АналитикаАктивовПассивов,
	|	ДД.КорАналитикаУчетаНоменклатуры               КАК КорАналитикаУчетаНоменклатуры,
	|	ДД.Первичное                                   КАК Первичное,
	|	ДД.РасчетПартий                                КАК РасчетПартий,
	|	ДД.ПартияПроизводства                          КАК ПартияПроизводства
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ДД
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорАналитика
	|		ПО ДД.КорАналитикаУчетаНоменклатуры = КорАналитика.Ссылка
	|
	|ГДЕ
	|	ДД.Регистратор = &Ссылка
	|	И (&ПериодЗаданияКРасчетуСебестоимости = НЕОПРЕДЕЛЕНО ИЛИ ДД.Период < &ПериодЗаданияКРасчетуСебестоимости)
	|	И (ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|			ИЛИ (ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И КорАналитика.СтатьяКалькуляции <> ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)))
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// расход материалов из кладовой
	|ВЫБРАТЬ
	|	1                                              КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)         КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки                    КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)  КАК ОрганизацияОтгрузки,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ТабличнаяЧасть.ВидЗапасовВладельца.Организация
	|		ИНАЧЕ &Организация
	|	КОНЕЦ                                          КАК Организация,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ТабличнаяЧасть.ВидЗапасовВладельца
	|		ИНАЧЕ ТабличнаяЧасть.ВидЗапасов
	|	КОНЕЦ                                          КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Номенклатура                    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                  КАК Характеристика,
	|	ТабличнаяЧасть.НомерГТД                        КАК НомерГТД,
	|	ТабличнаяЧасть.Количество                      КАК Количество,
	|	ТабличнаяЧасть.ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя КАК КорАналитикаУчетаНоменклатуры,
	|	ИСТИНА                                         КАК Первичное,
	|	ЛОЖЬ                                           КАК РасчетПартий,
	|	НЕОПРЕДЕЛЕНО                                   КАК ПартияПроизводства
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход материалов в цех
	|ВЫБРАТЬ
	|	2                                              КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                        КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки                       КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)  КАК ОрганизацияОтгрузки,
	|	&Организация                                   КАК Организация,
	|	ТабличнаяЧасть.ВидЗапасов                         КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Номенклатура                       КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                     КАК Характеристика,
	|	ТабличнаяЧасть.НомерГТД                           КАК НомерГТД,
	|	ТабличнаяЧасть.Количество                         КАК Количество,
	|	ТабличнаяЧасть.ХозяйственнаяОперация              КАК ХозяйственнаяОперация,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорАналитикаУчетаНоменклатуры,
	|	ИСТИНА                                         КАК Первичное,
	|	ЛОЖЬ                                           КАК РасчетПартий,
	|	НЕОПРЕДЕЛЕНО                                   КАК ПартияПроизводства
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// расход сэкономленных материалов из цеха (передаваемых на склад или списываемых на расходы)
	|ВЫБРАТЬ
	|	3                                              КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                        КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)         КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПоступления                    КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)  КАК ОрганизацияОтгрузки,
	|	&Организация                                   КАК Организация,
	|	ТабличнаяЧасть.ВидЗапасов                         КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Номенклатура                       КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                     КАК Характеристика,
	|	ТабличнаяЧасть.НомерГТД                           КАК НомерГТД,
	|	ТабличнаяЧасть.Количество                         КАК Количество,
	|	ТабличнаяЧасть.ХозяйственнаяОперация              КАК ХозяйственнаяОперация,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры         КАК АналитикаУчетаНоменклатуры,
	|	ТабличнаяЧасть.СтатьяРасходов                     КАК СтатьяРасходов,
	|	ТабличнаяЧасть.АналитикаРасходов                  КАК АналитикаРасходов,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов           КАК АналитикаАктивовПассивов,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя КАК КорАналитикаУчетаНоменклатуры,
	|	ИСТИНА                                         КАК Первичное,
	|	ЛОЖЬ                                           КАК РасчетПартий,
	|	НЕОПРЕДЕЛЕНО                                   КАК ПартияПроизводства
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию))
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход сэкономленных материалов в кладовую
	|ВЫБРАТЬ
	|	4                                              КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                        КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПоступления                    КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)  КАК ОрганизацияОтгрузки,
	|	&Организация                                   КАК Организация,
	|	ТабличнаяЧасть.ВидЗапасов                         КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Номенклатура                       КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                     КАК Характеристика,
	|	ТабличнаяЧасть.НомерГТД                           КАК НомерГТД,
	|	ТабличнаяЧасть.Количество                         КАК Количество,
	|	ТабличнаяЧасть.ХозяйственнаяОперация              КАК ХозяйственнаяОперация,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорАналитикаУчетаНоменклатуры,
	|	ИСТИНА                                         КАК Первичное,
	|	ЛОЖЬ                                           КАК РасчетПартий,
	|	НЕОПРЕДЕЛЕНО                                   КАК ПартияПроизводства
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства)
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход продукции в подразделение или в цеховую кладовую
	|ВЫБРАТЬ
	|	5                                              КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                        КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПоступления                    КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)  КАК ОрганизацияОтгрузки,
	|	&Организация                                   КАК Организация,
	|	ТабличнаяЧасть.ВидЗапасов                         КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Номенклатура                       КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                     КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)    КАК НомерГТД,
	|	ТабличнаяЧасть.Количество                         КАК Количество,
	|	ТабличнаяЧасть.ХозяйственнаяОперация              КАК ХозяйственнаяОперация,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры         КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорАналитикаУчетаНоменклатуры,
	|	ИСТИНА                                         КАК Первичное,
	|	ЛОЖЬ                                           КАК РасчетПартий,
	|	НЕОПРЕДЕЛЕНО                                   КАК ПартияПроизводства
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
	|											ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И НЕ ТабличнаяЧасть.ДополнениеДляДавальца
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Порядок,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)					КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки								КАК Период,
	|	ТабличнаяЧасть.Склад									КАК Склад,
	|	ТабличнаяЧасть.ВидЗапасовВладельца.Организация			КАК ОрганизацияВладелец,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры				КАК АналитикаУчетаНоменклатуры,
	|	ТабличнаяЧасть.ВидЗапасов								КАК ВидЗапасовПродавца,
	|	ТабличнаяЧасть.НомерГТД									КАК НомерГТД,
	|	ТабличнаяЧасть.Номенклатура								КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика							КАК Характеристика,
	|	ТабличнаяЧасть.Количество								КАК Количество,
	|	ТабличнаяЧасть.ХозяйственнаяОперация					КАК ХозяйственнаяОперация,
	|	&ВыпускПодДеятельность									КАК НалогообложениеНДС
	|ИЗ
	|	втВидыЗапасов КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.РеализацияЗапасовДругойОрганизации
	|	И ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса, ИмяРегистра);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.НомерСтроки                        КАК НомерСтроки,
	|	ТабличнаяЧасть.ДатаПоступления                    КАК ДатаПоступления,
	|	ТабличнаяЧасть.Номенклатура                       КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                     КАК Характеристика,
	|	Аналитика.Серия                               	  КАК Серия,
	|	ТабличнаяЧасть.Назначение                         КАК Назначение,
	|	ТабличнаяЧасть.ВидЗапасов                         КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)    	  КАК НомерГТД
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТабличнаяЧасть.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|	ПО
	|		ТабличнаяЧасть.ВидЗапасов = ПоступленияТоваров.ВидЗапасов
	|		И ТабличнаяЧасть.Номенклатура = ПоступленияТоваров.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = ПоступленияТоваров.Характеристика
	|		И Аналитика.Серия = ПоступленияТоваров.Серия
	|		И ТабличнаяЧасть.Назначение = ПоступленияТоваров.Назначение
	|		И (ПоступленияТоваров.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка))
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|	И НЕ ТабличнаяЧасть.ДополнениеДляДавальца
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|	И (ПоступленияТоваров.ВидЗапасов ЕСТЬ NULL 
	|		ИЛИ ПоступленияТоваров.ДатаПоступления < ТабличнаяЧасть.ДатаПоступления)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЗаказыМатериаловВПроизводство(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЗаказыМатериаловВПроизводство";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Ссылка                                      КАК Распоряжение,
	|	&Подразделение                               КАК Подразделение,
	|	&Подразделение                               КАК Получатель,
	|	ТабличнаяЧасть.Номенклатура                  КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                КАК Характеристика,
	|	ТабличнаяЧасть.КодСтроки                     КАК КодСтроки,
	|	ТабличнаяЧасть.Серия                         КАК Серия,
	|	ТабличнаяЧасть.Склад                         КАК Склад,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВариантОбеспечения В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|			ТОГДА 
	|				&НазначениеМатериалы
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                        КАК НазначениеОтправителя,
	|	&Назначение                                  КАК Назначение,
	|	ТабличнаяЧасть.Количество                    КАК Заказано,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов), 
	|													ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада))
	|			ТОГДА ТабличнаяЧасть.Количество
	|	КОНЕЦ                                        КАК ВРезерве,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить), 
	|													ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|			ТОГДА ТабличнаяЧасть.Количество
	|	КОНЕЦ                                        КАК КОформлению
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|	И НЕ &ПроизводствоНаСтороне
	|
	|	И ТабличнаяЧасть.ВариантОбеспечения В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ИзЗаказов),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки                  КАК Период,
	|	&Ссылка                                      КАК Распоряжение,
	|	&Подразделение                               КАК Подразделение,
	|	&Подразделение                               КАК Получатель,
	|	ТабличнаяЧасть.Номенклатура                  КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                КАК Характеристика,
	|	ТабличнаяЧасть.КодСтроки                     КАК КодСтроки,
	|	ТабличнаяЧасть.Серия                         КАК Серия,
	|	ТабличнаяЧасть.Склад                         КАК Склад,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВариантОбеспечения В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|			ТОГДА &НазначениеМатериалы
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                        КАК НазначениеОтправителя,
	|	&Назначение                                  КАК Назначение,
	|	ТабличнаяЧасть.Количество                    КАК Заказано,
	|	0                                            КАК ВРезерве,
	|	ТабличнаяЧасть.Количество                    КАК КОформлению
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|	И НЕ &ПроизводствоНаСтороне
	|
	|	И (ТабличнаяЧасть.Склад.ЦеховаяКладовая
	|		И ТабличнаяЧасть.Склад.Подразделение = &Подразделение)
	|
	|	И ТабличнаяЧасть.ВариантОбеспечения В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаРаспоряженияНаПередачуИзПроизводства(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РаспоряженияНаПередачуИзПроизводства";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.КодСтроки                     КАК КодСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства              КАК Период,
	|	&Подразделение                              КАК Отправитель,
	|	ТабличнаяЧасть.Получатель                    КАК Получатель,
	|	&Ссылка                                     КАК Распоряжение,
	|	ТабличнаяЧасть.Номенклатура                  КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                КАК Характеристика,
	|	ТабличнаяЧасть.Назначение                    КАК Назначение,
	|	&Назначение                                  КАК НазначениеОтправителя,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства) КАК Операция,
	|	ТабличнаяЧасть.Количество                    КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И ТабличнаяЧасть.Произведено
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|	И (НЕ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ЦеховаяКладовая
	|		ИЛИ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).Подразделение <> &Подразделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.КодСтроки                     КАК КодСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПроизводства              КАК Период,
	|	&Подразделение                              КАК Отправитель,
	|	ТабличнаяЧасть.Получатель                    КАК Получатель,
	|	&Ссылка                                     КАК Распоряжение,
	|	ТабличнаяЧасть.Номенклатура                  КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                КАК Характеристика,
	|	ТабличнаяЧасть.Назначение                    КАК Назначение,
	|	&Назначение                                 КАК НазначениеОтправителя,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства) КАК Операция,
	|	ТабличнаяЧасть.Количество                    КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И ТабличнаяЧасть.Произведено
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|	И (НЕ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).ЦеховаяКладовая
	|		ИЛИ ВЫРАЗИТЬ(ТабличнаяЧасть.Получатель КАК Справочник.Склады).Подразделение <> &Подразделение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.КодСтроки                     КАК КодСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОперации                  КАК Период,
	|	&Подразделение                              КАК Отправитель,
	|	ТабличнаяЧасть.Склад                         КАК Получатель,
	|	&Ссылка                                     КАК Распоряжение,
	|	ТабличнаяЧасть.Номенклатура                  КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                КАК Характеристика,
	|	ВЫБОР КОГДА ТабличнаяЧасть.Обособить ТОГДА
	|				&НазначениеМатериалы
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                                   КАК Назначение,
	|	&Назначение                                 КАК НазначениеОтправителя,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства) КАК Операция,
	|	ТабличнаяЧасть.Количество                    КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|	И (НЕ ТабличнаяЧасть.Склад.ЦеховаяКладовая
	|		ИЛИ ТабличнаяЧасть.Склад.Подразделение <> &Подразделение)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТрудозатратыКОформлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТрудозатратыКОформлению";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Трудозатраты.ДатаВыполнения            КАК Период,
	|	&Организация                           КАК Организация,
	|	Трудозатраты.Ссылка                    КАК Распоряжение,
	|	Трудозатраты.ВидРабот                  КАК ВидРабот,
	|	Трудозатраты.Бригада                   КАК Бригада,
	|	Трудозатраты.КодСтроки                 КАК КодСтрокиРаспоряжения,
	|	Трудозатраты.Количество                КАК Количество
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.Трудозатраты КАК Трудозатраты
	|ГДЕ
	|	Трудозатраты.Ссылка = &Ссылка
	|
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|	И Трудозатраты.Выполнено";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКоэффициентыПересчетаВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКоэффициентыПересчетаВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки                   КАК НомерСтроки,
	|	ТабличнаяЧасть.ДатаПроизводства              КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|	&Подразделение                               КАК Подразделение,
	|	ТабличнаяЧасть.СтатьяРасходов                КАК СтатьяРасходов,
	|	ТабличнаяЧасть.АналитикаРасходов             КАК АналитикаРасходов,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))  КАК Сумма,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))  КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫБОР КОГДА ТабличнаяЧасть.СтатьяРасходов.ПринятиеКналоговомуУчету = ЛОЖЬ ТОГДА
	|		ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ                                        КАК ПостояннаяРазница,
	|	0                                            КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют
	|		ПО НАЧАЛОПЕРИОДА(ТабличнаяЧасть.ДатаПроизводства, ДЕНЬ) = ВтКоэффициентыПересчетаВалют.Период
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|	И ТабличнаяЧасть.Произведено
	|
	|	И ТабличнаяЧасть.СписатьНаРасходы
	|
	|	И ТабличнаяЧасть.СтатьяРасходов Ссылка ПланВидовХарактеристик.СтатьиРасходов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКоэффициентыПересчетаВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКоэффициентыПересчетаВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки                   КАК НомерСтроки,
	|	ТабличнаяЧасть.ДатаПроизводства              КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|	ТабличнаяЧасть.Получатель                    КАК Подразделение,
	|	ТабличнаяЧасть.СтатьяРасходов                КАК Статья,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов      КАК Аналитика,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))  КАК Сумма
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют
	|		ПО НАЧАЛОПЕРИОДА(ТабличнаяЧасть.ДатаПроизводства, ДЕНЬ) = ВтКоэффициентыПересчетаВалют.Период
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|	И ТабличнаяЧасть.Произведено
	|	И ТабличнаяЧасть.СписатьНаРасходы
	|	И ТабличнаяЧасть.СтатьяРасходов Ссылка ПланВидовХарактеристик.СтатьиАктивовПассивов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрЗапросаПустаяАналитикаУчетаПартий(Запрос);
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Запрос.Параметры);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКоэффициентыПересчетаВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКоэффициентыПересчетаВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;	
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса, ИмяРегистра);
	КонецЕсли;
	
	ТекстЗапроса = "
	// расход материалов из цеховой кладовой
	|ВЫБРАТЬ
	|	1                                                КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                       КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)           КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки                      КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ТабличнаяЧасть.РазделУчета                       КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Количество                        КАК Количество,
	|	0                                                КАК Стоимость,
	|	0                                                КАК СтоимостьБезНДС,
	|	0                                                КАК СтоимостьРегл,
	|	ТабличнаяЧасть.ХозяйственнаяОперация             КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                            КАК КорАналитикаУчетаНоменклатуры,
	|	ТабличнаяЧасть.РазделУчета                       КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаУчетаПартий,
	|	ТабличнаяЧасть.АналитикаФинансовогоУчета          КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                              КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
	|	ТабличнаяЧасть.ИдентификаторСтроки                 КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|	И (&ПериодЗаданияКРасчетуСебестоимости <> НЕОПРЕДЕЛЕНО И ТабличнаяЧасть.ДатаОтгрузки >= &ПериодЗаданияКРасчетуСебестоимости)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход материалов в цех
	|ВЫБРАТЬ
	|	2                                                 КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                        КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки                       КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                             КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                      КАК Организация,
	|	ТабличнаяЧасть.РазделУчета                        КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Количество                         КАК Количество,
	|	0                                                 КАК Стоимость,
	|	0                                                 КАК СтоимостьБезНДС,
	|	0                                                 КАК СтоимостьРегл,
	|	ТабличнаяЧасть.ХозяйственнаяОперация              КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                      КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                      КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                      КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                      КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                      КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                      КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорПартия,
	|	ВЫБОР КОГДА &ФИФОСкользящаяОценка
	|		ТОГДА ТабличнаяЧасть.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											  КАК АналитикаУчетаПартий,
	|	ТабличнаяЧасть.АналитикаФинансовогоУчета          КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТабличнаяЧасть.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											  КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение) КАК ТипЗаписи,
	|	ТабличнаяЧасть.ИдентификаторСтроки                КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|	И (&ПериодЗаданияКРасчетуСебестоимости <> НЕОПРЕДЕЛЕНО И ТабличнаяЧасть.ДатаОтгрузки >= &ПериодЗаданияКРасчетуСебестоимости)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// расход сэкономленных материалов из цеха (передаваемых на склад или списываемых на расходы)
	|ВЫБРАТЬ
	|	3                                                КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                       КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)           КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПоступления                   КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ТабличнаяЧасть.РазделУчета                       КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Количество                        КАК Количество,
	|	0                                                КАК Стоимость,
	|	0                                                КАК СтоимостьБезНДС,
	|	0                                                КАК СтоимостьРегл,
	|	ТабличнаяЧасть.ХозяйственнаяОперация             КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                            КАК КорАналитикаУчетаНоменклатуры,
	|	ТабличнаяЧасть.КорРазделУчета                    КАК КорРазделУчета,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
	|			ТОГДА &Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяКалькуляции,
	|	ТабличнаяЧасть.СтатьяРасходов                    КАК СтатьяРасходовСписания,
	|	ТабличнаяЧасть.СтатьяРасходов                    КАК СтатьяАктивовПассивов,
	|	ТабличнаяЧасть.АналитикаРасходов                 КАК АналитикаРасходов,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов          КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаУчетаПартий,
	|	ТабличнаяЧасть.АналитикаФинансовогоУчета         КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
	|	ТабличнаяЧасть.ИдентификаторСтроки                  КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	(ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства)
	|	ИЛИ ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию))
	|	И (&ПериодЗаданияКРасчетуСебестоимости <> НЕОПРЕДЕЛЕНО И ТабличнаяЧасть.ДатаПоступления >= &ПериодЗаданияКРасчетуСебестоимости)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход сэкономленных материалов в цеховую кладовую
	|ВЫБРАТЬ
	|	4                                                КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                       КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПоступления                   КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ТабличнаяЧасть.КорРазделУчета                    КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Количество                        КАК Количество,
	|	0                                                КАК Стоимость,
	|	0                                                КАК СтоимостьБезНДС,
	|	0                                                КАК СтоимостьРегл,
	|	ТабличнаяЧасть.ХозяйственнаяОперация             КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорПартия,
	|	ВЫБОР КОГДА &ФИФОСкользящаяОценка
	|		ТОГДА ТабличнаяЧасть.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											 КАК АналитикаУчетаПартий,
	|	ТабличнаяЧасть.АналитикаФинансовогоУчета         КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТабличнаяЧасть.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											  КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение) КАК ТипЗаписи,
	|	ТабличнаяЧасть.ИдентификаторСтроки                    КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства)
	|	И (&ПериодЗаданияКРасчетуСебестоимости <> НЕОПРЕДЕЛЕНО И ТабличнаяЧасть.ДатаПоступления >= &ПериодЗаданияКРасчетуСебестоимости)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход продукции и побочных изделий
	|ВЫБРАТЬ
	|	5                                                КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                       КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПоступления                   КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ТабличнаяЧасть.РазделУчета                       КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов И НЕ ТабличнаяЧасть.ДополнениеДляДавальца
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов И ТабличнаяЧасть.ДополнениеДляДавальца
	|			ТОГДА &ВидЗапасовРаботы
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов И ТабличнаяЧасть.ДополнениеДляДавальца
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Количество                        КАК Количество,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(15, 2))   КАК Стоимость,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(15, 2))   КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл, 0) КАК ЧИСЛО(15, 2))  КАК СтоимостьРегл,
	|	ТабличнаяЧасть.ХозяйственнаяОперация             КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов И ТабличнаяЧасть.ДополнениеДляДавальца
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя
	|		КОГДА НЕ &УчитыватьСебестоимостьТоваровПоВидамЗапасов И ТабличнаяЧасть.ДополнениеДляДавальца
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаАктивовПассивов,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &ВыпускающийЭтап
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорПартия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &ПустаяАналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК АналитикаУчетаПартий,
	|	ТабличнаяЧасть.АналитикаФинансовогоУчета         КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА &ПустаяАналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											  КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)   КАК ТипЗаписи,
	|	ТабличнаяЧасть.ИдентификаторСтроки                   КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют
	|		ПО НАЧАЛОПЕРИОДА(ТабличнаяЧасть.ДатаПоступления, ДЕНЬ) = ВтКоэффициентыПересчетаВалют.Период
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
	|	И (&ПериодЗаданияКРасчетуСебестоимости <> НЕОПРЕДЕЛЕНО И ТабличнаяЧасть.ДатаПоступления >= &ПериодЗаданияКРасчетуСебестоимости)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// расход продукции и побочных изделий из цеха на статью расходов
	|ВЫБРАТЬ
	|	6                                                КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                          КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)           КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПоступления                      КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ТабличнаяЧасть.РазделУчета                          КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК КорВидЗапасов,
	|	ТабличнаяЧасть.Количество                           КАК Количество,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(15, 2))   КАК Стоимость,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(15, 2))   КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл, 0) КАК ЧИСЛО(15, 2))  КАК СтоимостьРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию) КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                            КАК КорАналитикаУчетаНоменклатуры,
	|	ТабличнаяЧасть.КорРазделУчета                       КАК КорРазделУчета,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
	|			ТОГДА &Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяКалькуляции,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ТОГДА ТабличнаяЧасть.СтатьяРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК СтатьяРасходовСписания,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|			ТОГДА ТабличнаяЧасть.СтатьяРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК СтатьяАктивовПассивов,
	|	ТабличнаяЧасть.АналитикаРасходов                 КАК АналитикаРасходов,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов          КАК АналитикаАктивовПассивов,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &ВыпускающийЭтап
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорПартия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &ПустаяАналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК АналитикаУчетаПартий,
	|	ТабличнаяЧасть.АналитикаФинансовогоУчета         КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА &ПустаяАналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 											  КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
	|	ТабличнаяЧасть.ИдентификаторСтроки                   КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют
	|		ПО НАЧАЛОПЕРИОДА(ТабличнаяЧасть.ДатаПоступления, ДЕНЬ) = ВтКоэффициентыПересчетаВалют.Период
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
	|	И ТабличнаяЧасть.СписатьНаРасходы
	|	И НЕ ТабличнаяЧасть.ДополнениеДляДавальца
	|	И (&ПериодЗаданияКРасчетуСебестоимости <> НЕОПРЕДЕЛЕНО И ТабличнаяЧасть.ДатаПоступления >= &ПериодЗаданияКРасчетуСебестоимости)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход побочных изделий на партию производства
	|ВЫБРАТЬ
	|	8                                                КАК Порядок,
	|	ТабличнаяЧасть.НомерСтроки                          КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаПоступления                      КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ ТабличнаяЧасть.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
	|	КОНЕЦ                                         КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТабличнаяЧасть.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорВидЗапасов,
	|	- ТабличнаяЧасть.Количество                         КАК Количество,
	|	- ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(15, 2))   КАК Стоимость,
	|	- ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуУпр, 0) КАК ЧИСЛО(15, 2))   КАК СтоимостьБезНДС,
	|	- ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл, 0) КАК ЧИСЛО(15, 2))  КАК СтоимостьРегл,
	|	ТабличнаяЧасть.ХозяйственнаяОперация                КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	ТабличнаяЧасть.СтатьяКалькуляции                    КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаАктивовПассивов,
	|	&ВыпускающийЭтап                                 КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО									 КАК АналитикаУчетаПартий,
	|	ТабличнаяЧасть.АналитикаФинансовогоУчета            КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА &ВыпускПодДеятельность
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО									 КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)  КАК ТипЗаписи,
	|	ТабличнаяЧасть.ИдентификаторСтроки                  КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ТабличнаяЧасть
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют
	|		ПО НАЧАЛОПЕРИОДА(ТабличнаяЧасть.ДатаПоступления, ДЕНЬ) = ВтКоэффициентыПересчетаВалют.Период
	|
	|ГДЕ
	|	ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость)
	|	И НЕ ТабличнаяЧасть.ДополнениеДляДавальца
	|	И (&ПериодЗаданияКРасчетуСебестоимости <> НЕОПРЕДЕЛЕНО И ТабличнаяЧасть.ДатаПоступления >= &ПериодЗаданияКРасчетуСебестоимости)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// расход работ на производство
	|ВЫБРАТЬ
	|	6                                                КАК Порядок,
	|	ВидыЗапасов.НомерСтроки                          КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)           КАК ВидДвижения,
	|	ВидыЗапасов.ДатаОтгрузки                         КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ВидыЗапасов.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ВидыЗапасов.РазделУчета                          КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК КорВидЗапасов,
	|	ВидыЗапасов.Количество                           КАК Количество,
	|	0                                                КАК Стоимость,
	|	0                                                КАК СтоимостьБезНДС,
	|	0                                                КАК СтоимостьРегл,
	|	ВидыЗапасов.ХозяйственнаяОперация                КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ ВидыЗапасов.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                            КАК КорАналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.КорРазделУчета                       КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК Партия,
	|	&ВыпускающийЭтап                                 КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаФинансовогоУчета,
	|	&ВыпускПодДеятельность                           КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаФинансовогоУчета,
	|	&ВыпускПодДеятельность                           КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
	|	НЕОПРЕДЕЛЕНО                                     КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|
	|ГДЕ
	|	ВидыЗапасов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|	И (&ПериодЗаданияКРасчетуСебестоимости <> НЕОПРЕДЕЛЕНО И ВидыЗапасов.ДатаОтгрузки >= &ПериодЗаданияКРасчетуСебестоимости)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход работ на производство
	|ВЫБРАТЬ
	|	6                                                КАК Порядок,
	|	ВидыЗапасов.НомерСтроки                          КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
	|	ВидыЗапасов.ДатаОтгрузки                         КАК Период,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ ВидыЗапасов.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                     КАК Организация,
	|	ВидыЗапасов.КорРазделУчета                       КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорВидЗапасов,
	|	ВидыЗапасов.Количество                           КАК Количество,
	|	0                                                КАК Стоимость,
	|	0                                                КАК СтоимостьБезНДС,
	|	0                                                КАК СтоимостьРегл,
	|	ВидыЗапасов.ХозяйственнаяОперация                КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                     КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                     КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаАктивовПассивов,
	|	&ВыпускающийЭтап                                 КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаФинансовогоУчета,
	|	&ВыпускПодДеятельность                           КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                     КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение) КАК ТипЗаписи,
	|	НЕОПРЕДЕЛЕНО                                     КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|
	|ГДЕ
	|	ВидыЗапасов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|	И (&ПериодЗаданияКРасчетуСебестоимости <> НЕОПРЕДЕЛЕНО И ВидыЗапасов.ДатаОтгрузки >= &ПериодЗаданияКРасчетуСебестоимости)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Порядок,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЗаказыКлиентов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЗаказыКлиентов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	НачалоПериода(&Период, День)            КАК Период,
	|	&ЗаказПереработчику                     КАК ЗаказКлиента,
	|	ТабличнаяЧасть.Номенклатура              КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика            КАК Характеристика,
	|	ТабличнаяЧасть.Серия                     КАК Серия,
	|	ТабличнаяЧасть.КодСтроки                 КАК КодСтроки,
	|	ТабличнаяЧасть.Склад                     КАК Склад,
	|	ТабличнаяЧасть.Количество                КАК Заказано,
	|	0                                       КАК КОформлению
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И &ПроизводствоНаСтороне
	|	И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|	И ТабличнаяЧасть.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ТабличнаяЧасть.ДатаОтгрузки              КАК Период,
	|	&ЗаказПереработчику                     КАК ЗаказКлиента,
	|	ТабличнаяЧасть.Номенклатура              КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика            КАК Характеристика,
	|	ТабличнаяЧасть.Серия                     КАК Серия,
	|	ТабличнаяЧасть.КодСтроки                 КАК КодСтроки,
	|	ТабличнаяЧасть.Склад                     КАК Склад,
	|	0                                       КАК Заказано,
	|	ТабличнаяЧасть.Количество                КАК КОформлению
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И &ПроизводствоНаСтороне
	|	И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|	И ТабличнаяЧасть.ВариантОбеспечения В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЗаказыПоставщикам(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЗаказыПоставщикам";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                            КАК ВидДвижения,
	|	&Период                                                           КАК Период,
	|	&ЗаказПереработчику                                               КАК ЗаказПоставщику,
	|	ТабличнаяЧасть.Номенклатура                                        КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                                      КАК Характеристика,
	|	ТабличнаяЧасть.КодСтроки                                           КАК КодСтроки,
	|	ТабличнаяЧасть.Получатель                                          КАК Склад,
	|	ВЫБОР КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован) ТОГДА
	|		0
	|	ИНАЧЕ
	|		ТабличнаяЧасть.Количество
	|	КОНЕЦ                                                             КАК КОформлению,
	|	ТабличнаяЧасть.Количество                                          КАК Заказано
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И &ПроизводствоНаСтороне
	|	И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                            КАК ВидДвижения,
	|	&Период                                                           КАК Период,
	|	&ЗаказПереработчику                                               КАК ЗаказПоставщику,
	|	ТабличнаяЧасть.Номенклатура                                        КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                                      КАК Характеристика,
	|	ТабличнаяЧасть.КодСтроки                                           КАК КодСтроки,
	|	ТабличнаяЧасть.Получатель                                          КАК Склад,
	|	ВЫБОР КОГДА &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован) ТОГДА
	|		0
	|	ИНАЧЕ
	|		ТабличнаяЧасть.Количество
	|	КОНЕЦ                                                             КАК КОформлению,
	|	ТабличнаяЧасть.Количество                                          КАК Заказано
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И &ПроизводствоНаСтороне
	|	И &ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураДоходыРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса, ИмяРегистра);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКоэффициентыПересчетаВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКоэффициентыПересчетаВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.ДатаПоступления														КАК Период,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов 
		|				И ТабличнаяЧасть.СтатьяРасходов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|			ТОГДА ВЫБОР
		|					КОГДА ТабличнаяЧасть.СтатьяРасходов.ВидЦенностиНДС В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства))
		|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС)
		|					КОГДА ТабличнаяЧасть.СтатьяРасходов.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
		|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставНМА)
		|				КОНЕЦ
		|		КОГДА ТабличнаяЧасть.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
		|				И ТабличнаяЧасть.СтатьяРасходов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаПрочиеЦели)
		|		КОГДА ТабличнаяЧасть.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаПрочиеЦели)
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
		|	КОНЕЦ																				КАК ХозяйственнаяОперация,
		|	&Организация																		КАК Организация,
		|	&Подразделение																		КАК Подразделение,
		|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры											КАК АналитикаУчетаНоменклатуры,
		|	&Подразделение																		КАК Склад,
		|	ТабличнаяЧасть.ВидЗапасов															КАК ВидЗапасов,
		|	ТабличнаяЧасть.ВидЗапасов.ТипЗапасов													КАК ТипЗапасов,
		|	ТабличнаяЧасть.СтатьяРасходов														КАК СтатьяДоходовРасходов,
		|	ТабличнаяЧасть.АналитикаРасходов														КАК АналитикаРасходов,
		|	ТабличнаяЧасть.АналитикаАктивовПассивов												КАК АналитикаАктивовПассивов,
		|	ТабличнаяЧасть.Количество															КАК Количество,
		|	ТабличнаяЧасть.Сумма																	КАК Стоимость,
		|	ТабличнаяЧасть.Сумма																	КАК СтоимостьБезНДС,
		|	ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * ЕСТЬNULL(ВтКоэффициентыПересчетаВалют.КоэффициентПересчетаВВалютуРегл, 0) КАК ЧИСЛО(15, 2))	КАК СтоимостьРегл,
		|	ВЫБОР
		|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
		|			ТОГДА ТабличнаяЧасть.ВидЗапасов
		|		ИНАЧЕ ТабличнаяЧасть.Номенклатура
		|	КОНЕЦ																				КАК ИсточникГФУНоменклатуры
		|ИЗ
		|	ВтВидыЗапасов КАК ТабличнаяЧасть
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтКоэффициентыПересчетаВалют КАК ВтКоэффициентыПересчетаВалют
		|		ПО НАЧАЛОПЕРИОДА(ТабличнаяЧасть.ДатаПоступления, ДЕНЬ) = ВтКоэффициентыПересчетаВалют.Период
		|ГДЕ
		|	ТабличнаяЧасть.СписатьНаРасходы";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса, ИмяРегистра)
	
	ИмяТаблицы = "ВтВидыЗапасов";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	УстановитьПараметрЗапросаВидЗапасовРаботы(Запрос);
	
	ТекстЗапроса = "
	// ВидыЗапасовОбеспечение (товары)
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки                	КАК НомерСтроки,
	|	ЛОЖЬ                                    	КАК ДополнениеДляДавальца,
	|	СпрВидыЗапасов.ВидЗапасовВладельца			КАК ВидЗапасовВладельца,
	|	СпрВидыЗапасов.РеализацияЗапасовДругойОрганизации	КАК РеализацияЗапасовДругойОрганизации,
	|	ТабличнаяЧасть.ВидЗапасов                 	КАК ВидЗапасов,
	|	ТабличнаяЧасть.НомерГТД                   	КАК НомерГТД,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики        КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	Аналитика.Номенклатура                      КАК Номенклатура,
	|	Аналитика.Характеристика                    КАК Характеристика,
	|	Аналитика.Склад                             КАК Склад,
	|	Аналитика.Назначение                        КАК Назначение,
	|	ТабличнаяЧасть.Количество                	КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство) КАК ХозяйственнаяОперация,
	|	ЛОЖЬ                                        КАК СписатьНаРасходы,
	|	&ВыпускПодДеятельность                      КАК НалогообложениеНДС,
	|	КлючиПроизводства.КлючАналитики             КАК АналитикаУчетаНоменклатурыПолучателя,
	|	КлючиПроизводстваБезНазначения.КлючАналитики  КАК АналитикаУчетаНоменклатурыПолучателяБезНазначения,
	|	ТабличнаяЧасть.ДатаОтгрузки               	КАК ДатаОтгрузки,
	|	ДАТАВРЕМЯ(1,1,1)                            КАК ДатаПоступления,
	|	НЕОПРЕДЕЛЕНО                                КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО 								КАК АналитикаУчетаПартий,
	// давальческие материалы и полуфабрикаты всегда на отдельном разделе учета
	// для собственных раздел учетом учета являются производственные затраты
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ                                         КАК РазделУчета,
	|	НЕОПРЕДЕЛЕНО                                  КАК КорРазделУчета,
	|	0                                             КАК Сумма,
	|	""""                                          КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ВыпускающиеЭтапы.ОсновноеИзделиеНоменклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ВыпускающиеЭтапы.ОсновноеИзделиеНоменклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                         КАК АналитикаФинансовогоУчета
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВидыЗапасовОбеспечение КАК ТабличнаяЧасть
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ВыпускающиеЭтапы
	|	ПО ВыпускающиеЭтапы.Ссылка = ТабличнаяЧасть.Ссылка.ВыпускающийЭтап
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		ТабличнаяЧасть.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТабличнаяЧасть.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаБезНазначения.Назначение
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.Склад = АналитикаБезНазначения.Склад
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаБезНазначения.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводства
	|	ПО
	|		Аналитика.Номенклатура = КлючиПроизводства.Номенклатура
	|		И Аналитика.Характеристика = КлючиПроизводства.Характеристика
	|		И &Назначение = КлючиПроизводства.Назначение
	|		И &ПустаяСсылкаСерия = КлючиПроизводства.Серия
	|		И &Подразделение = КлючиПроизводства.Склад
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиПроизводства.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводстваБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = КлючиПроизводстваБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = КлючиПроизводстваБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = КлючиПроизводстваБезНазначения.Назначение
	|		И &ПустаяСсылкаСерия = КлючиПроизводстваБезНазначения.Серия
	|		И &Подразделение = КлючиПроизводстваБезНазначения.Склад
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиПроизводстваБезНазначения.СтатьяКалькуляции
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ВидыЗапасовОбеспечение (работы, строится по ТЧ ОбеспечениеМатериаламиИРаботами)
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки                    КАК НомерСтроки,
	|	ЛОЖЬ                                          КАК ДополнениеДляДавальца,
	|	НЕОПРЕДЕЛЕНО                                  КАК ВидЗапасовВладельца,
	|	ЛОЖЬ                                          КАК РеализацияЗапасовДругойОрганизации,
	|	&ВидЗапасовРаботы                             КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                  КАК НомерГТД,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры     КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики          КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	Аналитика.Номенклатура                        КАК Номенклатура,
	|	Аналитика.Характеристика                      КАК Характеристика,
	|	Аналитика.Склад                               КАК Склад,
	|	Аналитика.Назначение                          КАК Назначение,
	|	ТабличнаяЧасть.Количество                     КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство) КАК ХозяйственнаяОперация,
	|	ЛОЖЬ                                          КАК СписатьНаРасходы,
	|	&ВыпускПодДеятельность                        КАК НалогообложениеНДС,
	|	КлючиПроизводства.КлючАналитики               КАК АналитикаУчетаНоменклатурыПолучателя,
	|	КлючиПроизводстваБезНазначения.КлючАналитики  КАК АналитикаУчетаНоменклатурыПолучателяБезНазначения,
	|	ТабличнаяЧасть.ДатаОтгрузки                   КАК ДатаОтгрузки,
	|	ДАТАВРЕМЯ(1,1,1)                              КАК ДатаПоступления,
	|	НЕОПРЕДЕЛЕНО                                  КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                  КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                  КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                  КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                  КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО 								  КАК АналитикаУчетаПартий,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|	НЕОПРЕДЕЛЕНО                                  КАК КорРазделУчета,
	|	0                                             КАК Сумма,
	|	""""                                          КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ВыпускающиеЭтапы.ОсновноеИзделиеНоменклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ВыпускающиеЭтапы.ОсновноеИзделиеНоменклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                         КАК АналитикаФинансовогоУчета
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ВыпускающиеЭтапы
	|	ПО ВыпускающиеЭтапы.Ссылка = ТабличнаяЧасть.Ссылка.ВыпускающийЭтап
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТабличнаяЧасть.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаБезНазначения.Назначение
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.Склад = АналитикаБезНазначения.Склад
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаБезНазначения.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводства
	|	ПО
	|		Аналитика.Номенклатура = КлючиПроизводства.Номенклатура
	|		И Аналитика.Характеристика = КлючиПроизводства.Характеристика
	|		И &Назначение = КлючиПроизводства.Назначение
	|		И &ПустаяСсылкаСерия = КлючиПроизводства.Серия
	|		И &Подразделение = КлючиПроизводства.Склад
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиПроизводства.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводстваБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = КлючиПроизводстваБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = КлючиПроизводстваБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = КлючиПроизводстваБезНазначения.Назначение
	|		И &ПустаяСсылкаСерия = КлючиПроизводстваБезНазначения.Серия
	|		И &Подразделение = КлючиПроизводстваБезНазначения.Склад
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиПроизводстваБезНазначения.СтатьяКалькуляции
	|
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ВидыЗапасовЭкономия
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки					  КАК НомерСтроки,
	|	ЛОЖЬ                                          КАК ДополнениеДляДавальца,
	|	НЕОПРЕДЕЛЕНО                                  КАК ВидЗапасовВладельца,
	|	ЛОЖЬ                                          КАК РеализацияЗапасовДругойОрганизации,
	|	ТабличнаяЧасть.ВидЗапасов                 	  КАК ВидЗапасов,
	|	ТабличнаяЧасть.НомерГТД                   	  КАК НомерГТД,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры 	  КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики          КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	Аналитика.Номенклатура                        КАК Номенклатура,
	|	Аналитика.Характеристика                      КАК Характеристика,
	|	Аналитика.Склад                               КАК Склад,
	|	Аналитика.Назначение                          КАК Назначение,
	|	ТабличнаяЧасть.Количество                 	  КАК Количество,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СписатьНаРасходы
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства)
	|	КОНЕЦ                                         КАК ХозяйственнаяОперация,
	|	ТабличнаяЧасть.СписатьНаРасходы           	  КАК СписатьНаРасходы,
	|	&ВыпускПодДеятельность                        КАК НалогообложениеНДС,
	|	КлючиНаСкладе.КлючАналитики                   КАК АналитикаУчетаНоменклатурыПолучателя,
	|	КлючиНаСкладеБезНазначения.КлючАналитики      КАК АналитикаУчетаНоменклатурыПолучателяБезНазначения,
	|	НЕОПРЕДЕЛЕНО                                  КАК ДатаОтгрузки,
	|	ТабличнаяЧасть.ДатаОперации              	  КАК ДатаПоступления,
	|	НЕОПРЕДЕЛЕНО                                  КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                  КАК СтатьяКалькуляции,
	|	ТабличнаяЧасть.СтатьяРасходов             	  КАК СтатьяРасходов,
	|	ТабличнаяЧасть.АналитикаРасходов          	  КАК АналитикаРасходов,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов   	  КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО 								  КАК АналитикаУчетаПартий,
	// давальческие материалы и полуфабрикаты всегда на отдельном разделе учета
	// для собственных раздел учетом учета являются производственные затраты
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ                                         КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		КОГДА ТабличнаяЧасть.СписатьНаРасходы ТОГДА
	|			НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ                                         КАК КорРазделУчета,
	|	0                                             КАК Сумма,
	|	ТабличнаяЧасть.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ВыпускающиеЭтапы.ОсновноеИзделиеНоменклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ВыпускающиеЭтапы.ОсновноеИзделиеНоменклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                         КАК АналитикаФинансовогоУчета
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВидыЗапасовЭкономия КАК ТабличнаяЧасть
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ВыпускающиеЭтапы
	|	ПО ВыпускающиеЭтапы.Ссылка = ТабличнаяЧасть.Ссылка.ВыпускающийЭтап
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		ТабличнаяЧасть.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТабличнаяЧасть.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаБезНазначения.Назначение
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.Склад = АналитикаБезНазначения.Склад
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаБезНазначения.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиНаСкладе
	|	ПО
	|		Аналитика.Номенклатура = КлючиНаСкладе.Номенклатура
	|		И Аналитика.Характеристика = КлючиНаСкладе.Характеристика
	|		И ТабличнаяЧасть.НазначениеПолучателя = КлючиНаСкладе.Назначение
	|		И ТабличнаяЧасть.Серия = КлючиНаСкладе.Серия
	|		И ТабличнаяЧасть.Склад = КлючиНаСкладе.Склад
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиНаСкладе.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиНаСкладеБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = КлючиНаСкладеБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = КлючиНаСкладеБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = КлючиНаСкладеБезНазначения.Назначение
	|		И ТабличнаяЧасть.Серия = КлючиНаСкладеБезНазначения.Серия
	|		И ТабличнаяЧасть.Склад = КлючиНаСкладеБезНазначения.Склад
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиНаСкладеБезНазначения.СтатьяКалькуляции
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ВыходныеИзделия
	// выпуск продукции на получателя
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки                     КАК НомерСтроки,
	|	ЛОЖЬ                                           КАК ДополнениеДляДавальца,
	|	НЕОПРЕДЕЛЕНО                                   КАК ВидЗапасовВладельца,
	|	ЛОЖЬ                                           КАК РеализацияЗапасовДругойОрганизации,
	|	ТабличнаяЧасть.ВидЗапасов                      КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)    КАК НомерГТД,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики           КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	ТабличнаяЧасть.Номенклатура                    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                  КАК Характеристика,
	|	ТабличнаяЧасть.Получатель                      КАК Склад,
	|	ТабличнаяЧасть.Назначение                       КАК Назначение,
	|	ТабличнаяЧасть.Количество                      КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|	ТабличнаяЧасть.СписатьНаРасходы                КАК СписатьНаРасходы,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаУчетаНоменклатурыПолучателя,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаУчетаНоменклатурыПолучателяБезНазначения,
	|	НЕОПРЕДЕЛЕНО                                   КАК ДатаОтгрузки,
	|	ТабличнаяЧасть.ДатаПроизводства                КАК ДатаПоступления,
	|	ТабличнаяЧасть.Получатель                      КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяКалькуляции,
	|	ТабличнаяЧасть.СтатьяРасходов                  КАК СтатьяРасходов,
	|	ТабличнаяЧасть.АналитикаРасходов               КАК АналитикаРасходов,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов        КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаУчетаПартий,
	// давальческие материалы и полуфабрикаты всегда на отдельном разделе учета
	// передаем из цеха
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ                                         КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СписатьНаРасходы ТОГДА
	|			НЕОПРЕДЕЛЕНО
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		КОГДА ТабличнаяЧасть.Получатель ССЫЛКА Справочник.СтруктураПредприятия ИЛИ ТабличнаяЧасть.Получатель.ЦеховаяКладовая ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ                                         КАК КорРазделУчета,
	|	0                                             КАК Сумма,
	|	ТабличнаяЧасть.ИдентификаторСтроки            КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ВыпускающиеЭтапы.ОсновноеИзделиеНоменклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ВыпускающиеЭтапы.ОсновноеИзделиеНоменклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                         КАК АналитикаФинансовогоУчета
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ВыпускающиеЭтапы
	|	ПО ВыпускающиеЭтапы.Ссылка = ТабличнаяЧасть.Ссылка.ВыпускающийЭтап
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО ТабличнаяЧасть.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаБезНазначения.Назначение
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.Склад = АналитикаБезНазначения.Склад
	|		И Аналитика.СтатьяКалькуляции = АналитикаБезНазначения.СтатьяКалькуляции
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Произведено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ВыходныеИзделия
	// выпуск работ по продукции давальца
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки                     КАК НомерСтроки,
	|	ИСТИНА                                         КАК ДополнениеДляДавальца,
	|	НЕОПРЕДЕЛЕНО                                   КАК ВидЗапасовВладельца,
	|	ЛОЖЬ                                           КАК РеализацияЗапасовДругойОрганизации,
	|	ТабличнаяЧасть.ВидЗапасов                      КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)    КАК НомерГТД,
	|	Аналитика.КлючАналитики                        КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики           КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	ТабличнаяЧасть.Номенклатура                    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                  КАК Характеристика,
	|	ТабличнаяЧасть.Получатель                      КАК Склад,
	|	ТабличнаяЧасть.Назначение                      КАК Назначение,
	|	ТабличнаяЧасть.Количество                      КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация,
	|	ТабличнаяЧасть.СписатьНаРасходы                КАК СписатьНаРасходы,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатурыПолучателя,
	|	АналитикаПоПолучателюБезНазначения.КлючАналитики КАК АналитикаУчетаНоменклатурыПолучателяБезНазначения,
	|	НЕОПРЕДЕЛЕНО                                   КАК ДатаОтгрузки,
	|	ТабличнаяЧасть.ДатаПроизводства                КАК ДатаПоступления,
	|	ТабличнаяЧасть.Получатель                      КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаУчетаПартий,
	// давальческие материалы и полуфабрикаты всегда на отдельном разделе учета
	// передаем из цеха
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|	НЕОПРЕДЕЛЕНО                                  КАК КорРазделУчета,
	|	0                                             КАК Сумма,
	|	ТабличнаяЧасть.ИдентификаторСтроки            КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ВыпускающиеЭтапы.ОсновноеИзделиеНоменклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ВыпускающиеЭтапы.ОсновноеИзделиеНоменклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                         КАК АналитикаФинансовогоУчета
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ВыпускающиеЭтапы
	|	ПО ВыпускающиеЭтапы.Ссылка = ТабличнаяЧасть.Ссылка.ВыпускающийЭтап
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаПоПолучателю
	|	ПО ТабличнаяЧасть.АналитикаУчетаНоменклатуры = АналитикаПоПолучателю.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПоПолучателюБезНазначения
	|	ПО
	|		АналитикаПоПолучателю.Номенклатура = АналитикаПоПолучателюБезНазначения.Номенклатура
	|		И АналитикаПоПолучателю.Характеристика = АналитикаПоПолучателюБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаПоПолучателюБезНазначения.Назначение
	|		И АналитикаПоПолучателю.Серия = АналитикаПоПолучателюБезНазначения.Серия
	|		И АналитикаПоПолучателю.Склад = АналитикаПоПолучателюБезНазначения.Склад
	|		И АналитикаПоПолучателю.СтатьяКалькуляции = АналитикаПоПолучателюБезНазначения.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТабличнаяЧасть.Номенклатура = Аналитика.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = Аналитика.Характеристика
	|		И ТабличнаяЧасть.Назначение = Аналитика.Назначение
	|		И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И ТабличнаяЧасть.Назначение.Заказ.Подразделение = Аналитика.Склад
	|		И Аналитика.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|		ТабличнаяЧасть.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = АналитикаБезНазначения.Характеристика
	|		И АналитикаБезНазначения.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И АналитикаБезНазначения.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И ТабличнаяЧасть.Назначение.Заказ.Подразделение = АналитикаБезНазначения.Склад
	|		И АналитикаБезНазначения.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.Произведено
	|	И ТабличнаяЧасть.ПередатьДавальцу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ПобочныеИзделия
	// выпуск продукции на получателя
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки                     КАК НомерСтроки,
	|	ЛОЖЬ                                           КАК ДополнениеДляДавальца,
	|	НЕОПРЕДЕЛЕНО                                   КАК ВидЗапасовВладельца,
	|	ЛОЖЬ                                           КАК РеализацияЗапасовДругойОрганизации,
	|	ТабличнаяЧасть.ВидЗапасов                      КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)    КАК НомерГТД,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики           КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	ТабличнаяЧасть.Номенклатура                    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                  КАК Характеристика,
	|	ТабличнаяЧасть.Получатель                      КАК Склад,
	|	ТабличнаяЧасть.Назначение                      КАК Назначение,
	|	ТабличнаяЧасть.Количество                      КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|	ТабличнаяЧасть.СписатьНаРасходы                КАК СписатьНаРасходы,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	// аналитика получателя соответствует аналитике поступления в котел, со статьей калькуляции
	|	АналитикаПолучателя.КлючАналитики              КАК АналитикаУчетаНоменклатурыПолучателя,
	|	АналитикаПолучателяБезНазначения.КлючАналитики КАК АналитикаУчетаНоменклатурыПолучателяБезНазначения,
	|	НЕОПРЕДЕЛЕНО                                   КАК ДатаОтгрузки,
	|	ТабличнаяЧасть.ДатаПроизводства                КАК ДатаПоступления,
	|	ТабличнаяЧасть.Получатель                      КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяКалькуляции,
	|	ТабличнаяЧасть.СтатьяРасходов                  КАК СтатьяРасходов,
	|	ТабличнаяЧасть.АналитикаРасходов               КАК АналитикаРасходов,
	|	ТабличнаяЧасть.АналитикаАктивовПассивов        КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаУчетаПартий,
	// давальческие материалы и полуфабрикаты всегда на отдельном разделе учета
	// передаем из цеха
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ                                          КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СписатьНаРасходы ТОГДА
	|			НЕОПРЕДЕЛЕНО
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТабличнаяЧасть.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		КОГДА ТабличнаяЧасть.Получатель ССЫЛКА Справочник.СтруктураПредприятия ИЛИ ТабличнаяЧасть.Получатель.ЦеховаяКладовая ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ                                         КАК КорРазделУчета,
	|	ТабличнаяЧасть.Сумма                           КАК Сумма,
	|	ТабличнаяЧасть.ИдентификаторСтроки             КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ВыпускающиеЭтапы.ОсновноеИзделиеНоменклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ВыпускающиеЭтапы.ОсновноеИзделиеНоменклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                         КАК АналитикаФинансовогоУчета
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ВыпускающиеЭтапы
	|	ПО ВыпускающиеЭтапы.Ссылка = ТабличнаяЧасть.Ссылка.ВыпускающийЭтап
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО ТабличнаяЧасть.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаБезНазначения.Назначение
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.Склад = АналитикаБезНазначения.Склад
	|		И Аналитика.СтатьяКалькуляции = АналитикаБезНазначения.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателя
	|	ПО
	|		ТабличнаяЧасть.Номенклатура = АналитикаПолучателя.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = АналитикаПолучателя.Характеристика
	|		И &Назначение = АналитикаПолучателя.Назначение
	|		И &ПустаяСсылкаСерия = АналитикаПолучателя.Серия
	|		И &Подразделение = АналитикаПолучателя.Склад
	|		И ТабличнаяЧасть.СтатьяКалькуляции = АналитикаПолучателя.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателяБезНазначения
	|	ПО
	|		ТабличнаяЧасть.Номенклатура = АналитикаПолучателяБезНазначения.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = АналитикаПолучателяБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаПолучателяБезНазначения.Назначение
	|		И &ПустаяСсылкаСерия = АналитикаПолучателяБезНазначения.Серия
	|		И &Подразделение = АналитикаПолучателяБезНазначения.Склад
	|		И ТабличнаяЧасть.СтатьяКалькуляции = АналитикаПолучателяБезНазначения.СтатьяКалькуляции
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Произведено
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ПобочныеИзделия
	// выпуск работ по продукции давальца
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки                     КАК НомерСтроки,
	|	ИСТИНА                                         КАК ДополнениеДляДавальца,
	|	НЕОПРЕДЕЛЕНО                                   КАК ВидЗапасовВладельца,
	|	ЛОЖЬ                                           КАК РеализацияЗапасовДругойОрганизации,
	|	&ВидЗапасовРаботы                              КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)    КАК НомерГТД,
	|	Аналитика.КлючАналитики                        КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики           КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	ТабличнаяЧасть.Номенклатура                    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                  КАК Характеристика,
	|	ТабличнаяЧасть.Получатель                      КАК Склад,
	|	ТабличнаяЧасть.Назначение                      КАК Назначение,
	|	ТабличнаяЧасть.Количество                      КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость) КАК ХозяйственнаяОперация,
	|	ТабличнаяЧасть.СписатьНаРасходы                КАК СписатьНаРасходы,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	|	АналитикаПолучателя.КлючАналитики              КАК АналитикаУчетаНоменклатурыПолучателя,
	|	АналитикаПолучателяБезНазначения.КлючАналитики КАК АналитикаУчетаНоменклатурыПолучателяБезНазначения,
	|	НЕОПРЕДЕЛЕНО                                   КАК ДатаОтгрузки,
	|	ТабличнаяЧасть.ДатаПроизводства                КАК ДатаПоступления,
	|	ТабличнаяЧасть.Получатель                      КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаУчетаПартий,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорРазделУчета,
	|	ТабличнаяЧасть.Сумма                           КАК Сумма,
	|	ТабличнаяЧасть.ИдентификаторСтроки             КАК ИдентификаторСтроки,
	|	ВЫБОР
	|		КОГДА &АналитическийУчетПоГруппамПродукции
	|			И НЕ ВыпускающиеЭтапы.ОсновноеИзделиеНоменклатура.ГруппаАналитическогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			ТОГДА ВыпускающиеЭтапы.ОсновноеИзделиеНоменклатура.ГруппаАналитическогоУчета
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                         КАК АналитикаФинансовогоУчета
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ВыпускающиеЭтапы
	|	ПО ВыпускающиеЭтапы.Ссылка = ТабличнаяЧасть.Ссылка.ВыпускающийЭтап
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТабличнаяЧасть.Номенклатура = Аналитика.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = Аналитика.Характеристика
	|		И ТабличнаяЧасть.Назначение = Аналитика.Назначение
	|		И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И ТабличнаяЧасть.Назначение.Заказ.Подразделение = Аналитика.Склад
	|		И Аналитика.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|		ТабличнаяЧасть.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = АналитикаБезНазначения.Характеристика
	|		И АналитикаБезНазначения.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И АналитикаБезНазначения.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И ТабличнаяЧасть.Назначение.Заказ.Подразделение = АналитикаБезНазначения.Склад
	|		И АналитикаБезНазначения.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателя
	|	ПО
	|		ТабличнаяЧасть.Номенклатура = АналитикаПолучателя.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = АналитикаПолучателя.Характеристика
	|		И &Назначение = АналитикаПолучателя.Назначение
	|		И &ПустаяСсылкаСерия = АналитикаПолучателя.Серия
	|		И &Подразделение = АналитикаПолучателя.Склад
	|		И ТабличнаяЧасть.СтатьяКалькуляции = АналитикаПолучателя.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателяБезНазначения
	|	ПО
	|		ТабличнаяЧасть.Номенклатура = АналитикаПолучателяБезНазначения.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = АналитикаПолучателяБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаПолучателяБезНазначения.Назначение
	|		И &ПустаяСсылкаСерия = АналитикаПолучателяБезНазначения.Серия
	|		И &Подразделение = АналитикаПолучателяБезНазначения.Склад
	|		И ТабличнаяЧасть.СтатьяКалькуляции = АналитикаПолучателяБезНазначения.СтатьяКалькуляции
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Произведено
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ТабличнаяЧасть.ПередатьДавальцу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Расход работ на производство
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки                     КАК НомерСтроки,
	|	ЛОЖЬ                                           КАК ДополнениеДляДавальца,
	|	НЕОПРЕДЕЛЕНО                                   КАК ВидЗапасовВладельца,
	|	ЛОЖЬ                                           КАК РеализацияЗапасовДругойОрганизации,
	|	&ВидЗапасовРаботы                              КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)    КАК НомерГТД,
	|	ТабличнаяЧасть.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики           КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	ТабличнаяЧасть.Номенклатура                    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                  КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО                                   КАК Склад,
	|	НЕОПРЕДЕЛЕНО                                   КАК Назначение,
	|	ТабличнаяЧасть.Количество                      КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства) КАК ХозяйственнаяОперация,
	|	ЛОЖЬ                                           КАК СписатьНаРасходы,
	|	&ВыпускПодДеятельность                         КАК НалогообложениеНДС,
	// аналитика получателя соответствует аналитике поступления в котел, со статьей калькуляции
	|	АналитикаПолучателя.КлючАналитики              КАК АналитикаУчетаНоменклатурыПолучателя,
	|	АналитикаПолучателяБезНазначения.КлючАналитики КАК АналитикаУчетаНоменклатурыПолучателяБезНазначения,
	|	ТабличнаяЧасть.ДатаРасхода                     КАК ДатаОтгрузки,
	|	ДАТАВРЕМЯ(1,1,1)                               КАК ДатаПоступления,
	|	НЕОПРЕДЕЛЕНО                                   КАК Получатель,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаУчетаПартий,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство) КАК КорРазделУчета,
	|	0                                              КАК Сумма,
	|	НЕОПРЕДЕЛЕНО                                   КАК ИдентификаторСтроки,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаФинансовогоУчета
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.РасходМатериаловИРабот КАК ТабличнаяЧасть
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО ТабличнаяЧасть.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаБезНазначения.Назначение
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.Склад = АналитикаБезНазначения.Склад
	|		И Аналитика.СтатьяКалькуляции = АналитикаБезНазначения.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателя
	|	ПО
	|		ТабличнаяЧасть.Номенклатура = АналитикаПолучателя.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = АналитикаПолучателя.Характеристика
	|		И &Назначение = АналитикаПолучателя.Назначение
	|		И &ПустаяСсылкаСерия = АналитикаПолучателя.Серия
	|		И &Подразделение = АналитикаПолучателя.Склад
	|		И ТабличнаяЧасть.СтатьяКалькуляции = АналитикаПолучателя.СтатьяКалькуляции
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПолучателяБезНазначения
	|	ПО
	|		АналитикаПолучателя.Номенклатура = АналитикаПолучателяБезНазначения.Номенклатура
	|		И АналитикаПолучателя.Характеристика = АналитикаПолучателяБезНазначения.Характеристика
	|		И &ПустаяСсылкаНазначение = АналитикаПолучателяБезНазначения.Назначение
	|		И АналитикаПолучателя.Серия = АналитикаПолучателяБезНазначения.Серия
	|		И АналитикаПолучателя.Склад = АналитикаПолучателяБезНазначения.Склад
	|		И АналитикаПолучателя.СтатьяКалькуляции = АналитикаПолучателяБезНазначения.СтатьяКалькуляции
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Выходные.ДатаПроизводства, МЕСЯЦ), ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Выходные
	|ГДЕ
	|	Выходные.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И Выходные.Произведено
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(Выходные.ДатаПроизводства, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Выходные
	|ГДЕ
	|	Выходные.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И Выходные.Произведено
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период,
	|	&Организация,
	|	НАЧАЛОПЕРИОДА(Побочные.ДатаПроизводства, ДЕНЬ)
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК Побочные
	|ГДЕ
	|	Побочные.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И Побочные.Произведено
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период,
	|	&Организация,
	|	НАЧАЛОПЕРИОДА(ОбеспечениеМатериаламиИРаботами.ДатаОтгрузки, ДЕНЬ)
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ОбеспечениеМатериаламиИРаботами
	|ГДЕ
	|	ОбеспечениеМатериаламиИРаботами.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период,
	|	&Организация,
	|	НАЧАЛОПЕРИОДА(ЭкономияМатериалов.ДатаОперации, ДЕНЬ)
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ЭкономияМатериалов
	|ГДЕ
	|	ЭкономияМатериалов.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтМестаХраненияМатериалы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтМестаХраненияМатериалы(Запрос, ТекстыЗапроса, ИмяРегистра);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	&Распоряжение КАК РазделительЗаписи,
	|	&Период КАК ДатаДокументаИБ,
	|	&Номер КАК НомерДокументаИБ,
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	&Организация КАК Организация,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ПартнерРеестраДокументов КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&Подразделение КАК Подразделение,
	|	&Ответственный КАК Ответственный,
	|	ВЫРАЗИТЬ(&Комментарий КАК СТРОКА (100)) КАК Комментарий,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
	|	0 КАК Сумма,
	|	&Статус КАК Статус,
	|	&Проведен КАК Проведен,
	|	&ПометкаУдаления КАК ПометкаУдаления,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	"""""""" КАК Дополнительно,
	|	&Период КАК ДатаПервичногоДокумента,
	|	&Номер КАК НомерПервичногоДокумента,
	|	ЕСТЬNULL(ВтМестаХраненияМатериалы.МестоХранения, &Подразделение) КАК МестоХранения
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтМестаХраненияМатериалы КАК ВтМестаХраненияМатериалы
	|		ПО ЭтапПроизводства2_2.Ссылка = ВтМестаХраненияМатериалы.Ссылка
	|ГДЕ
	|	ЭтапПроизводства2_2.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтМестаХраненияМатериалы(Запрос, ТекстыЗапроса, ИмяРегистра)
	
	ИмяТаблицы = "ВтМестаХраненияМатериалы";
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТабличнаяЧасть.Склад) = 1
		|			ТОГДА МАКСИМУМ(ТабличнаяЧасть.Склад)
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК МестоХранения
		|ПОМЕСТИТЬ ВтМестаХраненияМатериалы
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧасть.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПроведениеРегламентированныйУчет

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт

#Область ТекстДвижениеМатериальныхЗатрат // (Дт 2Х :: Кт 2Х)
	ТекстДвижениеМатериальныхЗатрат = "
	|ВЫБРАТЬ // Движение материальных затрат (Дт 2Х :: Кт 2Х)
	|	Операция.Ссылка КАК Ссылка,
	|	Стоимости.Период КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Стоимости.СуммаБалансовая КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	КорСкладыПодразделения.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	КорСкладыПодразделения.Подразделение КАК ПодразделениеДт,
	|	Стоимости.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Стоимости.КорНоменклатура КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА Стоимости.КорНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|	КОНЕЦ КАК СубконтоДт2,
	|	Стоимости.КорГруппаПродукции КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Стоимости.СуммаНУ КАК СуммаНУДт,
	|	Стоимости.СуммаПР КАК СуммаПРДт,
	|	Стоимости.СуммаВР КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	СкладыПодразделения.Подразделение КАК МестоУчетаКт,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	СкладыПодразделения.Подразделение КАК ПодразделениеКт,
	|	Стоимости.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СубконтоКт1,
	|	Стоимости.ГруппаПродукции КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Стоимости.СуммаНУ КАК СуммаНУКт,
	|	Стоимости.СуммаПР КАК СуммаПРКт,
	|	Стоимости.СуммаВР КАК СуммаВРКт,
	|	""Выпуск собственной продукции"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЭтапПроизводства2_2 КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Стоимости.Ссылка = Операция.Ссылка
	|		И Стоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Стоимости.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		И Стоимости.СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСкладыПодразделения КАК СкладыПодразделения
	|	ПО
	|		СкладыПодразделения.Склад = Стоимости.Склад
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСкладыПодразделения КАК КорСкладыПодразделения
	|	ПО
	|		КорСкладыПодразделения.Склад = Стоимости.КорСклад
	|
	|ГДЕ
	|	НЕ СкладыПодразделения.Подразделение = КорСкладыПодразделения.Подразделение
	|	ИЛИ НЕ Стоимости.НаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|	ИЛИ НЕ Стоимости.ГруппаПродукции = Стоимости.КорГруппаПродукции
	|";
#КонецОбласти

#Область ТекстВыпускПродукцииДавальца // (Дт 002 :: Кт )
	ТекстВыпускПродукцииДавальца = "
	|ВЫБРАТЬ //// Выпуск продукции давальца (Дт 002 :: Кт )
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ЕСТЬNULL(Стоимости.СуммаЗабалансовая, Строки.СуммаЗабалансовая)) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	СУММА(Строки.Количество) КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Выпуск продукции давальца"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЭтапПроизводства2_2 КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		И Строки.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение),
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Строки.Период,
	|	Строки.Контрагент,
	|	Строки.Номенклатура,
	|	Операция.Организация,
	|	Операция.Подразделение	
	|";
#КонецОбласти

#Область ТекстСписаниеНаРасходы // (Дт 20, 2Х, 44, 91.02 :: Кт 20)
	ТекстСписаниеНаРасходы = "
	|ВЫБРАТЬ //// Списание на прочие расходы (Дт 20, 2Х, 44, 91.02 :: Кт 20)
	|	Операция.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(Строки.Период, Стоимости.Период) КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.НаправлениеДеятельности, Строки.НаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	ЕСТЬNULL(Стоимости.НаправлениеДеятельности, Строки.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Списание на прочие расходы"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЭтапПроизводства2_2 КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И НЕ Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		И ТИПЗНАЧЕНИЯ(Строки.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|		И Строки.СтатьяАктивовПассивов = Стоимости.СтатьяАктивовПассивов
	|		И Строки.АналитикаАктивовПассивов = Стоимости.АналитикаАктивовПассивов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|ГДЕ
	|	НЕ ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) = 0
	|";
#КонецОбласти

#Область ТекстСписаниеМатериаловДавальца // (Дт :: Кт 003.02)
	ТекстСписаниеМатериаловДавальца = "
	|ВЫБРАТЬ // Списание материалов давальца (Дт :: Кт 003.02)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ЕСТЬNULL(Стоимости.СуммаЗабалансовая, Строки.СуммаЗабалансовая)) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Склад КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	СУММА(Строки.Количество) КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание материалов давальца"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЭтапПроизводства2_2 КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.ХозяйственнаяОперация = Стоимости.ХозяйственнаяОперация
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|	И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Строки.Период,
	|	Строки.Контрагент,
	|	Строки.Номенклатура,
	|	Строки.Склад,
	|	Операция.Организация,
	|	Операция.Подразделение	
	|";
#КонецОбласти

#Область ТекстСписаниеПолуфабрикатовДавальцаЗабаланс // (Дт :: Кт 002)
	ТекстСписаниеПолуфабрикатовДавальцаЗабаланс = "
	|ВЫБРАТЬ // Списание материалов давальца (Дт :: Кт 002)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(Строки.Период, Стоимости.Период) КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СуммаЗабалансовая, Строки.СуммаЗабалансовая) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Склад КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание полуфабрикатов давальца"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЭтапПроизводства2_2 КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|		И Строки.Количество > 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.ХозяйственнаяОперация = Стоимости.ХозяйственнаяОперация
	|		И КОНЕЦПЕРИОДА(Строки.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(Стоимости.Период, МЕСЯЦ)
	|";
#КонецОбласти

#Область ТекстСписаниеНаПрочиеАктивыВыходныхИзделий // (Дт ХХ.ХХ :: Кт 20)
	ТекстСписаниеНаПрочиеАктивыВыходныхИзделий = "
	|ВЫБРАТЬ //// Списание на прочие активы (Дт ХХ.ХХ :: Кт 20)
	|	Операция.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(Строки.Период, Стоимости.Период) КАК Период,
	|	Операция.Организация КАК Организация,
	|	Таблица.НомерСтроки КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.НаправлениеДеятельности, Строки.НаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	Таблица.СчетУчета КАК СчетДт,
	|	Таблица.Субконто1 КАК СубконтоДт1,
	|	Таблица.Субконто2 КАК СубконтоДт2,
	|	Таблица.Субконто3 КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	Строки.СтатьяРасходов КАК СубконтоКт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоКт2,
	|	Строки.ГруппаПродукции КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Списание на прочие активы выходных изделей"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЭтапПроизводства2_2 КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И КОНЕЦПЕРИОДА(Строки.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(Стоимости.Период, МЕСЯЦ)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Таблица
	|	ПО
	|		Операция.Ссылка = Таблица.Ссылка
	|		И Строки.ИдентификаторСтроки = Таблица.ИдентификаторСтроки
	|		И Строки.Номенклатура = Таблица.Номенклатура
	|
	|ГДЕ
	|	Строки.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|";
#КонецОбласти

#Область ТекстСписаниеНаПрочиеАктивыПобочныхИзделий // (Дт ХХ.ХХ :: Кт 20)
	ТекстСписаниеНаПрочиеАктивыПобочныхИзделий = "
	|ВЫБРАТЬ //// Списание на прочие активы (Дт ХХ.ХХ :: Кт 20)
	|	Операция.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(Строки.Период, Стоимости.Период) КАК Период,
	|	Операция.Организация КАК Организация,
	|	Таблица.НомерСтроки КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.НаправлениеДеятельности, Строки.НаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	Таблица.СчетУчета КАК СчетДт,
	|	Таблица.Субконто1 КАК СубконтоДт1,
	|	Таблица.Субконто2 КАК СубконтоДт2,
	|	Таблица.Субконто3 КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	Строки.СтатьяРасходов КАК СубконтоКт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоКт2,
	|	Строки.ГруппаПродукции КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Списание на прочие активы побочных изделий"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЭтапПроизводства2_2 КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И КОНЕЦПЕРИОДА(Строки.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(Стоимости.Период, МЕСЯЦ)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК Таблица
	|	ПО
	|		Операция.Ссылка = Таблица.Ссылка
	|		И Строки.ИдентификаторСтроки = Таблица.ИдентификаторСтроки
	|		И Строки.Номенклатура = Таблица.Номенклатура
	|
	|ГДЕ
	|	Строки.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|";
#КонецОбласти

#Область ТекстСписаниеНаПрочиеАктивыЭкономииМатериалов // (Дт ХХ.ХХ :: Кт 20)
	ТекстСписаниеНаПрочиеАктивыЭкономииМатериалов = "
	|ВЫБРАТЬ //// Списание на прочие активы (Дт ХХ.ХХ :: Кт 20)
	|	Операция.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(Строки.Период, Стоимости.Период) КАК Период,
	|	Операция.Организация КАК Организация,
	|	Таблица.НомерСтроки КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.НаправлениеДеятельности, Строки.НаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	Таблица.СчетУчета КАК СчетДт,
	|	Таблица.Субконто1 КАК СубконтоДт1,
	|	Таблица.Субконто2 КАК СубконтоДт2,
	|	Таблица.Субконто3 КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	Строки.СтатьяРасходов КАК СубконтоКт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоКт2,
	|	Строки.ГруппаПродукции КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Списание на прочие активы экономии материалов"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЭтапПроизводства2_2 КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ИдентификаторСтроки = Стоимости.ИдентификаторСтроки
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И КОНЕЦПЕРИОДА(Строки.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(Стоимости.Период, МЕСЯЦ)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК Таблица
	|	ПО
	|		Операция.Ссылка = Таблица.Ссылка
	|		И Строки.ИдентификаторСтроки = Таблица.ИдентификаторСтроки
	|		И Строки.Номенклатура = Таблица.Номенклатура
	|
	|ГДЕ
	|	Строки.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|";
#КонецОбласти

#Область ПеремещениеТрудозатратНаПолучателяПродукции // (Дт 20 :: Кт 20)
	ПеремещениеТрудозатратНаПолучателяПродукции = "
	|ВЫБРАТЬ //// Перемещение трудозатрат на получателя продукции (Дт 20 :: Кт 20)
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СтоимостьРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	КорСкладыПодразделения.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	КорСкладыПодразделения.Подразделение КАК ПодразделениеДт,
	|	Строки.КорАналитикаУчетаПродукции.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.СдельнаяОплатаТруда) КАК СубконтоДт1,
	|	Строки.ВидРабот КАК СубконтоДт2,
	|	СпрНоменклатура.ГруппаАналитическогоУчета КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Операция.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	Строки.ГруппаПродукции КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перемещение трудозатрат на получателя продукции"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЭтапПроизводства2_2 КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ТрудозатратыНезавершенногоПроизводства КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		СпрНоменклатура.Ссылка = Операция.ОсновноеИзделиеНоменклатура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПродукции
	|	ПО
	|		АналитикаПродукции.КлючАналитики = Строки.КорАналитикаУчетаПродукции
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСкладыПодразделения КАК КорСкладыПодразделения
	|	ПО
	|		КорСкладыПодразделения.Склад = АналитикаПродукции.Склад
	|
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И (Строки.Подразделение <> КорСкладыПодразделения.Подразделение
	|		ИЛИ Строки.ГруппаПродукции <> СпрНоменклатура.ГруппаАналитическогоУчета)
	|";
#КонецОбласти

#Область ПеремещениеПостатейныхНаПолучателяПродукции // (Дт 20 :: Кт 20)
	ПеремещениеПостатейныхНаПолучателяПродукции = "
	|ВЫБРАТЬ //// Перемещение постатейных на получателя продукции (Дт 20 :: Кт 20)
	|	Операция.Ссылка КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СтоимостьРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	КорСкладыПодразделения.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	КорСкладыПодразделения.Подразделение КАК ПодразделениеДт,
	|	Строки.АналитикаУчетаПродукции.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2,
	|	СпрНоменклатура.ГруппаАналитическогоУчета КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СтоимостьРегл - Строки.ПостояннаяРазница - Строки.ВременнаяРазница КАК СуммаНУДт,
	|	Строки.ПостояннаяРазница КАК СуммаПРДт,
	|	Строки.ВременнаяРазница КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	Строки.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Операция.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	Строки.ГруппаПродукции КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СтоимостьРегл - Строки.ПостояннаяРазница - Строки.ВременнаяРазница КАК СуммаНУКт,
	|	Строки.ПостояннаяРазница КАК СуммаПРКт,
	|	Строки.ВременнаяРазница КАК СуммаВРКт,
	|	""Перемещение постатейных на получателя продукции"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ЭтапПроизводства2_2 КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПрочиеРасходыНезавершенногоПроизводства КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		СпрНоменклатура.Ссылка = Операция.ОсновноеИзделиеНоменклатура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПродукции
	|	ПО
	|		АналитикаПродукции.КлючАналитики = Строки.АналитикаУчетаПродукции
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСкладыПодразделения КАК КорСкладыПодразделения
	|	ПО
	|		КорСкладыПодразделения.Склад = АналитикаПродукции.Склад
	|
	|ГДЕ
	|	Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И (Строки.Подразделение <> КорСкладыПодразделения.Подразделение
	|		ИЛИ Строки.ГруппаПродукции <> СпрНоменклатура.ГруппаАналитическогоУчета)
	|";
#КонецОбласти

	Возврат ТекстДвижениеМатериальныхЗатрат
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВыпускПродукцииДавальца
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписаниеМатериаловДавальца
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписаниеПолуфабрикатовДавальцаЗабаланс
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписаниеНаРасходы
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписаниеНаПрочиеАктивыВыходныхИзделий
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписаниеНаПрочиеАктивыПобочныхИзделий
	+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписаниеНаПрочиеАктивыЭкономииМатериалов
	+ "ОБЪЕДИНИТЬ ВСЕ" + ПеремещениеТрудозатратНаПолучателяПродукции
	+ "ОБЪЕДИНИТЬ ВСЕ" + ПеремещениеПостатейныхНаПолучателяПродукции
	;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "
	|// Формирование временной таблицы соответствия подразделений складам
	|ВЫБРАТЬ
	|	Склады.Склад,
	|	Склады.Подразделение
	|ПОМЕСТИТЬ ВтСкладыПодразделения
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтрокиСебестоимости.Склад КАК Склад,
	|		ВЫБОР
	|			КОГДА СтрокиСебестоимости.Склад ССЫЛКА Справочник.Склады
	|				ТОГДА СтрокиСебестоимости.Склад.Подразделение
	|			ИНАЧЕ СтрокиСебестоимости.Склад
	|		КОНЕЦ КАК Подразделение
	|	ИЗ
	|		ВтСтроки КАК СтрокиСебестоимости
	|	ГДЕ
	|		НЕ СтрокиСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		СтрокиСебестоимости.КорСклад КАК Склад,
	|		ВЫБОР
	|			КОГДА СтрокиСебестоимости.КорСклад ССЫЛКА Справочник.Склады
	|				ТОГДА СтрокиСебестоимости.КорСклад.Подразделение
	|			ИНАЧЕ СтрокиСебестоимости.КорСклад
	|		КОНЕЦ КАК Подразделение
	|	ИЗ
	|		ВтСтроки КАК СтрокиСебестоимости
	|	ГДЕ
	|		НЕ СтрокиСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		СтрокиСебестоимости.Склад КАК Склад,
	|		ВЫБОР
	|			КОГДА СтрокиСебестоимости.Склад ССЫЛКА Справочник.Склады
	|				ТОГДА СтрокиСебестоимости.Склад.Подразделение
	|			ИНАЧЕ СтрокиСебестоимости.Склад
	|		КОНЕЦ КАК Подразделение
	|	ИЗ
	|		ВтСтоимости КАК СтрокиСебестоимости
	|	ГДЕ
	|		НЕ СтрокиСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		СтрокиСебестоимости.КорСклад КАК Склад,
	|		ВЫБОР
	|			КОГДА СтрокиСебестоимости.КорСклад ССЫЛКА Справочник.Склады
	|				ТОГДА СтрокиСебестоимости.КорСклад.Подразделение
	|			ИНАЧЕ СтрокиСебестоимости.КорСклад
	|		КОНЕЦ КАК Подразделение
	|	ИЗ
	|		ВтСтоимости КАК СтрокиСебестоимости
	|	ГДЕ
	|		НЕ СтрокиСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)) КАК Склады
	|СГРУППИРОВАТЬ ПО
	|	Склады.Склад,
	|	Склады.Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПакетноеФормированиеДвижений

Процедура ЗаполнитьОбеспечениеИОтразитьДвиженияПоЭтапам(Этапы, СтрокиДляЗаполненияОбеспечения, ВариантыОбеспечения, НеНовыеЭтапы, РассчитыватьИзменения)
	
	Параметры = ПараметрыПакетногоФормированияДвижений(Этапы);
	
	ОчередьОбработки = Параметры.ОчередьОбработки;
	Запрос = Параметры.Запрос;
	ПорядокРегистров = Параметры.ПорядокРегистров;
	
	ЭтапыПонизитьСтатус = Новый Массив;
	
	ПолучитьДанныеИСформироватьДвиженияВПакетномРежиме(
		ОчередьОбработки,
		Запрос,
		ПорядокРегистров,
		ЭтапыПонизитьСтатус,
		СтрокиДляЗаполненияОбеспечения,
		ВариантыОбеспечения,
		НеНовыеЭтапы,
		РассчитыватьИзменения);
	
	Если ЭтапыПонизитьСтатус.Количество() > 0 Тогда
		
		УстановитьЭтапамСтатусФормируется(ЭтапыПонизитьСтатус);
		
		ПолучитьДанныеИСформироватьДвиженияВПакетномРежиме(
			ЭтапыПонизитьСтатус,
			Запрос,
			ПорядокРегистров,
			Новый Массив,
			Новый ТаблицаЗначений,
			ВариантыОбеспечения,
			НеНовыеЭтапы,
			РассчитыватьИзменения);
			
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыПакетногоФормированияДвижений(Этапы)
	
	Результат = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ЗаполнитьПараметрыИнициализации(Запрос);
	
	ОчередьОбработки = ОчередьЭтаповДляПакетногоФормированияДвижений(Запрос, Этапы);
	Результат.Вставить("ОчередьОбработки", ОчередьОбработки);
	
	ПорядокРегистров = Неопределено;
	ТекстЗапроса = ТекстЗапросаДляПакетногоФормированияДвижений(Запрос, ПорядокРегистров);
	Запрос.Текст = ТекстЗапроса;
	
	Результат.Вставить("Запрос", Запрос);
	Результат.Вставить("ПорядокРегистров", ПорядокРегистров);
	
	Возврат Результат;
	
КонецФункции

Функция ОчередьЭтаповДляПакетногоФормированияДвижений(Запрос, Этапы)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НормативныйГрафикЭтаповПроизводства.ЭтапПроизводства КАК Ссылка,
	|	НормативныйГрафикЭтаповПроизводства.ДлительностьДоЗапуска КАК Очередь
	|ПОМЕСТИТЬ ВТОчередьОбработки
	|ИЗ
	|	РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафикЭтаповПроизводства
	|ГДЕ
	|	НормативныйГрафикЭтаповПроизводства.ЭтапПроизводства В(&Ссылки)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОчередьОбработки.Ссылка КАК Ссылка,
	|	ВТОчередьОбработки.Очередь КАК Очередь
	|ИЗ
	|	ВТОчередьОбработки КАК ВТОчередьОбработки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Очередь,
	|	Ссылка";
	
	Запрос.УстановитьПараметр("Ссылки", Этапы);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция ТекстЗапросаДляПакетногоФормированияДвижений(Запрос, ПорядокРегистров)
	
	ПорядокРегистров = Новый Массив;
	
	Регистры = РегистрыДляПакетногоФормированияДвижений();
	
	ТекстыЗапроса = ТекстыЗапросаДляФормированияДвижений(Запрос, Регистры);
	
	МассивТекстов = Новый Массив;
	РазделительЗапросов = ";
		|
		|////////////////////////////////////////////////////////////////////////////////";
		
	Для каждого Элемент Из ТекстыЗапроса Цикл
		
		Если ЗначениеЗаполнено(Элемент.Представление) Тогда
			МассивТекстов.Добавить("// " + Элемент.Представление);
		КонецЕсли;
		
		ТекстЗапроса = Элемент.Значение;
		АдаптироватьТекстЗапросаДляПакетногоФормированияДвижений(ТекстЗапроса);
		
		МассивТекстов.Добавить(ТекстЗапроса);
		
		МассивТекстов.Добавить(РазделительЗапросов);
		
		ПорядокРегистров.Добавить(Элемент.Представление);
		
	КонецЦикла;
	
	Результат = СтрСоединить(МассивТекстов, Символы.ПС);
	
	Возврат Результат;
	
КонецФункции

Функция РегистрыДляПакетногоФормированияДвижений()
	
	Результат = Новый Структура;
		
	Результат.Вставить("ГрафикОтгрузкиТоваров");
	Результат.Вставить("ЗаказыКлиентов");
	Результат.Вставить("ЗаказыМатериаловВПроизводство");
	Результат.Вставить("ЗаказыПоставщикам");
	Результат.Вставить("ДвиженияСерийТоваров");
	Результат.Вставить("ДвижениеТоваров");
	Результат.Вставить("ДоступностьВидовРабочихЦентров");
	Результат.Вставить("ОбеспечениеЗаказов");
	Результат.Вставить("ОбеспечениеЗаказовРаботами");
	Результат.Вставить("СвободныеОстатки");
	Результат.Вставить("ПродукцияИПолуфабрикатыВПроизводстве");
	Результат.Вставить("РаспоряженияНаПередачуИзПроизводства");
	Результат.Вставить("ТоварыКОтгрузке");
	Результат.Вставить("ТоварыКПоступлению");
	Результат.Вставить("ТоварыНаСкладах");
	
	Возврат Результат;
	
КонецФункции

Процедура АдаптироватьТекстЗапросаДляПакетногоФормированияДвижений(ТекстЗапроса)
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"ВЫБРАТЬ",
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Ссылка КАК Ссылка,
		|	ОчередьОбработки.Очередь КАК Очередь,");
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"СГРУППИРОВАТЬ ПО",
		"СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧасть.Ссылка,
		|	ОчередьОбработки.Очередь,");
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"КАК ТабличнаяЧасть",
		"КАК ТабличнаяЧасть
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОчередьОбработки КАК ОчередьОбработки
		|	ПО ТабличнаяЧасть.Ссылка = ОчередьОбработки.Ссылка
		|");
	
	ТекстЗапроса = ТекстЗапроса + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Очередь,
		|	Ссылка";
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"ТабличнаяЧасть.Ссылка = &Ссылка",
		"ТабличнаяЧасть.Ссылка В (&Ссылки)");
	
	ЗаменитьПараметрыВАдаптируемомТекстеЗапроса(ТекстЗапроса, "ТабличнаяЧасть.Ссылка");
	
КонецПроцедуры

Процедура ЗаменитьПараметрыВАдаптируемомТекстеЗапроса(ТекстЗапроса, ОсновнаяТаблица)
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	ПараметрыЗапроса = Запрос.НайтиПараметры();
	
	ПереопределениеРасчетаПараметров = ПереопределениеРасчетаПараметров(ОсновнаяТаблица);
	РеквизитыДокумента = Документы.ЭтапПроизводства2_2.ПустаяСсылка().Метаданные().Реквизиты;
	СтандартныеРеквизиты = Новый Структура("Номер, Дата, Проведен, ПометкаУдаления");
	
	Для каждого Параметр из ПараметрыЗапроса Цикл
		
		ТекстЗамены = Неопределено;
		
		Если ПереопределениеРасчетаПараметров.Свойство(Параметр.Имя) Тогда
			
			ТекстЗамены = ПереопределениеРасчетаПараметров[Параметр.Имя];
			
		ИначеЕсли Параметр.Имя = "Ссылка" Тогда
			
			ТекстЗамены = ОсновнаяТаблица;
			
		ИначеЕсли Параметр.Имя = "Период" Тогда
			
			ТекстЗамены = ОсновнаяТаблица + ".Дата";
			
		ИначеЕсли РеквизитыДокумента.Найти(Параметр.Имя) <> Неопределено
			ИЛИ СтандартныеРеквизиты.Свойство(Параметр.Имя) Тогда
			
			ТекстЗамены = ОсновнаяТаблица + "." + Параметр.Имя;
			
		КонецЕсли;
		
		Если ТекстЗамены <> Неопределено Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&" + Параметр.Имя, ТекстЗамены);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьЭтапамСтатусФормируется(Этапы)
	
	НачатьТранзакцию();
	
	Попытка
		
		ЗаблокироватьЭтапы(Этапы);
		
		Для каждого Этап Из Этапы Цикл
			
			ДокументОбъект = Этап.ПолучитьОбъект();
			
			ДокументОбъект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Формируется;
			
			ДокументОбъект.ОбменДанными.Загрузка = Истина;
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Этап производства.Пакетное формирование движений'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ПолучитьДанныеИСформироватьДвиженияВПакетномРежиме(
															Этапы,
															Запрос,
															ПорядокРегистров,
															ЭтапыПонизитьСтатус,
															СтрокиДляЗаполненияОбеспечения,
															ВариантыОбеспечения,
															НеНовыеЭтапы,
															РассчитыватьИзменения)
	
	ПартияОбработки = Новый Массив;
	РазмерПартииОбработки = 1000;
	
	МаксИндекс = Этапы.ВГраница();
	
	Для Индекс = 0 По МаксИндекс Цикл
		
		ПартияОбработки.Добавить(Этапы[Индекс]);
		
		Если Индекс = МаксИндекс
			ИЛИ ПартияОбработки.Количество() = РазмерПартииОбработки Тогда
			
			ЗаполнитьПараметрыОбеспеченияВПакетномРежиме(
				ПартияОбработки, СтрокиДляЗаполненияОбеспечения, ВариантыОбеспечения);
			
			Данные = ДанныеДляПакетногоФормированияДвижений(
				ПартияОбработки, Запрос, ПорядокРегистров);
			
			СформироватьДвиженияВПакетномРежиме(ПартияОбработки, Данные, ЭтапыПонизитьСтатус, НеНовыеЭтапы, РассчитыватьИзменения);
			
			ПартияОбработки.Очистить();
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыОбеспеченияВПакетномРежиме(Этапы, СтрокиДляЗаполненияОбеспечения, ВариантыОбеспечения)
	
	Если СтрокиДляЗаполненияОбеспечения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		
		ТаблицаОбеспечение = ПараметрыОбеспеченияЭтапов(Этапы, СтрокиДляЗаполненияОбеспечения, ВариантыОбеспечения);
		Если ТаблицаОбеспечение = Неопределено Тогда
			ОтменитьТранзакцию();
			Возврат;
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура("Ссылка, КодСтроки");
		
		ПараметрыОбеспечения = "ВариантОбеспечения, Количество, ДатаОтгрузки";
		
		СтруктураДействий = Новый Структура("ПересчитатьКоличествоУпаковок");
		КэшПересчетаУпаковок = Неопределено;
		
		Для Индекс = 0 По Этапы.ВГраница() Цикл
			
			ДокументСсылка = Этапы[Индекс];
			СтруктураПоиска.Ссылка = ДокументСсылка;
			
			НайденнаяСтрока = СтрокиДляЗаполненияОбеспечения.Найти(ДокументСсылка, "ЭтапПроизводства");
			Если НайденнаяСтрока = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ЗаблокироватьЭтап(ДокументСсылка);
			ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
			
			ЗаполнитьКодыСтрок = Ложь;
			
			Для каждого КодСтроки Из НайденнаяСтрока.КодыСтрок Цикл
				
				ИсходнаяСтрока = ДокументОбъект.ОбеспечениеМатериаламиИРаботами.Найти(КодСтроки, "КодСтроки");
				
				СтруктураПоиска.КодСтроки = КодСтроки;
				СтрокиОбеспечение = ТаблицаОбеспечение.НайтиСтроки(СтруктураПоиска);
				
				Если СтрокиОбеспечение.Количество() = 1 Тогда
					
					ЗаполнитьЗначенияСвойств(ИсходнаяСтрока, СтрокиОбеспечение[0], ПараметрыОбеспечения);
					
					ЗаполнитьДатуОтгрузки(ДокументОбъект, ИсходнаяСтрока, СтрокиОбеспечение[0]);
					
				Иначе
					
					Для каждого ДанныеОбеспечения Из СтрокиОбеспечение Цикл
						
						НоваяСтрока = ДокументОбъект.ОбеспечениеМатериаламиИРаботами.Добавить();
						
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ИсходнаяСтрока,, "КодСтроки");
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеОбеспечения, ПараметрыОбеспечения);
						
						ЗаполнитьДатуОтгрузки(ДокументОбъект, НоваяСтрока, ДанныеОбеспечения);
						
						ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, КэшПересчетаУпаковок);
						
					КонецЦикла;
					
					ДокументОбъект.ОбеспечениеМатериаламиИРаботами.Удалить(ИсходнаяСтрока);
					
					ЗаполнитьКодыСтрок = Истина;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ДокументОбъект.ЗаполнитьМаксимальнуюДатуОтгрузки();
			
			Если ЗаполнитьКодыСтрок Тогда
				
				ЗаказыСервер.УстановитьКлючВСтрокахТабличнойЧасти(
					ДокументОбъект, "ОбеспечениеМатериаламиИРаботами", "МаксимальныйКодСтрокиОбеспечение");
				
			КонецЕсли;
			
			ДокументОбъект.ОбменДанными.Загрузка = Истина;
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Этап производства.Пакетное заполнение обеспечения'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаполнитьДатуОтгрузки(Объект, СтрокаМатериалы, СтрокаОбеспечения)
	
	ЖелаемаяДата = Объект.ЖелаемаяДатаОбеспечения;
	
	УправлениеПроизводством.ЗаполнитьДатуОтгрузки(Объект, СтрокаМатериалы, СтрокаОбеспечения, ЖелаемаяДата);
	
	Если НЕ ЗначениеЗаполнено(СтрокаМатериалы.ДатаОтгрузки) Тогда
		
		СтрокаМатериалы.ДатаОтгрузки = Объект.ЖелаемаяДатаОбеспечения;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеДляПакетногоФормированияДвижений(Этапы, Запрос, ПорядокРегистров)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос.УстановитьПараметр("Ссылки", Этапы);
	ДанныеРегистров = Запрос.ВыполнитьПакет();
	
	Результат = Новый Структура;
	
	Для Индекс = 0 По ПорядокРегистров.ВГраница() Цикл
		
		Выборка = ДанныеРегистров[Индекс].Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			Результат.Вставить(
				ПорядокРегистров[Индекс],
				Выборка);
				
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура СформироватьДвиженияВПакетномРежиме(Этапы, ДанныеДляДвижений, ЭтапыПонизитьСтатус, НеНовыеЭтапы, РассчитыватьИзменения)
	
	Для Индекс = 0 По Этапы.ВГраница() Цикл
		
		ДокументСсылка = Этапы[Индекс];
		
		ЕстьДанные = ФормироватьДвиженияЭтапаПакетно(ДокументСсылка, ДанныеДляДвижений);
		Если НЕ ЕстьДанные Тогда
			Продолжить;
		КонецЕсли;
		
		НачатьТранзакцию();
		Попытка
			
			Отказ = Ложь;
			ЗаблокироватьЭтап(ДокументСсылка);
			
			ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
			
			ДокументОбъект.УстановитьРежимПакетногоФормирования();
			
			ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства;
			ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
			
			ЭтоНовый = ЭтоНовыйЭтап(ДокументСсылка, НеНовыеЭтапы);
			ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый);
			
			ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(
				ДокументСсылка,
				ДополнительныеСвойства);
			
			Для каждого КлючИЗначение Из ДанныеДляДвижений Цикл
				
				Выборка = КлючИЗначение.Значение;
				Если Выборка = Неопределено ИЛИ НЕ Выборка.Ссылка = ДокументСсылка Тогда
					Продолжить;
				КонецЕсли;
				
				ИмяРегистра = КлючИЗначение.Ключ;
				ДвиженияПоРегистру = ДокументОбъект.Движения[ИмяРегистра];
				
				Пока Выборка.Ссылка = ДокументСсылка Цикл
					
					ЗаполнитьЗначенияСвойств(ДвиженияПоРегистру.Добавить(), Выборка);
					
					Если НЕ Выборка.Следующий() Тогда
						ДанныеДляДвижений.Вставить(КлючИЗначение.Ключ, Неопределено);
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
				
				ДвиженияПоРегистру.Записывать = Истина;
				
			КонецЦикла;
			
			ДокументОбъект.СформироватьСписокРегистровДляКонтроля();
			ДокументОбъект.ДополнительныеСвойства.Вставить("РассчитыватьИзменения", РассчитыватьИзменения);
			
			УстановитьПривилегированныйРежим(Истина);
			
			ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ДокументОбъект);
			
			ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ДокументОбъект, Отказ);
			
			УстановитьПривилегированныйРежим(Ложь);
			
			Если Отказ Тогда
				
				Если НЕ ДокументОбъект.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Формируется Тогда
					
					ОтменитьТранзакцию();
					ЭтапыПонизитьСтатус.Добавить(ДокументСсылка);
					
				Иначе
					
					ТекстИсключения = СтрШаблон(
						НСтр("Не удалось провести этап № %1 от %2"),
						ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДокументОбъект.Номер, Истина, Ложь),
						Формат(ДокументОбъект.Дата, "ДЛФ=D"));
					
					ВызватьИсключение ТекстИсключения;
					
				КонецЕсли;
				
			Иначе
				
				ЗафиксироватьТранзакцию();
				
			КонецЕсли;
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Этап производства.Пакетное формирование движений'",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				,
				,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ФормироватьДвиженияЭтапаПакетно(Этап, ДанныеДляДвижений)
	
	Результат = Ложь;
	
	Для каждого КлючИЗначение Из ДанныеДляДвижений Цикл
		
		Выборка = КлючИЗначение.Значение;
		
		Если НЕ Выборка = Неопределено
			И Выборка.Ссылка = Этап Тогда
			
			Результат = Истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ЭтоНовыйЭтап(Этап, НеНовыеЭтапы)
	
	Если НеНовыеЭтапы.Количество() = 0 Тогда
		
		Результат = Истина;
		
	Иначе
		
		Результат = НеНовыеЭтапы.Найти(Этап) = Неопределено;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПараметрыОбеспеченияЭтапов(Этапы, СтрокиДляЗаполненияОбеспечения, ВариантыОбеспечения)
	
	МатериалыЭтапов = МатериалыЭтаповДляПакетногоЗаполненияОбеспечения(Этапы);
	
	МатериалыСОбособлением = ТаблицаДляПолученияПараметровОбеспечения();
	МатериалыБезОбособления = ТаблицаДляПолученияПараметровОбеспечения();
	
	СтруктураПоиска = Новый Структура("Ссылка, КодСтроки");
	
	Для Индекс = 0 По Этапы.ВГраница() Цикл
		
		Этап = Этапы[Индекс];
		СтруктураПоиска.Ссылка = Этап;
		
		НайденнаяСтрока = СтрокиДляЗаполненияОбеспечения.Найти(Этап, "ЭтапПроизводства");
		Если НайденнаяСтрока = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого КодСтроки Из НайденнаяСтрока.КодыСтрок Цикл
			
			СтруктураПоиска.КодСтроки = КодСтроки;
			НайденныеСтроки = МатериалыЭтапов.НайтиСтроки(СтруктураПоиска);
			
			Если НайденныеСтроки.Количество() = 1 Тогда
				
				СтрокаМатериал = НайденныеСтроки[0];
				
				Если СтрокаМатериал.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Обособленно Тогда
					НоваяСтрока = МатериалыСОбособлением.Добавить();
				Иначе
					НоваяСтрока = МатериалыБезОбособления.Добавить();
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаМатериал);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если МатериалыСОбособлением.Количество() > 0
		ИЛИ МатериалыБезОбособления.Количество() > 0 Тогда
		
		Результат = ПолучитьОбеспечениеПоМатериалам(
			МатериалыСОбособлением, МатериалыБезОбособления, ВариантыОбеспечения);
		
		Результат.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
		Результат.Колонки.Добавить("КодСтроки", Новый ОписаниеТипов("Число"));
		
		Для каждого Строка Из Результат Цикл
			
			НайденнаяСтрока = МатериалыЭтапов.Найти(Строка.Идентификатор, "Идентификатор");
			ЗаполнитьЗначенияСвойств(Строка, НайденнаяСтрока, "Ссылка, КодСтроки");
			
		КонецЦикла;
		
		Результат.Индексы.Добавить("Ссылка, КодСтроки");
		
	Иначе
		
		Результат = Неопределено;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция МатериалыЭтаповДляПакетногоЗаполненияОбеспечения(Этапы)
	
	РеквизитыОбеспечение = РеквизитыТаблицыОбеспечение();
	РеквизитыТЧ = Метаданные.Документы.ЭтапПроизводства2_2.ТабличныеЧасти.ОбеспечениеМатериаламиИРаботами.Реквизиты;
	
	ТекстЗапроса = "ВЫБРАТЬ";
	
	Для каждого Реквизит Из РеквизитыОбеспечение Цикл
		
		Если РеквизитыТЧ.Найти(Реквизит) <> Неопределено
			ИЛИ Реквизит = "НомерСтроки" Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
				|	Т." + Реквизит + ",";
		
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
		|	Т.Ссылка                     КАК Ссылка,
		|	Т.Ссылка.Подразделение       КАК Подразделение,
		|	Т.Ссылка.НазначениеМатериалы КАК Назначение
		|
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Т
		|ГДЕ
		|	Т.Ссылка В(&Этапы)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Этапы", Этапы);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если НЕ РеквизитыОбеспечение.Найти("Идентификатор") = Неопределено Тогда
		ДобавитьИдентификаторВТаблицуЗаполненияОбеспечения(Результат);
	КонецЕсли;
	
	Если НЕ РеквизитыОбеспечение.Найти("ТипНоменклатуры") = Неопределено Тогда
		ДобавитьТипНоменклатурыВТаблицуЗаполненияОбеспечения(Результат);
	КонецЕсли;
	
	Результат.Индексы.Добавить("Ссылка, КодСтроки");
	Результат.Индексы.Добавить("Идентификатор");
	
	Возврат Результат;
	
КонецФункции

Функция РеквизитыТаблицыОбеспечение()
	
	Результат = ОбеспечениеСервер.ПутиКДаннымПоУмолчанию();
	Результат = СтрРазделить(Результат, ",");
	
	Для Индекс = 0 По Результат.ВГраница() Цикл
		
		Результат[Индекс] = СокрЛП(Результат[Индекс]);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ДобавитьИдентификаторВТаблицуЗаполненияОбеспечения(МатериалыЭтапов)
	
	Если НЕ МатериалыЭтапов.Колонки.Найти("Идентификатор") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МатериалыЭтапов.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Число"));
	
	Идентификатор = 1;
	Для каждого Строка Из МатериалыЭтапов Цикл
		
		Строка.Идентификатор = Идентификатор;
		Идентификатор = Идентификатор + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьТипНоменклатурыВТаблицуЗаполненияОбеспечения(МатериалыЭтапов)
	
	Если НЕ МатериалыЭтапов.Колонки.Найти("ТипНоменклатуры") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МатериалыЭтапов.Колонки.Добавить("ТипНоменклатуры", Новый ОписаниеТипов("ПеречислениеСсылка.ТипыНоменклатуры"));
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	Номенклатура.ТипНоменклатуры
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В(&Ссылки)");
	
	Запрос.УстановитьПараметр("Ссылки", МатериалыЭтапов.ВыгрузитьКолонку("Номенклатура"));
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтруктураПоиска = Новый Структура("Номенклатура");
	МатериалыЭтапов.Индексы.Добавить("Номенклатура");
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураПоиска.Номенклатура = Выборка.Номенклатура;
		
		НайденныеСтроки = МатериалыЭтапов.НайтиСтроки(СтруктураПоиска);
		
		Для каждого Строка Из НайденныеСтроки Цикл
			
			Строка.ТипНоменклатуры = Выборка.ТипНоменклатуры;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТаблицаДляПолученияПараметровОбеспечения()
	
	Результат = Новый ТаблицаЗначений;
	
	Колонки = РеквизитыТаблицыОбеспечение();
	
	Для каждого Колонка Из Колонки Цикл
		
		Результат.Колонки.Добавить(Колонка);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьОбеспечениеПоМатериалам(МатериалыСОбособлением, МатериалыБезОбособления, ВариантыОбеспечения)
	
	Если МатериалыСОбособлением.Количество() > 0 Тогда
		
		ОбеспечениеСОбособлением = ТаблицаЗаполнениеОбеспечения(
			МатериалыСОбособлением,
			ВариантыОбеспечения,
			Истина);
				
	Иначе
		ОбеспечениеСОбособлением = Неопределено;
	КонецЕсли;
	
	Если МатериалыБезОбособления.Количество() > 0 Тогда
		
		ОбеспечениеБезОбособления = ТаблицаЗаполнениеОбеспечения(
			МатериалыБезОбособления,
			ВариантыОбеспечения,
			Ложь);
		
	Иначе
		ОбеспечениеБезОбособления = Неопределено;
	КонецЕсли;
	
	Если ОбеспечениеБезОбособления = Неопределено Тогда
		
		Результат = ОбеспечениеСОбособлением;
		
	ИначеЕсли ОбеспечениеСОбособлением = Неопределено Тогда
		
		Результат = ОбеспечениеБезОбособления;
		
	Иначе
		
		Результат = ОбеспечениеСОбособлением;
		
		Для каждого Строка Из ОбеспечениеБезОбособления Цикл
			
			НоваяСтрока = Результат.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ТаблицаЗаполнениеОбеспечения(ТаблицаМатериалов, ВариантыОбеспечения, ОбособленнаяСхема)
	
	ВариантОбособленно = Перечисления.ВариантыОбеспечения.Обособленно;
	УдалитьВариантОбособленноИзПеречня = Ложь;
	Если ОбособленнаяСхема И ВариантыОбеспечения.Найти(ВариантОбособленно) = Неопределено Тогда
		ВариантыОбеспечения.Добавить(ВариантОбособленно);
		УдалитьВариантОбособленноИзПеречня = Истина;
	КонецЕсли;
	
	ТаблицаОформлено = ТаблицаОформленоПустая();
	ТаблицаНевыделенныеСтроки = ТаблицаМатериалов.СкопироватьКолонки();
	
	ЗаблокироватьРегистрыОбеспеченияПотребностей(ТаблицаМатериалов);
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ПереченьВариантов", ВариантыОбеспечения);
	ПараметрыЗаполнения.Вставить("ИзменятьОбособление", НЕ ОбособленнаяСхема);
	
	Результат = ОбеспечениеСервер.ТаблицаЗаполнениеОбеспеченияУниверсальный(
		ТаблицаМатериалов,
		ТаблицаОформлено,
		ТаблицаНевыделенныеСтроки,
		Неопределено,
		Неопределено,
		Неопределено,
		ПараметрыЗаполнения);
		
	Если УдалитьВариантОбособленноИзПеречня Тогда
		ВариантыОбеспечения.Удалить(ВариантыОбеспечения.Найти(ВариантОбособленно));
	КонецЕсли;
	
	Возврат Результат; 
	
КонецФункции

Функция ТаблицаОформленоПустая()
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("КодСтроки");
	Результат.Колонки.Добавить("Ссылка");
	Результат.Колонки.Добавить("Номенклатура");
	Результат.Колонки.Добавить("Характеристика");
	Результат.Колонки.Добавить("Склад");
	Результат.Колонки.Добавить("Серия");
	Результат.Колонки.Добавить("Количество");
	Результат.Колонки.Добавить("КоличествоПриход");
	Результат.Колонки.Добавить("КоличествоКорректировка");
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьРеестрДокументовВПакетномРежиме(Этапы)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	ЗаполнитьПараметрыИнициализации(Запрос);
	
	ПорядокРегистров = Неопределено;
	
	Запрос.Текст = ТекстЗапросаДляПакетногоЗаполненияРеестраДокументов(Запрос, ПорядокРегистров);
	Запрос.УстановитьПараметр("Ссылки", Этапы);
	
	ДанныеРегистров = Запрос.ВыполнитьПакет();
	
	ТаблицыДляДвижений = Новый Структура("ТаблицаРеестрДокументов");
	ДополнительныеСвойства = Новый Структура("ТаблицыДляДвижений", ТаблицыДляДвижений);
	
	ТаблицаРеестрДокументов = РегистрыСведений.РеестрДокументов.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	ИндексРезультата = ПорядокРегистров.Найти("РеестрДокументов");
	
	ВыборкаРазделитель = ДанныеРегистров[ИндексРезультата].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаРазделитель.Следующий() Цикл
		
		ВыборкаСпособЗаписи = ВыборкаРазделитель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСпособЗаписи.Следующий() Цикл
			
			Выборка = ВыборкаСпособЗаписи.Выбрать();
			
			Если ВыборкаСпособЗаписи.ЗаписьПоРазделителю Тогда
				
				ТаблицаРеестрДокументов.Очистить();
				
				Пока Выборка.Следующий() Цикл
					ЗаполнитьЗначенияСвойств(ТаблицаРеестрДокументов.Добавить(), Выборка);
				КонецЦикла;
			
				ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРеестрДокументов = ТаблицаРеестрДокументов;
			
				РегистрыСведений.РеестрДокументов.ЗаписатьДанныеРазделителя(
					ВыборкаРазделитель.РазделительЗаписи,
					ДополнительныеСвойства,
					Ложь);
				
			Иначе
				
				СтруктураПоиска = Новый Структура("Ссылка");
				
				Пока Выборка.Следующий() Цикл
					
					ТаблицаРеестрДокументов.Очистить();
					
					Ссылка = Выборка.Ссылка;
					
					ЗаполнитьЗначенияСвойств(ТаблицаРеестрДокументов.Добавить(), Выборка);
					
					СтруктураПоиска.Ссылка = Ссылка;
					Пока Выборка.НайтиСледующий(СтруктураПоиска) Цикл
						ЗаполнитьЗначенияСвойств(ТаблицаРеестрДокументов.Добавить(), Выборка);
					КонецЦикла;
					
					ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРеестрДокументов = ТаблицаРеестрДокументов;
					
					РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(
						Ссылка,
						ДополнительныеСвойства,
						Ложь);
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапросаДляПакетногоЗаполненияРеестраДокументов(Запрос, ПорядокРегистров)
	
	ТекстыЗапроса = ТекстыЗапросаДляФормированияДвижений(Запрос, Новый Структура("РеестрДокументов"));
	
	МассивТекстов = Новый Массив;
	РазделительЗапросов = ";
		|
		|////////////////////////////////////////////////////////////////////////////////";
		
	ПорядокРегистров = Новый Массив;
	
	Для каждого Элемент Из ТекстыЗапроса Цикл
		
		Если ЗначениеЗаполнено(Элемент.Представление) Тогда
			МассивТекстов.Добавить("// " + Элемент.Представление);
		КонецЕсли;
		
		ТекстЗапроса = Элемент.Значение;
		
		Если Элемент.Представление = "РеестрДокументов" Тогда
			
			ТекстЗапроса = СтрЗаменить(
				ТекстЗапроса,
				"ЭтапПроизводства2_2.Ссылка = &Ссылка",
				"ЭтапПроизводства2_2.Ссылка В (&Ссылки)");
			
			ЗаменитьПараметрыВАдаптируемомТекстеЗапроса(ТекстЗапроса, "ЭтапПроизводства2_2.Ссылка");
			
			ТекстЗапросаДвиженияПоРегистру = ТекстЗапроса;
			
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	#ПоляЗапросаДвиженияПоРегистру
			|	РеестрДокументов.Ссылка ЕСТЬ NULL КАК ЗаписьПоРазделителю
			|ИЗ
			|	(#ТекстЗапросаДвиженияПоРегистру) КАК ВложенныйЗапрос
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументов
			|		ПО #УсловияСоединения
			|УПОРЯДОЧИТЬ ПО
			|	Ссылка
			|ИТОГИ ПО
			|	РазделительЗаписи,
			|	ЗаписьПоРазделителю";
			
			ПоляЗапроса = Новый Массив;
			
			Схема = Новый СхемаЗапроса;
			Схема.УстановитьТекстЗапроса(ТекстЗапросаДвиженияПоРегистру);
			
			Для каждого Колонка Из Схема.ПакетЗапросов[0].Колонки Цикл
				ПоляЗапроса.Добавить("ВложенныйЗапрос." + Колонка.Псевдоним + " КАК " + Колонка.Псевдоним + ",");
			КонецЦикла;
			
			ТекстЗапроса = СтрЗаменить(
				ТекстЗапроса,
				"#ПоляЗапросаДвиженияПоРегистру",
				СтрСоединить(ПоляЗапроса, Символы.ПС));
			
			ТекстЗапроса = СтрЗаменить(
				ТекстЗапроса,
				"#ТекстЗапросаДвиженияПоРегистру",
				ТекстЗапросаДвиженияПоРегистру);
			
			УсловияСоединения = Новый Массив;
			Для каждого Измерение Из РегистрыСведений.РеестрДокументов.СоздатьНаборЗаписей().Метаданные().Измерения Цикл
				УсловияСоединения.Добавить("И ВложенныйЗапрос." + Измерение.Имя + " = РеестрДокументов." + Измерение.Имя);
			КонецЦикла;
			ТекстУсловияСоединения = СтрСоединить(УсловияСоединения, Символы.ПС);
			ТекстУсловияСоединения = Прав(ТекстУсловияСоединения, СтрДлина(ТекстУсловияСоединения)-1);
			
			ТекстЗапроса = СтрЗаменить(
				ТекстЗапроса,
				"#УсловияСоединения",
				ТекстУсловияСоединения);
			
		Иначе
			
			ТекстЗапроса = СтрЗаменить(
				ТекстЗапроса,
				"ТабличнаяЧасть.Ссылка = &Ссылка",
				"ТабличнаяЧасть.Ссылка В (&Ссылки)");
			
			ЗаменитьПараметрыВАдаптируемомТекстеЗапроса(ТекстЗапроса, "ТабличнаяЧасть.Ссылка");
			
		КонецЕсли;
		
		МассивТекстов.Добавить(ТекстЗапроса);
		
		МассивТекстов.Добавить(РазделительЗапросов);
		
		ПорядокРегистров.Добавить(Элемент.Представление);
		
	КонецЦикла;
	
	Возврат СтрСоединить(МассивТекстов, Символы.ПС);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СозданиеНаОсновании

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Задание на производство
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗаданиеНаПроизводство";
	КомандаПечати.Представление = НСтр("ru = 'Задание на производство'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Обработчик = "УправлениеПечатьюУПКлиент.ПечатьЗаданиеНаПроизводство";
	
	// Накладная на передачу готовой продукции (МХ-18)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "МХ18";
	КомандаПечати.Представление = НСтр("ru = 'Накладная на передачу готовой продукции (МХ-18)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
	// Требование-накладная (М-11)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьМ11";
	КомандаПечати.Идентификатор = "М11";
	КомандаПечати.Представление = НСтр("ru = 'Требование-накладная (М-11)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаданиеНаПроизводство") Тогда
		
		ТабличныйДокумент = СформироватьПечатнуюФормуЗаданиеНаПроизводство(
			МассивОбъектов, ОбъектыПечати, ПараметрыПечати);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЗаданиеНаПроизводство",
			НСтр("ru='Задание на производство'"),
			ТабличныйДокумент);
		
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(
		ПараметрыВывода.ПараметрыОтправки,
		МассивОбъектов,
		КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуЗаданиеНаПроизводство(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЭтапПроизводства2_2_ЗаданиеНаПроизводство";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЭтапПроизводства2_2.ПФ_MXL_ЗаданиеНаПроизводство");
	ПервыйДокумент = Истина;
	
	ДанныеДляПечати = ПолучитьДанныеДляПечатнойФормыЗаданиеНаПроизводство(МассивОбъектов, ПараметрыПечати);
	ВыборкаДокумент = ДанныеДляПечати.ВыборкаДокумент;
	
	Пока ВыборкаДокумент.Следующий() Цикл
	
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗаданиеНаПроизводствоВывестиЗаголовок(ТабличныйДокумент, Макет, ВыборкаДокумент);
		
		ЗаданиеНаПроизводствоВывестиШапку(ТабличныйДокумент, Макет, ВыборкаДокумент);
		
		ЗаданиеНаПроизводствоВывестиСмежныеЭтапы(
			ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати, Истина);
			
		ЗаданиеНаПроизводствоВывестиМатериалы(
			ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати);
		
		ЗаданиеНаПроизводствоВывестиВыходныеИзделия(
			ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати);
		
		ЗаданиеНаПроизводствоВывестиСмежныеЭтапы(
			ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати, Ложь);
		
		ЗаданиеНаПроизводствоВывестиМаршрутнуюКарту(
			ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			ВыборкаДокумент.Ссылка);
		
	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыЗаданиеНаПроизводство(МассивОбъектов, ПараметрыПечати)
	
	ТекстыЗапросовПакета = Новый Массив;
	ИндексыРезультатов = Новый Соответствие;
	Индекс = 0;
	
	#Область ТекстЗапросаШапка
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЭтапПроизводства2_2.Ссылка КАК Ссылка,
	|	ЭтапПроизводства2_2.Номер КАК Номер,
	|	ЭтапПроизводства2_2.Распоряжение КАК Распоряжение,
	|	ЭтапПроизводства2_2.Распоряжение.Представление КАК ПредставлениеРаспоряжения,
	|	ЭтапПроизводства2_2.Подразделение КАК Подразделение,
	|	ЭтапПроизводства2_2.Подразделение.Представление КАК ПредставлениеПодразделения,
	|	ЭтапПроизводства2_2.ВыпускающийЭтап.ОсновноеИзделиеНоменклатура КАК Изделие,
	|	ЭтапПроизводства2_2.ВыпускающийЭтап.ОсновноеИзделиеХарактеристика КАК ИзделиеХарактеристика,
	
	|	ЕСТЬNULL(ЭтапПроизводства2_2.ВыпускающийЭтап.ОсновноеИзделиеНоменклатура.Наименование, """") КАК ИзделиеПредставление,
	|	ВЫБОР
	|		КОГДА ЭтапПроизводства2_2.ВыпускающийЭтап.ОсновноеИзделиеХарактеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				И ЭтапПроизводства2_2.ВыпускающийЭтап.ОсновноеИзделиеНоменклатура.ИспользованиеХарактеристик В (
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры), 
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры), 
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры))
	|			ТОГДА ЭтапПроизводства2_2.ВыпускающийЭтап.ОсновноеИзделиеХарактеристика.Наименование
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИзделиеХарактеристикаПредставление,
	
	|	ЭтапПроизводства2_2.Спецификация КАК Спецификация,
	|	ЭтапПроизводства2_2.Спецификация.Представление КАК ПредставлениеСпецификации,
	|	ЭтапПроизводства2_2.НаименованиеЭтапа КАК НаименованиеЭтапа,
	|	ЕСТЬNULL(ГрафикЭтаповПроизводства2_2.ОкончаниеЭтапа, ДАТАВРЕМЯ(1, 1, 1)) КАК ПлановоеОкончаниеЭтапа,
	|	ЭтапПроизводства2_2.Запланировано КАК Запланировано,
	|	ЭтапПроизводства2_2.МаршрутнаяКарта КАК МаршрутнаяКарта,
	|	ЭтапПроизводства2_2.Исполнитель.Представление КАК ПредставлениеИсполнителя
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикЭтаповПроизводства2_2
	|		ПО ЭтапПроизводства2_2.Ссылка = ГрафикЭтаповПроизводства2_2.ЭтапПроизводства
	|			И ЭтапПроизводства2_2.Распоряжение = ГрафикЭтаповПроизводства2_2.Распоряжение
	|			И (ГрафикЭтаповПроизводства2_2.СтатусГрафика = &РабочийГрафик)
	|ГДЕ
	|	ЭтапПроизводства2_2.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ТекстыЗапросовПакета.Добавить(ТекстЗапроса);
	ИндексыРезультатов.Вставить("ВыборкаДокумент", Индекс);
	Индекс = Индекс + 1;
	
	#КонецОбласти
	
	#Область ТекстЗапросаСмежныеЭтапы
	
	Если ЗаданиеНаПроизводствоПечататьСмежныеЭтапы(ПараметрыПечати) Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТСвязиЭтапов.СледующийЭтап КАК Ссылка,
		|	ВТСвязиЭтапов.Этап КАК ЭтапПроизводства,
		|	&ВТСвязиЭтаповПредставлениеЭтап КАК ПредставлениеЭтапа,
		|	ВЫРАЗИТЬ(ВТСвязиЭтапов.Этап КАК Документ.ЭтапПроизводства2_2).Подразделение КАК Подразделение
		|ИЗ
		|	ВТСвязиЭтапов КАК ВТСвязиЭтапов
		|ГДЕ
		|	ВТСвязиЭтапов.СледующийЭтап В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	ЭтапПроизводства
		|ИТОГИ ПО
		|	Ссылка";
		
		ТекстПредставлениеЭтапа = ТекстЗапросаПредставлениеЭтапа("ВТСвязиЭтапов.Этап");
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса,
			"&ВТСвязиЭтаповПредставлениеЭтап",
			ТекстПредставлениеЭтапа);
		
		ТекстыЗапросовПакета.Добавить(ТекстЗапроса);
		ИндексыРезультатов.Вставить("ВыборкаПредшественники", Индекс);
		Индекс = Индекс + 1;
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВТСвязиЭтапов.Этап КАК Ссылка,
		|	ВТСвязиЭтапов.СледующийЭтап КАК ЭтапПроизводства,
		|	&ВТСвязиЭтаповПредставлениеСледующийЭтап КАК ПредставлениеЭтапа,
		|	ВЫРАЗИТЬ(ВТСвязиЭтапов.СледующийЭтап КАК Документ.ЭтапПроизводства2_2).Подразделение КАК Подразделение
		|ИЗ
		|	ВТСвязиЭтапов КАК ВТСвязиЭтапов
		|ГДЕ
		|	ВТСвязиЭтапов.Этап В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	ЭтапПроизводства
		|ИТОГИ ПО
		|	Ссылка";
		
		ТекстПредставлениеЭтапа = ТекстЗапросаПредставлениеЭтапа("ВТСвязиЭтапов.СледующийЭтап");
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса,
			"&ВТСвязиЭтаповПредставлениеСледующийЭтап",
			ТекстПредставлениеЭтапа);
		
		ТекстыЗапросовПакета.Добавить(ТекстЗапроса);
		ИндексыРезультатов.Вставить("ВыборкаПоследователи", Индекс);
		Индекс = Индекс + 1;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ТекстЗапросаМатериалы
	
	Если ЗаданиеНаПроизводствоПечататьМатериалы(ПараметрыПечати) Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	Материалы.Ссылка КАК Ссылка,
		|	Материалы.Номенклатура КАК Номенклатура,
		|	Материалы.Номенклатура.Код КАК Код,
		|	Материалы.Номенклатура.Артикул КАК Артикул,
		|	Материалы.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
		|	Материалы.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименованиеПолное,
		|	Материалы.Склад КАК Склад,
		|	Материалы.Склад.Представление КАК ПредставлениеСклада,
		|	&ТекстЗапросаЕдиницаИзмеренияМатериалы КАК ПредставлениеЕдиницыИзмерения,
		|	Материалы.КоличествоУпаковок КАК Количество
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Материалы
		|ГДЕ
		|	Материалы.Ссылка В(&МассивОбъектов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	Материалы.НомерСтроки
		|ИТОГИ ПО
		|	Ссылка";
		
		ТекстЕдИзм = Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"Материалы.Упаковка",
			"Материалы.Номенклатура");
			
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса,
			"&ТекстЗапросаЕдиницаИзмеренияМатериалы",
			ТекстЕдИзм);
		
		ТекстыЗапросовПакета.Добавить(ТекстЗапроса);
		ИндексыРезультатов.Вставить("ВыборкаМатериалы", Индекс);
		Индекс = Индекс + 1;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ТекстЗапросаВыходныеИзделия
	
	Если ЗаданиеНаПроизводствоПечататьВыходныеИзделия(ПараметрыПечати) Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Выпуск.Ссылка КАК Ссылка,
		|	Выпуск.Номенклатура КАК Номенклатура,
		|	Выпуск.Характеристика КАК Характеристика,
		|	Выпуск.Получатель КАК Получатель,
		|	&ТекстЗапросаЕдиницаИзмеренияВыпуск КАК ПредставлениеЕдиницыИзмерения,
		|	Выпуск.КоличествоУпаковок КАК Количество,
		|	Выпуск.Назначение КАК Назначение,
		|	Выпуск.ЭтапПотребитель КАК ЭтапПотребитель,
		|	Выпуск.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТВыпуск
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Выпуск
		|ГДЕ
		|	Выпуск.Ссылка В(&МассивОбъектов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПобочныйВыпуск.Ссылка,
		|	ПобочныйВыпуск.Номенклатура,
		|	ПобочныйВыпуск.Характеристика,
		|	ПобочныйВыпуск.Получатель,
		|	&ТекстЗапросаЕдиницаИзмеренияПобочныйВыпуск,
		|	ПобочныйВыпуск.КоличествоУпаковок,
		|	ПобочныйВыпуск.Назначение,
		|	ПобочныйВыпуск.ЭтапПотребитель,
		|	ПобочныйВыпуск.НомерСтроки
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ПобочныйВыпуск
		|ГДЕ
		|	ПобочныйВыпуск.Ссылка В(&МассивОбъектов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Выпуск.Ссылка КАК Ссылка,
		|	Выпуск.Номенклатура КАК Номенклатура,
		|	Выпуск.Номенклатура.Код КАК Код,
		|	Выпуск.Номенклатура.Артикул КАК Артикул,
		|	Выпуск.Номенклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
		|	Выпуск.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименованиеПолное,
		|	ВЫБОР
		|		КОГДА Выпуск.ЭтапПотребитель <> &ПустаяСсылкаЭтап 
		|			ТОГДА &ПредставлениеЭтапа
		|		ИНАЧЕ Выпуск.Назначение.Представление
		|	КОНЕЦ КАК ПредставлениеНазначения,
		|	Выпуск.Получатель КАК Получатель,
		|	Выпуск.Получатель.Представление КАК ПредставлениеПолучателя,
		|	Выпуск.ПредставлениеЕдиницыИзмерения КАК ПредставлениеЕдиницыИзмерения,
		|	Выпуск.Количество КАК Количество
		|ИЗ
		|	ВТВыпуск КАК Выпуск
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	Выпуск.НомерСтроки
		|ИТОГИ ПО
		|	Ссылка";
		
		ТекстЕдИзм = Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"Выпуск.Упаковка",
			"Выпуск.Номенклатура");
			
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса,
			"&ТекстЗапросаЕдиницаИзмеренияВыпуск",
			ТекстЕдИзм);
			
		ТекстЕдИзм = Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ПобочныйВыпуск.Упаковка",
			"ПобочныйВыпуск.Номенклатура");
		
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса,
			"&ТекстЗапросаЕдиницаИзмеренияПобочныйВыпуск",
			ТекстЕдИзм);
			
		ТекстПредставлениеЭтапа = ТекстЗапросаПредставлениеЭтапа("Выпуск.ЭтапПотребитель");
		
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса,
			"&ПредставлениеЭтапа",
			ТекстПредставлениеЭтапа);
		
		Индекс = Индекс + 1;
		ТекстыЗапросовПакета.Добавить(ТекстЗапроса);
		ИндексыРезультатов.Вставить("ВыборкаВыходныеИзделия", Индекс);
		Индекс = Индекс + 1;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СборкаТекста
	
	Разделитель =
	"
	|;
	|/////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапросовПакета, Разделитель);
	
	#КонецОбласти
	
	#Область ВыполнениеЗапроса
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.УстановитьПараметр("ПустаяСсылкаЭтап", Документы.ЭтапПроизводства2_2.ПустаяСсылка());
	Запрос.УстановитьПараметр("РабочийГрафик", РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если ЗаданиеНаПроизводствоПечататьСмежныеЭтапы(ПараметрыПечати) Тогда
		
		СоздатьВТСвязиЭтапов(МенеджерВременныхТаблиц, МассивОбъектов, Ложь);
		
	Конецесли;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ДанныеДляПечати = Новый Структура;
	
	Для каждого Результат Из ИндексыРезультатов Цикл
		
		Если Результат.Ключ = "ВыборкаДокумент" Тогда
			Выборка = МассивРезультатов[Результат.Значение].Выбрать();
		Иначе
			Выборка = МассивРезультатов[Результат.Значение].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		КонецЕсли;
		
		ДанныеДляПечати.Вставить(
			Результат.Ключ, 
			Выборка);
		
	КонецЦикла;
	
	#КонецОбласти
	
	Возврат ДанныеДляПечати;
	
КонецФункции

Процедура ЗаданиеНаПроизводствоВывестиЗаголовок(ТабличныйДокумент, Макет, ВыборкаДокумент)
	
	Область = Макет.ПолучитьОбласть("Заголовок");
	
	Область.Параметры.Заполнить(ВыборкаДокумент);
	
	ТабличныйДокумент.Вывести(Область);
	
КонецПроцедуры

Процедура ЗаданиеНаПроизводствоВывестиШапку(ТабличныйДокумент, Макет, ВыборкаДокумент)
	
	ФорматнаяСтрока = УправлениеПроизводством.ФорматнаяСтрокаДляДатыГрафикаПроизводства();
	
	Область = Макет.ПолучитьОбласть("Шапка");
	
	Область.Параметры.Заполнить(ВыборкаДокумент);
	
	Область.Параметры.ПредставлениеИзделия = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
															ВыборкаДокумент.ИзделиеПредставление, 
															ВыборкаДокумент.ИзделиеХарактеристикаПредставление);
	
	Область.Параметры.ПлановоеОкончаниеЭтапа = Формат(ВыборкаДокумент.ПлановоеОкончаниеЭтапа, ФорматнаяСтрока);
	
	ТабличныйДокумент.Вывести(Область);
	
КонецПроцедуры

Процедура ЗаданиеНаПроизводствоВывестиСмежныеЭтапы(ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати, Предшественники)
	
	Если НЕ ЗаданиеНаПроизводствоПечататьСмежныеЭтапы(ПараметрыПечати) Тогда
		Возврат;
	Иначе
		
		Если Предшественники Тогда
			ВыборкаЭтапы = ДанныеДляПечати.ВыборкаПредшественники;
		Иначе
			ВыборкаЭтапы = ДанныеДляПечати.ВыборкаПоследователи;
		КонецЕсли;
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокумент.Ссылка);
		Если НЕ ВыборкаЭтапы.НайтиСледующий(СтруктураПоиска) Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	#Область Заголовок
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("СмежныеЭтапыЗаголовок");
	
	Если Предшественники Тогда
		ОбластьЗаголовок.Параметры.СмежныеЭтапыТекстЗаголовка = НСтр("ru = 'Принять работу'");
	Иначе
		ОбластьЗаголовок.Параметры.СмежныеЭтапыТекстЗаголовка = НСтр("ru = 'Сдать работу'");
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	#КонецОбласти
	
	#Область Данные
	
	ОбластьСтрока = Макет.ПолучитьОбласть("СмежныеЭтапыСтрока");
	
	Выборка = ВыборкаЭтапы.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	#КонецОбласти
	
	ОбластьПодвал = Макет.ПолучитьОбласть("СмежныеЭтапыПодвал");
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Процедура ЗаданиеНаПроизводствоВывестиМатериалы(ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати)
	
	Если НЕ ЗаданиеНаПроизводствоПечататьМатериалы(ПараметрыПечати) Тогда
		Возврат;
	Иначе
		
		ВыборкаМатериалы = ДанныеДляПечати.ВыборкаМатериалы;
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокумент.Ссылка);
		Если НЕ ВыборкаМатериалы.НайтиСледующий(СтруктураПоиска) Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокТаблицыМатериалы");
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	Если ВыводитьКоды Тогда
		
		ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицыМатериалы_СКодом");
		ОбластьШапка.Параметры.ИмяКолонкиКодов = КолонкаКодов;
		
		ИмяОбластиСтрока = "СтрокаТаблицыМатериалы_СКодом";
		ОбластьСтрока = Макет.ПолучитьОбласть(ИмяОбластиСтрока);
		
	Иначе
		
		ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицыМатериалы_БезКода");
		
		ИмяОбластиСтрока = "СтрокаТаблицыМатериалы_БезКода";
		ОбластьСтрока = Макет.ПолучитьОбласть(ИмяОбластиСтрока);
		
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
		
	НомерСтроки = 0;
	Выборка = ВыборкаМатериалы.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		
		НомерСтроки = НомерСтроки + 1;
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		
		Если ВыводитьКоды Тогда
			ОбластьСтрока.Параметры.Артикул = Выборка[КолонкаКодов];
		КонецЕсли;
		
		ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				Выборка.НоменклатураНаименованиеПолное,
				Выборка.ХарактеристикаНаименованиеПолное);
		ОбластьСтрока.Параметры.ПредставлениеНоменклатуры = ПредставлениеНоменклатуры;
		
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	Если ЗаданиеНаПроизводствоДобавлятьПустыеСтрокиВМатериалы(ПараметрыПечати) Тогда
		
		ОбластьСтрока = Макет.ПолучитьОбласть(ИмяОбластиСтрока);
		ЗаданиеНаПроизводствоВывестиПустыеСтроки(ТабличныйДокумент, ОбластьСтрока, НомерСтроки);
		
	КонецЕсли;
	
	ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалТаблицыМатериалы");
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Процедура ЗаданиеНаПроизводствоВывестиВыходныеИзделия(ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент, ДанныеДляПечати)
	
	Если НЕ ЗаданиеНаПроизводствоПечататьВыходныеИзделия(ПараметрыПечати) Тогда
		Возврат;
	Иначе
		
		ВыборкаВыходныеИзделия = ДанныеДляПечати.ВыборкаВыходныеИзделия;
		
		СтруктураПоиска = Новый Структура("Ссылка", ВыборкаДокумент.Ссылка);
		Если НЕ ВыборкаВыходныеИзделия.НайтиСледующий(СтруктураПоиска) Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокТаблицыВыходныеИзделия");
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	Если ВыводитьКоды Тогда
		
		ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицыВыходныеИзделия_СКодом");
		ОбластьШапка.Параметры.ИмяКолонкиКодов = КолонкаКодов;
		
		ИмяОбластиСтрока = "СтрокаТаблицыВыходныеИзделия_СКодом";
		ОбластьСтрока = Макет.ПолучитьОбласть(ИмяОбластиСтрока);
		
	Иначе
		
		ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицыВыходныеИзделия_БезКода");
		
		ИмяОбластиСтрока = "СтрокаТаблицыВыходныеИзделия_БезКода";
		ОбластьСтрока = Макет.ПолучитьОбласть(ИмяОбластиСтрока);
		
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
		
	НомерСтроки = 0;
	Выборка = ВыборкаВыходныеИзделия.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		
		НомерСтроки = НомерСтроки + 1;
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		
		Если ВыводитьКоды Тогда
			ОбластьСтрока.Параметры.Артикул = Выборка[КолонкаКодов];
		КонецЕсли;
		
		ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				Выборка.НоменклатураНаименованиеПолное,
				Выборка.ХарактеристикаНаименованиеПолное);
		ОбластьСтрока.Параметры.ПредставлениеНоменклатуры = ПредставлениеНоменклатуры;
		
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	Если ЗаданиеНаПроизводствоДобавлятьПустыеСтрокиВВыходныеИзделия(ПараметрыПечати) Тогда
		
		ОбластьСтрока = Макет.ПолучитьОбласть(ИмяОбластиСтрока);
		ЗаданиеНаПроизводствоВывестиПустыеСтроки(ТабличныйДокумент, ОбластьСтрока, НомерСтроки);
		
	КонецЕсли;
	
	ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалТаблицыВыходныеИзделия");
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Процедура ЗаданиеНаПроизводствоВывестиМаршрутнуюКарту(ПараметрыПечати, ТабличныйДокумент, Макет, ВыборкаДокумент)
	
	Если НЕ ЗаданиеНаПроизводствоПечататьМаршрутнуюКарту(ПараметрыПечати)
		ИЛИ НЕ ЗначениеЗаполнено(ВыборкаДокумент.МаршрутнаяКарта) Тогда
		Возврат;
	Иначе
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокТаблицыМаршрутнаяКарта");
	ОбластьЗаголовок.Параметры.Заполнить(ВыборкаДокумент);
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаТаблицыМаршрутнаяКарта");
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТаблицыМаршрутнаяКарта");
	НомерСтроки = 0;
	
	ДанныеМаршрутнойКарты = Справочники.МаршрутныеКарты.ДанныеМаршрутнойКартыДляПечати(
		ВыборкаДокумент.МаршрутнаяКарта,
		ВыборкаДокумент.Запланировано,
		ВыборкаДокумент.Изделие,
		ВыборкаДокумент.ИзделиеХарактеристика,
		"Операции");
		
	Операции = ДанныеМаршрутнойКарты.Операции;
	
	Для каждого Операция Из Операции Цикл
		
		ОбластьСтрока.Параметры.Заполнить(Операция);
		
		НомерСтроки = НомерСтроки + 1;
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		
		Если Операция.ВремяВыполненияЕдИзм = Перечисления.ЕдиницыИзмеренияВремени.Час Тогда
			
			ВремяЧасы = Операция.ВремяВыполнения;
			
		Иначе
			
			ВремяСекунды = ПланированиеПроизводстваКлиентСервер.ПолучитьВремяВСекундах(
				Операция.ВремяВыполнения, Операция.ВремяВыполненияЕдИзм);
				
			ВремяЧасы = ПланированиеПроизводстваКлиентСервер.ПолучитьВремяВЕдиницеИзмерения(
				ВремяСекунды, Перечисления.ЕдиницыИзмеренияВремени.Час);
				
		КонецЕсли;
		
		ОбластьСтрока.Параметры.ВремяЧасы = ВремяЧасы;
		
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалТаблицыМаршрутнаяКарта");
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Процедура ЗаданиеНаПроизводствоВывестиПустыеСтроки(ТабличныйДокумент, ОбластьСтрока, НомерСтроки)
	
	Количество = НомерСтроки/5;
	
	Если НЕ Количество = Цел(Количество) Тогда
		Количество = Цел(Количество) + 1;
	КонецЕсли;
	
	Для Сч = 1 По Количество Цикл
		
		НомерСтроки = НомерСтроки + 1;
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		
		ТабличныйДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ЗаданиеНаПроизводствоПечататьСмежныеЭтапы(ПараметрыПечати)
	
	Если ПараметрыПечати.Свойство("ПечататьСмежныеЭтапы") Тогда
		Возврат ПараметрыПечати.ПечататьСмежныеЭтапы;
	Иначе
		ВызватьИсключение НСтр("ru = 'Отсутствует параметр печати ""ПечататьСмежныеЭтапы""'");
	КонецЕсли;
	
КонецФункции

Функция ЗаданиеНаПроизводствоПечататьМатериалы(ПараметрыПечати)
	
	Если ПараметрыПечати.Свойство("ПечататьМатериалы") Тогда
		Возврат ПараметрыПечати.ПечататьМатериалы;
	Иначе
		ВызватьИсключение НСтр("ru = 'Отсутствует параметр печати ""ПечататьМатериалы""'");
	КонецЕсли;
	
КонецФункции

Функция ЗаданиеНаПроизводствоПечататьВыходныеИзделия(ПараметрыПечати)
	
	Если ПараметрыПечати.Свойство("ПечататьВыходныеИзделия") Тогда
		Возврат ПараметрыПечати.ПечататьВыходныеИзделия;
	Иначе
		ВызватьИсключение НСтр("ru = 'Отсутствует параметр печати ""ПечататьВыходныеИзделия""'");
	КонецЕсли;
	
КонецФункции

Функция ЗаданиеНаПроизводствоПечататьМаршрутнуюКарту(ПараметрыПечати)
	
	Если ПараметрыПечати.Свойство("ПечататьМаршрутнуюКарту") Тогда
		Возврат ПараметрыПечати.ПечататьМаршрутнуюКарту;
	Иначе
		ВызватьИсключение НСтр("ru = 'Отсутствует параметр печати ""ПечататьМаршрутнуюКарту""'");
	КонецЕсли;
	
КонецФункции

Функция ЗаданиеНаПроизводствоДобавлятьПустыеСтрокиВМатериалы(ПараметрыПечати)
	
	Если ПараметрыПечати.Свойство("ДобавлятьПустыеСтрокиВМатериалы") Тогда
		Возврат ПараметрыПечати.ДобавлятьПустыеСтрокиВМатериалы;
	Иначе
		ВызватьИсключение НСтр("ru = 'Отсутствует параметр печати ""ДобавлятьПустыеСтрокиВМатериалы""'");
	КонецЕсли;
	
КонецФункции

Функция ЗаданиеНаПроизводствоДобавлятьПустыеСтрокиВВыходныеИзделия(ПараметрыПечати)
	
	Если ПараметрыПечати.Свойство("ДобавлятьПустыеСтрокиВВыходныеИзделия") Тогда
		Возврат ПараметрыПечати.ДобавлятьПустыеСтрокиВВыходныеИзделия;
	Иначе
		ВызватьИсключение НСтр("ru = 'Отсутствует параметр печати ""ДобавлятьПустыеСтрокиВВыходныеИзделия""'");
	КонецЕсли;
	
КонецФункции

// Функция получает данные для формирования печатной формы МХ - 18
//
Функция ПолучитьДанныеДляПечатнойФормыМХ18(ПараметрыПечати, МассивОбъектов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если НЕ ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка						КАК Ссылка,
	|	ДанныеДокумента.Номер						КАК Номер,
	|	ДанныеДокумента.Дата						КАК Дата,
	|	ДанныеДокумента.Дата						КАК ДатаДокумента,
	|	ДанныеДокумента.Организация					КАК Организация,
	|	ДанныеДокумента.Организация.Префикс			КАК Префикс,
	|	ДанныеДокумента.Подразделение.Представление	КАК ПредставлениеПодразделения
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка														КАК Ссылка,
	|	ТаблицаТовары.Номенклатура													КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное								КАК НоменклатураНаименование,
	|	ТаблицаТовары.Номенклатура." + КолонкаКодов + "								КАК НоменклатураКод,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное								КАК ХарактеристикаНаименование,
	|	ТаблицаТовары.Характеристика												КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения 									КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения 											КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения 									КАК ВидУпаковки,
	|	ВЫБОР КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|		1
	|	ИНАЧЕ
	|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1)
	|	КОНЕЦ																		КАК КоличествоВОдномМесте,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок * &ТекстЗапросаВес)					КАК МассаБрутто,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок)										КАК Количество,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок) 									КАК КоличествоМест,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки)											КАК НомерСтроки,
	|	ЛОЖЬ																		КАК ЭтоВозвратнаяТара,
	|	ТаблицаТовары.Цена															КАК Цена,
	|	СУММА(ТаблицаТовары.Сумма)													КАК Сумма,
	|	ТаблицаТовары.Получатель.Представление                                      КАК Получатель
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТовары.Ссылка				КАК Ссылка,
	|		ТаблицаТовары.НомерСтроки			КАК НомерСтроки,
	|		ТаблицаТовары.Получатель			КАК Получатель,
	|		ТаблицаТовары.Номенклатура			КАК Номенклатура,
	|		ТаблицаТовары.Характеристика		КАК Характеристика,
	|		ТаблицаТовары.Упаковка				КАК Упаковка,
	|		0				                    КАК Цена,
	|		0				                    КАК Сумма,
	|		ТаблицаТовары.КоличествоУпаковок	КАК КоличествоУпаковок
	|	ИЗ 
	|		Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка В(&МассивДокументов)
	|		И НЕ ТаблицаТовары.СписатьНаРасходы
	|		И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТаблицаТовары.Ссылка				КАК Ссылка,
	|		ТаблицаТовары.НомерСтроки			КАК НомерСтроки,
	|		ТаблицаТовары.Получатель			КАК Получатель,
	|		ТаблицаТовары.Номенклатура			КАК Номенклатура,
	|		ТаблицаТовары.Характеристика		КАК Характеристика,
	|		ТаблицаТовары.Упаковка				КАК Упаковка,
	|		ТаблицаТовары.Цена				    КАК Цена,
	|		ТаблицаТовары.Сумма				    КАК Сумма,
	|		ТаблицаТовары.КоличествоУпаковок	КАК КоличествоУпаковок
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка В(&МассивДокументов)
	|		И НЕ ТаблицаТовары.СписатьНаРасходы
	|		И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	) КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.Цена,
	|	ТаблицаТовары.Получатель,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения,
	|	&ТекстЗапросаКодЕдиницыИзмерения,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка,
	|	Получатель";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаВес",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
			
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
			
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Функция получает данные для формирования печатной формы М-11
//
Функция ПолучитьДанныеДляПечатнойФормыМ11(ПараметрыПечати, МассивДокументов) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Склад КАК Склад,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Товары.Ссылка.ВидЦены КАК ВидЦены,
	|	Товары.Ссылка.ВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногоОборотнаяТара))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыЦенНоменклатуры.Ссылка,
	|	ПериодыЦенНоменклатуры.НомерСтроки,
	|	ЦеныНоменклатуры.Цена,
	|	ЦеныНоменклатуры.Упаковка
	|ПОМЕСТИТЬ Цены
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.НомерСтроки КАК НомерСтроки,
	|		ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|		ЦеныНоменклатуры.Характеристика КАК Характеристика,
	|		МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|	ИЗ
	|		Товары КАК Товары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|			ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|				И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|				И Товары.Характеристика = ЦеныНоменклатуры.Характеристика
	|				И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
	|				И Товары.ВалютаЦены = ЦеныНоменклатуры.Валюта
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Товары.Ссылка,
	|		Товары.НомерСтроки,
	|		ЦеныНоменклатуры.ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура,
	|		ЦеныНоменклатуры.Характеристика) КАК ПериодыЦенНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
	|			И ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|			И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ПериодыЦенНоменклатуры.Характеристика = ЦеныНоменклатуры.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыКурсовВалютПоДокументам.Ссылка,
	|	КурсыВалют.Валюта,
	|	КурсыВалют.Курс,
	|	КурсыВалют.Кратность
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	(ВЫБРАТЬ
	|		Документы.Ссылка КАК Ссылка,
	|		МАКСИМУМ(КурсыВалют.Период) КАК Период,
	|		КурсыВалют.Валюта КАК Валюта
	|	ИЗ
	|		Документ.ЭтапПроизводства2_2 КАК Документы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|			ПО Документы.ВидЦены.ВалютаЦены = КурсыВалют.Валюта
	|				И Документы.Дата >= КурсыВалют.Период
	|	ГДЕ
	|		Документы.Ссылка В(&МассивДокументов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Документы.Ссылка,
	|		КурсыВалют.Валюта) КАК ПериодыКурсовВалютПоДокументам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ПериодыКурсовВалютПоДокументам.Период = КурсыВалют.Период
	|			И ПериодыКурсовВалютПоДокументам.Валюта = КурсыВалют.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК ДатаДокумента,
	|	Документы.Дата КАК ДатаСоставления,
	|	Документы.Организация КАК Организация,
	|	Документы.Организация.Префикс КАК Префикс,
	|	Документы.Подразделение КАК Подразделение,
	|	Документы.ВидЦены КАК УчетныйВидЦены,
	|	Документы.ВидЦены.ВалютаЦены КАК УчетныйВидЦеныВалютаЦены
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	Товары.Номенклатура.Код КАК НоменклатурныйНомерКод,
	|	Товары.Номенклатура.Артикул КАК НоменклатурныйНомерАртикул,
	|	Товары.Характеристика.НаименованиеПолное КАК Характеристика,
	|	Товары.Склад КАК Склад,
	|	ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).ТекущийОтветственный КАК КладовщикОтправитель,
	|	ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).ТекущаяДолжностьОтветственного КАК ДолжностьКладовщикаОтправителя,
	|	ВЫБОР КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Товары.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
	|	Товары.КоличествоУпаковок КАК Количество,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(КурсыВалют.Курс, 1) / ЕСТЬNULL(КурсыВалют.Кратность, 1) КАК ЧИСЛО(15, 2))) * Товары.КоличествоУпаковок КАК Сумма,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) * ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(КурсыВалют.Курс, 1) / ЕСТЬNULL(КурсыВалют.Кратность, 1) КАК ЧИСЛО(15, 2)) КАК Цена,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
	|		ПО Товары.Ссылка = КурсыВалют.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
	|		ПО Товары.Ссылка = Цены.Ссылка
	|			И Товары.НомерСтроки = Цены.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ 
	|	МАКСИМУМ(ДолжностьКладовщикаОтправителя), МАКСИМУМ(КладовщикОтправитель)
	|ПО
	|	Ссылка,
	|	Склад");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Цены.Упаковка",
			"Товары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();
	// Пакет запросов:
	// 		[0] - Временная таблица по табличной части документа
	// 		[1] - Временная таблица по ценам номенклатуры табличной части
	// 		[2] - Временная таблица по курсам валют документов
	// 		[3] - Выборка по шапкам документов
	// 		[4] - Выборка по табличным частям документов
	
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПакетаЗапросов[3],
		РезультатПакетаЗапросов[4]);
	
КонецФункции

#КонецОбласти

#Область Серии

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийВыходныеИзделия()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.Серия КАК Серия,
	|	Товары.Получатель КАК Получатель,
	|	Товары.Произведено КАК Произведено,
	|	Товары.ДатаПроизводства КАК ДатаПроизводства,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийОтправитель,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийПолучатель,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	Товары.Получатель,
	|	Товары.Произведено,
	|	Товары.ДатаПроизводства,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	Товары.Получатель,
	|	Товары.Произведено,
	|	Товары.ДатаПроизводства,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Получатель,
	|	Серии.Произведено,
	|	Серии.ДатаПроизводства,
	|	Серии.Количество КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Получатель,
	|	Серии.Произведено,
	|	Серии.ДатаПроизводства,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Получатель,
	|	Серии.Произведено,
	|	Серии.ДатаПроизводства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТребуетсяСправочноеУказаниеСерий.Спецификация ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|				И ТоварыДляЗапроса.Количество > 0
	|			ТОГДА 2
	|		КОГДА НЕ Товары.Произведено
	|				И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
	|			ТОГДА 21
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыОтправитель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.Получатель = СерииДляЗапроса.Получатель
	|				И ТоварыДляЗапроса.Произведено = СерииДляЗапроса.Произведено
	|				И ТоварыДляЗапроса.ДатаПроизводства = СерииДляЗапроса.ДатаПроизводства
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Получатель = ТоварыДляЗапроса.Получатель
	|			И Товары.Произведено = ТоварыДляЗапроса.Произведено
	|			И Товары.ДатаПроизводства = ТоварыДляЗапроса.ДатаПроизводства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТребуетсяСправочноеУказаниеСерий КАК ТребуетсяСправочноеУказаниеСерий
	|		ПО ТребуетсяСправочноеУказаниеСерий.Спецификация = &Спецификация
	|			И ТребуетсяСправочноеУказаниеСерий.Номенклатура = Товары.Номенклатура
	|			И ТребуетсяСправочноеУказаниеСерий.ВидСтрокиСпецификации = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокДереваСпецификаций.ВыходноеИзделие)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|				ИЛИ НЕ Склады.ЦеховаяКладовая
	|				ИЛИ Склады.Подразделение <> &Подразделение
    |			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					КОГДА НЕ Товары.Произведено
	|						ТОГДА 15
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 10
	|					КОГДА НЕ ТоварыДляЗапроса.Произведено
	|							И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
	|						ТОГДА 11
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 8
	|					КОГДА НЕ ТоварыДляЗапроса.Произведено
	|							И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
	|						ТОГДА 27
	|					ИНАЧЕ 7
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПродукцииИзПроизводства
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								КОГДА НЕ ТоварыДляЗапроса.Произведено
	|										И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
	|									ТОГДА 23
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							КОГДА НЕ ТоварыДляЗапроса.Произведено
	|										И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
	|								ТОГДА 21
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыПолучатель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.Получатель = СерииДляЗапроса.Получатель
	|				И ТоварыДляЗапроса.Произведено = СерииДляЗапроса.Произведено
	|				И ТоварыДляЗапроса.ДатаПроизводства = СерииДляЗапроса.ДатаПроизводства
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = ТоварыДляЗапроса.Получатель)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Получатель = ТоварыДляЗапроса.Получатель
	|			И Товары.Произведено = ТоварыДляЗапроса.Произведено
	|			И Товары.ДатаПроизводства = ТоварыДляЗапроса.ДатаПроизводства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	СтатусыОтправитель.СтатусУказанияСерий КАК СтатусУказанияСерийОтправитель,
	|	СтатусыПолучатель.СтатусУказанияСерий КАК СтатусУказанияСерийПолучатель,
	|	ВЫБОР
	|		КОГДА СтатусыПолучатель.СтатусУказанияСерий <> 0
	|			ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|		ИНАЧЕ СтатусыОтправитель.СтатусУказанияСерий
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыОтправитель КАК СтатусыОтправитель
	|		ПО (СтатусыОтправитель.НомерСтроки = Товары.НомерСтроки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыПолучатель КАК СтатусыПолучатель
	|		ПО (СтатусыПолучатель.НомерСтроки = Товары.НомерСтроки)
	|ГДЕ
	|	(СтатусыОтправитель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийОтправитель
	|			ИЛИ СтатусыПолучатель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийПолучатель
	|			ИЛИ ВЫБОР
	|					КОГДА СтатусыПолучатель.СтатусУказанияСерий <> 0
	|						ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|					ИНАЧЕ СтатусыОтправитель.СтатусУказанияСерий
	|				КОНЕЦ <> Товары.СтатусУказанияСерий)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийОбеспечениеМатериаламиИРаботами()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Склад,
	|	Товары.Номенклатура,
	|	Товары.Серия,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки,
	|	Товары.ВариантОбеспечения
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|				ИЛИ НЕ Товары.ВариантОбеспечения В (
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					КОГДА Товары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
	|						ТОГДА 15
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					КОГДА Товары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
	|						ТОГДА 11
	|					ИНАЧЕ 9
	|				КОНЕЦ
	// При отгрузке с нашей кладовой
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|				И Товары.ВариантОбеспечения В (
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|				И ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).ЦеховаяКладовая
	|				И ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).Подразделение = &Подразделение
	|				И НЕ &ПроизводствоНаСтороне
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА 6
	|								ИНАЧЕ 5
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 8
	|							ИНАЧЕ 7
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеНаВнутренниеНужды
	|				И Товары.ВариантОбеспечения В (
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|				И ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).ЦеховаяКладовая
	|				И ВЫРАЗИТЬ(Товары.Склад КАК Справочник.Склады).Подразделение = &Подразделение
	|				И НЕ &ПроизводствоНаСтороне
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО (ПолитикиУчетаСерий.Склад = Товары.Склад)
	|			И (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки,
	|	Статусы.СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	Статусы.НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийРасходМатериаловИРабот()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	ВЫБОР
	|		КОГДА ТребуетсяСправочноеУказаниеСерий.Спецификация ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА Товары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) И НЕ &ФактОтбора
	|			ТОГДА 21
	|		КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|				И Товары.Количество > 0
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТребуетсяСправочноеУказаниеСерий КАК ТребуетсяСправочноеУказаниеСерий
	|		ПО ТребуетсяСправочноеУказаниеСерий.Спецификация = &Спецификация
	|			И ТребуетсяСправочноеУказаниеСерий.Номенклатура = Товары.Номенклатура
	|			И ТребуетсяСправочноеУказаниеСерий.ВидСтрокиСпецификации = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокДереваСпецификаций.Материал)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтатусУказанияСерийСтарый
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийЭкономияМатериалов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Склад КАК Склад,
	|	Товары.Обособить КАК Обособить,
	|	Товары.ДатаОперации КАК ДатаОперации,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.Склад,
	|	Товары.Обособить,
	|	Товары.ДатаОперации,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.Склад,
	|	Товары.Обособить,
	|	Товары.ДатаОперации,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Склад,
	|	Серии.Обособить,
	|	Серии.ДатаОперации,
	|	Серии.Количество КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Склад,
	|	Серии.Обособить,
	|	Серии.ДатаОперации,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Склад,
	|	Серии.Обособить,
	|	Серии.ДатаОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ИЛИ НЕ Склады.ЦеховаяКладовая
	|			ИЛИ Склады.Подразделение <> &Подразделение
	|
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 8
	|					ИНАЧЕ 7
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоПрочемуОприходованию
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Склад = СерииДляЗапроса.Склад
	|				И ТоварыДляЗапроса.Обособить = СерииДляЗапроса.Обособить
	|				И ТоварыДляЗапроса.ДатаОперации = СерииДляЗапроса.ДатаОперации
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = ТоварыДляЗапроса.Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Склад = ТоварыДляЗапроса.Склад
	|			И Товары.Обособить = ТоварыДляЗапроса.Обособить
	|			И Товары.ДатаОперации = ТоварыДляЗапроса.ДатаОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки,
	|	Статусы.СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	Статусы.НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПакетноеФормированиеЭтапов

Функция ОбеспечитьПотребностиПроизводстваВнутриЗамераВремени(Параметры)
	
	Перем Распоряжения, Этапы, ВариантыОбеспечения;
	
	Параметры.Свойство("Распоряжения", Распоряжения);
	Параметры.Свойство("Этапы", Этапы);
	Параметры.Свойство("ВариантыОбеспечения", ВариантыОбеспечения);
	
	Результат = РезультатФормированияЭтапов();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	РегистрыНакопления.ПродукцияИПолуфабрикатыВПроизводстве.СоздатьВТОстаткиПродукцииИПолуфабрикатовКПроизводству(
		МенеджерВременныхТаблиц, 
		Распоряжения, 
		Этапы);

	ПроверитьДанныеДляФормированияЭтапов(
		МенеджерВременныхТаблиц, 
		Результат);
	
	Документы.ЗаказДавальца.СоздатьВтСпособыПолученияМатериалов2_2(
		МенеджерВременныхТаблиц, 
		Распоряжения);
	
	Документы.ЗаказНаПроизводство2_2.СоздатьВтСхемыОбособленияВПроизводстве(
		МенеджерВременныхТаблиц, 
		Распоряжения);
	
	СформироватьЭтапыПоПотребностямПроизводства(
		МенеджерВременныхТаблиц, 
		ВариантыОбеспечения,
		Результат);
	
	ОбеспечитьПотребностьВПроизводимыхНаЭтапеПолуфабрикатах(
		МенеджерВременныхТаблиц, 
		Результат);
		
	Возврат Результат;
	
КонецФункции

Функция РезультатФормированияЭтапов() Экспорт
	
	Результат = Новый Структура;
	
	Результат.Вставить("СформированоДокументов", 0);
	Результат.Вставить("ЕстьОшибка", Ложь);
	Результат.Вставить("ОшибкаТекст", Неопределено);
	Результат.Вставить("ОшибкаСсылка", Неопределено);
	
	Возврат Результат;
	
КонецФункции

Процедура СформироватьЭтапыПоПотребностямПроизводства(МенеджерВременныхТаблиц, ВариантыОбеспечения, РезультатФормирования)
	
	Потребности = ПродукцияИПолуфабрикатыДляФормированияЭтапов(МенеджерВременныхТаблиц);
	Если Потребности.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	РезультатРазузлования = Справочники.РесурсныеСпецификации.ПолучитьДанныеСпецификацийИСгруппироватьПотребности(
		Потребности,
		Ложь,
		Истина,
		МенеджерВременныхТаблиц);
	
	Если РезультатРазузлования.ЕстьОшибка Тогда
			
		ЗаполнитьЗначенияСвойств(
			РезультатФормирования,
			РезультатРазузлования,
			"ЕстьОшибка, ОшибкаТекст, ОшибкаСсылка");
			
		Возврат;
		
	КонецЕсли;
	
	Распоряжения = ОбщегоНазначенияУТ.ВыгрузитьЗначенияКолонки(Потребности, "Распоряжение");
	РезультатРазузлования.Вставить("Распоряжения", Распоряжения);
	
	НормативныйГрафик = НормативныйГрафикПоДаннымСпецификаций(
		РезультатРазузлования.ДанныеСпецификаций,
		Распоряжения,
		Потребности);
	РезультатРазузлования.Вставить("НормативныйГрафик", НормативныйГрафик);
	
	ЗаполнитьСрокиИУпорядочитьДанныеСпецификаций(РезультатРазузлования.ДанныеСпецификаций, НормативныйГрафик);
	
	ДополнитьРезультатРазузлованияСхемамиОбособления(РезультатРазузлования, МенеджерВременныхТаблиц);
	
	СформироватьЭтапы(РезультатРазузлования, ВариантыОбеспечения, РезультатФормирования);
	
КонецПроцедуры

Процедура СформироватьЭтапы(ДанныеЗаполнения, ВариантыОбеспечения, РезультатФормирования) Экспорт
	
	Распоряжения = ДанныеЗаполнения.Распоряжения;
	
	ДанныеСпецификаций = ДанныеЗаполнения.ДанныеСпецификаций;
	Если ДанныеЗаполнения.Свойство("СхемыОбособления") Тогда
		СхемыОбособления = ДанныеЗаполнения.СхемыОбособления;
	Иначе
		СхемыОбособления = СхемыОбособленияПоРаспоряжению(Распоряжения);
	КонецЕсли;
	ДополнитьДанныеСпецификации(Распоряжения, ДанныеСпецификаций, СхемыОбособления);
	
	ТаблицыСвязей = ТаблицыСвязейДляФормированияЭтапов(ДанныеСпецификаций);

	НормативныйГрафик          = Неопределено;
	НормативныйГрафикРассчитан = ДанныеЗаполнения.Свойство("НормативныйГрафик", НормативныйГрафик);
	
	Для каждого ДанныеСпецификации Из ДанныеСпецификаций Цикл
		
		Если НЕ ДанныеСпецификации.ДополнитьЦепочку Тогда
			
			СоздатьЦепочкуЭтапов(
					ДанныеСпецификации, 
					ТаблицыСвязей, 
					ВариантыОбеспечения, 
					РезультатФормирования);
			
		Иначе
			
			ДополнитьЦепочкуЭтапов(
					ДанныеСпецификации,
					ТаблицыСвязей,
					ВариантыОбеспечения, 
					РезультатФормирования);
		
			НормативныйГрафикРассчитан = Ложь;
			
		КонецЕсли;
	
	КонецЦикла;
	
	Если НормативныйГрафикРассчитан Тогда
		
		ЗаполнитьИЗаписатьНормативныйГрафикПослеФормированияЭтапов(
			Распоряжения,
			НормативныйГрафик,
			ТаблицыСвязей.КлючиЭтапов);
			
	Иначе
		
		РассчитатьНормативныйГрафик(Распоряжения, Ложь);
		
	КонецЕсли;
	
	НаборЭтапов = ОбщегоНазначенияУТ.ВыгрузитьЗначенияКолонки(
		ТаблицыСвязей.КлючиЭтапов, "ЭтапПроизводства");
	
	Если НаборЭтапов.Количество() > 0 Тогда
		
		РассчитыватьИзменения = Не ДанныеСпецификаций[0].Свойство("ДокументыСозданныеДоГенерацииЭтапов");
		
		ЗаполнитьОбеспечениеИОтразитьДвиженияПоЭтапам(
			НаборЭтапов,
			ТаблицыСвязей.СтрокиДляЗаполненияОбеспечения,
			ВариантыОбеспечения,
			ТаблицыСвязей.НеНовыеЭтапы,
			РассчитыватьИзменения);
		
		Если УправлениеПроизводствомПовтИсп.ИспользуетсяГрафикПроизводства() Тогда
			РегистрыСведений.ЗаданияКРасчетуГрафикаПроизводства.ДобавитьЗадания(
				НаборЭтапов);
		КонецЕсли;
		
		РегистрыСведений.СостоянияЭтаповПроизводства.ОтразитьСостояниеЭтапов(НаборЭтапов);
		
		ЗаполнитьРеестрДокументовВПакетномРежиме(НаборЭтапов);
		
	КонецЕсли;
	
	РегистрыСведений.СостоянияЗаказовНаПроизводство.ОтразитьСостояние(
		Распоряжения);
	
КонецПроцедуры

Процедура ПроверитьДанныеДляФормированияЭтапов(МенеджерВременныхТаблиц, РезультатФормирования)
	
	Если РезультатФормирования.ЕстьОшибка Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТПотребности.Распоряжение
	|ИЗ
	|	ВТОстаткиПродукцииИПолуфабрикатовКПроизводству КАК ВТПотребности
	|ГДЕ
	|	ВТПотребности.ЭтоПродукция
	|	И ВТПотребности.Спецификация = ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() И ЗначениеЗаполнено(Выборка.Распоряжение) Тогда
			
			РезультатФормирования.ЕстьОшибка = Истина;
			РезультатФормирования.ОшибкаТекст = НСтр("ru = 'Для продукции в заказе не заполнена спецификация'");
			РезультатФормирования.ОшибкаСсылка = Выборка.Распоряжение;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПродукцияИПолуфабрикатыДляФормированияЭтапов(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Потребности.Распоряжение КАК Распоряжение,
	|	
	|	Потребности.Спецификация   КАК Спецификация,
	|	Потребности.Номенклатура   КАК Номенклатура,
	|	Потребности.Характеристика КАК Характеристика,
	|	Потребности.Получатель     КАК Получатель,
	|	
	|	Потребности.Назначение КАК Назначение,
	|	Потребности.ЭтапПотребитель КАК ЭтапПотребитель,
	|	
	|	Потребности.Количество КАК Количество,
	|	
	|	ВЫРАЗИТЬ(Потребности.Распоряжение КАК Документ.ЗаказНаПроизводство2_2).НачатьНеРанее КАК ДатаЗапуска,
	|	ВЫРАЗИТЬ(Потребности.Распоряжение КАК Документ.ЗаказНаПроизводство2_2).ДатаПотребности КАК ДатаВыпуска,
	|	ВЫРАЗИТЬ(Потребности.Распоряжение КАК Документ.ЗаказНаПроизводство2_2).РазмещениеВыпуска КАК РазмещениеВыпуска,
	|	
	|	ЕСТЬNULL(СхемыОбособления.Обособленно, ЛОЖЬ) КАК Обособленно
	|
	|ИЗ
	|	ВТОстаткиПродукцииИПолуфабрикатовКПроизводству КАК Потребности
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСхемыОбособленияВПроизводстве КАК СхемыОбособления
	|		ПО Потребности.Распоряжение = СхемыОбособления.Распоряжение
	|			И Потребности.Назначение = СхемыОбособления.Назначение
	|	
	|ГДЕ
	|	(Потребности.ЭтоПродукция ИЛИ Потребности.ПроизводитсяВПроцессе)
	|	И Потребности.Спецификация <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ДополнитьРезультатРазузлованияСхемамиОбособления(РезультатРазузлования, МенеджерВременныхТаблиц)
	
	СхемыОбособления = МенеджерВременныхТаблиц.Таблицы.Найти("ВтСхемыОбособленияВПроизводстве").ПолучитьДанные().Выгрузить();
	СхемыОбособления.Индексы.Добавить("Распоряжение,Назначение");
	
	РезультатРазузлования.Вставить("СхемыОбособления", СхемыОбособления);
	
КонецПроцедуры

Функция ИнициализироватьТаблицыСвязейДляФормированияЭтапов()
	
	Результат = Новый Структура;
	
	Результат.Вставить("КлючиЭтапов", ИнициализироватьТаблицуКлючиЭтапов());
	Результат.Вставить("НеНовыеЭтапы", Новый Массив);
	
	Результат.Вставить("ПФВыпуск", ИнициализироватьТаблицуПФВыпуск());
	Результат.Вставить("ПФПотребность", ИнициализироватьТаблицуПФПотребность());
	Результат.Вставить("ПФСвязи", ИнициализироватьТаблицуПФСвязи());
	
	Результат.Вставить("НазначенияПолуфабрикатов", Новый Соответствие);
	
	Результат.Вставить("СтрокиДляЗаполненияОбеспечения", ИнициализироватьТаблицуСтрокиДляЗаполненияОбеспечения());
	
	Возврат Результат
	
КонецФункции

Функция ИнициализироватьТаблицуПФВыпуск()
	
	Результат = Новый ТаблицаЗначений;
	
	Результат.Колонки.Добавить("КлючСвязиНазначение", ОписаниеТиповКлючСвязиНазначение());
	Результат.Колонки.Добавить("ЭтапНазначение", Новый ОписаниеТипов("СправочникСсылка.ЭтапыПроизводства,УникальныйИдентификатор"));
	Результат.Колонки.Добавить("ЭтапПроизводства", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	Результат.Колонки.Добавить("ИндексСтроки", Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("Спецификация", Новый ОписаниеТипов("СправочникСсылка.РесурсныеСпецификации"));
	Результат.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Результат.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Результат.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("ФиксированнаяСтоимость", Новый ОписаниеТипов("Булево"));
	
	Результат.Индексы.Добавить("ЭтапПроизводства, ФиксированнаяСтоимость, ИндексСтроки");
	
	Возврат Результат;
	
КонецФункции

Функция ИнициализироватьТаблицуПФПотребность()
	
	Результат = Новый ТаблицаЗначений;
	
	Результат.Колонки.Добавить("ЭтапПроизводства", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	Результат.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	Результат.Колонки.Добавить("Спецификация", Новый ОписаниеТипов("СправочникСсылка.РесурсныеСпецификации"));
	Результат.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Результат.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Результат.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	Результат.Колонки.Добавить("ФиксированнаяСтоимость", Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("КоличествоОбеспеченоТекущимЭтапом", Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("ОбеспеченаТекущимЭтапом", Новый ОписаниеТипов("Булево"));
	
	Результат.Индексы.Добавить("ЭтапПроизводства, Номенклатура, Характеристика, Спецификация");
	Результат.Индексы.Добавить("ОбеспеченаТекущимЭтапом");
	
	Возврат Результат;
	
КонецФункции

Функция ИнициализироватьТаблицуПФСвязи()

	Результат = Новый ТаблицаЗначений;
	
	Результат.Колонки.Добавить("КлючСвязиНазначение", ОписаниеТиповКлючСвязиНазначение());
	Результат.Колонки.Добавить("ЭтапНазначение", Новый ОписаниеТипов("СправочникСсылка.ЭтапыПроизводства,УникальныйИдентификатор"));
	Результат.Колонки.Добавить("ЭтапПроизводства", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	
	Результат.Индексы.Добавить("КлючСвязиНазначение, ЭтапНазначение");
	
	Возврат Результат;
	
КонецФункции

Функция ИнициализироватьТаблицуКлючиЭтапов()
	
	Результат = Новый ТаблицаЗначений;
	
	Результат.Колонки.Добавить("КлючСвязи", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	Результат.Колонки.Добавить("ЭтапПроизводства", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	
	Результат.Индексы.Добавить("КлючСвязи");
	
	Возврат Результат;
	
КонецФункции

Функция ИнициализироватьТаблицуСтрокиДляЗаполненияОбеспечения()
	
	Результат = Новый ТаблицаЗначений;
	
	Результат.Колонки.Добавить("ЭтапПроизводства", Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2"));
	Результат.Колонки.Добавить("ИндексыСтрок", Новый ОписаниеТипов("Массив"));
	Результат.Колонки.Добавить("КодыСтрок", Новый ОписаниеТипов("Массив"));
	
	Результат.Индексы.Добавить("ЭтапПроизводства");
	
	Возврат Результат;
	
КонецФункции

Функция ОписаниеТиповКлючСвязиНазначение()
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Число"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ЭтапПроизводства2_2"));
	
	Возврат Новый ОписаниеТипов(МассивТипов);
	
КонецФункции

Процедура СоздатьЦепочкуЭтапов(ДанныеСпецификации, ТаблицыСвязей, ВариантыОбеспечения, РезультатФормирования)
	
	ЭтапыЦепочки = ТаблицаЭтапыЦепочки(ДанныеСпецификации.Этапы);
	
	Для Индекс = 0 По ДанныеСпецификации.Этапы.Количество()-1 Цикл
		
		ДанныеЭтапа = ДанныеСпецификации.Этапы[Индекс];
		
		Если ДанныеСпецификации.Свойство("ДокументыСозданныеДоГенерацииЭтапов") Тогда
			ДокументОбъект = ДанныеСпецификации.ДокументыСозданныеДоГенерацииЭтапов[Индекс];
		Иначе
			ДокументОбъект = Неопределено;
		КонецЕсли;
		
		СоздатьИЗаполнитьЭтапПоСпецификации(
			ДанныеСпецификации,
			ДанныеЭтапа,
			ТаблицыСвязей,
			ЭтапыЦепочки,
			ВариантыОбеспечения,
			Истина,
			ДокументОбъект);
		
		РезультатФормирования.СформированоДокументов = РезультатФормирования.СформированоДокументов + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьИЗаполнитьЭтапПоСпецификации(ДанныеСпецификации, ДанныеЭтапа, ТаблицыСвязей, ЭтапыЦепочки, ВариантыОбеспечения, ПерваяПопытка, ДокументОбъект)
	
	Попытка
		
		НачатьТранзакцию();
		
		Если ДокументОбъект = Неопределено Тогда
			
			ДокументОбъект = Документы.ЭтапПроизводства2_2.СоздатьДокумент();
			
		КонецЕсли;
		
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("СпособЗаполнения", "ЗаполнитьПоСпецификации");
		ДанныеЗаполнения.Вставить("ДанныеСпецификации", ДанныеСпецификации);
		ДанныеЗаполнения.Вставить("ДанныеЭтапа", ДанныеЭтапа);
		ДанныеЗаполнения.Вставить("ТаблицыСвязей", ТаблицыСвязей);
		ДанныеЗаполнения.Вставить("ЭтапыЦепочки", ЭтапыЦепочки);
		ДанныеЗаполнения.Вставить("ВыпускающийЭтап", ДанныеСпецификации.ВыпускающийЭтап);
		ДанныеЗаполнения.Вставить("ВариантыОбеспечения", ВариантыОбеспечения);
		
		ДокументОбъект.УстановитьФлагЗаполненоАвтоматически(Истина);
		
		ДокументОбъект.ОтключитьФормированиеНазначения();
		ДокументОбъект.ОтключитьЗаполнениеНормативногоГрафикаПриЗаписи();
		
		ПодготовитьДокументДляПакетнойОбработки(ДокументОбъект, ДанныеЭтапа);
		
		ДокументОбъект.Заполнить(ДанныеЗаполнения);
		
		ЗаписатьСформированныйДокумент(ДокументОбъект, ПерваяПопытка);
		ПрименитьИзмененияВТаблицахСвязей(ТаблицыСвязей);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ОтменитьИзмененияВТаблицахСвязей(ТаблицыСвязей);
		
		Если ПерваяПопытка Тогда
			
			ПерваяПопытка = Ложь;
			
			СоздатьИЗаполнитьЭтапПоСпецификации(
				ДанныеСпецификации, 
				ДанныеЭтапа, 
				ТаблицыСвязей, 
				ЭтапыЦепочки, 
				ВариантыОбеспечения, 
				ПерваяПопытка,
				ДокументОбъект);
			
		Иначе
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Этап производства.Формирование этапов'",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				,
				,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ВызватьИсключение;
			
		КонецЕсли;
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ДополнитьЦепочкуЭтапов(ДанныеСпецификации, ТаблицыСвязей, ВариантыОбеспечения, РезультатФормирования)
	
	Для Индекс = 0 По ДанныеСпецификации.Этапы.Количество()-1 Цикл
		
		ДанныеЭтапа = ДанныеСпецификации.Этапы[Индекс];
		
		ДополнитьЭтапПроизводства(
			ДанныеСпецификации,
			ДанныеЭтапа,
			ТаблицыСвязей,
			ВариантыОбеспечения,
			Истина);
		
		РезультатФормирования.СформированоДокументов = РезультатФормирования.СформированоДокументов + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьЭтапПроизводства(ДанныеСпецификации, ДанныеЭтапа, ТаблицыСвязей, ВариантыОбеспечения, ПерваяПопытка)
	
	Попытка
		
		НачатьТранзакцию();
		
		ДокументОбъект = ДанныеЭтапа.ЭтапПроизводства.ПолучитьОбъект();
		ДокументОбъект.Заблокировать();
		
		ДанныеЭтапа.ЭтапПроизводства = ДокументОбъект.Ссылка;
		
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("ДанныеСпецификации", ДанныеСпецификации);
		ДанныеЗаполнения.Вставить("ДанныеЭтапа", ДанныеЭтапа);
		ДанныеЗаполнения.Вставить("ТаблицыСвязей", ТаблицыСвязей);
		ДанныеЗаполнения.Вставить("ВыпускающийЭтап", ДанныеСпецификации.ВыпускающийЭтап);
		ДанныеЗаполнения.Вставить("ВариантыОбеспечения", ВариантыОбеспечения);
		
		ДокументОбъект.УстановитьФлагЗаполненоАвтоматически(Истина);
		ДокументОбъект.ОтключитьЗаполнениеНормативногоГрафикаПриЗаписи();
		
		ПодготовитьДокументДляПакетнойОбработки(ДокументОбъект, ДанныеЭтапа);
		
		ДокументОбъект.ДополнитьПоСпецификации(ДанныеЗаполнения);
		
		ЗаписатьСформированныйДокумент(ДокументОбъект, ПерваяПопытка);
		ПрименитьИзмененияВТаблицахСвязей(ТаблицыСвязей);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ОтменитьИзмененияВТаблицахСвязей(ТаблицыСвязей);
		
		Если ПерваяПопытка Тогда
			
			ПерваяПопытка = Ложь;
			
			ДополнитьЭтапПроизводства(
				ДанныеСпецификации, 
				ДанныеЭтапа, 
				ТаблицыСвязей, 
				ВариантыОбеспечения, 
				ПерваяПопытка);
			
		Иначе
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Этап производства.Формирование этапов'",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				,
				,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ВызватьИсключение;
			
		КонецЕсли;
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ПодготовитьДокументДляПакетнойОбработки(ДокументОбъект, ДанныеЭтапа)
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("КэшированныеЗначения", ДанныеЭтапа.КэшированныеЗначения);
	ДокументОбъект.УстановитьРежимПакетногоФормирования();
	
КонецПроцедуры

Процедура ЗаписатьСформированныйДокумент(ДокументОбъект, ПерваяПопытка)
	
	СтатусФормируется = Перечисления.СтатусыЭтаповПроизводства2_2.Формируется;
	
	Если ДокументОбъект.Статус <> СтатусФормируется Тогда
		
		Если ПерваяПопытка Тогда
			
			Если НЕ ДокументОбъект.ПроверитьЗаполнение() Тогда
				ДокументОбъект.Статус = СтатусФормируется;
				ПерваяПопытка = Ложь;
			КонецЕсли;
			
		Иначе
			
			ДокументОбъект.Статус = СтатусФормируется;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

Процедура ЗаполнитьПФПотребность(ПФПотребность, ДанныеСпецификации, ДанныеЭтапа)
	
	Если ДанныеСпецификации.Свойство("МатериалыИУслуги") Тогда
		
		Для каждого Строка Из ДанныеСпецификации.МатериалыИУслуги Цикл
		
			Если Строка.Этап = ДанныеЭтапа.Этап И Строка.Производится Тогда
				
				НоваяСтрока = ПФПотребность.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеЭтапа, "Подразделение, ЭтапПроизводства");
				
				Если Строка.СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации Тогда
					
					НоваяСтрока.ФиксированнаяСтоимость = Ложь;
					
				ИначеЕсли Строка.СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе Тогда
					
					НоваяСтрока.ФиксированнаяСтоимость = Истина;
					НоваяСтрока.Спецификация = ДанныеСпецификации.Спецификация;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПФСвязи(ПФСвязи, ДанныеСпецификации, ДанныеЭтапа)

	Если ДанныеСпецификации.Свойство("КлючСвязи") Тогда
		
		НоваяСтрока = ПФСвязи.Добавить();
		НоваяСтрока.КлючСвязиНазначение = ДанныеСпецификации.КлючСвязи;
		НоваяСтрока.ЭтапНазначение = ДанныеЭтапа.Этап;
		НоваяСтрока.ЭтапПроизводства = ДанныеЭтапа.ЭтапПроизводства;
		
	КонецЕсли;
	
	НоваяСтрока = ПФСвязи.Добавить();
	НоваяСтрока.КлючСвязиНазначение = ДанныеСпецификации.ВыпускающийЭтап;
	НоваяСтрока.ЭтапНазначение = ДанныеЭтапа.Этап;
	НоваяСтрока.ЭтапПроизводства = ДанныеЭтапа.ЭтапПроизводства;
	
КонецПроцедуры

Процедура ЗаполнитьКлючиЭтапов(КлючиЭтапов, ДанныеЭтапа)
	
	НоваяСтрока = КлючиЭтапов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеЭтапа, "КлючСвязи, ЭтапПроизводства");
	
КонецПроцедуры

Процедура РассчитатьНормативныйГрафик(Распоряжения, РассчитатьВФоне = Истина)
	
	Распоряжения = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(Распоряжения);
	
	Для каждого Распоряжение Из Распоряжения Цикл
		Если РассчитатьВФоне Тогда
			РегистрыСведений.НормативныйГрафикЭтаповПроизводства.РассчитатьГрафикВФоне(Распоряжение);
		Иначе
			РегистрыСведений.НормативныйГрафикЭтаповПроизводства.РассчитатьГрафик(Распоряжение);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ЦепочкиЭтаповДляДополнения(МассивРаспоряжений)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЭтапыПроизводства22.Распоряжение    КАК Распоряжение,
	|	ЭтапыПроизводства22.ВыпускающийЭтап КАК ВыпускающийЭтап,
	|	ЭтапыПроизводства22.Спецификация    КАК Спецификация,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ГрафикЭтаповПроизводства22.ОкончаниеЭтапа ЕСТЬ НЕ NULL 
	|				ТОГДА ГрафикЭтаповПроизводства22.ОкончаниеЭтапа
	|			КОГДА НормативныйГрафикЭтаповПроизводства.ДлительностьДоВыпуска ЕСТЬ НЕ NULL 
	|				ТОГДА ВЫБОР
	|						КОГДА ЗаказыНаПроизводство22.РазмещениеВыпуска = &РазмещениеКНачалу
	|							ТОГДА ДОБАВИТЬКДАТЕ(ВЫБОР
	|										КОГДА ЗаказыНаПроизводство22.НачатьНеРанее > &ТекущаяДата
	|											ТОГДА ЗаказыНаПроизводство22.НачатьНеРанее
	|										ИНАЧЕ НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|									КОНЕЦ, СЕКУНДА, НормативныйГрафикЭтаповПроизводства.ДлительностьДоЗапуска + НормативныйГрафикЭтаповПроизводства.Ресурсоемкость)
	|						ИНАЧЕ ДОБАВИТЬКДАТЕ(ЗаказыНаПроизводство22.ДатаПотребности, СЕКУНДА, -НормативныйГрафикЭтаповПроизводства.ДлительностьДоВыпуска)
	|					КОНЕЦ
	|			ИНАЧЕ ЗаказыНаПроизводство22.ДатаПотребности
	|		КОНЕЦ) КАК ДатаВыпуска
	|ПОМЕСТИТЬ ВТЦепочки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ЭтапыПроизводства22
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикЭтаповПроизводства22
	|		ПО ЭтапыПроизводства22.Ссылка = ГрафикЭтаповПроизводства22.ЭтапПроизводства
	|			И (ГрафикЭтаповПроизводства22.СтатусГрафика = &РабочийГрафик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафикЭтаповПроизводства
	|		ПО ЭтапыПроизводства22.Ссылка = НормативныйГрафикЭтаповПроизводства.ЭтапПроизводства
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство2_2 КАК ЗаказыНаПроизводство22
	|		ПО ЭтапыПроизводства22.Распоряжение = ЗаказыНаПроизводство22.Ссылка
	|ГДЕ
	|	ЭтапыПроизводства22.Распоряжение В(&МассивРаспоряжений)
	|	И ЭтапыПроизводства22.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭтапыПроизводства22.ВыпускающийЭтап,
	|	ЭтапыПроизводства22.Распоряжение,
	|	ЭтапыПроизводства22.Спецификация
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(ЭтапыПроизводства22.ЗаполненоАвтоматически) = ИСТИНА И
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ЭтапыПроизводства22.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется), ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЦепочки.Распоряжение КАК Распоряжение,
	|	ВТЦепочки.Спецификация КАК Спецификация,
	|
	|	ВТЦепочки.ВыпускающийЭтап КАК ВыпускающийЭтап,
	|	ВТЦепочки.ДатаВыпуска     КАК ДатаВыпуска,
	|
	|	ВТЦепочки.ВыпускающийЭтап.НазначениеПродукция КАК НазначениеПродукция,
	|	ВТЦепочки.ВыпускающийЭтап.Запланировано       КАК ЕдиницПартийИзделий
	|ИЗ
	|	ВТЦепочки КАК ВТЦепочки
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВыпуска
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭтапыПроизводства22.ВыпускающийЭтап КАК ВыпускающийЭтап,
	|	ЭтапыПроизводства22.Ссылка          КАК ЭтапПроизводства,
	|	ЭтапыПроизводства22.Этап            КАК Этап
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ЭтапыПроизводства22
	|ГДЕ
	|	ЭтапыПроизводства22.ВыпускающийЭтап В
	|			(ВЫБРАТЬ
	|				ВТЦепочки.ВыпускающийЭтап
	|			ИЗ
	|				ВТЦепочки)");
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("МассивРаспоряжений", МассивРаспоряжений);
	
	Запрос.УстановитьПараметр("РазмещениеКНачалу", Перечисления.СпособыПривязкиОперацийПроизводства.КНачалу);
	Запрос.УстановитьПараметр("РабочийГрафик", РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	МаксИндекс = РезультатыЗапроса.ВГраница();
	
	Результат = Новый Структура;
	
	Цепочки = РезультатыЗапроса[МаксИндекс-1].Выгрузить();
	Цепочки.Индексы.Добавить("Распоряжение, Спецификация, НазначениеПродукция");
	Результат.Вставить("Цепочки", Цепочки);
	
	ЭтапыЦепочек = РезультатыЗапроса[МаксИндекс].Выгрузить();
	ЭтапыЦепочек.Индексы.Добавить("ВыпускающийЭтап, Этап");
	Результат.Вставить("ЭтапыЦепочек", ЭтапыЦепочек);
	
	Возврат Результат;
	
КонецФункции

Функция ПодобратьЦепочкуЭтаповДляДополнения(ДанныеСпецификации, ДанныеЦепочек, СхемаОбособления)
	
	Результат = Неопределено;
	
	Отбор = Новый Структура("Распоряжение, Спецификация, НазначениеПродукция");
	Отбор.Распоряжение        = ДанныеСпецификации.Распоряжение;
	Отбор.Спецификация        = ДанныеСпецификации.Спецификация;
	Отбор.НазначениеПродукция = СхемаОбособления.НазначениеПродукция;
	
	НайденныеСтроки = ДанныеЦепочек.Цепочки.НайтиСтроки(Отбор);
	Для каждого Цепочка Из НайденныеСтроки Цикл
		
		СоответствуетДатеВыпуска = ДанныеСпецификации.Окончание >= Цепочка.ДатаВыпуска;
		
		СоответствуетОптимальнойПартии = НЕ ЗначениеЗаполнено(ДанныеСпецификации.ОптимальнаяПартияЗапуска)
			ИЛИ (Цепочка.ЕдиницПартийИзделий + ДанныеСпецификации.ЕдиницПартийИзделий) <= ДанныеСпецификации.ОптимальнаяПартияЗапуска;
		
		МаксСрокПролеживания = ДанныеСпецификации.МаксимальныйСрокПролеживанияВДнях * 86400;
		СрокПролеживания = Цепочка.ДатаВыпуска + МаксСрокПролеживания;
		
		СоответствуетСрокуПролеживания = НЕ ДанныеСпецификации.ОграниченСрокПролеживания
			ИЛИ ДанныеСпецификации.Окончание <= СрокПролеживания;
		
		Если СоответствуетДатеВыпуска
			И СоответствуетОптимальнойПартии
			И СоответствуетСрокуПролеживания Тогда
			
			Результат = Цепочка.ВыпускающийЭтап;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ПодготовитьДанныеСпецификацииДляОбработки(ДанныеСпецификации)

	#Область ТипизацияПолей
	
	ОписаниеТипов = Новый ОписаниеТипов("ДокументСсылка.ЗаказНаПроизводство2_2");
	ДанныеСпецификации.Распоряжение = ОписаниеТипов.ПривестиЗначение(ДанныеСпецификации.Распоряжение);
	
	ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.Назначения");
	ДанныеСпецификации.Назначение = ОписаниеТипов.ПривестиЗначение(ДанныеСпецификации.Назначение);
	
	#КонецОбласти

	#Область ДобавлениеСлужебныхПолей
	
	ДанныеСпецификации.Вставить("ДополнитьЦепочку", Ложь);
	ДанныеСпецификации.Вставить("ВыпускающийЭтап", Документы.ЭтапПроизводства2_2.ПустаяСсылка());
	
	ОписаниеТипов = Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2");
	ДанныеСпецификации.Этапы.Колонки.Добавить("ЭтапПроизводства", ОписаниеТипов);
	
	ОписаниеТипов = Новый ОписаниеТипов("Булево");
	ДанныеСпецификации.Этапы.Колонки.Добавить("ЭтоНовый", ОписаниеТипов);
	
	ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.Назначения");
	ДанныеСпецификации.Этапы.Колонки.Добавить("Назначение", ОписаниеТипов);
	ДанныеСпецификации.Этапы.Колонки.Добавить("НазначениеПродукция", ОписаниеТипов);
	ДанныеСпецификации.Этапы.Колонки.Добавить("НазначениеМатериалы", ОписаниеТипов);
	
	ОписаниеТипов = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла);
	ДанныеСпецификации.Этапы.Колонки.Добавить("НомерПартииЗапуска", ОписаниеТипов);
	ДанныеСпецификации.Этапы.Колонки.Добавить("НомерЭтапаВПартииЗапуска", ОписаниеТипов);
	
	ОписаниеТипов = Новый ОписаниеТипов("Структура");
	ДанныеСпецификации.Этапы.Колонки.Добавить("КэшированныеЗначения", ОписаниеТипов);
	
	ОписаниеТипов = Новый ОписаниеТипов("Булево");
	ДанныеСпецификации.Этапы.Колонки.Добавить("ЕстьМаркируемаяПродукцияГИСМ", ОписаниеТипов);
	
	#КонецОбласти

КонецПроцедуры

Функция ПолучитьЭтапДляДополнения(ДанныеЦепочек, ВыпускающийЭтап, Этап)
	
	Отбор = Новый Структура("ВыпускающийЭтап, Этап", ВыпускающийЭтап, Этап);
	НайденныеСтроки = ДанныеЦепочек.ЭтапыЦепочек.НайтиСтроки(Отбор);
	
	Если НайденныеСтроки.ВГраница() = -1 Тогда
		
		ВызватьИсключение НСтр("ru = 'Созданная последовательность этапов не соответствует ресурсной спецификации'");
		
	КонецЕсли;
	
	Возврат НайденныеСтроки[0].ЭтапПроизводства;
	
КонецФункции

Процедура ОбеспечитьПотребностьВПроизводимыхНаЭтапеПолуфабрикатах(МенеджерВременныхТаблиц, РезультатФормирования)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Потребности.Распоряжение   КАК Распоряжение,
		|
		|	Потребности.Номенклатура   КАК Номенклатура,
		|	Потребности.Характеристика КАК Характеристика,
		|
		|	Потребности.Получатель     КАК Получатель,
		|
		|	Потребности.Назначение КАК Назначение,
		|	Потребности.ЭтапПотребитель КАК ЭтапПотребитель,
		|
		|	Потребности.ЭтапПотребитель.ВыпускающийЭтап КАК ВыпускающийЭтап,
		|
		|	Потребности.Количество                  КАК Количество,
		|	НормативныйГрафик.ДлительностьДоЗапуска КАК ДлительностьДоЗапуска
		|
		|ПОМЕСТИТЬ ВТПотребности
		|ИЗ
		|	ВТОстаткиПродукцииИПолуфабрикатовКПроизводству КАК Потребности
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафик
		|		ПО Потребности.ЭтапПотребитель = НормативныйГрафик.ЭтапПроизводства
		|ГДЕ
		|	Потребности.ПроизводитсяНаЭтапе
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,Характеристика,ВыпускающийЭтап
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПобочныеИзделия.Ссылка                  КАК ЭтапПроизводства,
		|	ПобочныеИзделия.Ссылка.ВыпускающийЭтап  КАК ВыпускающийЭтап,
		|
		|	ПобочныеИзделия.Номенклатура            КАК Номенклатура,
		|	ПобочныеИзделия.Характеристика          КАК Характеристика,
		|
		|	ПобочныеИзделия.Количество              КАК Количество,
		|	НормативныйГрафик.ДлительностьДоЗапуска КАК ДлительностьДоЗапуска 
		|
		|ПОМЕСТИТЬ ВТВыпуск
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ПобочныеИзделия
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикЭтаповПроизводства КАК НормативныйГрафик
		|		ПО ПобочныеИзделия.Ссылка = НормативныйГрафик.ЭтапПроизводства
		|ГДЕ
		|	(ПобочныеИзделия.Номенклатура, ПобочныеИзделия.Характеристика, ПобочныеИзделия.Ссылка.ВыпускающийЭтап) В
		|			(ВЫБРАТЬ
		|				ВТПотребности.Номенклатура,
		|				ВТПотребности.Характеристика,
		|				ВТПотребности.ВыпускающийЭтап
		|			ИЗ
		|				ВТПотребности)
		|	И (
		|		ПобочныеИзделия.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		
		|		ИЛИ ПобочныеИзделия.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья)
		|			И ПобочныеИзделия.ЭтапПотребитель = ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
		|			И ПобочныеИзделия.Назначение      = ПобочныеИзделия.Ссылка.НазначениеМатериалы
		|	)
		|	И ПобочныеИзделия.Ссылка.Проведен
		|	И ПобочныеИзделия.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Формируется), ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПотребности.Номенклатура    КАК Номенклатура,
		|	ВТПотребности.Характеристика  КАК Характеристика,
		|
		|	ВТПотребности.Получатель      КАК Получатель,
		|
		|	ВТПотребности.ЭтапПотребитель КАК ЭтапПотребитель,
		|	ВТПотребности.Назначение      КАК Назначение,
		|
		|	ЕСТЬNULL(ВТВыпуск.ЭтапПроизводства, ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)) КАК ЭтапПроизводстваВыпуск,
		|
		|	ВТПотребности.Количество КАК КоличествоПотребность,
		|	ЕСТЬNULL(ВТВыпуск.Количество, 0) КАК КоличествоВыпуск
		|ИЗ
		|	ВТПотребности КАК ВТПотребности
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВыпуск КАК ВТВыпуск
		|		ПО ВТПотребности.Номенклатура = ВТВыпуск.Номенклатура
		|			И ВТПотребности.Характеристика = ВТВыпуск.Характеристика
		|			И ВТПотребности.ВыпускающийЭтап = ВТВыпуск.ВыпускающийЭтап
		|			И ВТПотребности.ДлительностьДоЗапуска > ВТВыпуск.ДлительностьДоЗапуска
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТВыпуск.ДлительностьДоЗапуска
		|ИТОГИ
		|	МАКСИМУМ(КоличествоПотребность),
		|	СУММА(КоличествоВыпуск)
		|ПО
		|	ЭтапПотребитель,
		|	Номенклатура,
		|	Характеристика");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Потребности = Запрос.Выполнить();
	
	ВыборкаЭтап = Потребности.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	РасшифровкаОшибки = Новый Структура("Номенклатура,Характеристика,Производится,Спецификация",
		,
		,
		Истина,
		Справочники.РесурсныеСпецификации.ПустаяСсылка());
	
	Пока ВыборкаЭтап.Следующий() Цикл
		
		ОшибкаЗаполнения = Ложь;
		
		ВыборкаНоменклатура = ВыборкаЭтап.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			ВыборкаХарактеристика = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаХарактеристика.Следующий() Цикл
				
				Если ВыборкаХарактеристика.КоличествоВыпуск >= ВыборкаХарактеристика.КоличествоПотребность Тогда
					
					ОсталосьРаспределить = ВыборкаХарактеристика.КоличествоПотребность;
					Выборка = ВыборкаХарактеристика.Выбрать();
					Пока ОсталосьРаспределить > 0 И Выборка.Следующий() Цикл
						
						ОбособитьВыпускПодПроизводимыйНаЭтапеПолуфабрикат(
							Выборка.ЭтапПроизводстваВыпуск,
							Выборка, 
							ОсталосьРаспределить, РезультатФормирования);
						
					КонецЦикла;
					
				Иначе
					
					ОшибкаЗаполнения = Истина;
					ЗаполнитьЗначенияСвойств(РасшифровкаОшибки,ВыборкаХарактеристика);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Если ОшибкаЗаполнения И Не РезультатФормирования.ЕстьОшибка Тогда
			
			ТекстШаблона = НСтр("ru = 'Отсутствует свободный остаток полуфабриката (см. этап производства № %1, строка %2)'");
			Представление = Документы.ЭтапПроизводства2_2.ПредставлениеЭтапа(ВыборкаЭтап.ЭтапПотребитель);
			НомерСтроки = НайтиНомерСтрокиВТабличнойЧасти(ВыборкаЭтап.ЭтапПотребитель, "ОбеспечениеМатериаламиИРаботами", РасшифровкаОшибки);
			
			РезультатФормирования.ЕстьОшибка = Истина;
			РезультатФормирования.ОшибкаТекст  = СтрШаблон(ТекстШаблона,Представление,Формат(НомерСтроки,"ЧН=; ЧГ="));
			РезультатФормирования.ОшибкаСсылка = ВыборкаЭтап.ЭтапПотребитель;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбособитьВыпускПодПроизводимыйНаЭтапеПолуфабрикат(ЭтапПроизводства, ДанныеЗаполнения, ОсталосьРаспределить, РезультатФормирования)
	
	ДокументОбъект = ЭтапПроизводства.ПолучитьОбъект();
	
	Попытка
		
		ДокументОбъект.Заблокировать();
		
		Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья Тогда
			НазначениеПобочногоВыпуска = НазначениеПобочногоВыпускаДавальцу(ДокументОбъект)
		Иначе
			НазначениеПобочногоВыпуска = Справочники.Назначения.ПустаяСсылка();
		КонецЕсли;
		
		СтруктураДействий = Новый Структура("ПересчитатьКоличествоУпаковок");
		КэшПересчетаУпаковок = Неопределено;
		
		СтруктураПоиска = Новый Структура;
		
		СтруктураПоиска.Вставить("Номенклатура", ДанныеЗаполнения.Номенклатура);
		СтруктураПоиска.Вставить("Характеристика", ДанныеЗаполнения.Характеристика);
		
		СтруктураПоиска.Вставить("Назначение", НазначениеПобочногоВыпуска);
		СтруктураПоиска.Вставить("ЭтапПотребитель", Документы.ЭтапПроизводства2_2.ПустаяСсылка());
		
		НайденныеСтроки = ДокументОбъект.ПобочныеИзделия.НайтиСтроки(СтруктураПоиска);
		Для каждого Строка Из НайденныеСтроки Цикл
			
			Количество = Мин(ОсталосьРаспределить, Строка.Количество);
			Если Количество <> Строка.Количество Тогда
				
				НоваяСтрока = ДокументОбъект.ПобочныеИзделия.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				
				НоваяСтрока.Количество = Количество;
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеЗаполнения, "ЭтапПотребитель, Назначение, Получатель");
				
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(
					НоваяСтрока, СтруктураДействий, КэшПересчетаУпаковок);
				
				Строка.Количество = Строка.Количество - Количество;
				
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(
					Строка, СтруктураДействий, КэшПересчетаУпаковок);
				
			Иначе
				
				ЗаполнитьЗначенияСвойств(Строка, ДанныеЗаполнения, "ЭтапПотребитель, Назначение, Получатель");
				
			КонецЕсли;
			
			ОсталосьРаспределить = ОсталосьРаспределить - Количество;
			Если ОсталосьРаспределить = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
		РезультатФормирования.СформированоДокументов = РезультатФормирования.СформированоДокументов + 1;
	
	Исключение
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Этап производства.Обособление выпуска под производимый на этапе полуфабрикат'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаполнитьИЗаписатьНормативныйГрафикПослеФормированияЭтапов(Распоряжения, НормативныйГрафик, КлючиЭтапов)
	
	Если НормативныйГрафик.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Распоряжения = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(Распоряжения);
	
	Для каждого Строка Из НормативныйГрафик Цикл
		
		Если ТипЗнч(Строка.ЭтапПроизводства) = Тип("Число") Тогда
			
			НайденнаяСтрока = КлючиЭтапов.Найти(Строка.ЭтапПроизводства, "КлючСвязи");
			Если НЕ НайденнаяСтрока = Неопределено Тогда
				Строка.ЭтапПроизводства = НайденнаяСтрока.ЭтапПроизводства;
			Иначе
				ВызватьИсключение НСтр("ru = 'Ошибка заполнения нормативного графика'"); 
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Распоряжения.Количество() = 1 Тогда
		
		РегистрыСведений.НормативныйГрафикЭтаповПроизводства.ЗаписатьРезультатыРасчетаГрафика(
				Распоряжения[0], НормативныйГрафик);
		
	Иначе
		
		НормативныйГрафик.Индексы.Добавить("Распоряжение");
		СтруктураПоиска = Новый Структура("Распоряжение");
	
		Для каждого Распоряжение Из Распоряжения Цикл
			
			СтруктураПоиска.Распоряжение = Распоряжение;
			ЭтапыГрафика = НормативныйГрафик.Скопировать(СтруктураПоиска);
			
			РегистрыСведений.НормативныйГрафикЭтаповПроизводства.ЗаписатьРезультатыРасчетаГрафика(
				Распоряжение, ЭтапыГрафика);
				
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьПризнакЕстьМаркируемаяПродукция(ДанныеСпецификаций)
	
	Если Не ПолучитьФункциональнуюОпцию("ВестиУчетМаркировкиПродукцииВГИСМ") Тогда
		Возврат
	КонецЕсли;
	
	ТаблицаДанных = Новый ТаблицаЗначений;
	
	ОписаниеТипов = ОбщегоНазначения.ОписаниеТипаЧисло(10,0);
	ТаблицаДанных.Колонки.Добавить("КодСтроки", ОписаниеТипов);
	
	ОписаниеТипов = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	ТаблицаДанных.Колонки.Добавить("Номенклатура", ОписаниеТипов);
	
	КодСтроки = 0;
	СоответствиеКлючей = Новый Соответствие;
	СоответствиеДанных = Новый Соответствие;
	
	ИменаТЧ = Новый Массив;
	ИменаТЧ.Добавить("ВыходныеИзделия");
	ИменаТЧ.Добавить("ВозвратныеОтходы");

	Для каждого ДанныеСпецификации Из ДанныеСпецификаций Цикл
		Для каждого ДанныеЭтапа Из ДанныеСпецификации.Этапы Цикл
			СоответствиеКлючей.Вставить(ДанныеЭтапа.Этап,КодСтроки);
			СоответствиеДанных.Вставить(КодСтроки,ДанныеЭтапа);
			КодСтроки = КодСтроки + 1;
		КонецЦикла;
		Для каждого ИмяТЧ Из ИменаТЧ Цикл
			Для каждого Строка Из ДанныеСпецификации[ИмяТЧ] Цикл
				НоваяСтрока = ТаблицаДанных.Добавить();
				НоваяСтрока.КодСтроки    = СоответствиеКлючей[Строка.Этап];
				НоваяСтрока.Номенклатура = Строка.Номенклатура;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДанных.КодСтроки КАК КодСтроки,
	|	ТаблицаДанных.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТаблица
	|ИЗ
	|	&ТаблицаДанных КАК ТаблицаДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.КодСтроки КАК КодСтроки
	|ИЗ
	|	ВТаблица КАК Таблица
	|ГДЕ
	|	ВЫРАЗИТЬ(Таблица.Номенклатура КАК Справочник.Номенклатура).ПродукцияМаркируемаяДляГИСМ";
	
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанных);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеДанных[Выборка.КодСтроки].ЕстьМаркируемаяПродукцияГИСМ = Истина;
	КонецЦикла;
	
КонецПроцедуры

Функция СтруктураКэшированныеЗначенияПоДаннымЗаполнения(ДанныеСпецификации, ДанныеЭтапа, КэшированныеЗначения)
	
	Результат = Новый Структура;
	
	Результат.Вставить("ЗначенияПоУмолчанию", ДанныеИзКэша("ЗначенияПоУмолчанию", КэшированныеЗначения));
	
	Результат.Вставить("Распоряжение", ДанныеИзКэша(ДанныеСпецификации.Распоряжение, КэшированныеЗначения));
	Результат.Вставить("Подразделение", ДанныеИзКэша(ДанныеЭтапа.Подразделение, КэшированныеЗначения));
	
	Результат.Вставить("НазначениеПродукция", ДанныеИзКэша(ДанныеЭтапа.НазначениеПродукция, КэшированныеЗначения));
	
	Возврат Результат;
	
КонецФункции

Функция ЗначениеПоКлючу(Ключ)
	
	Результат = Неопределено;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Ключ = "ЗначенияПоУмолчанию" Тогда
	
		Результат = Новый Структура("ВидЦены");
		
		Результат.ВидЦены = Справочники.ВидыЦен.ВидЦеныПлановойСтоимостиТМЦ();
		
	Иначе
		
		ТипКлюча = ТипЗнч(Ключ);
		
		Если ТипКлюча = Тип("ДокументСсылка.ЗаказНаПроизводство2_2") Тогда
		
			Результат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
				Ключ,
				"Номер,
				|Дата,
				|ХозяйственнаяОперация,
				|НаправлениеДеятельности,
				|ЗаказПодДеятельность,
				|Организация,
				|Партнер,
				|Договор");
			
		ИначеЕсли ТипКлюча = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
			
			Результат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
				Ключ,
				"ИнтервалПланирования,
				|НачалоИнтервалаПланирования,
				|ОкончаниеИнтервалаПланирования,
				|ИспользоватьПооперационноеУправление");
			
		ИначеЕсли ТипКлюча = Тип("СправочникСсылка.Назначения") Тогда
			
			МассивСсылок = УправлениеПроизводствомКлиентСервер.МассивЗначений(Ключ);
			Направления = Справочники.Назначения.НаправленияДеятельностиНазначений(МассивСсылок);
			
			Результат = Новый Структура("НаправлениеДеятельности", Направления.Получить(Ключ));
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
	
КонецФункции

Функция ДанныеИзКэша(Ключ, КэшированныеЗначения = Неопределено) Экспорт
	
	Результат = Неопределено;
	
	Если КэшированныеЗначения <> Неопределено Тогда
		
		Результат = КэшированныеЗначения.Получить(Ключ);
		
	КонецЕсли;
	
	Если Результат = Неопределено Тогда
		
		Результат = ЗначениеПоКлючу(Ключ);
		
		Если КэшированныеЗначения <> Неопределено Тогда
			КэшированныеЗначения.Вставить(Ключ, Результат);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция НормативныйГрафикПоДаннымСпецификаций(ДанныеСпецификаций, Распоряжения, ВходящиеПотребности)
	
	ЭтапыИЗависимости = Справочники.РесурсныеСпецификации.ТаблицыДляРасчетаНормативногоГрафикаПроизводства(Распоряжения);
	Этапы       = ЭтапыИЗависимости.Этапы;
	Зависимости = ЭтапыИЗависимости.Зависимости;
	
	ЗаполнитьЭтапыПоДаннымСпецификаций(ДанныеСпецификаций, Этапы);
	
	Справочники.РесурсныеСпецификации.ДобавитьИндексыВТаблицуЭтаповДляРасчетаНормативногоГрафика(Этапы);
	
	ЗаполнитьЗависимостиПоДаннымСпецификаций(ДанныеСпецификаций, Этапы, Зависимости);
	
	РегистрыСведений.НормативныйГрафикЭтаповПроизводства.РассчитатьДлительностьДоЗапускаВыпуска(
		Этапы, Зависимости);
	
	Возврат Этапы;
	
КонецФункции

Процедура ЗаполнитьЭтапыПоДаннымСпецификаций(ДанныеСпецификаций, Этапы)
	
	СвязиКлючей = СвязиКлючей(ДанныеСпецификаций);
	
	Отбор = Новый Структура("КлючСвязиНазначение");
	
	КлючСвязи = 1;
	
	Для каждого ДанныеСпецификации Из ДанныеСпецификаций Цикл
		
		Для каждого Этап Из ДанныеСпецификации.Этапы Цикл
			
			Этап.КлючСвязи = КлючСвязи;
			
			НоваяСтрока = Этапы.Добавить();
			НоваяСтрока.ЭтапПроизводства = КлючСвязи;
			НоваяСтрока.Распоряжение     = ДанныеСпецификации.Распоряжение;
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Этап, "НомерЭтапа, НомерСледующегоЭтапа");
			
			НоваяСтрока.Ресурсоемкость = Этап.ДлительностьЭтапаВСекундах;
			
			Если Этап.НомерЭтапа = 1 Тогда
				
				Отбор.КлючСвязиНазначение = ДанныеСпецификации.КлючСвязи;
				
				НайденныеСтроки = СвязиКлючей.НайтиСтроки(Отбор);
				Если НайденныеСтроки.Количество() = 0 Тогда
					НоваяСтрока.ПервыйЭтап = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
			Если Этап.НомерСледующегоЭтапа = 0 Тогда
				
				НайденнаяСтрока = СвязиКлючей.Найти(ДанныеСпецификации.КлючСвязи, "КлючСвязи");
				ВыпускПодИсходнуюПотребность = НайденнаяСтрока = Неопределено;
				
				Если ВыпускПодИсходнуюПотребность Тогда
					
					ВыпускПодЭтапПроизводства = Ложь;
					Для каждого Изделие Из ДанныеСпецификации.ВыходныеИзделия Цикл
						Если ЗначениеЗаполнено(Изделие.ЭтапПотребитель) Тогда
							ВыпускПодЭтапПроизводства = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
					Если НЕ ВыпускПодЭтапПроизводства Тогда
						НоваяСтрока.ПоследнийЭтап = Истина;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			КлючСвязи = КлючСвязи + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СвязиКлючей(ДанныеСпецификаций)
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("КлючСвязи", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	Результат.Колонки.Добавить("КлючСвязиНазначение", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
		
	Для каждого ДанныеСпецификации Из ДанныеСпецификаций Цикл
		
		Для каждого ВыходноеИзделие Из ДанныеСпецификации.ВыходныеИзделия Цикл
			
			Если ЗначениеЗаполнено(ВыходноеИзделие.КлючСвязиНазначение) Тогда
				
				НоваяСтрока = Результат.Добавить();
				НоваяСтрока.КлючСвязи = ДанныеСпецификации.КлючСвязи;
				НоваяСтрока.КлючСвязиНазначение = ВыходноеИзделие.КлючСвязиНазначение;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Результат.Свернуть("КлючСвязи, КлючСвязиНазначение");
	
	Результат.Индексы.Добавить("КлючСвязи");
	Результат.Индексы.Добавить("КлючСвязиНазначение");
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьЗависимостиПоДаннымСпецификаций(ДанныеСпецификаций, Этапы, Зависимости)
	
	СвязиДанных = СвязиДанных(ДанныеСпецификаций);
	
	Для каждого ДанныеСпецификации Из ДанныеСпецификаций Цикл
		
		ВыпускающийЭтап = Неопределено;
		
		Справочники.РесурсныеСпецификации.ЗаполнитьВнутренниеЗависимостиЭтапов(
			ДанныеСпецификации.Этапы,
			Зависимости,
			ВыпускающийЭтап);
		
		ЗаполнитьВнешниеЗависимостиПоДаннымСпецификаций(
			ДанныеСпецификации,
			Этапы,
			Зависимости,
			ВыпускающийЭтап,
			СвязиДанных);
		
	КонецЦикла;
	
КонецПроцедуры

Функция СвязиДанных(ДанныеСпецификаций)
	
	СвязиДанных = Новый ТаблицаЗначений;
	СвязиДанных.Колонки.Добавить("КлючСвязи");
	СвязиДанных.Колонки.Добавить("ДанныеСпецификации");
	
	СвязиДанных.Индексы.Добавить("КлючСвязи");
	
	Для каждого ДанныеСпецификации Из ДанныеСпецификаций Цикл
		
		НоваяСтрока = СвязиДанных.Добавить();
		НоваяСтрока.КлючСвязи = ДанныеСпецификации.КлючСвязи;
		НоваяСтрока.ДанныеСпецификации = ДанныеСпецификации;
		
	КонецЦикла;
	
	Возврат СвязиДанных;
	
КонецФункции

Процедура ЗаполнитьВнешниеЗависимостиПоДаннымСпецификаций(ДанныеСпецификации, Этапы, Зависимости, ВыпускающийЭтап, СвязиДанных)
	
	Если ВыпускающийЭтап = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("КлючСвязи");
	
	Для каждого ВыходноеИзделие Из ДанныеСпецификации.ВыходныеИзделия Цикл
		
		Если ЗначениеЗаполнено(ВыходноеИзделие.КлючСвязиНазначение) Тогда
			
			Отбор.КлючСвязи = ВыходноеИзделие.КлючСвязиНазначение;
			НайденныеСтроки = СвязиДанных.НайтиСтроки(Отбор);
			
			Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				
				ДанныеСпецификацииНазначение = НайденнаяСтрока.ДанныеСпецификации;
				
				ЭтапНазначение = ДанныеСпецификацииНазначение.Этапы.Найти(ВыходноеИзделие.ЭтапНазначение, "Этап");
				Если НЕ ЭтапНазначение = Неопределено Тогда
				
					НоваяСтрока = Зависимости.Добавить();
					НоваяСтрока.Этап          = ВыпускающийЭтап.КлючСвязи;
					НоваяСтрока.СледующийЭтап = ЭтапНазначение.КлючСвязи;
					
				КонецЕсли;
				
			КонецЦикла;
			
		ИначеЕсли ЗначениеЗаполнено(ВыходноеИзделие.ЭтапПотребитель) Тогда
			
			НоваяСтрока = Зависимости.Добавить();
			НоваяСтрока.Этап          = ВыпускающийЭтап.КлючСвязи;
			НоваяСтрока.СледующийЭтап = ВыходноеИзделие.ЭтапПотребитель;
			
			СтрокаЭтап = Этапы.Найти(ВыходноеИзделие.ЭтапПотребитель, "ЭтапПроизводства");
			Если НЕ СтрокаЭтап = Неопределено Тогда
				СтрокаЭтап.ПервыйЭтап = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСрокиИУпорядочитьДанныеСпецификаций(ДанныеСпецификаций, НормативныйГрафик)
	
	ТаблицаСортировки = Новый ТаблицаЗначений;
	ТаблицаСортировки.Колонки.Добавить("Начало", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты));
	ТаблицаСортировки.Колонки.Добавить("Окончание", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты));
	ТаблицаСортировки.Колонки.Добавить("ДанныеСпецификации");
	
	Для каждого ДанныеСпецификации Из ДанныеСпецификаций Цикл
		
		ДанныеСпецификации.Вставить("Начало", '00010101');
		ДанныеСпецификации.Вставить("Окончание", '00010101');
		
		Границы = Справочники.РесурсныеСпецификации.ГраницыОтсчетаДатПоНормативномуГрафику(ДанныеСпецификации);
		
		Для каждого Этап Из ДанныеСпецификации.Этапы Цикл
			
			ЗаписьГрафика = НормативныйГрафик.Найти(Этап.КлючСвязи, "ЭтапПроизводства");
			Если ЗаписьГрафика = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Этап.ЖелаемаяДатаОбеспечения = Границы.КНачалу + ЗаписьГрафика.ДлительностьДоЗапуска;
			
			Если Этап.НомерЭтапа = 1 ИЛИ Этап.НомерСледующегоЭтапа = 0 Тогда
				
				Если ДанныеСпецификации.РазмещениеВыпуска = Перечисления.СпособыПривязкиОперацийПроизводства.КНачалу Тогда
					
					Начало = Границы.КНачалу + ЗаписьГрафика.ДлительностьДоЗапуска;
					Окончание = Начало + ЗаписьГрафика.Ресурсоемкость;
					
				Иначе
					
					Окончание = Границы.КОкончанию - ЗаписьГрафика.ДлительностьДоВыпуска;
					Начало = Окончание - ЗаписьГрафика.Ресурсоемкость;
					
				КонецЕсли;
				
				Если Этап.НомерЭтапа = 1 Тогда
					ДанныеСпецификации.Начало = Начало;
				КонецЕсли;
				
				Если Этап.НомерСледующегоЭтапа = 0 Тогда
					ДанныеСпецификации.Окончание = Окончание;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		НоваяСтрока = ТаблицаСортировки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеСпецификации, "Начало, Окончание");
		НоваяСтрока.ДанныеСпецификации = ДанныеСпецификации;
		
	КонецЦикла;
	
	ТаблицаСортировки.Сортировать("Начало, Окончание");
	
	ДанныеСпецификаций.Очистить();
	
	Для Индекс = 0 По ТаблицаСортировки.Количество()-1 Цикл
		
		ДанныеСпецификаций.Добавить(ТаблицаСортировки[Индекс].ДанныеСпецификации);
		
	КонецЦикла;
	
	ТаблицаСортировки = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область Заполнение

Процедура ЗаполнитьРасходМатериаловИРаботПоДаннымОбеспечения(Объект) Экспорт

	Объект.РасходМатериаловИРабот.Очистить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбеспечениеМатериаламиИРаботами.Номенклатура        КАК Номенклатура,
	|	ОбеспечениеМатериаламиИРаботами.Характеристика      КАК Характеристика,
	|	ОбеспечениеМатериаламиИРаботами.СтатьяКалькуляции   КАК СтатьяКалькуляции,
	|	ОбеспечениеМатериаламиИРаботами.Упаковка            КАК Упаковка,
	|	ОбеспечениеМатериаламиИРаботами.НомерСтроки         КАК НомерСтроки,
	|	ОбеспечениеМатериаламиИРаботами.Количество          КАК Количество,
	|	ОбеспечениеМатериаламиИРаботами.КоличествоУпаковок  КАК КоличествоУпаковок
	|ПОМЕСТИТЬ Обеспечение
	|ИЗ
	|	&ОбеспечениеМатериаламиИРаботами КАК ОбеспечениеМатериаламиИРаботами
	|ГДЕ
	|	ОбеспечениеМатериаламиИРаботами.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ОбеспечениеМатериаламиИРаботами.Количество <> 0
	|	И ОбеспечениеМатериаламиИРаботами.ВариантОбеспечения В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭкономияМатериалов.Номенклатура   КАК Номенклатура,
	|	ЭкономияМатериалов.Характеристика КАК Характеристика,
	|	ЭкономияМатериалов.Количество     КАК Количество
	|ПОМЕСТИТЬ Экономия
	|ИЗ
	|	&ЭкономияМатериалов КАК ЭкономияМатериалов
	|ГДЕ
	|	ЭкономияМатериалов.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ЭкономияМатериалов.Количество <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Обеспечение.Номенклатура    КАК Номенклатура,
	|	Обеспечение.Характеристика  КАК Характеристика,
	|	Обеспечение.Упаковка        КАК Упаковка,
	|	&ДатаРасхода                КАК ДатаРасхода,
	|	Обеспечение.Количество - ЕСТЬNULL(Экономия.Количество, 0) КАК Количество,
	|	(Обеспечение.Количество - ЕСТЬNULL(Экономия.Количество, 0)) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоУпаковок,
	|	ЕСТЬNULL(ТребуетсяСправочноеУказаниеСерий.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК ТребуетсяСправочноеУказаниеСерий
	|ИЗ
	|	(ВЫБРАТЬ
	|		Обеспечение.Номенклатура          КАК Номенклатура,
	|		Обеспечение.Характеристика        КАК Характеристика,
	|		МАКСИМУМ(Обеспечение.Упаковка)    КАК Упаковка,
	|		МИНИМУМ(Обеспечение.НомерСтроки)  КАК НомерСтроки,
	|		СУММА(Обеспечение.Количество)     КАК Количество
	|	ИЗ
	|		Обеспечение КАК Обеспечение
	|	ГДЕ
	|		(Обеспечение.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				ИЛИ ВЫРАЗИТЬ(Обеспечение.Номенклатура КАК Справочник.Номенклатура).ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Обеспечение.Номенклатура,
	|		Обеспечение.Характеристика) КАК Обеспечение
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Экономия.Номенклатура КАК Номенклатура,
	|			Экономия.Характеристика КАК Характеристика,
	|			СУММА(Экономия.Количество) КАК Количество
	|		ИЗ
	|			Экономия КАК Экономия
	|		ГДЕ
	|			(Экономия.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|					ИЛИ ВЫРАЗИТЬ(Экономия.Номенклатура КАК Справочник.Номенклатура).ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать))
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Экономия.Номенклатура,
	|			Экономия.Характеристика) КАК Экономия
	|		ПО (Экономия.Номенклатура = Обеспечение.Номенклатура)
	|			И (Экономия.Характеристика = Обеспечение.Характеристика)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТребуетсяСправочноеУказаниеСерий КАК ТребуетсяСправочноеУказаниеСерий
	|		ПО ТребуетсяСправочноеУказаниеСерий.Спецификация = &Спецификация
	|			И ТребуетсяСправочноеУказаниеСерий.Номенклатура = Обеспечение.Номенклатура
	|			И ТребуетсяСправочноеУказаниеСерий.ВидСтрокиСпецификации = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокДереваСпецификаций.Материал)
	|ГДЕ
	|	Обеспечение.Количество - ЕСТЬNULL(Экономия.Количество, 0) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Обеспечение.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(Обеспечение.НомерСтроки)      КАК НомерСтроки,
	|	Обеспечение.Номенклатура              КАК Номенклатура,
	|	Обеспечение.Характеристика            КАК Характеристика,
	|	Обеспечение.СтатьяКалькуляции         КАК СтатьяКалькуляции,
	|	СУММА(Обеспечение.Количество)         КАК Количество,
	|	СУММА(Обеспечение.КоличествоУпаковок) КАК КоличествоУпаковок
	|ИЗ
	|	Обеспечение КАК Обеспечение
	|
	|СГРУППИРОВАТЬ ПО
	|	Обеспечение.Номенклатура,
	|	Обеспечение.Характеристика,
	|	Обеспечение.СтатьяКалькуляции
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ВЫРАЗИТЬ(Обеспечение.Упаковка КАК Справочник.УпаковкиЕдиницыИзмерения)",
		"ВЫРАЗИТЬ(Обеспечение.Номенклатура КАК Справочник.Номенклатура)"));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОбеспечениеМатериаламиИРаботами", Объект.ОбеспечениеМатериаламиИРаботами.Выгрузить());
	Запрос.УстановитьПараметр("ЭкономияМатериалов", Объект.ЭкономияМатериалов.Выгрузить());
	Запрос.УстановитьПараметр("Спецификация", Объект.Спецификация);
	
	Если Объект.РасходОднойДатой Тогда
		ДатаРасхода = Объект.ДатаРасхода;
	ИначеЕсли Объект.Статус <> Перечисления.СтатусыЭтаповПроизводства2_2.Завершен Тогда
		ДатаРасхода = ТекущаяДатаСеанса();
	Иначе
		ДатаРасхода = ?(Объект.ФактическоеОкончаниеЭтапа <> '000101010000', Объект.ФактическоеОкончаниеЭтапа, ТекущаяДатаСеанса());
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаРасхода", ДатаРасхода);
	
	Результат = Запрос.ВыполнитьПакет();
	Выборка = Результат[2].Выбрать();
	
	СтрокиССериями = Новый Массив;
	Для каждого СтрокаОбеспечение Из Объект.ОбеспечениеМатериаламиИРаботами Цикл
		Если ЗначениеЗаполнено(СтрокаОбеспечение.Серия) 
			И ЗначениеЗаполнено(СтрокаОбеспечение.Количество) Тогда
			СтрокиССериями.Добавить(СтрокаОбеспечение);
		КонецЕсли; 
	КонецЦикла;
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ Выборка.ТребуетсяСправочноеУказаниеСерий Тогда
			ЗаполнитьЗначенияСвойств(Объект.РасходМатериаловИРабот.Добавить(), Выборка);
			Продолжить;
		КонецЕсли; 
			
		МассивКоэффициентов = Новый Массив;
		МассивСерий = Новый Массив;
		Для каждого СтрокаОбеспечение Из СтрокиССериями Цикл
			Если СтрокаОбеспечение.Номенклатура = Выборка.Номенклатура
				И СтрокаОбеспечение.Характеристика = Выборка.Характеристика
				И ЗначениеЗаполнено(СтрокаОбеспечение.Серия) 
				И ЗначениеЗаполнено(СтрокаОбеспечение.Количество) Тогда
				МассивКоэффициентов.Добавить(СтрокаОбеспечение.Количество);
				МассивСерий.Добавить(СтрокаОбеспечение.Серия);
			КонецЕсли; 
		КонецЦикла;
		
		Если МассивКоэффициентов.Количество() = 0 Тогда
			ЗаполнитьЗначенияСвойств(Объект.РасходМатериаловИРабот.Добавить(), Выборка);
			Продолжить;
		КонецЕсли;
		
		КоличествоСерий = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.Количество, МассивКоэффициентов, 3);
		КоличествоУпаковокСерий = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.КоличествоУпаковок, МассивКоэффициентов, 3);
		Для Сч = 0 По МассивКоэффициентов.ВГраница() Цикл
			СтрокаРасход = Объект.РасходМатериаловИРабот.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРасход, Выборка);
			СтрокаРасход.Серия = МассивСерий[Сч];
			СтрокаРасход.Количество = КоличествоСерий[Сч];
			СтрокаРасход.КоличествоУпаковок = КоличествоУпаковокСерий[Сч];
		КонецЦикла;
		
	КонецЦикла;
	
	ТаблицаОбеспечения = Результат[3].Выгрузить();
	
	МассивСтрок = Новый Массив;
	Для каждого Строка Из Объект.РасходМатериаловИРабот Цикл
		МассивСтрок.Добавить(Строка);
	КонецЦикла;
	
	СтруктураОтбора = Новый Структура("Номенклатура, Характеристика");
	Пока МассивСтрок.Количество() > 0 Цикл
		
		СтрокаРасхода = МассивСтрок[0];
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаРасхода);
		
		НайденныеСтроки = ТаблицаОбеспечения.НайтиСтроки(СтруктураОтбора);
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			МассивСтрок.Удалить(0);
			
			Продолжить;
		КонецЕсли;
		СтрокаОбеспечения = НайденныеСтроки[0];
		
		Количество = Мин(СтрокаРасхода.Количество, СтрокаОбеспечения.Количество);
		КоличествоУпаковок = Мин(СтрокаРасхода.КоличествоУпаковок, СтрокаОбеспечения.КоличествоУпаковок);
		
		Если СтрокаРасхода.Количество > Количество Тогда
			
			НоваяСтрока = Объект.РасходМатериаловИРабот.Вставить(Объект.РасходМатериаловИРабот.Индекс(СтрокаРасхода) + 1);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРасхода);
			НоваяСтрока.Количество = НоваяСтрока.Количество - Количество;
			НоваяСтрока.КоличествоУпаковок = НоваяСтрока.КоличествоУпаковок - КоличествоУпаковок;
			МассивСтрок.Добавить(НоваяСтрока);
			
			
			СтрокаРасхода.Количество = Количество;
			СтрокаРасхода.КоличествоУпаковок = КоличествоУпаковок;
			СтрокаРасхода.СтатьяКалькуляции = СтрокаОбеспечения.СтатьяКалькуляции;
			
			СтрокаОбеспечения.Количество = СтрокаОбеспечения.Количество - Количество;
			СтрокаОбеспечения.КоличествоУпаковок = СтрокаОбеспечения.КоличествоУпаковок - КоличествоУпаковок;
			
		Иначе
			
			СтрокаРасхода.СтатьяКалькуляции = СтрокаОбеспечения.СтатьяКалькуляции;
			СтрокаОбеспечения.Количество = СтрокаОбеспечения.Количество - Количество;
			СтрокаОбеспечения.КоличествоУпаковок = СтрокаОбеспечения.КоличествоУпаковок - КоличествоУпаковок;
			
		КонецЕсли;
		
		Если СтрокаОбеспечения.Количество = 0 Тогда
			ТаблицаОбеспечения.Удалить(СтрокаОбеспечения);
		КонецЕсли;
		
		МассивСтрок.Удалить(0);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьНеизрасходованныеМатериалы(Объект) Экспорт

	Объект.ЭкономияМатериалов.Очистить();

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбеспечениеМатериаламиИРаботами.НомерСтроки     КАК НомерСтроки,
	|	ОбеспечениеМатериаламиИРаботами.Номенклатура    КАК Номенклатура,
	|	ОбеспечениеМатериаламиИРаботами.Характеристика  КАК Характеристика,
	|	ОбеспечениеМатериаламиИРаботами.Склад           КАК Склад,
	|	ОбеспечениеМатериаламиИРаботами.Упаковка        КАК Упаковка,
	|	ОбеспечениеМатериаламиИРаботами.Количество      КАК Количество,
	|	ВЫБОР КОГДА ОбеспечениеМатериаламиИРаботами.ВариантОбеспечения В(
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)) ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|		КОНЕЦ                                       КАК Обособить
	|		
	|ПОМЕСТИТЬ Обеспечение
	|ИЗ
	|	&ОбеспечениеМатериаламиИРаботами КАК ОбеспечениеМатериаламиИРаботами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходМатериаловИРабот.Номенклатура,
	|	РасходМатериаловИРабот.Характеристика,
	|	РасходМатериаловИРабот.Количество
	|ПОМЕСТИТЬ Расход
	|ИЗ
	|	&РасходМатериаловИРабот КАК РасходМатериаловИРабот
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ДатаОперации                   КАК ДатаОперации,
	|	Обеспечение.Номенклатура        КАК Номенклатура,
	|	Обеспечение.Характеристика      КАК Характеристика,
	|	Обеспечение.Склад               КАК Склад,
	|	Обеспечение.Обособить           КАК Обособить,
	|	Обеспечение.Склад               КАК ПолучательРедактирование,
	|	Обеспечение.Упаковка            КАК Упаковка,
	|	Обеспечение.Количество - ЕСТЬNULL(Расход.Количество, 0) КАК Количество,
	|	(Обеспечение.Количество - ЕСТЬNULL(Расход.Количество, 0)) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоУпаковок
	|ИЗ
	|	(ВЫБРАТЬ
	|		Обеспечение.Номенклатура КАК Номенклатура,
	|		Обеспечение.Характеристика КАК Характеристика,
	|		МАКСИМУМ(Обеспечение.Склад) КАК Склад,
	|		МАКСИМУМ(Обеспечение.Упаковка) КАК Упаковка,
	|		МАКСИМУМ(Обеспечение.Обособить) КАК Обособить,
	|		МИНИМУМ(Обеспечение.НомерСтроки) КАК НомерСтроки,
	|		СУММА(Обеспечение.Количество) КАК Количество
	|	ИЗ
	|		Обеспечение КАК Обеспечение
	|	ГДЕ
	|		Обеспечение.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		И Обеспечение.Количество <> 0
	|		И ВЫРАЗИТЬ(Обеспечение.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры В (
	|						ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|						ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|		И (Обеспечение.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				ИЛИ ВЫРАЗИТЬ(Обеспечение.Номенклатура КАК Справочник.Номенклатура).ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Обеспечение.Номенклатура,
	|		Обеспечение.Характеристика
	|	) КАК Обеспечение
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Расход.Номенклатура КАК Номенклатура,
	|			Расход.Характеристика КАК Характеристика,
	|			СУММА(Расход.Количество) КАК Количество
	|		ИЗ
	|			Расход КАК Расход
	|		ГДЕ
	|			Расход.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			И Расход.Количество <> 0
	|			И ВЫРАЗИТЬ(Расход.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры В (
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			И (Расход.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|					ИЛИ ВЫРАЗИТЬ(Расход.Номенклатура КАК Справочник.Номенклатура).ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать))
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Расход.Номенклатура,
	|			Расход.Характеристика) КАК Расход
	|		ПО (Расход.Номенклатура = Обеспечение.Номенклатура)
	|			И (Расход.Характеристика = Обеспечение.Характеристика)
	|ГДЕ
	|	Обеспечение.Количество - ЕСТЬNULL(Расход.Количество, 0) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Обеспечение.НомерСтроки";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ВЫРАЗИТЬ(Обеспечение.Упаковка КАК Справочник.УпаковкиЕдиницыИзмерения)",
		"ВЫРАЗИТЬ(Обеспечение.Номенклатура КАК Справочник.Номенклатура)"));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОбеспечениеМатериаламиИРаботами", Объект.ОбеспечениеМатериаламиИРаботами.Выгрузить());
	Запрос.УстановитьПараметр("РасходМатериаловИРабот", Объект.РасходМатериаловИРабот.Выгрузить());
	
	Если Объект.РасходОднойДатой Тогда
		ДатаОперации = Объект.ДатаРасхода;
	Иначе	
		ДатаОперации = ?(Объект.ФактическоеОкончаниеЭтапа <> '000101010000', Объект.ФактическоеОкончаниеЭтапа, ТекущаяДатаСеанса());
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаОперации", ДатаОперации);

	Объект.ЭкономияМатериалов.Загрузить(Запрос.Выполнить().Выгрузить());
	
	ПараметрыУказанияСерий = Документы.ЭтапПроизводства2_2.ПараметрыУказанияСерий(Объект);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий.ЭкономияМатериалов);
	
КонецПроцедуры

Процедура УстановитьДействиеОтгрузить(Объект) Экспорт
	
	ТекущаяДатаСеанса = НачалоДня(ТекущаяДатаСеанса());
	СтрокиСПустымСкладом = Новый Массив;
	
	Для каждого ДанныеСтроки Из Объект.ОбеспечениеМатериаламиИРаботами Цикл
		
		Если ДанныеСтроки.Производится 
			И ДанныеСтроки.ВариантОбеспечения <> Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно Тогда
			
			ДанныеСтроки.ДатаОтгрузки = ТекущаяДатаСеанса;
			ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно;
			
		ИначеЕсли НЕ ДанныеСтроки.Производится 
			И ДанныеСтроки.ВариантОбеспечения <> Перечисления.ВариантыОбеспечения.Отгрузить
			И ДанныеСтроки.ВариантОбеспечения <> Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно Тогда
			
			ДанныеСтроки.ДатаОтгрузки = ТекущаяДатаСеанса;
			ДанныеСтроки.ВариантОбеспечения = ?(ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Обособленно, 
													Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно, 
													Перечисления.ВариантыОбеспечения.Отгрузить);
													
			Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Склад) Тогда
				// Склад может быть не заполнен если не было запланировано обеспечение
				// Нужно его заполнить значением по умолчанию
				СтрокиСПустымСкладом.Добавить(ДанныеСтроки);
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	Если СтрокиСПустымСкладом.Количество() <> 0 Тогда
		
		// Заполнение пустых складов
		
		ТаблицаМатериалов = Новый ТаблицаЗначений;
		ТаблицаМатериалов.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаМатериалов.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		
		Для каждого ДанныеСтроки Из СтрокиСПустымСкладом Цикл
			ЗаполнитьЗначенияСвойств(ТаблицаМатериалов.Добавить(), ДанныеСтроки);
		КонецЦикла; 
		
		ПараметрыОбеспечения = ПланированиеПроизводства.ПараметрыОбеспеченияСпискаНоменклатуры(
									ТаблицаМатериалов, Объект.Подразделение);
									
		ПараметрыОбеспечения.Индексы.Добавить("Номенклатура,Характеристика");
		
		СтруктураПоиска = Новый Структура("Номенклатура,Характеристика");
		Для каждого ДанныеСтроки Из СтрокиСПустымСкладом Цикл
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, ДанныеСтроки);
   			СписокСтрок = ПараметрыОбеспечения.НайтиСтроки(СтруктураПоиска);
			ДанныеСтроки.Склад = СписокСтрок[0].Склад;
			
			Если ДанныеСтроки.ВариантОбеспечения <> Перечисления.ВариантыОбеспечения.Отгрузить
				И ДанныеСтроки.ВариантОбеспечения <> Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно Тогда
				
				ДанныеСтроки.ВариантОбеспечения = ?(ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Обособленно, 
														Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно, 
														Перечисления.ВариантыОбеспечения.Отгрузить);
			КонецЕсли; 
			
		КонецЦикла; 
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОтменитьДействиеОтгрузить(Объект) Экспорт
	
	Для каждого ДанныеСтроки Из Объект.ОбеспечениеМатериаламиИРаботами Цикл
		
		Если ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно Тогда
			
			ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Обособленно;
			
		ИначеЕсли ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Отгрузить Тогда
			
			ДанныеСтроки.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Требуется;
													
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#Область ЦепочкаЭтапов

// Формирует граф цепочки этапов по идентификатору цепочки
//  в качестве идентификатора может быть передан заказ на производство
//  или выпускающий этап цепочки.
//
// Параметры:
//  Идентификатор		 - ДокументСсылка.ЗаказНаПроизводство2_2, ДокументСсылка.ЭтапПроизводства2_2 - Идентификатор цепочки.
//  НаправлениеОбхода	 - Число - Направление обхода графа (1 - вперед, -1 - назад).
// 
// Возвращаемое значение:
//  Граф - ТаблицаЗначений	 - см. описание функции Граф()
//
Функция ГрафЦепочкиЭтапов(Идентификатор, Знач НаправлениеОбхода = Неопределено) Экспорт
	
	// Схема запроса для получения связи этапов.
	// По умолчанию используется обход вперед по цепочке этапов заказа.
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(
		"ВЫБРАТЬ 
		|	Таблица.Ссылка КАК Вершина,
		|	Таблица.Этап   КАК СмежнаяВершина
		|ПОМЕСТИТЬ Ребра
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка.Распоряжение = &Идентификатор
		|	И Таблица.Ссылка.Проведен
		|	И Таблица.Этап.Распоряжение = &Идентификатор
		|	И Таблица.Этап.Проведен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Вершина
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вершины.Ссылка       КАК Вершина,
		|	Ребра.СмежнаяВершина КАК СмежнаяВершина
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Вершины
		|		ЛЕВОЕ СОЕДИНЕНИЕ Ребра КАК Ребра
		|		ПО Вершины.Ссылка = Ребра.Вершина
		|ГДЕ
		|	Вершины.Распоряжение = &Идентификатор
		|	И Вершины.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Вершина");
	
	// Заменим идентификатор цепочки в зависимости от переданного параметра
	Если ТипЗнч(Идентификатор) = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
		
		Для каждого ПакетЗапроса Из СхемаЗапроса.ПакетЗапросов Цикл
		
			Для каждого Оператор Из ПакетЗапроса.Операторы Цикл
				
				Для Индекс = 0 По Оператор.Отбор.Количество()-1 Цикл
					
					Если Найти(Оператор.Отбор[Индекс], ".Распоряжение") > 0 Тогда
						
						ТекстВыражения = СтрЗаменить(Оператор.Отбор[Индекс], 
								".Распоряжение", 
								".ВыпускающийЭтап");
								
						Оператор.Отбор[Индекс] = Новый ВыражениеСхемыЗапроса(ТекстВыражения);
						
					КонецЕсли;
					
				КонецЦикла;
				
				Для каждого Источник Из Оператор.Источники Цикл
					
					Для каждого Соединение Из Источник.Соединения Цикл
						
						Если Найти(Соединение.Условие, ".Распоряжение") > 0 Тогда
							
							ТекстВыражения = СтрЗаменить(Соединение.Условие, 
									".Распоряжение", 
									".ВыпускающийЭтап");
									
							Соединение.Условие = Новый ВыражениеСхемыЗапроса(ТекстВыражения);
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЦикла;
			
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// По направлению обхода настроим поля связи
	Если НаправлениеОбхода = УправлениеПроизводством.НаправлениеОбходаГрафаНазад() Тогда
		
		ПоляВершина = СхемаЗапроса.ПакетЗапросов[0].Колонки.Найти("Вершина").Поля;
		ПоляСмежнаяВершина = СхемаЗапроса.ПакетЗапросов[0].Колонки.Найти("СмежнаяВершина").Поля;
		
		ПоляВершина[0] = ПоляСмежнаяВершина[0];
		
	КонецЕсли;

	ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат УправлениеПроизводством.Граф(РезультатЗапроса);
	
КонецФункции

#КонецОбласти

#Область СхемыОбособления

Функция СхемыОбособленияПоРаспоряжению(Распоряжения)
	
	Возврат Документы.ЗаказНаПроизводство2_2.СхемыОбособленияПоЗаказам(Распоряжения);
	
КонецФункции

Функция НайтиСхемуОбособленияПоКлючу(СхемыОбособления, КлючСхемы)
	
	НайденныеСтроки = СхемыОбособления.НайтиСтроки(КлючСхемы);
	Если НайденныеСтроки.ВГраница() <> -1 Тогда
		Возврат НайденныеСтроки[0];
	Иначе
		Возврат Документы.ЗаказНаПроизводство2_2.СхемаОбособленияПоКлючу(КлючСхемы);
	КонецЕсли;
	
КонецФункции

Функция НазначенияПоСхемеОбособления(СхемаОбособления, Назначение)
	
	Назначения = Новый Структура("НазначениеПродукция,НазначениеМатериалы,Назначение",
		Справочники.Назначения.ПустаяСсылка(),
		Назначение,
		Назначение);
	
	ЗаполнитьНазначенияПоСхемеОбособления(Назначения, СхемаОбособления);
	
	Возврат Назначения;
	
КонецФункции

Процедура ЗаполнитьНазначенияПоСхемеОбособления(Назначения, СхемаОбособления)
	
	Если СхемаОбособления <> Неопределено Тогда
		Если ЗначениеЗаполнено(СхемаОбособления.НазначениеМатериалы) Тогда
			ЗаполнитьЗначенияСвойств(Назначения,СхемаОбособления,"НазначениеПродукция,НазначениеМатериалы");
		Иначе
			ЗаполнитьЗначенияСвойств(Назначения,СхемаОбособления,"НазначениеПродукция");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьЗаполнитьНазначенияПоСхеме(Объект) Экспорт
	
	КлючСхемы = УправлениеПроизводствомКлиентСервер.КлючСхемыОбособления();
		КлючСхемы.Распоряжение = Объект.Распоряжение;
		КлючСхемы.Назначение   = Объект.НазначениеПродукция;
	СхемаОбособления = Документы.ЗаказНаПроизводство2_2.СхемаОбособленияПоКлючу(КлючСхемы);
	
	Если СхемаОбособления <> Неопределено И ЗначениеЗаполнено(СхемаОбособления.НазначениеМатериалы) Тогда
		Объект.НазначениеМатериалы = СхемаОбособления.НазначениеМатериалы;
	Иначе
		Объект.НазначениеМатериалы = Объект.Назначение;
	КонецЕсли;
	
КонецПроцедуры

Функция СписокДоступныхНазначений(Параметры) Экспорт
	
	СписокНазначений = Неопределено;
	
	СхемыОбособления = СхемыОбособленияПоРаспоряжению(Параметры.Распоряжение);
	
	КлючСхемы = УправлениеПроизводствомКлиентСервер.КлючСхемыОбособления();
		КлючСхемы.Распоряжение = Параметры.Распоряжение;
		КлючСхемы.Назначение   = Параметры.НазначениеПродукция;
	СхемаОбособления = НайтиСхемуОбособленияПоКлючу(СхемыОбособления, КлючСхемы);
	
	Если СхемаОбособления.Обособленно Тогда
		
		СписокНазначений = Новый Массив;
		
		НайденныеСтроки = СхемыОбособления.НайтиСтроки(Новый Структура("НазначениеПродукция", СхемаОбособления.НазначениеПродукция));
		Для каждого Строка Из НайденныеСтроки Цикл
			СписокНазначений.Добавить(Строка.Назначение);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СписокНазначений;
	
КонецФункции

Функция НазначениеПобочногоВыпускаДавальцу(Документ) Экспорт
	
	Назначение = Справочники.Назначения.ПустаяСсылка();
	ТипИсточника = ТипЗнч(Документ);
	
	Если ТипИсточника = Тип("ДокументОбъект.ЭтапПроизводства2_2") Тогда
		Назначение = Документ.НазначениеМатериалы;
	ИначеЕсли ТипИсточника = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
		Назначение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ,"НазначениеМатериалы");
	КонецЕсли;
	
	Возврат Назначение;
	
КонецФункции

#КонецОбласти

#Область КорректировкаЗаказа

Функция ТекстЗапросаТаблицыДокументаДляКорректировки() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	// Поля необходимые для алгоритмов
	|	ВЫБОР КОГДА ТаблицаТовары.Ссылка.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА
	|		ТаблицаТовары.Ссылка.ЗаказПереработчику
	|	ИНАЧЕ
	|		ТаблицаТовары.Ссылка
	|	КОНЕЦ                        КАК Ссылка,
	|	ВЫБОР КОГДА ТаблицаТовары.Ссылка.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА
	|		ТаблицаТовары.Ссылка.ЗаказПереработчику
	|	ИНАЧЕ
	|		ТаблицаТовары.Ссылка
	|	КОНЕЦ                        КАК Заказ,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)
	|			И ТаблицаТовары.Ссылка.НазначениеМатериалы.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТаблицаТовары.Ссылка.НазначениеМатериалы
	|			ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                    КАК Назначение,
	|	ТаблицаТовары.Серия          КАК Серия,
	|	ТаблицаТовары.Склад          КАК Склад,
	|	ТаблицаТовары.КодСтроки      КАК КодСтроки,
	|	ТаблицаТовары.Количество     КАК Заказано,
	|	ТаблицаТовары.Количество     КАК Количество,
	|	ИСТИНА                       КАК ЭтоОтгрузка,
	// Поля для обеспечения сохранности данных
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок,
	|	ТаблицаТовары.ВариантОбеспечения,
	|	ТаблицаТовары.ДатаОтгрузки,
	|	ТаблицаТовары.Производится,
	|	ТаблицаТовары.Спецификация,
	|	ТаблицаТовары.СтатусУказанияСерий,
	|	ТаблицаТовары.ИспользуетсяАвтовыбор,
	|	ТаблицаТовары.СведенияАвтовыбора,
	|	ТаблицаТовары.ПрименениеМатериала,
	|	ТаблицаТовары.КлючСвязиСпецификация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.СтатьяКалькуляции
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&Распоряжения)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	// Поля необходимые для алгоритмов
	|	ВЫБОР КОГДА ТаблицаТовары.Ссылка.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА
	|		ТаблицаТовары.Ссылка.ЗаказПереработчику
	|	ИНАЧЕ
	|		ТаблицаТовары.Ссылка
	|	КОНЕЦ                        КАК Ссылка,
	|	ВЫБОР КОГДА ТаблицаТовары.Ссылка.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА
	|		ТаблицаТовары.Ссылка.ЗаказПереработчику
	|	ИНАЧЕ
	|		ТаблицаТовары.Ссылка
	|	КОНЕЦ                        КАК Заказ,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Получатель     КАК Склад,
	|	ТаблицаТовары.Серия          КАК Серия,
	|	ТаблицаТовары.КодСтроки      КАК КодСтроки,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|					ТаблицаТовары.Назначение
	|				ИНАЧЕ
	|					ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                    КАК Назначение,
	|	ТаблицаТовары.Количество     КАК Заказано,
	|	ТаблицаТовары.Количество     КАК Количество,
	|	ТаблицаТовары.Произведено    КАК Произведено,
	|	ЛОЖЬ                         КАК ЭтоОтгрузка,
	// Поля для обеспечения сохранности данных
	|	ТаблицаТовары.КоличествоУпаковок,
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.ЭтапПотребитель,
	|	ТаблицаТовары.Получатель,
	|	ТаблицаТовары.ДатаПроизводства,
	|	ТаблицаТовары.СтатусУказанияСерий,
	|	ТаблицаТовары.СтатусУказанияСерийОтправитель,
	|	ТаблицаТовары.СтатусУказанияСерийПолучатель,
	|	ТаблицаТовары.ДоляСтоимости,
	|	ТаблицаТовары.СписатьНаРасходы,
	|	ТаблицаТовары.СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.ИдентификаторСтроки,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.СчетУчета,
	|	ТаблицаТовары.Субконто1,
	|	ТаблицаТовары.Субконто2,
	|	ТаблицаТовары.Субконто3,
	|	ТаблицаТовары.АналитикаАктивовПассивов,
	|	ТаблицаТовары.ПередатьДавальцу
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&Распоряжения)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	// Поля необходимые для алгоритмов
	|	ВЫБОР КОГДА ТаблицаТовары.Ссылка.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА
	|		ТаблицаТовары.Ссылка.ЗаказПереработчику
	|	ИНАЧЕ
	|		ТаблицаТовары.Ссылка
	|	КОНЕЦ                        КАК Ссылка,
	|	ВЫБОР КОГДА ТаблицаТовары.Ссылка.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка) ТОГДА
	|		ТаблицаТовары.Ссылка.ЗаказПереработчику
	|	ИНАЧЕ
	|		ТаблицаТовары.Ссылка
	|	КОНЕЦ                        КАК Заказ,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Получатель     КАК Склад,
	|	ТаблицаТовары.Серия          КАК Серия,
	|	ТаблицаТовары.КодСтроки      КАК КодСтроки,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                    КАК Назначение,
	|	ТаблицаТовары.Количество     КАК Заказано,
	|	ТаблицаТовары.Количество     КАК Количество,
	|	ТаблицаТовары.Произведено    КАК Произведено,
	|	ЛОЖЬ                         КАК ЭтоОтгрузка,
	// Поля для обеспечения сохранности данных
	|	ТаблицаТовары.КоличествоУпаковок,
	|	ТаблицаТовары.Упаковка,
	|	ТаблицаТовары.ЭтапПотребитель,
	|	ТаблицаТовары.Получатель,
	|	ТаблицаТовары.ДатаПроизводства,
	|	ТаблицаТовары.СтатусУказанияСерий,
	|	ТаблицаТовары.СтатусУказанияСерийОтправитель,
	|	ТаблицаТовары.СтатусУказанияСерийПолучатель,
	|	ТаблицаТовары.Цена,
	|	ТаблицаТовары.Сумма,
	|	ТаблицаТовары.СписатьНаРасходы,
	|	ТаблицаТовары.СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.ИдентификаторСтроки,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.СтатьяКалькуляции,
	|	ТаблицаТовары.СчетУчета,
	|	ТаблицаТовары.Субконто1,
	|	ТаблицаТовары.Субконто2,
	|	ТаблицаТовары.Субконто3,
	|	ТаблицаТовары.АналитикаАктивовПассивов,
	|	ТаблицаТовары.ПередатьДавальцу
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&Распоряжения)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция ТекстЗапросаТоварыДокумента(Отбор, ХозяйственнаяОперация) Экспорт

	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства Тогда 
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Таблица.Ссылка                                          КАК Распоряжение,
		|	Таблица.Номенклатура                                    КАК Номенклатура,
		|	Таблица.Характеристика                                  КАК Характеристика,
		|	ДанныеУчета.Назначение                                  КАК Назначение,
		|	ДанныеУчета.НазначениеОтправителя                       КАК НазначениеОтправителя,
		|	Таблица.КодСтроки                                       КАК КодСтроки,
		|	Таблица.Серия                                           КАК Серия,
		|	Таблица.Количество                                      КАК Количество,
		|	Таблица.Упаковка                                        КАК Упаковка,
		|	ДАТАВРЕМЯ(1,1,1)                                        КАК ДатаОтгрузки,
		|	ЛОЖЬ                                                    КАК Отменено,
		|	Таблица.СтатусУказанияСерий                             КАК СтатусУказанияСерий,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка) КАК ВариантОбеспечения,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                КАК Склад,
		|	ЕСТЬNULL(ДанныеУчета.КОформлению, 0)                    КАК КОформлению,
		|	ЕСТЬNULL(ДанныеУчета.Заказано, 0)                       КАК Заказано
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Таблица
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеУчета КАК ДанныеУчета
		|	ПО Таблица.Ссылка         = ДанныеУчета.Распоряжение
		|		И Таблица.КодСтроки      = ДанныеУчета.КодСтроки
		|		И Таблица.Номенклатура   = ДанныеУчета.Номенклатура
		|		И Таблица.Характеристика = ДанныеУчета.Характеристика
		|		И Таблица.Серия          = ДанныеУчета.Серия
		|	
		|ГДЕ
		|	НЕ ДанныеУчета.Распоряжение ЕСТЬ NULL
		|//&Отбор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Таблица.Ссылка                                          КАК Распоряжение,
		|	Таблица.Номенклатура                                    КАК Номенклатура,
		|	Таблица.Характеристика                                  КАК Характеристика,
		|	ДанныеУчета.Назначение                                  КАК Назначение,
		|	ДанныеУчета.НазначениеОтправителя                       КАК НазначениеОтправителя,
		|	Таблица.КодСтроки                                       КАК КодСтроки,
		|	Таблица.Серия                                           КАК Серия,
		|	Таблица.Количество                                      КАК Количество,
		|	Таблица.Упаковка                                        КАК Упаковка,
		|	ДАТАВРЕМЯ(1,1,1)                                        КАК ДатаОтгрузки,
		|	ЛОЖЬ                                                    КАК Отменено,
		|	Таблица.СтатусУказанияСерий                             КАК СтатусУказанияСерий,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка) КАК ВариантОбеспечения,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                КАК Склад,
		|	ЕСТЬNULL(ДанныеУчета.КОформлению, 0)                    КАК КОформлению,
		|	ЕСТЬNULL(ДанныеУчета.Заказано, 0)                       КАК Заказано
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК Таблица
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеУчета КАК ДанныеУчета
		|	ПО Таблица.Ссылка         = ДанныеУчета.Распоряжение
		|		И Таблица.КодСтроки      = ДанныеУчета.КодСтроки
		|		И Таблица.Номенклатура   = ДанныеУчета.Номенклатура
		|		И Таблица.Характеристика = ДанныеУчета.Характеристика
		|		И Таблица.Серия          = ДанныеУчета.Серия
		|	
		|ГДЕ
		|	НЕ ДанныеУчета.Распоряжение ЕСТЬ NULL
		|//&Отбор";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Таблица.Ссылка                       КАК Распоряжение,
		|	Таблица.Номенклатура                 КАК Номенклатура,
		|	Таблица.Характеристика               КАК Характеристика,
		|	ДанныеУчета.Назначение               КАК Назначение,
		|	ДанныеУчета.НазначениеОтправителя    КАК НазначениеОтправителя,
		|	Таблица.КодСтроки                    КАК КодСтроки,
		|	Таблица.Серия                        КАК Серия,
		|	Таблица.Количество                   КАК Количество,
		|	Таблица.Упаковка                     КАК Упаковка,
		|	Таблица.ДатаОтгрузки                 КАК ДатаОтгрузки,
		|	ЛОЖЬ                                 КАК Отменено,
		|	Таблица.СтатусУказанияСерий          КАК СтатусУказанияСерий,
		|	Таблица.ВариантОбеспечения           КАК ВариантОбеспечения,
		|	ЕСТЬNULL(Таблица.Ссылка.ВыпускающийЭтап.ОсновноеИзделиеНоменклатура.ГруппаАналитическогоУчета,
		|				ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)) КАК ГруппаПродукции,
		|	Таблица.Склад                        КАК Склад,
		|	ЕСТЬNULL(ДанныеУчета.КОформлению, 0) КАК КОформлению,
		|	ЕСТЬNULL(ДанныеУчета.Заказано, 0)    КАК Заказано
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Таблица
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеУчета КАК ДанныеУчета
		|	ПО Таблица.Ссылка         = ДанныеУчета.Распоряжение
		|		И Таблица.КодСтроки      = ДанныеУчета.КодСтроки
		|		И Таблица.Номенклатура   = ДанныеУчета.Номенклатура
		|		И Таблица.Характеристика = ДанныеУчета.Характеристика
		|		И Таблица.Серия          = ДанныеУчета.Серия
		|	
		|ГДЕ
		|	НЕ ДанныеУчета.Распоряжение ЕСТЬ NULL
		|//&Отбор";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Таблица.Ссылка                       КАК Распоряжение,
		|	Таблица.Номенклатура                 КАК Номенклатура,
		|	Таблица.Характеристика               КАК Характеристика,
		|	ДанныеУчета.Назначение               КАК Назначение,
		|	ДанныеУчета.НазначениеОтправителя    КАК НазначениеОтправителя,
		|	Таблица.КодСтроки                    КАК КодСтроки,
		|	Таблица.Серия                        КАК Серия,
		|	Таблица.Количество                   КАК Количество,
		|	Таблица.Упаковка                     КАК Упаковка,
		|	Таблица.ДатаОперации                 КАК ДатаОтгрузки,
		|	ЛОЖЬ                                 КАК Отменено,
		|	Таблица.СтатусУказанияСерий          КАК СтатусУказанияСерий,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка) КАК ВариантОбеспечения,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
		|	Таблица.Склад                        КАК Склад,
		|	ЕСТЬNULL(ДанныеУчета.КОформлению, 0) КАК КОформлению,
		|	ЕСТЬNULL(ДанныеУчета.Заказано, 0)    КАК Заказано
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК Таблица
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеУчета КАК ДанныеУчета
		|	ПО Таблица.Ссылка         = ДанныеУчета.Распоряжение
		|		И Таблица.КодСтроки      = ДанныеУчета.КодСтроки
		|		И Таблица.Номенклатура   = ДанныеУчета.Номенклатура
		|		И Таблица.Характеристика = ДанныеУчета.Характеристика
		|		И Таблица.Серия          = ДанныеУчета.Серия
		|	
		|ГДЕ
		|	НЕ ДанныеУчета.Распоряжение ЕСТЬ NULL
		|//&Отбор";
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Ошибка в процедуре ЭтапПроизводства2_2.ТекстЗапросаТоварыДокумента. Обратитесь к администратору.'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отбор) Тогда
		
		ТекстОтбора = "";
		
		Для каждого КлючЗначение Из Отбор Цикл
			
			Ключ = КлючЗначение.Ключ;
			
			Если Ключ = "Ссылка" Тогда
				Ключ = "Таблица.Ссылка";
			КонецЕсли;
			
			ТекстОтбора = 
				ТекстОтбора
				+ " И "
				+ Ключ
				+ " В(&"
				+ КлючЗначение.Значение
				+ ")";
			
		КонецЦикла;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&Отбор", ТекстОтбора);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Процедура СообщитьОбОшибкахЗаполнения(Объект, Выборка, СписокРеквизитов, ИмяТЧ, ПредставлениеТЧ, Отказ) Экспорт

	КлючДанных = ?(ТипЗнч(Объект) = Тип("ДокументОбъект.ЭтапПроизводства2_2"), Объект, Неопределено);
	ПутьКДанным = ?(ТипЗнч(Объект) = Тип("ОбработкаОбъект.РедактированиеЭтаповПроизводства"), "РедактированиеЭтапов", "");
	
	Пока Выборка.Следующий() Цикл
		
		Для каждого ПараметрыПроверки Из СписокРеквизитов Цикл
			Если Выборка[ПараметрыПроверки.ИмяПоляПроверки] = Истина Тогда
				ТекстСообщения = ПараметрыПроверки.ШаблонСообщения;
				Если ПараметрыПроверки.ПоляДляПодстановкиВСообщение <> Неопределено Тогда
					СписокПолей = СтрРазделить(ПараметрыПроверки.ПоляДляПодстановкиВСообщение, ",");
					Для каждого ИмяПоляДляПодстановки Из СписокПолей Цикл
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%" + ИмяПоляДляПодстановки + "%", Выборка[ИмяПоляДляПодстановки]);
					КонецЦикла; 
				КонецЕсли; 
				ТекстСообщения = СтрШаблон(ТекстСообщения, Формат(Выборка.НомерСтроки, "ЧГ="), ПредставлениеТЧ);
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТЧ, Выборка.НомерСтроки, ПараметрыПроверки.ИмяПоля);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, КлючДанных, Поле, ПутьКДанным, Отказ);
			КонецЕсли; 
		КонецЦикла; 
		
	КонецЦикла; 
	
КонецПроцедуры

Функция ПараметрыПроверкиТабличнойЧасти() Экспорт

	Возврат Новый Структура("ШаблонСообщения,ИмяПоля,ИмяПоляПроверки,ПоляДляПодстановкиВСообщение");

КонецФункции

Функция МаксимальнаяДатаВТЧ(ТабличнаяЧасть, ПолеДата) Экспорт
	
	МаксимальнаяДата = '000101010000';
	Для каждого ДанныеСтроки Из ТабличнаяЧасть Цикл 
		МаксимальнаяДата = Макс(МаксимальнаяДата, ДанныеСтроки[ПолеДата]);
	КонецЦикла;
	
	Возврат МаксимальнаяДата
	
КонецФункции

Процедура ПроверитьВыходныеИзделия(Объект, МенеджерВременныхТаблиц, Отказ)

	ПроверятьТЧВыходныеИзделия = МенеджерВременныхТаблиц.Таблицы.Найти("ВыходныеИзделия") <> Неопределено;
	ПроверятьТЧПобочныеИзделия = МенеджерВременныхТаблиц.Таблицы.Найти("ПобочныеИзделия") <> Неопределено;
	
	Если НЕ ПроверятьТЧВыходныеИзделия
		И НЕ ПроверятьТЧПобочныеИзделия Тогда
		Возврат;
	КонецЕсли;

	СписокРеквизитов = Новый Массив;
	
	ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
	ПараметрыПроверки.ИмяПоля = "ПолучательРедактирование";
	ПараметрыПроверки.ИмяПоляПроверки = "ПолучательНеЗаполнен";
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru='Не заполнена колонка ""Получатель"" в строке %1 списка ""%2"".'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
	ПараметрыПроверки.ИмяПоля = "ПолучательРедактирование";
	ПараметрыПроверки.ИмяПоляПроверки = "СтатьяРасходовНеЗаполнена";
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru='Не заполнена колонка ""Статья расходов"" в строке %1 списка ""%2"".'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
		
	ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
	ПараметрыПроверки.ИмяПоля = "Номенклатура";
	ПараметрыПроверки.ИмяПоляПроверки = "ЗапрещенВыборРабот";
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru='Не допускается производство работ при переработке на стороне (строка %1 списка ""%2"").'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
	ПараметрыПроверки.ИмяПоля = "ПолучательРедактирование";
	ПараметрыПроверки.ИмяПоляПроверки = "РаботыЗапрещеноВыпускатьНаСклад";
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru='Работы можно выпустить в подразделение или списать на расходы, передача работ на склад не предусмотрена (строка %1 списка ""%2"").'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
	ПараметрыПроверки.ИмяПоля = "НазначениеРедактирование";
	ПараметрыПроверки.ИмяПоляПроверки = "НазначениеНеЗаполнено";
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru='Не заполнена колонка ""Назначение"" в строке %1 списка ""%2"".'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
	ПараметрыПроверки.ИмяПоля = "ДоляСтоимости";
	ПараметрыПроверки.ИмяПоляПроверки = "ЗаполнитьДолюСтоимости";
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru='При выпуске нескольких наименований выходных изделий требуется указать их долю стоимости (строка %1 списка ""%2"").'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
	ПараметрыПроверки.ИмяПоля = "Цена";
	ПараметрыПроверки.ИмяПоляПроверки = "ЗаполнитьЦенуПобочногоВыпуска";
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru='Не заполнена цена побочного выпуска (строка %1 списка ""%2"").'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);

	ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
	ПараметрыПроверки.ИмяПоля = "Сумма";
	ПараметрыПроверки.ИмяПоляПроверки = "ЗаполнитьСуммуПобочногоВыпуска";
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru='Не заполнена сумма побочного выпуска (строка %1 списка ""%2"").'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.НомерСтроки,
	|	ВложенныйЗапрос.РаботыЗапрещеноВыпускатьНаСклад,
	|	ВложенныйЗапрос.ПолучательНеЗаполнен,
	|	ВложенныйЗапрос.СтатьяРасходовНеЗаполнена,
	|	ВложенныйЗапрос.НазначениеНеЗаполнено,
	|	ВложенныйЗапрос.ЗапрещенВыборРабот,
	|	ВложенныйЗапрос.ЗаполнитьДолюСтоимости,
	|	ВложенныйЗапрос.ЗаполнитьЦенуПобочногоВыпуска,
	|	ВложенныйЗапрос.ЗаполнитьСуммуПобочногоВыпуска
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|		ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ТабличнаяЧасть.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|					И РеквизитыЭтапов.ПроизводствоНаСтороне
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЗапрещенВыборРабот,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|					И ВЫРАЗИТЬ(ТабличнаяЧасть.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|					И ТабличнаяЧасть.Получатель ССЫЛКА Справочник.Склады
	|					И ТабличнаяЧасть.Получатель <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК РаботыЗапрещеноВыпускатьНаСклад,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Получатель В (
	|							НЕОПРЕДЕЛЕНО, 
	|							ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка), 
	|							ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|					И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПолучательНеЗаполнен,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.СписатьНаРасходы
	|					И ТабличнаяЧасть.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК СтатьяРасходовНеЗаполнена,
	|		ВЫБОР
	|			КОГДА (ТабличнаяЧасть.ЭтапПотребитель <> ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
	|					ИЛИ РеквизитыЭтапов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья))
	|				И ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК НазначениеНеЗаполнено,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.ДоляСтоимости = 0 И &ПроверятьДолюСтоимости
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЗаполнитьДолюСтоимости,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Произведено И ТабличнаяЧасть.Цена = 0 И &ПроверятьСтоимостьПобочногоВыпуска
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЗаполнитьЦенуПобочногоВыпуска,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Произведено И ТабличнаяЧасть.Сумма = 0 И &ПроверятьСтоимостьПобочногоВыпуска
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЗаполнитьСуммуПобочногоВыпуска
	|	ИЗ
	|		ВыходныеИзделия КАК ТабличнаяЧасть
	|			ЛЕВОЕ СОЕДИНЕНИЕ РеквизитыЭтапов КАК РеквизитыЭтапов
	|				ПО РеквизитыЭтапов.Ссылка = ТабличнаяЧасть.Ссылка) КАК ВложенныйЗапрос
	|ГДЕ
	|	(ВложенныйЗапрос.РаботыЗапрещеноВыпускатьНаСклад
	|			ИЛИ ВложенныйЗапрос.ПолучательНеЗаполнен
	|			ИЛИ ВложенныйЗапрос.СтатьяРасходовНеЗаполнена
	|			ИЛИ ВложенныйЗапрос.НазначениеНеЗаполнено
	|			ИЛИ ВложенныйЗапрос.ЗапрещенВыборРабот
	|			ИЛИ ВложенныйЗапрос.ЗаполнитьДолюСтоимости
	|			ИЛИ ВложенныйЗапрос.ЗаполнитьЦенуПобочногоВыпуска
	|			ИЛИ ВложенныйЗапрос.ЗаполнитьСуммуПобочногоВыпуска
	|	)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.НомерСтроки";
	
	Если ПроверятьТЧВыходныеИзделия Тогда
		
		ПроверятьДолюСтоимости = ИспользоватьДолюСтоимостиВВыходныхИзделиях(Объект);
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ПроверятьДолюСтоимости", ПроверятьДолюСтоимости);
		Запрос.УстановитьПараметр("ПроверятьСтоимостьПобочногоВыпуска", Ложь);
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		СообщитьОбОшибкахЗаполнения(Объект, Выборка, СписокРеквизитов, "ВыходныеИзделия", НСтр("ru = 'Продукция'"), Отказ);
		
	КонецЕсли;
	
	Если ПроверятьТЧПобочныеИзделия Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВыходныеИзделия КАК ТабличнаяЧасть", "ПобочныеИзделия КАК ТабличнаяЧасть");
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ПроверятьДолюСтоимости", Ложь);
		Запрос.УстановитьПараметр("ПроверятьСтоимостьПобочногоВыпуска", Истина);
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		СообщитьОбОшибкахЗаполнения(Объект, Выборка, СписокРеквизитов, "ПобочныеИзделия", НСтр("ru = 'Побочный и промежуточный выпуск'"), Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьОбеспечениеМатериаламиИРаботами(Объект, МенеджерВременныхТаблиц, ПредставлениеТЧ, Отказ)

	ПроверятьТЧОбеспечениеМатериаламиИРаботами = МенеджерВременныхТаблиц.Таблицы.Найти("ОбеспечениеМатериаламиИРаботами") <> Неопределено;
	Если НЕ ПроверятьТЧОбеспечениеМатериаламиИРаботами Тогда
		Возврат;
	КонецЕсли;

	ЭтоПроверкаДокумента = ТипЗнч(Объект) = Тип("ДокументОбъект.ЭтапПроизводства2_2");
	
	СписокРеквизитов = Новый Массив;
	
	ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
	ПараметрыПроверки.ИмяПоля = "ДатаОтгрузки";
	ПараметрыПроверки.ИмяПоляПроверки = "ДатаОтгрузкиНеЗаполнена";
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru='Не заполнена колонка ""Дата отгрузки"" в строке %1 списка ""%2"".'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
	ПараметрыПроверки.ИмяПоля = "Склад";
	ПараметрыПроверки.ИмяПоляПроверки = "СкладНеЗаполнен";
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru='Не заполнена колонка ""Склад"" в строке %1 списка ""%2"".'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
	ПараметрыПроверки.ИмяПоля = "Спецификация";
	ПараметрыПроверки.ИмяПоляПроверки = "СпецификацияНеЗаполнена";
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru='Не заполнена колонка ""Спецификация"" в строке %1 списка ""%2"".'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
	ПараметрыПроверки.ИмяПоля = "Номенклатура";
	ПараметрыПроверки.ИмяПоляПроверки = "ЗапрещенВыборРабот";
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru='Не допускается выбор работ при переработке на стороне (строка %1 списка ""%2"").'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
	ПараметрыПроверки.ИмяПоля = "ВариантОбеспечения";
	ПараметрыПроверки.ИмяПоляПроверки = "ВариантОбеспеченияПФ";
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru='Для производимых полуфабрикатов необходимо установить действие ""Обеспечивать обособленно"" или ""Отгрузить обособленно"" (строка %1 списка ""%2"").'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
	ПараметрыПроверки.ИмяПоля = "ВариантОбеспечения";
	ПараметрыПроверки.ИмяПоляПроверки = "НедоступнаОтгрузка";
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru='Отгрузка материалов доступна только при статусах ""Начат"", ""Завершен"" (строка %1 списка ""%2"").'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
	ПараметрыПроверки.ИмяПоля = "ВариантОбеспечения";
	ПараметрыПроверки.ИмяПоляПроверки = "ВариантОбеспеченияЭтапЗавершен";
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru='В завершенном этапе для всех материалов необходимо установить действие ""Отгрузить"" или ""Отгрузить обособленно"" (строка %1 списка ""%2"").'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
	ПараметрыПроверки.ИмяПоля = "СтатьяКалькуляции";
	ПараметрыПроверки.ИмяПоляПроверки = "СтатьяКалькуляцииНеЗаполнена";
	ПараметрыПроверки.ШаблонСообщения = НСтр("ru='В статусе ""Начат"" и ""Завершен"" указание статьи калькуляции является обязательным (строка %1 списка ""%2"").'");
	СписокРеквизитов.Добавить(ПараметрыПроверки);
	
	Если ЭтоПроверкаДокумента Тогда
		
		ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
		ПараметрыПроверки.ИмяПоля = "ВариантОбеспечения";
		ПараметрыПроверки.ИмяПоляПроверки = "НедоступнаОтгрузкаЗаказНеПроведен";
		ПараметрыПроверки.ШаблонСообщения = НСтр("ru='Отгрузка материалов недоступна т.к. заказ переработчику не проведен (строка %1 списка ""%2"").'");
		СписокРеквизитов.Добавить(ПараметрыПроверки);
		
		ПараметрыПроверки = ПараметрыПроверкиТабличнойЧасти();
		ПараметрыПроверки.ИмяПоля = "ВариантОбеспечения";
		ПараметрыПроверки.ИмяПоляПроверки = "НедоступнаОтгрузкаНетЗаказа";
		ПараметрыПроверки.ШаблонСообщения = НСтр("ru='Отгрузка материалов недоступна т.к. не оформлен заказ переработчику (строка %1 списка ""%2"").'");
		СписокРеквизитов.Добавить(ПараметрыПроверки);
		
	КонецЕсли; 

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.ДатаОтгрузкиНеЗаполнена,
	|	ВложенныйЗапрос.ВариантОбеспеченияПФ,
	|	ВложенныйЗапрос.ВариантОбеспеченияЭтапЗавершен,
	|	ВложенныйЗапрос.СкладНеЗаполнен,
	|	ВложенныйЗапрос.ЗапрещенВыборРабот,
	|	ВложенныйЗапрос.НедоступнаОтгрузка,
	|	ВложенныйЗапрос.НедоступнаОтгрузкаЗаказНеПроведен,
	|	ВложенныйЗапрос.НедоступнаОтгрузкаНетЗаказа,
	|	ВложенныйЗапрос.СпецификацияНеЗаполнена,
	|	ВложенныйЗапрос.СтатьяКалькуляцииНеЗаполнена
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|					И РеквизитыЭтапов.ПроизводствоНаСтороне
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЗапрещенВыборРабот,
	|		ВЫБОР
	|			КОГДА РеквизитыЭтапов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
	|					И НЕ РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|					И НЕ ТабличнаяЧасть.ВариантОбеспечения В (
	|							ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|							ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ВариантОбеспеченияЭтапЗавершен,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.ДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
	|					И НЕ РеквизитыЭтапов.НеОтгружатьЧастями
	|					И ТабличнаяЧасть.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ДатаОтгрузкиНеЗаполнена,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.ВариантОбеспечения В (
	|								ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|								ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|					И НЕ РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК НедоступнаОтгрузка,
	|		ВЫБОР
	|			КОГДА &ЭтоПроверкаДокумента
	|					И РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И ТабличнаяЧасть.ВариантОбеспечения В (
	|								ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|								ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|					И РеквизитыЭтапов.ЗаказПереработчику <> ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|					И НЕ ВЫРАЗИТЬ(РеквизитыЭтапов.ЗаказПереработчику КАК Документ.ЗаказПереработчику).Проведен
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК НедоступнаОтгрузкаЗаказНеПроведен,
	|		ВЫБОР
	|			КОГДА &ЭтоПроверкаДокумента
	|					И РеквизитыЭтапов.ПроизводствоНаСтороне
	|					И ТабличнаяЧасть.ВариантОбеспечения В (
	|								ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
	|								ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|					И РеквизитыЭтапов.ЗаказПереработчику = ЗНАЧЕНИЕ(Документ.ЗаказПереработчику.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК НедоступнаОтгрузкаНетЗаказа,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|					И ТабличнаяЧасть.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
	|					И ВЫРАЗИТЬ(ТабличнаяЧасть.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК СкладНеЗаполнен,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Производится
	|					И НЕ ТабличнаяЧасть.ВариантОбеспечения В (
	|								ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
	|								ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ВариантОбеспеченияПФ,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.Спецификация = ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
	|					И ТабличнаяЧасть.Производится
	|					И ВЫРАЗИТЬ(ТабличнаяЧасть.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК СпецификацияНеЗаполнена,
	|		ВЫБОР
	|			КОГДА ТабличнаяЧасть.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|					И РеквизитыЭтапов.Статус В (
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|								ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК СтатьяКалькуляцииНеЗаполнена
	|	ИЗ
	|		ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
	|			ЛЕВОЕ СОЕДИНЕНИЕ РеквизитыЭтапов КАК РеквизитыЭтапов
	|			ПО РеквизитыЭтапов.Ссылка = ТабличнаяЧасть.Ссылка) КАК ВложенныйЗапрос
	|ГДЕ
	|	(ВложенныйЗапрос.СкладНеЗаполнен
	|			ИЛИ ВложенныйЗапрос.ДатаОтгрузкиНеЗаполнена
	|			ИЛИ ВложенныйЗапрос.СпецификацияНеЗаполнена
	|			ИЛИ ВложенныйЗапрос.ВариантОбеспеченияПФ
	|			ИЛИ ВложенныйЗапрос.НедоступнаОтгрузка
	|			ИЛИ ВложенныйЗапрос.НедоступнаОтгрузкаЗаказНеПроведен
	|			ИЛИ ВложенныйЗапрос.НедоступнаОтгрузкаНетЗаказа
	|			ИЛИ ВложенныйЗапрос.ЗапрещенВыборРабот
	|			ИЛИ ВложенныйЗапрос.ВариантОбеспеченияЭтапЗавершен
	|			ИЛИ ВложенныйЗапрос.СтатьяКалькуляцииНеЗаполнена)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ЭтоПроверкаДокумента", ЭтоПроверкаДокумента);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	СообщитьОбОшибкахЗаполнения(Объект, Выборка, СписокРеквизитов, "ОбеспечениеМатериаламиИРаботами", ПредставлениеТЧ, Отказ);
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеКоличестваВТЧ(Объект, ИмяТЧ, МассивНепроверяемыхРеквизитов, Отказ)
	
	УправлениеПроизводством.ПроверитьЗаполнениеКоличестваВТЧ(Объект, ИмяТЧ, МассивНепроверяемыхРеквизитов, Отказ);
	
КонецПроцедуры

Функция ДанныеЗаполненияДляМодификацииЦепочки(ВыпускающийЭтап, Распоряжение, Потребность = Неопределено)
	
	ОбщиеРеквизиты = СтрСоединить(ОбщиеРеквизитыЦепочкиЭтапов(),",");
	ЗначенияЗаполнения = Новый Структура(ОбщиеРеквизиты);
	
	ЗначенияЗаполнения.Вставить("НомерПартииЗапуска");
	ЗначенияЗаполнения.Вставить("НомерЭтапаВПартииЗапуска");
	
	ВыходныеИзделия = УправлениеПроизводством.СтруктураДанныхИзделияЭтапа();
	
	Если ЗначениеЗаполнено(ВыпускающийЭтап) Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	МАКСИМУМ(ЭтапПроизводства22.НомерЭтапаВПартииЗапуска) КАК НомерЭтапаВПартииЗапуска
			|ПОМЕСТИТЬ ВТНомерЭтапаВПартииЗапуска
			|ИЗ
			|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства22
			|ГДЕ
			|	ЭтапПроизводства22.ВыпускающийЭтап = &ВыпускающийЭтап
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	" + ОбщиеРеквизиты + ",
			|
			|	ЭтапПроизводства22.НомерПартииЗапуска                                КАК НомерПартииЗапуска,
			|	ЕСТЬNULL(ВТНомерЭтапаВПартииЗапуска.НомерЭтапаВПартииЗапуска, 0) + 1 КАК НомерЭтапаВПартииЗапуска
			|
			|ИЗ
			|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства22
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНомерЭтапаВПартииЗапуска КАК ВТНомерЭтапаВПартииЗапуска
			|		ПО (ИСТИНА)
			|ГДЕ
			|	ЭтапПроизводства22.Ссылка = &ВыпускающийЭтап
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВыходныеИзделия.*,
			|	ВЫБОР
			|		КОГДА ВыходныеИзделия.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья)
			|				И ВыходныеИзделия.ЭтапПотребитель = ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
			|				И ВыходныеИзделия.Назначение      = ВыходныеИзделия.Ссылка.НазначениеМатериалы
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК СнятьОбособление
			|ИЗ
			|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ВыходныеИзделия
			|ГДЕ
			|	ВыходныеИзделия.Ссылка = &ВыпускающийЭтап");
		
		Запрос.УстановитьПараметр("ВыпускающийЭтап", ВыпускающийЭтап);
		
		РезультатыЗапроса = Запрос.ВыполнитьПакет();
		
		// ЗначенияЗаполнения
		Выборка = РезультатыЗапроса[1].Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ЗначенияЗаполнения, Выборка);
		
		// ВыходныеИзделия
		Выборка = РезультатыЗапроса[2].Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.СнятьОбособление Тогда
				ЗаполнитьЗначенияСвойств(ВыходныеИзделия.Добавить(), Выборка,,"Назначение");
			Иначе
				ЗаполнитьЗначенияСвойств(ВыходныеИзделия.Добавить(), Выборка);
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		// ЗначенияЗаполнения
		ЗначенияЗаполнения.Распоряжение = Распоряжение;
		
		ЗначенияЗаполнения.Спецификация = Справочники.РесурсныеСпецификации.ПустаяСсылка();
		ЗначенияЗаполнения.Запланировано = 1;
		
		ЗначенияЗаполнения.НомерПартииЗапуска = НомераПартийЗапуска(Распоряжение).Получить(Распоряжение);
		ЗначенияЗаполнения.НомерЭтапаВПартииЗапуска = 1;
		
		Если Тип(Потребность) = Тип("Структура") Тогда
			
			КлючСхемы = УправлениеПроизводствомКлиентСервер.КлючСхемыОбособления();
				КлючСхемы.Распоряжение = Потребность.Распоряжение;
				КлючСхемы.Назначение   = Потребность.Назначение;
			СхемаОбособления = Документы.ЗаказНаПроизводство2_2.СхемаОбособленияПоКлючу(КлючСхемы);
			
			ЗаполнитьЗначенияСвойств(ЗначенияЗаполнения, СхемаОбособления);
			
			// ВыходныеИзделия
			НоваяСтрока = ВыходныеИзделия.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Потребность);
			
			ПересчитатьКоличествоУпаковокВСтроке(НоваяСтрока);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ОбщиеРеквизиты", ОбщиеРеквизиты);
	Результат.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	Результат.Вставить("ВыходныеИзделия", ВыходныеИзделия);
	Возврат Результат;
	
КонецФункции

Функция СоздатьИЗаполнитьЭтапПоДаннымПользователя(ЗначенияЗаполнения, ПоследующиеЭтапы, ВыходныеИзделия)
	
	НовыйДокумент = Документы.ЭтапПроизводства2_2.СоздатьДокумент();
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("СпособЗаполнения", "ЗаполнитьПоДаннымПользователя");
	ДанныеЗаполнения.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ДанныеЗаполнения.Вставить("ПоследующиеЭтапы", ПоследующиеЭтапы);
	ДанныеЗаполнения.Вставить("ВыходныеИзделия", ВыходныеИзделия);
	
	НовыйДокумент.Заполнить(ДанныеЗаполнения);
	
	Если Не НовыйДокумент.ПроверитьЗаполнение() Тогда
		НовыйДокумент.Статус = Перечисления.СтатусыЭтаповПроизводства2_2.Формируется;
	КонецЕсли;
	
	НовыйДокумент.ОтключитьЗаполнениеНормативногоГрафикаПриЗаписи();
	НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
	
	Возврат НовыйДокумент.Ссылка;
	
КонецФункции

Процедура ДополнитьДанныеСпецификации(Распоряжения, ДанныеСпецификаций, СхемыОбособления)
	
	КлючСхемыОбособления = УправлениеПроизводствомКлиентСервер.КлючСхемыОбособления();
	КэшированныеЗначения = Новый Соответствие;
	
	ДанныеЦепочек       = ЦепочкиЭтаповДляДополнения(Распоряжения);
	НомераПартийЗапуска = НомераПартийЗапуска(Распоряжения);
	
	Для каждого ДанныеСпецификации Из ДанныеСпецификаций Цикл
		
		ПодготовитьДанныеСпецификацииДляОбработки(ДанныеСпецификации);
		
		КлючСхемыОбособления.Распоряжение = ДанныеСпецификации.Распоряжение;
		КлючСхемыОбособления.Назначение   = ДанныеСпецификации.Назначение;
		
		СхемаОбособления = НайтиСхемуОбособленияПоКлючу(СхемыОбособления, КлючСхемыОбособления);
		
		ВыпускающийЭтап = ПодобратьЦепочкуЭтаповДляДополнения(ДанныеСпецификации, ДанныеЦепочек, СхемаОбособления);
		Если ВыпускающийЭтап = Неопределено Тогда
			ДополнитьЦепочку = Ложь;
		Иначе
			ДополнитьЦепочку = Истина;
		КонецЕсли;
		
		НомерПартииЗапуска = НомераПартийЗапуска.Получить(ДанныеСпецификации.Распоряжение);
		НомераПартийЗапуска.Вставить(ДанныеСпецификации.Распоряжение, НомерПартииЗапуска+1);
		
		НомерЭтапаВПартииЗапуска = 1;
		
		Для каждого ДанныеЭтапа Из ДанныеСпецификации.Этапы Цикл
			
			Если НЕ ДополнитьЦепочку Тогда
				
				Если ДанныеСпецификации.Свойство("ДокументыСозданныеДоГенерацииЭтапов") Тогда
					
					ЭтапПроизводства = ДанныеЭтапа.СсылкаНового;
					Назначение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтапПроизводства, "Назначение");
					Если Не ЗначениеЗаполнено(Назначение) Тогда
						Назначение = Справочники.Назначения.ПолучитьСсылку();
					КонецЕсли;
					НазначенияЭтапа = НазначенияПоСхемеОбособления(СхемаОбособления, Назначение);
					
				Иначе
					
					ЭтапПроизводства = Документы.ЭтапПроизводства2_2.ПолучитьСсылку();
					НазначенияЭтапа = НазначенияПоСхемеОбособления(
						СхемаОбособления,
						Справочники.Назначения.ПолучитьСсылку());
					
				КонецЕсли;
				
				Если УправлениеПроизводствомКлиентСервер.ЭтоВыпускающийЭтап(ДанныеЭтапа) Тогда
					ВыпускающийЭтап = ЭтапПроизводства;
				КонецЕсли;
				
			Иначе
				
				ЭтапПроизводства = ПолучитьЭтапДляДополнения(ДанныеЦепочек, ВыпускающийЭтап, ДанныеЭтапа.Этап);
				НазначенияЭтапа = НазначенияПоСхемеОбособления(
					СхемаОбособления,
					ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтапПроизводства, "Назначение"));
				
			КонецЕсли;
			
			ДанныеЭтапа.ЭтапПроизводства = ЭтапПроизводства;
			ДанныеЭтапа.ЭтоНовый		 = НЕ ДополнитьЦепочку;
			
			ЗаполнитьЗначенияСвойств(ДанныеЭтапа, НазначенияЭтапа); 
			
			ДанныеЭтапа.НомерПартииЗапуска       = НомерПартииЗапуска;
			ДанныеЭтапа.НомерЭтапаВПартииЗапуска = НомерЭтапаВПартииЗапуска;
		
			ДанныеЭтапа.КэшированныеЗначения = СтруктураКэшированныеЗначенияПоДаннымЗаполнения(
																ДанныеСпецификации,
																ДанныеЭтапа,
																КэшированныеЗначения);

			НомерЭтапаВПартииЗапуска = НомерЭтапаВПартииЗапуска + 1;
			
		КонецЦикла;
		
		ДанныеСпецификации.ДополнитьЦепочку = ДополнитьЦепочку;
		ДанныеСпецификации.ВыпускающийЭтап  = ВыпускающийЭтап;
		
	КонецЦикла;
	
	ЗаполнитьПризнакЕстьМаркируемаяПродукция(ДанныеСпецификаций);
	
КонецПроцедуры

Функция ТаблицыСвязейДляФормированияЭтапов(ДанныеСпецификаций)
	
	ТаблицыСвязей = ИнициализироватьТаблицыСвязейДляФормированияЭтапов();
	
	Для каждого ДанныеСпецификации Из ДанныеСпецификаций Цикл
		
		Для каждого ДанныеЭтапа Из ДанныеСпецификации.Этапы Цикл
			
			ЗаполнитьПФПотребность(
				ТаблицыСвязей.ПФПотребность,
				ДанныеСпецификации,
				ДанныеЭтапа);
			
			ЗаполнитьПФСвязи(
				ТаблицыСвязей.ПФСвязи,
				ДанныеСпецификации,
				ДанныеЭтапа);
	
			ЗаполнитьКлючиЭтапов(
				ТаблицыСвязей.КлючиЭтапов,
				ДанныеЭтапа);
				
			ТаблицыСвязей.НазначенияПолуфабрикатов.Вставить(
				ДанныеЭтапа.ЭтапПроизводства,
				ДанныеЭтапа.НазначениеМатериалы);
			
			Если НЕ ДанныеЭтапа.ЭтоНовый Тогда
				
				ТаблицыСвязей.НеНовыеЭтапы.Добавить(
					ДанныеЭтапа.ЭтапПроизводства);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицыСвязей;
	
КонецФункции

Функция ТаблицаЭтапыЦепочки(ЭтапыСпецификации)

	ЭтапыЦепочки = Новый ТаблицаЗначений;
	ЭтапыЦепочки.Колонки.Добавить("НомерЭтапа");
	ЭтапыЦепочки.Колонки.Добавить("Этап");
	
	ЭтапыЦепочки.Индексы.Добавить("НомерЭтапа");
	
	Для каждого ДанныеЭтапа Из ЭтапыСпецификации Цикл
		
		НоваяСтрока = ЭтапыЦепочки.Добавить();
		НоваяСтрока.НомерЭтапа = ДанныеЭтапа.НомерЭтапа;
		НоваяСтрока.Этап = ДанныеЭтапа.ЭтапПроизводства;
		
	КонецЦикла;
	
	Возврат ЭтапыЦепочки;
	
КонецФункции

Процедура ПрименитьИзмененияВТаблицахСвязей(ТаблицыСвязей)
	
	СтруктураПоиска = Новый Структура("ОбеспеченаТекущимЭтапом", Истина);
	Потребности = ТаблицыСвязей.ПФПотребность.НайтиСтроки(СтруктураПоиска);
	
	Для каждого Потребность Из Потребности Цикл
		
		Потребность.Количество = Потребность.Количество - Потребность.КоличествоОбеспеченоТекущимЭтапом;
		Потребность.КоличествоОбеспеченоТекущимЭтапом = 0;
		Потребность.ОбеспеченаТекущимЭтапом = Ложь;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтменитьИзмененияВТаблицахСвязей(ТаблицыСвязей)
	
	ТаблицыСвязей.ПФПотребность.ЗаполнитьЗначения(0, "КоличествоОбеспеченоТекущимЭтапом");
	ТаблицыСвязей.ПФПотребность.ЗаполнитьЗначения(Ложь, "ОбеспеченаТекущимЭтапом");
	
КонецПроцедуры

Функция НомераПартийЗапуска(Распоряжения)
	
	Результат = Новый Соответствие;
	Если ТипЗнч(Распоряжения) = Тип("Массив") Тогда
		Для каждого Ссылка Из Распоряжения Цикл
			Результат.Вставить(Ссылка, 1);
		КонецЦикла;
	Иначе
		Результат.Вставить(Распоряжения, 1);
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.Распоряжение                 КАК Распоряжение,
		|	МАКСИМУМ(Т.НомерПартииЗапуска) КАК НомерПартииЗапуска
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Т
		|ГДЕ
		|	Т.Распоряжение В (&Распоряжения)
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Распоряжение");
		
	Запрос.УстановитьПараметр("Распоряжения", Распоряжения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Результат.Вставить(Выборка.Распоряжение, Выборка.НомерПартииЗапуска + 1);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаблокироватьРегистрыОбеспеченияПотребностей(Материалы) Экспорт
	
	Если НЕ ТранзакцияАктивна() Тогда
		Возврат;
	КонецЕсли;
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СвободныеОстатки");
	ЭлементБлокировки.ИсточникДанных = Материалы;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОбеспечениеЗаказов");
	ЭлементБлокировки.ИсточникДанных = Материалы;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОбеспечениеЗаказовРаботами");
	ЭлементБлокировки.ИсточникДанных = Материалы;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ГрафикОтгрузкиТоваров");
	ЭлементБлокировки.ИсточникДанных = Материалы;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ГрафикПоступленияТоваров");
	ЭлементБлокировки.ИсточникДанных = Материалы;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура ЗаблокироватьЭтап(Ссылка)
	
	Блокировка = Новый БлокировкаДанных;
		
	ЭлементБлокировки = Блокировка.Добавить("Документ.ЭтапПроизводства2_2");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Ссылка", Ссылка);
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура ЗаблокироватьЭтапы(Этапы)
	
	ЗначенияДляБлокировки = Новый ТаблицаЗначений;
	
	ОписаниеТипов = Новый ОписаниеТипов("ДокументСсылка.ЭтапПроизводства2_2");
	ЗначенияДляБлокировки.Колонки.Добавить("Ссылка", ОписаниеТипов);
	
	Для каждого Ссылка Из Этапы Цикл
		ЗначенияДляБлокировки.Добавить().Ссылка = Ссылка;
	КонецЦикла;
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("Документ.ЭтапПроизводства2_2");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
	
	ЭлементБлокировки.ИсточникДанных = ЗначенияДляБлокировки;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "Ссылка");
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура ЗаписатьОшибкуЗаполненияПоОперациям(ДокументСсылка, ПодробноеПредставлениеОшибки)
	
	ИмяСобытия = НСтр("ru = 'Этап производства.Заполнение по производственным операциям'", 
		ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	
	ЗаписьЖурналаРегистрации(
		ИмяСобытия,
		УровеньЖурналаРегистрации.Ошибка,
			ДокументСсылка.Метаданные(),
			ДокументСсылка,
		ПодробноеПредставлениеОшибки);
	
КонецПроцедуры

Функция ИспользоватьДолюСтоимостиВВыходныхИзделиях(Объект) Экспорт
	
	Результат = Ложь;
	
	Если Объект.ВыходныеИзделия.Количество() > 1 Тогда
		
		СтруктураОтбора = Новый Структура("Номенклатура, Характеристика");
		
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, Объект.ВыходныеИзделия[0]);
		
		НайденныеСтроки = Объект.ВыходныеИзделия.НайтиСтроки(СтруктураОтбора);
		
		Результат = НайденныеСтроки.Количество() <> Объект.ВыходныеИзделия.Количество();
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ПересчитатьКоличествоУпаковокВСтроке(ТекущаяСтрока, КэшированныеЗначения = Неопределено)
	
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоУпаковок");
	
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);

КонецПроцедуры

Функция НайтиНомерСтрокиВТабличнойЧасти(Ссылка, ИмяТЧ, Отбор)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(Таблица.НомерСтроки),0) КАК НомерСтроки
	|ИЗ
	|	Документ.ЭтапПроизводства2_2." + ИмяТЧ + " КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	//&Отбор
	|");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ТекстОтбора = "";
	Для каждого КлючЗначение Из Отбор Цикл
		
		ТекстОтбора = 
			ТекстОтбора
			+ " И Таблица."
			+ КлючЗначение.Ключ
			+ " = &"
			+ КлючЗначение.Ключ;
		Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
		
	КонецЦикла;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//&Отбор", ТекстОтбора);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.НомерСтроки;

КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Этапы.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК Этапы
	|ГДЕ
	|	(
	|		Этапы.МаршрутнаяКарта <> ЗНАЧЕНИЕ(Справочник.МаршрутныеКарты.ПустаяСсылка)
	|			И Этапы.КоэффициентМаршрутнойКарты = 0
	|		ИЛИ Этапы.ХозяйственнаяОперация <> Этапы.Распоряжение.ХозяйственнаяОперация
	|		ИЛИ Этапы.НазначениеМатериалы = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Изделия.Ссылка
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Изделия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапыПотребители
	|		ПО Изделия.Назначение = ЭтапыПотребители.Назначение
	|			И Изделия.Ссылка.Распоряжение = ЭтапыПотребители.Распоряжение
	|ГДЕ
	|	Изделия.ЭтапПотребитель = ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
	|	И Изделия.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Изделия.Ссылка
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Изделия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапыПотребители
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.Последователи КАК СвязиЭтапов
	|			ПО ЭтапыПотребители.Ссылка = СвязиЭтапов.Этап
	|		ПО Изделия.Назначение = ЭтапыПотребители.Назначение
	|ГДЕ
	|	Изделия.ЭтапПотребитель = ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
	|	И Изделия.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И СвязиЭтапов.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Изделия.Ссылка
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК Изделия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапыПотребители
	|		ПО Изделия.Назначение = ЭтапыПотребители.Назначение
	|			И Изделия.Ссылка.Распоряжение = ЭтапыПотребители.Распоряжение
	|ГДЕ
	|	Изделия.ЭтапПотребитель = ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
	|	И Изделия.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Обеспечение.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Обеспечение
	|ГДЕ
	|	(Обеспечение.УдалитьСтатусУказанияСерийОтправитель <> 0
	|			ИЛИ Обеспечение.УдалитьСтатусУказанияСерийПолучатель <> 0)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Экономия.Ссылка
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК Экономия
	|ГДЕ
	|	(Экономия.УдалитьСтатусУказанияСерийОтправитель <> 0
	|			ИЛИ Экономия.УдалитьСтатусУказанияСерийПолучатель <> 0)");
	
	Данные = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МассивИменТЧЗаполнитьЭтапПотребитель = Новый Массив;
	МассивИменТЧЗаполнитьЭтапПотребитель.Добавить("ВыходныеИзделия");
	МассивИменТЧЗаполнитьЭтапПотребитель.Добавить("ПобочныеИзделия");
	
	МассивИменТЧОчиститьСтатусСерий = Новый Массив;
	МассивИменТЧОчиститьСтатусСерий.Добавить("ОбеспечениеМатериаламиИРаботами");
	МассивИменТЧОчиститьСтатусСерий.Добавить("ЭкономияМатериалов");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
		Параметры.Очередь, "Документ.ЭтапПроизводства2_2", МенеджерВременныхТаблиц);
	
	Параметры.ОбработкаЗавершена = НЕ Результат.ЕстьДанныеДляОбработки;
	Если Параметры.ОбработкаЗавершена Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбъектыДляОбработки.Ссылка                      КАК Ссылка,
	|	ОбъектыДляОбработки.Ссылка.ВерсияДанных         КАК ВерсияДанных,
	|	ОбъектыДляОбработки.Ссылка.Распоряжение         КАК Распоряжение
	|ИЗ
	|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Изделия.Ссылка.Распоряжение КАК Распоряжение,
	|	Изделия.Назначение КАК Назначение,
	|	ЭтапыПотребители.Ссылка КАК ЭтапПотребитель
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Изделия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапыПотребители
	|		ПО Изделия.Назначение = ЭтапыПотребители.Назначение
	|			И Изделия.Ссылка.Распоряжение = ЭтапыПотребители.Распоряжение
	|ГДЕ
	|	Изделия.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ВТОбъектыДляОбработки КАК Т)
	|	И Изделия.ЭтапПотребитель = ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
	|	И Изделия.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Изделия.Ссылка.Распоряжение,
	|	Изделия.Назначение,
	|	ЭтапыПотребители.Ссылка
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК Изделия
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапыПотребители
	|		ПО Изделия.Назначение = ЭтапыПотребители.Назначение
	|			И Изделия.Ссылка.Распоряжение = ЭтапыПотребители.Распоряжение
	|ГДЕ
	|	Изделия.Ссылка В (ВЫБРАТЬ Т.Ссылка Из ВТОбъектыДляОбработки КАК Т)
	|	И Изделия.ЭтапПотребитель = ЗНАЧЕНИЕ(Документ.ЭтапПроизводства2_2.ПустаяСсылка)
	|	И Изделия.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТОбъектыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	НазначенияПолуфабрикатов = РезультатЗапроса[1].Выгрузить();
	НазначенияПолуфабрикатов.Индексы.Добавить("Распоряжение,Назначение");
	ОтборПолуфабрикат = Новый Структура("Распоряжение,Назначение");
	
	ОперацииРаспоряжений = Новый Соответствие;
	
	Выборка = РезультатЗапроса[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИзменен = Ложь;
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("Документ.ЭтапПроизводства2_2");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			ЭлементБлокировки = Блокировка.Добавить("Документ.ЗаказНаПроизводство2_2");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Распоряжение);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
			Если ДокументОбъект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			Если Не ДокументОбъект.МаршрутнаяКарта.Пустая() 
				И ДокументОбъект.КоэффициентМаршрутнойКарты = 0 Тогда
				
				ДокументОбъект.КоэффициентМаршрутнойКарты = 1;
				ОбъектИзменен = Истина;
				
			КонецЕсли;
			
			ХозяйственнаяОперация = ОперацииРаспоряжений[ДокументОбъект.Распоряжение];
			Если ХозяйственнаяОперация = Неопределено Тогда
				
				ХозяйственнаяОперация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Распоряжение, "ХозяйственнаяОперация");
				ОперацииРаспоряжений.Вставить(ДокументОбъект.Распоряжение, ХозяйственнаяОперация);
				
			КонецЕсли;
			Если ДокументОбъект.ХозяйственнаяОперация <> ХозяйственнаяОперация Тогда
				
				ДокументОбъект.ХозяйственнаяОперация = ХозяйственнаяОперация;
				ОбъектИзменен = Истина;
				
			КонецЕсли;
			
			Если ДокументОбъект.НазначениеМатериалы.Пустая() Тогда
				
				ДокументОбъект.НазначениеМатериалы = ДокументОбъект.Назначение;
				ОбъектИзменен = Истина;
				
			КонецЕсли;
			
			Для каждого ИмяТЧ Из МассивИменТЧЗаполнитьЭтапПотребитель Цикл
				
				Для каждого Строка Из ДокументОбъект[ИмяТЧ] Цикл
					
					Если НЕ Строка.Назначение.Пустая() И Строка.ЭтапПотребитель.Пустая() Тогда
						
						ОтборПолуфабрикат.Распоряжение = ДокументОбъект.Распоряжение;
						ОтборПолуфабрикат.Назначение = Строка.Назначение;
						
						НайденныеСтроки = НазначенияПолуфабрикатов.НайтиСтроки(ОтборПолуфабрикат);
						Если НайденныеСтроки.ВГраница() <> -1 Тогда
							
							Строка.ЭтапПотребитель = НайденныеСтроки[0].ЭтапПотребитель;
							ОбъектИзменен = Истина;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			Для каждого ИмяТЧ Из МассивИменТЧОчиститьСтатусСерий Цикл
				
				Для каждого Строка Из ДокументОбъект[ИмяТЧ] Цикл
					
					Если Строка.УдалитьСтатусУказанияСерийОтправитель <> 0
						ИЛИ Строка.УдалитьСтатусУказанияСерийПолучатель <> 0 Тогда
						
						Строка.УдалитьСтатусУказанияСерийОтправитель = 0;
						Строка.УдалитьСтатусУказанияСерийПолучатель = 0;
						
						ОбъектИзменен = Истина;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			СвязиДоИзменения = ДокументОбъект.Последователи.Выгрузить();
			
			ДокументОбъект.ЗаполнитьПоследователейПоИзделиям();
			
			Если НЕ ОбщегоНазначения.КоллекцииИдентичны(СвязиДоИзменения, ДокументОбъект.Последователи) Тогда
				ОбъектИзменен = Истина;
			КонецЕсли;
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект,,, РежимЗаписиДокумента.Запись);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выборка.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, "Документ.ЭтапПроизводства2_2");
	
КонецПроцедуры

// Перезапись с ответственным чтением РС "График этапов производства".
// Подходит для проведения по регистрам "Обеспечение заказов" и "Движение товаров" версии 2.2.1.
//
Функция ПерезаписатьДвиженияИзОчередиСОтветственнымЧтениемГрафикаЭтаповПроизводства(Очередь, ПолноеИмяРегистра) Экспорт
	
	// 1. Аналог "ВыбратьРегистраторыРегистраДляОбработки". Дополнительно проверяет обработку РС График этапов производства.
	// 1.1. Временная таблица необработанных данных регистра.
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	ДополнительныеПараметрыСозданияВТ = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметрыСозданияВТ.ИмяВременнойТаблицы = "ВТНеЗаблокированныеДокументыРегистраторы";
	ДополнительныеПараметрыСозданияВТ.ВыбиратьПорциями = Ложь;
	
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(Очередь,
	                                                                                      "Документ.ЭтапПроизводства2_2",
	                                                                                      ПолноеИмяРегистра,
	                                                                                      МенеджерВременныхТаблиц,
	                                                                                      ДополнительныеПараметрыСозданияВТ);
	
	// 1.2. Временная таблица необработанных данных РС "График этапов производства".
	ДополнительныеПараметрыСозданияВТ = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметрыСозданияВТ.ИмяВременнойТаблицы = "ВТЗаблокированоГрафикЭтаповПроизводства";
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Очередь,
	                                                                                             "РегистрСведений.ГрафикЭтаповПроизводства2_2",
	                                                                                             МенеджерВременныхТаблиц,
	                                                                                             ДополнительныеПараметрыСозданияВТ);
	
	// Фильтрация регистраторов. Отсечение регистраторов, для которых не обрабтаны данные РС "График этапов производства".
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 500
		|	ТаблицаРегистраторов.Регистратор КАК Регистратор
		|ИЗ
		|	ВТНеЗаблокированныеДокументыРегистраторы КАК ТаблицаРегистраторов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ТаблицаДокумента
		|		ПО ТаблицаРегистраторов.Регистратор = ТаблицаДокумента.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоГрафикЭтаповПроизводства КАК ВТЗаблокированоГрафикЭтаповПроизводства
		|		ПО ТаблицаРегистраторов.Регистратор = ВТЗаблокированоГрафикЭтаповПроизводства.ЭтапПроизводства
		|		 И ТаблицаДокумента.Распоряжение = ВТЗаблокированоГрафикЭтаповПроизводства.Распоряжение
		|		 И &СтатусГрафика = ВТЗаблокированоГрафикЭтаповПроизводства.СтатусГрафика
		|
		|ГДЕ
		|	ВТЗаблокированоГрафикЭтаповПроизводства.Распоряжение ЕСТЬ NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТаблицаДокумента.Дата УБЫВ";
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СтатусГрафика", РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	ВыборкаПоРегистраторам = Запрос.Выполнить().Выбрать();
	
	// 2. Аналог "ПерезаписатьДвиженияИзОчереди". Дополнительно устанавливает блокировку РС График этапов производства.
	ИмяПоляРегистратор = "Регистратор";
	МенеджерДокумента = Документы.ЭтапПроизводства2_2;
	МенеджерРегистра = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяРегистра);
	ИмяРегистра = СтрРазделить(ПолноеИмяРегистра,".",Ложь)[1];
	Пока ВыборкаПоРегистраторам.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			// Устанавливаем управляемую блокировку, чтобы провести ответственное чтение объекта
			ЭлементБлокировки = Блокировка.Добавить("Документ.ЭтапПроизводства2_2");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПоРегистраторам[ИмяПоляРегистратор]);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			// Устанавливаем управляемую блокировку, чтобы провести ответственное чтение регистра "График этапов производства"
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ГрафикЭтаповПроизводства2_2");
			ЭлементБлокировки.УстановитьЗначение("ЭтапПроизводства", ВыборкаПоРегистраторам[ИмяПоляРегистратор]);
			ЭлементБлокировки.УстановитьЗначение("СтатусГрафика",    РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			Блокировка.Заблокировать();
			
			НаборЗаписей = МенеджерРегистра.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор[ИмяПоляРегистратор].Установить(ВыборкаПоРегистраторам[ИмяПоляРегистратор]);
			
			ЗаписатьДвижения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаПоРегистраторам[ИмяПоляРегистратор], "Проведен");
			
			Если ЗаписатьДвижения Тогда
				
				ДопСвойства = Новый Структура;
				ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(ВыборкаПоРегистраторам[ИмяПоляРегистратор], ДопСвойства);
				МенеджерДокумента.ИнициализироватьДанныеДокумента(ВыборкаПоРегистраторам[ИмяПоляРегистратор], ДопСвойства, ИмяРегистра);
			
				НаборЗаписей.Загрузить(ДопСвойства.ТаблицыДляДвижений["Таблица" + ИмяРегистра]);
				
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось перезаписать движения в регистр %ИмяРегистра% по документу %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ВыборкаПоРегистраторам[ИмяПоляРегистратор]);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистра%", ПолноеИмяРегистра);
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				ВыборкаПоРегистраторам[ИмяПоляРегистратор].Метаданные(), ВыборкаПоРегистраторам[ИмяПоляРегистратор], ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
		
	ВсеСделано = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Очередь, ПолноеИмяРегистра);
	Возврат ВсеСделано;
	
КонецФункции

// Возвращает текст запроса движений по распоряжению - Заказ на производство.
Функция ТекстЗапросаТаблицаДвижениеТоваровПоЗаказуНаПроизводство() Экспорт
	
	ТекстЗапроса =
	// Закрытие графика поступления выходных изделий по заказу на производство.
	// Текст запроса должен быть синхронным тексту запроса графика поступления выходных изделий по этапу, отличие только в знаке движения и Распоряжении.
	"ВЫБРАТЬ
	|	&Распоряжение                  КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель      КАК Склад,
	|	ТабличнаяЧасть.Номенклатура    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика  КАК Характеристика,
	|	ТабличнаяЧасть.Назначение      КАК Назначение,
	|	-ТабличнаяЧасть.Количество     КАК ПланируемоеПоступлениеПодЗаказ,
	|	-ТабличнаяЧасть.Количество     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	
	|	&Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТабличнаяЧасть.Ссылка.Проведен
	|	И НЕ ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Закрытие графика поступления побочных изделий по заказу на производство.
	// Текст запроса должен быть синхронным тексту запроса графика поступления побочных изделий по этапу, отличие только в знаке движения и Распоряжении.
	|ВЫБРАТЬ
	|	&Распоряжение                  КАК Распоряжение,
	|	ТабличнаяЧасть.Получатель      КАК Склад,
	|	ТабличнаяЧасть.Номенклатура    КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика  КАК Характеристика,
	|	ТабличнаяЧасть.Назначение      КАК Назначение,
	|	0,
	|	-ТабличнаяЧасть.Количество     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
	|
	|ГДЕ
	|	
	|	&Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Сформирован),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)) // фактически эти движения появляются начиная со статуса ""Начат"", до этого момента табличная часть ""Экономия материалов пуста"".
	|	
	|	И НЕ ТабличнаяЧасть.СписатьНаРасходы
	|
	|	И ТабличнаяЧасть.Номенклатура.ТипНоменклатуры В(
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТабличнаяЧасть.Ссылка.Проведен
	|	И НЕ ТабличнаяЧасть.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)";
	
	СинонимТаблицыДокумента = "ТабличнаяЧасть";
	ПереопределениеРасчетаПараметров = ПереопределениеРасчетаПараметров(СинонимТаблицыДокумента + ".Ссылка");
	ПереопределениеРасчетаПараметров.Вставить("РабочийГрафик", РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Статус",                "ТабличнаяЧасть.Ссылка.Статус");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПроизводствоНаСтороне", "ТабличнаяЧасть.Ссылка.ПроизводствоНаСтороне");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Распоряжение",          "ТабличнаяЧасть.Ссылка.Распоряжение");
	Для Каждого Параметр из ПереопределениеРасчетаПараметров Цикл
		
		ТекстЗамены = ПереопределениеРасчетаПараметров[Параметр.Ключ];
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&" + Параметр.Ключ, ТекстЗамены);
		
	КонецЦикла;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли