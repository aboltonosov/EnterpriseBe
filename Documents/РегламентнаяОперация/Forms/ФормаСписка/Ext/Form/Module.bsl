
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

	// ВводНаОсновании
	ВводНаОсновании.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюСоздатьНаОсновании);
	// Конец ВводНаОсновании

	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты
	

	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список.Дата", Элементы.Дата.Имя);


КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	Если Параметры.Свойство("Отбор") Тогда
		ОтборКомпоновки = Настройки.Элементы.Найти(Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
		ОтборКомпоновки.Элементы.Очистить();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// ВводНаОсновании
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец ВводНаОсновании

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец МенюОтчеты

&НаКлиенте
Процедура СоздатьРасчетНалогаНаИмущество(Команда)
	СоздатьРеглОперацию("РасчетНалогаНаИмущество");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРасчетТранспортногоНалога(Команда)
	СоздатьРеглОперацию("РасчетТранспортногоНалога");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРасчетТорговогоСбора(Команда)
	СоздатьРеглОперацию("РасчетТорговогоСбора");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРасчетЗемельногоНалога(Команда)
	СоздатьРеглОперацию("РасчетЗемельногоНалога");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРасчетДолейСписанияКосвенныхРасходов(Команда)
	СоздатьРеглОперацию("РасчетДолейСписанияКосвенныхРасходов");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСписаниеКосвенныхРасходов(Команда)
	СоздатьРеглОперацию("СписаниеКосвенныхРасходов");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПереоценкуВалютныхСредств(Команда)
	СоздатьРеглОперацию("ПереоценкаВалютныхСредств");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФормированиеРезервовПоСомнительнымДолгам(Команда)
	СоздатьРеглОперацию("ФормированиеРезервовПоСомнительнымДолгам");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРасчетНалогаНаПрибыль(Команда)
	СоздатьРеглОперацию("РасчетНалогаНаПрибыль");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФормированиеФинансовогоРезультата(Команда)
	СоздатьРеглОперацию("ФормированиеФинансовогоРезультата");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПризнаниеРасходовПриУСН(Команда)
	СоздатьРеглОперацию("ПризнаниеРасходовПриУСН");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРасчетНалогаУСН(Команда)
	СоздатьРеглОперацию("РасчетНалогаУСН");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗакрытиеГода(Команда)
	СоздатьРеглОперацию("ЗакрытиеГода");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПризнаниеВНУЛизинговыхПлатежей(Команда)
	
	СоздатьРеглОперацию("ПризнаниеВНУЛизинговыхПлатежей");
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СоздатьРеглОперацию(ТипОперации)
	
	СтруктураОснование = Новый Структура("ТипОперации", ПредопределенноеЗначение("Перечисление.ТипыРегламентныхОпераций." + ТипОперации));
	СтруктураПараметры = Новый Структура("Основание", СтруктураОснование);
	
	ОткрытьФорму("Документ.РегламентнаяОперация.ФормаОбъекта", СтруктураПараметры, Элементы.Список);
	
КонецПроцедуры

#КонецОбласти
