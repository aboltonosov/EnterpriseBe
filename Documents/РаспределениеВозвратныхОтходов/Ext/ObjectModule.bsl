#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.РаспределениеВозвратныхОтходов);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, ПараметрыУказанияСерий);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		ПараметрыАналитики = Новый Структура("Номенклатура, Характеристика, Серия, Склад, Назначение");
		ЗаполнитьЗначенияСвойств(ПараметрыАналитики, ЭтотОбъект);
		ПараметрыАналитики.Склад = Подразделение;
		АналитикаУчетаНоменклатуры = РегистрыСведений.АналитикаУчетаНоменклатуры.ЗначениеКлючаАналитики(ПараметрыАналитики);
		
		ПараметрыАналитики.Склад = Получатель;
		РегистрыСведений.АналитикаУчетаНоменклатуры.ЗначениеКлючаАналитики(ПараметрыАналитики);
		
		УстановитьПривилегированныйРежим(Ложь);
		
		ЗаполнитьВидыЗапасов(Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли; 
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	МассивВсехРеквизитов = Новый Массив;
	МассивРеквизитовОперации = Новый Массив;
	
	ЗатратыСервер.ПроверитьИспользованиеПартионногоУчета22(ЭтотОбъект, Дата, Отказ);
	
	#Область ПроверкаХарактеристик
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры")
		И Не Справочники.Номенклатура.ХарактеристикиИспользуются(Номенклатура) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Характеристика");
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПроверкаСерий

	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.РаспределениеВозвратныхОтходов);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,
												ПараметрыУказанияСерий,
												Отказ,
												МассивНепроверяемыхРеквизитов);
	
	#КонецОбласти

	#Область ПроверкаКоличеств
	
	Если Не Количество = КоличествоПоПравилу + ПартииПроизводства.Итог("Количество") Тогда
		
		ТекстСообщения = НСтр("ru = 'Не совпадает количество выпущенных и распределенных возвратных отходов.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Количество", "Объект", Отказ);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПроверкаПравил
	
	Если КоличествоПоПравилу = 0 Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПравилоРаспределения");
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяКалькуляции");
	КонецЕсли;
	
	Если Не КоличествоПоПравилу = 0 И НЕ ЗначениеЗаполнено(ПравилоРаспределения) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяКалькуляции");
	КонецЕсли;
	
	#КонецОбласти
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если Не Отказ И ОбщегоНазначенияУТ.ПроверитьЗаполнениеРеквизитовОбъекта(ЭтотОбъект, ПроверяемыеРеквизиты) Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// Инициализация данных документа
	Документы.РаспределениеВозвратныхОтходов.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	// Подготовка наборов записей
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ЗапасыСервер.ОтразитьДатыПоступленияТоваровОрганизаций(ДополнительныеСвойства, Отказ);
	СкладыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	ЗатратыСервер.ОтразитьМатериалыИРаботыВПроизводстве(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьСвободныеОстатки(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьСебестоимостьТоваров(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Дата = ТекущаяДатаСеанса();
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Валюта = Константы.ВалютаПлановойСебестоимостиПродукции.Получить();
	ВидЦены = Справочники.ВидыЦен.ВидЦеныПлановойСтоимостиТМЦ(ВидЦены);
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;

	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеВидовЗапасов

Процедура ЗаполнитьВидыЗапасов(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ГруппыФинансовогоУчетаНоменклатуры	= ?(ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"),
												Номенклатура.ГруппаФинансовогоУчета,
												Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка());
	
	ТипЗапасов							= ?(ЗначениеЗаполнено(Назначение.Партнер),
												Перечисления.ТипыЗапасов.ПродукцияДавальца,
												?(Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа,
													Перечисления.ТипыЗапасов.Услуга,
													Перечисления.ТипыЗапасов.Товар));
	
	РеквизитыДокумента = Новый Структура("Комитент, Соглашение, Валюта, НалогообложениеНДС, НалогообложениеОрганизации, Поставщик, Подразделение, Менеджер, Сделка");
	РеквизитыДокумента.Вставить("Организация",						Организация);
	РеквизитыДокумента.Вставить("ХозяйственнаяОперация",			Перечисления.ХозяйственныеОперации.ВыпускПродукции);
	РеквизитыДокумента.Вставить("ОбособленныйУчетТоваровПоСделке",	Ложь);
	РеквизитыДокумента.Вставить("ДеятельностьОблагаетсяЕНВД",		Ложь);
	РеквизитыДокумента.Вставить("ВидЗапасов",						ВидЗапасов);
	РеквизитыДокумента.Вставить("ТипЗапасов",						ТипЗапасов);
	РеквизитыДокумента.Вставить("Контрагент",						Назначение.Договор.Контрагент);
	РеквизитыДокумента.Вставить("Договор",							Назначение.Договор);
	РеквизитыДокумента.Вставить("Партнер",							Назначение.Партнер);
	РеквизитыДокумента.Вставить("Поставщик",						Назначение.Партнер);
	РеквизитыДокумента.Вставить("ГруппаФинансовогоУчета",			ГруппыФинансовогоУчетаНоменклатуры);
	РеквизитыДокумента.Вставить("ВариантОбособленногоУчетаТоваров",	Перечисления.ВариантыОбособленногоУчетаТоваров.НеВедется);
	
	ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(Организация, РеквизитыДокумента.ХозяйственнаяОперация, РеквизитыДокумента);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
