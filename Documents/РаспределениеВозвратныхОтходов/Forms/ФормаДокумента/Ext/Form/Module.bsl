&НаКлиенте
Перем КэшированныеЗначения;


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	ВидЦенПлановойСтоимости = Справочники.ВидыЦен.ВидЦеныПлановойСтоимостиТМЦ();
	ПартионныйУчетВключен = УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВключен(НачалоМесяца(Объект.Дата));
	АналитическийУчетПоГруппамПродукции = ПолучитьФункциональнуюОпцию("АналитическийУчетПоГруппамПродукции");
	ВедетсяУчетСебестоимостиПоВидамЗапасов = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов");
	
	ЗаполнитьСпискиОтбора();
	
	УстановитьТекстИВидимостьОтбораБазыРаспределения();
	УстановитьВидимостьПоОтборуПоГруппамПродукции();
	УстановитьТекстНадписиОтбораПоГруппамПродукции();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПриЧтенииСозданииНаСервере();
		
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий);
		УстановитьДоступностьСерииВШапке();
		
	КонецЕсли;
	
	Если ТекущийВариантИнтерфейсаКлиентскогоПриложения() = ВариантИнтерфейсаКлиентскогоПриложения.Версия8_2 Тогда
		Элементы.ГруппаИтоги.ЦветФона = Новый Цвет();
	КонецЕсли;
	
	Если Параметры.Свойство("ЕстьОшибки") И Параметры.ЕстьОшибки Тогда
		Для Каждого ТекОшибка Из Параметры.МассивОшибок Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекОшибка.Текст, ТекОшибка.КлючДанных, ТекОшибка.Поле, ТекОшибка.ПутьКДанным);
		КонецЦикла;
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ОтложеннаяИнициализация", Истина);
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ВнешниеОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВнешниеОбработки
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// СтандартныеПодсистемы.ВводНаОсновании
	ВводНаОсновании.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюСоздатьНаОсновании);
	// Конец СтандартныеПодсистемы.ВводНаОсновании
	
	// СтандартныеПодсистемы.МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец СтандартныеПодсистемы.МенюОтчеты
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПриЧтенииСозданииНаСервере();
	
	СобытияФорм.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "ОбщаяФорма.ПодборПартийПроизводства" Тогда
		
		Модифицированность = Истина;
		ПолучитьПартииПроизводстваИзХранилища(ВыбранноеЗначение.АдресВХранилище);
		
		ОбновитьИтоги();
		
	ИначеЕсли НоменклатураКлиент.ЭтоУказаниеСерий(ИсточникВыбора) Тогда
		
		НоменклатураКлиент.ОбработатьУказаниеСерии(ЭтаФорма, ПараметрыУказанияСерий, ВыбранноеЗначение);
		ОбновитьКешированныеЗначенияШапкиДляУчетаСерий();
		
		ОбновитьИтоги();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	СобытияФормКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьСлужебныеРеквизитыПоНоменклатуре();
	ЗатратыСервер.ЗаполнитьХарактеристикиИзделийПоПартииПроизводства(Объект.ПартииПроизводства);
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если Не Отказ Тогда
		ТекущийОбъект.ОтборПоГруппамПродукции.Очистить();
		Если ИспользоватьОтборПоГруппамПродукции Тогда
			Для Каждого Элемент Из ОтборПоГруппамПродукции Цикл 
				НоваяСтрока = ТекущийОбъект.ОтборПоГруппамПродукции.Добавить();
				НоваяСтрока.ГруппаПродукции = Элемент.Значение;
			КонецЦикла;
		КонецЕсли;
		ТекущийОбъект.ОтборПоМатериалам.Очистить();
		Если Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов
			ИЛИ Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов
			ИЛИ Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов Тогда
			Для Каждого Элемент Из ОтборПоМатериалам Цикл 
				НоваяСтрока = ТекущийОбъект.ОтборПоМатериалам.Добавить();
				НоваяСтрока.Материал = Элемент.Значение;
			КонецЦикла;
		КонецЕсли;
		ТекущийОбъект.ОтборПоВидамРабот.Очистить();
		Если Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов Тогда
			Для Каждого Элемент Из ОтборПоВидамРабот Цикл 
				НоваяСтрока = ТекущийОбъект.ОтборПоВидамРабот.Добавить();
				НоваяСтрока.ВидРабот = Элемент.Значение;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ОбновитьПриОткрытии Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	УстановитьВидимостьНастройкиПравилаРаспределения();
	
	ОграничениеТипаПолучатель();
	УстановитьОформлениеХарактеристики();
	
	ОбновитьКешированныеЗначенияШапкиДляУчетаСерий();
	
	ОбновитьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СобытияФормКлиент.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	Оповестить("РаспределениеВозвратныхОтходов_Запись");
	
	УстановитьОформлениеХарактеристики();
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПроверитьНаличиеДанныхДляБазыРаспределения(Отказ);
	
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	
	Если ОтборПоМатериалам.Количество() = 0 И (Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов
		Или Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов
		Или Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов) Тогда
		
		ТекстСообщения = НСтр("ru = 'Не указаны материалы для базы распределения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,,,Отказ);
		
	ИначеЕсли ОтборПоВидамРабот.Количество() = 0 И (Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов) Тогда
		
		ТекстСообщения = НСтр("ru = 'Не указаны виды работ для базы распределения'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,,,Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	// СтандартныеПодсистемы.Свойства
	Если ТекущаяСтраница.Имя = "ГруппаДополнительно"
		И Не ЭтотОбъект.ПараметрыСвойств.ВыполненаОтложеннаяИнициализация Тогда
		
		СвойстваВыполнитьОтложеннуюИнициализацию();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовШапкиФормыВкладкаОсновное

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ДатаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	
	ПодготовитьЗаполнитьУстановитьВидимостьСерий();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = Новый Структура("Номенклатура, Характеристика, Серия, СтатусУказанияСерий,
									|ХарактеристикиИспользуются, ТипНоменклатуры, ВидЦены");
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Объект);
	
	СтруктураДействий = Новый Структура;
											
	ДобавитьВСтруктуруДействияПриИзмененииНоменклатуры(ЭтаФорма, СтруктураДействий);
	ДобавитьВСтруктуруДействияПриИзмененииКоличества(СтруктураДействий);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ЗаполнитьЗначенияСвойств(Объект, ТекущаяСтрока);
	
	ТипНоменклатуры				= ТекущаяСтрока.ТипНоменклатуры;
	ХарактеристикиИспользуются	= ТекущаяСтрока.ХарактеристикиИспользуются;
	
	УстановитьОформлениеХарактеристики();
	
	НоменклатураПриИзмененииСервер(КэшированныеЗначения);
	
	ОбновитьКешированныеЗначенияШапкиДляУчетаСерий();
	
	ОграничениеТипаПолучатель();
	
КонецПроцедуры

&НаСервере
Процедура НоменклатураПриИзмененииСервер(КэшированныеЗначения)
	
	УстановитьЗаголовокПолучателя();
	ПолучательПоУмолчаниюСервер();
	
	ПодготовитьЗаполнитьУстановитьВидимостьСерий();
	
	УстановитьЗаголовокКоличества();
	
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикаПриИзменении(Элемент)
	
	ТекущаяСтрока = Новый Структура("Номенклатура, Характеристика, Серия");
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Объект);

	СтруктураДействий = Новый Структура;
	
	СтруктураДействий.Вставить("ХарактеристикаПриИзмененииПереопределяемый", Новый Структура("ИмяФормы, ИмяТабличнойЧасти",
		ЭтаФорма.ИмяФормы, "Объект"));

	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	ЗаполнитьЗначенияСвойств(Объект, ТекущаяСтрока);
	УстановитьОформлениеХарактеристики();
	
	Если НоменклатураКлиент.НеобходимоОбновитьСтатусСерийВШапке(Объект, КэшированныеЗначения, ПараметрыУказанияСерий) Тогда
		ЗаполнитьСтатусыУказанияСерийПриИзмененииТовараВШапке(КэшированныеЗначения);
		ОбновитьКешированныеЗначенияШапкиДляУчетаСерий();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СерияПриИзменении(Элемент)
	
	ВыбранноеЗначение = НоменклатураКлиентСервер.ВыбраннаяСерия();
	ВыбранноеЗначение.Значение = Объект.Серия;
	
	НоменклатураКлиент.ОбработатьУказаниеСерии(ЭтаФорма, ПараметрыУказанияСерий, ВыбранноеЗначение);
	ОбновитьКешированныеЗначенияШапкиДляУчетаСерий();
	
КонецПроцедуры

&НаКлиенте
Процедура СерияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьПодборСерий(Элемент.ТекстРедактирования);
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	
	СтруктураДействий = Новый Структура;
	
	ДобавитьВСтруктуруДействияПриИзмененииКоличества(СтруктураДействий);
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(Объект, СтруктураДействий, КэшированныеЗначения);
	
	Если НоменклатураКлиент.НеобходимоОбновитьСтатусСерийВШапке(Объект, КэшированныеЗначения, ПараметрыУказанияСерий) Тогда
		ЗаполнитьСтатусыУказанияСерийПриИзмененииТовараВШапке(КэшированныеЗначения);
		ОбновитьКешированныеЗначенияШапкиДляУчетаСерий();
	КонецЕсли;
	
	ОбновитьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	
	СтруктураДействий = Новый Структура;
	
	СтруктураДействий.Вставить("ПересчитатьСумму", "Количество");
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(Объект, СтруктураДействий, КэшированныеЗначения);
	
	ОбновитьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	Если Не ПодразделениеДоИзменения = Объект.Подразделение Тогда
		ПодразделениеПриИзмененииСервер();
		ОбновитьКешированныеЗначенияШапкиДляУчетаСерий();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПодразделениеПриИзмененииСервер()
	
	ПолучательПоУмолчаниюСервер();
	
	ПодготовитьЗаполнитьУстановитьВидимостьСерий();
	
	Объект.Назначение = Неопределено;
	ПодразделениеДоИзменения = Объект.Подразделение;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучательПриИзменении(Элемент)
	
	ПолучательПриИзмененииСервер();
	
	ОбновитьКешированныеЗначенияШапкиДляУчетаСерий();
	
КонецПроцедуры

&НаСервере
Процедура ПолучательПриИзмененииСервер()
	
	ПодготовитьЗаполнитьУстановитьВидимостьСерий();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусУказанияСерийНажатие(Элемент, СтандартнаяОбработка)
	
	ПараметрыФормыУказанияСерий = ПараметрыФормыУказанияСерий();
	ЗначениеВозврата = Неопределено;
	
	ДополнительныеПараметры = Новый Структура("ПараметрыФормыУказанияСерий", ПараметрыФормыУказанияСерий);
	ОписаниеОповещения = Новый ОписаниеОповещения("СтатусУказанияСерийНажатиеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму(ПараметрыФормыУказанияСерий.ИмяФормы, ПараметрыФормыУказанияСерий, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусУказанияСерийНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПараметрыФормыУказанияСерий = ДополнительныеПараметры.ПараметрыФормыУказанияСерий;
	ЗначениеВозврата = Результат;
	
	Если ЗначениеВозврата <> Неопределено Тогда
		ОбработатьУказаниеСерийСервер(ПараметрыФормыУказанияСерий);
	КонецЕсли;
	
	ОбновитьИтоги();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормыВкладкаПоПравилу

&НаКлиенте
Процедура КоличествоПоПравилуПриИзменении(Элемент)
	
	ОбновитьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилоРаспределенияПриИзменении(Элемент)
	
	УстановитьВидимостьНастройкиПравилаРаспределения();
	ЗаполнитьНастройкиПоУмолчаниюИзПравилаРаспределения(Объект.ПравилоРаспределения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилоРаспределенияОчистка(Элемент, СтандартнаяОбработка)
	
	УстановитьВидимостьНастройкиПравилаРаспределения();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоГруппамПродукцииПриИзменении(Элемент)
	
	УстановитьВидимостьПоОтборуПоГруппамПродукции();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьОтборПоГруппамПродукцииНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОтбора = Новый Структура();
	ПараметрыОтбора.Вставить("МассивГруппПродукции", ОтборПоГруппамПродукции.ВыгрузитьЗначения());
	РезультатОтбора = Неопределено;

	ОткрытьФорму("Справочник.ПравилаРаспределенияРасходов.Форма.ФормаОтбора",
			ПараметрыОтбора,
			ЭтаФорма,,,, 
			Новый ОписаниеОповещения("НадписьОтборНажатиеЗавершение", ЭтотОбъект, "ОтборПоГруппамПродукции"), 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьОтборБазыРаспределенияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыОтбора = Новый Структура();
	ДопПараметрОтбора = "";
	Если Объект.БазаРаспределения = ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов")
		ИЛИ Объект.БазаРаспределения = ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов")
		ИЛИ Объект.БазаРаспределения = ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов") Тогда
		ПараметрыОтбора.Вставить("МассивМатериалов", ОтборПоМатериалам.ВыгрузитьЗначения());
		ДопПараметрОтбора = "ОтборПоМатериалам";
	ИначеЕсли Объект.БазаРаспределения = ПредопределенноеЗначение("Перечисление.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов") Тогда
		ПараметрыОтбора.Вставить("МассивВидовРабот", ОтборПоВидамРабот.ВыгрузитьЗначения());
		ДопПараметрОтбора = "ОтборПоВидамРабот";
	КонецЕсли;
	РезультатОтбора = Неопределено;

	ОткрытьФорму("Справочник.ПравилаРаспределенияРасходов.Форма.ФормаОтбора",
			ПараметрыОтбора,
			ЭтаФорма,,,, 
			Новый ОписаниеОповещения("НадписьОтборНажатиеЗавершение", ЭтотОбъект, ДопПараметрОтбора), 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормыВкладкаПоПартиямПроизводства

&НаКлиенте
Процедура ПартииПроизводстваПриИзменении(Элемент)
	
	ОбновитьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура ПартииПроизводстваПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ОткрытьФормуПодборПоПартиям();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормыВкладкаДополнительно

&НаКлиенте
Процедура ВыпускПодДеятельностьПриИзменении(Элемент)
	ВыпускПодДеятельностьПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыпускПодДеятельностьПриИзмененииНаСервере()
	
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЦеныПриИзменении(Элемент)
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьЦенуПродажи", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруЗаполненияЦеныВСтрокеТЧ(Объект));
	СтруктураДействий.Вставить("ПересчитатьСумму", "Количество");
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(Объект, СтруктураДействий, КэшированныеЗначения);
	
	ОбновитьИтоги();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.МенюОтчеты

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств(Команда)
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Провести(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура УказатьСерииВШапке(Команда)
	ОткрытьПодборСерий();
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Записать(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтатьиКалькуляции(Команда)
	
	ЗаполнитьСтатьиКалькуляцииВТабличнойЧасти("ПартииПроизводства");
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиНастройкиВМодельФормированияСтоимости(Команда)
	
	ПеренестиНастройкиВМодельФормированияСтоимостиСервер();
	Оповестить("МодельФормированияСтоимости_Изменение");
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ПодразделениеДоИзменения = Объект.Подразделение;
	ЗаполнитьСтатьюКалькуляцииПоУмолчанию();
	
	Элементы.ГруппаОтборПоВидамПродукции.Видимость = ПолучитьФункциональнуюОпцию("АналитическийУчетПоГруппамПродукции");
	
	ЗатратыСервер.НастроитьПараметрыВыбораПравилРаспределения(
		Объект.Подразделение,
		Неопределено,
		Элементы.ПравилоРаспределения,
		Перечисления.НазначениеПравилРаспределенияРасходов.РаспределениеМатериаловИРабот);
	
	ЗаполнитьСлужебныеРеквизитыПоНоменклатуре();
	ЗатратыСервер.ЗаполнитьХарактеристикиИзделийПоПартииПроизводства(Объект.ПартииПроизводства);
	
	ПараметрыУказанияСерий();
	НастроитьЭлементыСерий();
	
	УстановитьЗаголовокКоличества();
	
	УчетНДСУТ.ЗаполнитьСписокВыбораДеятельностиНДСПотребления(
		Элементы.ВыпускПодДеятельность, 
		Объект.Организация,
		Объект.Дата);

КонецПроцедуры

&НаКлиенте
Процедура ОграничениеТипаПолучатель()

	Если ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Работа") Тогда
		ОграничениеТипаПолучатель = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия");
	Иначе
		ОграничениеТипаПолучатель = Новый ОписаниеТипов("СправочникСсылка.Склады");
	КонецЕсли; 
	
	Элементы.Получатель.ОграничениеТипа = ОграничениеТипаПолучатель;
	Объект.Получатель = Элементы.Получатель.ОграничениеТипа.ПривестиЗначение(Объект.Получатель);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИтоги()
	
	КоличествоПоПартиям	= Объект.ПартииПроизводства.Итог("Количество");
	КоличествоПоПравилу	= Объект.КоличествоПоПравилу;
	
	СуммаВручнуюПоПартиям = Объект.Цена * КоличествоПоПартиям;
	СуммаПоПравилам = Объект.Цена * КоличествоПоПравилу;
	
КонецПроцедуры

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.Свойства
&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВводНаОсновании

#КонецОбласти

#Область Оформление

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// ПравилоРаспределение, СтатьяКалькуляции - отметка незаполненного
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПравилоРаспределения.Имя);
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СтатьяКалькуляции.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.КоличествоПоПравилу");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;

	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОформлениеХарактеристики()
	
	ПолеХарактеристика = Элементы.Характеристика;
	
	Если ХарактеристикиИспользуются Тогда
		ПолеХарактеристика.ПодсказкаВвода = "";
		ПолеХарактеристика.Доступность = Истина;
		ПолеХарактеристика.АвтоОтметкаНезаполненного = Истина;
	Иначе
		Объект.Характеристика = Неопределено;
		ПолеХарактеристика.ПодсказкаВвода = НСтр("ru = '<характеристики не используются>'");
		ПолеХарактеристика.Доступность = Ложь;
		ПолеХарактеристика.АвтоОтметкаНезаполненного = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокКоличества()
	
	Если ЗначениеЗаполнено(Объект.Номенклатура.ЕдиницаИзмерения.Наименование) Тогда
		ТекстЗаголовка = НСтр("ru = 'Количество%1'");
		ПараметрСтроки = " (" + Объект.Номенклатура.ЕдиницаИзмерения.Наименование + ")";
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, ПараметрСтроки);
		Элементы.ПартииПроизводстваКоличество.Заголовок = ТекстЗаголовка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьНастройкиПравилаРаспределения()
	
	Если ЗначениеЗаполнено(Объект.ПравилоРаспределения) Тогда
		Элементы.ПеренестиНастройкиВПравило.Видимость = Истина;
	Иначе
		Элементы.ПеренестиНастройкиВПравило.Видимость = Ложь;
	КонецЕсли;
	УстановитьТекстИВидимостьОтбораБазыРаспределения();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПоОтборуПоГруппамПродукции()
	
	Элементы.НадписьОтборПоГруппамПродукции.Видимость = ИспользоватьОтборПоГруппамПродукции;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокПолучателя()
	
	Если ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа Тогда
		Элементы.Получатель.Заголовок = НСтр("ru = 'Подразделение-получатель'");
	Иначе
		Элементы.Получатель.Заголовок = НСтр("ru = 'Кладовая'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекстНадписиОтбораПоГруппамПродукции()
	
	ТекстНадписи = "";
	Для Каждого Элемент Из ОтборПоГруппамПродукции Цикл 
		ТекстНадписи = ТекстНадписи + ?(ТекстНадписи = "", "", "; ") + СокрЛП(Элемент.Значение);
	КонецЦикла;
	Если ТекстНадписи = "" Тогда
		ТекстНадписи = НСтр("ru = 'Указать группы (виды) продукции'");
	КонецЕсли;
	
	НадписьОтборПоГруппамПродукции = ТекстНадписи;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекстИВидимостьОтбораБазыРаспределения()

	Если Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов
		ИЛИ Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов
		ИЛИ Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов Тогда
		Элементы.НадписьОтборБазыРаспределения.Видимость = Истина;
		УстановитьТекстНадписиОтбораПоМатериалам();
	ИначеЕсли Объект.БазаРаспределения = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов Тогда
		Элементы.НадписьОтборБазыРаспределения.Видимость = Истина;
		УстановитьТекстНадписиОтбораПоВидамРабот();
	Иначе
		Элементы.НадписьОтборБазыРаспределения.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекстНадписиОтбораПоМатериалам()
	
	ТекстНадписи = "";
	Для Каждого Элемент Из ОтборПоМатериалам Цикл 
		ТекстНадписи = ТекстНадписи + ?(ТекстНадписи = "", "", "; ") + СокрЛП(Элемент.Значение);
	КонецЦикла;
	Если ТекстНадписи = "" Тогда
		ТекстНадписи = НСтр("ru = 'Указать материалы'");
	КонецЕсли;
	
	НадписьОтборБазыРаспределения = ТекстНадписи;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекстНадписиОтбораПоВидамРабот()
	
	ТекстНадписи = "";
	Для Каждого Элемент Из ОтборПоВидамРабот Цикл 
		ТекстНадписи = ТекстНадписи + ?(ТекстНадписи = "", "", "; ") + СокрЛП(Элемент.Значение);
	КонецЦикла;
	Если ТекстНадписи = "" Тогда
		ТекстНадписи = НСтр("ru = 'Указать виды работ'");
	КонецЕсли;
	
	НадписьОтборБазыРаспределения = ТекстНадписи;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормыСлужебные

// СтандартныеПодсистемы.Свойства

&НаСервере
Процедура СвойстваВыполнитьОтложеннуюИнициализацию()
	
	УправлениеСвойствами.ЗаполнитьДополнительныеРеквизитыВФорме(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ЗаполнитьСтатьиКалькуляцииВТабличнойЧасти(ИмяТЧ)
	
	ТекущиеДанные = Элементы[ИмяТЧ].ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru='Необходимо выбрать строки, для которых необходимо заполнить статью калькуляции.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	СтатьяКалькуляции = Неопределено;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ТипЗатрат", ПредопределенноеЗначение("Перечисление.ТипыЗатрат.ВозвратныеОтходы"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", ПараметрыОтбора);
	ПараметрыФормы.Вставить("МножественныйВыбор", Ложь);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьСтатьиКалькуляцииВТЧЗавершение", ЭтотОбъект, ИмяТЧ);
	
	ОткрытьФорму("Справочник.СтатьиКалькуляции.ФормаВыбора", ПараметрыФормы,,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтатьиКалькуляцииВТЧЗавершение(Результат, ИмяТЧ) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыделенныеСтроки = Элементы[ИмяТЧ].ВыделенныеСтроки;
	ТабличнаяЧасть = Объект[ИмяТЧ];
	
	Для каждого ИдентификаторСтроки Из ВыделенныеСтроки Цикл
		
		ТекущиеДанные = ТабличнаяЧасть.НайтиПоИдентификатору(ИдентификаторСтроки);
		ТекущиеДанные.СтатьяКалькуляции = Результат;
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ПроверитьНаличиеДанныхДляБазыРаспределения(Отказ)
	
	// Доделать проверку заполнения базы распределения
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПодборПоПартиям()
	
	ПараметрыПодбора = Новый Структура();
	ПараметрыПодбора.Вставить("Организация",		Объект.Организация);
	ПараметрыПодбора.Вставить("Подразделение",		Объект.Подразделение);
	ПараметрыПодбора.Вставить("Назначение",			Объект.Назначение);
	ПараметрыПодбора.Вставить("АдресВХранилище",	ПоместитьВоВременноеХранилище("", УникальныйИдентификатор));
	
	ПараметрыПодбора.Вставить("НачалоПериода",		НачалоМесяца(Объект.Дата));
	ПараметрыПодбора.Вставить("ОкончаниеПериода",	КонецМесяца(Объект.Дата));
	
	ОткрытьФорму("ОбщаяФорма.ПодборПартийПроизводства",
		ПараметрыПодбора,
		ЭтаФорма,,,,
		Неопределено,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьОтборНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	РезультатОтбора = Результат;
	Если ТипЗнч(РезультатОтбора) = Тип("Массив") Тогда
		Если ДополнительныеПараметры = "ОтборПоГруппамПродукции" Тогда
			ОтборПоГруппамПродукции.ЗагрузитьЗначения(РезультатОтбора);
			УстановитьТекстНадписиОтбораПоГруппамПродукции();
			Модифицированность = Истина;
		ИначеЕсли ДополнительныеПараметры = "ОтборПоМатериалам" Тогда
			ОтборПоМатериалам.ЗагрузитьЗначения(РезультатОтбора);
			УстановитьТекстНадписиОтбораПоМатериалам();
			Модифицированность = Истина;
		ИначеЕсли ДополнительныеПараметры = "ОтборПоВидамРабот" Тогда
			ОтборПоВидамРабот.ЗагрузитьЗначения(РезультатОтбора);
			УстановитьТекстНадписиОтбораПоВидамРабот();
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПеренестиНастройкиВМодельФормированияСтоимостиСервер()
	
	Запись = РегистрыСведений.ОсновныеСпецификации.СоздатьМенеджерЗаписи();
	
	ЗаполнитьЗначенияСвойств(Запись, Объект);
	
	Запись.Подразделение = Объект.Подразделение;
	Запись.МодельФормированияСтоимости = Перечисления.ТипыМоделейФормированияСтоимости.ВыпускПоФиксированнойСтоимости;
	Запись.ПравилоРаспределения = Объект.ПравилоРаспределения;
	Запись.Спецификация = Неопределено;
	Запись.ОтражатьЗатратыДокументом = Ложь;
	
	Запись.Записать(Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаСтруктурыДействий

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьВСтруктуруДействияПриИзмененииНоменклатуры(Форма, СтруктураДействий)

	Объект = Форма.Объект;
	
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", Объект.Характеристика);
	
	СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются",
											Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры",
											Новый Структура("Номенклатура", "ТипНоменклатуры"));
	
	СтруктураДействий.Вставить("НоменклатураПриИзмененииПереопределяемый", Новый Структура("ИмяФормы, ИмяТабличнойЧасти",
		Форма.ИмяФормы, "Объект"));
		
	СтруктураДействий.Вставить("ЗаполнитьЦенуПродажи", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруЗаполненияЦеныВСтрокеТЧ(Объект));
	СтруктураДействий.Вставить("ПересчитатьСумму", "Количество");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьВСтруктуруДействияПриИзмененииКоличества(СтруктураДействий)
	
	ПараметрыПересчета = Новый Структура("НужноОкруглять, Упаковка", Ложь);
	СтруктураДействий.Вставить("ПересчитатьСумму", "Количество");
	
КонецПроцедуры

#КонецОбласти

#Область Заполнение

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизитыПоНоменклатуре()
	
	ТипНоменклатуры				= Объект.Номенклатура.ТипНоменклатуры;
	
	ИспользованиеХарактеристик = Объект.Номенклатура.ИспользованиеХарактеристик;
		
	МассивВариантов = Новый Массив;
	МассивВариантов.Добавить(Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры);
	МассивВариантов.Добавить(Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры);
	МассивВариантов.Добавить(Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры);
	
	ХарактеристикиИспользуются = Не (МассивВариантов.Найти(ИспользованиеХарактеристик) = Неопределено);
	
	УстановитьЗаголовокПолучателя();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтатьюКалькуляцииПоУмолчанию()
	
	Если Не ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		СтатьяКалькуляции = Справочники.СтатьиКалькуляции.ПустаяСсылка();
		Возврат;
	КонецЕсли;
	
//++ НЕ УТКА
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ПартииПроизводства.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	ПартииПроизводства.Ссылка.Дата КАК Дата
	|ИЗ
	|	Документ.РаспределениеВозвратныхОтходов.ПартииПроизводства КАК ПартииПроизводства
	|ГДЕ
	|	ПартииПроизводства.Ссылка.Номенклатура = &Номенклатура
	|	И ПартииПроизводства.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если ЗначениеЗаполнено(Выборка.СтатьяКалькуляции) Тогда
			СтатьяКалькуляции = Выборка.СтатьяКалькуляции
		Иначе
			Если Выборка.Следующий() Тогда
				СтатьяКалькуляции = Выборка.СтатьяКалькуляции;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
//-- НЕ УТКА

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройкиПоУмолчаниюИзПравилаРаспределения(Правило)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	М.Материал
	|ИЗ
	|	Справочник.ПравилаРаспределенияРасходов.ОтборПоМатериалам КАК М
	|ГДЕ
	|	М.Ссылка = &Ссылка
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Р.ВидРабот
	|ИЗ
	|	Справочник.ПравилаРаспределенияРасходов.ОтборПоВидамРабот КАК Р
	|ГДЕ
	|	Р.Ссылка = &Ссылка
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	П.ГруппаПродукции
	|ИЗ
	|	Справочник.ПравилаРаспределенияРасходов.ОтборПоГруппамПродукции КАК П
	|ГДЕ
	|	П.Ссылка = &Ссылка
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	С.СтатьяКалькуляции
	|ИЗ
	|	Справочник.ПравилаРаспределенияРасходов КАК С
	|ГДЕ
	|	С.Ссылка = &Ссылка
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	С.БазаРаспределения
	|ИЗ
	|	Справочник.ПравилаРаспределенияРасходов КАК С
	|ГДЕ
	|	С.Ссылка = &Ссылка
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////");
	
	Запрос.УстановитьПараметр("Ссылка", Правило);
	Результат = Запрос.ВыполнитьПакет();
	ОтборПоМатериалам.ЗагрузитьЗначения(Результат[0].Выгрузить().ВыгрузитьКолонку("Материал"));
	ОтборПоВидамРабот.ЗагрузитьЗначения(Результат[1].Выгрузить().ВыгрузитьКолонку("ВидРабот"));
	ОтборПоГруппамПродукции.ЗагрузитьЗначения(Результат[2].Выгрузить().ВыгрузитьКолонку("ГруппаПродукции"));
	
	ИспользоватьОтборПоГруппамПродукции = (ОтборПоГруппамПродукции.Количество() > 0);
	
	Объект.СтатьяКалькуляции = ?(НЕ Результат[3].Пустой(),
										Результат[3].Выгрузить()[0].СтатьяКалькуляции,
										Справочники.СтатьиКалькуляции.ПустаяСсылка());
	
	Объект.БазаРаспределения = ?(НЕ Результат[4].Пустой(),
										Результат[4].Выгрузить()[0].БазаРаспределения,
										Перечисления.ТипыБазыРаспределенияРасходов.ПустаяСсылка());
	
	УстановитьТекстИВидимостьОтбораБазыРаспределения();
	УстановитьВидимостьПоОтборуПоГруппамПродукции();
	УстановитьТекстНадписиОтбораПоГруппамПродукции();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСпискиОтбора()
	
	ОтборПоГруппамПродукции.ЗагрузитьЗначения(Объект.ОтборПоГруппамПродукции.Выгрузить(, "ГруппаПродукции").ВыгрузитьКолонку("ГруппаПродукции"));
	ИспользоватьОтборПоГруппамПродукции = (ОтборПоГруппамПродукции.Количество() > 0);
	ОтборПоВидамРабот.ЗагрузитьЗначения(Объект.ОтборПоВидамРабот.Выгрузить(, "ВидРабот").ВыгрузитьКолонку("ВидРабот"));
	ОтборПоМатериалам.ЗагрузитьЗначения(Объект.ОтборПоМатериалам.Выгрузить(, "Материал").ВыгрузитьКолонку("Материал"));
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьПартииПроизводстваИзХранилища(АдресВХранилище)
	
	РезультатПодбора = ПолучитьИзВременногоХранилища(АдресВХранилище);
	
	Для Каждого Строка Из РезультатПодбора Цикл
		
		НоваяСтрока = Объект.ПартииПроизводства.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		
		Если ЗначениеЗаполнено(СтатьяКалькуляции) Тогда
			НоваяСтрока.СтатьяКалькуляции = СтатьяКалькуляции;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПолучательПоУмолчаниюСервер()
	
	Если ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа
		И (Не ЗначениеЗаполнено(Объект.Получатель)
			ИЛИ НЕ ТипЗнч(Объект.Получатель) = Тип("СправочникСсылка.СтруктураПредприятия")) Тогда
		Объект.Получатель = Объект.Подразделение;
	ИначеЕсли Не ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа Тогда
		Если ТипЗнч(Объект.Получатель) = Тип("СправочникСсылка.Склады")
			И Не Объект.Получатель.Подразделение = Объект.Подразделение Тогда
			Объект.Получатель = Неопределено;
		КонецЕсли;
		Объект.Получатель = ЗначениеНастроекПовтИсп.ПолучитьЦеховуюКладовуюПоУмолчанию(Объект.Подразделение, Объект.Получатель);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Серии

&НаСервере
Функция ПараметрыФормыУказанияСерий()
	
	Возврат НоменклатураСервер.ПараметрыФормыУказанияСерий(Объект, ПараметрыУказанияСерий, Неопределено, ЭтаФорма);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСтатусыУказанияСерийПриИзмененииТовараВШапке(КэшированныеЗначения)

	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерийПриИзмененииТовараВШапке(Объект, 
				ПараметрыУказанияСерий, КэшированныеЗначения);
	УстановитьДоступностьСерииВШапке();

КонецПроцедуры

&НаСервере
Процедура ОбработатьУказаниеСерийСервер(ПараметрыФормыУказанияСерий)
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ОбновлятьКоличествоТоваровПриРегистрацииСерий", Истина);
	ДобавитьВСтруктуруДействияПриИзмененииКоличества(СтруктураДействий);
	
	НоменклатураСервер.ОбработатьУказаниеСерий(Объект, ПараметрыУказанияСерий, ПараметрыФормыУказанияСерий, СтруктураДействий);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыСерий()

	Элементы.УказатьСерииВШапке.Видимость	= ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры;
	Элементы.СтатусУказанияСерий.Видимость	= ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры;
	Элементы.Серия.Видимость				= ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры;

	УстановитьДоступностьСерииВШапке();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьСерииВШапке()
	
	Если Объект.СтатусУказанияСерий = 14
		Или Объект.СтатусУказанияСерий = 13 Тогда
		Элементы.Серия.Доступность = Истина;
		Элементы.Серия.АвтоОтметкаНезаполненного = Истина;
	Иначе
		Элементы.Серия.Доступность = Ложь;
		Элементы.Серия.АвтоОтметкаНезаполненного = Ложь;
	КонецЕсли;
	
	Элементы.УказатьСерииВШапке.Доступность = Объект.СтатусУказанияСерий <> 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборСерий(Текст = "", ТекущиеДанные = Неопределено)
	
	Если НоменклатураКлиент.ДляУказанияСерийНуженСерверныйВызов(ЭтаФорма, ПараметрыУказанияСерий, Текст)Тогда
		
		ПараметрыФормыУказанияСерий = ПараметрыФормыУказанияСерий();
		ЗначениеВозврата = Неопределено;
		
		ДополнительныеПараметры = Новый Структура("ПараметрыФормыУказанияСерий", ПараметрыФормыУказанияСерий);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьПодборСерийЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ОткрытьФорму(ПараметрыФормыУказанияСерий.ИмяФормы, ПараметрыФормыУказанияСерий, ЭтаФорма,,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодборСерийЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ПараметрыФормыУказанияСерий = ДополнительныеПараметры.ПараметрыФормыУказанияСерий;
	ЗначениеВозврата = Результат;
	
	Если ЗначениеВозврата <> Неопределено Тогда
		ОбработатьУказаниеСерийСервер(ПараметрыФормыУказанияСерий);
	КонецЕсли;
	
	ОбновитьКешированныеЗначенияШапкиДляУчетаСерий();
	
	ОбновитьИтоги();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКешированныеЗначенияШапкиДляУчетаСерий()
	
	НоменклатураКлиент.ОбновитьКешированныеЗначенияШапкиДляУчетаСерий(Объект,
												КэшированныеЗначения, ПараметрыУказанияСерий);
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьЗаполнитьУстановитьВидимостьСерий()
	
	ПараметрыУказанияСерий();
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий);
	НастроитьЭлементыСерий();
	
КонецПроцедуры
	
&НаСервере
Процедура ПараметрыУказанияСерий()
	
	ПараметрыУказанияСерий = Новый ФиксированнаяСтруктура(НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.РаспределениеВозвратныхОтходов));
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.ВводНаОсновании
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
	
#КонецОбласти

#КонецОбласти