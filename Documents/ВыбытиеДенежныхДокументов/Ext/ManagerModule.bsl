#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт


	Документы.ПоступлениеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);

	Документы.ПриходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);

	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);


КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ВыбытиеДенежныхДокументов) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ВыбытиеДенежныхДокументов.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ВыбытиеДенежныхДокументов);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

#Область Заполнение

// Заполняет переданный документ
//
// Параметры:
//    Объект - ДокументОбъект - заполнямый документ
//    Ссылка - ДокументСсылка - документ-основание "Выбытие денежных документов"
//
Процедура ЗаполнитьПоОснованию(Объект, Ссылка) Экспорт
	
	// Заполним данные шапки документа
	ТекстЗапросаШапки = "";
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПриходныйКассовыйОрдер") Тогда
		ТекстЗапросаШапки = ТекстЗапросаПриходныйКассовыйОрдер();
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ПоступлениеБезналичныхДенежныхСредств") Тогда
		ТекстЗапросаШапки = ТекстЗапросаПоступлениеБезналичныхДенежныхСредств();
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекстЗапросаШапки) Тогда
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не предусмотрен ввод документа %1 на основании документа %2.'"),
			Объект.Метаданные().Синоним,
			Ссылка);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапросаШапки);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПриходныйКассовыйОрдер")
			Или ТипЗнч(Объект) = Тип("ДокументОбъект.ПоступлениеБезналичныхДенежныхСредств") Тогда
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Ввод документа %1 предусмотрен только на основании возврата денежных документов поставщику.'"),
				Объект.Метаданные().Синоним);
			ВызватьИсключение ТекстОшибки;
			
		Иначе
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не требуется вводить документ %1 на основании документа %2.'"),
				Объект.Метаданные().Синоним,
				Ссылка);
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(Объект, Выборка);
	КонецЕсли;
	
	// Заполним табличную часть
	ДопРеквизиты = Новый Структура;
	
	ВзаиморасчетыСервер.ЗаполнитьРасшифровкуПлатежаПоВозвратуПоставщику(
		Выборка.ОбъектРасчетов,
		Выборка.Валюта,
		Выборка.СуммаВзаиморасчетов,
		Выборка.Партнер,
		Объект.РасшифровкаПлатежа);
		
	ДопРеквизиты.Вставить("СуммаДокумента", Объект.РасшифровкаПлатежа.Итог("Сумма"));
	
	ЗаполнитьЗначенияСвойств(Объект, ДопРеквизиты);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Процедура заполняет массивы реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Выбранная хозяйственная операция
//	МассивВсехРеквизитов - Массив - Массив всех имен реквизитов, зависимых от хозяйственной операции
//	МассивРеквизитовОперации - Массив - Массив имен реквизитов, используемых в выбранной хозяйственной операции
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("АналитикаДоходов");
	МассивВсехРеквизитов.Добавить("АналитикаРасходов");
	МассивВсехРеквизитов.Добавить("АналитикаАктивовПассивов");
	МассивВсехРеквизитов.Добавить("Валюта");
	МассивВсехРеквизитов.Добавить("ГруппаФинансовогоУчета");
	МассивВсехРеквизитов.Добавить("ДатаАвансовогоОтчета");
	МассивВсехРеквизитов.Добавить("ДенежныеДокументы.ЦенаВозврата");
	МассивВсехРеквизитов.Добавить("ДенежныеДокументы.СуммаВозврата");
	МассивВсехРеквизитов.Добавить("Договор");
	МассивВсехРеквизитов.Добавить("Контрагент");
	МассивВсехРеквизитов.Добавить("МОЛПолучатель");
	МассивВсехРеквизитов.Добавить("Партнер");
	МассивВсехРеквизитов.Добавить("ПодотчетноеЛицо");
	МассивВсехРеквизитов.Добавить("ПодразделениеПолучатель");
	МассивВсехРеквизитов.Добавить("Соглашение");
	МассивВсехРеквизитов.Добавить("СпособКомпенсации");
	МассивВсехРеквизитов.Добавить("СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("СтатьяДоходов");
	МассивВсехРеквизитов.Добавить("СтатьяРасходов");
	МассивВсехРеквизитов.Добавить("ПодразделениеДоходовРасходов");
	МассивВсехРеквизитов.Добавить("ПорядокОплаты");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику Тогда
		МассивРеквизитовОперации.Добавить("ДатаАвансовогоОтчета");
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("ПодразделениеПолучатель");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику Тогда
		МассивРеквизитовОперации.Добавить("Партнер");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("Договор");
		МассивРеквизитовОперации.Добавить("Соглашение");
		МассивРеквизитовОперации.Добавить("Валюта");
		МассивРеквизитовОперации.Добавить("ГруппаФинансовогоУчета");
		МассивРеквизитовОперации.Добавить("ДенежныеДокументы.ЦенаВозврата");
		МассивРеквизитовОперации.Добавить("ДенежныеДокументы.СуммаВозврата");
		МассивРеквизитовОперации.Добавить("СтатьяДоходов");
		МассивРеквизитовОперации.Добавить("АналитикаДоходов");
		МассивРеквизитовОперации.Добавить("СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("СпособКомпенсации");
		МассивРеквизитовОперации.Добавить("ПорядокОплаты");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеДенежныхДокументов Тогда
		МассивРеквизитовОперации.Добавить("СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("АналитикаАктивовПассивов");
		МассивРеквизитовОперации.Добавить("ПодразделениеДоходовРасходов");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеДенежныхДокументов Тогда
		МассивРеквизитовОперации.Добавить("МОЛПолучатель");
		МассивРеквизитовОперации.Добавить("ПодразделениеПолучатель");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПроводкиРеглУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
#Область ТекстВозвратПоставщику // (Дт 76.ХХ :: Кт 50.03)
	ТекстВозвратПоставщику = "
	|ВЫБРАТЬ //// Возврат ДД поставщику (Дт 76.ХХ :: Кт 50.03)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям) КАК ВидСчетаДт,
	|	Операция.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Операция.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	// 4D:ERP для Беларуси, Екатерина, 01.10.2015 15:27:56 
	// Локализация плана счетов, №8969
	// {
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументы) КАК СчетКт,
	// }
	// 4D
	|
	|	Строки.ДенежныйДокумент КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Возврат ДД поставщику"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|";
#КонецОбласти
	
#Область ТекстВозвратПоставщикуРасходы // (Дт 2Х.ХХ :: Кт 76.ХХ)
	ТекстВозвратПоставщикуРасходы = "
	|ВЫБРАТЬ //// Возврат ДД поставщику (расходы на разницу стоимости) (Дт 2Х.ХХ :: Кт 76.ХХ)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ЕСТЬNULL(-Суммы.СуммаБезНДСРегл, Строки.Сумма - Строки.СуммаВозврата)) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Операция.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.СтатьяРасходов КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт2,
	|	Операция.АналитикаРасходов КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям) КАК ВидСчетаКт,
	|	Операция.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	СУММА(Строки.Сумма - Строки.СуммаВозврата) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Возврат ДД поставщику (расходы на разницу стоимости)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтрокиНаРазницу = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И Строки.Сумма - Строки.СуммаВозврата <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Операция.Подразделение,
	|	Операция.НаправлениеДеятельности,
	|	Операция.СтатьяРасходов,
	|	Операция.АналитикаРасходов,
	|	Операция.ГруппаФинансовогоУчета,
	|	Операция.Валюта,
	|	Операция.Контрагент,
	|	Операция.Договор
	|
	|ИМЕЮЩИЕ
	|	СУММА(Строки.Сумма - Строки.СуммаВозврата) > 0
	|";
#КонецОбласти
	
#Область ТекстВозвратПоставщикуДоходы // (Дт 76.ХХ :: Кт 91.01)
	ТекстВозвратПоставщикуДоходы = "
	|ВЫБРАТЬ //// Возврат ДД поставщику (доходы на разницу стоимости) (Дт 76.ХХ :: Кт 91.01)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаВозврата - Строки.Сумма)) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям) КАК ВидСчетаДт,
	|	Операция.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Операция.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	СУММА(Строки.СуммаВозврата - Строки.Сумма) КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	Операция.СтатьяДоходов КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	Операция.СтатьяДоходов КАК СубконтоКт1,
	|	Операция.АналитикаДоходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Возврат ДД поставщику (доходы на разницу стоимости)"" КАК Содержание
	|	
	|ИЗ
	|	
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтрокиНаРазницу = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|	
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И Строки.СуммаВозврата - Строки.Сумма <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Операция.ГруппаФинансовогоУчета,
	|	Операция.Валюта,
	|	Операция.Подразделение,
	|	Операция.НаправлениеДеятельности,
	|	Операция.Контрагент,
	|	Операция.Договор,
	|	Операция.СтатьяДоходов,
	|	Операция.АналитикаДоходов
	|
	|ИМЕЮЩИЕ
	|	СУММА(Строки.СуммаВозврата - Строки.Сумма) > 0
	|";
#КонецОбласти
	
#Область ТекстВыдачаПодотчетнику // (Дт 71.01 :: Кт 50.03)
	ТекстВыдачаПодотчетнику = "
	|ВЫБРАТЬ //// Выдача подотчетному лицу (Дт 71.01 :: Кт 50.03)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.Сумма) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Валюта КАК ВалютаДт,
	|	Операция.ПодразделениеПолучатель КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ВЫБОР КОГДА Суммы.СуммаБезНДСРегл ЕСТЬ NULL ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал)
	|	КОНЕЦ КАК СчетДт,
	|
	|	Операция.ПодотчетноеЛицо КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	// 4D:ERP для Беларуси, Екатерина, 01.10.2015 15:26:39 
	// Локализация плана счетов, №8969
	// {
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументы) КАК СчетКт,
	// }
	// 4D
	|
	|	Строки.ДенежныйДокумент КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Выдача подотчетному лицу"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику)
	|";
#КонецОбласти
	
#Область ТекстСписаниеНаРасходы // (Дт 2Х.ХХ :: Кт 50.03)
	ТекстСписаниеНаРасходы = "
	|ВЫБРАТЬ //// Списание ДД на расходы (Дт 2Х.ХХ :: Кт 50.03)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Операция.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.ПодразделениеДоходовРасходов КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Операция.СтатьяРасходов КАК СубконтоДт1,
	|	ВЫБОР
	|		КОГДА НЕ СтатьиСтроительства.Ссылка ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт2,
	|	Операция.АналитикаРасходов КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	// 4D:ERP для Беларуси, Екатерина, 01.10.2015 15:22:46 
	// Локализация плана счетов, №8969
	// {
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументы) КАК СчетКт,
	// }
	// 4D
	|
	|	Строки.ДенежныйДокумент КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание ДД на расходы"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО
	|		Операция.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО
	|		Операция.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|
	|ГДЕ
	|	СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов)
	|	И Операция.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|";
#КонецОбласти

#Область ТекстСписаниеНаПрочиеАктивы // (Дт <Прочие счета> :: Кт 50.03)
	// Поддержка статей расходов с устаревшим направлением распределения "НаПрочиеАктивы"
	ТекстСписаниеНаПрочиеАктивы = "
	|ВЫБРАТЬ ////Списание ДД на прочие активы (Дт <Прочие счета> :: Кт 50.03)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	// 4D:ERP для Беларуси, Дмитрий, 11.12.2017 11:16:09 
	// Локализация плана счетов, №8969
	// {
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументы) КАК СчетКт,
	// }
	// 4D
	|
	|	Строки.ДенежныйДокумент КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание ДД на прочие активы"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО
	|		Операция.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов)
	|	И Операция.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|";
#КонецОбласти

#Область ТекстСписаниеНаСтатьиАктивовПассивов // (Дт <Прочие счета> :: Кт 50.03)
	ТекстСписаниеНаСтатьиАктивовПассивов = "
	|ВЫБРАТЬ //// Списание ДД на прочие активы и пассивы (Дт <Прочие счета> :: Кт 50.03)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	Операция.СчетУчета КАК СчетДт,
	|	Операция.Субконто1 КАК СубконтоДт1,
	|	Операция.Субконто2 КАК СубконтоДт2,
	|	Операция.Субконто3 КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	// 4D:ERP для Беларуси, Екатерина, 01.10.2015 15:19:37 
	// Локализация плана счетов, №8969
	// {
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДенежныеДокументы) КАК СчетКт,
	// }
	// 4D
	|
	|	Строки.ДенежныйДокумент КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание ДД на прочие активы и пассивы"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|	
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов)
	|	И Операция.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|";
#КонецОбласти

#Область ТекстПереносПретензииНаРасчеты // (Дт 60.ХХ :: Кт 76.ХХ)
	ТекстПереносПретензииНаРасчеты = "
	|ВЫБРАТЬ //// Перенос претензии на авансы (Дт 60.02 :: Кт 76.02)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(РасчетыПредоплата.ПредоплатаРегл, Расчеты.СуммаРегл) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Расчеты.ЗаказПоставщику.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	ЕСТЬNULL(РасчетыПредоплата.Предоплата, Расчеты.Сумма) КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям) КАК ВидСчетаКт,
	|	Операция.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	"""" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Расчеты КАК Расчеты
	|	ПО
	|		Операция.Ссылка = Расчеты.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РасчетыПоДокументам КАК РасчетыПредоплата
	|	ПО
	|		Расчеты.Ссылка = РасчетыПредоплата.Ссылка
	|		И Расчеты.Контрагент = РасчетыПредоплата.Контрагент
	|		И Расчеты.ЗаказПоставщику = РасчетыПредоплата.ЗаказПоставщику
	|		И Расчеты.Валюта = РасчетыПредоплата.Валюта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //// Перенос претензии на расчеты (Дт 60.01 :: Кт 76.02)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Расчеты.ДолгРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	Расчеты.ЗаказПоставщику.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Расчеты.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Расчеты.Долг КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям) КАК ВидСчетаКт,
	|	Операция.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	"""" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВыбытиеДенежныхДокументов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыПоДокументам КАК Расчеты
	|	ПО
	|		Операция.Ссылка = Расчеты.Ссылка
	|";
#КонецОбласти
	
	Возврат ""
		+ ТекстВозвратПоставщику               + " ОБЪЕДИНИТЬ ВСЕ "
		+ ТекстВозвратПоставщикуРасходы        + " ОБЪЕДИНИТЬ ВСЕ "
		+ ТекстВозвратПоставщикуДоходы         + " ОБЪЕДИНИТЬ ВСЕ "
		+ ТекстВыдачаПодотчетнику              + " ОБЪЕДИНИТЬ ВСЕ "
		+ ТекстСписаниеНаРасходы               + " ОБЪЕДИНИТЬ ВСЕ "
		+ ТекстСписаниеНаПрочиеАктивы          + " ОБЪЕДИНИТЬ ВСЕ "
		+ ТекстСписаниеНаСтатьиАктивовПассивов + " ОБЪЕДИНИТЬ ВСЕ "
		+ ТекстПереносПретензииНаРасчеты
		+ "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - текст запроса создания временных таблиц.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Расчеты.Регистратор КАК Ссылка,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(Расчеты.ЗаказПоставщику.ГруппаФинансовогоУчета,
	|		ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК ГруппаФинансовогоУчета,
	|	Расчеты.ЗаказПоставщику,
	|	Расчеты.Валюта,
	|	СУММА(Расчеты.Сумма) КАК Сумма,
	|	СУММА(Расчеты.СуммаРегл) КАК СуммаРегл
	|ПОМЕСТИТЬ Расчеты
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыСПоставщиками КАК Расчеты
	|	ПО
	|		ДокументыКОтражению.Ссылка = Расчеты.Регистратор
	|		И ДокументыКОтражению.Ссылка <> Расчеты.ЗаказПоставщику
	|	
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Регистратор,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.Договор,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности,
	|	ЕСТЬNULL(Расчеты.ЗаказПоставщику.ГруппаФинансовогоУчета,
	|		ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)),
	|	Расчеты.ЗаказПоставщику,
	|	Расчеты.Валюта
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|ВЫБРАТЬ
	|	Расчеты.Регистратор КАК Ссылка,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(Расчеты.ЗаказПоставщику.ГруппаФинансовогоУчета,
	|		ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК ГруппаФинансовогоУчета,
	|	Расчеты.ЗаказПоставщику КАК ЗаказПоставщику,
	|	Расчеты.Валюта КАК Валюта,
	|	СУММА(Расчеты.Предоплата) КАК Предоплата,
	|	СУММА(Расчеты.ПредоплатаРегл) КАК ПредоплатаРегл,
	|	СУММА(Расчеты.Долг) КАК Долг,
	|	СУММА(Расчеты.ДолгРегл) КАК ДолгРегл
	|ПОМЕСТИТЬ РасчетыПоДокументам
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|	ПО
	|		ДокументыКОтражению.Ссылка = Расчеты.Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Регистратор,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.Договор,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности,
	|	ЕСТЬNULL(Расчеты.ЗаказПоставщику.ГруппаФинансовогоУчета,
	|		ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)),
	|	Расчеты.ЗаказПоставщику,
	|	Расчеты.Валюта
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Заполнение

Функция ТекстЗапросаПриходныйКассовыйОрдер()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация                                                           КАК Организация,
	|	ДанныеДокумента.Партнер                                                               КАК Партнер,
	|	ДанныеДокумента.Контрагент                                                            КАК Контрагент,
	|	ДанныеДокумента.Договор                                                               КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика)       КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Валюта                                                                КАК Валюта,
	|	&Ссылка                                                                               КАК ДокументОснование,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.СпособКомпенсации = ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ВернутьДенежныеСредства) ТОГДА
	|		&Ссылка
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ОбъектРасчетов,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.Контрагент.НаименованиеПолное <> """" ТОГДА
	|		ДанныеДокумента.Контрагент.НаименованиеПолное
	|	ИНАЧЕ
	|		ДанныеДокумента.Контрагент.Наименование
	|	КОНЕЦ КАК ПринятоОт,
	|	
	|	ДанныеДокумента.СуммаДокумента                                                        КАК СуммаВзаиморасчетов
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоступлениеБезналичныхДенежныхСредств()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация                                                           КАК Организация,
	|	ДанныеДокумента.Партнер                                                               КАК Партнер,
	|	ДанныеДокумента.Контрагент                                                            КАК Контрагент,
	|	ДанныеДокумента.Договор                                                               КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика)       КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Валюта                                                                КАК Валюта,
	|	&Ссылка                                                                               КАК ДокументОснование,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.СпособКомпенсации = ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ВернутьДенежныеСредства) ТОГДА
	|		&Ссылка
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ОбъектРасчетов,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.Контрагент.НаименованиеПолное <> """" ТОГДА
	|		ДанныеДокумента.Контрагент.НаименованиеПолное
	|	ИНАЧЕ
	|		ДанныеДокумента.Контрагент.Наименование
	|	КОНЕЦ КАК Выдать,
	|	
	|	ДанныеДокумента.СуммаДокумента                                                        КАК СуммаВзаиморасчетов
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	// Запрос инициализации движений
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	// Текст запроса
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаДенежныеДокументы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПорядокОтраженияПрочихОпераций(Запрос, ТекстыЗапроса, Регистры);
	
	// Выполнение запроса и помещение результата в дополнительные свойства
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата					КАК Период,
	|	ДанныеДокумента.Ссылка					КАК Ссылка,
	|	ДанныеДокумента.Организация				КАК Организация,
	|	ДанныеДокумента.Валюта					КАК Валюта,
	|	ДанныеДокумента.Партнер					КАК Партнер,
	|	ДанныеДокумента.Партнер					КАК Поставщик,
	|	ДанныеДокумента.Контрагент				КАК Контрагент,
	|	ДанныеДокумента.ХозяйственнаяОперация	КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств	КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ДатаАвансовогоОтчета			КАК ДатаАвансовогоОтчета,
	|	ДанныеДокумента.Подразделение					КАК Подразделение,
	|	ДанныеДокумента.ПодразделениеДоходовРасходов	КАК ПодразделениеДоходовРасходов,
	|	ДанныеДокумента.ПодразделениеПолучатель			КАК ПодразделениеПолучатель,
	|	ДанныеДокумента.ПодотчетноеЛицо			КАК ПодотчетноеЛицо,
	|	ДанныеДокумента.Соглашение				КАК Соглашение,
	|	ВЫБОР КОГДА ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов ТОГДА
	|		ДанныеДокумента.СтатьяРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР КОГДА ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов ТОГДА
	|		ДанныеДокумента.СтатьяРасходов.ПринятиеКналоговомуУчету
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПринятиеРасходовКналоговомуУчету,
	|	ВЫБОР КОГДА ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов ТОГДА
	|		ДанныеДокумента.СтатьяРасходов.ВариантРаспределенияРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВариантРаспределенияРасходов,
	|	ВЫБОР КОГДА ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов ТОГДА	
	|		ДанныеДокумента.СтатьяРасходов.ВидЦенностиНДС 
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЦенностиНДСРасходов,
	|	ДанныеДокумента.АналитикаРасходов		КАК АналитикаРасходов,
	|	ВЫБОР КОГДА ДанныеДокумента.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов ТОГДА
	|		ДанныеДокумента.СтатьяРасходов
	|	ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СтатьяАктивовПассивов,
	|	ДанныеДокумента.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	ДанныеДокумента.СтатьяДоходов			КАК СтатьяДоходов,
	|	ДанныеДокумента.АналитикаДоходов		КАК АналитикаДоходов,
	|	ДанныеДокумента.МОЛОтправитель			КАК МОЛОтправитель,
	|	ДанныеДокумента.МОЛПолучатель			КАК МОЛПолучатель,
	|	ДанныеДокумента.Договор					КАК Договор,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасчетыПоДоговорам,
	|	ДанныеДокумента.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	
	|	ВЫБОР КОГДА ДанныеДокумента.СпособКомпенсации = ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ВернутьДенежныеСредства) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ВернутьДенежныеСредства,
	|
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|		И ЕСТЬNULL(ДанныеДокумента.Договор.ЗаданГрафикИсполнения, ЛОЖЬ) ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК ГрафикИсполненияВДоговоре
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	// Параметры запроса
	Для Каждого Колонка из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Реквизиты.Валюта, Неопределено, Реквизиты.Период);
	
	Запрос.УстановитьПараметр("ВалютаУпр",								Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРегл",								Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУПР",			Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",		Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов",	ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов")); 
	Запрос.УстановитьПараметр("КонтролироватьВыдачуПодОтчетВРазрезеЦелей",	ПолучитьФункциональнуюОпцию("КонтролироватьВыдачуПодОтчетВРазрезеЦелей"));
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПартнеровИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос();
	ТекстЗапроса = ТекстЗапросаВтОбъектыРасчетов(ЗапросАналитик, Новый СписокЗначений());
	ТекстЗапроса = ТекстЗапроса + "
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|";
	
	ЗапросАналитик.Текст = ТекстЗапроса
		+ "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	&Организация КАК Организация,
		|	&Контрагент КАК Контрагент,
		|	&Партнер КАК Партнер,
		|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
		|	&НаправлениеДеятельности КАК НаправлениеДеятельности
		|ИЗ
		|	ВтОбъектыРасчетов КАК ТаблицаОбъектовРасчетов
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|	ПО
		|		&Организация = Аналитика.Организация
		|		И &Контрагент = Аналитика.Контрагент
		|		И &Партнер = Аналитика.Партнер
		|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
		|		И &НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
		|ГДЕ
		|	Аналитика.КлючАналитики ЕСТЬ NULL";
	
	ЗапросАналитик.УстановитьПараметр("Ссылка",                  Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Организация",             Запрос.Параметры.Организация);
	ЗапросАналитик.УстановитьПараметр("Контрагент",              Запрос.Параметры.Контрагент);
	ЗапросАналитик.УстановитьПараметр("Партнер",                 Запрос.Параметры.Партнер);
	ЗапросАналитик.УстановитьПараметр("Договор",                 Запрос.Параметры.Договор);
	ЗапросАналитик.УстановитьПараметр("ВернутьДенежныеСредства", Запрос.Параметры.ВернутьДенежныеСредства);
	ЗапросАналитик.УстановитьПараметр("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);

	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПартнеровИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВыбытиеДенежныхДокументов";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДД.НомерСтроки					КАК НомерСтроки,
	|	ТаблицаДД.ИдентификаторСтроки			КАК ИдентификаторСтроки,
	|	ТаблицаДД.ИдентификаторСтрокиНаРазницу	КАК ИдентификаторСтрокиНаРазницу,
	|	ТаблицаДД.ДенежныйДокумент				КАК ДенежныйДокумент,
	|	ТаблицаДД.Количество					КАК Количество,
	|	ТаблицаДД.Цена							КАК Цена,
	|	ТаблицаДД.ЦенаВозврата					КАК ЦенаВозврата,
	|	ТаблицаДД.Валюта						КАК Валюта,
	|
	|	ТаблицаДД.Сумма							КАК Сумма,
	|	ТаблицаДД.СуммаВозврата					КАК СуммаВозврата,
	|	&ХозяйственнаяОперация					КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА ТаблицаДД.Сумма = 0 // Не указана сумма, хоть такое и невозможно
	|		ИЛИ (ТаблицаДД.Валюта = &ВалютаУпр) // Валюты совпадают
	|		ИЛИ КурсУпр.Курс ЕСТЬ NULL // Нет курса упр. валюты
	|		ИЛИ КурсДокумента.Курс ЕСТЬ NULL // Нет курса валюты ДД
	|		ИЛИ (КурсДокумента.Курс / КурсДокумента.Кратность) = (КурсУпр.Курс / КурсУпр.Кратность) // Одинаковые курсы
	|	ТОГДА
	|		ТаблицаДД.Сумма
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ТаблицаДД.Сумма * КурсДокумента.Курс * КурсУпр.Кратность) / (КурсУпр.Курс * КурсДокумента.Кратность) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр,
	|
	|	ВЫБОР КОГДА ТаблицаДД.Сумма = 0 // Не указана сумма, хоть такое и невозможно
	|		ИЛИ (ТаблицаДД.Валюта = &ВалютаРегл) // Валюты совпадают
	|		ИЛИ КурсРегл.Курс ЕСТЬ NULL // Нет курса регл. валюты
	|		ИЛИ КурсДокумента.Курс ЕСТЬ NULL // Нет курса валюты ДД
	|		ИЛИ (КурсДокумента.Курс / КурсДокумента.Кратность) = (КурсРегл.Курс / КурсРегл.Кратность) // Одинаковые курсы
	|	ТОГДА
	|		ТаблицаДД.Сумма
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ТаблицаДД.Сумма * КурсДокумента.Курс * КурсРегл.Кратность) / (КурсРегл.Курс * КурсДокумента.Кратность) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	|
	|	ВЫБОР КОГДА ТаблицаДД.СуммаВозврата = 0 // Не указана сумма возврата
	|		ИЛИ (ТаблицаДД.Валюта = &ВалютаУпр) // Валюты совпадают
	|		ИЛИ КурсУпр.Курс ЕСТЬ NULL // Нет курса упр. валюты
	|		ИЛИ КурсДокумента.Курс ЕСТЬ NULL // Нет курса валюты ДД
	|		ИЛИ (КурсДокумента.Курс / КурсДокумента.Кратность) = (КурсУпр.Курс / КурсУпр.Кратность) // Одинаковые курсы
	|	ТОГДА
	|		ТаблицаДД.СуммаВозврата
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ТаблицаДД.СуммаВозврата * КурсДокумента.Курс * КурсУпр.Кратность) / (КурсУпр.Курс * КурсДокумента.Кратность) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаВозвратаУпр,
	|
	|	ВЫБОР КОГДА ТаблицаДД.СуммаВозврата = 0 // Не указана сумма возврата
	|		ИЛИ (ТаблицаДД.Валюта = &ВалютаРегл) // Валюты совпадают
	|		ИЛИ КурсРегл.Курс ЕСТЬ NULL // Нет курса регл. валюты
	|		ИЛИ КурсДокумента.Курс ЕСТЬ NULL // Нет курса валюты ДД
	|		ИЛИ (КурсДокумента.Курс / КурсДокумента.Кратность) = (КурсРегл.Курс / КурсРегл.Кратность) // Одинаковые курсы
	|	ТОГДА
	|		ТаблицаДД.СуммаВозврата
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ТаблицаДД.СуммаВозврата * КурсДокумента.Курс * КурсРегл.Кратность) / (КурсРегл.Курс * КурсДокумента.Кратность) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаВозвратаРегл
	|
	|ПОМЕСТИТЬ ВтВыбытиеДенежныхДокументов
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК ТаблицаДД
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период, ) КАК КурсДокумента
	|	ПО
	|		ТаблицаДД.Валюта = КурсДокумента.Валюта
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ВалютаУпр) КАК КурсУпр
	|	ПО
	|		(ИСТИНА)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &ВалютаРегл) КАК КурсРегл
	|	ПО
	|		(ИСТИНА)
	|ГДЕ
	|	ТаблицаДД.Ссылка = &Ссылка
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	ДенежныйДокумент
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтОбъектыРасчетов(Запрос, ТекстыЗапроса)
	
	ИмяВременнойТаблицы = "ВтОбъектыРасчетов";
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
		|
		|	ВЫБОР КОГДА &ВернутьДенежныеСредства
		|		И (ТаблицаРасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
		|		ИЛИ ТаблицаРасшифровкаПлатежа.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)) ТОГДА
		|		&Договор
		|	КОГДА ТаблицаРасшифровкаПлатежа.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
		|		ТаблицаРасшифровкаПлатежа.Заказ
		|	ИНАЧЕ
		|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
		|	КОНЕЦ КАК Договор,
		|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.НаправлениеДеятельности,
		|			ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности
		|
		|ПОМЕСТИТЬ ВтОбъектыРасчетов
		|ИЗ
		|	Документ.ВыбытиеДенежныхДокументов.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|	
		|ГДЕ
		|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Заказ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеДокументы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеДокументы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	&Подразделение							КАК Подразделение,
	|	&МОЛОтправитель							КАК МОЛ,
	|	&ХозяйственнаяОперация					КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств			КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаДД.ДенежныйДокумент				КАК ДенежныйДокумент,
	|	ТаблицаДД.Количество					КАК Количество,
	|	ТаблицаДД.СуммаУпр						КАК СуммаУпр,
	|	ТаблицаДД.СуммаРегл						КАК СуммаРегл,
	|	ТаблицаДД.Сумма							КАК Сумма
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	&ПодразделениеПолучатель				КАК Подразделение,
	|	&МОЛПолучатель							КАК МОЛ,
	|	&ХозяйственнаяОперация					КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств			КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаДД.ДенежныйДокумент				КАК ДенежныйДокумент,
	|	ТаблицаДД.Количество					КАК Количество,
	|	ТаблицаДД.СуммаУпр						КАК СуммаУпр,
	|	ТаблицаДД.СуммаРегл						КАК СуммаРегл,
	|	ТаблицаДД.Сумма							КАК Сумма
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеДенежныхДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидДвижения,
	|	ДенежныйДокумент
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаДД.НомерСтроки)			КАК НомерСтроки,
	|	&Период									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	&Подразделение							КАК Подразделение,
	|	&НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|	&СтатьяРасходов							КАК СтатьяРасходов,
	|	&АналитикаРасходов						КАК АналитикаРасходов,
	|	СУММА(ТаблицаДД.СуммаУпр - ТаблицаДД.СуммаВозвратаУпр) КАК Сумма,
	|
	|	СУММА(ВЫБОР КОГДА &ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты) ТОГДА
	|		ТаблицаДД.СуммаУпр - ТаблицаДД.СуммаВозвратаУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ) КАК СуммаБезНДС,
	|
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА НЕ &ВариантРаспределенияРасходов В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|		ТОГДА
	|			ТаблицаДД.СуммаРегл - ТаблицаДД.СуммаВозвратаРегл
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ) КАК СуммаРегл,
	|
	|	СУММА(ВЫБОР КОГДА &ПринятиеРасходовКналоговомуУчету = ЛОЖЬ
	|			  И НЕ &ВариантРаспределенияРасходов В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|		ТОГДА
	|			ТаблицаДД.СуммаРегл - ТаблицаДД.СуммаВозвратаРегл
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ) КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	ТаблицаДД.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|ГДЕ
	|	ТаблицаДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И НЕ &ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	И (ТаблицаДД.СуммаВозврата - ТаблицаДД.Сумма) < 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДД.ХозяйственнаяОперация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаДД.НомерСтроки)			КАК НомерСтроки,
	|	&Период									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	&ПодразделениеДоходовРасходов			КАК Подразделение,
	|	&НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|	&СтатьяРасходов							КАК СтатьяРасходов,
	|	&АналитикаРасходов						КАК АналитикаРасходов,
	|	СУММА(ТаблицаДД.СуммаУпр)				КАК Сумма,
	|
	|	СУММА(ВЫБОР КОГДА &ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты) ТОГДА
	|		ТаблицаДД.СуммаУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ) КАК СуммаБезНДС,
	|
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА НЕ &ВариантРаспределенияРасходов В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)) 
	|		ТОГДА
	|			ТаблицаДД.СуммаРегл
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ) КАК СуммаРегл,
	|
	|	СУММА(
	|		ВЫБОР КОГДА &ПринятиеРасходовКналоговомуУчету = ЛОЖЬ
	|			  И НЕ &ВариантРаспределенияРасходов В (
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы),
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|		ТОГДА
	|			ТаблицаДД.СуммаРегл
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ) КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	|	ТаблицаДД.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|ГДЕ
	|	ТаблицаДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов)
	|	И НЕ &ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	И &СтатьяРасходов <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДД.ХозяйственнаяОперация
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаДД.НомерСтроки)			КАК НомерСтроки,
	|	&Период									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	&Подразделение							КАК Подразделение,
	|	&НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|	&Ссылка									КАК ДокументПоступленияРасходов,
	|	&СтатьяРасходов							КАК СтатьяРасходов,
	|	&АналитикаРасходов						КАК АналитикаРасходов,
	|
	|	СУММА(ТаблицаДД.СуммаРегл - ТаблицаДД.СуммаВозвратаРегл)	КАК СтоимостьРегл,
	|	СУММА(ТаблицаДД.СуммаУпр - ТаблицаДД.СуммаВозвратаУпр)		КАК Стоимость,
	|	СУММА(ТаблицаДД.СуммаУпр - ТаблицаДД.СуммаВозвратаУпр)		КАК СтоимостьБезНДС,
	|
	|	СУММА(ВЫБОР КОГДА &ПринятиеРасходовКналоговомуУчету = ЛОЖЬ ТОГДА
	|		ТаблицаДД.СуммаРегл - ТаблицаДД.СуммаВозвратаРегл
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ)	КАК ПостояннаяРазница,
	|	0		КАК ВременнаяРазница,
	|	0		КАК НДСРегл,
	|
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО КАК НалогообложениеНДС
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|ГДЕ
	|	ТаблицаДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И &ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	И (ТаблицаДД.Сумма - ТаблицаДД.СуммаВозврата) > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДД.ХозяйственнаяОперация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаДД.НомерСтроки)			КАК НомерСтроки,
	|	&Период									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	&ПодразделениеДоходовРасходов			КАК Подразделение,
	|	&НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|	&Ссылка									КАК ДокументПоступленияРасходов,
	|	&СтатьяРасходов							КАК СтатьяРасходов,
	|	&АналитикаРасходов						КАК АналитикаРасходов,
	|
	|	СУММА(ТаблицаДД.СуммаРегл)				КАК СтоимостьРегл,
	|	СУММА(ТаблицаДД.СуммаУпр)				КАК Стоимость,
	|	СУММА(ТаблицаДД.СуммаУпр)				КАК СтоимостьБезНДС,
	|
	|	СУММА(ВЫБОР КОГДА &ПринятиеРасходовКналоговомуУчету = ЛОЖЬ ТОГДА
	|		ТаблицаДД.СуммаРегл
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ)	КАК ПостояннаяРазница,
	|	0		КАК ВременнаяРазница,
	|	0		КАК НДСРегл,
	|
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО КАК НалогообложениеНДС
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|ГДЕ
	|	ТаблицаДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов)
	|	И &ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	И &СтатьяРасходов <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДД.ХозяйственнаяОперация
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаДД.НомерСтроки)			КАК НомерСтроки,
	|	&Период									КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Организация							КАК Организация,
	|	&ПодразделениеДоходовРасходов			КАК ПодразделениеДоходовРасходов,
	|	&НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|	&СтатьяАктивовПассивов					КАК Статья,
	|	&АналитикаАктивовПассивов				КАК Аналитика,
	|	СУММА(ТаблицаДД.СуммаУпр - ТаблицаДД.СуммаВозвратаУпр) КАК Сумма
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|ГДЕ
	|	ТаблицаДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов)
	|	И &СтатьяАктивовПассивов <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДД.ХозяйственнаяОперация
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеДоходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период													КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)					КАК ВидДвижения,
	|	&Организация											КАК Организация,
	|	&Подразделение											КАК Подразделение,
	|	&НаправлениеДеятельности								КАК НаправлениеДеятельности,
	|	&СтатьяДоходов											КАК СтатьяДоходов,
	|	&АналитикаДоходов										КАК АналитикаДоходов,
	|	СУММА(ТаблицаДД.СуммаВозвратаУпр - ТаблицаДД.СуммаУпр)	КАК Сумма,
	|	ТаблицаДД.ХозяйственнаяОперация							КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|ГДЕ
	|	ТаблицаДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	И (ТаблицаДД.СуммаВозврата - ТаблицаДД.Сумма > 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДД.ХозяйственнаяОперация
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтОбъектыРасчетов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОбъектыРасчетов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	
	|	ВЫБОР КОГДА &ВернутьДенежныеСредства
	|			И (РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|			ИЛИ РасшифровкаПлатежа.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)) ТОГДА
	|		ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|			&Договор
	|		ИНАЧЕ
	|			&Ссылка
	|		КОНЕЦ
	|	ИНАЧЕ
	|		РасшифровкаПлатежа.Заказ
	|	КОНЕЦ КАК ЗаказПоставщику,
	|	
	|	РасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|	
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК Сумма,
	|	ВЫБОР КОГДА НЕ &ГрафикИсполненияВДоговоре ТОГДА
	|		РасшифровкаПлатежа.СуммаВзаиморасчетов
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КОплате,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(15, 2)) КАК СуммаУпр,
	|	&Организация КАК Организация
	|	
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОбъектыРасчетов КАК ТаблицаОбъектовРасчетов
	|		ПО РасшифровкаПлатежа.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|	
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасшифровкаПлатежа.НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваУПодотчетныхЛиц";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период										КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)		КАК ВидДвижения,
	|	&Организация								КАК Организация,
	|	&ПодотчетноеЛицо							КАК ПодотчетноеЛицо,
	|	&ПодразделениеПолучатель					КАК Подразделение,
	
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		&СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	
	|	ТаблицаДД.Валюта							КАК Валюта,
	|	&Ссылка										КАК РасчетныйДокумент,
	|	&ХозяйственнаяОперация						КАК ХозяйственнаяОперация,
	|	ТаблицаДД.Сумма								КАК Сумма,
	|	ТаблицаДД.СуммаРегл							КАК СуммаРегл,
	|	ТаблицаДД.СуммаУпр							КАК СуммаУпр,
	|	0											КАК КОтчету,
	
	|	&СтатьяДвиженияДенежныхСредств				КАК СтатьяДвиженияДенежныхСредств
	|	
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|	
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(&ДатаАвансовогоОтчета, ДЕНЬ)	КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)		КАК ВидДвижения,
	|	&Организация								КАК Организация,
	|	&ПодотчетноеЛицо							КАК ПодотчетноеЛицо,
	|	&ПодразделениеПолучатель					КАК Подразделение,
	
	|	ВЫБОР КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей ТОГДА
	|		&СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК ЦельВыдачи,
	
	|	ТаблицаДД.Валюта							КАК Валюта,
	|	&Ссылка										КАК РасчетныйДокумент,
	|	&ХозяйственнаяОперация						КАК ХозяйственнаяОперация,
	|	0											КАК Сумма,
	|	0											КАК СуммаРегл,
	|	0											КАК СуммаУпр,
	|	ТаблицаДД.Сумма								КАК КОтчету,
	
	|	&СтатьяДвиженияДенежныхСредств				КАК СтатьяДвиженияДенежныхСредств
	|	
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|	
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаДД.НомерСтроки			КАК НомерСтроки,
	|	&Период							КАК Период,
	|	ТаблицаДД.Валюта				КАК Валюта,
	|	ТаблицаДД.ИдентификаторСтроки	КАК ИдентификаторСтроки,
	|	ТаблицаДД.Сумма					КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО					КАК СтавкаНДС,
	|	0								КАК СуммаНДС,
	|	ТаблицаДД.СуммаРегл				КАК СуммаБезНДСРегл,
	|	0								КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО					КАК ТипРасчетов
	|
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|
	|ГДЕ
	|	ТаблицаДД.Валюта <> &ВалютаРегл
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДД.НомерСтроки								КАК НомерСтроки,
	|	&Период												КАК Период,
	|	ТаблицаДД.Валюта									КАК Валюта,
	|	ТаблицаДД.ИдентификаторСтрокиНаРазницу				КАК ИдентификаторСтроки,
	|	ТаблицаДД.СуммаВозврата - ТаблицаДД.Сумма			КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО										КАК СтавкаНДС,
	|	0													КАК СуммаНДС,
	|	ТаблицаДД.СуммаВозвратаРегл - ТаблицаДД.СуммаРегл	КАК СуммаБезНДСРегл,
	|	0													КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО										КАК ТипРасчетов
	|
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ТаблицаДД
	|
	|ГДЕ
	|	ТаблицаДД.Валюта <> &ВалютаРегл
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И НЕ ТаблицаДД.СуммаВозврата - ТаблицаДД.Сумма = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныхСредств";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	ДанныеДокумента.ДенежныйДокумент КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеДокументы) КАК ТипДенежныхСредств,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|
	|	&ПодотчетноеЛицо КАК КорДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица) КАК КорТипДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК КорВалюта,
	|
	|	СУММА(ДанныеДокумента.СуммаУпр) КАК Сумма,
	|	СУММА(ДанныеДокумента.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ДанныеДокумента.Сумма) КАК СуммаВВалюте,
	|	СУММА(ДанныеДокумента.Сумма) КАК СуммаВКорВалюте,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхДокументовПодотчетнику)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.ДенежныйДокумент,
	|	ДанныеДокумента.Валюта
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваДоходыРасходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&ПодразделениеДоходовРасходов КАК ПодразделениеДоходовРасходов,
	|
	|	ДанныеДокумента.ДенежныйДокумент КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеДокументы) КАК ТипДенежныхСредств,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	ВЫБОР
	|		КОГДА &СтатьяАктивовПассивов <> НЕОПРЕДЕЛЕНО
	|			ТОГДА &СтатьяАктивовПассивов
	|		ИНАЧЕ &СтатьяРасходов
	|	КОНЕЦ КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	&АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	
	|	СУММА(ДанныеДокумента.СуммаУпр) КАК Сумма,
	|	СУММА(ДанныеДокумента.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ДанныеДокумента.Сумма) КАК СуммаВВалюте,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДоходовРасходов
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.ДенежныйДокумент,
	|	ДанныеДокумента.Валюта
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваКонтрагент";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтОбъектыРасчетов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОбъектыРасчетов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	ДанныеДокумента.ДенежныйДокумент КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеДокументы) КАК ТипДенежныхСредств,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&Договор КАК Договор,
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ОбъектРасчетов,
	|	&Ссылка КАК РасчетныйДокумент,
	|
	|	СУММА(ДанныеДокумента.СуммаУпр) КАК СуммаОплаты,
	|	СУММА(ДанныеДокумента.СуммаРегл) КАК СуммаОплатыРегл,
	|	СУММА(ДанныеДокумента.Сумма) КАК СуммаОплатыВВалютеПлатежа,
	|
	|	0 КАК СуммаПостоплаты,
	|	0 КАК СуммаПостоплатыРегл,
	|	0 КАК СуммаПостоплатыВВалютеПлатежа,
	|	
	|	0 КАК СуммаПредоплаты,
	|	0 КАК СуммаПредоплатыРегл,
	|	0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|
	|	СУММА(ДанныеДокумента.Сумма) КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ИсточникГФУРасчетов,
	|	ЛОЖЬ КАК ОтложенноеПроведение 
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|	
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.ДенежныйДокумент,
	|	ДанныеДокумента.Валюта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период,
	|	ДанныеРегистра.ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.Подразделение,
	|
	|	ДанныеРегистра.ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа,
	|
	|	ДанныеРегистра.НаправлениеДеятельностиКонтрагента,
	|	ДанныеРегистра.Партнер,
	|	ДанныеРегистра.Контрагент,
	|	ДанныеРегистра.Договор,
	|	ДанныеРегистра.ОбъектРасчетов,
	|	ДанныеРегистра.РасчетныйДокумент,
	|
	|	ДанныеРегистра.СуммаОплаты,
	|	ДанныеРегистра.СуммаОплатыРегл,
	|	ДанныеРегистра.СуммаОплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаПостоплаты,
	|	ДанныеРегистра.СуммаПостоплатыРегл,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаПредоплаты,
	|	ДанныеРегистра.СуммаПредоплатыРегл,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов,
	|
	|	ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов,
	|	ИСТИНА 
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Регистратор = &Ссылка
	|	И ОтложенноеПроведение
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентДоходыРасходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВыбытиеДенежныхДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВыбытиеДенежныхДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
#Область СписаниеКредиторскойЗадолженности
	СписаниеКредиторскойЗадолженности =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&Договор КАК Договор,
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ОбъектРасчетов,
	|	&Ссылка КАК РасчетныйДокумент,
	|	
	|	&СтатьяДоходов  КАК СтатьяДоходовРасходов,
	|	&АналитикаДоходов КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	
	|	ДанныеДокумента.СуммаВозвратаУпр - ДанныеДокумента.СуммаУпр КАК Сумма,
	|	ДанныеДокумента.СуммаВозвратаУпр - ДанныеДокумента.СуммаУпр КАК СуммаБезНДС,
	|	ДанныеДокумента.СуммаВозвратаРегл - ДанныеДокумента.СуммаРегл КАК СуммаРегл,
	|	ДанныеДокумента.СуммаВозвратаРегл - ДанныеДокумента.СуммаРегл КАК СуммаРеглБезНДС,
	|	
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.СуммаВозврата - ДанныеДокумента.Сумма КАК СуммаВВалюте,
	|	ДанныеДокумента.СуммаВозврата - ДанныеДокумента.Сумма КАК СуммаБезНДСВВалюте,
	|	
	|	ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.СуммаВозврата - ДанныеДокумента.Сумма КАК СуммаВВалютеВзаиморасчетов,
	|	ДанныеДокумента.СуммаВозврата - ДанныеДокумента.Сумма КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И ДанныеДокумента.СуммаВозврата - ДанныеДокумента.Сумма > 0
	|";
#КонецОбласти

#Область СписаниеДебиторскойЗадолженности
	СписаниеДебиторскойЗадолженности =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&Договор КАК Договор,
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ОбъектРасчетов,
	|	&Ссылка КАК РасчетныйДокумент,
	|	
	|	ВЫБОР 
	|		КОГДА &СтатьяАктивовПассивов <> НЕОПРЕДЕЛЕНО
	|			ТОГДА &СтатьяАктивовПассивов
	|		ИНАЧЕ &СтатьяРасходов
	|	КОНЕЦ КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	&АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|
	|	ДанныеДокумента.СуммаУпр - ДанныеДокумента.СуммаВозвратаУпр КАК Сумма,
	|	ДанныеДокумента.СуммаУпр - ДанныеДокумента.СуммаВозвратаУпр КАК СуммаБезНДС,
	|	ДанныеДокумента.СуммаРегл - ДанныеДокумента.СуммаВозвратаРегл КАК СуммаРегл,
	|	ДанныеДокумента.СуммаРегл - ДанныеДокумента.СуммаВозвратаРегл КАК СуммаРеглБезНДС,
	|	
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Сумма - ДанныеДокумента.СуммаВозврата КАК СуммаВВалюте,
	|	ДанныеДокумента.Сумма - ДанныеДокумента.СуммаВозврата КАК СуммаБезНДСВВалюте,
	|	
	|	ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.Сумма - ДанныеДокумента.СуммаВозврата КАК СуммаВВалютеВзаиморасчетов,
	|	ДанныеДокумента.Сумма - ДанныеДокумента.СуммаВозврата КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтВыбытиеДенежныхДокументов КАК ДанныеДокумента
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику)
	|	И ДанныеДокумента.Сумма - ДанныеДокумента.СуммаВозврата > 0
	|
	|";
#КонецОбласти

	ТекстЗапроса = СписаниеКредиторскойЗадолженности
		+ " ОБЪЕДИНИТЬ ВСЕ " + СписаниеДебиторскойЗадолженности;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаПорядокОтраженияПрочихОпераций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПорядокОтраженияПрочихОпераций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Дата,
	|	&Организация КАК Организация,
	|	&Ссылка КАК Документ,
	|	"""" КАК ИдентификаторСтроки
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов)
	|	И &СтатьяРасходов <> НЕОПРЕДЕЛЕНО
	|	И &ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Расходный ордер
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ВыбытиеДенежныхДокументов";
	КомандаПечати.Идентификатор = "РасходныйОрдер";
	КомандаПечати.Представление = НСтр("ru = 'Расходный ордер'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасходныйОрдер") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РасходныйОрдер",
			"РасходныйОрдер",
			СформироватьПечатнуюФормуРасходныйОрдер(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуРасходныйОрдер(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВыбытиеДенежныхДокументов_РасходныйОрдер";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документы.Ссылка						КАК Ссылка,
	|	Документы.Организация					КАК Организация,
	|	Документы.Подразделение					КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕ(Документы.Подразделение)	КАК ПредставлениеПодразделения,
	|	ВЫБОР КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ									КАК ЭтоВозврат,
	|	ВЫБОР
	|	КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику) ТОГДА
	|		Документы.Контрагент
	|	КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов) ТОГДА
	|		Документы.Подразделение
	|	ИНАЧЕ
	|		Документы.ПодотчетноеЛицо
	|	КОНЕЦ									КАК Получатель,
	|	ВЫБОР 
	|	КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику) ТОГДА
	|		ПРЕДСТАВЛЕНИЕ(Документы.Контрагент)
	|	КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДенежныхДокументов) ТОГДА
	|		ПРЕДСТАВЛЕНИЕ(Документы.Подразделение)
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(Документы.ПодотчетноеЛицо)
	|	КОНЕЦ									КАК ПредставлениеПолучателя,
	|	Документы.СуммаДокумента				КАК СуммаДокумента,
	|	Документы.Валюта						КАК ВалютаДокумента,
	|	Документы.Номер							КАК Номер,
	|	Документы.Дата							КАК Дата,
	|	Документы.Организация.Префикс			КАК Префикс
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДД.НомерСтроки						КАК НомерСтроки,
	|	ДД.Ссылка							КАК Ссылка,
	|	ДД.ДенежныйДокумент					КАК ДенежныйДокумент,
	|	ДД.ДенежныйДокумент.Наименование	КАК ДенежныйДокументПредставление,
	|	СУММА(ДД.Количество)				КАК Количество,
	|	СУММА(ДД.Сумма)						КАК Стоимость,
	|	СУММА(ДД.СуммаВозврата)				КАК Сумма,
	|	ВЫБОР КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику) ТОГДА
	|		Документы.Валюта
	|	ИНАЧЕ
	|		ДД.Валюта
	|	КОНЕЦ								КАК Валюта,
	|	ВЫБОР КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику) ТОГДА
	|		ПРЕДСТАВЛЕНИЕ(Документы.Валюта)
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(ДД.Валюта)
	|	КОНЕЦ								КАК ВалютаПредставление
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов.ДенежныеДокументы КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыбытиеДенежныхДокументов КАК Документы
	|		ПО Документы.Ссылка = ДД.Ссылка
	|ГДЕ
	|	ДД.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.НомерСтроки,
	|	ДД.Ссылка,
	|	ДД.ДенежныйДокумент,
	|	ВЫБОР КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику) ТОГДА
	|		Документы.Валюта
	|	ИНАЧЕ
	|		ДД.Валюта
	|	КОНЕЦ,
	|	ВЫБОР КОГДА Документы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику) ТОГДА
	|		ПРЕДСТАВЛЕНИЕ(Документы.Валюта)
	|	ИНАЧЕ
	|		ПРЕДСТАВЛЕНИЕ(ДД.Валюта)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ДенежныйДокументПредставление,
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка
	|");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВыбытиеДенежныхДокументов.ПФ_MXL_РасходныйОрдер");
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ДанныеПечати = ПакетЗапросов[0].Выбрать();
	ВыборкаПоДокументам = ПакетЗапросов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// Создание массива для проверки: какие из докуметов не попали в выборку
	МассивПроверки = Новый Массив;
	Для Каждого Ссылка Из МассивОбъектов Цикл
		МассивПроверки.Добавить(Ссылка);
	КонецЦикла;
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(Новый Структура("Ссылка", ДанныеПечати.Ссылка)) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивПроверки.Удалить(МассивПроверки.Найти(ДанныеПечати.Ссылка));
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВыбытиеДенежныхДокументов.ПФ_MXL_РасходныйОрдер");
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		Шапка = ДанныеПечати;
		
		// Выводим шапку
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		УстановитьПараметр(ОбластьМакета,
			"ТекстЗаголовка",
			ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Расходный ордер'")));
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Организация");
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		УстановитьПараметр(ОбластьМакета, "ПредставлениеОрганизации", ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,"));
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подразделение");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("КомуВыдано");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы" + ?(Шапка.ЭтоВозврат, "Возврат", ""));
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Итог = 0;
		ИтогСтоимость = 0;
		Валюта = Неопределено;
		Выборка = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока Выборка.Следующий() Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка" + ?(Шапка.ЭтоВозврат, "Возврат", ""));
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			Итог = Итог + Выборка.Сумма;
			ИтогСтоимость = ИтогСтоимость + Выборка.Стоимость;
			Если Валюта = Неопределено Тогда
				Валюта = Выборка.Валюта;
			ИначеЕсли Валюта <> Выборка.Валюта Тогда
				Итог = 0; // Разные валюты
				ИтогСтоимость = 0; // Разные валюты
			КонецЕсли;
			
		КонецЦикла;
		
		// Вывести Итого
		ОбластьМакета = Макет.ПолучитьОбласть("Итого" + ?(Шапка.ЭтоВозврат, "Возврат", ""));
		УстановитьПараметр(ОбластьМакета, "Сумма", ОбщегоНазначенияБПВызовСервера.ФорматСумм(Итог));
		УстановитьПараметр(ОбластьМакета, "Стоимость", ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогСтоимость));
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Вывести Сумму прописью
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		Если Шапка.ЭтоВозврат Тогда
			ИтоговаяСтрока = НСтр("ru = 'Всего наименований'") + " " + Выборка.Количество()
				+ НСтр("ru = ', на сумму'") + " " + ОбщегоНазначенияБПВызовСервера.ФорматСумм(Шапка.СуммаДокумента, Шапка.ВалютаДокумента);
		Иначе
			ИтоговаяСтрока = НСтр("ru = 'Всего наименований'") + " " + Выборка.Количество();
			Если ИтогСтоимость <> 0 Тогда
				ИтоговаяСтрока = ИтоговаяСтрока + НСтр("ru = ', на сумму'") + " "
					+ ОбщегоНазначенияБПВызовСервера.ФорматСумм(ИтогСтоимость, Валюта);
			КонецЕсли;
		КонецЕсли;
		УстановитьПараметр(ОбластьМакета, "ИтоговаяСтрока", ИтоговаяСтрока);
		
		Если Шапка.ЭтоВозврат Тогда
			УстановитьПараметр(ОбластьМакета,
				"СуммаПрописью",
				ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(Шапка.СуммаДокумента, Шапка.ВалютаДокумента));
		Иначе
			Если ИтогСтоимость <> 0 Тогда
				УстановитьПараметр(ОбластьМакета,
					"СуммаПрописью",
					ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(ИтогСтоимость, Валюта));
			КонецЕсли;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Вывести подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	Для Каждого Ссылка Из МассивПроверки Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СтрЗаменить(
				НСтр("ru = 'В %Ссылка% отсутствуют денежные документы. Печать расходного ордера не требуется.'"),
				"%Ссылка%",
				Ссылка),
			Ссылка);
	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция УстановитьПараметр(ОбластьМакета, ИмяПараметра, ЗначениеПараметра)
	ОбластьМакета.Параметры.Заполнить(Новый Структура(ИмяПараметра, ЗначениеПараметра));
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УП 2.2.1,
// заполняет реквизит "Порядок оплаты" документа "ВыбытиеДенежныхДокументов".
// Также переносит значение реквизита "Подразделение" в обязательный для заполнения реквизит "ПодразделениеДоходовРасходов"
// для сохранения движений в регистре "ПрочиеРасходы".
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ВыбытиеДенежныхДокументов.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов КАК ВыбытиеДенежныхДокументов
	|ГДЕ
	|	ВыбытиеДенежныхДокументов.ПорядокОплаты = ЗНАЧЕНИЕ(Перечисление.ПорядокОплатыПоСоглашениям.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВыбытиеДенежныхДокументов.Ссылка
	|ИЗ
	|	Документ.ВыбытиеДенежныхДокументов КАК ВыбытиеДенежныхДокументов
	|ГДЕ
	|	ВыбытиеДенежныхДокументов.ПодразделениеДоходовРасходов = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	И НЕ ВыбытиеДенежныхДокументов.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	И ВыбытиеДенежныхДокументов.Проведен");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ВыбытиеДенежныхДокументов";
	
	МетаданныеДокумента = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли; 
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыДляОбработки.Ссылка                      КАК Ссылка,
	|	ОбъектыДляОбработки.Ссылка.ВерсияДанных         КАК ВерсияДанных,
	|	ВЫБОР 
	|		КОГДА НЕ ОбъектыДляОбработки.Ссылка.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА ОбъектыДляОбработки.Ссылка.Договор.ПорядокОплаты
	|		КОГДА НЕ ОбъектыДляОбработки.Ссылка.Соглашение = ЗНАЧЕНИЕ(Справочник.СоглашенияСКлиентами.ПустаяСсылка)
	|			И НЕ ОбъектыДляОбработки.Ссылка.Соглашение = ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)
	|			ТОГДА ОбъектыДляОбработки.Ссылка.Соглашение.ПорядокОплаты
	|		ИНАЧЕ	
	|			ВЫБОР 
	|				КОГДА ОбъектыДляОбработки.Ссылка.Валюта = &ВалютаРеглУчета 
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях)
	|				ИНАЧЕ
	|					ЗНАЧЕНИЕ(Перечисление.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях)
	|			КОНЕЦ
	|	КОНЕЦ                                           КАК ПорядокОплаты,
	|	ОбъектыДляОбработки.Ссылка.Подразделение        КАК Подразделение
	|ИЗ
	|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТОбъектыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			
			НачатьТранзакцию();
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									МетаданныеДокумента,
									Выборка.Ссылка,
									ТекстСообщения);
			Продолжить;
			
		КонецПопытки;
		
		ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
		Если ДокументОбъект = Неопределено Тогда
			ЗафиксироватьТранзакцию();
			Продолжить;
		КонецЕсли;
		
		ОбъектИзменен = Ложь;
		
		Если НЕ ЗначениеЗаполнено(ДокументОбъект.ПорядокОплаты) Тогда
			ДокументОбъект.ПорядокОплаты = Выборка.ПорядокОплаты;
			ОбъектИзменен = Истина;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДокументОбъект.ПодразделениеДоходовРасходов) Тогда
			ДокументОбъект.ПодразделениеДоходовРасходов = Выборка.Подразделение;
			ОбъектИзменен = Истина;
		КонецЕсли;
		
		Попытка
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект, , , РежимЗаписиДокумента.Запись);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеДокумента,
				Выборка.Ссылка,
				ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
