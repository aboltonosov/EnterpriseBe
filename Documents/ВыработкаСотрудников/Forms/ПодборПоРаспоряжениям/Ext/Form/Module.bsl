
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Организация",Организация);
	Параметры.Свойство("Подразделение",Подразделение);
	Параметры.Свойство("Бригада",Бригада);
	Параметры.Свойство("ВидНаряда",ВидНаряда);
	Параметры.Свойство("Ссылка",Ссылка);
	
	ПодборТоваровКлиентСервер.СформироватьЗаголовокФормыПодбора(Заголовок, Ссылка);
	
	ПараметрыОтбора = ХранилищеНастроекДанныхФорм.Загрузить("ПодборПоРаспоряжениямВБригадныеНаряды", "ПараметрыОтбора");
	Если ЗначениеЗаполнено(ПараметрыОтбора) И ВидНаряда = Перечисления.ВидыБригадныхНарядов.Производство Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, ПараметрыОтбора);
	КонецЕсли;
	
	//++ НЕ УТКА
	
	ОпределитьУправлениеМаршрутнымиЛистами();
	
	ЗаполнитьТаблицу();
	
	//-- НЕ УТКА
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборРабочийЦентрПриИзменении(Элемент)
	
	//++ НЕ УТКА
	ОтборРабочийЦентрПриИзмененииНаСервере();
	//-- НЕ УТКА
	
	Возврат; // в КА обработчик пустой
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокументВыполнить()
	
	ПоместитьТаблицуВХранилище(ЭтаФорма.ВладелецФормы.УникальныйИдентификатор);
	ВыбранноеЗначение = Новый Структура("АдресВХранилище", АдресВХранилище);
	
	ОповеститьОВыборе(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСтрокиВыполнить()
	
	ОтметитьСтроки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьСтрокиВыполнить()
	
	ОтметитьСтроки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВыделенныеСтроки(Команда)
	
	МассивСтрок = Элементы.Таблица.ВыделенныеСтроки;
	ОтметитьСтроки(Истина, МассивСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВыделенныеСтроки(Команда)
	
	МассивСтрок = Элементы.Таблица.ВыделенныеСтроки;
	ОтметитьСтроки(Ложь, МассивСтрок);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаСпособОтражения.Имя);


	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидНаряда");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ВидыБригадныхНарядов.Производство;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаСтатьяКалькуляции.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидНаряда");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ВидыБригадныхНарядов.Ремонт;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

КонецПроцедуры

//++ НЕ УТКА

&НаСервере
Процедура ОтборРабочийЦентрПриИзмененииНаСервере()
	
	ПараметрыОтбора = Новый Структура("ОтборРабочийЦентр");
	ЗаполнитьЗначенияСвойств(ПараметрыОтбора, ЭтаФорма);
	ХранилищеНастроекДанныхФорм.Сохранить("ПодборПоРаспоряжениямВБригадныеНаряды", "ПараметрыОтбора", ПараметрыОтбора);
	
	ЗаполнитьТаблицу();
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьУправлениеМаршрутнымиЛистами()

	Если НЕ Подразделение.Пустая() Тогда
		ПараметрыПодразделения = ПроизводствоСервер.ПараметрыПроизводственногоПодразделения(Подразделение);
		УправлениеМаршрутнымиЛистами = ПараметрыПодразделения.УправлениеМаршрутнымиЛистами;
	Иначе
		УправлениеМаршрутнымиЛистами = Перечисления.УправлениеМаршрутнымиЛистами.ПустаяСсылка();
		ОтборРабочийЦентр = Справочники.РабочиеЦентры.ПустаяСсылка();
	КонецЕсли;

	ВидимостьОтбораПоРЦ = (НЕ Подразделение.Пустая() И ВидНаряда = Перечисления.ВидыБригадныхНарядов.Производство);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ОтборРабочийЦентр", "Видимость", ВидимостьОтбораПоРЦ);
	
КонецПроцедуры
//-- НЕ УТКА

&НаСервере
Процедура ПоместитьТаблицуВХранилище(Идентификатор)
	
	МассивУдаляемыхСтрок = Новый Массив;
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		
		Если Не СтрокаТаблицы.Выбран Тогда
			МассивУдаляемыхСтрок.Добавить(СтрокаТаблицы);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		Таблица.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	АдресВХранилище = ПоместитьВоВременноеХранилище(Таблица.Выгрузить(), Идентификатор);
	
КонецПроцедуры

//++ НЕ УТКА
&НаСервере
Процедура ЗаполнитьТаблицу()
	
	СтруктураОтбора = Новый Структура("Организация, Подразделение, Бригада, ВидНаряда");
	ЗаполнитьЗначенияСвойств(СтруктураОтбора, ЭтаФорма);
	
	СтруктураОтбора.Вставить("ДокументИсключение", Ссылка);
	
	Если ЗначениеЗаполнено(ОтборРабочийЦентр) Тогда
		СтруктураОтбора.Вставить("РабочийЦентр", ОтборРабочийЦентр);
	КонецЕсли;
	
	КОформлению = Документы.ВыработкаСотрудников.ТрудозатратыКОформлению(СтруктураОтбора);
	
	Таблица.Загрузить(КОформлению);
	
	Таблица.Сортировать("ВидРабот, Распоряжение");
	
КонецПроцедуры
//-- НЕ УТКА

&НаКлиенте
Процедура ОтметитьСтроки(Значение, МассивСтрок = Неопределено)
	
	Если МассивСтрок = Неопределено Тогда
		
		Для Каждого СтрокаТаблицы Из Таблица Цикл
			СтрокаТаблицы.Выбран = Значение;
		КонецЦикла;
		
	Иначе
		
		Для Каждого НомерСтроки Из МассивСтрок Цикл
			СтрокаТаблицы = Таблица.НайтиПоИдентификатору(НомерСтроки);
			Если СтрокаТаблицы <> Неопределено Тогда
				СтрокаТаблицы.Выбран = Значение;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
