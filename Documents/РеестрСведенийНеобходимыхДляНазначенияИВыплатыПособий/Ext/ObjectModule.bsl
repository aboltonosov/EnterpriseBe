#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Подсистема "Управление доступом".

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "ФизическиеЛица.ФизическоеЛицо");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И ОбъектЗафиксирован() Тогда
		ФиксацияВторичныхДанныхВДокументах.ЗафиксироватьВторичныеДанныеДокумента(ЭтотОбъект);
	КонецЕсли;
	
	ЗаполнитьФизическихЛицИзЗаявлений();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ЗарплатаКадры.ЭтоЮридическоеЛицо(Организация)Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "КПП");
	КонецЕсли;
	
	Если НЕ ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПособияПоНетрудоспособности Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.НомерЛисткаНетрудоспособности");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ДатаВыдачиЛисткаНетрудоспособности");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.МедицинскаяОрганизация");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.НаименованиеМедицинскойОрганизации");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ОГРНМедицинскойОрганизации");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.КодПричиныНетрудоспособности");
	КонецЕсли;
	
	Если НЕ ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ЕжемесячныеПособияПоУходуЗаРебенком Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ОчередностьРожденияРебенка");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ВидПодтверждающегоДокумента");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.НаименованиеПодтверждающегоДокумента");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ДатаДокумента");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.СерияДокумента");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.НомерДокумента");
	КонецЕсли;
	
	Если НЕ ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ЕжемесячныеПособияПоУходуЗаРебенком 
		И НЕ ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ЕдиновременныеПособияПриРожденииРебенка Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ФамилияРебенка");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ИмяРебенка");
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ДатаРожденияРебенка");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Заявления.НомерСтроки,
	|	Заявления.Заявление
	|ПОМЕСТИТЬ ВТЗаявления
	|ИЗ
	|	&Заявления КАК Заявления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВТЗаявления.НомерСтроки) КАК НомерСтроки,
	|	ЗаявленияПовторы.НомерСтроки КАК НомерСтрокиПовтора,
	|	ВТЗаявления.Заявление КАК Заявление
	|ИЗ
	|	ВТЗаявления КАК ВТЗаявления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаявления КАК ЗаявленияПовторы
	|		ПО ВТЗаявления.Заявление = ЗаявленияПовторы.Заявление
	|			И ВТЗаявления.НомерСтроки < ЗаявленияПовторы.НомерСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТЗаявления.Заявление,
	|	ЗаявленияПовторы.НомерСтроки
	|ИТОГИ ПО
	|	Заявление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗаявления.НомерСтроки,
	|	ВТЗаявления.Заявление
	|ИЗ
	|	ВТЗаявления КАК ВТЗаявления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК ЗаявлениеСотрудникаНаВыплатуПособия
	|		ПО ВТЗаявления.Заявление = ЗаявлениеСотрудникаНаВыплатуПособия.Ссылка
	|ГДЕ
	|	НЕ ЗаявлениеСотрудникаНаВыплатуПособия.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗаявления.НомерСтроки,
	|	РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособийСведенияНеобходимыеДляНазначенияПособий.Ссылка
	|ИЗ
	|	ВТЗаявления КАК ВТЗаявления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособий.СведенияНеобходимыеДляНазначенияПособий КАК РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособийСведенияНеобходимыеДляНазначенияПособий
	|		ПО ВТЗаявления.Заявление = РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособийСведенияНеобходимыеДляНазначенияПособий.Заявление
	|ГДЕ
	|	РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособийСведенияНеобходимыеДляНазначенияПособий.Ссылка <> &Ссылка
	|	И НЕ РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособийСведенияНеобходимыеДляНазначенияПособий.Ссылка.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Заявления", ЭтотОбъект.СведенияНеобходимыеДляНазначенияПособий.Выгрузить( ,"НомерСтроки, Заявление"));
	
	УстановитьПривилегированныйРежим(Истина);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	ПовторяющиесяЗаявления = МассивРезультатов[1]; 
	НепроведенныеЗаявления = МассивРезультатов[2];
	УжеИспользованныеЗаявления = МассивРезультатов[3];	
	
	Ошибки = Неопределено;
	
	Если Не ПовторяющиесяЗаявления.Пустой() Тогда
		Выборка = ПовторяющиесяЗаявления.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			Текст = НСтр("ru  = '%1 использовано в нескольких строках: %2.'");
			ВыборкаПоЗаявлению = Выборка.Выбрать();
			Если ВыборкаПоЗаявлению.Следующий() Тогда
				ТекстПовторныеСтроки = "" + ВыборкаПоЗаявлению.НомерСтроки + ", " + ВыборкаПоЗаявлению.НомерСтрокиПовтора;
				Пока ВыборкаПоЗаявлению.Следующий() Цикл
					ТекстПовторныеСтроки  = ТекстПовторныеСтроки + ", " + ВыборкаПоЗаявлению.НомерСтрокиПовтора; 
				КонецЦикла;
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Выборка.Заявление, ТекстПовторныеСтроки);
				ДобавитьОшибкуПользователю(Ошибки, "Заявление", Текст, Истина, Выборка.НомерСтроки);
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	
	Если Не НепроведенныеЗаявления.Пустой() Тогда
		Выборка = НепроведенныеЗаявления.Выбрать();
		Пока Выборка.Следующий() Цикл
			Текст = НСтр("ru  = 'Заявление в строке %1 непроведено.'");
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Выборка.НомерСтроки);
			ДобавитьОшибкуПользователю(Ошибки, "Заявление", Текст, "Непроведенные", Выборка.НомерСтроки);
		КонецЦикла;	
	КонецЕсли;
	
	Если Не УжеИспользованныеЗаявления.Пустой() Тогда
		Выборка = УжеИспользованныеЗаявления.Выбрать();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru  = 'Обнаружены заявления уже использованные ранее:'"));
		Пока Выборка.Следующий() Цикл
			Текст = НСтр("ru  = 'Заявление в строке %1 уже использовано в %2.'");
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Выборка.НомерСтроки, Выборка.Ссылка);
			ДобавитьОшибкуПользователю(Ошибки, "Заявление", Текст, "УжеИспользованные", Выборка.НомерСтроки);
		КонецЦикла;	
	КонецЕсли;

	Если НЕ Отказ Тогда
		Если ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПособияПоНетрудоспособности Тогда
			ПроверитьЗаполнениеСтрокСведенийПоВременнойНетрудоспособности(Отказ, Ошибки, ПроверяемыеРеквизиты);
		ИначеЕсли ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ЕжемесячныеПособияПоУходуЗаРебенком Тогда
			ПроверитьЗаполнениеСтрокСведенийПоУходуЗаРебенком(Отказ, Ошибки, ПроверяемыеРеквизиты)
		КонецЕсли;
	КонецЕсли;	
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения); 
		ОбновитьВторичныеДанныеДокумента(Истина, Ложь);	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеДокумента

Процедура ЗаполнитьДокумент() Экспорт
	СведенияПервичныхДокументов = ПрямыеВыплатыПособийСоциальногоСтрахования.СведенияПервичныхДокументовНеобходимыеДляНазначенияИВыплатыПособий(ЭтотОбъект);

	Если НЕ СведенияПервичныхДокументов = Неопределено Тогда
		СведенияНеобходимыеДляНазначенияПособий.Загрузить(СведенияПервичныхДокументов.Выгрузить());
	КонецЕсли;
КонецПроцедуры

Функция СведенияПервичногоДокументаНеобходимыеДляНазначенияИВыплатыПособий(Заявление) Экспорт
	
	СведенияПервичныхДокументов = ПрямыеВыплатыПособийСоциальногоСтрахования.СведенияПервичныхДокументовНеобходимыеДляНазначенияИВыплатыПособий(ЭтотОбъект, Заявление);
	
	Если НЕ СведенияПервичныхДокументов = Неопределено Тогда
		
		ДанныеСтроки = СведенияПервичныхДокументов.Выбрать();
		
		Если НЕ ДанныеСтроки.Следующий() Тогда
			ДанныеСтроки = Неопределено;
		КонецЕсли; 
		
	КонецЕсли;	
	
	Возврат ДанныеСтроки;
	
КонецФункции 

Процедура ОбновитьВторичныеДанныеДокумента(ДанныеОрганизации = Истина, ДанныеОПособиях = Истина, МассивЗаявлений = Неопределено) Экспорт
	
	Если ОбъектЗафиксирован() Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеОрганизации Тогда
		ОбновитьДанныеСтрахователя();
	КонецЕсли;
	
	Если ДанныеОПособиях Тогда
		ОбновитьСведенияПервичныхДокументовНеобходимыеДляНазначенияИВыплатыПособий(МассивЗаявлений);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьДанныеСтрахователя()
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаРеквизиты = "РегистрационныйНомерФСС,ДополнительныйКодФСС,КодПодчиненностиФСС,НаименованиеТерриториальногоОрганаФСС,Руководитель,ГлавныйБухгалтер,ДолжностьРуководителя,ТелефонОрганизации,ОГРН,ИНН,КПП,ТелефонСоставителя,АдресЭлектроннойПочтыСоставителя";
	
	РеквизитыДокумента = Новый Структура(СтрокаРеквизиты);
	
	СтрокаРеквизитыОрганизации = "РегистрационныйНомерФСС, КодПодчиненностиФСС, ДополнительныйКодФСС, НаименованиеТерриториальногоОрганаФСС, ОГРН";									
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, СтрокаРеквизитыОрганизации);
	
	ЗаполнитьЗначенияСвойств(РеквизитыДокумента, РеквизитыОрганизации, СтрокаРеквизитыОрганизации);
	
	ЗаполняемыеЗначения = Новый Структура("Организация,Руководитель,ДолжностьРуководителя,ГлавныйБухгалтер", Организация);
	ЗарплатаКадры.ПолучитьЗначенияПоУмолчанию(ЗаполняемыеЗначения);
	ЗаполняемыеЗначения.Свойство("Руководитель", РеквизитыДокумента.Руководитель);
	ЗаполняемыеЗначения.Свойство("ДолжностьРуководителя", РеквизитыДокумента.ДолжностьРуководителя);
	ЗаполняемыеЗначения.Свойство("ГлавныйБухгалтер", РеквизитыДокумента.ГлавныйБухгалтер);
	
	Сведения = Новый СписокЗначений;
	Сведения.Добавить("", "ТелОрганизации");
	Сведения.Добавить("", "АдресЭлектроннойПочтыОрганизации");
	Сведения.Добавить("", "ИННЮЛ");
	Сведения.Добавить("", "КППЮЛ");
	ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса()), Сведения);
	ОргСведения.Свойство("ТелОрганизации", РеквизитыДокумента.ТелефонСоставителя);
	ОргСведения.Свойство("АдресЭлектроннойПочтыОрганизации", РеквизитыДокумента.АдресЭлектроннойПочтыСоставителя);
	ОргСведения.Свойство("ИННЮЛ", РеквизитыДокумента.ИНН);
	ОргСведения.Свойство("КППЮЛ", РеквизитыДокумента.КПП);
	
	Запрос = ЗапросПоСтрокеПолей(СтрокаРеквизиты);
	
	ЗаполнитьЗначенияСвойств(Запрос.Параметры, РеквизитыДокумента); 
	
	Запрос.Выполнить();
	
	ФиксацияВторичныхДанныхВДокументах.ОбновитьВторичныеДанные(Запрос.МенеджерВременныхТаблиц, ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбновитьСведенияПервичныхДокументовНеобходимыеДляНазначенияИВыплатыПособий(МассивЗаявлений = Неопределено)
	
	Если ОбъектЗафиксирован() Тогда
		Возврат;
	КонецЕсли;
	
	СведенияПервичныхДокументов = ПрямыеВыплатыПособийСоциальногоСтрахования.СведенияПервичныхДокументовНеобходимыеДляНазначенияИВыплатыПособий(ЭтотОбъект);
	
	Если СведенияПервичныхДокументов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПособияПоНетрудоспособности Тогда
		ИмяГруппыОписания = "ПособияПоНетрудоспособности";
	ИначеЕсли ВидРеестра = Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ЕжемесячныеПособияПоУходуЗаРебенком Тогда
		ИмяГруппыОписания = "ЕжемесячныеПособияПоУходуЗаРебенком";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("ДанныеСтрок", СведенияПервичныхДокументов.Выгрузить());
	Запрос.УстановитьПараметр("МассивЗаявлений", ?(МассивЗаявлений = Неопределено,
	СведенияНеобходимыеДляНазначенияПособий.Выгрузить().ВыгрузитьКолонку("Заявление"),  
	МассивЗаявлений));
	
	ОписаниеФиксацииРеквизитов = Документы.РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПараметрыФиксацииВторичныхДанных().ОписаниеФиксацииРеквизитов;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеСтрок.Заявление КАК Заявление,";
	Для каждого ОписаниеРеквизита Из ОписаниеФиксацииРеквизитов Цикл
		Если ОписаниеРеквизита.Значение.ИмяГруппы <> ИмяГруппыОписания Тогда
			Продолжить;
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|	ДанныеСтрок." + ОписаниеРеквизита.Значение.ИмяРеквизита + " КАК " + ОписаниеРеквизита.Значение.ИмяРеквизита + ",";
	КонецЦикла;
	
	СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(Запрос.Текст, 1);
	
	Запрос.Текст = Запрос.Текст + "
	|ПОМЕСТИТЬ ВТВторичныеДанные
	|ИЗ
	|	&ДанныеСтрок КАК ДанныеСтрок
	|ГДЕ
	|	ДанныеСтрок.Заявление В(&МассивЗаявлений)";
	
	Запрос.Выполнить();
	
	ФиксацияВторичныхДанныхВДокументах.ОбновитьВторичныеДанные(Запрос.МенеджерВременныхТаблиц, ЭтотОбъект, "СведенияНеобходимыеДляНазначенияПособий");
	
КонецПроцедуры

#КонецОбласти  

#Область ПроверкаКорректностиЗаполненияДокумента

Процедура ПроверитьЗаполнениеСтрокСведенийПоВременнойНетрудоспособности(Отказ, Ошибки, ПроверяемыеРеквизиты)
	
	Группа = "СведенияНеобходимыеДляНазначенияПособий";
	ДлинаСуток = 86400;
	
	МассивЗаявлений = СведенияНеобходимыеДляНазначенияПособий.ВыгрузитьКолонку("Заявление");
	
	РеквизитыЗаявлений = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивЗаявлений, "ВидПособия,ТипЗанятостиРаботника,ДатаНачалаТрудовогоДоговораПолучателя,ДатаОкончанияТрудовогоДоговораПолучателя,ПорядокРасчетаСреднегоЗаработка");
	
	Для каждого Строка Из СведенияНеобходимыеДляНазначенияПособий Цикл
		
		Если Не ЗначениеЗаполнено(Строка.НомерЛисткаНетрудоспособности) Тогда
			Текст  = Нстр("ru = 'Номер листка нетрудоспособности обязателен к заполнению.'");
			ДобавитьОшибкуПользователю(Ошибки, "НомерЛисткаНетрудоспособности", Текст, Группа, Строка.НомерСтроки)
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.ДатаВыдачиЛисткаНетрудоспособности) Тогда
			Текст  = Нстр("ru = 'Дата выдачи листка нетрудоспособности обязательна к заполнению.'");
			ДобавитьОшибкуПользователю(Ошибки, "ДатаВыдачиЛисткаНетрудоспособности", Текст, Группа, Строка.НомерСтроки)
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.КодПричиныНетрудоспособности) Тогда
			Текст  = Нстр("ru = 'Код причины нетрудоспособности обязателен к заполнению.'");
			ДобавитьОшибкуПользователю(Ошибки, "КодПричиныНетрудоспособности", Текст, Группа, Строка.НомерСтроки)
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.МедицинскаяОрганизация) Тогда
			Текст  = Нстр("ru = 'Медицинская организация, выдавшая листок нетрудоспособности, обязательна к заполнению.'");
			ДобавитьОшибкуПользователю(Ошибки, "МедицинскаяОрганизация", Текст, Группа, Строка.НомерСтроки)
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.НаименованиеМедицинскойОрганизации) Тогда
			Текст  = Нстр("ru = 'У медицинской организации должно быть указано наименование.'");
			ДобавитьОшибкуПользователю(Ошибки, "НаименованиеМедицинскойОрганизации", Текст, Группа, Строка.НомерСтроки)
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.ОГРНМедицинскойОрганизации) Тогда
			Текст  = Нстр("ru = 'У медицинской организации должен быть указан ОГРН.'");
			ДобавитьОшибкуПользователю(Ошибки, "ОГРНМедицинскойОрганизации", Текст, Группа, Строка.НомерСтроки)
		КонецЕсли;
		
		РеквизитыЗаявления = РеквизитыЗаявлений.Получить(Строка.Заявление);
		
		Если РеквизитыЗаявления <> Неопределено Тогда
			Если РеквизитыЗаявления.ТипЗанятостиРаботника = Перечисления.ВидыЗанятости.Совместительство
				И Не ЗначениеЗаполнено(Строка.НомерЛисткаПоОсновномуМестуРаботы) Тогда
				Текст  = Нстр("ru = 'Для совместителя должен быть указан номер листка нетрудоспособности, предъявляемого на основном месте работы.'");
				ДобавитьОшибкуПользователю(Ошибки, "НомерЛисткаПоОсновномуМестуРаботы", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
			
			Если (РеквизитыЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам
				Или РеквизитыЗаявления.ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки) Тогда
				
				Если Строка.КодПричиныНетрудоспособности <> "05" Тогда
					Текст  = Нстр("ru = 'Для пособия по беременности и родам должен быть указан код причины нетрудоспособности 05.'");
					ДобавитьОшибкуПользователю(Ошибки, "КодПричиныНетрудоспособности", Текст, Группа, Строка.НомерСтроки);
				КонецЕсли;
				
				Если РеквизитыЗаявления.ПорядокРасчетаСреднегоЗаработка <> Перечисления.СпособыРасчетаСреднегоЗаработкаДляОплатыПособия.СреднийЗаработок Тогда
					ДатаПроверки = УчетПособийСоциальногоСтрахованияКлиентСервер.ДатаОтдельногоРасчетаПособийПоМатеринству();	
					Если Строка.ОсвобождениеДатаНачала1 >= ДатаПроверки Тогда
						Текст  = Нстр("ru = 'Для отпуска по беременности и родам, начинающегося 1 января 2013 года или позже, указан недопустимый порядок расчета среднего заработка: из оклада или МРОТ.'");
						ДобавитьОшибкуПользователю(Ошибки, "", Текст, Группа, Строка.НомерСтроки);
					КонецЕсли;
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(Строка.ДатаИзмененияКодаПричиныНетрудоспособности) Тогда
					Текст = Нстр("ru = 'Для пособия по беременности и родам в поле ""Дата 1"" должна быть указана предполагаемая дата родов.'");
					ДобавитьОшибкуПользователю(Ошибки, "ДатаИзмененияКодаПричиныНетрудоспособности", Текст, Группа, Строка.НомерСтроки);
				КонецЕсли;
				
			КонецЕсли;
			
			Если СтрНайти("," + Строка.УсловияИсчисленияКод1 + "," + Строка.УсловияИсчисленияКод2 + "," + Строка.УсловияИсчисленияКод3 + ",", ",46,") > 0 
				И (НЕ ЗначениеЗаполнено(РеквизитыЗаявления.ДатаНачалаТрудовогоДоговораПолучателя) 
				Или НЕ ЗначениеЗаполнено(РеквизитыЗаявления.ДатаОкончанияТрудовогоДоговораПолучателя)) Тогда
				Текст  = Нстр("ru = 'Для принятого по срочному трудовому договору сроком менее 6 месяцев должен быть указан период этого договора.'");
				ДобавитьОшибкуПользователю(Ошибки, "ДатаНачалаТрудовогоДоговораПолучателя", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
		КонецЕсли;
		
		Если СтрНайти("," + Строка.УсловияИсчисленияКод1 + "," + Строка.УсловияИсчисленияКод2 + "," + Строка.УсловияИсчисленияКод3 + ",", ",43,") > 0 
			И Не ЗначениеЗаполнено(Строка.ФинансированиеФедеральнымБюджетом) Тогда
			Текст  = Нстр("ru = 'Для лица, подвергшегося воздействию радиации, не указана причина этого воздействия'");
			ДобавитьОшибкуПользователю(Ошибки, "ФинансированиеФедеральнымБюджетом", Текст, Группа, Строка.НомерСтроки);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ВторойКодПричиныНетрудоспособности) 
			И Не ЗначениеЗаполнено(Строка.ДатаИзмененияКодаПричиныНетрудоспособности) Тогда
			Текст  = Нстр("ru = 'Если изменен код причины нетрудоспособности, в поле ""Дата 1"" должна быть указана дата этого изменения.'");
			ДобавитьОшибкуПользователю(Ошибки, "ДатаИзмененияКодаПричиныНетрудоспособности", Текст, Группа, Строка.НомерСтроки);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ДатаОкончанияПутевки) 
			И Не ЗначениеЗаполнено(Строка.ДатаИзмененияКодаПричиныНетрудоспособности) Тогда
			Текст  = Нстр("ru = 'Если в поле ""Дата 2"" указана дата окончания путевки, в поле ""Дата 1"" должна быть указана дата начала.'");
			ДобавитьОшибкуПользователю(Ошибки, "ДатаИзмененияКодаПричиныНетрудоспособности", Текст, Группа, Строка.НомерСтроки);
		КонецЕсли;
		
		Если (ЗначениеЗаполнено(Строка.ДатаИзмененияКодаПричиныНетрудоспособности) 
			И СтрНайти(",017,018,019,", "," + Строка.ДополнительныйКодПричиныНетрудоспособности + ",") > 0)
			ИЛИ Строка.КодПричиныНетрудоспособности = "08"
			ИЛИ Строка.ВторойКодПричиныНетрудоспособности = "08" Тогда
			Если Не ЗначениеЗаполнено(Строка.ДатаОкончанияПутевки) Тогда
				Текст  = Нстр("ru = 'Если указана дата начала санаторной путевки, то в поле ""Дата 2"" должна быть указана дата окончания путевки.'");
				ДобавитьОшибкуПользователю(Ошибки, "ДатаОкончанияПутевки", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Строка.ОГРН_Санатория) Тогда
				Текст  = Нстр("ru = 'Если указана дата начала санаторной путевки, то должен быть указан ОГРН санатория.'");
				ДобавитьОшибкуПользователю(Ошибки, "ОГРН_Санатория", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
		КонецЕсли;
		
		СтрокаКодовУхода = ",09,12,13,14,15,";
		ПроверятьДанныеБольногоЧленаСемьи = ЗначениеЗаполнено(Строка.КодПричиныНетрудоспособности) И СтрНайти(СтрокаКодовУхода, "," + Строка.КодПричиныНетрудоспособности + ",") > 0
		Или ЗначениеЗаполнено(Строка.ВторойКодПричиныНетрудоспособности) И СтрНайти(СтрокаКодовУхода, "," + Строка.ВторойКодПричиныНетрудоспособности + ",") > 0;
		
		Если ПроверятьДанныеБольногоЧленаСемьи Тогда
			Если Не ЗначениеЗаполнено(Строка.ПоУходуВозрастЛет1 + Строка.ПоУходуВозрастМесяцев1) 
				Или Не ЗначениеЗаполнено(Строка.ПоУходуРодственнаяСвязь1) Или Не ЗначениеЗаполнено(Строка.ПоУходуФИО1) Тогда
				Текст  = Нстр("ru = 'Для листка нетрудоспособности по уходу должны быть указаны данные больного, за которым осуществлялся уход.'");
				ДобавитьОшибкуПользователю(Ошибки, "ПоУходуВозрастЛет1", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
			Если ЗначениеЗаполнено(Строка.ПоУходуФИО2) Тогда
				Если Не ЗначениеЗаполнено(Строка.ПоУходуВозрастЛет2 + Строка.ПоУходуВозрастМесяцев2) Тогда
					Текст  = Нстр("ru = 'Если указано ФИО второго больного родственника, за которым осуществлялся уход, то должен быть указан его возраст.'");
					ДобавитьОшибкуПользователю(Ошибки, "ПоУходуВозрастЛет2", Текст, Группа, Строка.НомерСтроки);
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Строка.ПоУходуРодственнаяСвязь2) Тогда
					Текст  = Нстр("ru = 'Если указано ФИО второго больного родственника, за которым осуществлялся уход, то должна быть указана родственная связь.'");
					ДобавитьОшибкуПользователю(Ошибки, "ПоУходуРодственнаяСвязь2", Текст, Группа, Строка.НомерСтроки);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ДатаНарушенияРежима) Или ЗначениеЗаполнено(Строка.КодНарушенияРежима) Тогда
			Если Не ЗначениеЗаполнено(Строка.ДатаНарушенияРежима) Тогда
				Текст  = Нстр("ru = 'Указана дата нарушения режима, но не указан код нарушения режима.'");
				ДобавитьОшибкуПользователю(Ошибки, "ДатаНарушенияРежима", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Строка.КодНарушенияРежима) Тогда
				Текст  = Нстр("ru = 'Указан код нарушения режима, но не указана дата нарушения режима.'");
				ДобавитьОшибкуПользователю(Ошибки, "КодНарушенияРежима", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.ОсвобождениеДатаНачала1) И Не ЗначениеЗаполнено(Строка.ОсвобождениеДатаНачала2) И Не ЗначениеЗаполнено(Строка.ОсвобождениеДатаНачала3) Тогда
			Текст  = Нстр("ru = 'Должен быть указан хотя бы один период освобождения от работы.'");
			ДобавитьОшибкуПользователю(Ошибки, "ОсвобождениеС1", Текст, Группа, Строка.НомерСтроки);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ОсвобождениеДатаНачала1) И Не ЗначениеЗаполнено(Строка.ОсвобождениеДатаОкончания1) Тогда
			Текст  = Нстр("ru = 'Не указана дата окончания первого периода освобождения от работы.'");
			ДобавитьОшибкуПользователю(Ошибки, "ОсвобождениеДатаОкончания1", Текст, Группа, Строка.НомерСтроки);
		ИначеЕсли ЗначениеЗаполнено(Строка.ОсвобождениеДатаНачала1) И ЗначениеЗаполнено(Строка.ОсвобождениеДатаОкончания1) 
			И Строка.ОсвобождениеДатаНачала1 > Строка.ОсвобождениеДатаОкончания1 Тогда
			Текст  = Нстр("ru = 'Неверно указаны даты начала и окончания первого периода освобождения от работы.'");
			ДобавитьОшибкуПользователю(Ошибки, "ОсвобождениеДатаОкончания1", Текст, Группа, Строка.НомерСтроки);
		ИначеЕсли Строка.ДатаВыдачиЛисткаНетрудоспособности > Строка.ОсвобождениеДатаНачала1 
			И Не ЗначениеЗаполнено(Строка.ПериодНахожденияВСтационареСРебенкомС) 
			И Не ЗначениеЗаполнено(Строка.ПериодНахожденияВСтационареСРебенкомПо) Тогда
			Текст  = Нстр("ru = 'Листок нетрудоспособности в строке %1 выдан позже начала освобождения от работы. Проверьте эти даты.'");
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Текст, Формат(Строка.НомерСтроки, "ЧН=0; ЧГ="));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ОсвобождениеДатаНачала1) Тогда
			Если Не ЗначениеЗаполнено(Строка.ОсвобождениеФИОВрача1) Тогда
				Текст  = Нстр("ru = 'В строке первого периода освобождения от работы не указано ФИО врача.'");
				ДобавитьОшибкуПользователю(Ошибки, "ОсвобождениеФИОВрача1", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Строка.ОсвобождениеДолжностьВрача1) Тогда
				Текст  = Нстр("ru = 'В строке первого периода освобождения от работы не указана должность врача.'");
				ДобавитьОшибкуПользователю(Ошибки, "ОсвобождениеДолжностьВрача1", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ОсвобождениеДатаНачала2) Тогда
			Если Не ЗначениеЗаполнено(Строка.ОсвобождениеДатаОкончания2) Тогда
				Текст  = Нстр("ru = 'Не указана дата окончания второго периода освобождения от работы.'");
				ДобавитьОшибкуПользователю(Ошибки, "ОсвобождениеДатаОкончания2", Текст, Группа, Строка.НомерСтроки);
			ИначеЕсли ЗначениеЗаполнено(Строка.ОсвобождениеДатаОкончания2) И Строка.ОсвобождениеДатаНачала2 > Строка.ОсвобождениеДатаОкончания2 Тогда
				Текст  = Нстр("ru = 'Неверно указаны даты начала и окончания второго периода освобождения от работы.'");
				ДобавитьОшибкуПользователю(Ошибки, "ОсвобождениеДатаОкончания2", Текст, Группа, Строка.НомерСтроки);
			ИначеЕсли Строка.ОсвобождениеДатаОкончания1 + ДлинаСуток <> Строка.ОсвобождениеДатаНачала2 Тогда
				Текст  = Нстр("ru = 'Начало второго периода освобождения от работы должно непосредственно следовать за окончанием первого периода.'");
				ДобавитьОшибкуПользователю(Ошибки, "ОсвобождениеДатаНачала2", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Строка.ОсвобождениеФИОВрача2) Тогда
				Текст  = Нстр("ru = 'В строке второго периода освобождения от работы не указано ФИО врача.'");
				ДобавитьОшибкуПользователю(Ошибки, "ОсвобождениеФИОВрача2", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Строка.ОсвобождениеДолжностьВрача2) Тогда
				Текст  = Нстр("ru = 'В строке второго периода освобождения от работы не указана должность врача.'");
				ДобавитьОшибкуПользователю(Ошибки, "ОсвобождениеДолжностьВрача2", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ОсвобождениеДатаНачала3) Тогда
			Если Не ЗначениеЗаполнено(Строка.ОсвобождениеДатаОкончания3) Тогда
				Текст  = Нстр("ru = 'Не указана дата окончания третьего периода освобождения от работы.'");
				ДобавитьОшибкуПользователю(Ошибки, "ОсвобождениеДатаОкончания3", Текст, Группа, Строка.НомерСтроки);
			ИначеЕсли ЗначениеЗаполнено(Строка.ОсвобождениеДатаОкончания3) И Строка.ОсвобождениеДатаНачала3 > Строка.ОсвобождениеДатаОкончания3 Тогда
				Текст  = Нстр("ru = 'Неверно указаны даты начала и окончания третьего периода освобождения от работы.'");
				ДобавитьОшибкуПользователю(Ошибки, "ОсвобождениеДатаОкончания3", Текст, Группа, Строка.НомерСтроки);
			ИначеЕсли Строка.ОсвобождениеДатаОкончания2 + ДлинаСуток <> Строка.ОсвобождениеДатаНачала3 Тогда
				Текст  = Нстр("ru = 'Начало третьего периода освобождения от работы должно непосредственно следовать за окончанием второго периода.'");
				ДобавитьОшибкуПользователю(Ошибки, "ОсвобождениеДатаНачала3", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Строка.ОсвобождениеФИОВрача3) Тогда
				Текст  = Нстр("ru = 'В строке третьего периода освобождения от работы не указано ФИО врача.'");
				ДобавитьОшибкуПользователю(Ошибки, "ОсвобождениеФИОВрача3", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Строка.ОсвобождениеДолжностьВрача3) Тогда
				Текст  = Нстр("ru = 'В строке третьего периода освобождения от работы не указана должность врача.'");
				ДобавитьОшибкуПользователю(Ошибки, "ОсвобождениеДолжностьВрача3", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ДатаНачалаОплаты) И Не ЗначениеЗаполнено(Строка.ДатаОкончанияОплаты) Тогда
			Текст  = Нстр("ru = 'Не указана дата окончания периода выплаты пособия за счет ФСС.'");
			ДобавитьОшибкуПользователю(Ошибки, "ДатаОкончанияОплаты", Текст, Группа, Строка.НомерСтроки);
		ИначеЕсли ЗначениеЗаполнено(Строка.ДатаОкончанияОплаты) И Не ЗначениеЗаполнено(Строка.ДатаНачалаОплаты) Тогда
			Текст  = Нстр("ru = 'Не указана дата начала периода выплаты пособия за счет ФСС.'");
			ДобавитьОшибкуПользователю(Ошибки, "ДатаНачалаОплаты", Текст, Группа, Строка.НомерСтроки);
		ИначеЕсли ЗначениеЗаполнено(Строка.ДатаОкончанияОплаты) И ЗначениеЗаполнено(Строка.ДатаНачалаОплаты) Тогда
			Если Строка.ДатаНачалаОплаты > Строка.ДатаОкончанияОплаты Тогда
				Текст  = Нстр("ru = 'Неверно указаны даты начала и окончания периода выплаты пособия за счет ФСС.'");
				ДобавитьОшибкуПользователю(Ошибки, "ДатаОкончанияОплаты", Текст, Группа, Строка.НомерСтроки);
			Иначе
				Если ЗначениеЗаполнено(Строка.ОсвобождениеДатаНачала1) И Строка.ОсвобождениеДатаНачала1 > Строка.ДатаОкончанияОплаты Тогда
					Текст  = Нстр("ru = 'Дата начала освобождения от работы не может быть позже даты начала периода выплаты пособия за счет ФСС.'");
					ДобавитьОшибкуПользователю(Ошибки, "ДатаОкончанияОплаты", Текст, Группа, Строка.НомерСтроки);
				КонецЕсли;
				Если Строка.ДатаОкончанияОплаты > Макс(Строка.ОсвобождениеДатаОкончания1, Строка.ОсвобождениеДатаОкончания2, Строка.ОсвобождениеДатаОкончания3) Тогда
					Текст  = Нстр("ru = 'Дата окончания периода выплаты пособия за счет ФСС не может быть позже даты окончания периода освобождения от работы.'");
					ДобавитьОшибкуПользователю(Ошибки, "ДатаОкончанияОплаты", Текст, Группа, Строка.НомерСтроки);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.НовыйСтатусНетрудоспособного) Или ЗначениеЗаполнено(Строка.ДатаНовыйСтатусНетрудоспособного) Тогда
			СтрокаКодовИное = ",32,33,34,36,";
			Если ЗначениеЗаполнено(Строка.НовыйСтатусНетрудоспособного) И СтрНайти(СтрокаКодовИное, "," + Строка.НовыйСтатусНетрудоспособного + ",") > 0 
				И Не ЗначениеЗаполнено(Строка.ДатаНовыйСтатусНетрудоспособного) Тогда
				Текст  = Нстр("ru = 'В поле ""Иное"" указан код, требующий указания даты изменения состояния, однако дата изменения состояния нетрудоспособного не указана.'");
				ДобавитьОшибкуПользователю(Ошибки, "ДатаНовыйСтатусНетрудоспособного", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Строка.НовыйСтатусНетрудоспособного) И ЗначениеЗаполнено(Строка.ДатаНовыйСтатусНетрудоспособного) Тогда
				Текст  = Нстр("ru = 'Указана дата изменения состояния нетрудоспособного, но не указан код в поле ""Иное"".'");
				ДобавитьОшибкуПользователю(Ошибки, "НовыйСтатусНетрудоспособного", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
		Иначе
			Если Не ЗначениеЗаполнено(Строка.ПриступитьКРаботеС) Тогда
				Текст  = Нстр("ru = 'Не указана дата в поле ""Приступить к работе с:"".'");
				ДобавитьОшибкуПользователю(Ошибки, "ПриступитьКРаботеС", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ПериодНахожденияВСтационареСРебенкомС) Или ЗначениеЗаполнено(Строка.ПериодНахожденияВСтационареСРебенкомПо) Тогда
			
			Если ЗначениеЗаполнено(Строка.ПериодНахожденияВСтационареСРебенкомС) И Не ЗначениеЗаполнено(Строка.ПериодНахожденияВСтационареСРебенкомПо) Тогда
				Текст  = Нстр("ru = 'Указана дата начала, но не указана дата окончания периода нахождения в стационаре.'");
				ДобавитьОшибкуПользователю(Ошибки, "ПериодНахожденияВСтационареСРебенкомПо", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Строка.ПериодНахожденияВСтационареСРебенкомС) И ЗначениеЗаполнено(Строка.ПериодНахожденияВСтационареСРебенкомПо) Тогда
				Текст  = Нстр("ru = 'Указана дата окончания, но не указана дата начала периода нахождения в стационаре.'");
				ДобавитьОшибкуПользователю(Ошибки, "ПериодНахожденияВСтационареСРебенкомС", Текст, Группа, Строка.НомерСтроки);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.ПериодНахожденияВСтационареСРебенкомС) И ЗначениеЗаполнено(Строка.ПериодНахожденияВСтационареСРебенкомПо) Тогда
				Если Строка.ПериодНахожденияВСтационареСРебенкомС > Строка.ПериодНахожденияВСтационареСРебенкомПо Тогда
					Текст  = Нстр("ru = 'Неверно указаны даты начала и окончания периода нахождения в стационаре.'");
					ДобавитьОшибкуПользователю(Ошибки, "ПериодНахожденияВСтационареСРебенкомПо", Текст, Группа, Строка.НомерСтроки);
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Строка.НовыйСтатусНетрудоспособного = "31" И Не ЗначениеЗаполнено(Строка.НомерЛисткаПродолжения) Тогда
			Текст  = Нстр("ru = 'Для продолжающего болеть должен быть указан номер листка нетрудоспособности-продолжения.'");
			ДобавитьОшибкуПользователю(Ошибки, "НомерЛисткаПродолжения", Текст, Группа, Строка.НомерСтроки);
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.НомерЛисткаНетрудоспособности");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ДатаВыдачиЛисткаНетрудоспособности");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.МедицинскаяОрганизация");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.НаименованиеМедицинскойОрганизации");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ОГРНМедицинскойОрганизации");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.КодПричиныНетрудоспособности");
	
КонецПроцедуры 

Процедура ПроверитьЗаполнениеСтрокСведенийПоУходуЗаРебенком(Отказ, Ошибки, ПроверяемыеРеквизиты)
	
	Группа = "СведенияНеобходимыеДляНазначенияПособий";
	
	Для каждого Строка Из СведенияНеобходимыеДляНазначенияПособий Цикл
		
		Если Не ЗначениеЗаполнено(Строка.ФамилияРебенка) Тогда
			Текст  = Нстр("ru = 'Фамилия ребенка обязателен к заполнению.'");
			ДобавитьОшибкуПользователю(Ошибки, "ФамилияРебенка", Текст, Группа, Строка.НомерСтроки)
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.ИмяРебенка) Тогда
			Текст  = Нстр("ru = 'Имя ребенка обязательно к заполнению.'");
			ДобавитьОшибкуПользователю(Ошибки, "ИмяРебенка", Текст, Группа, Строка.НомерСтроки)
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.ДатаРожденияРебенка) Тогда
			Текст  = Нстр("ru = 'Дата рождения ребенка обязательна к заполнению.'");
			ДобавитьОшибкуПользователю(Ошибки, "ДатаРожденияРебенка", Текст, Группа, Строка.НомерСтроки)
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.ОчередностьРожденияРебенка) Тогда
			Текст  = Нстр("ru = 'Очередность рождения ребенка обязательна к заполнению.'");
			ДобавитьОшибкуПользователю(Ошибки, "ОчередностьРожденияРебенка", Текст, Группа, Строка.НомерСтроки)
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.ВидПодтверждающегоДокумента) Тогда
			Текст  = Нстр("ru = 'Вид подтверждающего документа обязателен к заполнению.'");
			ДобавитьОшибкуПользователю(Ошибки, "ВидПодтверждающегоДокумента", Текст, Группа, Строка.НомерСтроки)
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.НаименованиеПодтверждающегоДокумента) Тогда
			Текст  = Нстр("ru = 'Наименование подтверждающего документа обязательно к заполнению.'");
			ДобавитьОшибкуПользователю(Ошибки, "НаименованиеПодтверждающегоДокумента", Текст, Группа, Строка.НомерСтроки)
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.ДатаДокумента) Тогда
			Текст  = Нстр("ru = 'Дата подтверждающего документа обязательна к заполнению.'");
			ДобавитьОшибкуПользователю(Ошибки, "ДатаДокумента", Текст, Группа, Строка.НомерСтроки)
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.ВидПодтверждающегоДокумента)
			И Строка.ВидПодтверждающегоДокумента = Перечисления.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОРождении
			И Не ЗначениеЗаполнено(Строка.СерияДокумента) Тогда
			Текст  = Нстр("ru = 'Серия подтверждающего документа обязательна к заполнению.'");
			ДобавитьОшибкуПользователю(Ошибки, "СерияДокумента", Текст, Группа, Строка.НомерСтроки)
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.НомерДокумента) Тогда
			Текст  = Нстр("ru = 'Номер подтверждающего документа обязателен к заполнению.'");
			ДобавитьОшибкуПользователю(Ошибки, "НомерДокумента", Текст, Группа, Строка.НомерСтроки)
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ОчередностьРожденияРебенка");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ФамилияРебенка");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ИмяРебенка");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ДатаРожденияРебенка");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ВидПодтверждающегоДокумента");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.НаименованиеПодтверждающегоДокумента");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.ДатаДокумента");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.СерияДокумента");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "СведенияНеобходимыеДляНазначенияПособий.НомерДокумента");
	
КонецПроцедуры

Процедура ДобавитьОшибкуПользователю(Ошибки, Поле, Текст, ГруппаОшибок, НомерСтроки)
	ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, Поле, Текст, ГруппаОшибок, НомерСтроки - 1, Текст);	
КонецПроцедуры	

#КонецОбласти

Функция ОбъектЗафиксирован() Экспорт
	
	Возврат НЕ ПрямыеВыплатыПособийСоциальногоСтрахования.СтатусПозволяетРедактироватьДокумент(СтатусДокумента);
	
КонецФункции 

Функция ЗапросПоСтрокеПолей(СтрокаПолей)
	
	Запрос = Новый Запрос;  
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ШаблонПоля = " ЕстьNULL(&#Парам#, """") КАК #Парам#,";
	
	Текст = "ВЫБРАТЬ #Поля#
	|	ПОМЕСТИТЬ ВТВторичныеДанные";
	
	Поля = "";
	
	МассивПолей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаПолей);
	Для каждого Поле Из МассивПолей Цикл
		Поля = Поля + Символы.ПС + СтрЗаменить(ШаблонПоля, "#Парам#", Поле);
		Запрос.Параметры.Вставить(Поле);
	КонецЦикла;
	
	СтроковыеФункцииКлиентСервер.УдалитьПоследнийСимволВСтроке(Поля, 1);
	Запрос.Текст = СтрЗаменить(Текст, "#Поля#", Поля);
	
	Возврат Запрос
	
КонецФункции 

Процедура ЗаполнитьФизическихЛицИзЗаявлений()
	
	ФизическиеЛица.Очистить();
	
	Если СведенияНеобходимыеДляНазначенияПособий.Количество() > 0 Тогда
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявлениеСотрудникаНаВыплатуПособия.ФизическоеЛицо
		|ИЗ
		|	Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК ЗаявлениеСотрудникаНаВыплатуПособия
		|ГДЕ
		|	ЗаявлениеСотрудникаНаВыплатуПособия.Ссылка В(&МассивСсылок)";
		Запрос.УстановитьПараметр("МассивСсылок", СведенияНеобходимыеДляНазначенияПособий.ВыгрузитьКолонку("Заявление"));
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицуИзМассива(ФизическиеЛица, Результат.Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо"), "ФизическоеЛицо");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
