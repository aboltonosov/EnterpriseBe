#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	Возврат ИсточникиДанных;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства);
	
	ТекстыЗапроса = Новый СписокЗначений;
	РегистрацияТранспортныхСредств(ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Ложь, Ложь, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Операция.Организация,
	|	Операция.Дата
	|ИЗ
	|	Документ.ОтменаРегистрацииТранспортныхСредств КАК Операция
	|ГДЕ
	|	Операция.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ()
	
	ВходящиеДанные = Новый Соответствие;
	
	ЗакрытиеМесяцаУТВызовСервера.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ВходящиеДанные, НСтр("ru = 'Отмена регистрации земельных участков'"));
	
КонецПроцедуры

Процедура ВременнаяТаблицаТабличнаяЧастьДокумента(ТекстыЗапроса)
	
	ИмяТаблицы = "втТабличнаяЧастьДокумента";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втТабличнаяЧастьДокумента
	|"+
	"ВЫБРАТЬ
	|	ТабличнаяЧастьДокумента.Ссылка,
	|	ТабличнаяЧастьДокумента.НомерСтроки,
	|	ТабличнаяЧастьДокумента.ОсновноеСредство
	|ПОМЕСТИТЬ втТабличнаяЧастьДокумента
	|ИЗ
	|	Документ.ОтменаРегистрацииТранспортныхСредств.ОС КАК ТабличнаяЧастьДокумента
	|ГДЕ
	|	ТабличнаяЧастьДокумента.Ссылка = &Ссылка"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаРегистрация(ТекстыЗапроса)
	
	ИмяТаблицы = "втРегистрация";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаТабличнаяЧастьДокумента(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втРегистрация
	|"+
	"ВЫБРАТЬ
	|	ДанныеРегистра.ОсновноеСредство,
	|	ДанныеРегистра.РегистрационныйЗнак,
	|	ДанныеРегистра.ИдентификационныйНомер,
	|	ДанныеРегистра.Марка,
	|	ДанныеРегистра.ПостановкаНаУчетВНалоговомОргане,
	|	ДанныеРегистра.НалоговыйОрган,
	|	ДанныеРегистра.КодПоОКТМО,
	|	ДанныеРегистра.КодПоОКАТО,
	|	ДанныеРегистра.КодВидаТранспортногоСредства,
	|	ДанныеРегистра.НалоговаяБаза,
	|	ДанныеРегистра.ЕдиницаИзмеренияНалоговойБазы,
	|	ДанныеРегистра.НалоговаяСтавка,
	|	ДанныеРегистра.НалоговаяЛьгота,
	|	ДанныеРегистра.КодНалоговойЛьготы,
	|	ДанныеРегистра.ЛьготнаяСтавка,
	|	ДанныеРегистра.ПроцентУменьшения,
	|	ДанныеРегистра.СуммаУменьшения,
	|	ДанныеРегистра.РегиональныйКодЛьготы,
	|	ДанныеРегистра.ЭкологическийКласс,
	|	ДанныеРегистра.УдалитьЭкологическийКласс,
	|	ДанныеРегистра.ОбщаяСобственность,
	|	ДанныеРегистра.ДоляВПравеОбщейСобственностиЧислитель,
	|	ДанныеРегистра.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ДанныеРегистра.ПовышающийКоэффициент,
	|	ДанныеРегистра.НалоговаяСтавкаЗависитОтГодаВыпускаТС
	|ПОМЕСТИТЬ втРегистрация
	|ИЗ
	|	РегистрСведений.РегистрацияТранспортныхСредств.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация
	|				И Регистратор <> &Ссылка
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						Т.ОсновноеСредство
	|					ИЗ
	|						втТабличнаяЧастьДокумента КАК Т)) КАК ДанныеРегистра"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура РегистрацияТранспортныхСредств(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РегистрацияТранспортныхСредств";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаТабличнаяЧастьДокумента(ТекстыЗапроса);
	ВременнаяТаблицаРегистрация(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица РегистрацияТранспортныхСредств
	|"+
	"ВЫБРАТЬ
	|	&Ссылка КАК Регистратор,
	|	&Дата КАК Период,
	|	
	|	&Организация КАК Организация,
	|	втТабличнаяЧастьДокумента.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	ЛОЖЬ КАК ВключатьВНалоговуюБазу,
	|	втРегистрация.РегистрационныйЗнак КАК РегистрационныйЗнак,
	|	втРегистрация.ИдентификационныйНомер КАК ИдентификационныйНомер,
	|	втРегистрация.Марка КАК Марка,
	|	втРегистрация.ПостановкаНаУчетВНалоговомОргане КАК ПостановкаНаУчетВНалоговомОргане,
	|	втРегистрация.НалоговыйОрган КАК НалоговыйОрган,
	|	втРегистрация.КодПоОКТМО КАК КодПоОКТМО,
	|	втРегистрация.КодПоОКАТО КАК КодПоОКАТО,
	|	втРегистрация.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства,
	|	втРегистрация.НалоговаяБаза КАК НалоговаяБаза,
	|	втРегистрация.ЕдиницаИзмеренияНалоговойБазы КАК ЕдиницаИзмеренияНалоговойБазы,
	|	втРегистрация.НалоговаяСтавка КАК НалоговаяСтавка,
	|	втРегистрация.НалоговаяЛьгота КАК НалоговаяЛьгота,
	|	втРегистрация.КодНалоговойЛьготы КАК КодНалоговойЛьготы,
	|	втРегистрация.ЛьготнаяСтавка КАК ЛьготнаяСтавка,
	|	втРегистрация.ПроцентУменьшения КАК ПроцентУменьшения,
	|	втРегистрация.СуммаУменьшения КАК СуммаУменьшения,
	|	втРегистрация.РегиональныйКодЛьготы КАК РегиональныйКодЛьготы,
	|	втРегистрация.ЭкологическийКласс КАК ЭкологическийКласс,
	|	втРегистрация.ОбщаяСобственность КАК ОбщаяСобственность,
	|	втРегистрация.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	втРегистрация.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	втРегистрация.ПовышающийКоэффициент КАК ПовышающийКоэффициент,
	|	втРегистрация.НалоговаяСтавкаЗависитОтГодаВыпускаТС КАК НалоговаяСтавкаЗависитОтГодаВыпускаТС,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидЗаписиОРегистрации.СнятиеСРегистрационногоУчета) КАК ВидЗаписи
	|	
	|ИЗ
	|	втТабличнаяЧастьДокумента КАК втТабличнаяЧастьДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРегистрация КАК втРегистрация
	|		ПО втТабличнаяЧастьДокумента.ОсновноеСредство = втРегистрация.ОсновноеСредство"+";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемы

Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
	
	Возврат; //В дальнейшем будет добавлен код настроек версионирования
	
КонецПроцедуры

Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Возврат; //В дальнейшем будет добавлен код команд
	
КонецПроцедуры

Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
