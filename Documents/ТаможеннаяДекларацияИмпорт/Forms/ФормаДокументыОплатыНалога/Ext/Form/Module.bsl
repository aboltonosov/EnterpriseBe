&НаКлиенте
Перем ВыполняетсяЗакрытие;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("АдресВХранилище") Тогда
		ДокументыРасчетаБрокераСТаможней.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресВХранилище));
	КонецЕсли; 

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "ДокументыРасчетаБрокераСТаможней.Дата", Элементы.ДокументыРасчетаБрокераСТаможнейДатаДокумента.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ ВыполняетсяЗакрытие и Модифицированность И НЕ ЗавершениеРаботы Тогда
		Отказ = Истина;
		ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект, Новый Структура("Отказ", Отказ)), 
			НСтр("ru='Данные не перенесены в таможенную декларацию. Перенести?'"), РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Проверка = Ложь;
	КодОтвета = РезультатВопроса;
	Если КодОтвета = КодВозвратаДиалога.Да Тогда
		ОчиститьСообщения();
		ПроверитьЗаполнениеТабличнойЧасти(Проверка);
		Если НЕ Проверка Тогда
			ВыполняетсяЗакрытие = Истина;
			Модифицированность = Ложь;
			Закрыть(ПоместитьРасчетныеДокументыВХранилище());
		КонецЕсли;
	Иначе
		ВыполняетсяЗакрытие = Истина;
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДокументыРасчетаБрокераСТаможнейПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ЕстьОшибки = Ложь;
	
	ОчиститьСообщения();
	ПроверитьЗаполнениеТабличнойЧасти(ЕстьОшибки);
	Если НЕ ЕстьОшибки Тогда
		Модифицированность = Ложь;
		Закрыть(ПоместитьРасчетныеДокументыВХранилище());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Функция ПоместитьРасчетныеДокументыВХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(ДокументыРасчетаБрокераСТаможней.Выгрузить());
	
КонецФункции

&НаСервере
Процедура ПроверитьЗаполнениеТабличнойЧасти(Отказ)
	
	Для ТекИндекс = 0 По ДокументыРасчетаБрокераСТаможней.Количество()-1 Цикл
		
		Если ПустаяСтрока(ДокументыРасчетаБрокераСТаможней[ТекИндекс].НомерДокумента) Тогда
			ТекстОшибки = НСтр("ru='Не заполнен номер документа в строке %НомерСтроки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки,"%НомерСтроки%",ТекИндекс+1);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ДокументыРасчетаБрокераСТаможней", ТекИндекс+1, "НомерДокумента"),
				,
				Отказ);
		КонецЕсли;
		
		Если ДокументыРасчетаБрокераСТаможней[ТекИндекс].ДатаДокумента = Дата('00010101') Тогда
			ТекстОшибки = НСтр("ru='Не заполнена дата документа в строке %НомерСтроки%'");
			ТекстОшибки = СтрЗаменить( ТекстОшибки,"%НомерСтроки%",ТекИндекс+1);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки ,
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ДокументыРасчетаБрокераСТаможней", ТекИндекс+1, "ДатаДокумента"),
				,
				Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

ВыполняетсяЗакрытие = Ложь;