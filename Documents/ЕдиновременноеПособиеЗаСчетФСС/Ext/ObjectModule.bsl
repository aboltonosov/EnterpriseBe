#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подсистема "Управление доступом".

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "ФизическоеЛицо");
	
КонецПроцедуры

// Подсистема "Управление доступом".

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Действие") И ДанныеЗаполнения.Действие = "Исправить" Тогда
			
			ИсправлениеДокументовЗарплатаКадры.СкопироватьДокумент(ЭтотОбъект, ДанныеЗаполнения.Ссылка);
			
			ИсправленныйДокумент = ДанныеЗаполнения.Ссылка;
		ИначеЕсли ДанныеЗаполнения.Свойство("Сотрудник") И ЗначениеЗаполнено(ДанныеЗаполнения.Сотрудник) Тогда
			ДанныеЗаполнения = ДанныеЗаполнения.Сотрудник;
		КонецЕсли;
	КонецЕсли;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ПредставлениеПериода = ЗарплатаКадрыРасширенный.ПредставлениеПериодаРасчетногоДокумента(ДатаСобытия);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Не проверяем работет ли человек при выплате пособия стороннему физлицу
	Если Не ПособиеСтороннемуФизлицу() Тогда
		ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияРабочихМестВОрганизацийПоСпискуФизическихЛиц();
		ПараметрыПолученияСотрудниковОрганизаций.Организация 		= Организация;
		ПараметрыПолученияСотрудниковОрганизаций.НачалоПериода		= Дата;
		ПараметрыПолученияСотрудниковОрганизаций.ОкончаниеПериода	= Дата;
		
		КадровыйУчет.ПроверитьРаботающихФизическихЛиц(
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо),
			ПараметрыПолученияСотрудниковОрганизаций,
			Отказ,
			Новый Структура("ИмяПоляСотрудник, ИмяОбъекта", "ФизическоеЛицо", "Объект")
		);
	КонецЕсли;
			
	ИсправлениеДокументовЗарплатаКадры.ПроверитьЗаполнение(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ);
	
	Если ПорядокВыплаты <> Перечисления.ХарактерВыплатыЗарплаты.Межрасчет Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ПланируемаяДатаВыплаты");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// 4D:ERP для Беларуси, Яна, 09.08.2017 12:17:34 
	// Ошибки документа "Единовременное пособие за счет ФСС", №15698 
	// {
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДанныеДляПроведения = ДанныеДляПроведения();
	
	УчетНачисленнойЗарплаты.ЗарегистрироватьНачисленияУдержания(ЭтотОбъект.Движения, Отказ, Организация, ПериодРегистрации,
					ДанныеДляПроведения.НачисленияДокумента, Неопределено, Неопределено, Неопределено, ПорядокВыплаты);
	
	ОтражениеЗарплатыВБухучетеРасширенный.СформироватьДвиженияБухучетНачисленияУдержанияПоСотрудникам(
					Движения, Отказ, Организация, ПериодРегистрации,
					ДанныеДляПроведения.НачисленияДокумента,
					Неопределено,
					Неопределено,
					Истина);
	
	УчетСтраховыхВзносов.СформироватьСведенияОДоходахСтраховыеВзносы(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения.МенеджерВременныхТаблиц, , , Ссылка);
		
	Если ВидПособия = Перечисления.ПереченьПособийСоциальногоСтрахования.ПриРожденииРебенка Тогда
		Начисление = Перечисления.ВидыОсобыхНачисленийИУдержаний.ПособиеПриРожденииРебенка
	ИначеЕсли ВидПособия = Перечисления.ПереченьПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности Тогда
		Начисление = Перечисления.ВидыОсобыхНачисленийИУдержаний.ПособиеПриПостановкеНаУчетВРанниеСрокиБеременности
	Иначе
		Начисление = Перечисления.ВидыОсобыхНачисленийИУдержаний.ПустаяСсылка()
	КонецЕсли;
	Для каждого СтрокаНабора Из Движения.СведенияОДоходахСтраховыеВзносы Цикл
		СтрокаНабора.Начисление = Начисление
	КонецЦикла;
	
	УчетПособийСоциальногоСтрахования.СформироватьПособия(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения.ПособияДокумента, Неопределено);

	// }
	// 4D
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Подготавливает структуру таблиц для проведения.
//
Функция ДанныеДляПроведения()
	
	ДанныеДляПроведения = Новый Структура;
	
	СотрудникПолучающийПособие = СотрудникПолучающийПособие();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	СоздатьВТДанныеДокумента(Запрос, СотрудникПолучающийПособие);
	
	СоздатьВТНачисления(Запрос, СотрудникПолучающийПособие);				
	
	ОтражениеЗарплатыВБухучетеРасширенный.СоздатьВТНачисленияСДаннымиЕНВДЕдиновременныхПособий(Организация, ПериодРегистрации, Запрос.МенеджерВременныхТаблиц);
	
	ДанныеДляПроведения.Вставить("НачисленияДокумента", 	НачисленияДокумента(Запрос));
	ДанныеДляПроведения.Вставить("ПособияДокумента", 		ПособияДокумента(Запрос));
	ДанныеДляПроведения.Вставить("МенеджерВременныхТаблиц", Запрос.МенеджерВременныхТаблиц);
	
	Возврат ДанныеДляПроведения;
	
КонецФункции 

Процедура СоздатьВТДанныеДокумента(Запрос, СотрудникПолучающийПособие)
	
	Запрос.УстановитьПараметр("Сотрудник", 		СотрудникПолучающийПособие.Сотрудник);
	Запрос.УстановитьПараметр("Подразделение", 	СотрудникПолучающийПособие.Подразделение);
	Запрос.УстановитьПараметр("ТерриторияВыполненияРаботВОрганизации", СотрудникПолучающийПособие.ТерриторияВыполненияРаботВОрганизации);
	Запрос.УстановитьПараметр("Статья213", 		ОтражениеЗарплатыВБухучетеРасширенный.СтатьяРасходов213());
	
	Запрос.Текст =
	// 4D:ERP для Беларуси, Яна, 07.06.2017 12:38:32 
	// Документ "Единовременные пособия за счет ФСЗН", №14887
	// {
	"ВЫБРАТЬ
	|	&Сотрудник КАК Сотрудник,
	|	ЕдиновременноеПособие.ФизическоеЛицо КАК ФизическоеЛицо,
	|	&Подразделение КАК Подразделение,
	|	&ТерриторияВыполненияРаботВОрганизации КАК ТерриторияВыполненияРаботВОрганизации,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПособияИзФСЗН) КАК Начисление,
	|	ВЫБОР
	
	// 4D:ERP для Беларуси, Петр, 09.02.2018 10:19:20 
	// Социальное пособие на погребение в документе "Единовременное пособие", № 17720
	// {
	|		КОГДА ЕдиновременноеПособие.ВидПособия = ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.ВСвязиСоСмертью)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеНаПогребение)
	// }
	// 4D
	
	|		КОГДА ЕдиновременноеПособие.ВидПособия = ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.ПриРожденииРебенка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеПриРожденииРебенка)
	|		КОГДА ЕдиновременноеПособие.ВидПособия = ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеПриПостановкеНаУчетВРанниеСрокиБеременности)
	|		КОГДА ЕдиновременноеПособие.ВидПособия = ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.ПриРожденииВторогоИПоследующихДетей)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПриРожденииВторогоИПоследующихДетей)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПустаяСсылка)
	|	КОНЕЦ КАК НачислениеДляРасчетногоЛистка,
	|	ЕдиновременноеПособие.ВидПособия КАК ВидПособияСоциальногоСтрахования,
	|	ЕдиновременноеПособие.Начислено КАК СуммаДохода,
	|	0 КАК СуммаВычетаВзносы,
	|	ЕдиновременноеПособие.ДатаСобытия КАК ДатаНачалаСобытия,
	|	ЕдиновременноеПособие.ДатаСобытия КАК ДатаНачала,
	|	ЕдиновременноеПособие.ДатаСобытия КАК ДатаОкончания,
	|	ЕдиновременноеПособие.СтатьяФинансирования,
	|	&Статья213 КАК СтатьяРасходов,
	|	ЛОЖЬ КАК Сторно,
	|	ЗНАЧЕНИЕ(Документ.ЕдиновременноеПособиеЗаСчетФСС.ПустаяСсылка) КАК СторнируемыйДокумент
	|ПОМЕСТИТЬ ВТНачисленияДокумента
	|ИЗ
	|	Документ.ЕдиновременноеПособиеЗаСчетФСС КАК ЕдиновременноеПособие
	|ГДЕ
	|	ЕдиновременноеПособие.Ссылка = &Ссылка";
	
	Если ЗначениеЗаполнено(ИсправленныйДокумент) Тогда
		
		Запрос.УстановитьПараметр("ИсправленныйДокумент", ИсправленныйДокумент);
		
		Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		
		Запрос.Текст = Запрос.Текст + 
		"ВЫБРАТЬ
		|	&Сотрудник,
		|	ЕдиновременноеПособие.ФизическоеЛицо,
		|	&Подразделение,
		|	&ТерриторияВыполненияРаботВОрганизации,
		|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПособияИзФСЗН) КАК Начисление,
		|	ВЫБОР
		
		// 4D:ERP для Беларуси, Петр, 09.02.2018 10:19:20 
		// Социальное пособие на погребение в документе "Единовременное пособие", № 17720
		// {
		|		КОГДА ЕдиновременноеПособие.ВидПособия = ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.ВСвязиСоСмертью)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеНаПогребение)
		// }
		// 4D
		
		|		КОГДА ЕдиновременноеПособие.ВидПособия = ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.ПриРожденииРебенка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеПриРожденииРебенка)
		|		КОГДА ЕдиновременноеПособие.ВидПособия = ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.ПриПостановкеНаУчетВРанниеСрокиБеременности)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеПриПостановкеНаУчетВРанниеСрокиБеременности)
		|		КОГДА ЕдиновременноеПособие.ВидПособия = ЗНАЧЕНИЕ(Перечисление.ПереченьПособийСоциальногоСтрахования.ПриРожденииВторогоИПоследующихДетей)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПриРожденииВторогоИПоследующихДетей)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПустаяСсылка)
		|	КОНЕЦ КАК НачислениеДляРасчетногоЛистка,
		|	ЕдиновременноеПособие.ВидПособия КАК ВидПособияСоциальногоСтрахования,
		|	ЕдиновременноеПособие.Начислено * -1 КАК СуммаДохода,
		|	0 КАК СуммаВычетаВзносы,
		|	ЕдиновременноеПособие.ДатаСобытия КАК ДатаНачалаСобытия,
		|	ЕдиновременноеПособие.ДатаСобытия КАК ДатаНачала,
		|	ЕдиновременноеПособие.ДатаСобытия КАК ДатаОкончания,
		|	ЕдиновременноеПособие.СтатьяФинансирования,
		|	&Статья213 КАК СтатьяРасходов,
		|	ИСТИНА КАК Сторно,
		|	ЕдиновременноеПособие.Ссылка КАК СторнируемыйДокумент
		|ИЗ
		|	Документ.ЕдиновременноеПособиеЗаСчетФСС КАК ЕдиновременноеПособие
		|ГДЕ
		|	ЕдиновременноеПособие.Ссылка = &ИсправленныйДокумент
		|	И ЕдиновременноеПособие.Проведен";	
		
	КонецЕсли;
	// }
	// 4D
		
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТНачисления(Запрос, СотрудникПолучающийПособие)
	
	ОтражениеЗарплатыВБухучете.СоздатьВТСведенияОБухучетеЗарплатыСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТНачисленияДокумента", "Сотрудник,ДатаНачала", Организация, СотрудникПолучающийПособие.Подразделение);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.Сотрудник,
	|	Начисления.ДатаНачала,
	|	Начисления.Начисление,
	|	Начисления.НачислениеДляРасчетногоЛистка,
	|	Начисления.Подразделение КАК ПодразделениеОрганизации,
	|	Начисления.Подразделение,
	|	Начисления.СуммаДохода,
	|	Начисления.СуммаВычетаВзносы,
	|	Начисления.ДатаНачала КАК ДатаОкончания,
	|	Начисления.Сторно,
	|	Начисления.СторнируемыйДокумент,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.ВидПособияСоциальногоСтрахования,
	|	Начисления.ДатаНачалаСобытия,
	|	ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка) КАК УсловияТруда,
	|	Начисления.СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА &ИспользоватьСтатьиФинансирования
	|			ТОГДА ВЫБОР
	|					КОГДА Начисления.СтатьяФинансирования = ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|						ТОГДА СведенияОБухучетеЗарплатыСотрудников.СтатьяФинансирования
	|					ИНАЧЕ Начисления.СтатьяФинансирования
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	СведенияОБухучетеЗарплатыСотрудников.ТерриторияВыполненияРаботВОрганизации
	|ПОМЕСТИТЬ ВТНачисления
	|ИЗ
	|	ВТНачисленияДокумента КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеЗарплатыСотрудников
	|		ПО Начисления.Сотрудник = СведенияОБухучетеЗарплатыСотрудников.Сотрудник
	|			И Начисления.Подразделение = СведенияОБухучетеЗарплатыСотрудников.Подразделение
	|			И Начисления.ДатаНачала = СведенияОБухучетеЗарплатыСотрудников.Период";
	
	Запрос.УстановитьПараметр("ИспользоватьСтатьиФинансирования", ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата"));
	
	Запрос.Выполнить();
	Запрос.Текст =
	"УНИЧТОЖИТЬ ВТСведенияОБухучетеЗарплатыСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНачисленияДокумента";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция НачисленияДокумента(Запрос)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.Подразделение,
	|	Начисления.НачислениеДляРасчетногоЛистка КАК Начисление,
	|	СУММА(Начисления.СуммаДохода) КАК Сумма,
	|	0 КАК ОтработаноДней,
	|	0 КАК ОтработаноЧасов,
	|	0 КАК ОплаченоДней,
	|	0 КАК ОплаченоЧасов,
	|	Начисления.СтатьяФинансирования,
	|	Начисления.СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА НачисленияСДаннымиЕНВД.ДоляЕНВД ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		КОГДА НачисленияСДаннымиЕНВД.ДоляЕНВД = 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОблагаетсяЕНВД
	|ИЗ
	|	ВТНачисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияСДаннымиЕНВД КАК НачисленияСДаннымиЕНВД
	|		ПО Начисления.Сотрудник = НачисленияСДаннымиЕНВД.Сотрудник
	|			И Начисления.Подразделение = НачисленияСДаннымиЕНВД.Подразделение
	|			И Начисления.ДатаНачала = НачисленияСДаннымиЕНВД.ДатаНачала
	|ГДЕ
	|	Начисления.НачислениеДляРасчетногоЛистка <> ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.Подразделение,
	|	Начисления.НачислениеДляРасчетногоЛистка,
	|	Начисления.СтатьяФинансирования,
	|	Начисления.СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА НачисленияСДаннымиЕНВД.ДоляЕНВД ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		КОГДА НачисленияСДаннымиЕНВД.ДоляЕНВД = 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции 

Функция ПособияДокумента(Запрос)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.Сотрудник,
	|	Начисления.ФизическоеЛицо,
	|	Начисления.Подразделение,
	|	Начисления.ВидПособияСоциальногоСтрахования,
	|	Начисления.СуммаДохода КАК СуммаВсего,
	|	0 КАК ОплаченныеДни,
	|	ВЫБОР
	|		КОГДА Начисления.Сторно
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СтраховыеСлучаи,
	|	Начисления.ДатаНачалаСобытия
	|ИЗ
	|	ВТНачисления КАК Начисления";
	
	Возврат Запрос.Выполнить().Выгрузить();	

КонецФункции 

Функция СотрудникПолучающийПособие()

	ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудниковОрганизаций.Организация 					= Организация;
	ПараметрыПолученияСотрудниковОрганизаций.ОтбиратьПоГоловнойОрганизации 	= Ложь;
	ПараметрыПолученияСотрудниковОрганизаций.СписокФизическихЛиц			= ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо);
	ПараметрыПолученияСотрудниковОрганизаций.НачалоПериода					= Дата;
	ПараметрыПолученияСотрудниковОрганизаций.ОкончаниеПериода				= Дата;
	ПараметрыПолученияСотрудниковОрганизаций.КадровыеДанные					= "Подразделение,ТерриторияВыполненияРаботВОрганизации";
		
	ОсновныеСотрудники = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолученияСотрудниковОрганизаций);
	
	Если ОсновныеСотрудники.Количество() = 0 Тогда
		СтрокаСотрудника = ОсновныеСотрудники.Добавить();
	КонецЕсли;
	
	Возврат ОсновныеСотрудники[0];
	
КонецФункции

Функция ПособиеСтороннемуФизлицу()
	Возврат ВидПособия = Перечисления.ПереченьПособийСоциальногоСтрахования.ВСвязиСоСмертью И Не ПособиеНаПогребениеСотруднику;
КонецФункции

#КонецОбласти

#КонецЕсли
