#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ВариантРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.ПоЭтапамПоПравилуВДанномПодразделении Тогда
		НаправлениеРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.ПоЭтапамПоПравилуВДанномПодразделении;
	КонецЕсли;
	
	Если ВариантРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.ПоПодразделениямВручнуюПоЭтапамПоПравилу Тогда
		БазаРаспределенияПоПодразделениям = Неопределено;
	КонецЕсли;
	
	Если ПоБазе.Количество() > 0 Тогда
		ДоляСтоимостиПоПравилам = ПоБазе.Итог("ДоляСтоимости");
	КонецЕсли;
	
	ДоляСтоимостиНаСтатьи = Списание.Итог("ДоляСтоимости");
	
	ДоляСтоимостиВручную =
		ПартииПроизводства.Итог("ДоляСтоимости")
		+ Вручную.Итог("ДоляСтоимости")
		+ ВыпускиБезРаспоряжения.Итог("ДоляСтоимости");
	
	ВсегоДолейСтоимости = ДоляСтоимостиПоПравилам + ДоляСтоимостиНаСтатьи + ДоляСтоимостиВручную;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(НаправлениеДеятельности) Тогда
		Для Каждого Строка Из Списание Цикл
			Строка.НаправлениеДеятельности = НаправлениеДеятельности;
		КонецЦикла;
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ВзаиморасчетыСервер.ЗаполнитьИдентификаторыСтрокВТабличнойЧасти(Списание);
	КонецЕсли;
	
	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		Если ДанныеЗаполнения.Свойство("ОтборПоПодразделениям") Тогда
			ЭтотОбъект.ОтборПоПодразделениям.Очистить();
			Для Каждого Элемент Из ДанныеЗаполнения.ОтборПоПодразделениям Цикл
				ЭтотОбъект.ОтборПоПодразделениям.Добавить().Подразделение = Элемент.Значение;
			КонецЦикла;
		ИначеЕсли ЗначениеЗаполнено(ПравилоРаспределенияПоПодразделениям) Тогда
			Для Каждого Элемент Из ПравилоРаспределенияПоПодразделениям.ОтборПоПодразделениям Цикл
				ЭтотОбъект.ОтборПоПодразделениям.Добавить().Подразделение = Элемент.Подразделение;
			КонецЦикла;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("ОтборПоМатериалам") Тогда
			ЭтотОбъект.ОтборПоМатериалам.Очистить();
			Для Каждого Элемент Из ДанныеЗаполнения.ОтборПоМатериалам Цикл
				ЭтотОбъект.ОтборПоМатериалам.Добавить().Материал = Элемент.Значение;
			КонецЦикла;
		ИначеЕсли ЗначениеЗаполнено(ПравилоРаспределенияПоЭтапам) Тогда
			Для Каждого Элемент Из ПравилоРаспределенияПоЭтапам.ОтборПоМатериалам Цикл
				ЭтотОбъект.ОтборПоМатериалам.Добавить().Материал = Элемент.Материал;
			КонецЦикла;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("ОтборПоВидамРабот") Тогда
			ЭтотОбъект.ОтборПоВидамРабот.Очистить();
			Для Каждого Элемент Из ДанныеЗаполнения.ОтборПоВидамРабот Цикл
				ЭтотОбъект.ОтборПоВидамРабот.Добавить().ВидРабот = Элемент.Значение;
			КонецЦикла;
		ИначеЕсли ЗначениеЗаполнено(ПравилоРаспределенияПоЭтапам) Тогда
			Для Каждого Элемент Из ПравилоРаспределенияПоЭтапам.ОтборПоВидамРабот Цикл
				ЭтотОбъект.ОтборПоВидамРабот.Добавить().ВидРабот = Элемент.ВидРабот;
			КонецЦикла;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("ОтборПоГруппамПродукции") Тогда
			ЭтотОбъект.ОтборПоГруппамПродукции.Очистить();
			Для Каждого Элемент Из ДанныеЗаполнения.ОтборПоГруппамПродукции Цикл
				ЭтотОбъект.ОтборПоГруппамПродукции.Добавить().ГруппаПродукции = Элемент.Значение;
			КонецЦикла;
		ИначеЕсли ЗначениеЗаполнено(ПравилоРаспределенияПоЭтапам) Тогда
			Для Каждого Элемент Из ПравилоРаспределенияПоЭтапам.ОтборПоГруппамПродукции Цикл
				ЭтотОбъект.ОтборПоГруппамПродукции.Добавить().ГруппаПродукции = Элемент.ГруппаПродукции;
			КонецЦикла;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПравилоРаспределенияПоПодразделениям)
			И Не ЗначениеЗаполнено(БазаРаспределенияПоПодразделениям)
			И Не ЗначениеЗаполнено(НаправлениеРаспределения) Тогда
			БазаРаспределенияПоПодразделениям = ПравилоРаспределенияПоПодразделениям.БазаРаспределения;
			НаправлениеРаспределения = ПравилоРаспределенияПоПодразделениям.НаправлениеРаспределения;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПравилоРаспределенияПоЭтапам) И Не ЗначениеЗаполнено(БазаРаспределенияПоЭтапам) Тогда
			БазаРаспределенияПоЭтапам = ПравилоРаспределенияПоЭтапам.БазаРаспределения;
		КонецЕсли;
		
	КонецЕсли;
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// Инициализация дополнительных свойств для проведения документа
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);

	// Подготовка наборов записей
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Регистрация задания к расчету себестоимости.
	РегистрыСведений.ЗаданияКРасчетуСебестоимости.СоздатьЗаписьРегистра(Дата, Ссылка, Организация);
	
	РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);
	//++ НЕ УТКА
	МеждународныйУчетПроведениеСервер.ЗарегистрироватьКОтражению(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);
	//-- НЕ УТКА
	
	// Запись наборов записей
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);

	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);

	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если ВариантРаспределения <> Перечисления.СпособыРаспределенияСтатейРасходов.ПоПодразделениямИЭтапамПоПравилам Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ПравилоРаспределенияПоПодразделениям");
	КонецЕсли;
	
	Если (ВариантРаспределения <> Перечисления.СпособыРаспределенияСтатейРасходов.ПоЭтапамВручнуюПоВсемПодразделениям
		И ВариантРаспределения <> Перечисления.СпособыРаспределенияСтатейРасходов.НаДругиеСтатьиРасходов
		И НЕ ЗначениеЗаполнено(ПравилоРаспределенияПоЭтапам)) Тогда
			Если ПолучитьФункциональнуюОпцию("КомплекснаяАвтоматизация") Тогда
				СообщитьОбОшибке(НСтр("ru='Не заполнено правило распределения по выпускам'"), Отказ);
			Иначе
				СообщитьОбОшибке(НСтр("ru='Не заполнено правило распределения по этапам'"), Отказ);
			КонецЕсли;
	КонецЕсли;
	
	Если ВариантРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.ПоПодразделениямВручнуюПоЭтапамПоПравилу
		ИЛИ ВариантРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.ПоЭтапамВручнуюПоВсемПодразделениям
		ИЛИ ВариантРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.НаДругиеСтатьиРасходов Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СтатьяКалькуляции");
	КонецЕсли;
	
	Если ВариантРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.НаДругиеСтатьиРасходов 
		И Списание.Количество() = 0 Тогда
		СообщитьОбОшибке(НСтр("ru='Не введено ни одной строки в список ""На другие статьи расходов""'"), Отказ);
	КонецЕсли;
	
	Если ВариантРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.ПоПодразделениямВручнуюПоЭтапамПоПравилу
		И ПоБазе.Количество() = 0 Тогда
		СообщитьОбОшибке(НСтр("ru='Не введено ни одной строки в список ""По подразделениям вручную""'"), Отказ);
	КонецЕсли;
	
	РеквизитТЧСписание = Новый Массив;
	СтруктураТЧСписание = Новый Структура;
	СтруктураТЧСписание.Вставить("Списание", "СтатьяРасходов, АналитикаРасходов");
	РеквизитТЧСписание.Добавить(СтруктураТЧСписание);
	ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
		ЭтотОбъект, РеквизитТЧСписание, МассивНепроверяемыхРеквизитов, Отказ);
	
	Если ДоляСтоимостиПоПравилам +
		ПартииПроизводства.Итог("ДоляСтоимости") +
		ПоБазе.Итог("ДоляСтоимости") +
		Вручную.Итог("ДоляСтоимости") +
		ВыпускиБезРаспоряжения.Итог("ДоляСтоимости") +
		Списание.Итог("ДоляСтоимости") = 0 Тогда
		
		ТекстСообщения = НСтр("ru='Не задано распределение долей по подразделениям \ этапам \ статьям'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка, , , Отказ);
		
	КонецЕсли;
	
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
	
	Если БазаРаспределенияПоЭтапам = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоРаботУказанныхВидов
		И ОтборПоВидамРабот.Количество() = 0 Тогда
		
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='Не указаны виды работ для распределения расходов по этапам производства'"),
				КлючДанных,
				"ПравилоРаспределенияПоЭтапам",
				"Объект",
				Отказ);
			
	КонецЕсли;
	
	Если (БазаРаспределенияПоЭтапам = Перечисления.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов
			Или БазаРаспределенияПоЭтапам = Перечисления.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов
			Или БазаРаспределенияПоЭтапам = Перечисления.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов)
		И ОтборПоМатериалам.Количество() = 0 Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='Не указаны материалы для распределения расходов по этапам производства'"),
				КлючДанных,
				"ПравилоРаспределенияПоЭтапам",
				"Объект",
				Отказ);
			
	КонецЕсли;
	
	// не поддерживается распределение по статьям калькуляции в рамках одного и того же подразделения
	Если ПоБазе.Количество() > 0 Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоБазе.Подразделение,
		|	ПоБазе.НомерСтроки,
		|	ПоБазе.СтатьяКалькуляции
		|ПОМЕСТИТЬ втПодразделения
		|ИЗ
		|	&ПоБазе КАК ПоБазе
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втПодразделения.Подразделение КАК Подразделение,
		|	МАКСИМУМ(втПодразделения.НомерСтроки) КАК НомерСтроки
		|ИЗ
		|	втПодразделения КАК втПодразделения
		|
		|СГРУППИРОВАТЬ ПО
		|	втПодразделения.Подразделение
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втПодразделения.СтатьяКалькуляции) > 1";
		
		Запрос.УстановитьПараметр("ПоБазе", ПоБазе.Выгрузить(, "НомерСтроки, Подразделение, СтатьяКалькуляции"));
		
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(ЭтотОбъект);
				ТекстСообщения = НСтр("ru='Распределение по статьям калькуляции в рамках одного подразделения не поддерживается. Требуется изменить подразделение в строке %1 или удалить строку.'");
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Строка(Выборка.НомерСтроки));
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ПоБазе", Выборка.НомерСтроки, "Подразделение");
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,КлючДанных,Поле,"Объект",Отказ);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СообщитьОбОшибке(ТекстОшибки, Отказ)
	
	Ошибки = Новый Структура;
	Ошибки.Вставить("СписокОшибок", Новый Массив);
	Ошибки.Вставить("ГруппыОшибок", Новый Соответствие);
	ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
				Ошибки,
				"Объект.ПравилоРаспределенияПоЭтапам",
				ТекстОшибки,
				"");
	Если Ошибки.СписокОшибок.Количество() <> 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

