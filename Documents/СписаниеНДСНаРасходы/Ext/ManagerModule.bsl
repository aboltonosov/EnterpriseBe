#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Заполняет табличную часть Ценности с отбором по реквизитам шапки документа.
// 
// Параметры:
//   ДокументОбъект - ДокументОбъект.СписаниеНДСНаРасходы - Ссылка на объект документа
//
Процедура ЗаполнитьСписаниеНДСНаРасходы(ДокументОбъект) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НДСПредъявленныйОстатки.ВидЦенности КАК ВидЦенности,
	|	НДСПредъявленныйОстатки.СтавкаНДС КАК СтавкаНДС,
	|	НДСПредъявленныйОстатки.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	НДСПредъявленныйОстатки.РеализацияЭкспорт КАК РеализацияЭкспорт,
	|	НДСПредъявленныйОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|	НДСПредъявленныйОстатки.НДСОстаток КАК НДС
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(&Период, Организация = &Организация И СчетФактура = &СчетФактура И Поставщик = &Поставщик) КАК НДСПредъявленныйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученный
	|		ПО (СчетФактураПолученный.ДокументОснование = НДСПредъявленныйОстатки.СчетФактура)
	|			И СчетФактураПолученный.Ссылка.Проведен";
	
	Запрос.УстановитьПараметр("Период",      ДокументОбъект.Дата);
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Поставщик",   ДокументОбъект.Поставщик);
	Запрос.УстановитьПараметр("СчетФактура", ДокументОбъект.СчетФактура);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ДокументОбъект.Ценности.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла; 
	
КонецПроцедуры

#Область ПроведениеПоРеглУчету

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - Текст запроса отражения 
//   
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - Текст запроса создания временных таблиц, используемых при отражении
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры);
	//++ НЕ УТ
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ
	
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписаниеНДСНаРасходы.Ссылка,
	|	СписаниеНДСНаРасходы.ПометкаУдаления,
	|	СписаниеНДСНаРасходы.Номер,
	|	СписаниеНДСНаРасходы.Дата,
	|	СписаниеНДСНаРасходы.Проведен,
	|	СписаниеНДСНаРасходы.Организация,
	|	СписаниеНДСНаРасходы.Поставщик,
	|	СписаниеНДСНаРасходы.СчетФактура,
	|	СписаниеНДСНаРасходы.СтатьяРасходов,
	|	СписаниеНДСНаРасходы.Подразделение,
	|	СписаниеНДСНаРасходы.АналитикаРасходов,
	|	СписаниеНДСНаРасходы.Комментарий,
	|	СписаниеНДСНаРасходы.СуммаБезНДС,
	|	СписаниеНДСНаРасходы.СуммаНДС
	|ИЗ
	|	Документ.СписаниеНДСНаРасходы КАК СписаниеНДСНаРасходы
	|ГДЕ
	|	СписаниеНДСНаРасходы.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                     Реквизиты.Дата);
	Запрос.УстановитьПараметр("Организация",                Реквизиты.Организация);
	Запрос.УстановитьПараметр("Поставщик",                  Реквизиты.Поставщик);
	Запрос.УстановитьПараметр("СчетФактура",                Реквизиты.СчетФактура);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов", 	ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСПредъявленный";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|
	|ВЫБРАТЬ
	|	&Ссылка                                КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Операция.Дата                          КАК Период,
	|	Операция.Организация                   КАК Организация,
	|	Операция.СчетФактура                   КАК СчетФактура,
	|	Операция.Поставщик                     КАК Поставщик,
	|	Строки.ВидЦенности                     КАК ВидЦенности,
	|	Строки.СтавкаНДС                       КАК СтавкаНДС,
	|	Строки.ВидДеятельностиНДС              КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	Строки.РеализацияЭкспорт               КАК РеализацияЭкспорт,
	|	Строки.СуммаБезНДС                     КАК СуммаБезНДС,
	|	Строки.НДС                                                          КАК НДС,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияНДСПредъявленный.СписаниеНДСНаРасходы) КАК Событие,
	|	НЕОПРЕДЕЛЕНО                                                        КАК КорВидДеятельностиНДС,
	|	Операция.Подразделение                 КАК Подразделение,
	|	Операция.СтатьяРасходов                КАК СтатьяРасходов,
	|	Операция.АналитикаРасходов             КАК АналитикаРасходов,
	|	""""                                   КАК ИдентификаторСтроки,
	|	ЛОЖЬ                                   КАК РегламентнаяОперация
	|ИЗ
	|	Документ.СписаниеНДСНаРасходы КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеНДСНаРасходы.Ценности КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.НДС <> 0
	|	
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

//++ НЕ УТ

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Операция.Дата                          КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Операция.Организация                   КАК Организация,
	|	Операция.Подразделение                 КАК Подразделение,
	|	Операция.СтатьяРасходов                КАК СтатьяРасходов,
	|	Операция.АналитикаРасходов             КАК АналитикаРасходов,
	|
	|	0                                      КАК Сумма,
	|	0                                      КАК СуммаБезНДС,
	|	Операция.СуммаНДС КАК СуммаРегл,
	|	ВЫБОР 
	|		КОГДА НЕ Статьи.ПринятиеКналоговомуУчету ТОГДА
	|			Операция.СуммаНДС 
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ             КАК ПостояннаяРазница,
	|	0                 КАК ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСНаРасходы) КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.СписаниеНДСНаРасходы КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|	ПО Операция.СтатьяРасходов = Статьи.Ссылка
	|
	|
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

//-- НЕ УТ

#КонецОбласти

#КонецОбласти

#КонецЕсли