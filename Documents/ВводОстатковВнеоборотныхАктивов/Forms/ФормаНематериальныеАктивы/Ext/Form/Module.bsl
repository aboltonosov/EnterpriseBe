
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;
	
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	ВводНаОсновании.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюСоздатьНаОсновании);
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииЧтенииНаСервере();
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Заголовок = Документы.ВводОстатковВнеоборотныхАктивов.ПредставлениеДокумента(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СобытияФормКлиент.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, 
		ЭтотОбъект, 
		"Объект.Комментарий");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНма

&НаКлиенте
Процедура НМАВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ИзменениеСтрокиНМА();
	
КонецПроцедуры

&НаКлиенте
Процедура НМАПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	ИзменениеСтрокиНМА(Истина, Копирование);
	
КонецПроцедуры

&НаКлиенте
Процедура НМАПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	ИзменениеСтрокиНМА();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемы

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	Заголовок = Документы.ВводОстатковВнеоборотныхАктивов.ПредставлениеДокумента(Объект);
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ДополнительныеОтчетыИОбработки
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруТабличнойЧастиНМА()
	
	СтрокаТаблицы	= Элементы.НМА.ТекущиеДанные;
	Если СтрокаТаблицы = Неопределено Тогда
		Возврат Новый Структура;
	КонецЕсли;
	
	СтруктураТабличнойЧастиНМА	= Новый Структура(
	"НематериальныйАктив,
	|СчетУчета,
	|СчетАмортизации,
	|ПервоначальнаяСтоимостьБУ,
	|ПервоначальнаяСтоимостьНУ,
	|НакопленнаяАмортизацияБУ,
	|НакопленнаяАмортизацияНУ,
	|НакопленнаяАмортизацияПР,
	|ДатаПринятияКУчетуРегл,
	|ДатаПриобретения,
	|ВидОбъектаУчета,
	|НачислятьАмортизациюБУ,
	|НачислятьАмортизациюНУ,
	|ТекущаяСтоимостьБУ,
	|ТекущаяСтоимостьНУ,
	|ТекущаяСтоимостьПР,
	|КоэффициентБУ,
	|АмортизацияДо2009,
	|ФактическийСрокИспользованияДо2009,
	|ОбъемПродукцииРаботДляВычисленияАмортизации,
	|РеквизитыДокументаОплаты,
	|СпециальныйКоэффициентНУ,
	|СпособНачисленияАмортизацииБУ,
	|МетодНачисленияАмортизацииНУ,
	|СпособПоступления,
	|СрокПолезногоИспользованияБУ,
	|СрокПолезногоИспользованияНУ,
	|СтатьяРасходовАмортизации,
	|АналитикаРасходовАмортизации,
	|ПорядокСписанияНИОКРНаРасходыНУ,
	|ПередаватьРасходыВДругуюОрганизацию,
	|ОрганизацияПолучательРасходов,
	|СчетПередачиРасходов,
	|ПервоначальнаяСтоимостьОтличается,
	|ПрименениеЦелевогоФинансирования,
	|СчетУчетаЦФ,
	|СчетАмортизацииЦФ,
	|СтатьяДоходов,
	|АналитикаДоходов,
	|ТекущаяСтоимостьБУЦФ,
	|ТекущаяСтоимостьНУЦФ,
	|ТекущаяСтоимостьПРЦФ,
	|НакопленнаяАмортизацияБУЦФ,
	|НакопленнаяАмортизацияНУЦФ,
	|НакопленнаяАмортизацияПРЦФ,
	|ЕстьРезервПереоценки,
	|РезервПереоценкиСтоимости,
	|РезервПереоценкиАмортизации");
	
	ЗаполнитьЗначенияСвойств(СтруктураТабличнойЧастиНМА, СтрокаТаблицы);
	
	Возврат СтруктураТабличнойЧастиНМА;
	
КонецФункции

&НаКлиенте
Процедура ИзменениеСтрокиНМА(ЭтоНовый = Ложь, Копирование = Ложь)
	
	ДанныеЗаполнения = ?(Не ЭтоНовый ИЛИ Копирование, ПолучитьСтруктуруТабличнойЧастиНМА(), Новый Структура);
	ДанныеЗаполнения.Вставить("Дата", Объект.Дата);
	ДанныеЗаполнения.Вставить("Ссылка", Объект.Ссылка);
	ДанныеЗаполнения.Вставить("Организация", Объект.Организация);
	ДанныеЗаполнения.Вставить("Подразделение", Объект.Подразделение);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЭтоНовый", ЭтоНовый);
	СтруктураПараметров.Вставить("Копирование", Копирование);
	СтруктураПараметров.Вставить("ДанныеЗаполнения", ДанныеЗаполнения);
	
	ФормаРедактированияСтроки = Неопределено;

	
	ОткрытьФорму("Документ.ВводОстатковВнеоборотныхАктивов.Форма.ФормаРедактированияСтрокиНМА", СтруктураПараметров, ЭтаФорма,,,, Новый ОписаниеОповещения("ИзменениеСтрокиНМАЗавершение", ЭтотОбъект, Новый Структура("ЭтоНовый", ЭтоНовый)), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеСтрокиНМАЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    ЭтоНовый = ДополнительныеПараметры.ЭтоНовый;
    
    
    ФормаРедактированияСтроки = Результат;
    
    Если ФормаРедактированияСтроки = Неопределено Тогда
        Возврат;
    КонецЕсли;
    
    Если ЭтоНовый Тогда
        СтрокаТаблицы = Объект.НМА.Добавить();
    Иначе
        СтрокаТаблицы = Объект.НМА.НайтиПоИдентификатору(Элементы.НМА.ТекущаяСтрока);
    КонецЕсли;
    
    ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ФормаРедактированияСтроки);
    
    Модифицированность = Истина;

КонецПроцедуры

#КонецОбласти
