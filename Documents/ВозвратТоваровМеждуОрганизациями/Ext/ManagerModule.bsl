#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

// Добавляет команду создания на основании.
//
// Параметры:
//	КомандыСоздатьНаОсновании - ТаблицаЗначений - Список команд.
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ВозвратТоваровМеждуОрганизациями) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ВозвратТоваровМеждуОрганизациями.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ВозвратТоваровМеждуОрганизациями);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПередачиТоваровМеждуОрганизациями";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуКонтрольВозвратовТоваров(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуОстаткиТоваровОрганизаций(КомандыОтчетов);

КонецПроцедуры


// Выборка значений реквизитов документа по ссылке.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ВозвратТоваровМеждуОрганизациями - Ссылка на документ
//
// Возвращаемое значение:
//	Структура - Реквизиты выбранного документа
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Реквизиты = Новый Структура();
	
	Реквизиты.Вставить("Дата", '00010101');
	Реквизиты.Вставить("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПустаяСсылка());
	Реквизиты.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	Реквизиты.Вставить("Партнер", Справочники.Партнеры.ПустаяСсылка());
	Реквизиты.Вставить("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
	Реквизиты.Вставить("ОрганизацияОтправитель", Справочники.Организации.ПустаяСсылка());
	Реквизиты.Вставить("ОрганизацияПолучатель", Справочники.Организации.ПустаяСсылка());
	Реквизиты.Вставить("ВалютаВзаиморасчетов", Справочники.Валюты.ПустаяСсылка());
	Реквизиты.Вставить("СуммаДокумента", 0);
	Реквизиты.Вставить("СуммаВзаиморасчетов", 0);
	Реквизиты.Вставить("РасчетыЧерезОтдельногоКонтрагента", Ложь);
	Реквизиты.Вставить("ПоТоварамКОформлению", Ложь);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Данные.Дата                              КАК Дата,
	|	Данные.ХозяйственнаяОперация             КАК ХозяйственнаяОперация,
	|	Данные.Организация                       КАК Организация,
	|	(ВЫБОР КОГДА Данные.РасчетыЧерезОтдельногоКонтрагента 
	|		ТОГДА Данные.Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ)                                   КАК Партнер,
	|	(ВЫБОР КОГДА Данные.РасчетыЧерезОтдельногоКонтрагента
	|		ТОГДА Данные.Контрагент
	|		ИНАЧЕ Данные.Организация
	|	КОНЕЦ)                                   КАК Контрагент,
	|	Данные.Организация                       КАК ОрганизацияОтправитель,
	|	Данные.ОрганизацияПолучатель             КАК ОрганизацияПолучатель,
	|	Данные.Валюта                            КАК ВалютаВзаиморасчетов,
	|	Данные.СуммаДокумента                    КАК СуммаДокумента,
	|	(ВЫБОР КОГДА Данные.Проведен
	|		ТОГДА Данные.СуммаДокумента
	|		ИНАЧЕ 0
	|	КОНЕЦ)                                   КАК СуммаВзаиморасчетов,
	|	Данные.РасчетыЧерезОтдельногоКонтрагента КАК РасчетыЧерезОтдельногоКонтрагента,
	|	Данные.ПоТоварамКОформлению              КАК ПоТоварамКОформлению
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК Данные
	|ГДЕ
	|	Данные.Ссылка = &ДокументСсылка
	|");
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Реквизиты, Выборка);
	КонецЕсли;
	Возврат Реквизиты;
КонецФункции

// Расчет типа запасов по хозяйственной операции
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
//
// Возвращаемое значение:
//	ПеречислениеСсылка.ТипыЗапасов - Тип запасов.
Функция ТипЗапасовОперации(ХозяйственнаяОперация) Экспорт
	Возврат ?(ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями,
			Перечисления.ТипыЗапасов.КомиссионныйТовар,
			Перечисления.ТипыЗапасов.Товар);
КонецФункции

//++ НЕ УТ

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
#Область ТекстВозвратОтКомиссионера                        // (Дт 41.01 :: Кт 45.01)
	ТекстВозвратОтКомиссионера = "
	|ВЫБРАТЬ //// Возврат товаров от комиссионера (Дт 41.01 :: Кт 45.01)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, 0) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Строки.Склад КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, 0) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, 0) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, 0) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаНаКомиссию) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.Контрагент
	|	ИНАЧЕ
	|		Операция.Организация
	|	КОНЕЦ КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, 0) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, 0) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, 0) КАК СуммаВРКт,
	|	""Возврат товаров от комиссионера"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
	|";
#КонецОбласти

#Область ТекстВозвратНаСкладПроизводстваОтКомиссионера                        // (Дт 20 :: Кт 45.01)
	ТекстВозвратНаСкладПроизводстваОтКомиссионера = "
	|ВЫБРАТЬ //// Возврат товаров на склад производства от комиссионера (Дт 20 :: Кт 45.01)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, 0) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, 0) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, 0) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, 0) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаНаКомиссию) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.Контрагент
	|	ИНАЧЕ
	|		Операция.Организация
	|	КОНЕЦ КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, 0) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, 0) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, 0) КАК СуммаВРКт,
	|	""Возврат товаров от комиссионера"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
	|";
#КонецОбласти
	
#Область ТекстВозвратПоСубкомиссии                         // (Дт 004.01 :: Кт 004.02)
	ТекстВозвратПоСубкомиссии = "
	|ВЫБРАТЬ //// Списание комиссионных товаров (Дт 004.01 :: Кт 004.02)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Операция.Склад КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыПереданныеНаКомиссию) КАК СчетКт,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.Контрагент
	|	ИНАЧЕ
	|		Операция.Организация
	|	КОНЕЦ КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание комиссионных товаров"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
	|";
#КонецОбласти
	
#Область ТекстСторноНачисленияНДСПолучателя                // (сторно Дт 90.03 :: Кт 19.03)
	ТекстСторноНачисленияНДСПолучателя = "
	|ВЫБРАТЬ  //// Входящий НДС (сторно) по рег. НДСПредъявленный <Дт 90.03 :: Кт 19.03>
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(НДСПредъявленный.НДС) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСПриПродаже) КАК ВидСчетаДт,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		Строки.ВидЗапасовПолучателя.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК ГруппаФинансовогоУчетаДт,
	|	Операция.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		Строки.ВидЗапасовПолучателя.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК СубконтоДт1,
	|	Строки.СтавкаНДС КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаКт,
	|	НДСПредъявленный.ВидДеятельностиНДС                                    КАК АналитикаУчетаКт,
	|	НДСПредъявленный.ВидЦенности                                           КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)                               КАК ВалютаКт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)                 КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)              КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.Контрагент
	|	ИНАЧЕ
	|		Операция.Организация
	|	КОНЕЦ           КАК СубконтоКт1,
	|	Операция.Ссылка КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО    КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Входящий НДС (сторно)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК Строки
	|	ПО 
	|		(Строки.Ссылка = Операция.Ссылка)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		НДСПредъявленный.Регистратор = Строки.Ссылка
	|		И НДСПредъявленный.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Операция.ОрганизацияПолучатель,
	|	Операция.Контрагент,
	|	Операция.Склад,
	|	Операция.Подразделение,
	|	Операция.РасчетыЧерезОтдельногоКонтрагента,
	|	Строки.СтавкаНДС,
	|	Строки.ВидЗапасовПолучателя.ГруппаФинансовогоУчета,
	|	Аналитика.Номенклатура.ГруппаФинансовогоУчета,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ВидЦенности
	|";
#КонецОбласти
	
#Область ТекстСторноВыручкиОтРеализацииСобственногоТовара  // (сторно Дт 62.01 :: Кт 90.01.1)
	ТекстСторноВыручкиОтРеализацииСобственногоТовара = "
	|ВЫБРАТЬ //// Выручка от реализации собственного товара (сторно) Дт 62.01 :: Кт 90.01.1)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ЕСТЬNULL(-СуммыДокументовВВалютеРегл.СуммаБезНДСРегл - СуммыДокументовВВалютеРегл.СуммаНДСРегл, -Строки.СуммаСНДС)) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Расчеты.ГруппаФинансовогоУчета, Операция.ГруппаФинансовогоУчета) КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение) КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.Контрагент
	|	ИНАЧЕ
	|		Операция.Организация
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.ДоговорПокупки
	|	ИНАЧЕ
	|		Операция.Договор
	|	КОНЕЦ КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	СУММА(-Строки.СуммаСНДС) КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ВыручкаОтПродаж) КАК ВидСчетаКт,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		Строки.ВидЗапасовПолучателя.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК ГруппаФинансовогоУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		Строки.ВидЗапасовПолучателя.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК СубконтоКт1,
	|	Строки.СтавкаНДС КАК СубконтоКт2,
	|	Аналитика.Номенклатура КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	СУММА(-Строки.Количество) КАК КоличествоКт,
	|	СУММА(ЕСТЬNULL(-СуммыДокументовВВалютеРегл.СуммаБезНДСРегл, -(Строки.СуммаСНДС - Строки.СуммаНДС))) КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Выручка от реализации собственного товара (сторно)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО 
	|		Строки.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И Строки.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РасчетыПретензия КАК Расчеты
	|	ПО 
	|		Операция.Ссылка = Расчеты.Ссылка
	|ГДЕ
	|	Строки.ВидЗапасовПолучателя.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	ЕСТЬNULL(Расчеты.ГруппаФинансовогоУчета, Операция.ГруппаФинансовогоУчета),
	|	Операция.ГруппаФинансовогоУчета,
	|	Операция.Валюта,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение),
	|	Операция.Склад,
	|	ЕСТЬNULL(Расчеты.НаправлениеДеятельности, Операция.НаправлениеДеятельности),
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.Контрагент
	|	ИНАЧЕ
	|		Операция.Организация
	|	КОНЕЦ,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.ДоговорПокупки
	|	ИНАЧЕ
	|		Операция.Договор
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		Строки.ВидЗапасовПолучателя.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ,
	|	Строки.СтавкаНДС,
	|	Аналитика.Номенклатура
	|";
#КонецОбласти
	
#Область ТекстСторноСебестоимостиРеализованногоТовара      // (сторно Дт 90.02.1 :: Кт 41.01)
	ТекстСторноСебестоимостиРеализованногоТовара = "
	|ВЫБРАТЬ   //// Себестоимость реализованного товара (сторно) Дт 90.02.1 :: Кт 41.01)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма)) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ГруппаФинансовогоУчета КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	СУММА(ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ)) КАК СуммаНУДт,
	|	СУММА(ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР)) КАК СуммаПРДт,
	|	СУММА(ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР)) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	Строки.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Строки.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	СУММА(Строки.Количество) КАК КоличествоКт,
	|	СУММА(ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ)) КАК СуммаНУКт,
	|	СУММА(ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР)) КАК СуммаПРКт,
	|	СУММА(ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР)) КАК СуммаВРКт,
	|	""Себестоимость реализованного товара (сторно)"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ХозяйственнаяОперация = Стоимости.ХозяйственнаяОперация 
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.ОрганизацияПолучатель,
	|	Операция.Подразделение,
	|	Строки.ГруппаФинансовогоУчета,
	|	Строки.НаправлениеДеятельности,
	|	Строки.Склад,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)),
	|	Строки.Номенклатура
	|";
#КонецОбласти

#Область ТекстСторноСебестоимостиРеализованногоТовараСоСкладаПроизводства      // (сторно Дт 90.02.1 :: Кт 20)
	ТекстСторноСебестоимостиРеализованногоТовараСоСкладаПроизводства = "
	|ВЫБРАТЬ   //// Себестоимость реализованного товара (сторно) Дт 90.02.1 :: Кт 20)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма)) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ГруппаФинансовогоУчета КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	СУММА(ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ)) КАК СуммаНУДт,
	|	СУММА(ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР)) КАК СуммаПРДт,
	|	СУММА(ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР)) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	СУММА(ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ)) КАК СуммаНУКт,
	|	СУММА(ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР)) КАК СуммаПРКт,
	|	СУММА(ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР)) КАК СуммаВРКт,
	|	""Себестоимость реализованного товара (сторно)"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ХозяйственнаяОперация = Стоимости.ХозяйственнаяОперация 
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.ОрганизацияПолучатель,
	|	Операция.Подразделение,
	|	Строки.ГруппаФинансовогоУчета,
	|	Строки.НаправлениеДеятельности,
	|	Строки.Склад,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)),
	|	Строки.Номенклатура
	|";
#КонецОбласти

#Область ТекстСторноСебестоимостиРеализованногоТовараПрошлыхМесяцев      // (сторно Дт 90.02.1 :: Кт 41.01)
	ТекстСторноСебестоимостиРеализованногоТовараПрошлыхМесяцев = "
	|ВЫБРАТЬ   //// Себестоимость реализованного товара прошлых месяцев (сторно) Дт 90.02.1 :: Кт 41.01)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	-СУММА(ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма)) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ГруппаФинансовогоУчета КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	-СУММА(ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ)) КАК СуммаНУДт,
	|	-СУММА(ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР)) КАК СуммаПРДт,
	|	-СУММА(ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР)) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	Строки.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Строки.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	-СУММА(Строки.Количество) КАК КоличествоКт,
	|	-СУММА(ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ)) КАК СуммаНУКт,
	|	-СУММА(ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР)) КАК СуммаПРКт,
	|	-СУММА(ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР)) КАК СуммаВРКт,
	|	""Себестоимость реализованного товара прошлых месяцев (сторно)"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПоВозврату))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ХозяйственнаяОперация = Стоимости.ХозяйственнаяОперация
	|		И Строки.ПериодПродажи = Стоимости.ПериодПродажи 
	|ГДЕ
	|	(НАЧАЛОПЕРИОДА(Операция.Дата, ГОД) = НАЧАЛОПЕРИОДА(Строки.ПериодПродажи, ГОД)
	|		ИЛИ Строки.ПериодПродажи = ДАТАВРЕМЯ(1,1,1))
	|	И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.ОрганизацияПолучатель,
	|	Операция.Подразделение,
	|	Строки.ГруппаФинансовогоУчета,
	|	Строки.НаправлениеДеятельности,
	|	Строки.Склад,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)),
	|	Строки.Номенклатура
	|";
#КонецОбласти

#Область ТекстСторноСебестоимостиРеализованногоТовараПрошлыхМесяцевСоСкладаПроизводства // (сторно Дт 90.02.1 :: Кт 20)
	ТекстСторноСебестоимостиРеализованногоТовараПрошлыхМесяцевСоСкладаПроизводства = "
	|ВЫБРАТЬ   //// Себестоимость реализованного товара прошлых месяцев (сторно) Дт 90.02.1 :: Кт 20)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	-СУММА(ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма)) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СебестоимостьПродаж) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	Строки.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ГруппаФинансовогоУчета КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	-СУММА(ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ)) КАК СуммаНУДт,
	|	-СУММА(ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР)) КАК СуммаПРДт,
	|	-СУММА(ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР)) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	-СУММА(ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ)) КАК СуммаНУКт,
	|	-СУММА(ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР)) КАК СуммаПРКт,
	|	-СУММА(ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР)) КАК СуммаВРКт,
	|	""Себестоимость реализованного товара прошлых месяцев (сторно)"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПоВозврату))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ХозяйственнаяОперация = Стоимости.ХозяйственнаяОперация
	|		И Строки.ПериодПродажи = Стоимости.ПериодПродажи 
	|ГДЕ
	|	(НАЧАЛОПЕРИОДА(Операция.Дата, ГОД) = НАЧАЛОПЕРИОДА(Строки.ПериодПродажи, ГОД)
	|		ИЛИ Строки.ПериодПродажи = ДАТАВРЕМЯ(1,1,1))
	|	И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.ОрганизацияПолучатель,
	|	Операция.Подразделение,
	|	Строки.ГруппаФинансовогоУчета,
	|	Строки.НаправлениеДеятельности,
	|	Строки.Склад,
	|	ЕСТЬNULL(Строки.Склад.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)),
	|	Строки.Номенклатура
	|";
#КонецОбласти

#Область ТекстСторноВыручкиОтРеализацииКомиссионногоТовара  // (сторно Дт 62.01 :: Кт 76.ОК)
	ТекстСторноВыручкиОтРеализацииКомиссионногоТовара = "
	|ВЫБРАТЬ //// Выручки от реализации комиссионного товара (сторно) Дт 62.01 :: Кт 76.ОК)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(ЕСТЬNULL(-(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл), -Строки.СуммаСНДС)) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	Операция.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.Контрагент
	|	ИНАЧЕ
	|		Операция.Организация
	|	КОНЕЦ  КАК СубконтоДт1,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.ДоговорПокупки
	|	ИНАЧЕ
	|		Операция.Договор
	|	КОНЕЦ КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	СУММА(-Строки.СуммаСНДС) КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыКОформлениюОтчетовКомитенту) КАК СчетКт,
	|	Строки.ВидЗапасовПолучателя.Контрагент КАК СубконтоКт1,
	|	Аналитика.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	СУММА(-Строки.Количество) КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Выручки от реализации комиссионного товара (сторно)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК Строки
	|	ПО
	|		(Строки.Ссылка = Операция.Ссылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		Строки.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И Строки.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	Строки.ВидЗапасовПолучателя.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	| 	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.ОрганизацияПолучатель,
	|	Операция.ГруппаФинансовогоУчета,
	|	Операция.Валюта,
	|	Операция.Подразделение,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.Контрагент
	|	ИНАЧЕ
	|		Операция.Организация
	|	КОНЕЦ,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.ДоговорПокупки
	|	ИНАЧЕ
	|		Операция.Договор
	|	КОНЕЦ,
	|	Строки.ВидЗапасовПолучателя.Контрагент,
	|	Аналитика.Номенклатура
	|";
#КонецОбласти

#Область ТекстВосстановлениеАвансаОтКлиента // (Дт <62.2> :: Кт <62.1, 76>)
	ТекстВосстановлениеАвансаОтКлиента = "
	|ВЫБРАТЬ //// Восстановление авансов клиентов (Дт <62.2> :: Кт <62.1, 76>)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Аналитика.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	-Расчеты.ПредоплатаРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные) КАК ВидСчетаДт,
	|	ВЫБОР КОГДА Операция.Ссылка = Расчеты.ЗаказКлиента ТОГДА
	|		Операция.ГруппаФинансовогоУчета
	|	КОГДА НЕ Расчеты.ЗаказКлиента.ГруппаФинансовогоУчета ЕСТЬ NULL ТОГДА
	|		Расчеты.ЗаказКлиента.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Расчеты.Валюта КАК ВалютаДт,
	|	ВЫБОР КОГДА Операция.Ссылка = Расчеты.ЗаказКлиента ТОГДА
	|		Операция.Подразделение
	|	КОГДА НЕ Расчеты.ЗаказКлиента.Подразделение ЕСТЬ NULL ТОГДА
	|		Расчеты.ЗаказКлиента.Подразделение
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	КОНЕЦ КАК ПодразделениеДт,
	|	ВЫБОР КОГДА Операция.Ссылка = Расчеты.ЗаказКлиента ТОГДА
	|		Операция.НаправлениеДеятельности
	|	КОГДА НЕ Расчеты.ЗаказКлиента.НаправлениеДеятельности ЕСТЬ NULL ТОГДА
	|		Расчеты.ЗаказКлиента.НаправлениеДеятельности
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	Аналитика.Контрагент КАК СубконтоДт1,
	|	Аналитика.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	-Расчеты.Предоплата КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	-Расчеты.ПредоплатаРегл КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаКт,
	|	ВЫБОР КОГДА Операция.Ссылка = Расчеты.ЗаказКлиента ТОГДА
	|		Операция.ГруппаФинансовогоУчета
	|	КОГДА НЕ Расчеты.ЗаказКлиента.ГруппаФинансовогоУчета ЕСТЬ NULL ТОГДА
	|		Расчеты.ЗаказКлиента.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	Расчеты.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	Аналитика.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	-Расчеты.Предоплата КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	-Расчеты.ПредоплатаРегл КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Восстановление авансов клиентов"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК Расчеты
	|	ПО 
	|		Операция.Ссылка = Расчеты.Регистратор
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО 
	|		Аналитика.КлючАналитики = Расчеты.АналитикаУчетаПоПартнерам
	|	
	|ГДЕ
	|	Расчеты.ПредоплатаРегл > 0
	|	И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|";
#КонецОбласти

#Область ТекстВозвратПроданногоКомиссионногоТовара         // (Дт :: Кт 004.01 сторно)
	ТекстВозвратПроданногоКомиссионногоТовара = "
	|ВЫБРАТЬ //// Возврат переданного комиссионного товара (Дт :: Кт 004.01 сторно)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Возврат переданного комиссионного товара"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|";
#КонецОбласти
	
#Область ТекстОтправительСебестоимость                     // (Дт 76.02 :: Кт 41.01)
	ТекстОтправительСебестоимость = "
	|ВЫБРАТЬ //// Себестоимости реализованного товара (сторно) (Дт 76.02 :: Кт 41.01)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Расчеты.ГруппаФинансовогоУчета, Операция.ГруппаФинансовогоУчета) КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение) КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.Контрагент
	|	ИНАЧЕ
	|		Операция.ОрганизацияПолучатель
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.ДоговорПродажи
	|	ИНАЧЕ
	|		Операция.Договор
	|	КОНЕЦ КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Строки.СуммаСНДС - Строки.СуммаНДС КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаКт,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК ГруппаФинансовогоУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	Аналитика.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Аналитика.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Себестоимости реализованного товара (сторно)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК Строки
	|	ПО
	|		(Строки.Ссылка = Операция.Ссылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО 
	|		Строки.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И Строки.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РасчетыПретензия КАК Расчеты
	|	ПО 
	|		Операция.Ссылка = Расчеты.Ссылка
	|ГДЕ
	|	Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И НЕ Операция.Склад.ЦеховаяКладовая
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|";
#КонецОбласти

#Область ТекстОтправительСебестоимостьСкладПроизводства                     // (Дт 76.02 :: Кт 20)
	ТекстОтправительСебестоимостьСкладПроизводства = "
	|ВЫБРАТЬ //// Себестоимости реализованного товара (сторно) (Дт 76.02 :: Кт 20)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Расчеты.ГруппаФинансовогоУчета, Операция.ГруппаФинансовогоУчета) КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение) КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.Контрагент
	|	ИНАЧЕ
	|		Операция.ОрганизацияПолучатель
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.ДоговорПродажи
	|	ИНАЧЕ
	|		Операция.Договор
	|	КОНЕЦ КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Строки.СуммаСНДС - Строки.СуммаНДС КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	Операция.Склад.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	Аналитика.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоКт1,
	|	Аналитика.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Себестоимости реализованного товара (сторно)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК Строки
	|	ПО
	|		(Строки.Ссылка = Операция.Ссылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО 
	|		Строки.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И Строки.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РасчетыПретензия КАК Расчеты
	|	ПО 
	|		Операция.Ссылка = Расчеты.Ссылка
	|ГДЕ
	|	Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Операция.Склад.ЦеховаяКладовая
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|";
#КонецОбласти

#Область ТекстОтправительНДС                               // (Дт 76.02 :: Кт 68.02)
	ТекстОтправительНДС = "
	|ВЫБРАТЬ  //// НДС (сторно) (Дт 76.02 :: Кт 68.02) 
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл, Строки.СуммаНДС) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Расчеты.ГруппаФинансовогоУчета, Операция.ГруппаФинансовогоУчета) КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение) КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.Контрагент
	|	ИНАЧЕ
	|		Операция.ОрганизацияПолучатель
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.ДоговорПродажи
	|	ИНАЧЕ
	|		Операция.Договор
	|	КОНЕЦ КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Строки.СуммаНДС КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДС) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	"" НДС (сторно)"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК Строки
	|	ПО
	|		(Строки.Ссылка = Операция.Ссылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Строки.Ссылка = Суммы.Регистратор
	|		И Строки.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РасчетыПретензия КАК Расчеты
	|	ПО 
	|		Операция.Ссылка = Расчеты.Ссылка
	|ГДЕ
	|	Операция.НалогообложениеНДС = ЗНАЧЕНИЕ (Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	И Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|";
#КонецОбласти

#Область ТекстПереносПретензииНаРасчеты                    // (Дт 60.02 :: Кт 76.02)
	ТекстПереносПретензииНаРасчеты = "
	|ВЫБРАТЬ //// Перенос претензии на авансы (Дт 60.02 :: Кт 76.02)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(РасчетыПоДокументам.ПредоплатаРегл, Расчеты.СуммаРегл) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчетаДт,
	|	Расчеты.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	Расчеты.Подразделение КАК ПодразделениеДт,
	|	Расчеты.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Расчеты.Контрагент КАК СубконтоДт1,
	|	ВЫБОР КОГДА Операция.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		Операция.ДоговорПродажи
	|	ИНАЧЕ
	|		Операция.Договор
	|	КОНЕЦ КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	ЕСТЬNULL(РасчетыПоДокументам.Предоплата, Расчеты.Сумма) КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям) КАК ВидСчетаКт,
	|	РасчетыПретензия.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	РасчетыПретензия.Подразделение КАК ПодразделениеКт,
	|	РасчетыПретензия.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	РасчетыПретензия.Контрагент КАК СубконтоКт1,
	|	РасчетыПретензия.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ЕСТЬNULL(РасчетыПоДокументам.Предоплата, Расчеты.Сумма) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перенос претензии на авансы"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Расчеты КАК Расчеты
	|	ПО
	|		Операция.Ссылка = Расчеты.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РасчетыПоДокументам КАК РасчетыПоДокументам
	|	ПО
	|		Расчеты.Ссылка = РасчетыПоДокументам.Ссылка
	|		И Расчеты.Контрагент = РасчетыПоДокументам.Контрагент
	|		И Расчеты.ЗаказПоставщику = РасчетыПоДокументам.ЗаказПоставщику
	|		И Расчеты.Валюта = РасчетыПоДокументам.Валюта
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыПретензия КАК РасчетыПретензия
	|	ПО
	|		Операция.Ссылка = РасчетыПретензия.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(РасчетыПоДокументам.ПредоплатаРегл, Расчеты.СуммаРегл) <> 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ //// Перенос претензии на расчеты (Дт 60.01 :: Кт 76.02)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	РасчетыПоДокументам.ДолгРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаДт,
	|	РасчетыПоДокументам.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	РасчетыПоДокументам.Валюта КАК ВалютаДт,
	|	РасчетыПоДокументам.Подразделение КАК ПодразделениеДт,
	|	РасчетыПоДокументам.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	РасчетыПоДокументам.Контрагент КАК СубконтоДт1,
	|	РасчетыПоДокументам.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	РасчетыПоДокументам.Долг КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПретензиям) КАК ВидСчетаКт,
	|	РасчетыПретензия.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.Валюта КАК ВалютаКт,
	|	РасчетыПретензия.Подразделение КАК ПодразделениеКт,
	|	РасчетыПретензия.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	РасчетыПретензия.Контрагент КАК СубконтоКт1,
	|	РасчетыПретензия.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	РасчетыПоДокументам.Долг КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перенос претензии на расчеты"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыПоДокументам КАК РасчетыПоДокументам
	|	ПО
	|		Операция.Ссылка = РасчетыПоДокументам.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыПретензия КАК РасчетыПретензия
	|	ПО
	|		Операция.Ссылка = РасчетыПретензия.Ссылка
	|ГДЕ
	|	РасчетыПоДокументам.ДолгРегл <> 0
	|";
#КонецОбласти

#Область ТекстОтправительВозвратКомиссионногоТовара        // (Дт  :: Кт 004.01)
	ТекстОтправительВозвратКомиссионногоТовара = "
	|ВЫБРАТЬ //// Возврат комиссионного товара (Дт  :: Кт 004.01)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Возврат комиссионного товара "" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Строки.Склад <> Операция.Организация
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
	|";
#КонецОбласти

#Область ТекстОтклонениеВСтоимостиРасходы                  // (Дт 44.01 :: Кт 41.01)
	ТекстОтклонениеВСтоимостиРасходы = "
	|ВЫБРАТЬ //// Отклонение в стоимости возвращенных товаров (Дт 44.01 :: Кт 41.01)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, 0) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	Операция.Склад КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.Склад КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Отклонение в стоимости возвращенных товаров (расходы)"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	ЕСТЬNULL(Стоимости.Сумма, 0) > 0
	|	И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|";
#КонецОбласти

#Область ТекстОтклонениеВСтоимостиРасходыСкладПроизводства                  // (Дт 44.01 :: Кт 20)
	ТекстОтклонениеВСтоимостиРасходыСкладПроизводства = "
	|ВЫБРАТЬ //// Отклонение в стоимости возвращенных товаров (Дт 44.01 :: Кт 20)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, 0) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	Операция.Склад.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Склад.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Отклонение в стоимости возвращенных товаров (расходы)"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	ЕСТЬNULL(Стоимости.Сумма, 0) > 0
	|	И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|";
#КонецОбласти

#Область ТекстОтклонениеВСтоимостиДоходы                   // (Дт 41.01 :: Кт 91.01)
	ТекстОтклонениеВСтоимостиДоходы = "
	|ВЫБРАТЬ //// Отклонение в стоимости возвращенных товаров (Дт 41.01 :: Кт 91.01)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(-Стоимости.Сумма, 0) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	Операция.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Операция.Склад КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(-Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(-Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(-Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(-Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(-Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(-Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Отклонение в стоимости возвращенных товаров (доходы)"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	ЕСТЬNULL(Стоимости.Сумма, 0) < 0
	|	И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|";
#КонецОбласти

#Область ТекстОтклонениеВСтоимостиДоходыСкладПроизводства                   // (Дт 20 :: Кт 91.01)
	ТекстОтклонениеВСтоимостиДоходыСкладПроизводства = "
	|ВЫБРАТЬ //// Отклонение в стоимости возвращенных товаров (Дт 20 :: Кт 91.01)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(-Стоимости.Сумма, 0) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	Операция.Склад.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(-Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(-Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(-Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК АналитикаУчетаКт,
	|	Операция.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(-Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(-Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(-Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Отклонение в стоимости возвращенных товаров (доходы)"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	ЕСТЬNULL(Стоимости.Сумма, 0) < 0
	|	И Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|";
#КонецОбласти

#Область ТекстВключениеИсключениеНДСВСтоимость             // (Дт 91 :: Кт 19.03)
	
	ТекстВключениеИсключениеНДСВСтоимость = "
	|ВЫБРАТЬ //// Исключение НДС в стоимость товара (Дт 91 :: Кт 19.03)
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Партии.Период КАК Период,
	|	Партии.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСРегл
	|	ИНАЧЕ
	|		-Партии.НДСРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Партии.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаКт,
	|	Партии.ВидДеятельностиНДС                                              КАК АналитикаУчетаКт,
	|	Партии.ВидЦенности                                                     КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Партии.Контрагент КАК СубконтоКт1,
	|	Партии.ДокументПоступления КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Исключение/включение НДС в стоимость товаров"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Партии КАК Партии
	|	ПО
	|		Операция.Ссылка = Партии.Ссылка
	|ГДЕ
	|	(Партии.ВключениеНДСВСтоимость ИЛИ Партии.ИсключениеНДСИзСтоимости)
	|";
#КонецОбласти

	Возврат ТекстВозвратОтКомиссионера
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВозвратНаСкладПроизводстваОтКомиссионера
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВозвратПоСубкомиссии
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСторноНачисленияНДСПолучателя
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСторноВыручкиОтРеализацииСобственногоТовара
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСторноСебестоимостиРеализованногоТовара
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСторноСебестоимостиРеализованногоТовараСоСкладаПроизводства
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСторноСебестоимостиРеализованногоТовараПрошлыхМесяцев
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСторноСебестоимостиРеализованногоТовараПрошлыхМесяцевСоСкладаПроизводства
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстСторноВыручкиОтРеализацииКомиссионногоТовара
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВосстановлениеАвансаОтКлиента
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВозвратПроданногоКомиссионногоТовара
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтправительСебестоимость
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтправительСебестоимостьСкладПроизводства
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтправительНДС
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПереносПретензииНаРасчеты
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтправительВозвратКомиссионногоТовара
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтклонениеВСтоимостиРасходы
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтклонениеВСтоимостиРасходыСкладПроизводства
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтклонениеВСтоимостиДоходы
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтклонениеВСтоимостиДоходыСкладПроизводства
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВключениеИсключениеНДСВСтоимость;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - текст запроса создания временных таблиц.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Расчеты.Регистратор КАК Ссылка,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.ЗаказПоставщику,
	|	Расчеты.ЗаказПоставщику.Подразделение КАК Подразделение,
	|	ЕСТЬNULL(Расчеты.ЗаказПоставщику.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК ГруппаФинансовогоУчета,
	|	Расчеты.Валюта,
	|	СУММА(Расчеты.Сумма) КАК Сумма,
	|	СУММА(Расчеты.СуммаРегл) КАК СуммаРегл
	|ПОМЕСТИТЬ Расчеты
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыСПоставщиками КАК Расчеты
	|	ПО
	|		ДокументыКОтражению.Ссылка = Расчеты.Регистратор
	|		И ДокументыКОтражению.Ссылка <> Расчеты.ЗаказПоставщику
	|	
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Регистратор,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.Договор,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности,
	|	Расчеты.ЗаказПоставщику,
	|	Расчеты.Валюта,
	|	ЕСТЬNULL(Расчеты.ЗаказПоставщику.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Расчеты.Регистратор КАК Ссылка,
	|	ЕСТЬNULL(Расчеты.ЗаказПоставщику.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК ГруппаФинансовогоУчета,
	|	Расчеты.ЗаказПоставщику.Подразделение КАК Подразделение,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.Договор КАК Договор
	|ПОМЕСТИТЬ РасчетыПретензия
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыСПоставщиками КАК Расчеты
	|	ПО
	|		ДокументыКОтражению.Ссылка = Расчеты.Регистратор
	|		И ДокументыКОтражению.Ссылка = Расчеты.ЗаказПоставщику
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|ВЫБРАТЬ
	|	Расчеты.Регистратор КАК Ссылка,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.Договор КАК Договор,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ЕСТЬNULL(Расчеты.ЗаказПоставщику.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК ГруппаФинансовогоУчета,
	|	Расчеты.ЗаказПоставщику.Подразделение КАК Подразделение,
	|	Расчеты.Валюта КАК Валюта,
	|	СУММА(Расчеты.Предоплата) КАК Предоплата,
	|	СУММА(Расчеты.ПредоплатаРегл) КАК ПредоплатаРегл,
	|	СУММА(Расчеты.Долг) КАК Долг,
	|	СУММА(Расчеты.ДолгРегл) КАК ДолгРегл
	|ПОМЕСТИТЬ РасчетыПоДокументам
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|	ПО
	|		ДокументыКОтражению.Ссылка = Расчеты.Регистратор
	|		И ДокументыКОтражению.Ссылка <> Расчеты.ЗаказПоставщику
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Регистратор,
	|	Расчеты.АналитикаУчетаПоПартнерам.Контрагент,
	|	Расчеты.АналитикаУчетаПоПартнерам.Договор,
	|	Расчеты.АналитикаУчетаПоПартнерам.НаправлениеДеятельности,
	|	Расчеты.ЗаказПоставщику,
	|	Расчеты.Валюта,
	|	ЕСТЬNULL(Расчеты.ЗаказПоставщику.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка))
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	
	Возврат ТекстЗапроса;
	
КонецФункции

//-- НЕ УТ

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
// Параметры
//	Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
// Возвращаемое значение
//	Структура - Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ВозвратТоваровМеждуОрганизациями";
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПустаяСсылка());
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерий.ТолькоСерииДляСебестоимости = Истина;
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

// Возвращает текст запроса расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|			ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|		ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|			И (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

// Возвращает текст запроса для расчета необходимости ввода счета-фактуры выданного.
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДляРасчетаНеобходимостиСчетаФактуры() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка      КАК Основание,
	|	ДанныеДокумента.Дата        КАК ДатаДокумента,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Контрагент  КАК Контрагент,
	|	ДанныеДокумента.Валюта      КАК Валюта,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ТаблицаСчетовФактуры.СчетФактура ЕСТЬ NULL 
	|				И ДанныеДокумента.Проведен
	|				И %ТекстУсловия%
	|			ТОГДА 
	|				ВЫБОР 
	|					КОГДА УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС
	|							И ДанныеДокумента.НалогообложениеНДС <> &ПродажаОблагаетсяЕНВД
	|						ТОГДА ИСТИНА
	|					КОГДА НЕ ТоварыСНДС.Ссылка ЕСТЬ NULL
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                       КАК Требуется
	|//ОператорПОМЕСТИТЬ
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетовФактуры КАК ТаблицаСчетовФактуры
	|		ПО ДанныеДокумента.Ссылка = ТаблицаСчетовФактуры.Основание
	|			И ДанныеДокумента.Организация = ТаблицаСчетовФактуры.Организация
	|			И (ВЫБОР 
	|					КОГДА	ТаблицаСчетовФактуры.Контрагент.Ссылка = NULL 
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ДанныеДокумента.Контрагент = ТаблицаСчетовФактуры.Контрагент
	|			  КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитика КАК УчетнаяПолитика
	|		ПО ДанныеДокумента.Ссылка = УчетнаяПолитика.Ссылка
	|			И ДанныеДокумента.Организация = УчетнаяПолитика.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ТоварыСНДС
	|		ПО ДанныеДокумента.Ссылка = ТоварыСНДС.Ссылка
	|			И ТоварыСНДС.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) 
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивОснований)
	|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Контрагент,
	|	ДанныеДокумента.Валюта
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                КАК Основание,
	|	ДанныеДокумента.Дата                  КАК ДатаДокумента,
	|	ДанныеДокумента.Организация           КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК Контрагент,
	|	ДанныеДокумента.Валюта                КАК Валюта,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ТаблицаСчетовФактуры.СчетФактура ЕСТЬ NULL 
	|				И ДанныеДокумента.Проведен
	|				И %ТекстУсловия%
	|			ТОГДА 
	|				ВЫБОР 
	|					КОГДА УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС
	|							И ДанныеДокумента.НалогообложениеНДС <> &ПродажаОблагаетсяЕНВД
	|						ТОГДА ИСТИНА
	|					КОГДА НЕ ТоварыСНДС.Ссылка ЕСТЬ NULL
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ)                       КАК Требуется
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСчетовФактуры КАК ТаблицаСчетовФактуры
	|		ПО ДанныеДокумента.Ссылка = ТаблицаСчетовФактуры.Основание
	|			И ДанныеДокумента.Организация = ТаблицаСчетовФактуры.Организация
	|			И (ВЫБОР 
	|					КОГДА	ТаблицаСчетовФактуры.Контрагент.Ссылка = NULL
	|						ИЛИ ТаблицаСчетовФактуры.Контрагент = Значение(Справочник.Контрагенты.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ДанныеДокумента.ОрганизацияПолучатель = ТаблицаСчетовФактуры.Контрагент
	|			  КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитика КАК УчетнаяПолитика
	|		ПО ДанныеДокумента.Ссылка = УчетнаяПолитика.Ссылка
	|			И ДанныеДокумента.Организация = УчетнаяПолитика.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ТоварыСНДС
	|		ПО ДанныеДокумента.Ссылка = ТоварыСНДС.Ссылка
	|			И ТоварыСНДС.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) 
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивОснований)
	|	И НЕ ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель,
	|	ДанныеДокумента.Валюта
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстУсловия%", ТекстУсловияТребуетсяСчетФактура());
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст условия запроса, по которым документу требуется счет-фактура.
// Условие применяется для таблица "ДанныеДокумента", содержащую реквизиты документа.
//
//	Возвращаемое значение:
//		Строка - текст условия запроса
//
Функция ТекстУсловияТребуетсяСчетФактура() Экспорт
	
	ТекстУсловия = "ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)";
	
	Возврат ТекстУсловия;
	
КонецФункции

// Возвращает текст условия запроса, по которым документу требуется счет-фактура полученный (посредника).
// Условие применяется для таблица "ДанныеДокумента", содержащую реквизиты документа.
//
//	Возвращаемое значение:
//		Строка - текст условия запроса
//
Функция ТекстУсловияТребуетсяСчетФактураПосредника() Экспорт
	
	ТекстУсловия = ТекстУсловияТребуетсяСчетФактура() + "
	|И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|И ДанныеДокумента.ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)";
	
	Возврат ТекстУсловия;
	
КонецФункции

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
// 
//  Возвращаемое значение:
//  Структура - структура параметров, см. Справочники.Назначения.МакетФормыВыбораНазначений().
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ВсеНазначения", Ложь, "Объект.Товары.Назначение");
	
	Возврат МакетФормы;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры);
	//++ НЕ УТ
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ
	
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойств)
	
	// получаем значения реквизитов документа
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеДокумента.ДокументПоступления КАК ДокументПоступления,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Менеджер КАК Менеджер,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ДоговорПродажи КАК ДоговорПродажи,
	|	ДанныеДокумента.ДоговорПокупки КАК ДоговорПокупки,
	|
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	(ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|		ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ) КАК ЭтоВозвратТовара,
	|	(ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
	|		ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ) КАК ЭтоВозвратПоКомиссии,
	|
	|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента КАК РасчетыЧерезОтдельногоКонтрагента,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДокументПоступления.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|			ТОГДА ИСТИНА
	|		КОГДА ДанныеДокумента.ДокументПоступления = ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА ВЫБОР КОГДА ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|				И ДанныеДокумента.ДоговорПродажи.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|				ТОГДА ИСТИНА
	|			КОГДА НЕ ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|				И ДанныеДокумента.Договор.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасчетыПоДоговорам,
	|
	|	ДанныеДокумента.ПоТоварамКОформлению КАК ПоТоварамКОформлению,
	|
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента
	|
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	// наполнение запроса данных проведения параметрами
	Запрос.УстановитьПараметр("Ссылка",								Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Период",								Реквизиты.Период);
	Запрос.УстановитьПараметр("НачалоМесяцаПериода",                НачалоМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",				Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ЭтоВозвратТовара",					Реквизиты.ЭтоВозвратТовара);
	Запрос.УстановитьПараметр("ЭтоВозвратПоКомиссии",				Реквизиты.ЭтоВозвратПоКомиссии);
	Запрос.УстановитьПараметр("Организация",						Реквизиты.Организация);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель",				Реквизиты.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Склад",								Реквизиты.Склад);
	Запрос.УстановитьПараметр("Подразделение",						Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ПоТоварамКОформлению",				Реквизиты.ПоТоварамКОформлению);
	Запрос.УстановитьПараметр("Валюта",								Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",		Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",			Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("РасчетыЧерезОтдельногоКонтрагента",	Реквизиты.РасчетыЧерезОтдельногоКонтрагента);
	Запрос.УстановитьПараметр("Контрагент",							Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("НалогообложениеНДС",					Реквизиты.НалогообложениеНДС);
	Запрос.УстановитьПараметр("ДокументПоступления",				Реквизиты.ДокументПоступления);
	Запрос.УстановитьПараметр("Менеджер",							Реквизиты.Менеджер);
	Запрос.УстановитьПараметр("Партнер",							Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Договор",							Реквизиты.Договор);
	Запрос.УстановитьПараметр("ДоговорПродажи",						Реквизиты.ДоговорПродажи);
	Запрос.УстановитьПараметр("ДоговорПокупки",						Реквизиты.ДоговорПокупки);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",			Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("КорВидЗапасов",						Справочники.ВидыЗапасов.ВидЗапасовДокумента(Реквизиты.Организация, Перечисления.ХозяйственныеОперации.ВозвратТоваровПоставщику, Неопределено));
	Запрос.УстановитьПараметр("СуммаДокумента",						Реквизиты.СуммаДокумента);
	Запрос.УстановитьПараметр("РасчетыПоДоговорам",					Реквизиты.РасчетыПоДоговорам);
	
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета",
		ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	Запрос.УстановитьПараметр("ИспользуетсяНазначение",
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПредварительный = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Склад           КАК Склад,
		|	Таблица.Номенклатура    КАК Номенклатура,
		|	Таблица.Характеристика  КАК Характеристика,
		|	Таблица.Назначение      КАК Назначение,
		|	Таблица.Серия           КАК Серия
		|ИЗ 
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		&ОрганизацияПолучатель КАК Склад,
		|		Товары.Номенклатура    КАК Номенклатура,
		|		Товары.Характеристика  КАК Характеристика,
		|		&Назначение            КАК Назначение,
		|		&Серия                 КАК Серия
		|	ИЗ
		|		Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК Товары
		|	ГДЕ
		|		Товары.Ссылка = &Ссылка 
		|		И НЕ &ЭтоВозвратТовара
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		&Организация           КАК Склад,
		|		Товары.Номенклатура    КАК Номенклатура,
		|		Товары.Характеристика  КАК Характеристика,
		|		&Назначение            КАК Назначение,
		|		&Серия                 КАК Серия
		|	ИЗ
		|		Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК Товары
		|	ГДЕ
		|		Товары.Ссылка = &Ссылка 
		|		И НЕ &ЭтоВозвратТовара
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Ключи.Склад            КАК Склад,
		|		Ключи.Номенклатура     КАК Номенклатура,
		|		Ключи.Характеристика   КАК Характеристика,
		|		&Назначение            КАК Назначение,
		|		Ключи.Серия            КАК Серия
		|	ИЗ
		|		Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК Товары
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
		|		ПО Товары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
		|	ГДЕ
		|		Товары.Ссылка = &Ссылка 
		|		И НЕ &ИспользуетсяНазначение
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Товары.СкладОтгрузки   КАК Склад,
		|		Ключи.Номенклатура     КАК Номенклатура,
		|		Ключи.Характеристика   КАК Характеристика,
		|		Ключи.Назначение       КАК Назначение,
		|		Ключи.Серия            КАК Серия
		|	ИЗ
		|		Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК Товары
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
		|		ПО Товары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
		|	ГДЕ
		|		Товары.Ссылка = &Ссылка 
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Товары.СкладОтгрузки   КАК Склад,
		|		Ключи.Номенклатура     КАК Номенклатура,
		|		Ключи.Характеристика   КАК Характеристика,
		|		&Назначение            КАК Назначение,
		|		Ключи.Серия            КАК Серия
		|	ИЗ
		|		Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК Товары
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
		|		ПО Товары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
		|	ГДЕ
		|		Товары.Ссылка = &Ссылка 
		|		И НЕ &ИспользуетсяНазначение
		|	) КАК Таблица
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|	ПО 
		|		Таблица.Номенклатура = Аналитика.Номенклатура 
		|		И Таблица.Характеристика = Аналитика.Характеристика
		|		И Таблица.Назначение = Аналитика.Назначение
		//++ НЕ УТ 
		|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
		//-- НЕ УТ
		|		И Таблица.Серия = Аналитика.Серия
		|		И Таблица.Склад = Аналитика.Склад
		|ГДЕ
		|	Аналитика.КлючАналитики ЕСТЬ NULL
		|");
	ЗапросПредварительный.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросПредварительный.УстановитьПараметр("ОрганизацияПолучатель", Запрос.Параметры.ОрганизацияПолучатель);
	ЗапросПредварительный.УстановитьПараметр("Организация", Запрос.Параметры.Организация);
	ЗапросПредварительный.УстановитьПараметр("Серия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	ЗапросПредварительный.УстановитьПараметр("Назначение", Справочники.Назначения.ПустаяСсылка());
	ЗапросПредварительный.УстановитьПараметр("ЭтоВозвратТовара", Запрос.Параметры.ЭтоВозвратТовара);
	ЗапросПредварительный.УстановитьПараметр("ИспользуетсяНазначение", Запрос.Параметры.ИспользуетсяНазначение);
	Выборка = ЗапросПредварительный.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры 

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУПР") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Запрос.Параметры.Валюта, Неопределено,
		Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУПР",  Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаУчетаПолучатель(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПолучатель") Тогда
		Возврат;
	КонецЕсли;
	
	КлючКлиент = Новый Структура();
	КлючКлиент.Вставить("Организация",             Запрос.Параметры.ОрганизацияПолучатель);
	КлючКлиент.Вставить("Партнер",                 Справочники.Партнеры.НашеПредприятие);
	КлючКлиент.Вставить("Контрагент",              Запрос.Параметры.Организация);
	КлючКлиент.Вставить("Договор",                 Запрос.Параметры.Договор);
	КлючКлиент.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	
	Запрос.УстановитьПараметр("АналитикаУчетаПолучатель",
		РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(КлючКлиент));
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаВзаиморасчетовПолучатель(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаВзаиморасчетовПолучатель") Тогда
		Возврат;
	КонецЕсли;
	
	РасчетЧерезКонтрагента = Запрос.Параметры.РасчетыЧерезОтдельногоКонтрагента;
	
	КлючВзаиморасчетовКлиент = Новый Структура();
	КлючВзаиморасчетовКлиент.Вставить("Организация",             Запрос.Параметры.ОрганизацияПолучатель);
	КлючВзаиморасчетовКлиент.Вставить("Партнер",                 ?(РасчетЧерезКонтрагента,
																	Запрос.Параметры.Партнер,
																	Справочники.Партнеры.НашеПредприятие));
	КлючВзаиморасчетовКлиент.Вставить("Контрагент",              ?(РасчетЧерезКонтрагента,
																	Запрос.Параметры.Контрагент,
																	Запрос.Параметры.Организация));
	КлючВзаиморасчетовКлиент.Вставить("Договор",                 ?(РасчетЧерезКонтрагента,
																	Запрос.Параметры.ДоговорПродажи,
																	Запрос.Параметры.Договор));
	КлючВзаиморасчетовКлиент.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовПолучатель",
		РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(КлючВзаиморасчетовКлиент));
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаВзаиморасчетовОтправитель(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаВзаиморасчетовОтправитель") Тогда
		Возврат;
	КонецЕсли;
	
	РасчетЧерезКонтрагента = Запрос.Параметры.РасчетыЧерезОтдельногоКонтрагента;
	
	КлючВзаиморасчетовПоставщик = Новый Структура();
	КлючВзаиморасчетовПоставщик.Вставить("Организация",             Запрос.Параметры.Организация);
	КлючВзаиморасчетовПоставщик.Вставить("Партнер",                 ?(РасчетЧерезКонтрагента,
																		Запрос.Параметры.Партнер,
																		Справочники.Партнеры.НашеПредприятие));
	КлючВзаиморасчетовПоставщик.Вставить("Контрагент",              ?(РасчетЧерезКонтрагента,
																		Запрос.Параметры.Контрагент,
																		Запрос.Параметры.ОрганизацияПолучатель));
	КлючВзаиморасчетовПоставщик.Вставить("Договор",                 ?(РасчетЧерезКонтрагента,
																		Запрос.Параметры.ДоговорПокупки,
																		Запрос.Параметры.Договор));
	КлючВзаиморасчетовПоставщик.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовОтправитель",
		РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(КлючВзаиморасчетовПоставщик));
	
КонецПроцедуры

Функция ТекстЗапросаВтОбъектыРасчетов(Запрос, ТекстыЗапроса)
	ИмяВременнойТаблицы = "ВтОбъектыРасчетов";
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
		|
		|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
		|		ИЛИ ТаблицаРасшифровкаПлатежа.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|		ТОГДА ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента
		|			ТОГДА ВЫБОР КОГДА &ДоговорПродажи <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|				ТОГДА &ДоговорПродажи
		|				ИНАЧЕ &Ссылка
		|			КОНЕЦ
		|			ИНАЧЕ &Ссылка
		|		КОНЕЦ
		|	КОГДА ТаблицаРасшифровкаПлатежа.Заказ ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
		|		ИЛИ ТаблицаРасшифровкаПлатежа.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
		|		ТаблицаРасшифровкаПлатежа.Заказ
		|	ИНАЧЕ
		|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
		|	КОНЕЦ КАК Договор,
		|
		|	ВЫБОР 
		|		КОГДА ТаблицаРасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
		|			ТОГДА &НаправлениеДеятельности
		|		ИНАЧЕ
		|   		ТаблицаРасшифровкаПлатежа.Заказ.НаправлениеДеятельности 
		|	КОНЕЦ КАК НаправлениеДеятельности 
		|
		|ПОМЕСТИТЬ ВтОбъектыРасчетов
		|ИЗ
		|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
		|	
		|ГДЕ
		|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Заказ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрЗапросаАналитикаВзаиморасчетовПолучатель(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	РасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовПолучатель КАК АналитикаУчетаПоПартнерам,
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|		ТОГДА ВЫБОР КОГДА &ДоговорПродажи <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА &ДоговорПродажи
	|			ИНАЧЕ &Ссылка
	|		КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР КОГДА РасшифровкаПлатежа.Заказ <> НЕОПРЕДЕЛЕНО
	|				ТОГДА РасшифровкаПлатежа.Заказ
	|				ИНАЧЕ &Ссылка
	|			КОНЕЦ 
	|	КОНЕЦ КАК ЗаказКлиента,
	|	РасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК Сумма,
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК КОплате,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(15, 2)) КАК СуммаУпр,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Период КАК ДатаРегистратора,
	|	&Организация КАК Организация
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка=&Ссылка И &ЭтоВозвратТовара
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтОбъектыРасчетов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтОбъектыРасчетов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрЗапросаАналитикаВзаиморасчетовОтправитель(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	0                                      КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	&Период                                КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовОтправитель    КАК АналитикаУчетаПоПартнерам,
	|	&Организация                           КАК Организация,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	&Ссылка                                КАК ЗаказПоставщику,
	|	&Валюта                                КАК Валюта,
	|
	|	&СуммаДокумента                                                 КАК Сумма,
	|	&СуммаДокумента                                                 КАК КОплате,
	|	ВЫРАЗИТЬ(&СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(&СуммаДокумента * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(15, 2)) КАК СуммаУпр
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК Шапка
	|ГДЕ
	|	Шапка.Ссылка=&Ссылка
	|	И &ЭтоВозвратТовара
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0                                      КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	&Период                                КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовОтправитель    КАК АналитикаУчетаПоПартнерам,
	|	&Организация                           КАК Организация,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	&Ссылка                                КАК ЗаказПоставщику,
	|	&Валюта                                КАК Валюта,
	|
	|	СУММА(РасшифровкаПлатежа.Сумма) КАК Сумма,
	|	СУММА(РасшифровкаПлатежа.Сумма) КАК КОплате,
	|	СУММА(ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))) КАК СуммаРегл,
	|	СУММА(ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(15, 2))) КАК СуммаУпр
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка=&Ссылка
	|	И &ЭтоВозвратТовара
	|	И ВЫБОР КОГДА (РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|			ИЛИ РасшифровкаПлатежа.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)) ТОГДА
	|		ВЫБОР КОГДА	&РасчетыПоДоговорам ТОГДА
	|			ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|				ТОГДА &ДоговорПродажи
	|				ИНАЧЕ &Договор
	|			КОНЕЦ
	|		ИНАЧЕ
	|			&Ссылка
	|		КОНЕЦ
	|	ИНАЧЕ
	|		РасшифровкаПлатежа.Заказ
	|	КОНЕЦ <> &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасшифровкаПлатежа.НомерСтроки         КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	&Период                                КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовОтправитель    КАК АналитикаУчетаПоПартнерам,
	|	&Организация                           КАК Организация,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|		ТОГДА ВЫБОР КОГДА &ДоговорПродажи <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА &ДоговорПродажи
	|			ИНАЧЕ &Ссылка
	|		КОНЕЦ
	|		ИНАЧЕ РасшифровкаПлатежа.Заказ
	|	КОНЕЦ КАК ЗаказПоставщику,
	|
	|	РасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК Сумма,
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК КОплате,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(15, 2)) КАК СуммаУпр
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОбъектыРасчетов КАК ТаблицаОбъектовРасчетов
	|		ПО РасшифровкаПлатежа.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|	
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка=&Ссылка
	|	И &ЭтоВозвратТовара
	|	И ВЫБОР КОГДА (РасшифровкаПлатежа.Заказ = НЕОПРЕДЕЛЕНО
	|			ИЛИ РасшифровкаПлатежа.Заказ = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)) ТОГДА
	|		ВЫБОР КОГДА	&РасчетыПоДоговорам ТОГДА
	|			ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|				ТОГДА &ДоговорПродажи
	|				ИНАЧЕ &Договор
	|			КОНЕЦ
	|		ИНАЧЕ
	|			&Ссылка
	|		КОНЕЦ
	|	ИНАЧЕ
	|		РасшифровкаПлатежа.Заказ
	|	КОНЕЦ <> &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтЗапасыОтправителя";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Запрос.Параметры);
	
	ТекстЗапроса =  "
	|ВЫБРАТЬ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры                              КАК АналитикаВозврата,
	|	АналитикаНоменклатурыБезНазначения.КлючАналитики                    КАК АналитикаВозвратаБезНазначения,
	|	Неопределено                                                        КАК АналитикаКомиссии,
	|	ВидыЗапасов.НомерСтроки                                             КАК НомерСтроки,
	|	Аналитика.Номенклатура                                              КАК Номенклатура,
	|	Аналитика.Характеристика                                            КАК Характеристика,
	|	ВидыЗапасов.ВидЗапасов                                              КАК ВидЗапасов,
	|	(ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ Неопределено КОНЕЦ)                                       КАК ВидЗапасовУчетный,
	|	ВидыЗапасов.ВидЗапасов.ТипЗапасов                                   КАК ТипЗапасов,
	|	ВидыЗапасов.НомерГТД                                                КАК НомерГТД,
	|	ВидыЗапасов.Количество                                              КАК Количество,
	|	ВидыЗапасов.СуммаСНДС                                               КАК СуммаСНДС,
	|	ВидыЗапасов.СтавкаНДС                                               КАК СтавкаНДС,
	|	ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	ВидыЗапасов.СуммаНДС                                                КАК СуммаНДС,
	|	ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС                        КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр)  КАК ЧИСЛО(15,2)) КАК СуммаСНДСУпр,
	|	ВЫРАЗИТЬ(((ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр)  КАК ЧИСЛО(15,2)) КАК СуммаБезНДСУпр,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл) КАК ЧИСЛО(15,2)) КАК СуммаСНДСРегл,
	|	ЕстьNULL(Суммы.СуммаБезНДСРегл, 0)									КАК СуммаБезНДСРегл,	
	|	ЕстьNULL(Суммы.СуммаНДСРегл, 0)										КАК СуммаНДСРегл,	
	|	ЕстьNULL(Суммы.БазаНДСРегл, 0)										КАК БазаНДСРегл,
	|	ВидыЗапасов.ВидЗапасовПолучателя                                    КАК ВидЗапасовПолучателя,
	|	ВидыЗапасов.ИдентификаторСтроки                                     КАК ИдентификаторСтроки,
	|	ВидыЗапасов.ДокументРеализации                                      КАК ДокументРеализации,
	|	Аналитика.Склад                                                     КАК Склад,
	|	Аналитика.Склад.ЦеховаяКладовая                                     КАК ЦеховаяКладовая
	|ПОМЕСТИТЬ ВтЗапасыОтправителя
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатурыБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаНоменклатурыБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаНоменклатурыБезНазначения.Характеристика
	|		И Аналитика.Серия = АналитикаНоменклатурыБезНазначения.Серия
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаНоменклатурыБезНазначения.СтатьяКалькуляции
	//-- НЕ УТ
	|		И Аналитика.Склад = АналитикаНоменклатурыБезНазначения.Склад
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаНоменклатурыБезНазначения.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ВидыЗапасов.ВидЗапасов.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		ВидыЗапасов.Ссылка = Суммы.Регистратор
	|		И ВидыЗапасов.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.БазаНДСРегл <> 0
	|		И (ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) = Суммы.СуммаБезНДС
	|		И ВидыЗапасов.СуммаНДС = Суммы.СуммаНДС
	|ГДЕ
	|	ВидыЗапасов.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса)
	
	// Создадим временную таблицу "ВтТаблицаАналитикУчетаПартий"
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""ВидыЗапасов"" 							КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 				КАК НомерСтроки,
	|	ДанныеДокумента.Партнер						КАК Поставщик,
	|	ДанныеДокумента.Контрагент					КАК Контрагент,
	|	ТаблицаДокумента.СтавкаНДС 					КАК СтавкаНДС,
	|	ДанныеДокумента.НалогообложениеНДС			КАК НалогообложениеНДС,
	|	ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ТаблицаДокумента.ВидЗапасов.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос, ТекстыЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтЗапасыПолучателя";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Запрос.Параметры);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =  "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры                                               КАК АналитикаВозврата,
	|	АналитикаНоменклатурыБезНазначения.КлючАналитики                                            КАК АналитикаВозвратаБезНазначения,
	|	АналитикаКомиссии.КлючАналитики                                                             КАК АналитикаКомиссии,
	|	ЕСТЬNULL(АналитикаОтгрузки.КлючАналитики, ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры)    КАК АналитикаОтгрузки,
	|	ЕСТЬNULL(АналитикаОтгрузкиБезНазначения.КлючАналитики, АналитикаНоменклатурыБезНазначения.КлючАналитики) КАК АналитикаОтгрузкиБезНазначения,
	|	ТаблицаВидыЗапасов.НомерСтроки                                                              КАК НомерСтроки,
	|	Аналитика.Номенклатура                                                                      КАК Номенклатура,
	|	Аналитика.Характеристика                                                                    КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя                                                     КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов                                                               КАК ВидЗапасовОтправителя,
	|	(ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА ТаблицаВидыЗапасов.ВидЗапасовПолучателя
	|		ИНАЧЕ Неопределено КОНЕЦ)                                                               КАК ВидЗапасовУчетный,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов                                          КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД                                                                 КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                                                               КАК Количество,
	|	ТаблицаВидыЗапасов.СуммаСНДС                                                                КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СтавкаНДС                                                                КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС                                                                 КАК СуммаНДС,
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр)                   КАК ЧИСЛО(15,2)) КАК СуммаСНДСУпр,
	|	ВЫРАЗИТЬ(((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр) КАК ЧИСЛО(15,2)) КАК СуммаБезНДСУпр,
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл)                  КАК ЧИСЛО(15,2)) КАК СуммаСНДСРегл,
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл  КАК ЧИСЛО(15,2)) КАК СуммаБезНДСРегл,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл  КАК ЧИСЛО(15,2))   КАК СуммаНДСРегл,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя.Валюта                                              КАК Валюта,
	|	ТаблицаАналитикУчетаПартий.ВидЦенности														КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС												КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий 											КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки                                                      КАК ИдентификаторСтроки,
	|	ЕСТЬNULL(Передача.Ссылка, ОснованиеПередача.Ссылка)											КАК ДокументРеализации,
	|	ЕСТЬNULL(Передача.Дата, ЕСТЬNULL(ОснованиеПередача.Дата, &Период))                          КАК ПериодПродажи,
	|	Аналитика.Склад                                                                             КАК Склад,
	|	Аналитика.Склад.ЦеховаяКладовая                                                             КАК ЦеховаяКладовая,
	|	ЕСТЬNULL(СпрСкладОтгрузки.Ссылка,
	|		ЕСТЬNULL(Передача.Склад,
	|		ЕСТЬNULL(ОснованиеПередача.Склад, Аналитика.Склад))) 									КАК СкладОтгрузки
	|ПОМЕСТИТЬ ВтЗапасыПолучателя
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО 
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСкладОтгрузки
	|		ПО СпрСкладОтгрузки.Ссылка = ТаблицаВидыЗапасов.СкладОтгрузки
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК Передача
	|		ПО Передача.Ссылка = ТаблицаВидыЗапасов.ДокументРеализации
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ОснованиеПередача
	|		ПО ОснованиеПередача.Ссылка = &ДокументПоступления
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатурыБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаНоменклатурыБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаНоменклатурыБезНазначения.Характеристика
	|		И Аналитика.Серия = АналитикаНоменклатурыБезНазначения.Серия
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаНоменклатурыБезНазначения.СтатьяКалькуляции
	//-- НЕ УТ
	|		И Аналитика.Склад = АналитикаНоменклатурыБезНазначения.Склад
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаНоменклатурыБезНазначения.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссии
	|	ПО 
	|		Аналитика.Номенклатура = АналитикаКомиссии.Номенклатура 
	|		И Аналитика.Характеристика = АналитикаКомиссии.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаКомиссии.Назначение
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаКомиссии.СтатьяКалькуляции
	//-- НЕ УТ
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомиссии.Серия
	|		И &Организация = АналитикаКомиссии.Склад
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтгрузки
	|	ПО
	|		Аналитика.Номенклатура = АналитикаОтгрузки.Номенклатура
	|		И Аналитика.Характеристика = АналитикаОтгрузки.Характеристика
	|		И Аналитика.Серия = АналитикаОтгрузки.Серия
	|		И ЕСТЬNULL(СпрСкладОтгрузки.Ссылка,
	|			ЕСТЬNULL(Передача.Склад,
	|			ЕСТЬNULL(ОснованиеПередача.Склад, Аналитика.Склад))) = АналитикаОтгрузки.Склад
	|		И Аналитика.Назначение = АналитикаОтгрузки.Назначение
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаОтгрузки.СтатьяКалькуляции
	//-- НЕ УТ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтгрузкиБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаОтгрузкиБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаОтгрузкиБезНазначения.Характеристика
	|		И Аналитика.Серия = АналитикаОтгрузкиБезНазначения.Серия
	|		И ЕСТЬNULL(СпрСкладОтгрузки.Ссылка,
	|			ЕСТЬNULL(Передача.Склад,
	|			ЕСТЬNULL(ОснованиеПередача.Склад, Аналитика.Склад))) = АналитикаОтгрузкиБезНазначения.Склад
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаОтгрузкиБезНазначения.Назначение
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаОтгрузкиБезНазначения.СтатьяКалькуляции
	//-- НЕ УТ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаВидыЗапасов.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""ВидыЗапасов""
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыОтправителя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&Склад КАК Склад,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|
	|	ТаблицаТовары.Количество КАК Количество,
	|
	|	&Организация КАК ОрганизацияОтгрузки,
	|	ТаблицаТовары.АналитикаВозврата КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.АналитикаВозврата КАК КорАналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НалогообложениеНДС КАК НалогообложениеНДС,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ТаблицаТовары.ВидЗапасовПолучателя КАК КорВидЗапасов,
	|	ЛОЖЬ КАК Первичное
	|ИЗ
	|	ВтЗапасыОтправителя КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &ПоТоварамКОформлению
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	&Склад КАК Склад,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|
	|	-ТаблицаТовары.Количество КАК Количество,
	|
	|	&Организация КАК ОрганизацияОтгрузки,
	|	ТаблицаТовары.АналитикаВозврата КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.АналитикаВозврата КАК КорАналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.ВидДеятельностиНДС КАК НалогообложениеНДС,
	|	ТаблицаТовары.ДокументРеализации  КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	ИСТИНА КАК Первичное
	|ИЗ
	|	ВтЗапасыПолучателя КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &ПоТоварамКОформлению
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаАналитикаУчетаПолучатель(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Запрос.Параметры);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыОтправителя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"
	|ВЫБРАТЬ // возврат товара поставщику
	|	ВидыЗапасов.НомерСтроки                                                 КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаВозврата
	|		ИНАЧЕ ВидыЗапасов.АналитикаВозвратаБезНазначения
	|	КОНЕЦ                                                                   КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                                            КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ВидыЗапасов.ЦеховаяКладовая 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                                                   КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК ВидЗапасов,
	|	ВидыЗапасов.Количество                                                  КАК Количество,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА 0
	|		ИНАЧЕ ВидыЗапасов.СуммаСНДСУпр КОНЕЦ КАК Стоимость,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА 0
	|		ИНАЧЕ ВидыЗапасов.СуммаСНДСУпр КОНЕЦ КАК КорСтоимость,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА 0
	|		ИНАЧЕ ВидыЗапасов.СуммаБезНДСУпр КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА 0
	|		ИНАЧЕ 
	|		ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) 
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПолучатель                                               КАК АналитикаУчетаПоПартнерам,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СтатьяРасходовСписания,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СтатьяДоходов,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК АналитикаДоходов,
	|	&Подразделение                                                          КАК Подразделение,
	|	Неопределено                                                            КАК ЗаказКлиента,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА Неопределено
	|		ИНАЧЕ &ОрганизацияПолучатель
	|	КОНЕЦ                                                  					КАК КорОрганизация,
	|	&НалогообложениеНДС 													КАК КорВидДеятельностиНДС,
	|	ВидыЗапасов.ДокументРеализации	 										КАК ДокументИсточник,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) 					КАК ТипЗаписи
	|ИЗ
	|	ВтЗапасыОтправителя КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Сторнирование реализации текущего периода
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки                                                 КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаОтгрузки
	|		ИНАЧЕ ВидыЗапасов.АналитикаОтгрузкиБезНазначения
	|	КОНЕЦ                                                                   КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                                                  КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ВидыЗапасов.ЦеховаяКладовая 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                                                   КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК ВидЗапасов,
	|	-ВидыЗапасов.Количество                                                 КАК Количество,
	|	0                                                                       КАК Стоимость,
	|	0                                                                       КАК КорСтоимость,
	|	0                                                                       КАК СтоимостьБезНДС,
	|	0                                                                       КАК СтоимостьРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации)           КАК ХозяйственнаяОперация,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК КорВидЗапасов,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаОтгрузки
	|		ИНАЧЕ ВидыЗапасов.АналитикаОтгрузкиБезНазначения
	|	КОНЕЦ                                                                   КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПолучатель												КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	Неопределено                                                            КАК СтатьяДоходов,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК АналитикаДоходов,
	|	Неопределено                                                            КАК Подразделение,
	|	Неопределено                                                            КАК ЗаказКлиента,
	|	Неопределено                                                            КАК КорОрганизация,
	|	ВидыЗапасов.ВидДеятельностиНДС                                          КАК КорВидДеятельностиНДС,
	|	ВидыЗапасов.ДокументРеализации											КАК ДокументИсточник,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Сторно)	 						КАК ТипЗаписи
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	НЕ &ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.ПериодПродажи >= &НачалоМесяцаПериода
	|	И ВидыЗапасов.ВидЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Перемещение с реализации на возврат - списание
	|ВЫБРАТЬ // возврат товара от клиента
	|	ВидыЗапасов.НомерСтроки                                                 КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаОтгрузки
	|		ИНАЧЕ ВидыЗапасов.АналитикаОтгрузкиБезНазначения
	|	КОНЕЦ                                                                   КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                                                  КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ВидыЗапасов.ЦеховаяКладовая 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                                                   КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК ВидЗапасов,
	|	ВидыЗапасов.Количество                                                  КАК Количество,
	|	0                                                                       КАК Стоимость,
	|	0                                                                       КАК КорСтоимость,
	|	0                                                                       КАК СтоимостьБезНДС,
	|	0                                                                       КАК СтоимостьРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)    КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ВидыЗапасов.ЦеховаяКладовая 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                                                   КАК КорРазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК КорВидЗапасов,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаВозврата
	|		ИНАЧЕ ВидыЗапасов.АналитикаВозвратаБезНазначения
	|	КОНЕЦ                                                                   КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПолучатель												КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	Неопределено                                                            КАК СтатьяДоходов,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК АналитикаДоходов,
	|	Неопределено                                                            КАК Подразделение,
	|	Неопределено                                                            КАК ЗаказКлиента,
	|	Неопределено                                                            КАК КорОрганизация,
	|	ВидыЗапасов.ВидДеятельностиНДС                                          КАК КорВидДеятельностиНДС,
	|	ВидыЗапасов.ДокументРеализации											КАК ДокументИсточник,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратНаДругойСклад)	 		КАК ТипЗаписи
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	НЕ &ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.ПериодПродажи >= &НачалоМесяцаПериода
	|	И ВидыЗапасов.ВидЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	И ВидыЗапасов.СкладОтгрузки <> &Склад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Перемещение с реализации на возврат - оприходование
	|ВЫБРАТЬ // возврат товара от клиента
	|	ВидыЗапасов.НомерСтроки                                                 КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаВозврата
	|		ИНАЧЕ ВидыЗапасов.АналитикаВозвратаБезНазначения
	|	КОНЕЦ                                                                   КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                                                  КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ВидыЗапасов.ЦеховаяКладовая 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                                                   КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК ВидЗапасов,
	|	ВидыЗапасов.Количество                                                  КАК Количество,
	|	0                                                                       КАК Стоимость,
	|	0                                                                       КАК КорСтоимость,
	|	0                                                                       КАК СтоимостьБезНДС,
	|	0                                                                       КАК СтоимостьРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)    КАК ХозяйственнаяОперация,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	Неопределено                                                            КАК КорВидЗапасов,
	|	Неопределено                                                            КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПолучатель												КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	Неопределено                                                            КАК СтатьяДоходов,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК АналитикаДоходов,
	|	Неопределено                                                            КАК Подразделение,
	|	Неопределено                                                            КАК ЗаказКлиента,
	|	Неопределено                                                            КАК КорОрганизация,
	|	ВидыЗапасов.ВидДеятельностиНДС                                          КАК КорВидДеятельностиНДС,
	|	ВидыЗапасов.ДокументРеализации											КАК ДокументИсточник,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение)	 				КАК ТипЗаписи
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	НЕ &ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.ПериодПродажи >= &НачалоМесяцаПериода
	|	И ВидыЗапасов.ВидЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	И ВидыЗапасов.СкладОтгрузки <> &Склад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // возврат прошлого периода
	|	ВидыЗапасов.НомерСтроки                                                 КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаВозврата
	|		ИНАЧЕ ВидыЗапасов.АналитикаВозвратаБезНазначения
	|	КОНЕЦ                                                                   КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                                                  КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ВидыЗапасов.ЦеховаяКладовая 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                                                   КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК ВидЗапасов,
	|	ВидыЗапасов.Количество                                                  КАК Количество,
	|	0                                                                       КАК Стоимость,
	|	0                                                                       КАК КорСтоимость,
	|	0                                                                       КАК СтоимостьБезНДС,
	|	0                                                                       КАК СтоимостьРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов) КАК ХозяйственнаяОперация,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК КорВидЗапасов,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаОтгрузки
	|		ИНАЧЕ ВидыЗапасов.АналитикаОтгрузкиБезНазначения
	|	КОНЕЦ                                                                   КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПолучатель												КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	Неопределено                                                            КАК СтатьяДоходов,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК АналитикаДоходов,
	|	&Подразделение                                                          КАК Подразделение,
	|	Неопределено                                                            КАК ЗаказКлиента,
	|	Неопределено                                                            КАК КорОрганизация,
	|	ВидыЗапасов.ВидДеятельностиНДС                                          КАК КорВидДеятельностиНДС,
	|	ВидыЗапасов.ДокументРеализации											КАК ДокументИсточник,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов)	 		КАК ТипЗаписи
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	НЕ &ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.ПериодПродажи < &НачалоМесяцаПериода
	|	И ВидыЗапасов.ВидЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // возврат товара от комиссионера, списываем товар с комиссионного учета
	|	ВидыЗапасов.НомерСтроки                                                            КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                             КАК ВидДвижения,
	|	&Период                                                                            КАК Период,
	|	ВидыЗапасов.АналитикаКомиссии                                                      КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                                                             КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОНЕЦ                                                                              КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                                      КАК ВидЗапасов,
	|	ВидыЗапасов.Количество                                                             КАК Количество,
	|	0                                                                                  КАК Стоимость,
	|	0                                                                                  КАК КорСтоимость,
	|	0                                                                                  КАК СтоимостьБезНДС,
	|	0                                                                                  КАК СтоимостьРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)   КАК ХозяйственнаяОперация,
	|	(ВЫБОР ВидыЗапасов.ВидЗапасов.ТипЗапасов
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК КорРазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                                      КАК КорВидЗапасов,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаВозврата
	|		ИНАЧЕ ВидыЗапасов.АналитикаВозвратаБезНазначения
	|	КОНЕЦ                                                                              КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено                                                                       КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                                       КАК СтатьяРасходовСписания,
	|	Неопределено                                                                       КАК СтатьяДоходов,
	|	Неопределено                                                                       КАК АналитикаРасходов,
	|	Неопределено                                                                       КАК АналитикаДоходов,
	|	Неопределено                                                                       КАК Подразделение,
	|	Неопределено                                                                       КАК ЗаказКлиента,
	|	Неопределено                                                                       КАК КорОрганизация,
	|	ВидыЗапасов.ВидДеятельностиНДС													   КАК КорВидДеятельностиНДС,
	|	ВидыЗапасов.ДокументРеализации	 												   КАК ДокументИсточник,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) 							   КАК ТипЗаписи
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	&ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.ВидЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // возврат товара от комиссионера, приходуем товар на складской учет
	|	ВидыЗапасов.НомерСтроки                                                 КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаВозврата
	|		ИНАЧЕ ВидыЗапасов.АналитикаВозвратаБезНазначения
	|	КОНЕЦ                                                                   КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                                                  КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ВЫБОР КОГДА ВидыЗапасов.ЦеховаяКладовая 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОНЕЦ
	|	КОНЕЦ                                                                   КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК ВидЗапасов,
	|	ВидыЗапасов.Количество                                                  КАК Количество,
	|	0                                                                       КАК Стоимость,
	|	0                                                                       КАК КорСтоимость,
	|	0                                                                       КАК СтоимостьБезНДС,
	|	0                                                                       КАК СтоимостьРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями) КАК ХозяйственнаяОперация,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	Неопределено                                                            КАК КорВидЗапасов,
	|	Неопределено                                                            КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено                                                            КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	Неопределено                                                            КАК СтатьяДоходов,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК АналитикаДоходов,
	|	Неопределено                                                            КАК Подразделение,
	|	Неопределено                                                            КАК ЗаказКлиента,
	|	Неопределено                                                            КАК КорОрганизация,
	|	ВидыЗапасов.ВидДеятельностиНДС											КАК КорВидДеятельностиНДС,
	|	ВидыЗапасов.ДокументРеализации	 										КАК ДокументИсточник,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение) 					КАК ТипЗаписи
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	&ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.ВидЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ВыручкаИСебестоимостьПродаж";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаАналитикаУчетаПолучатель(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки       КАК НомерСтроки,
	|	&Период                       КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаВозврата 
	|		ИНАЧЕ ВидыЗапасов.АналитикаВозвратаБезНазначения
	|	КОНЕЦ                         КАК АналитикаУчетаНоменклатуры,
	|	Неопределено                  КАК ЗаказКлиента,
	|	&АналитикаУчетаПолучатель     КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение                КАК Подразделение,
	|	ВидыЗапасов.ТипЗапасов        КАК ТипЗапасов,
	|	ВидыЗапасов.ВидЗапасовУчетный КАК ВидЗапасов,
	|	&Менеджер                     КАК Менеджер,
	|	-ВидыЗапасов.Количество       КАК Количество,
	|	-ВидыЗапасов.СуммаСНДСУпр     КАК СуммаВыручки,
	|	-ВидыЗапасов.СуммаБезНДСУпр   КАК СуммаВыручкиБезНДС,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) ТОГДА
	|			0
	|		ИНАЧЕ
	|			-ВидыЗапасов.СуммаСНДСУпр
	|	КОНЕЦ КАК Себестоимость,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) ТОГДА
	|			0
	|		ИНАЧЕ
	|			-ВидыЗапасов.СуммаБезНДСУпр
	|	КОНЕЦ КАК СебестоимостьБезНДС,
	|
	|	ВидыЗапасов.ВидДеятельностиНДС КАК НалогообложениеНДС,
	|	(ВЫБОР
	|		КОГДА ВидыЗапасов.ПериодПродажи < &НачалоМесяцаПериода
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации) КОНЕЦ) КАК ХозяйственнаяОперация,
	|	0 КАК СебестоимостьРегл,
	|	-ВидыЗапасов.СуммаБезНДСРегл КАК СуммаВыручкиРегл,
	|	-(ВидыЗапасов.СуммаБезНДСРегл + ВидыЗапасов.СуммаНДСРегл) КАК СуммаВыручкиСНДСРегл,
	|
	|	0 КАК СуммаРучнойСкидки,
	|	0 КАК СуммаАвтоматическойСкидки,
	|
	|	&Склад КАК Склад,
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|		ТОГДА &ДоговорПродажи
	|		ИНАЧЕ &Договор
	|	КОНЕЦ КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиКонтрагента,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаВозврата.Назначение.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельностиНоменклатуры,
	|
	|	&Валюта КАК ВалютаВзаиморасчетов,
	|	ВидыЗапасов.СуммаСНДС КАК СуммаВВалютеВзаиморасчетов,
	|	ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	ВидыЗапасов.СуммаСНДС КАК СуммаВВалютеДокумента,
	|	ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеДокумента,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		ВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	&ЭтоВозвратТовара
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыОтправителя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&ОрганизацияПолучатель КАК ОрганизацияВладелец,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасовПродавца,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.Количество КАК Возвращено,
	|	ТаблицаТовары.АналитикаВозврата КАК АналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаТовары.ВидЗапасовПолучателя КАК КорВидЗапасов,
	|	ТаблицаТовары.ДокументРеализации  КАК ДокументРеализации,
	|	ИСТИНА КАК Первичное
	|ИЗ
	|	ВтЗапасыОтправителя КАК ТаблицаТовары
	|	
	|ГДЕ
	|	&ПоТоварамКОформлению
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтКурсыВалют"; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	КурсыВалют.Валюта КАК Валюта,
	|
	|	(КурсВалютыДокумента.Курс * КурсыВалют.Кратность)
	|   / (КурсВалютыДокумента.Кратность * КурсыВалют.Курс) КАК КоэффициентПересчета
	|
	|ПОМЕСТИТЬ ВтКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период,
	|		Валюта В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ТаблицаВидыЗапасов.ВидЗапасовПолучателя.Валюта КАК Валюта
	|			ИЗ
	|				Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|			ГДЕ
	|				ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|				И ТаблицаВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			)
	|	) КАК КурсыВалют
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсВалютыДокумента
	|	ПО
	|		Истина
	|
	|ГДЕ
	|	КурсВалютыДокумента.Кратность <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	(-ТаблицаВидыЗапасов.Количество) КАК Количество,
	|	0 КАК КоличествоСписано,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.Валюта = &Валюта ТОГДА
	|		-ТаблицаВидыЗапасов.СуммаСНДС
	|	ИНАЧЕ
	|		-ТаблицаВидыЗапасов.СуммаСНДС * КурсыВалют.КоэффициентПересчета
	|	КОНЕЦ КАК СуммаВыручки,
	|	&КорВидЗапасов КАК КорВидЗапасов,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтЗапасыПолучателя КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтКурсыВалют КАК КурсыВалют
	|	ПО
	|		ТаблицаВидыЗапасов.Валюта = КурсыВалют.Валюта
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.Номенклатура = Аналитика.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = Аналитика.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = Аналитика.Серия
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	//-- НЕ УТ
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = Аналитика.Назначение
	|		И ТаблицаВидыЗапасов.ВидЗапасов.Комитент = Аналитика.Склад
	|ГДЕ
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И &ЭтоВозвратТовара
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицаНДСЗаписиКнигиПродаж(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "НДСЗаписиКнигиПродаж";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ПересчитатьТаблицуТоваровВВалютуРегл(Запрос.Параметры, Запрос.МенеджерВременныхТаблиц);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыОтправителя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =" 
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента = ИСТИНА
	|			ТОГДА &Контрагент
	|		ИНАЧЕ &ОрганизацияПолучатель
	|	КОНЕЦ КАК Покупатель,
	|	&Ссылка КАК СчетФактура,
	|	ТаблицаВидыЗапасов.ВидЦенности КАК ВидЦенности,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация) КАК Событие,
	|	&Период КАК ДатаСобытия,
	|	СУММА(ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.БазаНДСРегл = 0
	|		ТОГДА ЕСТЬNULL(ТаблицаДокументаРегл.СуммаБезНДС, ТаблицаВидыЗапасов.СуммаБезНДС)
	|		ИНАЧЕ ТаблицаВидыЗапасов.БазаНДСРегл КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(ЕСТЬNULL(ТаблицаДокументаРегл.СуммаНДС, ТаблицаВидыЗапасов.СуммаНДС)) КАК НДС
	|ИЗ
	|	ВтЗапасыОтправителя КАК ТаблицаВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТоваровПредварительная КАК ТаблицаДокументаРегл
	|		ПО ТаблицаВидыЗапасов.ИдентификаторСтроки = ТаблицаДокументаРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВидыЗапасов.СтавкаНДС,
	|	ТаблицаВидыЗапасов.ВидЦенности
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ПересчитатьТаблицуТоваровВВалютуРегл(Запрос.Параметры, Запрос.МенеджерВременныхТаблиц);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыОтправителя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	0 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокументаРегл.СуммаБезНДС КАК СуммаБезНДСРегл,
	|	ТаблицаДокументаРегл.СуммаНДС КАК СуммаНДСРегл,
	|	ВЫБОР
	|	КОГДА ТаблицаВидыЗапасов.БазаНДСРегл = 0
	|	ТОГДА ТаблицаДокументаРегл.СуммаБезНДС
	|	ИНАЧЕ ТаблицаВидыЗапасов.БазаНДСРегл
	|	КОНЕЦ КАК БазаНДСРегл,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов
	|
	|ИЗ
	|	ВтЗапасыОтправителя КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаТоваровПредварительная КАК ТаблицаДокументаРегл
	|	ПО
	|		ТаблицаВидыЗапасов.ИдентификаторСтроки = ТаблицаДокументаРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	&Валюта <> &ВалютаРегламентированногоУчета
	|	И (НЕ &ЭтоВозвратПоКомиссии)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Запрос.Параметры);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&Ссылка КАК ДокументПоступления, 
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	-ТаблицаТовары.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА СуммыДокументовВВалютеРегл.СуммаБезНДСРегл ЕСТЬ NULL 
	|			ИЛИ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл = 0
	|		ТОГДА ВЫРАЗИТЬ(-(ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ -СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА СуммыДокументовВВалютеРегл.СуммаНДСРегл ЕСТЬ NULL 
	|			ИЛИ СуммыДокументовВВалютеРегл.СуммаНДСРегл = 0
	|		ТОГДА ВЫРАЗИТЬ (-ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ -СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК НДСРегл,
	|
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.АналитикаВозврата КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.АналитикаВозврата КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасовОтправителя КАК КорВидЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПоВозврату) КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.ВидДеятельностиНДС КАК НалогообложениеНДС,
	|	ИСТИНА КАК Первичное,
	|	&Ссылка КАК ДокументИсточник
	|ИЗ
	|	ВтЗапасыПолучателя КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		&Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И ТаблицаТовары.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	&ПартионныйУчетВерсии21
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ПересчитатьТаблицуТоваровВВалютуРегл(Реквизиты, МенеджерВременныхТаблиц)
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ТаблицаТоваровПредварительная") <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ПОМЕСТИТЬ ТаблицаТоваровПредварительная
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|";
	Запрос.УстановитьПараметр("Ссылка",                         Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Период",                         Реквизиты.Период);
	Запрос.УстановитьПараметр("Валюта",                         Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Реквизиты.ВалютаРегламентированногоУчета);
	
	Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.ПересчитатьТаблицуТоваровВВалютуРегл(МенеджерВременныхТаблиц);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "Закупки";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыОтправителя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|// Организация отправитель.
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Менеджер КАК Менеджер,
	|
	|	ВидыЗапасов.АналитикаВозврата КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.Склад КАК Склад,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасов.ВидЗапасовУчетный КАК ВидЗапасов,
	|
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ КАК Партнер,
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Контрагент
	|		ИНАЧЕ &ОрганизацияПолучатель
	|	КОНЕЦ КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	ВЫБОР КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|		ТОГДА &ДоговорПокупки
	|		ИНАЧЕ &Договор
	|	КОНЕЦ КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|
	|	ВидыЗапасов.Количество КАК Количество,
	|
	|	ВидыЗапасов.СуммаСНДСУпр КАК Сумма,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаБезНДС * &КоэффициентПересчетаВВалютуУпр) КАК ЧИСЛО(15,2)) КАК СуммаБезНДС,
	|	ВидыЗапасов.СуммаСНДСРегл КАК СуммаРегл,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаБезНДС * &КоэффициентПересчетаВВалютуРегл) КАК ЧИСЛО(15,2)) КАК СуммаРеглБезНДС,
	|	0 КАК СуммаСкидки,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СуммаДопРасходов,
	|	0 КАК СуммаДопРасходовБезНДС,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	ВидыЗапасов.СуммаСНДС КАК СуммаВВалютеДокумента,
	|	ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&Валюта КАК ВалютаВзаиморасчетов,
	|	ВидыЗапасов.СуммаСНДС КАК СуммаВВалютеВзаиморасчетов,
	|	ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтЗапасыОтправителя КАК ВидыЗапасов
	|ГДЕ
	|	&ЭтоВозвратТовара И ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|"; 
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ДвиженияНоменклатураНоменклатура";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Запрос.Параметры);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                                             КАК Период,
	|	&ХозяйственнаяОперация                                              КАК ХозяйственнаяОперация,
	|	&ОрганизацияПолучатель                                              КАК Организация,
	|	&Подразделение                                                      КАК Подразделение,
	|
	|	ВЫБОР КОГДА &ИспользуетсяНазначение 
	|		ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаНоменклатурыБезНазначения.КлючАналитики
	|	КОНЕЦ                                                               КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                               КАК НаправлениеДеятельности,
	|	Аналитика.Склад                                                     КАК Склад,
	|	ВидыЗапасов.ВидЗапасов.ТипЗапасов                                   КАК ТипЗапасов,
	|	(ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов 
	|		ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ Неопределено 
	|	КОНЕЦ)                                                              КАК ВидЗапасов,
	|
	|	ВЫБОР КОГДА &ИспользуетсяНазначение 
	|		ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаНоменклатурыБезНазначения.КлючАналитики
	|	КОНЕЦ                                                               КАК КорАналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                               КАК КорНаправлениеДеятельности,
	|	Аналитика.Склад                                                     КАК КорСклад,
	|	ВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов                         КАК КорТипЗапасов,
	|	(ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|		ТОГДА ВидыЗапасов.ВидЗапасовПолучателя
	|		ИНАЧЕ Неопределено 
	|	КОНЕЦ)                                                              КАК КорВидЗапасов,
	|
	|	ВидыЗапасов.Количество                                              КАК Количество,
	|	ВидыЗапасов.Количество                                              КАК КорКоличество,
	|
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр)  КАК ЧИСЛО(15,2)) КАК Стоимость,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр)  КАК ЧИСЛО(15,2)) КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл) КАК ЧИСЛО(15,2)) КАК СтоимостьРегл,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ Аналитика.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.ВидЗапасовПолучателя
	|		ИНАЧЕ Аналитика.Номенклатура
	|	КОНЕЦ КАК КорИсточникГФУНоменклатуры
	|
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатурыБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаНоменклатурыБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаНоменклатурыБезНазначения.Характеристика 
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаНоменклатурыБезНазначения.СтатьяКалькуляции
	//-- НЕ УТ
	|		И Аналитика.Серия = АналитикаНоменклатурыБезНазначения.Серия 
	|		И Аналитика.Склад = АналитикаНоменклатурыБезНазначения.Склад 
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаНоменклатурыБезНазначения.Назначение 
	|ГДЕ
	|	&ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ТоварыПереданныеНаКомиссию";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|
	|	ТаблицаТовары.АналитикаКомиссии КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.ВидДеятельностиНДС КАК НалогообложениеНДС,
	|	ТаблицаТовары.АналитикаВозврата КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|ИЗ
	|	ВтЗапасыПолучателя КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация 
	|			= ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаКомиссии,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.ВидДеятельностиНДС,
	|	ТаблицаТовары.АналитикаВозврата,
	|	ТаблицаТовары.ДокументРеализации,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСПредъявленный";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ПересчитатьТаблицуТоваровВВалютуРегл(Запрос.Параметры, Запрос.МенеджерВременныхТаблиц);
	
	ТекстЗапроса = "
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Операция.Дата                          КАК Период,
	|	Операция.ОрганизацияПолучатель         КАК Организация,
	|	&Ссылка                                КАК СчетФактура,
	|	Операция.Организация                   КАК Поставщик,
	|	ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	Строки.СтавкаНДС                       КАК СтавкаНДС,
	|	Операция.НалогообложениеНДС            КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	-(ЕСТЬNULL(ТаблицаДокументаРегл.СуммаБезНДС, Строки.СуммаСНДС - Строки.СуммаНДС)) КАК СуммаБезНДС,
	|	-(ЕСТЬNULL(ТаблицаДокументаРегл.СуммаНДС, Строки.СуммаНДС)) КАК НДС,
	|	НЕОПРЕДЕЛЕНО                           КАК Событие,
	|	ЛОЖЬ                                   КАК РегламентнаяОперация,
	|	Строки.ИдентификаторСтроки             КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК Строки
	|	ПО 
	|		(Строки.Ссылка = Операция.Ссылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаТоваровПредварительная КАК ТаблицаДокументаРегл
	|	ПО
	|		Строки.ИдентификаторСтроки = ТаблицаДокументаРегл.ИдентификаторСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Строки.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО Строки.ВидЗапасов.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Операция.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	И Строки.ВидЗапасовПолучателя.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

//++ НЕ УТ

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период						 КАК Период,
	|	&Организация 				 КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период						 КАК Период,
	|	&ОрганизацияПолучатель 	 	 КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

//-- НЕ УТ

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Возврат поставщику
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ВозвратПоставщику";
	КомандаПечати.Представление = НСтр("ru = 'Возврат поставщику'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
		// Товарная накладная (ТОРГ-12)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "ТОРГ12";
		КомандаПечати.Представление = НСтр("ru = 'Товарная накладная (ТОРГ-12)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьУслуги", Истина);
	КонецЕсли;

	// Счет-фактура
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "СчетФактура";
	КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
	КомандаПечати.ДополнительныеПараметры.Вставить("ДополнитьПолученнымиСчетамиФактуры", Истина);

	Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
		// Счет-фактура (в валюте)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "СчетФактураВВалюте";
		КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (в валюте)'");
		КомандаПечати.ФункциональныеОпции = "ИспользоватьНесколькоВалют";
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Истина);
		КомандаПечати.ДополнительныеПараметры.Вставить("ДополнитьПолученнымиСчетамиФактуры", Истина);
		// Универсальный передаточный документ (УПД)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "УПД";
		КомандаПечати.Представление = НСтр("ru = 'Универсальный передаточный документ (УПД)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ДополнитьПолученнымиСчетамиФактуры", Истина);
	КонецЕсли;

	// 4D:ERP для Беларуси, Дмитрий, 05.12.2014 5:01:37 
	// Локализация печатных форм, №7762
	// Добавляем ТТН-1 и ТН-2
	// {
	Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
		
		// Товарная накладная (ТН-2)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьТранспортнойНакладной";
		КомандаПечати.Обработчик = "УправлениеПечатьюУПКлиент_Локализация.ПечатьТранспортнойНакладной";
		КомандаПечати.Идентификатор = "ТН_Вертикальная";
		КомандаПечати.Представление = НСтр("ru = 'ТН-2 (вертикальная)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьГТД", Истина);
		КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьУслуги", Истина);
		
		// Товарная накладная (ТН-2)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьТранспортнойНакладной";
		КомандаПечати.Обработчик = "УправлениеПечатьюУПКлиент_Локализация.ПечатьТранспортнойНакладной";
		КомандаПечати.Идентификатор = "ТН_ВертикальнаяСПриложением";
		КомандаПечати.Представление = НСтр("ru = 'ТН-2 (вертикальная) с приложением'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьГТД", Истина);
		КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьУслуги", Истина);
		
		// Товарная накладная (ТН-2)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьТранспортнойНакладной";
		КомандаПечати.Обработчик = "УправлениеПечатьюУПКлиент_Локализация.ПечатьТранспортнойНакладной";
		КомандаПечати.Идентификатор = "ТН_Горизонтальная";
		КомандаПечати.Представление = НСтр("ru = 'ТН-2 (горизонтальная)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьГТД", Истина);
		КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьУслуги", Истина);
		
		// Товарная накладная (ТН-2)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьТранспортнойНакладной";
		КомандаПечати.Обработчик = "УправлениеПечатьюУПКлиент_Локализация.ПечатьТранспортнойНакладной";
		КомандаПечати.Идентификатор = "ТН_ГоризонтальнаяСПриложением";
		КомандаПечати.Представление = НСтр("ru = 'ТН-2 (горизонтальная) с приложением'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьГТД", Истина);
		КомандаПечати.ДополнительныеПараметры.Вставить("ВыводитьУслуги", Истина);
		
	КонецЕсли;
	// }
	// 4D
	
	// 4D:ERP для Беларуси, ВладимирР, 03.08.2017 17:07:31 
	// ТТН-1 и ТН-2, №15629
	// {
	ЭтоПартнер = ПраваПользователяПовтИсп.ЭтоПартнер();
	Если Не ЭтоПартнер И ПолучитьФункциональнуюОпцию("ИспользоватьТТН") И ПравоДоступа("Чтение", Метаданные.Документы.ТранспортнаяНакладная) Тогда
		// ТТН-1 (Товарно-транспортная накладная)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьТТН";
		КомандаПечати.Обработчик = "УправлениеПечатьюУПКлиент_Локализация.ПечатьТТН";
		КомандаПечати.Идентификатор = "ТТН_Вертикальная";
		КомандаПечати.Представление = НСтр("ru = 'ТТН-1 (вертикальная)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
		// ТТН-1 (Товарно-транспортная накладная)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьТТН";
		КомандаПечати.Обработчик = "УправлениеПечатьюУПКлиент_Локализация.ПечатьТТН";
		КомандаПечати.Идентификатор = "ТТН_ВертикальнаяСПриложением";
		КомандаПечати.Представление = НСтр("ru = 'ТТН-1 (вертикальная) с приложением'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
		// ТТН-1 (Товарно-транспортная накладная)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьТТН";
		КомандаПечати.Обработчик = "УправлениеПечатьюУПКлиент_Локализация.ПечатьТТН";
		КомандаПечати.Идентификатор = "ТТН_Горизонтальная";
		КомандаПечати.Представление = НСтр("ru = 'ТТН-1 (горизонтальная)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
		// ТТН-1 (Товарно-транспортная накладная)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьТТН";
		КомандаПечати.Обработчик = "УправлениеПечатьюУПКлиент_Локализация.ПечатьТТН";
		КомандаПечати.Идентификатор = "ТТН_ГоризонтальнаяСПриложением";
		КомандаПечати.Представление = НСтр("ru = 'ТТН-1 (горизонтальная) с приложением'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	// }
	// 4D
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВозвратПоставщику") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ВозвратПоставщику", НСтр("ru='Возврат поставщику'"), СформироватьПечатнуюФормуВозвратПоставщику(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуВозвратПоставщику(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВозвратТоваров.Ссылка КАК Ссылка,
	|	ВозвратТоваров.Организация.Префикс КАК Префикс,
	|	ВозвратТоваров.Номер КАК Номер,
	|	ВозвратТоваров.Дата КАК Дата,
	|	ВозвратТоваров.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	ВозвратТоваров.ОрганизацияПолучатель КАК Получатель,
	|	ВозвратТоваров.Валюта КАК Валюта,
	|	ВозвратТоваров.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ВозвратТоваров.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УчитыватьНДС,
	|	ВозвратТоваров.Склад.ТекущийОтветственный КАК ОтпускПроизвел,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПередачаНаКомиссию
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратТоваров
	|ГДЕ
	|	ВозвратТоваров.Ссылка В(&МассивДокументов)
	|	И ВозвратТоваров.Проведен
	|	И (НЕ ВозвратТоваров.РасчетыЧерезОтдельногоКонтрагента)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваров.Ссылка,
	|	ВозвратТоваров.Организация.Префикс,
	|	ВозвратТоваров.Номер,
	|	ВозвратТоваров.Дата,
	|	ВозвратТоваров.Организация,
	|	ВозвратТоваров.Партнер,
	|	ВозвратТоваров.Контрагент,
	|	ВозвратТоваров.Валюта,
	|	ВозвратТоваров.ЦенаВключаетНДС,
	|	ВозвратТоваров.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВозвратТоваров.Склад.ТекущийОтветственный.Наименование,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратТоваров
	|ГДЕ
	|	ВозвратТоваров.Ссылка В(&МассивДокументов)
	|	И ВозвратТоваров.Проведен
	|	И ВозвратТоваров.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваров.Ссылка,
	|	ВозвратТоваров.Организация.Префикс,
	|	ВозвратТоваров.Номер,
	|	ВозвратТоваров.Дата,
	|	ВозвратТоваров.Контрагент,
	|	ВозвратТоваров.Партнер,
	|	ВозвратТоваров.ОрганизацияПолучатель,
	|	ВозвратТоваров.Валюта,
	|	ВозвратТоваров.ЦенаВключаетНДС,
	|	ВозвратТоваров.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВозвратТоваров.Склад.ТекущийОтветственный.Наименование,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратТоваров
	|ГДЕ
	|	ВозвратТоваров.Ссылка В(&МассивДокументов)
	|	И ВозвратТоваров.Проведен
	|	И ВозвратТоваров.РасчетыЧерезОтдельногоКонтрагента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Наименование КАК ЕдиницаЦены,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ВложенныйЗапрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВозвратТоваров.Ссылка КАК Ссылка,
	|		ВозвратТоваров.Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ВозвратТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				ТОГДА 1
	|			ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки2
	|		КОНЕЦ КАК Коэффициент,
	|		&ТекстЗапросаЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ВозвратТоваров.Характеристика КАК Характеристика,
	|		ВозвратТоваров.Упаковка КАК Упаковка,
	|		ВозвратТоваров.СтавкаНДС КАК СтавкаНДС,
	|		ВозвратТоваров.Цена КАК Цена,
	|		ВозвратТоваров.КоличествоУпаковок КАК Количество,
	|		ВозвратТоваров.Сумма КАК Сумма,
	|		ВозвратТоваров.СуммаНДС КАК СуммаНДС,
	|		ВозвратТоваров.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ВозвратТоваров
	|	ГДЕ
	|		ВозвратТоваров.Ссылка В(&МассивДокументов)
	|		И ВозвратТоваров.Ссылка.Проведен) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВложенныйЗапрос.Упаковка",
			"ВложенныйЗапрос.Номенклатура"));
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВозвратТоваров.Упаковка",
			"ВозвратТоваров.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ВозвратТоваров.Упаковка",
			"ВозвратТоваров.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратТоваровМеждуОрганизациями_Накладная";
	
	МассивРезультатов   = Запрос.ВыполнитьПакет();
	ДанныеПечати        = МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
	
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		// Макет необходимо получать для каждого документа, т.к. размеры колонок изменяются динамически
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВозвратТоваровМеждуОрганизациями.ПФ_MXL_ВозвратПоставщику");
		
		ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент    = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной
		
		Если Не ДанныеПечати.ЭтоПередачаНаКомиссию Тогда
			
			ОбластьКолонкаТовар = Макет.Область("Товар");
			Если Не ВыводитьКоды Тогда
				ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.2;
			КонецЕсли;
			
		Иначе
			
			ОбластьКолонкаТовар = Макет.Область("ТоварБезСумм");
			Если Не ВыводитьКоды Тогда
				ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.125;
			КонецЕсли;
			
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
		ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Возврат поставщику'"));
		
		ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Поставщик");
		ПредставлениеПоставщика                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата), "ПолноеНаименование");
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьМакета.Параметры.Поставщик               = ДанныеПечати.Организация;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Покупатель");
		ПредставлениеПолучателя                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Получатель, ДанныеПечати.Дата), "ПолноеНаименование");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		ОбластьМакета.Параметры.Получатель              = ДанныеПечати.Получатель;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы Товары
		
		Если Не ДанныеПечати.ЭтоПередачаНаКомиссию Тогда
			
			ОбластьНомера     = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
			ОбластьКодов      = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
			ОбластьТовар      = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
			ОбластьДанных     = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
			
		Иначе
			
			ОбластьНомера     = Макет.ПолучитьОбласть("ШапкаТаблицыБезСумм|НомерСтрокиБезСумм");
			ОбластьКодов      = Макет.ПолучитьОбласть("ШапкаТаблицыБезСумм|КолонкаКодовБезСумм");
			ОбластьТовар      = Макет.ПолучитьОбласть("ШапкаТаблицыБезСумм|ТоварБезСумм");
			ОбластьДанных     = Макет.ПолучитьОбласть("ШапкаТаблицыБезСумм|ДанныеБезСумм");
			
		КонецЕсли;
			
		ТабличныйДокумент.Вывести(ОбластьНомера);
			
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
			
		ТабличныйДокумент.Присоединить(ОбластьТовар);
		ТабличныйДокумент.Присоединить(ОбластьДанных);
			
		Если Не ДанныеПечати.ЭтоПередачаНаКомиссию Тогда
			
			ОбластьНомера  = Макет.ПолучитьОбласть("СтрокаТаблицы|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("СтрокаТаблицы|Товар");
			ОбластьДанных  = Макет.ПолучитьОбласть("СтрокаТаблицы|Данные");
			
		Иначе
			
			ОбластьНомера  = Макет.ПолучитьОбласть("СтрокаТаблицыБезСумм|НомерСтрокиБезСумм");
			ОбластьКодов   = Макет.ПолучитьОбласть("СтрокаТаблицыБезСумм|КолонкаКодовБезСумм");
			ОбластьТовар   = Макет.ПолучитьОбласть("СтрокаТаблицыБезСумм|ТоварБезСумм");
			ОбластьДанных  = Макет.ПолучитьОбласть("СтрокаТаблицыБезСумм|ДанныеБезСумм");
			
		КонецЕсли;
			
		Сумма          = 0;
		СуммаНДС       = 0;
		НомерСтроки    = 0;
		
		// Выводим строки таблицы Товары
			
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				
				ОбластьКодов.Параметры.Артикул = ВыборкаПоТоварам[КолонкаКодов];
				ТабличныйДокумент.Присоединить(ОбластьКодов);
				
			КонецЕсли;
			
			ОбластьТовар.Параметры.Заполнить(ВыборкаПоТоварам);
			ДополнительныеПараметрыПолученияНаименованияДляПечати = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
			ДополнительныеПараметрыПолученияНаименованияДляПечати.ВозвратнаяТара = ВыборкаПоТоварам.ЭтоВозвратнаяТара;
			
			ОбластьТовар.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоТоварам.ТоварНаименованиеПолное,
				ВыборкаПоТоварам.Характеристика,
				,
				,
				ДополнительныеПараметрыПолученияНаименованияДляПечати);
				
			ТабличныйДокумент.Присоединить(ОбластьТовар);
			
			ОбластьДанных.Параметры.Заполнить(ВыборкаПоТоварам);
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
			Если ДанныеПечати.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту Тогда
				
				Сумма    = Сумма    + ВыборкаПоТоварам.Сумма;
				СуммаНДС = СуммаНДС + ВыборкаПоТоварам.СуммаНДС;
				
			КонецЕсли;
				
		КонецЦикла;
		
		// Выводим подвал
		
		Если Не ДанныеПечати.ЭтоПередачаНаКомиссию Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("ПодвалТаблицы|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ПодвалТаблицы|Товар");
			ОбластьДанных = Макет.ПолучитьОбласть("ПодвалТаблицы|Данные");
			
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьТовар);
				
			ОбластьДанных.Параметры.Всего = ФормированиеПечатныхФорм.ФорматСумм(Сумма);
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
		КонецЕсли;
			
		// Выводим ИтогоНДС
		
		Если ДанныеПечати.УчитыватьНДС И Не ДанныеПечати.ЭтоПередачаНаКомиссию Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|Товар");
			ОбластьДанных = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|Данные");
			
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьТовар);
			ОбластьДанных.Параметры.НДС = ?(ДанныеПечати.ЦенаВключаетНДС, НСтр("ru='В том числе НДС:'"), НСтр("ru='Сумма НДС:'"));
			ОбластьДанных.Параметры.ВсегоНДС = ФормированиеПечатныхФорм.ФорматСумм(СуммаНДС);
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
		КонецЕсли;
		
		Если Не ДанныеПечати.ЭтоПередачаНаКомиссию Тогда
			
			// Выводим Сумму прописью
			
			ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
			СуммаКПрописи = Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СуммаНДС);
			
			ИтоговаяСтрока = НСтр("ru='Всего наименований %КоличествоНаименований%, на сумму %СуммаДокумента%'") + " ";
			ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%КоличествоНаименований%", ВыборкаПоТоварам.Количество());
			ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%СуммаДокумента%", ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));

			ОбластьМакета.Параметры.ИтоговаяСтрока = ИтоговаяСтрока;
			ОбластьМакета.Параметры.СуммаПрописью  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		Иначе
			
			ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицыБезСумм");
			ИтоговаяСтрока = НСтр("ru='Всего наименований %КоличествоНаименований%'");
			ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%КоличествоНаименований%", ВыборкаПоТоварам.Количество());
			ОбластьМакета.Параметры.ИтоговаяСтрока = ИтоговаяСтрока;
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		// Выводим подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
		Если ЗначениеЗаполнено(ДанныеПечати.ОтпускПроизвел) Тогда
			ОбластьМакета.Параметры.ОтпускПроизвел =
				ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.ОтпускПроизвел, ДанныеПечати.Дата);
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;

	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;

КонецФункции // СформироватьПечатнуюФормуВозвратПоставщику()

// Формирует текст запроса для получения данных основания при печати Счет-фактуры.
//
Функция ТекстЗапросаДанныхОснованияДляПечатнойФормыСчетФактура() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка                                   КАК Ссылка,
	|	ДанныеДокументов.ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
	|	ДанныеДокументов.Валюта                                   КАК Валюта,
	|	ДанныеДокументов.Организация                              КАК Организация,
	|	ДанныеДокументов.Подразделение                            КАК Подразделение,
	|	ДанныеДокументов.Склад                                    КАК Склад,
	|	ДанныеДокументов.Грузоотправитель                         КАК Грузоотправитель,
	|	ДанныеДокументов.Грузополучатель                          КАК Грузополучатель,
	|	ДанныеДокументов.РасчетыЧерезОтдельногоКонтрагента        КАК РасчетыЧерезОтдельногоКонтрагента,
	|	НЕОПРЕДЕЛЕНО                                              КАК Номенклатура,
	|	""""                                                      КАК Содержание,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)             КАК Комиссионер,
	|	ДанныеДокументов.Основание                                КАК Основание,
	|	ДанныеДокументов.ОснованиеДата                            КАК ОснованиеДата,
	|	ДанныеДокументов.ОснованиеНомер                           КАК ОснованиеНомер,
	|	ДанныеДокументов.ДоверенностьНомер                        КАК ДоверенностьНомер,
	|	ДанныеДокументов.ДоверенностьДата                         КАК ДоверенностьДата,
	|	ДанныеДокументов.ДоверенностьВыдана                       КАК ДоверенностьВыдана,
	|	ДанныеДокументов.ДоверенностьЛицо                         КАК ДоверенностьЛицо,
	|	ДанныеДокументов.Отпустил                                 КАК Кладовщик,
	|	ДанныеДокументов.ОтпустилДолжность                        КАК ДолжностьКладовщика
	|
	|//ОператорПОМЕСТИТЬ
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокументов
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&ДокументОснование_ВозвратТоваровМеждуОрганизациями)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыУПД(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка               КАК Ссылка,
	|	ДанныеДокументов.Валюта               КАК Валюта,
	|	ДанныеДокументов.Организация          КАК Организация,
	|	ДанныеДокументов.Подразделение        КАК Подразделение,
	|	ДанныеДокументов.Склад                КАК Склад
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	ПродажиСервер.ПоместитьВременнуюТаблицуДанныхПоставщика(МенеджерВременныхТаблиц);
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	2 КАК СтатусУПД,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	"""" КАК СтрокаПоДокументу,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаСчетаФактуры,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ОрганизацияПолучатель.ОбособленноеПодразделение
	|			ТОГДА ДанныеДокумента.ОрганизацияПолучатель.ГоловнаяОрганизация
	|		ИНАЧЕ ДанныеДокумента.ОрганизацияПолучатель
	|	КОНЕЦ КАК Контрагент,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеПоставщика.ГоловнаяОрганизация КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	0 КАК ИндексПодразделения,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.ОрганизацияПолучатель
	|		ИНАЧЕ ДанныеДокумента.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.Организация
	|		ИНАЧЕ ДанныеДокумента.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ДанныеПоставщика.КПППоставщика КАК КПППоставщика,
	|	ДанныеДокумента.ОрганизацияПолучатель.КПП КАК КПППокупателя,
	|	ДанныеДокумента.АдресДоставки КАК АдресДоставки,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеДокумента.Валюта.Код КАК ВалютаКод,
	|	ЛОЖЬ КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию,
	|	ДанныеДокумента.Основание КАК Основание,
	|	ДанныеДокумента.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ДанныеДокумента.ДоверенностьДата КАК ДоверенностьДата,
	|	ДанныеДокумента.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ДанныеДокумента.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	ДанныеДокумента.Отпустил КАК Кладовщик,
	|	ДанныеДокумента.ОтпустилДолжность КАК ДолжностьКладовщика
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ДанныеДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПоставщика КАК ДанныеПоставщика
	|		ПО ДанныеДокумента.Ссылка = ДанныеПоставщика.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	НЕ ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|	И &ВыводитьОсновнойУПД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактура КАК ПредставлениеДокумента,
	|	2 КАК СтатусУПД,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	"""" КАК СтрокаПоДокументу,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаСчетаФактуры,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Контрагент.ОбособленноеПодразделение
	|			ТОГДА ДанныеДокумента.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ ДанныеДокумента.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеПоставщика.ГоловнаяОрганизация КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	0 КАК ИндексПодразделения,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.Контрагент
	|		ИНАЧЕ ДанныеДокумента.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.Организация
	|		ИНАЧЕ ДанныеДокумента.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ДанныеПоставщика.КПППоставщика КАК КПППоставщика,
	|	ДанныеДокумента.Контрагент.КПП КАК КПППокупателя,
	|	ДанныеДокумента.АдресДоставки КАК АдресДоставки,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеДокумента.Валюта.Код КАК ВалютаКод,
	|	ЛОЖЬ КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию,
	|	ДанныеДокумента.Основание КАК Основание,
	|	ДанныеДокумента.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ДанныеДокумента.ДоверенностьДата КАК ДоверенностьДата,
	|	ДанныеДокумента.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ДанныеДокумента.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	ДанныеДокумента.Отпустил КАК Кладовщик,
	|	ДанныеДокумента.ОтпустилДолжность КАК ДолжностьКладовщика
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ДанныеДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПоставщика КАК ДанныеПоставщика
	|		ПО ДанныеДокумента.Ссылка = ДанныеПоставщика.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|	И ДанныеДокумента.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И &ВыводитьОсновнойУПД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	&ПредставлениеСчетФактураПосредника КАК ПредставлениеДокумента,
	|	2 КАК СтатусУПД,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправления,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправления,
	|	ЛОЖЬ КАК Исправление,
	|	НЕОПРЕДЕЛЕНО КАК НомерСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК НомерИсправленияСчетаФактуры,
	|	НЕОПРЕДЕЛЕНО КАК ДатаИсправленияСчетаФактуры,
	|	ЛОЖЬ КАК КорректировочныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО КАК СтрокаПоДокументу,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаСчетаФактуры,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ОрганизацияПолучатель.ОбособленноеПодразделение
	|			ТОГДА ДанныеДокумента.ОрганизацияПолучатель.ГоловнаяОрганизация
	|		ИНАЧЕ ДанныеДокумента.ОрганизацияПолучатель
	|	КОНЕЦ КАК Контрагент,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Контрагент.ОбособленноеПодразделение
	|			ТОГДА ДанныеДокумента.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ ДанныеДокумента.Контрагент
	|	КОНЕЦ КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	НЕОПРЕДЕЛЕНО КАК ИндексПодразделения,
	|	"""" КАК Руководитель,
	|	"""" КАК ДолжностьРуководителя,
	|	"""" КАК ГлавныйБухгалтер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.ОрганизацияПолучатель
	|		ИНАЧЕ ДанныеДокумента.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.Контрагент
	|		ИНАЧЕ ДанныеДокумента.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ДанныеДокумента.Контрагент.КПП КАК КПППоставщика,
	|	ДанныеДокумента.ОрганизацияПолучатель.КПП КАК КПППокупателя,
	|	ДанныеДокумента.АдресДоставки КАК АдресДоставки,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Валюта.НаименованиеПолное КАК ВалютаНаименованиеПолное,
	|	ДанныеДокумента.Валюта.Код КАК ВалютаКод,
	|	ЛОЖЬ КАК ТолькоУслуги,
	|	ЛОЖЬ КАК ЭтоПередачаНаКомиссию,
	|	ДанныеДокумента.Основание КАК Основание,
	|	"""" КАК ДоверенностьНомер,
	|	"""" КАК ДоверенностьДата,
	|	"""" КАК ДоверенностьВыдана,
	|	"""" КАК ДоверенностьЛицо,
	|	НЕОПРЕДЕЛЕНО КАК Кладовщик,
	|	НЕОПРЕДЕЛЕНО КАК ДолжностьКладовщика
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ДанныеДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|	И ДанныеДокумента.ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И &ВыводитьУПДПосредника
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаДокумента.Номенклатура.Артикул
	|		ИНАЧЕ ТаблицаДокумента.Номенклатура.Код
	|	КОНЕЦ КАК НоменклатураКод,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаДокумента.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ &ТекстЗапросаКодЕдиницыИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.НомерГТД КАК НомерГТД,
	|	ТаблицаДокумента.НомерГТД.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаДокумента.НомерГТД.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаДокумента.Количество
	|		ИНАЧЕ ТаблицаДокумента.КоличествоУпаковок
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаДокумента.СуммаБезНДС / ТаблицаДокумента.Количество
	|		ИНАЧЕ ТаблицаДокумента.СуммаБезНДС / ТаблицаДокумента.КоличествоУпаковок
	|	КОНЕЦ КАК Цена,
	|	ТаблицаДокумента.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаБезНДС + ТаблицаДокумента.СуммаНДС КАК СуммаСНДС,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	ВозвратТоваровМеждуОрганизациямиТаблицаТоваров КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаДокумента.Упаковка",
			"ТаблицаДокумента.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ТаблицаДокумента.Упаковка",
			"ТаблицаДокумента.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"ТаблицаДокумента.Упаковка",
			"ТаблицаДокумента.Номенклатура"));
	
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	Запрос.УстановитьПараметр("ПредставлениеСчетФактура", НСтр("ru='счет-фактура'"));
	Запрос.УстановитьПараметр("ПредставлениеСчетФактураПосредника", НСтр("ru='счет-фактура посредника'"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	Запрос.УстановитьПараметр("ВыводитьОсновнойУПД", 
		Не (ПараметрыПечати.Свойство("НеВыводитьОсновнойУПД") И ПараметрыПечати.НеВыводитьОсновнойУПД));
	Запрос.УстановитьПараметр("ВыводитьУПДПосредника", 
		Не (ПараметрыПечати.Свойство("НеВыводитьУПДПосредника") И ПараметрыПечати.НеВыводитьУПДПосредника));
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыТОРГ12(ПараметрыПечати, МассивОбъектов) Экспорт 
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	ПараметрыЗаполнения.ПересчитыватьВВалютуРегл = Ложь;
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
	
	ПродажиСервер.ПоместитьВременнуюТаблицуКоэффициентыУпаковок(МенеджерВременныхТаблиц, 
		"ВозвратТоваровМеждуОрганизациямиТаблицаТоваров");
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|
	// 4D:ERP для Беларуси, Дмитрий, 01.05.2015 22:11:56 
	// Локализация печатных форм, №7762
	// {
	|	ВозвратТоваров.НомерИсходящегоДокумента КАК НомерИсходящегоДокумента,
	|	ВозвратТоваров.СерияИсходящегоДокумента КАК СерияИсходящегоДокумента,
	|	ВозвратТоваров.Руководитель.Наименование КАК Отпустил,
	|	ВозвратТоваров.Руководитель.Должность КАК ОтпустилДолжность,
	|	ВозвратТоваров.Руководитель.Наименование КАК Разрешил,
	|	ВозвратТоваров.Руководитель.Должность КАК РазрешилДолжность,
	|	ВозвратТоваров.Принял КАК Принял,
	|	ВозвратТоваров.ПереданыДокументы КАК ПереданыДокументы,
	// }
	// 4D
	|
	|	ВозвратТоваров.Ссылка КАК Ссылка,
	|	ВозвратТоваров.Организация.Префикс КАК Префикс,
	|	ВозвратТоваров.Номер КАК Номер,
	|	ВозвратТоваров.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.Организация.ОбособленноеПодразделение
	|			ТОГДА ВозвратТоваров.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ ВозвратТоваров.Организация
	|	КОНЕЦ КАК Организация,
	|	ВозвратТоваров.Основание КАК Основание,
	|	ВозвратТоваров.ОснованиеДата КАК ОснованиеДата,
	|	ВозвратТоваров.ОснованиеНомер КАК ОснованиеНомер,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	ВозвратТоваров.ОрганизацияПолучатель КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ВозвратТоваров.ОрганизацияПолучатель
	|		ИНАЧЕ ВозвратТоваров.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ВозвратТоваров.Организация
	|		ИНАЧЕ ВозвратТоваров.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	ВозвратТоваров.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ВозвратТоваров.БанковскийСчетОрганизацииПолучателя КАК БанковскийСчетКонтрагента,
	|	ВозвратТоваров.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	ВозвратТоваров.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
	|	ВозвратТоваров.АдресДоставки КАК АдресДоставки,
	|	ВозвратТоваров.Подразделение КАК Подразделение,
	|	ВозвратТоваров.Валюта КАК Валюта,
	|	ВозвратТоваров.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ВозвратТоваров.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ВозвратТоваров.ДоверенностьДата КАК ДоверенностьДата,
	|	ВозвратТоваров.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ВозвратТоваров.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ВозвратТоваров.Отпустил КАК Кладовщик,
	|	ВозвратТоваров.ОтпустилДолжность КАК ДолжностьКладовщика,
	|	&ЕдиницаИзмеренияВеса КАК ЕдиницаИзмеренияВеса
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ВозвратТоваров.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ВозвратТоваров.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	НЕ ВозвратТоваров.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|
	// 4D:ERP для Беларуси, Дмитрий, 01.05.2015 22:11:56 
	// Локализация печатных форм, №7762
	// {
	|	ВозвратТоваров.НомерИсходящегоДокумента КАК НомерИсходящегоДокумента,
	|	ВозвратТоваров.СерияИсходящегоДокумента КАК СерияИсходящегоДокумента,
	|	ВозвратТоваров.Руководитель.Наименование КАК Отпустил,
	|	ВозвратТоваров.Руководитель.Должность КАК ОтпустилДолжность,
	|	ВозвратТоваров.Руководитель.Наименование КАК Разрешил,
	|	ВозвратТоваров.Руководитель.Должность КАК РазрешилДолжность,
	|	ВозвратТоваров.Принял КАК Принял,
	|	ВозвратТоваров.ПереданыДокументы КАК ПереданыДокументы,
	// }
	// 4D
	|
	|	ВозвратТоваров.Ссылка,
	|	ВозвратТоваров.Организация.Префикс,
	|	ВозвратТоваров.Номер,
	|	ВозвратТоваров.Дата,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.Организация.ОбособленноеПодразделение
	|			ТОГДА ВозвратТоваров.Организация.ГоловнаяОрганизация
	|		ИНАЧЕ ВозвратТоваров.Организация
	|	КОНЕЦ,
	|	ВозвратТоваров.Основание КАК Основание,
	|	ВозвратТоваров.ОснованиеДата КАК ОснованиеДата,
	|	ВозвратТоваров.ОснованиеНомер КАК ОснованиеНомер,
	|	ВозвратТоваров.Партнер,
	|	ВозвратТоваров.Контрагент,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ВозвратТоваров.Контрагент
	|		ИНАЧЕ ВозвратТоваров.Грузополучатель
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ВозвратТоваров.Организация
	|		ИНАЧЕ ВозвратТоваров.Грузоотправитель
	|	КОНЕЦ,
	|	ВозвратТоваров.БанковскийСчетОрганизации,
	|	ВозвратТоваров.БанковскийСчетКонтрагента,
	|	ВозвратТоваров.БанковскийСчетГрузоотправителя,
	|	ВозвратТоваров.БанковскийСчетГрузополучателя,
	|	ВозвратТоваров.АдресДоставки,
	|	ВозвратТоваров.Подразделение,
	|	ВозвратТоваров.Валюта,
	|	ВозвратТоваров.ЦенаВключаетНДС,
	|	ВозвратТоваров.ДоверенностьНомер,
	|	ВозвратТоваров.ДоверенностьДата,
	|	ВозвратТоваров.ДоверенностьВыдана,
	|	ВозвратТоваров.ДоверенностьЛицо,
	|	ТаблицаОтветственныеЛица.РуководительНаименование,
	|	ТаблицаОтветственныеЛица.РуководительДолжность,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование,
	|	ВозвратТоваров.Отпустил КАК Кладовщик,
	|	ВозвратТоваров.ОтпустилДолжность КАК ДолжностьКладовщика,
	|	&ЕдиницаИзмеренияВеса КАК ЕдиницаИзмеренияВеса
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ВозвратТоваров.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ВозвратТоваров.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	ВозвратТоваров.РасчетыЧерезОтдельногоКонтрагента
	|	И ВозвратТоваров.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|
	// 4D:ERP для Беларуси, Дмитрий, 01.05.2015 22:11:56 
	// Локализация печатных форм, №7762
	// {
	|	ВозвратТоваров.НомерИсходящегоДокумента КАК НомерИсходящегоДокумента,
	|	ВозвратТоваров.СерияИсходящегоДокумента КАК СерияИсходящегоДокумента,
	|	ВозвратТоваров.Руководитель.Наименование КАК Отпустил,
	|	ВозвратТоваров.Руководитель.Должность КАК ОтпустилДолжность,
	|	ВозвратТоваров.Руководитель.Наименование КАК Разрешил,
	|	ВозвратТоваров.Руководитель.Должность КАК РазрешилДолжность,
	|	ВозвратТоваров.Принял КАК Принял,
	|	ВозвратТоваров.ПереданыДокументы КАК ПереданыДокументы,
	// }
	// 4D
	|
	|	ВозвратТоваров.Ссылка,
	|	ВозвратТоваров.Организация.Префикс,
	|	ВозвратТоваров.НомерВходящегоДокумента,
	|	ВозвратТоваров.ДатаВходящегоДокумента,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.Контрагент.ОбособленноеПодразделение
	|			ТОГДА ВозвратТоваров.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ ВозвратТоваров.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВозвратТоваров.Основание КАК Основание,
	|	ВозвратТоваров.ОснованиеДата КАК ОснованиеДата,
	|	ВозвратТоваров.ОснованиеНомер КАК ОснованиеНомер,
	|	ВозвратТоваров.Партнер,
	|	ВозвратТоваров.ОрганизацияПолучатель,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.Грузополучатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ВозвратТоваров.ОрганизацияПолучатель
	|		ИНАЧЕ ВозвратТоваров.Грузополучатель
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ВозвратТоваров.Контрагент
	|		ИНАЧЕ ВозвратТоваров.Грузоотправитель
	|	КОНЕЦ,
	|	ВозвратТоваров.БанковскийСчетКонтрагента,
	|	ВозвратТоваров.БанковскийСчетОрганизацииПолучателя,
	|	ВозвратТоваров.БанковскийСчетГрузоотправителя,
	|	ВозвратТоваров.БанковскийСчетГрузополучателя,
	|	ВозвратТоваров.АдресДоставки,
	|	НЕОПРЕДЕЛЕНО,
	|	ВозвратТоваров.Валюта,
	|	ВозвратТоваров.ЦенаВключаетНДС,
	|	ВозвратТоваров.ДоверенностьНомер,
	|	ВозвратТоваров.ДоверенностьДата,
	|	ВозвратТоваров.ДоверенностьВыдана,
	|	ВозвратТоваров.ДоверенностьЛицо,
	|	"""" КАК Руководитель,
	|	"""" КАК ДолжностьРуководителя,
	|	"""" КАК ГлавныйБухгалтер,
	|	"""" КАК Кладовщик,
	|	"""" КАК ДолжностьКладовщика,
	|	&ЕдиницаИзмеренияВеса КАК ЕдиницаИзмеренияВеса
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ВозвратТоваров.Ссылка = ДанныеДокументов.Ссылка
	|ГДЕ
	|	ВозвратТоваров.РасчетыЧерезОтдельногоКонтрагента
	|	И ВозвратТоваров.ОрганизацияПолучатель <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаТоваров.Номенклатура.Артикул
	|		ИНАЧЕ ТаблицаТоваров.Номенклатура.Код
	|	КОНЕЦ КАК НоменклатураКод,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ &ТекстЗапросаЕдиницаИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Представление
	|		ИНАЧЕ &ТекстЗапросаНаименованиеЕдиницыИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения.Код
	|		ИНАЧЕ &ТекстЗапросаКодЕдиницыИзмерения
	|	КОНЕЦ КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	ТаблицаТоваров.Упаковка КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА """"
	|		ИНАЧЕ ТаблицаТоваров.Упаковка.Наименование
	|	КОНЕЦ КАК УпаковкаНаименование,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения ТОГДА
	|			&ТекстЗапросаНаименованиеЕдиницыИзмерения
	|		ИНАЧЕ
	|			КоэффициентыУпаковок.ВидУпаковки.ЕдиницаИзмерения.Представление
	|	КОНЕЦ КАК ВидУпаковки,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТоваров.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ КоэффициентыУпаковок.Количество / КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|	КОНЕЦ КАК КоличествоМест,
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ВЫБОР
	|					КОГДА КоэффициентыУпаковок.Количество < КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|						ТОГДА КоэффициентыУпаковок.Количество
	|					ИНАЧЕ КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА 1
	|				ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоВОдномМесте,
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|			ТОГДА ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТоваров.СуммаБезНДС / ТаблицаТоваров.Количество
	|	КОНЕЦ КАК Цена,
	|	ТаблицаТоваров.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаБезНДС + ТаблицаТоваров.СуммаНДС КАК СуммаСНДС,
	|	ТаблицаТоваров.Количество * &ТекстЗапросаВес2 КАК МассаНетто,
	|	ВЫБОР
	|		КОГДА &ЗаполненаЕдиницаИзмеренияВеса
	|			ТОГДА ВЫБОР
	|					КОГДА ТаблицаТоваров.Упаковка.Вес ЕСТЬ NULL 
	|						ТОГДА ТаблицаТоваров.Количество * &ТекстЗапросаВес1
	|					ИНАЧЕ ТаблицаТоваров.КоличествоУпаковок * &ТекстЗапросаВес1
	|				КОНЕЦ 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК МассаБрутто,
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	ВозвратТоваровМеждуОрганизациямиТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыУпаковок КАК КоэффициентыУпаковок
	|		ПО ТаблицаТоваров.Ссылка = КоэффициентыУпаковок.Ссылка
	|			И ТаблицаТоваров.НомерСтроки = КоэффициентыУпаковок.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаВес1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаВес2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.УстановитьПараметр("КолонкаКодов",                    КолонкаКодов);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияВеса",            Константы.ЕдиницаИзмеренияВеса.Получить());
	Запрос.УстановитьПараметр("ЗаполненаЕдиницаИзмеренияВеса",   ЗначениеЗаполнено(Константы.ЕдиницаИзмеренияВеса.Получить()));
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	
	МассивРезультатов         = Запрос.ВыполнитьПакет();
	РезультатПоШапке          = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[1];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
	                                               РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	КонецЕсли;
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Грузоотправитель");
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Грузополучатель");
	
КонецПроцедуры

#КонецОбласти

#Область ИнициализацияИЗаполнение

// Заполнение структуры по передаче товаров, "качество" ссылки на передачу НЕ контролируется
//
// Параметры:
//	Объект - Структура - что заполнять, состав ожидается эквивалентным структуре документе ВозвратТоваровМеждуОрганизациями
//	ИсточникСсылка - ДокументСсылка.ПередачаТоваровМеждуОрганизациями
//
Процедура ЗаполнитьПоПередачеТоваров(Объект, ИсточникСсылка) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ Организация, ОрганизацияПолучатель, РасчетыЧерезОтдельногоКонтрагента, Партнер, Контрагент
		|ИЗ Документ.ПередачаТоваровМеждуОрганизациями КАК ПТО
		|ГДЕ ПТО.Ссылка=&Ссылка");
	Запрос.УстановитьПараметр("Ссылка",ИсточникСсылка);
	Реквизиты = Запрос.Выполнить().Выгрузить()[0];
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = Реквизиты.ОрганизацияПолучатель;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.ОрганизацияПолучатель) Тогда
		Объект.ОрганизацияПолучатель = Реквизиты.Организация;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Объект,Реквизиты,"РасчетыЧерезОтдельногоКонтрагента,Партнер,Контрагент");
	
КонецПроцедуры

// Заполнение ТЧ.Товары по остаткам к возврату между организациями на дату расчета или на Объект.Дата
//
// Параметры:
//	Объект - Структура - что заполнять, состав ожидается эквивалентным структуре документе ВозвратТоваровМеждуОрганизациями
//	НачалоПериода - ДатаВремя - дата начала расчета остатков для заполнения
//	КонецПериода - ДатаВремя - дата окончания расчета остатков для заполнения
//
Процедура ЗаполнитьТоварыПоОстаткамКВозврату(Объект, НачалоПериода = Неопределено, КонецПериода = Неопределено) Экспорт
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ЗаПериод.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
		|	ВидыЗапасов.Ссылка						КАК ВидЗапасов,
		|	ЗаПериод.НомерГТД						КАК НомерГТД,
		|	ЗаПериод.ВозвращеноОборот				КАК ВозвращеноНаДату,
		|	ЕСТЬNULL(НаСейчас.ВозвращеноОстаток,0)	КАК ВозвращеноНаСейчас
		|ПОМЕСТИТЬ КВозврату
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче.ОстаткиИОбороты(&НачГраница, &КонГраница, Период, ,
		|		ОрганизацияВладелец = &ОрганизацияПолучатель
		|		И АналитикаУчетаНоменклатуры.Склад = &Склад) КАК ЗаПериод
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Справочник.ВидыЗапасов КАК ВидыЗапасов
		|	ПО
		|		ЗаПериод.ВидЗапасовПродавца = ВидыЗапасов.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(,
		|			ОрганизацияВладелец = &ОрганизацияПолучатель
		|			И АналитикаУчетаНоменклатуры.Склад = &Склад) КАК НаСейчас
		|	ПО
		|		ЗаПериод.АналитикаУчетаНоменклатуры = НаСейчас.АналитикаУчетаНоменклатуры
		|		И ЗаПериод.НомерГТД = НаСейчас.НомерГТД
		|		И ЗаПериод.ВидЗапасовПродавца = НаСейчас.ВидЗапасовПродавца
		|ГДЕ
		|	ВидыЗапасов.Организация = &Организация
		|	И ВидыЗапасов.РеализацияЗапасовДругойОрганизации
		|	И ЗаПериод.ВозвращеноОборот > 0
		|	И ЕСТЬNULL(НаСейчас.ВозвращеноОстаток,0) > 0
		|	И ВидыЗапасов.ТипЗапасов = &ТипЗапасов
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР КОГДА КВозврату.ВозвращеноНаСейчас < КВозврату.ВозвращеноНаДату ТОГДА
		|		КВозврату.ВозвращеноНаСейчас
		|	ИНАЧЕ
		|		КВозврату.ВозвращеноНаДату
		|	КОНЕЦ									КАК Количество,
		|	Аналитика.Номенклатура					КАК Номенклатура,
		|	Аналитика.Характеристика				КАК Характеристика,
		|	Аналитика.Серия							КАК Серия,
		|	КВозврату.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	КВозврату.ВидЗапасов					КАК ВидЗапасов,
		|	КВозврату.НомерГТД						КАК НомерГТД,
		|	Аналитика.Назначение					КАК Назначение
		|ИЗ
		|	КВозврату
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|	ПО
		|		КВозврату.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
		|
		|УПОРЯДОЧИТЬ ПО
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	Аналитика.Серия,
		|	КВозврату.ВидЗапасов,
		|	КВозврату.НомерГТД
		|");
	Запрос.УстановитьПараметр("ОрганизацияПолучатель", Объект.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("ТипЗапасов", ТипЗапасовОперации(Объект.ХозяйственнаяОперация));
	
	ДатаНачала = ?(ЗначениеЗаполнено(НачалоПериода), НачалоПериода, '00010101');
	ДатаОкончания = ?(ЗначениеЗаполнено(КонецПериода), КонецПериода, Объект.Дата);
	Запрос.УстановитьПараметр("НачГраница", Новый Граница(ДатаНачала, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонГраница", Новый Граница(ДатаОкончания, ВидГраницы.Включая));
	
	Объект.Товары.Очистить();
	ТаблицаТовары = Объект.Товары.Выгрузить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.ВидыЗапасов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		НоваяСтрокаТоваров = ТаблицаТовары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТоваров, Выборка);
		НоваяСтрокаТоваров.КоличествоУпаковок = НоваяСтрокаТоваров.Количество;
	КонецЦикла;
	
	ТаблицаТовары.Свернуть("Номенклатура, Характеристика, Серия, АналитикаУчетаНоменклатуры, СтавкаНДС, Назначение", "Количество, КоличествоУпаковок");
	Объект.Товары.Загрузить(ТаблицаТовары);
КонецПроцедуры

// Заполняет вид цены значением по умолчанию, заполняет валюту документа из вида цены
//
// Параметры:
//	Объект - Структура - что заполнять, состав ожидается эквивалентным структуре документе ВозвратТоваровМеждуОрганизациями
//
Процедура ЗаполнитьВидЦеныПоУмолчанию(Объект) Экспорт
	Если Не ЗначениеЗаполнено(Объект.ВидЦены) Тогда
		Объект.ВидЦены = Справочники.ВидыЦен.ВидЦеныПоУмолчанию(
			Объект.ВидЦены,
			Новый Структура("ИспользоватьПриПередачеМеждуОрганизациями", Истина));
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ВидЦены) Тогда
		Реквизиты = Справочники.ВидыЦен.ПолучитьРеквизитыВидаЦены(Объект.ВидЦены);
		Объект.Валюта = Реквизиты.ВалютаЦены;
		Объект.ЦенаВключаетНДС = Реквизиты.ЦенаВключаетНДС;
	КонецЕсли;
КонецПроцедуры

// Заполняем налогоболожение, ставки НДС, цены и суммы в товарах.
//
// Параметры:
//	Объект - Структура - что заполнять, состав ожидается эквивалентным структуре документе ВозвратТоваровМеждуОрганизациями
//
Процедура ЗаполнитьНалогобложениеИЦеныПоУмолчанию(Объект) Экспорт
	Объект.НалогообложениеНДС = Справочники.Организации.НалогообложениеНДС(Объект.ОрганизацияПолучатель, Неопределено, Объект.Дата);
	КэшированныеЗначения = Неопределено;
	Действия = Новый Структура("ЗаполнитьСтавкуНДС", Объект.НалогообложениеНДС);
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.Товары, Действия, КэшированныеЗначения);

	ЗаполнитьВидЦеныПоУмолчанию(Объект);
	Если ЗначениеЗаполнено(Объект.ВидЦены) Тогда
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Объект);
		
		ПараметрыЗаполнения = Новый Структура();
		ПараметрыЗаполнения.Вставить("Дата", Объект.Дата);
		ПараметрыЗаполнения.Вставить("Валюта", Объект.Валюта);
		ПараметрыЗаполнения.Вставить("ВидЦены", Объект.ВидЦены);
		ПараметрыЗаполнения.Вставить("ПоляЗаполнения", "Цена, ВидЦены");
		
		СтруктураДействий = Новый Структура();
		СтруктураДействий.Вставить("ПересчитатьСумму", "КоличествоУпаковок");
		СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
		СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
		
		ПродажиСервер.ЗаполнитьЦены(Объект.Товары, , ПараметрыЗаполнения, СтруктураДействий);
	КонецЕсли;
КонецПроцедуры

// Установка значений по умолчанию для пустой структуры
//
// Параметры:
//	Объект - Структура - что заполнять, состав ожидается эквивалентным структуре документе ВозвратТоваровМеждуОрганизациями
//
Процедура ЗаполнитьРеквизитыПоУмолчанию(Объект) Экспорт
	
	Объект.Менеджер = Пользователи.ТекущийПользователь();
	Объект.Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Объект.Организация);
	Объект.НалогообложениеНДС = Справочники.Организации.НалогообложениеНДС(Объект.ОрганизацияПолучатель, Неопределено,Объект.Дата);
	Объект.Склад = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Объект.Склад);
		
	СтруктураПараметров = ДенежныеСредстваСервер.ПараметрыЗаполненияБанковскогоСчетаОрганизацииПоУмолчанию();
	СтруктураПараметров.Организация    = Объект.Организация;
	СтруктураПараметров.БанковскийСчет = Объект.БанковскийСчетОрганизации;

	Объект.БанковскийСчетОрганизации = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(СтруктураПараметров);
	
	СтруктураПараметров = ДенежныеСредстваСервер.ПараметрыЗаполненияБанковскогоСчетаОрганизацииПоУмолчанию();
	СтруктураПараметров.Организация    = Объект.ОрганизацияПолучатель;
	СтруктураПараметров.БанковскийСчет = Объект.БанковскийСчетОрганизацииПолучателя;

	Объект.БанковскийСчетОрганизацииПолучателя = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(СтруктураПараметров);
	
	Объект.Подразделение = ЗначениеНастроекПовтИсп.ПодразделениеПользователя(Пользователи.ТекущийПользователь(), Объект.Подразделение);
	
	ЗаполнитьВидЦеныПоУмолчанию(Объект);
	Объект.Валюта = ДоходыИРасходыСервер.ПолучитьВалютуУправленческогоУчета(Объект.Валюта);
	
КонецПроцедуры

#КонецОбласти

#Область ШаблоныСообщений

// Вызывается при подготовке шаблонов сообщений и позволяет переопределить список реквизитов и вложений.
//
// Параметры:
//  Реквизиты               - ДеревоЗначений - список реквизитов шаблона.
//         ** Имя            - Строка - Уникальное имя общего реквизита.
//         ** Представление  - Строка - Представление общего реквизита.
//         ** Тип            - Тип    - Тип реквизита. По умолчанию строка.
//         ** Формат         - Строка - Формат вывода значения для чисел, дат, строк и булевых значений.
//  Вложения                - ТаблицаЗначений - печатные формы и вложения
//         ** Имя            - Строка - Уникальное имя вложения.
//         ** Представление  - Строка - Представление варианта.
//         ** ТипФайла       - Строка - Тип вложения, который соответствует расширению файла: "pdf", "png", "jpg", mxl" и др.
//  ДополнительныеПараметры - Структура - дополнительные сведения о шаблоне сообщений.
//
Процедура ПриПодготовкеШаблонаСообщения(Реквизиты, Вложения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Вызывается в момент создания сообщений по шаблону для заполнения значений реквизитов и вложений.
//
// Параметры:
//  Сообщение - Структура - структура с ключами:
//    * ЗначенияРеквизитов - Соответствие - список используемых в шаблоне реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * ЗначенияОбщихРеквизитов - Соответствие - список используемых в шаблоне общих реквизитов.
//      ** Ключ     - Строка - имя реквизита в шаблоне;
//      ** Значение - Строка - значение заполнения в шаблоне.
//    * Вложения - Соответствие - значения реквизитов 
//      ** Ключ     - Строка - имя вложения в шаблоне;
//      ** Значение - ДвоичныеДанные, Строка - двоичные данные или адрес во временном хранилище вложения.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//  ДополнительныеПараметры - Структура -  Дополнительная информация о шаблоне сообщения.
//
Процедура ПриФормированииСообщения(Сообщение, ПредметСообщения, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

// Заполняет список получателей SMS при отправке сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиSMS - ТаблицаЗначений - список получается SMS.
//     * НомерТелефона - Строка - номер телефона, куда будет отправлено сообщение SMS.
//     * Представление - Строка - представление получателя сообщения SMS.
//     * Контакт       - СправочникСсылка - контакт, которому принадлежит номер телефона.
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииТелефоновПолучателейВСообщении(ПолучателиSMS, ПредметСообщения) Экспорт
	
КонецПроцедуры

// Заполняет список получателей письма при отправки сообщения сформированного по шаблону.
//
// Параметры:
//   ПолучателиПисьма - ТаблицаЗначений - список получается письма.
//     * Адрес           - Строка - адрес электронной почты получателя.
//     * Представление   - Строка - представление получается письма.
//     * ВариантОтправки - Строка - Варианты отправки письма: "Кому", "Копия", "СкрытаяКопия", "ОбратныйАдреса";
//  ПредметСообщения - ЛюбаяСсылка - ссылка на объект являющийся источником данных.
//
Процедура ПриЗаполненииПочтыПолучателейВСообщении(ПолучателиПисьма, ПредметСообщения) Экспорт
	
КонецПроцедуры

#КонецОбласти 

#Область Прочее

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл", ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                КАК Ссылка,
	|	ТаблицаТоваров.Номенклатура          КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика        КАК Характеристика,
	|	ТаблицаТоваров.Серия                 КАК Серия,
	|	ТаблицаТоваров.Упаковка              КАК Упаковка,
	|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки
	|
	|ПОМЕСТИТЬ СтрокиТоваров
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ТаблицаТоваров
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.Серия,
	|	ТаблицаТоваров.Упаковка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.Упаковка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                        КАК Ссылка,
	|	СтрокиТоваров.НомерСтроки                                      КАК НомерСтроки,
	|	Аналитика.Номенклатура                                         КАК Номенклатура,
	|	Аналитика.Характеристика                                       КАК Характеристика,
	|	Аналитика.Серия                                                КАК Серия,
	|	ТаблицаДокумента.НомерГТД                                      КАК НомерГТД,
	|	СУММА(ТаблицаДокумента.Количество)                             КАК Количество,
	|	СУММА(ТаблицаДокумента.КоличествоУпаковок)                     КАК КоличествоУпаковок,
	|	
	|	СУММА(ЕСТЬNULL(
	|		СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,
	|		ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС
	|	)) КАК СуммаБезНДС,
	|	
	|	ТаблицаДокумента.СтавкаНДС                                     КАК СтавкаНДС,
	|	
	|	СУММА(ЕСТЬNULL(
	|		СуммыДокументовВВалютеРегл.СуммаНДСРегл,
	|		ТаблицаДокумента.СуммаНДС
	|	)) КАК СуммаНДС,
	|	
	|	ИСТИНА                                                         КАК ЭтоТовар,
	|	ИСТИНА                                                         КАК ВернутьМногооборотнуюТару,
	|	ТаблицаДокумента.Упаковка                                      КАК Упаковка
	|
	|ПОМЕСТИТЬ ВозвратТоваровМеждуОрганизациямиТаблицаТоваров
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|		И СуммыДокументовВВалютеРегл.Активность
	|		И &ПересчитыватьВВалютуРегл
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаДокумента.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СтрокиТоваров КАК СтрокиТоваров
	|	ПО
	|		ТаблицаДокумента.Ссылка     = СтрокиТоваров.Ссылка
	|		И Аналитика.Номенклатура    = СтрокиТоваров.Номенклатура
	|		И Аналитика.Характеристика  = СтрокиТоваров.Характеристика
	|		И Аналитика.Серия           = СтрокиТоваров.Серия
	|		И ТаблицаДокумента.Упаковка = СтрокиТоваров.Упаковка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	СтрокиТоваров.НомерСтроки,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ТаблицаДокумента.Упаковка,
	|	ТаблицаДокумента.НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СтрокиТоваров
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#Область Обработчики_11_3_1

// Регистрирует данные для обработчика обновления УТ 11.3.1
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК Товары
	|ГДЕ
	|	Товары.АналитикаУчетаНоменклатуры.Назначение <> Товары.Назначение
	|	И Товары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И Товары.Ссылка.Проведен
	|");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Переносит данные о назначении из вида запасов в аналитику учета номенклатуры.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяДокумента = "Документ.ВозвратТоваровМеждуОрганизациями";
	МетаданныеДокумента = Метаданные.Документы.ВозвратТоваровМеждуОрганизациями;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяДокумента, МенеджерВременныхТаблиц);
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОбработке.Ссылка КАК Ссылка,
	|	КОбработке.Ссылка.ВерсияДанных КАК ВерсияДанных
	|ИЗ
	|	&ВТДокументыДляОбработки КАК КОбработке
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДокументыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									МетаданныеДокумента,
									Выборка.Ссылка,
									ТекстСообщения);
			Продолжить;
		КонецПопытки;
		
		ДокОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
		Если ДокОбъект = Неопределено Тогда
			ЗафиксироватьТранзакцию();
			Продолжить;
		КонецЕсли;
			
		ПараметрыЗаполненияКлючей = РегистрыСведений.АналитикаУчетаНоменклатуры.ПараметрыЗаполненияКлючейАналитики();
		МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(ДокОбъект.ХозяйственнаяОперация, ДокОбъект.Склад, ДокОбъект.Подразделение, ДокОбъект.Партнер);
		РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ДокОбъект.Товары, МестаУчета, Неопределено, Ложь, ПараметрыЗаполненияКлючей);
		
		ДополнитьКлюч = Истина;
		ПараметрыЗаполненияКлючейВидовЗапасов = РегистрыСведений.АналитикаУчетаНоменклатуры.ПараметрыЗаполненияКлючейАналитики();
		РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ДокОбъект.ВидыЗапасов, МестаУчета, Неопределено, ДополнитьКлюч, ПараметрыЗаполненияКлючейВидовЗапасов);
		
		Попытка
			Если ПараметрыЗаполненияКлючей.ИзмененаАналитика ИЛИ ПараметрыЗаполненияКлючейВидовЗапасов.ИзмененаАналитика Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеДокумента,
				,
				ТекстСообщения);
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяДокумента);
КонецПроцедуры

// Регистрирует данные для обработчика обновления СгенерироватьКлючиАналитикиНоменклатуры
//
Процедура ЗарегистрироватьДанныеКОбновлениюКлючейАналитики(Параметры) Экспорт
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаНоменклатуры.ТекстЗапросаГенерацииКлючейКОбработке()
	+ "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК Товары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтКлючиКГенерации КАК КлючиКГенерации
	|	ПО КлючиКГенерации.Ссылка = Товары.АналитикаУчетаНоменклатуры
	|		И КлючиКГенерации.Назначение = Товары.Назначение
	|ГДЕ
	|	Товары.АналитикаУчетаНоменклатуры.Назначение <> Товары.Назначение
	|	И Товары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И Товары.Ссылка.Проведен
	|	И КлючиКГенерации.Ссылка ЕСТЬ NULL
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоРегистратору", " ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВозвратТоваровМеждуОрганизациями)");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПоместитьВТ", "ПОМЕСТИТЬ ВтКлючиКГенерации");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Справочники.КлючиАналитикиУчетаНоменклатуры.УстановитьПараметрыЗапросаКлючей(Запрос);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
КонецПроцедуры

// Обработчик обновления документа, по табличным частям генерирует недостающие ключи аналитики учета номенклатуры в ИБ.
Процедура СгенерироватьКлючиАналитикиНоменклатуры(Параметры) Экспорт
	
	ПолноеИмяДокумента = "Документ.ВозвратТоваровМеждуОрганизациями";
	МетаданныеДокумента = Метаданные.Документы.ВозвратТоваровМеждуОрганизациями;
	
	ДополнительныеПараметрыВыборкиДанных = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметрыВыборкиДанных.ВыбиратьПорциями = Ложь;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяДокумента, ДополнительныеПараметрыВыборкиДанных);
	Пока Выборка.Следующий() Цикл
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Поля.Номенклатура,
		|	Поля.Характеристика,
		|	Поля.Серия,
		|	Поля.Склад,
		|	Товары.Назначение КАК Назначение,
		|	Поля.СтатьяКалькуляции
		|ИЗ
		|	Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК Товары
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Поля
		|	ПО Поля.Ссылка = Товары.АналитикаУчетаНоменклатуры
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|	ПО Поля.Номенклатура = Аналитика.Номенклатура
		|		И Поля.Характеристика = Аналитика.Характеристика
		|		И Поля.Серия = Аналитика.Серия
		|		И Поля.Склад = Аналитика.Склад
		|		И Товары.Назначение = Аналитика.Назначение
		|		И Поля.СтатьяКалькуляции = Аналитика.СтатьяКалькуляции
		|ГДЕ
		|	Товары.АналитикаУчетаНоменклатуры.Назначение <> Товары.Назначение
		|	И Товары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|	И Товары.Ссылка.Проведен
		|	И Товары.Ссылка = &Ссылка
		|	И Аналитика.КлючАналитики ЕСТЬ NULL
		|");
		
		Запрос.УстановитьПараметр("Ссылка", Выборка.Ссылка);
		
		Попытка
			НачатьТранзакцию();
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			Блокировка.Заблокировать();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									МетаданныеДокумента,
									Выборка.Ссылка,
									ТекстСообщения);
			Продолжить;
		КонецПопытки;
		
		Ключи = Запрос.Выполнить().Выбрать();
		Пока Ключи.Следующий() Цикл
			Попытка
				РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Ключи, Истина);
			Исключение
				ТекстСообщения = НСтр("ru = 'Не удалось инициализировать ключ аналитики учета номенклатуры: %Ключ% по причине: %Причина%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ключ%", Выборка.Ссылка);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
					МетаданныеДокумента, ТекстСообщения);
				КонецПопытки;
		КонецЦикла;
		ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
		ЗафиксироватьТранзакцию();
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяДокумента);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
