#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Подсистема "Управление доступом".

// Процедура ЗаполнитьНаборыЗначенийДоступа по свойствам объекта заполняет наборы значений доступа
// в таблице с полями:
//    НомерНабора     - Число                                     (необязательно, если набор один),
//    ВидДоступа      - ПланВидовХарактеристикСсылка.ВидыДоступа, (обязательно),
//    ЗначениеДоступа - Неопределено, СправочникСсылка или др.    (обязательно),
//    Чтение          - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Добавление      - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Изменение       - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//    Удаление        - Булево (необязательно, если набор для всех прав) устанавливается для одной строки набора,
//
//  Вызывается из процедуры УправлениеДоступомСлужебный.ЗаписатьНаборыЗначенийДоступа(),
// если объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьНаборыЗначенийДоступа" и
// из таких же процедур объектов, у которых наборы значений доступа зависят от наборов этого
// объекта (в этом случае объект зарегистрирован в "ПодпискаНаСобытие.ЗаписатьЗависимыеНаборыЗначенийДоступа").
//
// Параметры:
//  Таблица      - ТабличнаяЧасть,
//                 РегистрСведенийНаборЗаписей.НаборыЗначенийДоступа,
//                 ТаблицаЗначений, возвращаемая УправлениеДоступом.ТаблицаНаборыЗначенийДоступа().
//
Процедура ЗаполнитьНаборыЗначенийДоступа(Таблица) Экспорт
	
	ЗарплатаКадры.ЗаполнитьНаборыПоОрганизацииИФизическимЛицам(ЭтотОбъект, Таблица, "Организация", "Сотрудник");
	
КонецПроцедуры

// Подсистема "Управление доступом".

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаНачала, "Объект.ДатаНачала", Отказ, НСтр("ru='Начало отпуска'"), , , Ложь);
	
	Если ВыплачиватьПособиеДоПолутораЛет Тогда
		ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаОкончанияПособияДоПолутораЛет, "Объект.ДатаОкончанияПособияДоПолутораЛет", Отказ, НСтр("ru='Окончание пособия до 1.5 лет'"), , , Ложь);
	КонецЕсли;
	
	Если ВыплачиватьПособиеДоТрехЛет Тогда
		ЗарплатаКадры.ПроверитьКорректностьДаты(Ссылка, ДатаОкончанияПособияДоПолутораЛет, "Объект.ДатаОкончанияПособияДоТрехЛет", Отказ, НСтр("ru='Окончание пособия до 3-х лет'"), , , Ложь);
	КонецЕсли;
	
	Если РассчитатьЗарплату Тогда
		ЗарплатаКадры.ПроверитьДатуВыплаты(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	КонтейнерОшибок = Неопределено;
	
	ПроверитьЗаполнениеРеквизитовШапки(КонтейнерОшибок);	

	ПроверитьПринадлежностьФизическогоЛицаОрганизации(Отказ);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРасчетЗарплатыРасширенная") Тогда
		
		ЗарплатаКадрыРасширенный.ПроверитьУтверждениеДокумента(ЭтотОбъект, Отказ);
		
		Если НачисленияУтверждены Тогда
			
			ПроверитьЗаполнениеРеквизитовНеобходимыхДляРасчета(КонтейнерОшибок);                                                                        
			
			ПроверитьЗаполнениеПлановыхНачисленийОтпуска(КонтейнерОшибок);	
			
			ИсправлениеДокументовЗарплатаКадры.ПроверитьЗаполнение(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ);
			
			Если НеНачислятьЗарплатуИНеВыплачиватьАвансВоВремяОтпуска = Ложь Тогда 
				
				ПроверитьЗаполнениеПлановыхНачислений(Отказ);
				
				ПроверитьЗаполнениеЛьгот(Отказ);
				
			КонецЕсли;
			
			ПроверитьЗаполнениеПериодовВыплатыПособий(Отказ);
			
			// Проверка корректности распределения по источникам финансирования
			ИменаТаблицРаспределяемыхПоСтатьямФинансирования = "ОплатаТруда,Удержания,НДФЛ,ПогашениеЗаймов,КорректировкиВыплаты";
			
			Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ЛьготыСотрудников") Тогда
				
				ИмяФО = "ИспользоватьЛьготыСотрудников";
				Если ПолучитьФункциональнуюОпцию(ИмяФО) Тогда
					ИменаТаблицРаспределяемыхПоСтатьямФинансирования = ИменаТаблицРаспределяемыхПоСтатьямФинансирования + ",Льготы";
				КонецЕсли;
				
			КонецЕсли;
			
			ОтражениеЗарплатыВБухучетеРасширенный.ПроверитьРезультатыРаспределенияНачисленийУдержанийОбъекта(
				ЭтотОбъект, ИменаТаблицРаспределяемыхПоСтатьямФинансирования, Отказ);
			
			// Проверка корректности распределения по территориям и условиям труда
			ИменаТаблицРаспределенияПоТерриториямУсловиямТруда = "ОплатаТруда";
			
			РасчетЗарплатыРасширенный.ПроверитьРаспределениеПоТерриториямУсловиямТрудаДокумента(
				ЭтотОбъект, ИменаТаблицРаспределенияПоТерриториямУсловиямТруда, Отказ);
				
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(КонтейнерОшибок, Отказ);

	УдалитьПроверенныеРеквизиты(ПроверяемыеРеквизиты);
		
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Сотрудники") Тогда
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Сотрудник") Тогда
		ЗарплатаКадры.ЗаполнитьПоОснованиюСотрудником(ЭтотОбъект, ДанныеЗаполнения.Сотрудник);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Действие") И ДанныеЗаполнения.Действие = "Исправить" Тогда
			
			ИсправлениеДокументовЗарплатаКадры.СкопироватьДокумент(ЭтотОбъект, ДанныеЗаполнения.Ссылка);
			
			ИсправленныйДокумент = ДанныеЗаполнения.Ссылка;
			ЗарплатаКадрыРасширенный.ПриКопированииМногофункциональногоДокумента(ЭтотОбъект);
			
		КонецЕсли;
	КонецЕсли;
	
	ЗарплатаКадрыРасширенный.ОбработкаЗаполненияМногофункциональногоДокумента(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Документы.ОтпускПоУходуЗаРебенком.ПровестиПоУчетам(Ссылка, РежимПроведения, Отказ, Неопределено, Движения, ЭтотОбъект, ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	// Подготовка к регистрации перерасчетов
	ДанныеДляРегистрацииПерерасчетов = Новый МенеджерВременныхТаблиц;
	
	Документы.ОтпускПоУходуЗаРебенком.СоздатьВТДанныеДокументов(Ссылка, Сотрудник, Организация, ПериодРегистрации, ДанныеДляРегистрацииПерерасчетов);
	ЕстьПерерасчеты = ПерерасчетЗарплаты.СборДанныхДляРегистрацииПерерасчетов(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация);
	
	// Регистрация перерасчетов
	Если ЕстьПерерасчеты Тогда
		ПерерасчетЗарплаты.РегистрацияПерерасчетовПриОтменеПроведения(Ссылка, ДанныеДляРегистрацииПерерасчетов, Организация);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПособиеВыплачиваетсяФСС = ПрямыеВыплатыПособийСоциальногоСтрахования.ПособиеПлатитУчастникПилотногоПроекта(Организация, ДатаОкончанияПособияДоПолутораЛет);	
								
	УстановитьПривилегированныйРежим(Ложь);
	
	ЗарплатаКадрыРасширенный.ПередЗаписьюМногофункциональногоДокумента(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЗарплатаКадрыРасширенный.ПриКопированииМногофункциональногоДокумента(ЭтотОбъект);

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	УчетСреднегоЗаработка.ЗаписатьДатуНачалаСобытия(Ссылка, ОсновнойСотрудник, ДатаНачала);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ЦепочкиДокументов") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ЦепочкиДокументов");
		Модуль.УстановитьВторичныеРеквизитыДокументаЗамещения(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьТаблицуПособийПоУходу(Отказ)
	
	СписокФизическихЛиц = Новый Массив;
	СписокФизическихЛиц.Добавить(Сотрудник);
	
	ОсновныеСотрудники = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(СписокФизическихЛиц, Истина, Организация, ДатаНачала);
	Если Не ОсновныеСотрудники.Количество() > 0 Тогда
		Отказ  =  Истина;
		ТекстСообщения = Нстр("ru='%1 не работает в организации на %2. Проведение невозможно.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Сотрудник, Формат(ДатаНачала,"ДЛФ=D"));
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ТаблицаПособийПоУходу = РасчетЗарплатыРасширенный.ПустаяТаблицаПлановыхНачислений();
	
	Если ВыплачиватьПособиеДоПолутораЛет Тогда
		НоваяСтрока = ТаблицаПособийПоУходу.Добавить();
		НоваяСтрока.Сотрудник = ОсновнойСотрудник;
		НоваяСтрока.Период = ДатаНачала;
		НоваяСтрока.Начисление = ПособиеДоПолутораЛет;
		НоваяСтрока.Действие = Перечисления.ДействияСНачислениямиИУдержаниями.Утвердить;
	КонецЕсли;
	
	Если ВыплачиватьПособиеДоТрехЛет Тогда
		НоваяСтрока = ТаблицаПособийПоУходу.Добавить();
		НоваяСтрока.Сотрудник = ОсновнойСотрудник;
		НоваяСтрока.Период = ДатаНачала;
		НоваяСтрока.Начисление = ПособиеДоТрехЛет;
		НоваяСтрока.Действие = Перечисления.ДействияСНачислениямиИУдержаниями.Утвердить;
	КонецЕсли;
	
	// 4D:ERP для Беларуси, Яна, 14.06.2017 11:59:01 
	// Добавление варианта оплаты отпуска по уходу за ребенком инвалидом до 3-х лет, №15145 
	// {	
	Если ВыплачиватьПособиеДоТрехЛетНаВторогоРебенка Тогда
		НоваяСтрока = ТаблицаПособийПоУходу.Добавить();
		НоваяСтрока.Сотрудник = ОсновнойСотрудник;
		НоваяСтрока.Период = ДатаНачала;
		НоваяСтрока.Начисление = ПособиеДоТрехЛетНаВторогоРебенка;
		НоваяСтрока.Действие = Перечисления.ДействияСНачислениямиИУдержаниями.Утвердить;
	КонецЕсли;
	
	Если ВыплачиватьПособиеДоТрехЛетНаРебенкаИнвалида Тогда
		НоваяСтрока = ТаблицаПособийПоУходу.Добавить();
		НоваяСтрока.Сотрудник = ОсновнойСотрудник;
		НоваяСтрока.Период = ДатаНачала;
		НоваяСтрока.Начисление = ПособиеДоТрехЛетНаРебенкаИнвалида;
		НоваяСтрока.Действие = Перечисления.ДействияСНачислениямиИУдержаниями.Утвердить;
	КонецЕсли;
	// }
	// 4D
	
	Возврат ТаблицаПособийПоУходу;
	
КонецФункции

#Область ПроверкаЗаполненияДокумента

Функция ДокументГотовКРасчету(ВыводитьСообщения = Истина) Экспорт
	
	КонтейнерОшибок = Неопределено;
	
	ПроверитьЗаполнениеРеквизитовШапки(КонтейнерОшибок);
	
	ПроверитьЗаполнениеРеквизитовНеобходимыхДляРасчета(КонтейнерОшибок, Истина);                                                                        
		
	КонтейнерСодержитОшибки = Ложь;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(КонтейнерОшибок, КонтейнерСодержитОшибки);
	
	Если Не ВыводитьСообщения Тогда
		
		ПолучитьСообщенияПользователю(Истина);		
		
	КонецЕсли;
	
	Возврат Не КонтейнерСодержитОшибки;	
	
КонецФункции

Процедура ПроверитьЗаполнениеРеквизитовШапки(КонтейнерОшибок)
	
	Если Не ЗначениеЗаполнено(ПериодРегистрации) Тогда
		ТекстСообщения = НСтр("ru = 'Не указан период регистрации.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ПериодРегистрации", ТекстСообщения, "");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Организация"" обязательно к заполнению.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.Организация", ТекстСообщения, "");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Сотрудник) Тогда
		ТекстСообщения = НСтр("ru = 'Поле ""Сотрудник"" обязательно к заполнению.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.Сотрудник", ТекстСообщения, "");		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнена дата начала отпуска по уходу за ребенком.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаНачала", ТекстСообщения, "");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаОкончания) Тогда
		ТекстСообщения = НСтр("ru='Не указана дата окончания отпуска.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончания", ТекстСообщения, "");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ДатаОкончания) И ДатаОкончания < ДатаНачала Тогда
		ТекстСообщения = НСтр("ru='Дата окончания отпуска не должна быть меньше даты начала.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ДатаОкончания", ТекстСообщения, "");
	КонецЕсли; 

	Если ЗначениеЗаполнено(Сотрудник) 
		И ЗначениеЗаполнено(ДатаНачала) 
		И Не ЗначениеЗаполнено(ОсновнойСотрудник) Тогда
		ТекстСообщения = Нстр("ru='%1 не работает в организации на %2.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, Сотрудник, Формат(ДатаНачала, "ДЛФ=D"));
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.Сотрудник", ТекстСообщения, "");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеРеквизитовНеобходимыхДляРасчета(КонтейнерОшибок, ПроверкаПередРасчетом = Ложь)
	
	Если Не НачисленияУтверждены И Не ПроверкаПередРасчетом Тогда
		Возврат;
	КонецЕсли;	
	
	ПроверитьЗаполнениеПланируемойДатыВыплаты(КонтейнерОшибок, ПроверкаПередРасчетом);
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеПлановыхНачисленийОтпуска(КонтейнерОшибок)
	
	Если ВыплачиватьПособиеДоПолутораЛет
		И Не ЗначениеЗаполнено(ПособиеДоПолутораЛет) Тогда
		ТекстСообщения = Нстр("ru='Необходимо указать вид оплаты пособия по уходу до полутора лет.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ПособиеДоПолутораЛет", ТекстСообщения, "");
	КонецЕсли;
	
	Если ВыплачиватьПособиеДоТрехЛет
		И Не ЗначениеЗаполнено(ПособиеДоТрехЛет) Тогда
		ТекстСообщения = Нстр("ru='Необходимо указать вид оплаты пособия по уходу до трех лет.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ПособиеДоТрехЛет", ТекстСообщения, "");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеПланируемойДатыВыплаты(КонтейнерОшибок, ПроверкаПередРасчетом)
	
	МассивНачисленийДокумента = Новый Массив;
	
	Если НЕ ПроверкаПередРасчетом Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивНачисленийДокумента, ОплатаТруда.ВыгрузитьКолонку("Начисление"), Истина);
	КонецЕсли;
	
	Если УчетНДФЛРасширенный.ДатаВыплатыОбязательнаКЗаполнению(ПорядокВыплаты, МассивНачисленийДокумента)
		И Не ЗначениеЗаполнено(ПланируемаяДатаВыплаты) Тогда
		ТекстСообщения = НСтр("ru = 'Дата выплаты обязательна к заполнению при выплате в межрасчет.'");
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(КонтейнерОшибок, "Объект.ПланируемаяДатаВыплаты", ТекстСообщения, "");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеПлановыхНачислений(Отказ)
	
	Если Не ИзменитьНачисления Тогда
		Возврат;
	КонецЕсли;
	
	КадровыйУчетРасширенный.ПроверкаСпискаНачисленийКадровогоДокумента(ЭтотОбъект, ДатаНачала, "Начисления", "Показатели", Отказ, Истина, "РабочееМесто");
	
	ТаблицаПособийПоУходу = СформироватьТаблицуПособийПоУходу(Отказ);
	РасчетЗарплатыРасширенный.ПроверитьМножественностьОплатыВремениУходЗаРебенком(ДатаНачала, Начисления, Ссылка, Отказ, ТаблицаПособийПоУходу, , ИсправленныйДокумент);
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеЛьгот(Отказ)
	
	Если Не ИзменитьЛьготы Тогда 
		Возврат;
	КонецЕсли;
	
	КадровыйУчетРасширенный.ПроверкаСпискаНачисленийКадровогоДокумента(ЭтотОбъект, ДатаНачала, "Льготы", "Показатели", Отказ, Истина, "РабочееМесто", "Льгота");
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеПериодовВыплатыПособий(Отказ)
	
	Если ВыплачиватьПособиеДоПолутораЛет Тогда
		Если Не ЗначениеЗаполнено(ДатаОкончанияПособияДоПолутораЛет) Тогда
			ТекстСообщения = НСтр("ru='Не указана дата окончания выплаты пособия за счет ФСС до полутора лет.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ДатаОкончанияПособияДоПолутораЛет",, Отказ);
		ИначеЕсли ДатаОкончанияПособияДоПолутораЛет > ДатаОкончания Тогда
			ТекстСообщения = НСтр("ru='Дата окончания выплаты пособия за счет ФСС до полутора лет превышает дату окончания отпуска.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ДатаОкончанияПособияДоПолутораЛет",, Отказ);
		ИначеЕсли ДатаОкончанияПособияДоПолутораЛет < ДатаНачала Тогда
			ТекстСообщения = НСтр("ru='Дата окончания выплаты пособия за счет ФСС до полутора лет не должна быть меньше даты начала отпуска.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ДатаОкончанияПособияДоПолутораЛет",, Отказ);
		КонецЕсли;
		Если КоличествоДетей = 0 Тогда
			ТекстСообщения = НСтр("ru='Не указано количество детей, за которыми осуществляется уход.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.КоличествоДетей",, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если ВыплачиватьПособиеДоТрехЛет Тогда
		Если Не ЗначениеЗаполнено(ДатаОкончанияПособияДоТрехЛет) Тогда
			ТекстСообщения = НСтр("ru='Не указана дата окончания выплаты пособия до трех лет.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ДатаОкончанияПособияДоТрехЛет",, Отказ)
		ИначеЕсли ДатаОкончанияПособияДоТрехЛет > ДатаОкончания Тогда
			ТекстСообщения = НСтр("ru='Дата окончания выплаты пособия до трех лет превышает дату окончания отпуска.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ДатаОкончанияПособияДоТрехЛет",, Отказ);
		ИначеЕсли ДатаОкончанияПособияДоТрехЛет < ДатаНачала Тогда
			ТекстСообщения = НСтр("ru='Дата окончания выплаты пособия до трех лет не должна быть меньше даты начала отпуска.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ДатаОкончанияПособияДоТрехЛет",, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	// 4D:ERP для Беларуси, Яна, 15.08.2017 11:29:35 
	// Документ "Отпуск по уходу за ребенком", №15745 
	// {
	Если ВыплачиватьПособиеДоТрехЛетНаВторогоРебенка Тогда
		Если Не ЗначениеЗаполнено(ДатаОкончанияПособияДоТрехЛетНаВторогоРебенка) Тогда
			ТекстСообщения = НСтр("ru='Не указана дата окончания выплаты пособия до трех лет на второго ребенка.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ДатаОкончанияПособияДоТрехЛетНаВторогоРебенка",, Отказ)
		ИначеЕсли ДатаОкончанияПособияДоТрехЛетНаВторогоРебенка > ДатаОкончания Тогда
			ТекстСообщения = НСтр("ru='Дата окончания выплаты пособия до трех лет на второго ребенка превышает дату окончания отпуска.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ДатаОкончанияПособияДоТрехЛетНаВторогоРебенка",, Отказ);
		ИначеЕсли ДатаОкончанияПособияДоТрехЛетНаВторогоРебенка < ДатаНачала Тогда
			ТекстСообщения = НСтр("ru='Дата окончания выплаты пособия до трех лет на второго ребенка не должна быть меньше даты начала отпуска.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ДатаОкончанияПособияДоТрехЛетНаВторогоРебенка",, Отказ);
		КонецЕсли;
	КонецЕсли;
	Если ВыплачиватьПособиеДоТрехЛетНаРебенкаИнвалида Тогда
		Если Не ЗначениеЗаполнено(ДатаОкончанияПособияДоТрехЛетНаРебенкаИнвалида) Тогда
			ТекстСообщения = НСтр("ru='Не указана дата окончания выплаты пособия до трех лет на ребенка - инвалида.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ДатаОкончанияПособияДоТрехЛетНаРебенкаИнвалида",, Отказ)
		ИначеЕсли ДатаОкончанияПособияДоТрехЛетНаРебенкаИнвалида > ДатаОкончания Тогда
			ТекстСообщения = НСтр("ru='Дата окончания выплаты пособия до трех лет на ребенка - инвалида превышает дату окончания отпуска.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ДатаОкончанияПособияДоТрехЛетНаРебенкаИнвалида",, Отказ);
		ИначеЕсли ДатаОкончанияПособияДоТрехЛетНаРебенкаИнвалида < ДатаНачала Тогда
			ТекстСообщения = НСтр("ru='Дата окончания выплаты пособия до трех лет на ребенка - инвалида не должна быть меньше даты начала отпуска.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект.ДатаОкончанияПособияДоТрехЛетНаРебенкаИнвалида",, Отказ);
		КонецЕсли;
	КонецЕсли;
	// }
	// 4D
		
КонецПроцедуры

Процедура ПроверитьПринадлежностьФизическогоЛицаОрганизации(Отказ)
	ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияРабочихМестВОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудниковОрганизаций.Организация 				= Организация;
	ПараметрыПолученияСотрудниковОрганизаций.НачалоПериода				= ДатаНачала;
	ПараметрыПолученияСотрудниковОрганизаций.ОкончаниеПериода			= ДатаНачала;
	ПараметрыПолученияСотрудниковОрганизаций.РаботникиПоДоговорамГПХ 	= Неопределено;
	
	СписокФизическихЛиц = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудник);
	
	КадровыйУчет.ПроверитьРаботающихФизическихЛиц(
	СписокФизическихЛиц,
	ПараметрыПолученияСотрудниковОрганизаций,
	Отказ,
	Новый Структура("ИмяПоляСотрудник, ИмяОбъекта", "Сотрудник", "Объект")
	);
КонецПроцедуры

Процедура УдалитьПроверенныеРеквизиты(ПроверяемыеРеквизиты)
	
	Если ПроверяемыеРеквизиты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Организация");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "Сотрудник");  	
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ПорядокВыплаты");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ПланируемаяДатаВыплаты");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаНачала");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаОкончания");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "КоличествоДетей");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаОкончанияПособияДоПолутораЛет");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаОкончанияПособияДоТрехЛет");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ПособиеДоПолутораЛет");
	ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ПособиеДоТрехЛет");
	
	Если Не ПрименятьЛьготыПриНачисленииПособия Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ФинансированиеФедеральнымБюджетом");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
