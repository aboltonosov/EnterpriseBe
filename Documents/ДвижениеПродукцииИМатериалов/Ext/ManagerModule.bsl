#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

#Область Заполнение

// Формирует структуру для создания документа по одному или нескольким распоряжениям
//  Если в переданных распоряжениях отличаются реквизиты шапки, выдается сообщение об ошибке
//
// Параметры:
//  МассивСсылок			- Массив - распоряжения, по которым необходимо ввести документ
//  ХозяйственнаяОперация	- ПеречислениеСсылка.ХозяйственныеОперации - операция документа, который нужно заполнить
//  ОтборСтрок				- Массив - содержит по каким отправителям или получателям нужно заполнить документ
// 
// Возвращаемое значение:
//  Булево - Ложь, если в переданных распоряжениях отличаются реквизиты шапки
//
Функция ДанныеЗаполненияНакладной(МассивСсылок, ХозяйственнаяОперация = Неопределено, ОтборСтрок = Неопределено) Экспорт
	
	ТекстыЗапроса = Новый СписокЗначений();
	
	Если ХозяйственнаяОперация = Неопределено Тогда
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую;
	КонецЕсли;
	
	ПоРаспоряжениям = ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства
						Или (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства
							И Не ТипЗнч(МассивСсылок[0]) = Тип("ДокументСсылка.ДвижениеПродукцииИМатериалов"))
						Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
						Или (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую
							И ТипЗнч(МассивСсылок[0]) = Тип("ДокументСсылка.ЗаказМатериаловВПроизводство"));
	
	Если ПоРаспоряжениям Тогда
		Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
			ТекстыЗапроса.Добавить(СозданиеНаОснованииПроверкаОтгрузить(), "ТаблицаЕстьОтгрузить");
		ИначеЕсли (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства
					Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой)
					И ТипЗнч(МассивСсылок[0]) = Тип("ДокументСсылка.ДвижениеПродукцииИМатериалов") Тогда
			ТекстыЗапроса.Добавить(СозданиеНаОснованииПроверкаНаличияМатериаловДоступныхКВозврату(), "ТаблицаЕстьВозврат");
		ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства Тогда
			ТекстыЗапроса.Добавить(СозданиеНаОснованииПроверкаНаличияНеизрасходованныхМатериалов(), "ТаблицаЕстьВозврат");
		ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства Тогда
			ТекстыЗапроса.Добавить(СозданиеНаОснованииПроверкаПроизведено(ОтборСтрок), "ТаблицаЕстьПроизведено");
		Иначе
			ВызватьИсключение СтрШаблон(НСтр("ru = 'Ошибка вызова ""ДвижениеПродукцииИМатериалов.ДанныеЗаполненияНакладной()"". Обратитесь к администратору.'"), ХозяйственнаяОперация);
		КонецЕсли;
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(СозданиеНаОснованииПроверкаРеквизитовШапки(ХозяйственнаяОперация, ОтборСтрок), "ТаблицаРеквизитыШапки");
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
		СначалаОрдера = (Константы.ПорядокОформленияНакладныхРасходныхОрдеров.Получить()
							= Перечисления.ПорядокОформленияНакладныхРасходныхОрдеров.СначалаОрдера);
	Иначе
		СначалаОрдера = Ложь;
	КонецЕсли;
	
	Если СначалаОрдера Тогда
		ТекстыЗапроса.Добавить(СозданиеНаОснованииПроверкаНаличияОрдеров(), "ТаблицаЕстьОрдера");
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивСсылок",          МассивСсылок);
	Запрос.УстановитьПараметр("НачалоТекущегоДня",     НачалоДня(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("ОтборСтрок",            ОтборСтрок);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", ХозяйственнаяОперация);
	
	Таблицы = ОбщегоНазначенияУТ.ВыгрузитьРезультатыЗапроса(Запрос, ТекстыЗапроса);
	
	РеквизитыШапки = Новый Структура("ХозяйственнаяОперация, РазличныхОпераций,
	                                 |Организация, РазличныхОрганизаций,
	                                 |Отправитель, РазличныхОтправителей,
	                                 |Получатель, РазличныхПолучателей,
	                                 |СтатусРаспоряжения, ЕстьОшибкиПроведен, ЕстьОшибкиСтатус,
									 |НалогообложениеНДС");
									 
	ЗаполнитьЗначенияСвойств(РеквизитыШапки, Таблицы.ТаблицаРеквизитыШапки[0]);

	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство Тогда
		РеквизитыШапки.Вставить("Подразделение", РеквизитыШапки.Получатель);
		РеквизитыШапки.Вставить("Склад", РеквизитыШапки.Отправитель);
	Иначе
		РеквизитыШапки.Вставить("Склад");
	КонецЕсли;
	
	Если ПоРаспоряжениям Тогда
		РеквизитыШапки.Вставить("ЕстьОрдера", Не СначалаОрдера Или Таблицы.ТаблицаЕстьОрдера.Количество() > 0);
		Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
			Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
			РеквизитыШапки.Вставить("ЕстьОтгрузить", Таблицы.ТаблицаЕстьОтгрузить.Количество() > 0);
			РеквизитыШапки.Вставить("ОтгрузкаИзКладовойВыполняетсяРаспоряжением", Ложь);
			РеквизитыШапки.Вставить("ОтгрузкаИзКладовойВыполняетсяРаспоряжением", ТипЗнч(МассивСсылок[0]) = Тип("ДокументСсылка.ЭтапПроизводства2_2"));
		ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства Тогда
			РеквизитыШапки.Вставить("ЕстьВозврат", Таблицы.ТаблицаЕстьВозврат.Количество() > 0);
		ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства Тогда
			РеквизитыШапки.Вставить("ЕстьПроизведено", Таблицы.ТаблицаЕстьПроизведено.Количество() > 0);
		КонецЕсли;
	КонецЕсли;
	
	МассивДопустимыхСтатусов = Новый Массив;
	
	Если ТипЗнч(МассивСсылок[0]) = Тип("ДокументСсылка.ЗаказМатериаловВПроизводство") Тогда
		
		МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовМатериаловВПроизводство.КВыполнению);
		МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЗаказовМатериаловВПроизводство.Закрыт);
	ИначеЕсли ТипЗнч(МассивСсылок[0]) = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
		
		МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.КВыполнению);
		МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.Начат);
		МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЭтаповПроизводства2_2.Завершен);
	КонецЕсли;
	
	РеквизитыШапки.Вставить("МассивДопустимыхСтатусов", МассивДопустимыхСтатусов);
	РеквизитыШапки.Вставить("ПоРаспоряжениям", ПоРаспоряжениям);
	
	Возврат РеквизитыШапки;
	
КонецФункции

// Проверяет возможность создания документа на основании распоряжений.
//
// Параметры:
//  РеквизитыШапки	 - Структура - реквизиты распоряжений.
// 
// Возвращаемое значение:
//  Структура - содержит поля "ЕстьОшибки" - Истина, если одно внутреннее потребление создать возможно, иначе - ложь,
//  "ТекстПредупреждения" - текст ошибки при наличии.
//
Функция ПроверитьДанныеЗаполненияНакладной(РеквизитыШапки) Экспорт
	
	ТекстыОшибок = Новый Массив();
	Если РеквизитыШапки.Свойство("ЕстьОтгрузить") И НЕ РеквизитыШапки.ЕстьОтгрузить Тогда
		
		Если РеквизитыШапки.ОтгрузкаИзКладовойВыполняетсяРаспоряжением Тогда
			Если ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов") Тогда

				ТекстОшибки = НСтр("ru='Нет товаров, доступных для отгрузки. Для начала процесса отгрузки необходимо указать действие ""Отгрузить"" или ""Отгрузить обособленно"" для одной или нескольких позиций номенклатуры заказа. При отгрузке из цеховой кладовой оформление накладной не требуется.'");

			Иначе

				ТекстОшибки = НСтр("ru='Нет товаров, доступных для отгрузки. Для начала процесса отгрузки необходимо указать действие ""Отгрузить"" для одной или нескольких позиций номенклатуры заказа. При отгрузке из цеховой кладовой оформление накладной не требуется.'");

			КонецЕсли;
		Иначе
			ТекстОшибки = ОбеспечениеСервер.ТекстОшибкиНетТоваровДоступныхДляОтгрузки();
		КонецЕсли;
		
		ТекстыОшибок.Добавить(ТекстОшибки);
		
	ИначеЕсли РеквизитыШапки.Свойство("ЕстьВозврат") И НЕ РеквизитыШапки.ЕстьВозврат Тогда
		
		ТекстОшибки = НСтр("ru='Нет материалов, которые требуется передать на склад.'");
		ТекстыОшибок.Добавить(ТекстОшибки);
		
	ИначеЕсли РеквизитыШапки.Свойство("ЕстьПроизведено") И НЕ РеквизитыШапки.ЕстьПроизведено Тогда
		
		ТекстОшибки = НСтр("ru='Нет произведенной продукции, которую требуется передать из подразделения.'");
		ТекстыОшибок.Добавить(ТекстОшибки);
		
	КонецЕсли;
	
	Если РеквизитыШапки.РазличныхОпераций = 1 Тогда
		
		Если РеквизитыШапки.РазличныхОрганизаций > 1 Тогда
			ТекстыОшибок.Добавить(НСтр("ru='У выбранных распоряжений различные организаци.'"));
		КонецЕсли;
		
		Если РеквизитыШапки.РазличныхОтправителей > 1 Тогда
			ТекстыОшибок.Добавить(НСтр("ru='У выбранных распоряжений различные отправители.'"));
		КонецЕсли;

		Если РеквизитыШапки.РазличныхПолучателей > 1 Тогда
			ТекстыОшибок.Добавить(НСтр("ru='У выбранных распоряжений различные получатели.'"));
		КонецЕсли;

		ТекстОшибки = НакладныеСервер.ПроверитьВозможностьВводаНаОсновании(
							Неопределено, 
							РеквизитыШапки.СтатусРаспоряжения, 
							РеквизитыШапки.ЕстьОшибкиПроведен, 
							РеквизитыШапки.ЕстьОшибкиСтатус, 
							РеквизитыШапки.МассивДопустимыхСтатусов);
			
		Если ТекстОшибки <> "" Тогда
			ТекстыОшибок.Добавить(ТекстОшибки);
		КонецЕсли;
		
	ИначеЕсли РеквизитыШапки.РазличныхОпераций > 1 Тогда
		
		ТекстыОшибок.Добавить(НСтр("ru = 'Выбранные распоряжения отражают различные операции движения материалов.'"));
		
	КонецЕсли;
	
	ЕстьПредупреждения = РеквизитыШапки.Свойство("ЕстьОрдера") И Не РеквизитыШапки.ЕстьОрдера;
	ТекстПредупреждения = НСтр("ru='Нет данных для заполнения документа, так как отгрузка по распоряжению еще не начата.'");
	
	Результат = Новый Структура;
	Результат.Вставить("ЕстьОшибки", ТекстыОшибок.Количество() > 0);
	Результат.Вставить("ТекстОшибки", ТекстыОшибок);
	Результат.Вставить("ЕстьПредупреждения", ЕстьПредупреждения);
	Результат.Вставить("ТекстПредупреждения", ТекстПредупреждения);
	
	Возврат Результат;
	
КонецФункции

// Возвращает структуру необходимую для дальнейшего использования при заполнении документа по заказу или ордерам
// 
// Возвращаемое значение:
//  Структура - параметры для заполнения документа по заказу или ордерам
//
Функция ПараметрыЗаполненияДокумента() Экспорт
	
	ПараметрыЗаполнения = Новый Структура();
	
	ПараметрыЗаполнения.Вставить("ФормаОткрыта",          Ложь);
	ПараметрыЗаполнения.Вставить("ЗаполнятьПоОрдеру",     Ложь);
	
	ПараметрыЗаполнения.Вставить("Склад",                 Справочники.Склады.ПустаяСсылка());
	ПараметрыЗаполнения.Вставить("РеквизитыШапки",        Неопределено);
	
	ПараметрыЗаполнения.Вставить("Менеджер",              Документы.ДвижениеПродукцииИМатериалов);
	ПараметрыЗаполнения.Вставить("ИмяРегистраЗаказ",      "ЗаказыМатериаловВПроизводство");
	ПараметрыЗаполнения.Вставить("МенеджерРегистраЗаказ", РегистрыНакопления.ЗаказыМатериаловВПроизводство);
	ПараметрыЗаполнения.Вставить("ИмяПоляЗаказ",          "Распоряжение");
	ПараметрыЗаполнения.Вставить("Дата",                  КонецДня(ТекущаяДата()));
	
	ПараметрыЗаполнения.Вставить("КлючевыеПоля",          "Номенклатура, Характеристика, Серия, Назначение");
	ПараметрыЗаполнения.Вставить("ДополнительныеПоляТаблицыДокумента", "Упаковка, КодСтроки,
		|СтатусУказанияСерий, Распоряжение, ГруппаПродукции");
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Используется при заполнении документа по заказу.
//
// Параметры:
//  Объект				 - ДанныеФормыСтруктура, ДокументОбъект.ДвижениеПродукцииИМатериалов - Документ в котором нужно заполнить реквизиты.
//  ПараметрыЗаполнения	 - Структура - Содержит параметры заполнения.
//  МассивЗаказов		 - Массив - Список заказов.
//
Процедура ЗаполнитьШапкуДокументаПоЗаказу(Объект, ПараметрыЗаполнения, МассивЗаказов) Экспорт
	
	ЗаполнитьЗначенияСвойств(Объект, ПараметрыЗаполнения.РеквизитыШапки);
	
	Объект.ПоРаспоряжениям = Истина;
	
	Объект.Дата = ?(МассивЗаказов.Количество() = 1,
		ЗаказыСервер.ПолучитьМинимальнуюДатуОтгрузкиЗаказа(МассивЗаказов, ПараметрыЗаполнения.ИмяРегистраЗаказ, 
			ПараметрыЗаполнения.ИмяПоляЗаказ),
		ЗаказыСервер.ПолучитьМаксимальнуюДатуОтгрузкиЗаказа(МассивЗаказов, ПараметрыЗаполнения.ИмяРегистраЗаказ, 
			ПараметрыЗаполнения.ИмяПоляЗаказ));
	
	// Заполнение серий.
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.ДвижениеПродукцииИМатериалов);
	НоменклатураСервер.ЗаполнитьСерииПоFEFO(Объект, ПараметрыУказанияСерий, Ложь);
	
	// Заполнение заказа(-ов) в шапке.
	ЗаказыСервер.ЗаполнитьЗаказВШапкеПоЗаказамВТабличнойЧасти(Объект.Распоряжение, Объект.Товары, ПараметрыЗаполнения.ИмяПоляЗаказ);
	
КонецПроцедуры

// Процедура пересчитывает поле КоличествоУпаковок и другие зависимые поля.
//
// Параметры:
//  Товары				 - ДанныеФормыКоллекция	 - Табличная часть "Товары".
//  ПараметрыЗаполнения	 - Структура			 - Содержит параметры заполнения.
//
Процедура ОбновитьЗависимыеРеквизитыТабличнойЧасти(Товары, ПараметрыЗаполнения) Экспорт
	
	СтруктураДействий = Новый Структура;
	Если ПараметрыЗаполнения.ФормаОткрыта Тогда
		СтруктураДействий.Вставить("ЗаполнитьПризнакАртикул", Новый Структура("Номенклатура", "Артикул"));
		СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
	КонецЕсли;
	СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	
	Для Каждого Строка Из Товары Цикл
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(Строка, СтруктураДействий, Неопределено);
	КонецЦикла;
	
КонецПроцедуры

// Производит заполнение переданного параметра Таблица по заказам (параметр Распоряжения), и складским ордерам
//
// Параметры:
//  Товары				 - ТаблицаЗначений - Таблица Товары для заполнения
//  Регистратор			 - ДокументСсылка.ДвижениеПродукцииИМатериалов - Ссылка на текущую накладную
//  Распоряжения		 - Массив - Ссылки на заказы по которым необходимо заполнить таблицу
//  ПараметрыЗаполнения	 - Структура - Параметры по умолчанию определены в методе ПараметрыЗаполненияДокумента()
//  ДопОтборы			 - Структура - Может содержать ключ Склад для установления дополнительных отборов
//
Процедура ЗаполнитьПоЗаказамОрдерам(Товары, Регистратор, Распоряжения, ПараметрыЗаполнения, ДопОтборы) Экспорт
	
	ТекстРазделителя = НакладныеСервер.ТекстРазделителяЗапросов();
	
	// Если не нужно заполнять по ордеру, передаем пустые параметры запроса - по ордерам вернется пустая таблица
	Если ПараметрыЗаполнения.ЗаполнятьПоОрдеру Тогда
		РаспоряженияДляОрдеров = Распоряжения;
		РегистраторДляОрдеров  = Регистратор;
	Иначе
		РаспоряженияДляОрдеров = Неопределено;
		РегистраторДляОрдеров  = Неопределено;
	КонецЕсли;
	
	ИспользоватьИсключаемыеТовары = Ложь;
	
	Если ДопОтборы.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой
		Или ДопОтборы.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой Тогда
		
		Запрос = Новый Запрос();
		Запрос.Текст = РегистрыНакопления.ТоварыКОформлениюПоступления.ТекстЗапросаОсталосьОформить();
		Запрос.УстановитьПараметр("Распоряжения", РаспоряженияДляОрдеров);
		Запрос.УстановитьПараметр("Регистратор",  РегистраторДляОрдеров);
		ТаблицаОрдера = Запрос.Выполнить().Выгрузить();
		ТаблицаОрдера.Колонки.Количество.Имя = "КоличествоВОрдере";
		
		// Распределение полученных таблиц
		Ключ = ПараметрыЗаполнения.КлючевыеПоля;
		
		Условие = "[Количество]";
		НакладныеСервер.РаспределитьКоличество(ТаблицаОрдера, Товары, "КоличествоВОрдере", Ключ, Условие, Истина);
		
		ТаблицаОрдера.Колонки.Добавить("НазначениеОтправителя");
		ТаблицаОрдера.ЗагрузитьКолонку(ТаблицаОрдера.ВыгрузитьКолонку("НазначениеОтправителя"), "НазначениеОтправителя");
		НакладныеСервер.ДополнитьТаблицу(ТаблицаОрдера, Товары, "КоличествоВОрдере");
		Возврат;
	
	ИначеЕсли ДопОтборы.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
		Или ДопОтборы.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
		
		Отбор = Новый Структура();
		Отбор.Вставить("Распоряжение", "Распоряжения");
		Отбор.Вставить("Склад",        "Склад");
		Отбор.Вставить("Получатель",   "Получатель");
		
		ТекстЗапросаРегистраЗаказы = РегистрыНакопления.ЗаказыМатериаловВПроизводство.ТекстЗапросаОстатки(
			"ВтДанныеУчета",
			Отбор,
			"КОформлению <> 0");
			
		Отбор = Новый Структура();
		Отбор.Вставить("Ссылка", "Распоряжения");
		
		ТекстЗапросаЗаказ = Документы.ЗаказМатериаловВПроизводство.ТекстЗапросаТоварыДокумента(Отбор)
			+ "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|"
			+ Документы.ЭтапПроизводства2_2.ТекстЗапросаТоварыДокумента(Отбор, ДопОтборы.ХозяйственнаяОперация);
		
		ТекстЗапроса = ТекстЗапросаРегистраЗаказы
						+ ТекстРазделителя
						+ ТекстЗапросаЗаказ;
		
	Иначе
		
		Отбор = Новый Структура();
		Отбор.Вставить("Распоряжение", "Распоряжения");
		Отбор.Вставить("Операция",     "Операция");
		Отбор.Вставить("Получатель",   "Получатель");
		
		ТекстЗапросаРегистраЗаказы = РегистрыНакопления.РаспоряженияНаПередачуИзПроизводства.ТекстЗапросаОстатки(
			"ВтДанныеУчета",
			Отбор,
			"Количество <> 0");
			
		Отбор = Новый Структура();
		Отбор.Вставить("Ссылка", "Распоряжения");
		
		ТекстЗапросаИсключаемыеТовары = "";
		Если ДопОтборы.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства Тогда
			ТекстЗапросаИсключаемыеТовары = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Таблица.Номенклатура КАК Номенклатура
			|ИЗ
			|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Таблица
			|ГДЕ
			|	Таблица.Ссылка В (&Распоряжения)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Таблица.Номенклатура КАК Номенклатура
			|ИЗ
			|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК Таблица
			|ГДЕ
			|	Таблица.Ссылка В (&Распоряжения)";
		ИначеЕсли ДопОтборы.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства Тогда
			ТекстЗапросаИсключаемыеТовары = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Таблица.Номенклатура КАК Номенклатура
			|ИЗ
			|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК Таблица
			|ГДЕ
			|	Таблица.Ссылка В (&Распоряжения)";
		КонецЕсли;
		
		ИспользоватьИсключаемыеТовары = Не ПустаяСтрока(ТекстЗапросаИсключаемыеТовары);
		
		ТекстЗапросаЗаказ = Документы.ЭтапПроизводства2_2.ТекстЗапросаТоварыДокумента(Отбор, ДопОтборы.ХозяйственнаяОперация);
		
		ТекстЗапроса = ТекстЗапросаРегистраЗаказы
						+ ТекстРазделителя
						+ ТекстЗапросаЗаказ
						+ ТекстРазделителя
						+ ТекстЗапросаИсключаемыеТовары;
		
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Распоряжения", Распоряжения);
	Запрос.УстановитьПараметр("Регистратор",  Регистратор);
	Запрос.УстановитьПараметр("Склад",        ДопОтборы.Склад);
	Запрос.УстановитьПараметр("Получатель",   ДопОтборы.Получатель);
	Запрос.УстановитьПараметр("Операция",     ДопОтборы.ХозяйственнаяОперация);
	
	ПакетТаблицаЗаказы = Запрос.ВыполнитьПакет();
	ТаблицаЗаказы = ПакетТаблицаЗаказы[1].Выгрузить();
	
	Если ИспользоватьИсключаемыеТовары Тогда
		ТаблицаИсключаемаяНоменклатура = ПакетТаблицаЗаказы[2].Выгрузить();
	КонецЕсли;
	
	ТаблицаЗаказы.Колонки.КОформлению.Имя = "КоличествоВЗаказе";
	
	// Ордера
	Запрос = Новый Запрос();
	
	Отбор = Новый Структура();
	Если ЗначениеЗаполнено(ДопОтборы.Склад) Тогда
		Отбор.Вставить("Склад", "Склад");
	КонецЕсли;
	
	Если ДопОтборы.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
			Или ДопОтборы.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
		ТекстЗапросаОсталосьОформить = РегистрыНакопления.ТоварыКОтгрузке.ТекстЗапросаОсталосьОформить(Отбор);
	Иначе
		ТекстЗапросаОсталосьОформить = РегистрыНакопления.ТоварыКОформлениюПоступления.ТекстЗапросаОсталосьОформить(Ложь, Отбор);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапросаОсталосьОформить;
	
	Запрос.УстановитьПараметр("Распоряжения", РаспоряженияДляОрдеров);
	Запрос.УстановитьПараметр("Регистратор",  РегистраторДляОрдеров);
	Если ЗначениеЗаполнено(ДопОтборы.Склад) Тогда
		Запрос.УстановитьПараметр("Склад", ДопОтборы.Склад);
	КонецЕсли;
	
	ТаблицаОрдера = Запрос.Выполнить().Выгрузить();
	
	ТаблицаОрдера.Колонки.Количество.Имя = "КоличествоВОрдере";
	Если ТаблицаОрдера.Колонки.Найти("Собирается") <> Неопределено Тогда
		ТаблицаОрдера.Колонки.Собирается.Имя = "КоличествоСобирается";
	КонецЕсли;
	
	Если ДопОтборы.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
			Или ДопОтборы.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
		ПараметрыЗаполнения.КлючевыеПоля = СтрЗаменить(ПараметрыЗаполнения.КлючевыеПоля, "Назначение", "НазначениеОтправителя");
		ТаблицаОрдера.Колонки.Назначение.Имя = "НазначениеОтправителя";
	КонецЕсли;
	
	// Распределение полученных таблиц
	
	Товары.Индексы.Добавить("Распоряжение, " + ПараметрыЗаполнения.КлючевыеПоля);
	
	// Добавление количества заказов
	Ключ = "Распоряжение, КодСтроки, Номенклатура, Характеристика, Серия";
	
	Условие = "ПО [Количество]";
	НакладныеСервер.РаспределитьКоличество(ТаблицаЗаказы, Товары, "КоличествоВЗаказе", Ключ, Условие, Истина);
	
	// Добавление отдельными строками нераспределенного количества заказов
	НакладныеСервер.ДополнитьТаблицу(ТаблицаЗаказы, Товары, "КоличествоВЗаказе");
	
	// Добавление количества ордеров.
	НакладнаяЯвляетсяРаспоряжением = ЗакупкиСервер.РаспоряжениеНаПриемкуТовараНакладная(Неопределено);
	КлючРаспоряжение = "Распоряжение, ";
	Если ДопОтборы.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
		И НакладнаяЯвляетсяРаспоряжением Тогда
		// При использовании накладной как распоряжения, в накладной и в регистре значения поля отличаются, соединить нельзя.
		КлючРаспоряжение = "";
	КонецЕсли;
		
	Ключ = КлючРаспоряжение + ПараметрыЗаполнения.КлючевыеПоля;
	
	// Есть накладные и заказы
	Условие = "[Количество], [КоличествоВЗаказе], ПО [КоличествоВЗаказе]";
	НакладныеСервер.РаспределитьКоличество(ТаблицаОрдера, Товары, "КоличествоВОрдере", Ключ, Условие, Истина);
	
	// Есть заказы, нет накладных
	Условие = "НЕ [Количество], [КоличествоВЗаказе], ПО [КоличествоВЗаказе]";
	НакладныеСервер.РаспределитьКоличество(ТаблицаОрдера, Товары, "КоличествоВОрдере", Ключ, Условие, Истина);
	
	// Есть накладные, нет заказов
	Условие = "[Количество], НЕ [КоличествоВЗаказе]";
	НакладныеСервер.РаспределитьКоличество(ТаблицаОрдера, Товары, "КоличествоВОрдере", Ключ, Условие, Истина);
	
	// Добавление отдельными строками нераспределенного количества ордеров
	// Кроме исключаемых позиций номенклатуры
	Если ИспользоватьИсключаемыеТовары Тогда
		Ключ = "Номенклатура";
		Условие = "";
		НакладныеСервер.РаспределитьКоличество(ТаблицаОрдера, ТаблицаИсключаемаяНоменклатура, "КоличествоВОрдере", Ключ, Условие, Истина);
	КонецЕсли;
	НакладныеСервер.ДополнитьТаблицу(ТаблицаОрдера, Товары, "КоличествоВОрдере");
	
	// Дополнительная информация - сколько товара собирается
	Если ТаблицаОрдера.Колонки.Найти("КоличествоСобирается") <> Неопределено Тогда
		НакладныеСервер.РаспределитьКоличество(ТаблицаОрдера, Товары, "КоличествоСобирается", Ключ, "", Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Серии

// Имена реквизитов, от значений которых зависят параметры указания серий.
// 
// Возвращаемое значение:
//  Строка - имена реквизитов, перечисленные через запятую.
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Статус,Отправитель,Получатель,Дата,ХозяйственнаяОперация,ПоРаспоряжениям";
	
	Возврат ИменаРеквизитов;
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе.
//
// Параметры:
//  Объект	 - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий.
// 
// Возвращаемое значение:
//  Структура - Состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ДвижениеПродукцииИМатериалов";
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства Тогда
		ПараметрыУказанияСерий.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	КонецЕсли;
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
		
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПередачаВПроизводствоОтгрузка);
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПередачаВПроизводствоПриемка);
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой Тогда
		
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПередачаИзПроизводства);
		Если Объект.Статус = Перечисления.СтатусыДвиженияПродукцииИМатериалов.Принято Тогда
			ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаИзПроизводства);
		КонецЕсли;
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой Тогда
		
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПередачаИзПроизводства);
		Если Объект.Статус = Перечисления.СтатусыДвиженияПродукцииИМатериалов.Принято Тогда
			ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаИзПроизводства);
		КонецЕсли;
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеВПроизводстве Тогда
		
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаПоПеремещениюВПроизводстве);
		Если Объект.Статус = Перечисления.СтатусыДвиженияПродукцииИМатериалов.Принято Тогда
			ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПоПеремещениюВПроизводстве);
		КонецЕсли;
		
	КонецЕсли; 
	
	ПараметрыСерийОтправитель = ?(ТипЗнч(Объект.Отправитель) = Тип("СправочникСсылка.Склады"),
									СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Отправитель, Ложь), 
									Неопределено);
									
	ПараметрыСерийПолучатель = ?(ТипЗнч(Объект.Получатель) = Тип("СправочникСсылка.Склады"),
									СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Получатель, Ложь), 
									Неопределено);
									
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = ПараметрыСерийОтправитель <> Неопределено
																И ПараметрыСерийОтправитель.ИспользоватьСерииНоменклатуры
															ИЛИ ПараметрыСерийПолучатель <> Неопределено
																И ПараметрыСерийПолучатель.ИспользоватьСерииНоменклатуры
																И Не СкладыСервер.ИспользоватьОрдернуюСхемуПриПоступлении(Объект.Получатель, Объект.Дата)
															ИЛИ ПараметрыСерийПолучатель <> Неопределено
																И ПараметрыСерийПолучатель.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийОтправитель <> Неопределено 
																И ПараметрыСерийОтправитель.УчитыватьСебестоимостьПоСериям
															ИЛИ ПараметрыСерийПолучатель <> Неопределено 
																И ПараметрыСерийПолучатель.УчитыватьСебестоимостьПоСериям;
														
	
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.ИмяПоляСклад = "Отправитель";
	ПараметрыУказанияСерий.ИмяПоляСкладОтправитель = "Отправитель";
	ПараметрыУказанияСерий.ИмяПоляСкладПолучатель  = "Получатель";
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("НазначениеОтправителя");
		
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерий.ПланированиеОтгрузки = Ложь;
	ПараметрыУказанияСерий.ПланированиеОтбора   = Ложь;
	ПараметрыУказанияСерий.ФактОтбора           = Истина;
	
	ПараметрыУказанияСерий.РегистрироватьСерии = НоменклатураКлиентСервер.НеобходимоРегистрироватьСерии(ПараметрыУказанияСерий);
	
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийОтправитель");
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийПолучатель");
	
	ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("Товары_Распоряжение");
	ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("Товары_КодСтроки");
		
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает значение распоряжения на поступление или отгрузку.
//
// Параметры:
//  ЗначенияПолейДляОпределенияРаспоряжения	 - Структура - состав полей определяется значением
//  поля ИменаПолейДляОпределенияРаспоряжения параметров указания серий этого документа
// 
// Возвращаемое значение:
//  ДокументСсылка.ЭтапПроизводства2_2, ДокументСсылка.ЗаказМатериаловВПроизводство, Неопределено - Ссылка на распоряжение.
//
Функция РаспоряжениеНаВыполнениеСкладскойОперации(ЗначенияПолейДляОпределенияРаспоряжения) Экспорт
	Возврат ЗначенияПолейДляОпределенияРаспоряжения.Товары_Распоряжение;	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.НазначениеОтправителя КАК НазначениеОтправителя,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.СтатусУказанияСерийОтправитель,
	|	Товары.СтатусУказанияСерийПолучатель,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.НазначениеОтправителя,
	|	Товары.Серия,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.НазначениеОтправителя,
	|	Товары.Серия,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.НазначениеОтправителя,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.НазначениеОтправителя,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.НазначениеОтправителя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА СкладОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И &Дата >= СкладОтправитель.ДатаНачалаОрдернойСхемыПриОтгрузке
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|								И ТоварыДляЗапроса.Количество > 0
	|							ИЛИ Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА ВЫБОР
	|								КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|									ТОГДА 6
	|								ИНАЧЕ 8
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|								ТОГДА 5
	|							ИНАЧЕ 7
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				И ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УказыватьПриОтгрузкеНаВнутренниеНужды
	|				И &ФактОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|								И ТоварыДляЗапроса.Количество > 0
	|							ИЛИ Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА ВЫБОР
	|								КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|									ТОГДА 4
	|								ИНАЧЕ 2
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|								ТОГДА 3
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыОтправитель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.НазначениеОтправителя = СерииДляЗапроса.НазначениеОтправителя
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийОтправитель
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СкладОтправитель
	|				ПО (СкладОтправитель.Ссылка = &СкладОтправитель)
	|					И (ПолитикиУчетаСерийОтправитель.Склад = &СкладОтправитель)
	|			ПО (ПолитикиУчетаСерийОтправитель.Склад = &СкладОтправитель)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерийОтправитель.Ссылка
	|				И (ТИПЗНАЧЕНИЯ(&СкладОтправитель) = ТИП(Справочник.Склады))
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.НазначениеОтправителя = ТоварыДляЗапроса.НазначениеОтправителя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА СкладПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении
	|				И &Дата >= СкладПолучатель.ДатаНачалаОрдернойСхемыПриПоступлении
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|								И ТоварыДляЗапроса.Количество > 0
	|							ИЛИ Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 8
	|					ИНАЧЕ 7
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий.УказыватьПриПриемке
	|				И ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий.УказыватьПриОтгрузкеНаВнутренниеНужды
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|								И ТоварыДляЗапроса.Количество > 0
	|							ИЛИ Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА ВЫБОР
	|								КОГДА ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|									ТОГДА 4
	|								ИНАЧЕ 2
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|								ТОГДА 3
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ СтатусыПолучатель
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.НазначениеОтправителя = СерииДляЗапроса.НазначениеОтправителя
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийПолучатель
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СкладПолучатель
	|				ПО (СкладПолучатель.Ссылка = &СкладПолучатель)
	|					И (ПолитикиУчетаСерийПолучатель.Склад = &СкладПолучатель)
	|			ПО (ПолитикиУчетаСерийПолучатель.Склад = &СкладПолучатель)
	|				И (ПолитикиУчетаСерийПолучатель.Ссылка = ТоварыДляЗапроса.ВидНоменклатуры)
	|				И (ТИПЗНАЧЕНИЯ(&СкладПолучатель) = ТИП(Справочник.Склады))
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.НазначениеОтправителя = ТоварыДляЗапроса.НазначениеОтправителя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	СтатусыОтправитель.СтатусУказанияСерий КАК СтатусУказанияСерийОтправитель,
	|	ВЫБОР
	|		КОГДА &ПриемкаПоПеремещениюВПроизводстве ИЛИ &ПриемкаИзПроизводства ИЛИ &ПередачаВПроизводствоПриемка
	|			ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерийПолучатель,
	|	ВЫБОР
	|		КОГДА СтатусыПолучатель.СтатусУказанияСерий В (13, 14)
	|				И СтатусыОтправитель.СтатусУказанияСерий <> 0
	|			ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|		КОГДА СтатусыОтправитель.СтатусУказанияСерий В (5, 6)
	|			ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|		КОГДА СтатусыОтправитель.СтатусУказанияСерий > ВЫБОР
	|				КОГДА &ПриемкаПоПеремещениюВПроизводстве ИЛИ &ПриемкаИзПроизводства ИЛИ &ПередачаВПроизводствоПриемка
	|					ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ПриемкаПоПеремещениюВПроизводстве ИЛИ &ПриемкаИзПроизводства ИЛИ &ПередачаВПроизводствоПриемка
	|					ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыОтправитель КАК СтатусыОтправитель
	|		ПО (СтатусыОтправитель.НомерСтроки = Товары.НомерСтроки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатусыПолучатель КАК СтатусыПолучатель
	|		ПО (СтатусыПолучатель.НомерСтроки = Товары.НомерСтроки)
	|ГДЕ
	|	(СтатусыОтправитель.СтатусУказанияСерий <> Товары.СтатусУказанияСерийОтправитель
	|			ИЛИ ВЫБОР
	|				КОГДА &ПриемкаПоПеремещениюВПроизводстве ИЛИ &ПриемкаИзПроизводства ИЛИ &ПередачаВПроизводствоПриемка
	|					ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|				ИНАЧЕ 0
	|			КОНЕЦ <> Товары.СтатусУказанияСерийПолучатель
	|			ИЛИ ВЫБОР
	|				КОГДА СтатусыПолучатель.СтатусУказанияСерий В (13, 14)
	|						И СтатусыОтправитель.СтатусУказанияСерий <> 0
	|					ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|				КОГДА СтатусыОтправитель.СтатусУказанияСерий В (5, 6)
	|					ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|				КОГДА СтатусыОтправитель.СтатусУказанияСерий > ВЫБОР
	|						КОГДА &ПриемкаПоПеремещениюВПроизводстве ИЛИ &ПриемкаИзПроизводства ИЛИ &ПередачаВПроизводствоПриемка
	|							ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|					ТОГДА СтатусыОтправитель.СтатусУказанияСерий
	|				ИНАЧЕ ВЫБОР
	|					КОГДА &ПриемкаПоПеремещениюВПроизводстве ИЛИ &ПриемкаИзПроизводства ИЛИ &ПередачаВПроизводствоПриемка
	|						ТОГДА СтатусыПолучатель.СтатусУказанияСерий
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|			КОНЕЦ <> Товары.СтатусУказанияСерий)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

// Процедура заполняет серии товаров по расходным ордерам, выписанным на основе этого документа.
//
// Параметры:
//  Объект	- ДокументОбъект, ДанныеФормыСтруктура - Заполняемый документ.
//
Процедура ЗаполнитьСерииПоОтгрузке(Объект) Экспорт
	
	ИспользоватьОрдернуюСхемуПриОтгрузке = СкладыСервер.ИспользоватьОрдернуюСхемуПриОтгрузке(Объект.Отправитель, Объект.Дата);
	
	ИспользуютсяСерииОтправитель = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура("Склад", Объект.Отправитель));
	
	Если Не ИспользоватьОрдернуюСхемуПриОтгрузке
		Или Не ИспользуютсяСерииОтправитель Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка
	|ПОМЕСТИТЬ РасходныеОрдера
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
	|ГДЕ
	|	&ПоРаспоряжениям
	|	И РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение В(&Распоряжения)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
	|ГДЕ
	|	НЕ &ПоРаспоряжениям
	|	И РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение = &Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧТовары.Ссылка КАК Ссылка,
	|	ТЧТовары.Серия КАК Серия,
	|	ТЧТовары.Количество КАК Количество,
	|	ТЧТовары.Номенклатура КАК Номенклатура,
	|	ТЧТовары.Характеристика КАК Характеристика,
	|	ТЧТовары.НазначениеОтправителя КАК НазначениеОтправителя
	|ПОМЕСТИТЬ ТЧТовары
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТЧТовары
	|ГДЕ
	|	ТЧТовары.Ссылка.Проведен
	|	И ТЧТовары.Распоряжение В(&Распоряжения)
	|	И ТЧТовары.Ссылка <> &Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиСерий.Серия,
	|	СУММА(ОстаткиСерий.Количество) КАК Количество,
	|	ОстаткиСерий.Номенклатура,
	|	ОстаткиСерий.Характеристика,
	|	ОстаткиСерий.НазначениеОтправителя КАК НазначениеОтправителя
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОтгружаемыеТовары.Серия КАК Серия,
	|		ОтгружаемыеТовары.Количество КАК Количество,
	|		ОтгружаемыеТовары.Номенклатура КАК Номенклатура,
	|		ОтгружаемыеТовары.Характеристика КАК Характеристика,
	|		ОтгружаемыеТовары.Назначение КАК НазначениеОтправителя
	|	ИЗ
	|		РасходныеОрдера КАК РасходныеОрдера
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ОтгружаемыеТовары
	|			ПО РасходныеОрдера.Ссылка = ОтгружаемыеТовары.Ссылка
	|	ГДЕ
	|		ОтгружаемыеТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
	|		И ОтгружаемыеТовары.Ссылка.Проведен
	|		И ОтгружаемыеТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить)
	|		И ОтгружаемыеТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТЧТовары.Серия,
	|		-ТЧТовары.Количество,
	|		ТЧТовары.Номенклатура,
	|		ТЧТовары.Характеристика,
	|		ТЧТовары.НазначениеОтправителя
	|	ИЗ
	|		Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТЧТовары
	|	ГДЕ
	|		ТЧТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТЧСерии.Серия,
	|		-ТЧСерии.Количество,
	|		ТЧСерии.Номенклатура,
	|		ТЧСерии.Характеристика,
	|		ТЧСерии.НазначениеОтправителя
	|	ИЗ
	|		Документ.ДвижениеПродукцииИМатериалов.Серии КАК ТЧСерии
	|	ГДЕ
	|		(ТЧСерии.Ссылка, ТЧСерии.Номенклатура, ТЧСерии.Характеристика, ТЧСерии.Назначение, ТЧСерии.НазначениеОтправителя) В
	|				(ВЫБРАТЬ
	|					ТЧТовары.Ссылка,
	|					ТЧТовары.Номенклатура,
	|					ТЧТовары.Характеристика,
	|					ТЧСерии.Назначение,
	|					ТЧТовары.НазначениеОтправителя
	|				ИЗ
	|					ТЧТовары)) КАК ОстаткиСерий
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиСерий.Серия,
	|	ОстаткиСерий.Характеристика,
	|	ОстаткиСерий.Номенклатура,
	|	ОстаткиСерий.НазначениеОтправителя
	|
	|ИМЕЮЩИЕ
	|	СУММА(ОстаткиСерий.Количество) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ПоляСвязи,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки1,
	|	ТаблицаТовары.Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Количество > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийПолучатель
	|		ПО (ПолитикиУчетаСерийПолучатель.Склад = &СкладПолучатель)
	|			И (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерийПолучатель.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийОтправитель
	|		ПО (ПолитикиУчетаСерийПолучатель.Склад = &СкладОтправитель)
	|			И (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерийПолучатель.Ссылка)
	|ГДЕ
	|	(ЕСТЬNULL(ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям, ЛОЖЬ)
	|			ИЛИ ЕСТЬNULL(ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям, ЛОЖЬ))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ПоляСвязи,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийПолучатель
	|		ПО (ПолитикиУчетаСерийПолучатель.Склад = &СкладПолучатель)
	|			И (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерийПолучатель.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийОтправитель
	|		ПО (ПолитикиУчетаСерийПолучатель.Склад = &СкладОтправитель)
	|			И (ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерийПолучатель.Ссылка)
	|ГДЕ
	|	(НЕ ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий ЕСТЬ NULL 
	|				И НЕ ПолитикиУчетаСерийПолучатель.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ИЛИ НЕ ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий ЕСТЬ NULL 
	|				И НЕ ПолитикиУчетаСерийОтправитель.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.ПоляСвязи,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";
	
	ПоляСвязи = "";
	ПоляСвязиВЗапрос = "";
	Запятая = "";
	Для Каждого Поле Из ПараметрыУказанияСерий(Объект).ПоляСвязи Цикл
		ПоляСвязи = Поле + Запятая + ПоляСвязи;
		ПоляСвязиВЗапрос = ПоляСвязиВЗапрос + "
			|	ТаблицаТовары." + Поле + ",";
		Запятая = ",";
	КонецЦикла;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТовары.ПоляСвязи,", ПоляСвязиВЗапрос);
	Запрос = Новый Запрос(ТекстЗапроса);
	
	МассивРаспоряжений = Новый Массив;
	Если Объект.ПоРаспоряжениям Тогда
		Для Каждого СтрокаТовары Из Объект.Товары Цикл
			МассивРаспоряжений.Добавить(СтрокаТовары.Распоряжение);
		КонецЦикла;
	КонецЕсли;
	Запрос.УстановитьПараметр("Распоряжения", МассивРаспоряжений);	

	Запрос.УстановитьПараметр("Распоряжение", Объект.Ссылка);
	Запрос.УстановитьПараметр("ТаблицаТовары", Объект.Товары.Выгрузить(,"НомерСтроки,Номенклатура,Характеристика,Количество," + ПоляСвязи));
	Запрос.УстановитьПараметр("СкладПолучатель", Объект.Получатель);
	Запрос.УстановитьПараметр("СкладОтправитель", Объект.Отправитель);
	Запрос.УстановитьПараметр("ПоРаспоряжениям", Объект.ПоРаспоряжениям);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаСерийОрдера = РезультатЗапроса[2].Выгрузить();
	
	СтруктураПоиска= Новый Структура("Номенклатура, Характеристика, НазначениеОтправителя");
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоУпаковок");
	
	ВыборкаНомеровСтрокССериямиВТЧТовары = РезультатЗапроса[4].Выбрать();
	Пока ВыборкаНомеровСтрокССериямиВТЧТовары.Следующий() Цикл
		СтрокаССериямиВТЧТовары = Объект.Товары[ВыборкаНомеровСтрокССериямиВТЧТовары.НомерСтроки - 1];
		//Заполнить колонку "Серия" в табличной части "Товары"
		ОстатокПоТовару = СтрокаССериямиВТЧТовары.Количество;
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаССериямиВТЧТовары);	
		МассивСтрокТабСерий = ТаблицаСерийОрдера.НайтиСтроки(СтруктураПоиска);
		ПерваяСтрока = Истина;
		Для Каждого Стр Из МассивСтрокТабСерий Цикл
			Если Не ПерваяСтрока Тогда
				НоваяСтрока = Объект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаССериямиВТЧТовары);
				СтрокаССериямиВТЧТовары = НоваяСтрока;
				ПерваяСтрока = Ложь;
			КонецЕсли;
		 	СтрокаССериямиВТЧТовары.Серия = Стр.Серия;
			КоличествоЗаполнения = Мин(ОстатокПоТовару,Стр.Количество);
			СтрокаССериямиВТЧТовары.Количество = КоличествоЗаполнения;
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаССериямиВТЧТовары, СтруктураДействий, Неопределено);
			Стр.Количество  = Стр.Количество  - КоличествоЗаполнения;
			ОстатокПоТовару = ОстатокПоТовару - КоличествоЗаполнения;
			Если Стр.Количество = 0 Тогда
				ТаблицаСерийОрдера.Удалить(Стр);
			КонецЕсли;
			Если ОстатокПоТовару = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Объект.Серии.Очистить();
	
	// Нужно обойти Товары, чтобы распределить серии по полям связи, которых в ордере нет (Назначение и ДокументРезерваСерий)
	ВыборкаТовары = РезультатЗапроса[5].Выбрать();
	Пока ВыборкаТовары.Следующий() Цикл
		ОстатокПоТовару = ВыборкаТовары.Количество;
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаТовары);
		МассивСтрокТабСерий = ТаблицаСерийОрдера.НайтиСтроки(СтруктураПоиска);
		Для Каждого СтрокаТабСерий Из МассивСтрокТабСерий Цикл
			НоваяСтрокаТЧСерии = Объект.Серии.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧСерии,ВыборкаТовары);
			НоваяСтрокаТЧСерии.Серия = СтрокаТабСерий.Серия;
			КоличествоЗаполнения = Мин(ОстатокПоТовару,СтрокаТабСерий.Количество);
			НоваяСтрокаТЧСерии.Количество = КоличествоЗаполнения;
			СтрокаТабСерий.Количество = СтрокаТабСерий.Количество - КоличествоЗаполнения;
			ОстатокПоТовару           = ОстатокПоТовару           - КоличествоЗаполнения;
			Если СтрокаТабСерий.Количество = 0 Тогда
				ТаблицаСерийОрдера.Удалить(СтрокаТабСерий);
			КонецЕсли;
			Если ОстатокПоТовару = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Заполняет серии в документе по этапам производства
//
// Параметры:
//  Объект	 - ДокументОбъект.ДвижениеПродукцииИМатериалов	 - документ в котором нужно заполнить серии
//
Процедура ЗаполнитьСерииПоЭтапамПроизводства(Объект) Экспорт

	Если Объект.Товары.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаСерии.Ссылка                КАК Распоряжение,
		|	ТаблицаСерии.Серия                 КАК Серия,
		|	ТаблицаСерии.Номенклатура          КАК Номенклатура,
		|	ТаблицаСерии.Характеристика        КАК Характеристика,
		|	ТаблицаСерии.Назначение            КАК Назначение,
		|	ТаблицаСерии.НазначениеОтправителя КАК НазначениеОтправителя,
		|	СУММА(ТаблицаСерии.Количество)     КАК Количество
		|ПОМЕСТИТЬ ВтСерииЭтапов
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаСерии.Ссылка            КАК Ссылка,
		|		ТаблицаСерии.Серия             КАК Серия,
		|		ТаблицаСерии.Номенклатура      КАК Номенклатура,
		|		ТаблицаСерии.Характеристика    КАК Характеристика,
		|		ТаблицаСерии.Назначение        КАК Назначение,
		|		ТаблицаСерии.Ссылка.Назначение КАК НазначениеОтправителя,
		|		ТаблицаСерии.Количество        КАК Количество
		|	ИЗ
		|		Документ.ЭтапПроизводства2_2.ВыходныеИзделияСерии КАК ТаблицаСерии
		|	ГДЕ
		|		ТаблицаСерии.Ссылка В (&СписокРаспоряжений)
		|		И ТаблицаСерии.Получатель = &Получатель
		|		И ТаблицаСерии.Произведено
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ТаблицаСерии.Ссылка            КАК Ссылка,
		|		ТаблицаСерии.Серия             КАК Серия,
		|		ТаблицаСерии.Номенклатура      КАК Номенклатура,
		|		ТаблицаСерии.Характеристика    КАК Характеристика,
		|		ТаблицаСерии.Назначение        КАК Назначение,
		|		ТаблицаСерии.Ссылка.Назначение КАК НазначениеОтправителя,
		|		ТаблицаСерии.Количество        КАК Количество
		|	ИЗ
		|		Документ.ЭтапПроизводства2_2.ПобочныеИзделияСерии КАК ТаблицаСерии
		|	ГДЕ
		|		ТаблицаСерии.Ссылка В (&СписокРаспоряжений)
		|		И ТаблицаСерии.Получатель = &Получатель
		|		И ТаблицаСерии.Произведено
		|
		|	) КАК ТаблицаСерии
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаСерии.Ссылка,
		|	ТаблицаСерии.Серия,
		|	ТаблицаСерии.Номенклатура,
		|	ТаблицаСерии.Характеристика,
		|	ТаблицаСерии.Назначение,
		|	ТаблицаСерии.НазначениеОтправителя
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, НазначениеОтправителя
		|
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСерии.Серия                 КАК Серия,
		|	ТаблицаСерии.Номенклатура          КАК Номенклатура,
		|	ТаблицаСерии.Характеристика        КАК Характеристика,
		|	ТаблицаСерии.Назначение            КАК Назначение,
		|	ТаблицаСерии.НазначениеОтправителя КАК НазначениеОтправителя,
		|	СУММА(ТаблицаСерии.Количество)     КАК Количество
		|ПОМЕСТИТЬ ВтСерииНакладных
		|ИЗ
		|	Документ.ДвижениеПродукцииИМатериалов.Серии КАК ТаблицаСерии
		|ГДЕ
		|	ТаблицаСерии.Ссылка <> &Ссылка
		|	И (ТаблицаСерии.Номенклатура, ТаблицаСерии.Характеристика, ТаблицаСерии.Назначение, ТаблицаСерии.НазначениеОтправителя)
		|		В (ВЫБРАТЬ
		|				ВтСерииЭтапов.Номенклатура,
		|				ВтСерииЭтапов.Характеристика,
		|				ВтСерииЭтапов.Назначение,
		|				ВтСерииЭтапов.НазначениеОтправителя
		|			ИЗ
		|				ВтСерииЭтапов КАК ВтСерииЭтапов
		|			)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаСерии.Серия,
		|	ТаблицаСерии.Номенклатура,
		|	ТаблицаСерии.Характеристика,
		|	ТаблицаСерии.Назначение,
		|	ТаблицаСерии.НазначениеОтправителя
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Серия, Номенклатура, Характеристика, Назначение, НазначениеОтправителя
		|
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСерии.Распоряжение          КАК Распоряжение,
		|	ТаблицаСерии.Серия                 КАК Серия,
		|	ТаблицаСерии.Номенклатура          КАК Номенклатура,
		|	ТаблицаСерии.Характеристика        КАК Характеристика,
		|	ТаблицаСерии.Назначение            КАК Назначение,
		|	(ТаблицаСерии.Количество - ЕСТЬNULL(СерииНакладных.Количество,0)) КАК Количество
		|ИЗ
		|	ВтСерииЭтапов КАК ТаблицаСерии
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСерииНакладных КАК СерииНакладных
		|		ПО СерииНакладных.Серия = ТаблицаСерии.Серия
		|			И СерииНакладных.Номенклатура = ТаблицаСерии.Номенклатура
		|			И СерииНакладных.Характеристика = ТаблицаСерии.Характеристика
		|			И СерииНакладных.Назначение = ТаблицаСерии.Назначение
		|			И СерииНакладных.НазначениеОтправителя = ТаблицаСерии.НазначениеОтправителя
		|ГДЕ
		|	(ТаблицаСерии.Количество - ЕСТЬNULL(СерииНакладных.Количество,0)) > 0";
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Ошибка вызова процедуры ДвижениеПродукцииИМатериалов.ЗаполнитьСерииПоЭтапамПроизводства(). Обратитесь к администратору'");
	КонецЕсли; 
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Если ТипЗнч(Объект.Товары) = Тип("ДанныеФормыКоллекция") Тогда
		СписокРаспоряжений = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(Объект.Товары.Выгрузить(, "Распоряжение").ВыгрузитьКолонку("Распоряжение"));
	Иначе	
		СписокРаспоряжений = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(Объект.Товары.ВыгрузитьКолонку("Распоряжение"));
	КонецЕсли; 
	Запрос.УстановитьПараметр("СписокРаспоряжений", СписокРаспоряжений);
	Запрос.УстановитьПараметр("Получатель", Объект.Получатель);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	СерииРаспоряжения = Запрос.Выполнить().Выгрузить();
	
	Если ТипЗнч(Объект.Товары) = Тип("ДанныеФормыКоллекция") Тогда
		Строки = Новый Массив;
		Строки.Добавить(Объект.Товары[0]);
		ТоварыНовая = Объект.Товары.Выгрузить(Строки);
		ТоварыНовая.Очистить();
	Иначе
		ТоварыНовая = Объект.Товары.ВыгрузитьКолонки();
	КонецЕсли; 
	
	Объект.Серии.Очистить();
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(Объект, Документы.ДвижениеПродукцииИМатериалов);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий);
	
	КэшированныеЗначения = Неопределено;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	
	СтруктураПоиска = Новый Структура("Номенклатура,Характеристика,Назначение,Распоряжение");
	Для каждого СтрокаТовар Из Объект.Товары Цикл
		
		СтрокаТоварНовая = ТоварыНовая.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТоварНовая, СтрокаТовар);
		
		ПерваяСтрока = Истина;
		
		КоличествоОстаток = СтрокаТовар.Количество;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТовар);
		СписокСтрок = СерииРаспоряжения.НайтиСтроки(СтруктураПоиска);
		
		Для каждого СтрокаСерия Из СписокСтрок Цикл
			
			Если СтрокаСерия.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			КоличествоСерии = Мин(СтрокаСерия.Количество, КоличествоОстаток);
			
			Если СтрокаТовар.СтатусУказанияСерий <> 0
				И НоменклатураКлиентСервер.ВЭтомСтатусеСерииУказываютсяВТЧТовары(СтрокаТовар.СтатусУказанияСерий, ПараметрыУказанияСерий) Тогда
				
				Если НЕ ПерваяСтрока Тогда
					СтрокаТоварНовая = ТоварыНовая.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТоварНовая, СтрокаТовар);
				КонецЕсли; 
				
				СтрокаТоварНовая.Серия = СтрокаСерия.Серия;
				СтрокаТоварНовая.Количество = КоличествоСерии;
				
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТоварНовая, СтруктураДействий, КэшированныеЗначения);
				
			Иначе
				
				НоваяСерия = Объект.Серии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСерия, СтрокаТовар);
				НоваяСерия.Серия = СтрокаСерия.Серия;
				НоваяСерия.Количество = КоличествоСерии;
				
			КонецЕсли; 
			
			КоличествоОстаток = КоличествоОстаток - КоличествоСерии;
			СтрокаСерия.Количество = СтрокаСерия.Количество - КоличествоСерии;
			
			ПерваяСтрока = Ложь;
			
			Если КоличествоОстаток = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Объект.Товары.Загрузить(ТоварыНовая);
	
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий);
	
КонецПроцедуры

#КонецОбласти

#Область Команды

// Заполняет список команд создания на основании.
//
// Параметры:
//  КомандыСоздатьНаОсновании	 - ТаблицаЗначений	 - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
// 
// Возвращаемое значение:
//  Массив - Список команд.
//
Функция ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	СписокКоманд = Новый Массив;
	
	Команда = ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	СписокКоманд.Добавить(Команда);

	Команда = Документы.РасходныйОрдерНаТовары.ДобавитьКомандуСоздатьНаОснованииРасходныйОрдерНаТовары(КомандыСоздатьНаОсновании);
	СписокКоманд.Добавить(Команда);

	Команда = Документы.УстановкаЦенНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	СписокКоманд.Добавить(Команда);
	
	Команда = Обработки.СправочноеРазмещениеНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	СписокКоманд.Добавить(Команда);
	
	Возврат СписокКоманд;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

#Область ПечатьВыпускаПродукции

	Если ПравоДоступа("Чтение", Метаданные.Документы.ДвижениеПродукцииИМатериалов) Тогда
		
		// Выпуск продукции
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "Накладная";
		КомандаПечати.Представление = НСтр("ru = 'Выпуск продукции'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

		// Накладная на передачу готовой продукции (МХ-18)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ18";
		КомандаПечати.Представление = НСтр("ru = 'Накладная на передачу готовой продукции (МХ-18)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-1 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ1";
		КомандаПечати.Представление = НСтр("ru='Акт о приеме-передаче ТМЦ на хранение (МХ-1)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

#КонецОбласти

#Область ПечатьПередачиМатериалов

	Если ПравоДоступа("Изменение", Метаданные.Документы.ДвижениеПродукцииИМатериалов) Тогда
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ПередачаМатериаловВПроизводство";
		КомандаПечати.Представление = НСтр("ru = 'Передача материалов в производство'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

	// Задание на отбор товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров";
	КомандаПечати.Идентификатор = "ЗаданиеНаОтборРазмещениеТовара";
	КомандаПечати.Представление = НСтр("ru = 'Задание на отбор товаров'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ИмяФормы", "ЗаданиеНаОтбор");
	
	// Требование-накладная (М-11)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьМ11";
	КомандаПечати.Идентификатор = "М11";
	КомандаПечати.Представление = НСтр("ru = 'Требование-накладная (М-11)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-3 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ3";
		КомандаПечати.Представление = НСтр("ru = 'Акт о возврате ТМЦ, сданных на хранение (МХ-3)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

#КонецОбласти

#Область ПечатьВозвратаМатериалов

	// Оприходование товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "НакладнаяНаВозврат";
	КомандаПечати.Представление = НСтр("ru = 'Возврат из производства'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	// Задание на размещение товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров";
	КомандаПечати.Идентификатор = "ЗаданиеНаОтборРазмещениеТовара";
	КомандаПечати.Представление = НСтр("ru = 'Задание на размещение товаров'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ИмяФормы", "ЗаданиеНаРазмещение");

#КонецОбласти

КонецПроцедуры

#КонецОбласти

#Область Прочее

// Возвращает таблицу используемых статусов документа учитывая зависимости от функциональных опций и иных параметров
// 
// Возвращаемое значение:
//  ТаблицаЗначений - см. ОбщегоНазначенияУТ.ТаблицаСтатусовИзменяемыхИзСписка()
//
Функция СтатусыДокументаИзменяемыеИзСписка() Экспорт
		
	Таблица = ОбщегоНазначенияУТ.ТаблицаСтатусовИзменяемыхИзСписка();
	
	ОбщегоНазначенияУТ.ДобавитьСтрокуВТаблицуСтатусовИзменяемыхИзСписка(Таблица, Перечисления.СтатусыДвиженияПродукцииИМатериалов.Отгружено);
	ОбщегоНазначенияУТ.ДобавитьСтрокуВТаблицуСтатусовИзменяемыхИзСписка(Таблица, Перечисления.СтатусыДвиженияПродукцииИМатериалов.Принято);
	
	Возврат Таблица;
	
КонецФункции

// Возвращает текст запроса для записи данных в регистр сведений ДанныеВнутреннихДокументов
//
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДанныеВнутреннихДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.Номер,
	|	ТаблицаДокумента.Дата,
	|	ТаблицаДокумента.Организация,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство)
	|			ИЛИ ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую)
	|		ТОГДА ТаблицаДокумента.Отправитель
	|		ИНАЧЕ ТаблицаДокумента.Получатель
	|	КОНЕЦ КАК Склад,
	|	ВЫБОР КОГДА ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство)
	|			ИЛИ ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую)
	|		ТОГДА ТаблицаДокумента.Получатель
	|		ИНАЧЕ ТаблицаДокумента.Отправитель
	|	КОНЕЦ КАК Подразделение,
	|	ТаблицаДокумента.Ответственный,
	|	ТаблицаДокумента.Комментарий,
	|	"""" КАК Дополнительно,
	|	ТаблицаДокумента.ХозяйственнаяОперация,
	|	ТаблицаДокумента.Статус,
	|	ТаблицаДокумента.Проведен,
	|	ТаблицаДокумента.ПометкаУдаления
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Заполняет таблицу реквизитов, зависимых от хозяйственной операции
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - хозяйственная операция
//	МассивВсехРеквизитов - Массив - реквизиты, которые не зависят от хозяйственной операции
//	МассивРеквизитовОперации - Массив - реквизиты, которые зависят от хозяйственной операции
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("НалогообложениеНДС");
	МассивВсехРеквизитов.Добавить("НаправлениеДеятельности");
	МассивВсехРеквизитов.Добавить("Товары.ГруппаПродукции");
	МассивВсехРеквизитов.Добавить("Товары.Цена");
	МассивВсехРеквизитов.Добавить("Товары.Сумма");
	
	МассивРеквизитовОперации = Новый Массив;
	МассивРеквизитовОперации.Добавить("Товары.ГруппаПродукции");
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой Тогда
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
		МассивРеквизитовОперации.Добавить("НалогообложениеНДС");
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

#КонецОбласти

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
// 
//  Возвращаемое значение:
//  Структура - структура параметров, см. Справочники.Назначения.МакетФормыВыбораНазначений().
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы);
	ШаблонНазначения.НаправлениеДеятельности  = "Объект.НаправлениеДеятельности";
	ШаблонНазначения.Давальческое2_1 = "ЛОЖЬ";
	
	// Остатки товаров на складе-отправителе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.Товары.Назначение", "Отправитель");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("ВНаличии").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.Отправитель ССЫЛКА Справочник.Склады";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.Товары.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.Товары.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.Отправитель";
	
	// Потребности в товарах на складе-получателе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.Товары.Назначение", "Получатель");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.Получатель ССЫЛКА Справочник.Склады";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.Товары.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.Товары.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.Получатель";
	
	// Потребности в товарах на складе-получателе.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказовВсеСклады", Истина, "Объект.Товары.Назначение", "ВсеСклады");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	ОписаниеКолонок.УсловиеИспользования = "Объект.Получатель ССЫЛКА Справочник.Склады";
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.Товары.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.Товары.Характеристика";
	
	Возврат МакетФормы;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Ссылка");
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ХозяйственнаяОперация");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Данные.ХозяйственнаяОперация) Тогда

		ПредставлениеОперации = СписокОпераций().НайтиПоЗначению(Данные.ХозяйственнаяОперация);
		Если ПредставлениеОперации <> Неопределено Тогда
			ПредставлениеОперации = ПредставлениеОперации.Представление;
		Иначе
			ПредставлениеОперации = Данные.ХозяйственнаяОперация;
		КонецЕсли;
		
		СтандартнаяОбработка = Ложь;
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1 %2 от %3'"),
			ПредставлениеОперации,
			Данные.Номер,
			Данные.Дата);
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаСписка" Тогда
		Если ПравоДоступа("Добавление", Метаданные.Документы.ДвижениеПродукцииИМатериалов) 
			И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ЗаказыМатериаловВПроизводство) 
			И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.РаспоряженияНаПередачуИзПроизводства) Тогда
			СтандартнаяОбработка = Ложь;
			ВыбраннаяФорма = "РабочееМесто";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция СписокОпераций() Экспорт

	СписокОпераций = Новый СписокЗначений;
	
	ПередачаПродукцииИзПроизводства = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства");
	ПередачаПродукцииИзКладовой     = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой");
	ПередачаМатериаловВПроизводство = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство");
	ПередачаМатериаловВКладовую     = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую");
	ПеремещениеВПроизводстве        = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПеремещениеВПроизводстве");
	ВозвратМатериаловИзПроизводства = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства");
	ВозвратМатериаловИзКладовой     = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой");
	
	СписокОпераций.Добавить(ПередачаПродукцииИзПроизводства, НСтр("ru = 'Передача продукции из производства'"));
	СписокОпераций.Добавить(ПередачаПродукцииИзКладовой,     НСтр("ru = 'Передача продукции из кладовой'"));
	
	СписокОпераций.Добавить(ПередачаМатериаловВПроизводство, НСтр("ru = 'Передача материалов в производство'"));
	СписокОпераций.Добавить(ПередачаМатериаловВКладовую,     НСтр("ru = 'Передача материалов в кладовую'"));
	
	СписокОпераций.Добавить(ПеремещениеВПроизводстве,        НСтр("ru = 'Перемещение материалов в производстве'"));
	
	СписокОпераций.Добавить(ВозвратМатериаловИзПроизводства, НСтр("ru = 'Возврат материалов из производства'"));
	СписокОпераций.Добавить(ВозвратМатериаловИзКладовой,     НСтр("ru = 'Возврат материалов из кладовой'"));

	Возврат СписокОпераций;

КонецФункции

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ДвижениеПродукцииИМатериалов";
	
	ТекстыЗапросаВременныхТаблиц = Новый Соответствие;
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("ОрдернаяСхемаОтправитель", 
		"	ВЫБОР
		|		КОГДА ТаблицаТовары.Ссылка.Отправитель ССЫЛКА Справочник.Склады
		|				И ВЫРАЗИТЬ(ТаблицаТовары.Ссылка.Отправитель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриОтгрузке
		|				И ТаблицаТовары.Ссылка.Дата >= ВЫРАЗИТЬ(ТаблицаТовары.Ссылка.Отправитель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриОтгрузке
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ");
	
	ПереопределениеРасчетаПараметров.Вставить("ОрдернаяСхемаПолучатель", 
		"	ВЫБОР
		|		КОГДА ТаблицаТовары.Ссылка.Получатель ССЫЛКА Справочник.Склады
		|				И ВЫРАЗИТЬ(ТаблицаТовары.Ссылка.Получатель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриПоступлении
		|				И ТаблицаТовары.Ссылка.Дата >= ВЫРАЗИТЬ(ТаблицаТовары.Ссылка.Получатель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриПоступлении
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ");
		
	ПереопределениеРасчетаПараметров.Вставить("СкладскаяОперация", 
		"	ВЫБОР
		|		КОГДА ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства)
		|			ИЛИ ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПродукцииИзПроизводства)
		|		КОГДА ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство)
		|			ИЛИ ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПередачаВПроизводствоОтгрузка)
		|		КОГДА ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеВПроизводстве)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаПоПеремещениюВПроизводстве)
		|		КОГДА ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства)
		|			ИЛИ ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПоПрочемуОприходованию)
		|	КОНЕЦ");
		
	ПереопределениеРасчетаПараметров.Вставить("ПоступлениеВКладовую", 
		"ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаТовары.Ссылка.Получатель КАК Справочник.Склады).ЦеховаяКладовая, ЛОЖЬ)");
		
	ПереопределениеРасчетаПараметров.Вставить("ПередачаИзКладовой", 
		"ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаТовары.Ссылка.Отправитель КАК Справочник.Склады).ЦеховаяКладовая, ЛОЖЬ)");
		
	Если ИмяРегистра = "ДвижениеТоваров" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДвижениеТоваров(Неопределено, ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "СвободныеОстатки" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаСвободныеОстатки(Неопределено, ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ТоварыНаСкладах" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыНаСкладах(Неопределено, ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтТаблицаСерииТоваровОтправитель", ТекстЗапросаВтТаблицаСерииТоваровОтправитель(ТекстыЗапроса));
		ТекстыЗапросаВременныхТаблиц.Вставить("ВтТаблицаСерииТоваровПолучатель", ТекстЗапросаВтТаблицаСерииТоваровПолучатель(ТекстыЗапроса));
		                                             
	ИначеЕсли ИмяРегистра = "ОбеспечениеЗаказов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаОбеспечениеЗаказов(Неопределено, ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ТоварыКОформлениюПоступления" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыКОформлениюПоступления(Неопределено, ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ТоварыКПоступлению" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыКПоступлению(Неопределено, ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "РаспоряженияНаПередачуИзПроизводства" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаРаспоряженияНаПередачуИзПроизводства(Неопределено, ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТабличнаяЧасть";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров.Вставить("НакладнаяЯвляетсяРаспоряжением", ЗакупкиСервер.РаспоряжениеНаПриемкуТовараНакладная(Неопределено));
	
	Результат.ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(ТекстЗапроса,
																								ПолноеИмяДокумента,
																								СинонимТаблицыДокумента,
																								ПереопределениеРасчетаПараметров,
																								ТекстыЗапросаВременныхТаблиц);

	Возврат Результат;
	
КонецФункции

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	// Создание запроса инициализации движений и заполенение его параметров.
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	// Формирование текста запроса.
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры);
	
	ТекстЗапросаТаблицаТоварыКОформлениюПоступления(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗаказыМатериаловВПроизводство(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРаспоряженияНаПередачуИзПроизводства(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	
	// Исполнение запроса и выгрузка полученных таблиц для движений.
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)

	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Дата                           КАК Период,
		|	Таблица.Организация                    КАК Организация,
		|	Таблица.Отправитель                    КАК Отправитель,
		|	Таблица.Получатель                     КАК Получатель,
		|	Таблица.Получатель.Представление       КАК ПолучательПредставление,
		|	Таблица.Отправитель.Представление      КАК ОтправительПредставление,
		|	Таблица.Ответственный                  КАК Ответственный,
		|	Таблица.Комментарий                    КАК Комментарий,
		|	Таблица.ПометкаУдаления                КАК ПометкаУдаления,
		|	Таблица.Проведен                       КАК Проведен,
		|	Таблица.Номер                          КАК Номер,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(Таблица.Получатель КАК Справочник.Склады).ЦеховаяКладовая, ЛОЖЬ)  КАК ПоступлениеВКладовую,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(Таблица.Отправитель КАК Справочник.Склады).ЦеховаяКладовая, ЛОЖЬ) КАК ПередачаИзКладовой,
		|	ВЫБОР
		|		КОГДА Таблица.Получатель ССЫЛКА Справочник.Склады
		|			ТОГДА ВЫРАЗИТЬ(Таблица.Получатель КАК Справочник.Склады).Подразделение
		|		ИНАЧЕ Таблица.Получатель
		|	КОНЕЦ                                  КАК ПодразделениеПолучателя,
		|	ВЫБОР
		|		КОГДА Таблица.Отправитель ССЫЛКА Справочник.Склады
		|			ТОГДА ВЫРАЗИТЬ(Таблица.Отправитель КАК Справочник.Склады).Подразделение
		|		ИНАЧЕ Таблица.Отправитель
		|	КОНЕЦ                                  КАК ПодразделениеОтправителя,
		|	ВЫБОР
		|		КОГДА Таблица.Отправитель ССЫЛКА Справочник.Склады
		|			ТОГДА ВЫРАЗИТЬ(Таблица.Отправитель КАК Справочник.Склады).Подразделение.ВариантОбособленногоУчетаТоваров
		|		ИНАЧЕ Таблица.Отправитель.ВариантОбособленногоУчетаТоваров
		|	КОНЕЦ                                  КАК ВариантОбособленногоУчетаТоваров,
		|	Таблица.Ссылка                         КАК Ссылка,
		|	Таблица.Статус                         КАК Статус,
		|	Таблица.ХозяйственнаяОперация          КАК ХозяйственнаяОперация,
		|	Таблица.Распоряжение                   КАК Распоряжение,
		|	Таблица.ПоРаспоряжениям                КАК ПоРаспоряжениям,
		|	Таблица.НалогообложениеНДС             КАК НалогообложениеНДС,
		|	ВЫБОР
		|		КОГДА Таблица.Отправитель ССЫЛКА Справочник.Склады
		|				И ВЫРАЗИТЬ(Таблица.Отправитель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриОтгрузке
		|				И Таблица.Дата >= ВЫРАЗИТЬ(Таблица.Отправитель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриОтгрузке
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                  КАК ОрдернаяСхемаОтправитель,
		|	ВЫБОР
		|		КОГДА Таблица.Получатель ССЫЛКА Справочник.Склады
		|				И ВЫРАЗИТЬ(Таблица.Получатель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриПоступлении
		|				И Таблица.Дата >= ВЫРАЗИТЬ(Таблица.Получатель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриПоступлении
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                  КАК ОрдернаяСхемаПолучатель,
		|	ВЫБОР
		|		КОГДА Таблица.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства)
		|			ИЛИ Таблица.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПродукцииИзПроизводства)
		|		КОГДА Таблица.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство)
		|			ИЛИ Таблица.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПередачаВПроизводствоОтгрузка)
		|		КОГДА Таблица.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеВПроизводстве)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаПоПеремещениюВПроизводстве)
		|		КОГДА Таблица.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства)
		|			ИЛИ Таблица.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПоПрочемуОприходованию)
		|	КОНЕЦ                                  КАК СкладскаяОперация
		|ИЗ
		|	Документ.ДвижениеПродукцииИМатериалов КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка";

	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	НакладнаяЯвляетсяРаспоряжением = ЗакупкиСервер.РаспоряжениеНаПриемкуТовараНакладная(Неопределено);
	
	Запрос.УстановитьПараметр("Валюта", Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("НакладнаяЯвляетсяРаспоряжением", НакладнаяЯвляетсяРаспоряжением);
	Запрос.УстановитьПараметр("ИспользуетсяНазначение", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	Запрос.УстановитьПараметр("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ДвижениеПродукцииИМатериалов"));
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)

	Если Запрос = Неопределено ИЛИ Запрос.Параметры.Свойство("КлючиАналитикиНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Номенклатура         КАК Номенклатура,
	|	Таблица.Характеристика       КАК Характеристика,
	|	Таблица.Назначение           КАК Назначение,
	|	Таблица.Серия                КАК Серия,
	|	Таблица.Склад                КАК Склад
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Получатель                   КАК Склад,
	|		Аналитика.Номенклатура        КАК Номенклатура,
	|		Аналитика.Характеристика      КАК Характеристика,
	|		ТаблицаВидыЗапасов.НазначениеПолучателя КАК Назначение,
	|		ТаблицаВидыЗапасов.Серия      КАК Серия
	|	ИЗ
	|		Документ.ДвижениеПродукцииИМатериалов.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|		ПО
	|			Аналитика.Номенклатура      = Ключи.Номенклатура
	|			И Аналитика.Характеристика  = Ключи.Характеристика
	|			И ТаблицаВидыЗапасов.Серия  = Ключи.Серия
	//++ НЕ УТ 
	|			И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Ключи.СтатьяКалькуляции
	//-- НЕ УТ
	|			И ТаблицаВидыЗапасов.НазначениеПолучателя  = Ключи.Назначение
	|			И &Получатель               = Ключи.Склад
	|	ГДЕ
	|		Ключи.Номенклатура ЕСТЬ NULL
	|		И ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&Получатель                   КАК Склад,
	|		Аналитика.Номенклатура        КАК Номенклатура,
	|		Аналитика.Характеристика      КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		ТаблицаВидыЗапасов.Серия      КАК Серия
	|	ИЗ
	|		Документ.ДвижениеПродукцииИМатериалов.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|		ПО
	|			Аналитика.Номенклатура      = Ключи.Номенклатура
	|			И Аналитика.Характеристика  = Ключи.Характеристика
	|			И ТаблицаВидыЗапасов.Серия  = Ключи.Серия
	//++ НЕ УТ 
	|			И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Ключи.СтатьяКалькуляции
	//-- НЕ УТ
	|			И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)  = Ключи.Назначение
	|			И &Получатель               = Ключи.Склад
	|
	|	ГДЕ
	|		Ключи.Номенклатура ЕСТЬ NULL
	|		И ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|		И Не &ИспользуетсяНазначение
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Аналитика.Склад               КАК Склад,
	|		Аналитика.Номенклатура        КАК Номенклатура,
	|		Аналитика.Характеристика      КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|		Аналитика.Серия               КАК Серия
	|	ИЗ
	|		Документ.ДвижениеПродукцииИМатериалов.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|		ПО
	|			Аналитика.Номенклатура      = Ключи.Номенклатура
	|			И Аналитика.Характеристика  = Ключи.Характеристика
	|			И Аналитика.Серия           = Ключи.Серия
	//++ НЕ УТ 
	|			И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Ключи.СтатьяКалькуляции
	//-- НЕ УТ
	|			И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)  = Ключи.Назначение
	|			И Аналитика.Склад          = Ключи.Склад
	|
	|	ГДЕ
	|		Ключи.Номенклатура ЕСТЬ NULL
	|		И ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|		И Не &ИспользуетсяНазначение
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаВидыЗапасов.ВидЗапасов.Комитент        КАК Склад,
	|		Аналитика.Номенклатура                        КАК Номенклатура,
	|		Аналитика.Характеристика                      КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)  КАК Назначение,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|	ИЗ
	|		Документ.ДвижениеПродукцииИМатериалов.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|		ПО
	|			Аналитика.Номенклатура      = Ключи.Номенклатура
	|			И Аналитика.Характеристика  = Ключи.Характеристика
	|			И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)  = Ключи.Серия
	//++ НЕ УТ 
	|			И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)  = Ключи.СтатьяКалькуляции
	//-- НЕ УТ
	|			И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)         = Ключи.Назначение
	|			И ТаблицаВидыЗапасов.ВидЗапасов.Комитент               = Ключи.Склад
	|	ГДЕ
	|		Ключи.Номенклатура ЕСТЬ NULL
	|		И ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|		И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	) КАК Таблица";
	
	ЗапросАналитики = Новый Запрос(ТекстЗапроса);
	ЗапросАналитики.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросАналитики.УстановитьПараметр("Получатель", Запрос.Параметры.Получатель);
	ЗапросАналитики.УстановитьПараметр("Отправитель", Запрос.Параметры.Отправитель);
	ЗапросАналитики.УстановитьПараметр("ИспользуетсяНазначение", Запрос.Параметры.ИспользуетсяНазначение);
	
	Выборка = ЗапросАналитики.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;

	Запрос.УстановитьПараметр("КлючиАналитикиНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "СвободныеОстатки";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Отправитель                           КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	
	|	ВЫБОР КОГДА ТаблицаТовары.НазначениеОтправителя <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				ТаблицаТовары.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                              КАК ВРезервеПодЗаказ
	|
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КодСтроки = 0
	|	И ТИПЗНАЧЕНИЯ(&Отправитель) = ТИП(Справочник.Склады)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Приход на неордерный склад
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Получатель                            КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|				ТаблицаТовары.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                              КАК ВРезервеПодЗаказ
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ОрдернаяСхемаПолучатель
	|	И ТИПЗНАЧЕНИЯ(&Получатель) = ТИП(Справочник.Склады)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДвиженияПродукцииИМатериалов.Принято)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На ордерном складе для старых назначений установка резерва под заказ 
	// (т.к. в приходном ордере нет старых назначений, приходный ордер этого сделать не мог)
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Получатель                            КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	0                                      КАК ВНаличии,
	|	ТаблицаТовары.Количество               КАК ВРезервеПодЗаказ
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ОрдернаяСхемаПолучатель
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|	И ТИПЗНАЧЕНИЯ(&Получатель) = ТИП(Справочник.Склады)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДвиженияПродукцииИМатериалов.Принято)";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвижениеТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	// На неордерном складе
	"ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Распоряжение              КАК Распоряжение,
	|	&Получатель                             КАК Склад,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.Характеристика            КАК Характеристика,
	|	ТаблицаТовары.Назначение                КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                   КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                   КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                   КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                   КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ПоРаспоряжениям
	|	И ТИПЗНАЧЕНИЯ(&Получатель) = ТИП(Справочник.Склады)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И НЕ &ОрдернаяСхемаПолучатель
	|
	// Для ордерного склада при поступлении и схемы оформления приходного ордера по накладным
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Распоряжение              КАК Распоряжение,
	|	&Получатель                             КАК Склад,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.Характеристика            КАК Характеристика,
	|	ТаблицаТовары.Назначение                КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                   КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                   КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                   КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                   КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ПоРаспоряжениям
	|	И &НакладнаяЯвляетсяРаспоряжением
	|	И ТИПЗНАЧЕНИЯ(&Получатель) = ТИП(Справочник.Склады)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ОрдернаяСхемаПолучатель
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	&Ссылка                                 КАК Распоряжение,
	|	&Получатель                             КАК Склад,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.Характеристика            КАК Характеристика,
	|	ТаблицаТовары.Назначение                КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                   КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                   КАК ПланируемоеПоступлениеПодЗаказ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                   КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                   КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ПоРаспоряжениям
	|	И &НакладнаяЯвляетсяРаспоряжением
	|	И ТИПЗНАЧЕНИЯ(&Получатель) = ТИП(Справочник.Склады)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ОрдернаяСхемаПолучатель
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На ордерном складе при поступлении по заказу по старым назначениям
	|ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Распоряжение              КАК Распоряжение,
	|	&Получатель                             КАК Склад,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.Характеристика            КАК Характеристика,
	|	ТаблицаТовары.Назначение                КАК Назначение,
	|	0                                       КАК ПланируемоеПоступление,
	|	-ТаблицаТовары.Количество               КАК ПланируемоеПоступлениеПодЗаказ,
	|	0                                       КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	-ТаблицаТовары.Количество               КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ПоРаспоряжениям
	|	И ТИПЗНАЧЕНИЯ(&Получатель) = ТИП(Справочник.Склады)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ОрдернаяСхемаПолучатель
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На ордерном складе сторно приходного ордера при поступлении по заказу по старым назначениям
	|ВЫБРАТЬ
	|	&Период                                 КАК Период,
	|	ТаблицаТовары.Распоряжение              КАК Распоряжение,
	|	&Получатель                             КАК Склад,
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.Характеристика            КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ТаблицаТовары.Количество                КАК ПланируемоеПоступление,
	|	0                                       КАК ПланируемоеПоступлениеПодЗаказ,
	|	ТаблицаТовары.Количество                КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	0                                       КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ПоРаспоряжениям
	|	И ТИПЗНАЧЕНИЯ(&Получатель) = ТИП(Справочник.Склады)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ОрдернаяСхемаПолучатель
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОтгрузке";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	// Отгрузка по распоряжению с неордерного склада (расход "К отгрузке", "К оформлению").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Отправитель                           КАК Склад,
	|	&Получатель                            КАК Получатель,
	|	ТаблицаТовары.Распоряжение             КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	ТаблицаТовары.Количество               КАК КОтгрузке,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(&Отправитель) = ТИП(Справочник.Склады)
	|	И НЕ &ОрдернаяСхемаОтправитель
	|	И &ПоРаспоряжениям
	|	И ТаблицаТовары.КодСтроки <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Оформление накладной по распоряжению с ордерного склада (расход "К оформлению").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Отправитель                           КАК Склад,
	|	&Получатель                            КАК Получатель,
	|	ТаблицаТовары.Распоряжение             КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	0                                      КАК КОтгрузке,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(&Отправитель) = ТИП(Справочник.Склады)
	|	И &ОрдернаяСхемаОтправитель
	|	И &ПоРаспоряжениям
	|	И ТаблицаТовары.КодСтроки <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Выдача распоряжения на отгрузку с ордерного склада (приход "К отгрузке").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Отправитель                           КАК Склад,
	|	&Получатель                            КАК Получатель,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	ТаблицаТовары.Количество               КАК КОтгрузке,
	|	0                                      КАК КОформлению
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(&Отправитель) = ТИП(Справочник.Склады)
	|	И &ОрдернаяСхемаОтправитель
	|	И НЕ &ПоРаспоряжениям
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Приход и расход по строкам сверхзаказа на любом складе (приход/расход по "К отгрузке", "КОформлению")
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Отправитель                           КАК Склад,
	|	&Получатель                            КАК Получатель,
	|	ТаблицаТовары.Распоряжение             КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	ТаблицаТовары.Количество               КАК КОтгрузке,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(&Отправитель) = ТИП(Справочник.Склады)
	|	И &ПоРаспоряжениям
	|	И ТаблицаТовары.КодСтроки = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Отправитель                           КАК Склад,
	|	&Получатель                            КАК Получатель,
	|	ТаблицаТовары.Распоряжение             КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	ВЫБОР 
	|		КОГДА &ОрдернаяСхемаОтправитель ТОГДА 
	|			0 
	|		ИНАЧЕ ТаблицаТовары.Количество 
	|	КОНЕЦ КАК КОтгрузке,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(&Отправитель) = ТИП(Справочник.Склады)
	|	И &ПоРаспоряжениям
	|	И ТаблицаТовары.КодСтроки = 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Приход и расход по накладным не по заказу на неордерном складе для доставки (приход/расход по "К отгрузке")
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Отправитель                           КАК Склад,
	|	&Получатель                            КАК Получатель,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	ТаблицаТовары.Количество               КАК КОтгрузке,
	|	0                                      КАК КОформлению
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(&Отправитель) = ТИП(Справочник.Склады)
	|	И НЕ &ПоРаспоряжениям
	|	И НЕ &ОрдернаяСхемаОтправитель
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Отправитель                           КАК Склад,
	|	&Получатель                            КАК Получатель,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.НазначениеОтправителя.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.НазначениеОтправителя
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ                              КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В(10, 14) ТОГДА
	|			ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ                              КАК Серия,
	|	ЛОЖЬ                                   КАК Сторно,
	|	ТаблицаТовары.Количество               КАК КОтгрузке,
	|	0                                      КАК КОформлению
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(&Отправитель) = ТИП(Справочник.Склады)
	|	И НЕ &ПоРаспоряжениям
	|	И НЕ &ОрдернаяСхемаОтправитель";


	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ТоварыНаСкладах";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаСерииТоваровОтправитель", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСерииТоваровОтправитель(ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаСерииТоваровПолучатель", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСерииТоваровПолучатель(ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	// Передача со склада в производство
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Отправитель                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                        КАК Назначение,
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК ВНаличии,
	|	0                                            КАК КОтгрузке,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (6, 8, 10, 14)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                        КАК КонтролироватьОстатки
	|ИЗ
	|	ВтТаблицаСерииТоваровОтправитель КАК ТаблицаТовары
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&Отправитель) = ТИП(Справочник.Склады)
	|	И НЕ &ОрдернаяСхемаОтправитель
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Передача на склад из производства
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Получатель                            КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|		  ТОГДА ТаблицаТовары.Назначение
	|		  ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	0                                      КАК КОтгрузке,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	ВтТаблицаСерииТоваровПолучатель КАК ТаблицаТовары
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(&Получатель) = ТИП(Справочник.Склады)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДвиженияПродукцииИМатериалов.Принято)
	|	И НЕ &ОрдернаяСхемаПолучатель";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                                                КАК Период,
	|	ТаблицаСерии.Номенклатура                              КАК Номенклатура,
	|	ТаблицаСерии.Характеристика                            КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ   	  				                           КАК Назначение,
	|	ТаблицаСерии.Серия                                     КАК Серия,
	|	ТаблицаСерии.Количество                                КАК Количество,
	|	&Отправитель                                           КАК Отправитель,
	|	&Получатель                                            КАК Получатель,
	|	&СкладскаяОперация                                     КАК СкладскаяОперация,
	|	&Ссылка                                                КАК Документ,
	|	НЕ &ОрдернаяСхемаОтправитель                           КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                                КАК Период,
	|	ТаблицаТовары.Номенклатура                             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                  КАК Назначение,
	|	ТаблицаТовары.Серия                                    КАК Серия,
	|	ТаблицаТовары.Количество                               КАК Количество,
	|	&Отправитель                                           КАК Отправитель,
	|	&Получатель                                            КАК Получатель,
	|	&СкладскаяОперация                                     КАК СкладскаяОперация,
	|	&Ссылка                                                КАК Документ,
	|	НЕ &ОрдернаяСхемаОтправитель                           КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	//ПередачаВПроизводство, ПеремещениеВПроизводстве, ВозвратИзПроизводства, ВыпускПродукцииНаСклад
	//расход со склада, цеха
	|ВЫБРАТЬ
	|	1                                              КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки                 КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)         КАК ВидДвижения,
	|	&Период                                        КАК Период,
	|	&Организация                                   КАК ОрганизацияОтгрузки,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация
	|	ИНАЧЕ
	|		&Организация
	|	КОНЕЦ                                          КАК Организация,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовВладельца
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	КОНЕЦ                                          КАК ВидЗапасов,
	|
	|	ТаблицаВидыЗапасов.Номенклатура                КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика              КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД                    КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                  КАК Количество,
	|	&ХозяйственнаяОперация                         КАК ХозяйственнаяОперация,
	|	&НалогообложениеНДС                            КАК НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
	
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ТаблицаВидыЗапасов.АналитикаКомитента
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыПолучателя
	|	КОНЕЦ                                          КАК КорАналитикаУчетаНоменклатуры,
	
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		&КорВидЗапасов
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	КОНЕЦ                                          КАК КорВидЗапасов,
	|	ЛОЖЬ                                           КАК Первичное
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	//приход на склад, в цех
	|ВЫБРАТЬ
	|	2                                              КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки                 КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	&Период                                        КАК Период,
	|	НЕОПРЕДЕЛЕНО                                   КАК ОрганизацияОтгрузки,
	|	&Организация                                   КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ИЛИ ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		&КорВидЗапасов
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	КОНЕЦ                                          КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура                КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика              КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД                    КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                  КАК Количество,
	|	&ХозяйственнаяОперация                         КАК ХозяйственнаяОперация,
	|	&НалогообложениеНДС                            КАК НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыПолучателя КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                   КАК КорВидЗапасов,
	|	ЛОЖЬ                                           КАК Первичное
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)             КАК ВидДвижения,
	|	&Период                                            КАК Период,
	|	&Отправитель                                       КАК Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация КАК ОрганизацияВладелец,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов                      КАК ВидЗапасовПродавца,
	|	ТаблицаВидыЗапасов.НомерГТД                        КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Номенклатура                    КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика                  КАК Характеристика,
	|	ТаблицаВидыЗапасов.Количество                      КАК Количество,
	|	&ХозяйственнаяОперация                             КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.НалогообложениеНДС              КАК НалогообложениеНДС
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И &ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки            КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	ТаблицаВидыЗапасов.ВидЗапасов             КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаКомитента     КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Валюта      КАК Валюта,
	|	ТаблицаВидыЗапасов.НомерГТД               КАК НомерГТД,
	|	0                                         КАК Количество,
	|	0                                         КАК СуммаВыручки,
	|	ТаблицаВидыЗапасов.Количество             КАК КоличествоСписано,
	|	ТаблицаВидыЗапасов.Номенклатура           КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика         КАК Характеристика,
	|	&ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
	|	&КорВидЗапасов                            КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыПолучателя КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НалогообложениеНДС
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И &ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	// расход с отправителя
	|ВЫБРАТЬ
	|	1                                                КАК Порядок,
	|	ВидыЗапасов.НомерСтроки                          КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)           КАК ВидДвижения,
	|	&Период                                          КАК Период,

	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ВидыЗапасов.АналитикаКомитента
	|		ИНАЧЕ 
	|			ВЫБОР КОГДА &ИспользуетсяНазначение
	|				ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатуры
	|				ИНАЧЕ ВидыЗапасов.АналитикаУчетаНоменклатурыБезНазначения
	|			КОНЕЦ
	|	КОНЕЦ                                            КАК АналитикаУчетаНоменклатуры,

	|	&Организация                                     КАК Организация,
	|	ВидыЗапасов.РазделУчета                          КАК РазделУчета,

	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			И &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА &КорВидЗапасов
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ВидЗапасов,
	
	|	ВидыЗапасов.Количество                           КАК Количество,

	|	&ХозяйственнаяОперация                           КАК ХозяйственнаяОперация,
	|	ВидыЗапасов.РазделУчетаПолучателя                КАК КорРазделУчета,

	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			И &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА &КорВидЗапасов
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов 
	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                           КАК КорВидЗапасов,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ ВидыЗапасов.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                            КАК КорАналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.АналитикаРасчетовСКомитентом         КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО                                     КАК Подразделение,
	|	ВЫБОР
	|		КОГДА НЕ ВидыЗапасов.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|				И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|											ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой),
	|											ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|											ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|			ТОГДА ВидыЗапасов.ГруппаПродукции
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            КАК ГруппаПродукции,
	|
	|	НЕОПРЕДЕЛЕНО                                     КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА НЕ ВидыЗапасов.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|				И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|											ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую),
	|											ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеВПроизводстве))
	|			ТОГДА ВидыЗапасов.ГруппаПродукции
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|			И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой))
	|			ТОГДА &ПодразделениеОтправителя
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                КАК КорАналитикаФинансовогоУчета,
	|	&НалогообложениеНДС                                  КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// приход на получателя
	|ВЫБРАТЬ
	|	2                                                 КАК Порядок,
	|	ВидыЗапасов.НомерСтроки                           КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ ВидыЗапасов.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                             КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                      КАК Организация,
	|	ВидыЗапасов.РазделУчетаПолучателя                 КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			И &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА &КорВидЗапасов
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов 
	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК ВидЗапасов,
	|	ВидыЗапасов.Количество                            КАК Количество,

	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.АналитикаРасчетовСКомитентом          КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО                                      КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                      КАК ГруппаПродукции,
	|
	|	&НалогообложениеНДС                                  КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА НЕ ВидыЗапасов.ГруппаПродукции = ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|			И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую),
	|										ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеВПроизводстве))
	|			ТОГДА ВидыЗапасов.ГруппаПродукции
	|		КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|			И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|			И &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой))
	|			ТОГДА &ПодразделениеОтправителя
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                         КАК КорАналитикаФинансовогоУчета,
	|	&НалогообложениеНДС                                  КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение) КАК ТипЗаписи
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// расход комиссионного товара по разделу учета ТоварыПринятыеНаКомиссию
	// используются при передаче в производство комиссионного товара
	|ВЫБРАТЬ
	|	3                                                 КАК Порядок,
	|	ВидыЗапасов.НомерСтроки                           КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ВидыЗапасов.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ                                             КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                      КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию) КАК РазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов

	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО

	|	КОНЕЦ                                             КАК ВидЗапасов,

	|	ВидыЗапасов.Количество                            КАК Количество,

	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорРазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|		ТОГДА &КорВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО


	|	КОНЕЦ                                             КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.АналитикаРасчетовСКомитентом          КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО                                      КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                      КАК ГруппаПродукции,
	|
	|	&НалогообложениеНДС                                  КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                                         КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                         КАК КорАналитикаФинансовогоУчета,
	|	&НалогообложениеНДС                                  КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ДвиженияНоменклатураНоменклатура";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                           КАК Период,
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	&Организация                                      КАК Организация,
	|	&ПодразделениеПолучателя                          КАК Подразделение,
	|	Строки.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА &ИспользуетсяНазначение ТОГДА
	|			Строки.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ Строки.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ                                             КАК АналитикаУчетаНоменклатуры,
	|	&Отправитель                                      КАК Склад,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|			ВЫБОР КОГДА Строки.РеализацияЗапасовДругойОрганизации ТОГДА
	|				Строки.ВидЗапасовВладельца.ТипЗапасов
	|			ИНАЧЕ
	|				Строки.ВидЗапасов.ТипЗапасов
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|			ВЫБОР КОГДА Строки.РеализацияЗапасовДругойОрганизации ТОГДА
	|				Строки.ВидЗапасовВладельца
	|			ИНАЧЕ
	|				Строки.ВидЗапасов
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК ВидЗапасов,
	|	Строки.АналитикаУчетаНоменклатурыПолучателя.Назначение.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА &ИспользуетсяНазначение ТОГДА
	|			Строки.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ
	|			Строки.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                             КАК КорАналитикаУчетаНоменклатуры,
	|	&Получатель                                       КАК КорСклад,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|			ВЫБОР
	|				КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|					ВЫРАЗИТЬ(&КорВидЗапасов КАК Справочник.ВидыЗапасов).ТипЗапасов
	|				ИНАЧЕ
	|					Строки.ТипЗапасов
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК КорТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|			ВЫБОР
	|				КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|					&КорВидЗапасов
	|				ИНАЧЕ Строки.ВидЗапасов
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК КорВидЗапасов,
	|	Строки.Количество                                 КАК Количество,
	|	Строки.Количество                                 КАК КорКоличество,
	|	0                                                 КАК Стоимость,
	|	0                                                 КАК СтоимостьБезНДС,
	|	0                                                 КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|			Строки.ВидЗапасов
	|		ИНАЧЕ
	|			Строки.Номенклатура
	|	КОНЕЦ                                             КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|			Строки.ВидЗапасов
	|		ИНАЧЕ
	|			Строки.Номенклатура
	|	КОНЕЦ                                             КАК КорИсточникГФУНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                      КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорОрганизация
	|ИЗ
	|	ВтВидыЗапасов КАК Строки
	|ГДЕ
	|	&ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))
	|	И Строки.ТипЗапасов В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                           КАК Период,
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	&Организация                                      КАК Организация,
	|	&ПодразделениеПолучателя                          КАК Подразделение,
	|	Строки.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	&Отправитель КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК ТипЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
	|	Строки.АналитикаУчетаНоменклатурыПолучателя.Назначение.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА &ИспользуетсяНазначение ТОГДА
	|			Строки.АналитикаУчетаНоменклатурыПолучателя
	|		ИНАЧЕ
	|			Строки.АналитикаУчетаНоменклатурыПолучателяБезНазначения
	|	КОНЕЦ                                             КАК КорАналитикаУчетаНоменклатуры,
	|	&Получатель                                       КАК КорСклад,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|			ВЫБОР
	|				КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|					ВЫРАЗИТЬ(&КорВидЗапасов КАК Справочник.ВидыЗапасов).ТипЗапасов
	|				ИНАЧЕ
	|					Строки.ТипЗапасов
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК КорТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|			ВЫБОР
	|				КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|					&КорВидЗапасов
	|				ИНАЧЕ Строки.ВидЗапасов
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК КорВидЗапасов,
	|	Строки.Количество                                 КАК Количество,
	|	Строки.Количество                                 КАК КорКоличество,
	|	0                                                 КАК Стоимость,
	|	0                                                 КАК СтоимостьБезНДС,
	|	0                                                 КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|			Строки.ВидЗапасов
	|		ИНАЧЕ
	|			Строки.Номенклатура
	|	КОНЕЦ                                             КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|			Строки.ВидЗапасов
	|		ИНАЧЕ
	|			Строки.Номенклатура
	|	КОНЕЦ                                             КАК КорИсточникГФУНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                      КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорОрганизация
	|ИЗ
	|	ВтВидыЗапасов КАК Строки
	|ГДЕ
	|	&ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|							ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой),
	|							ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеВПроизводстве),
	|							ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|							ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|	И Строки.ТипЗапасов В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|							ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаЗаказыМатериаловВПроизводство(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ЗаказыМатериаловВПроизводство";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"
	|ВЫБРАТЬ
	|	ТаблицаМатериалыИУслуги.НомерСтроки             КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	&Период                                         КАК Период,
	|	ТаблицаМатериалыИУслуги.Распоряжение            КАК Распоряжение,
	|	&ПодразделениеПолучателя                        КАК Подразделение,
	|	&Получатель                                     КАК Получатель,
	|	ТаблицаМатериалыИУслуги.Номенклатура            КАК Номенклатура,
	|	ТаблицаМатериалыИУслуги.Характеристика          КАК Характеристика,
	|	ВЫБОР 
	|		КОГДА ТаблицаМатериалыИУслуги.СтатусУказанияСерийОтправитель В (10, 14) 
	|			ТОГДА ТаблицаМатериалыИУслуги.Серия
	|	КОНЕЦ                                           КАК Серия,
	|	&Отправитель                                    КАК Склад,
	|	ТаблицаМатериалыИУслуги.Назначение              КАК Назначение,
	|	ТаблицаМатериалыИУслуги.НазначениеОтправителя   КАК НазначениеОтправителя,
	|	ТаблицаМатериалыИУслуги.КодСтроки               КАК КодСтроки,
	|	ТаблицаМатериалыИУслуги.Количество              КАК Заказано,
	|	ТаблицаМатериалыИУслуги.Количество              КАК КОформлению,
	|	0                                              КАК ОтгруженоНеПринято
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаМатериалыИУслуги
	|ГДЕ
	|	ТаблицаМатериалыИУслуги.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|								ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))
	|	И ТаблицаМатериалыИУслуги.КодСтроки <> 0
	|	И &ПоРаспоряжениям
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаМатериалыИУслуги.НомерСтроки             КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	&Период                                         КАК Период,
	|	ТаблицаМатериалыИУслуги.Распоряжение            КАК Распоряжение,
	|	&ПодразделениеПолучателя                        КАК Подразделение,
	|	&Получатель                                     КАК Получатель,
	|	ТаблицаМатериалыИУслуги.Номенклатура            КАК Номенклатура,
	|	ТаблицаМатериалыИУслуги.Характеристика          КАК Характеристика,
	|	ВЫБОР 
	|		КОГДА ТаблицаМатериалыИУслуги.СтатусУказанияСерийОтправитель В (10, 14) 
	|			ТОГДА ТаблицаМатериалыИУслуги.Серия
	|	КОНЕЦ                                           КАК Серия,
	|	&Отправитель                                    КАК Склад,
	|	ТаблицаМатериалыИУслуги.Назначение              КАК Назначение,
	|	ТаблицаМатериалыИУслуги.НазначениеОтправителя   КАК НазначениеОтправителя,
	|	ТаблицаМатериалыИУслуги.КодСтроки               КАК КодСтроки,
	|	0                                               КАК Заказано,
	|	0                                               КАК КОформлению,
	|	ТаблицаМатериалыИУслуги.Количество              КАК ОтгруженоНеПринято
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаМатериалыИУслуги
	|ГДЕ
	|	ТаблицаМатериалыИУслуги.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|								ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))
	|	И ТаблицаМатериалыИУслуги.КодСтроки <> 0
	|	И &ПоРаспоряжениям
	|	И &Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыДвиженияПродукцииИМатериалов.Принято)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ОбеспечениеЗаказов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	// Отгрузка обособленного товара не по заказу со склада.
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Отправитель                           КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.НазначениеОтправителя    КАК Назначение,
	|	ТаблицаТовары.Количество               КАК Потребность,
	|	0                                      КАК КЗаказу,
	|	ТаблицаТовары.Количество               КАК НаличиеПодЗаказ
	|
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(&Отправитель) = ТИП(Справочник.Склады)
	|	И ТаблицаТовары.КодСтроки = 0
	|	И ТаблицаТовары.НазначениеОтправителя <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Отгрузка обособленного товара не по заказу со склада, приход "К заказу".
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Отправитель                           КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.НазначениеОтправителя    КАК Назначение,
	|	ТаблицаТовары.Количество               КАК Потребность,
	|	ТаблицаТовары.Количество               КАК КЗаказу,
	|	0                                      КАК НаличиеПодЗаказ
	|
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(&Отправитель) = ТИП(Справочник.Склады)
	|	И ТаблицаТовары.КодСтроки = 0
	|	И ТаблицаТовары.НазначениеОтправителя <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Получатель                            КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	0                                      КАК Потребность,
	|	ВЫБОР КОГДА ТаблицаТовары.КодСтроки = 0 ТОГДА
	|			-ТаблицаТовары.Количество
	|		КОНЕЦ                              КАК КЗаказу,
	|	ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ИСТИНА) 
	|				ИЛИ НЕ &ОрдернаяСхемаПолучатель
	|			ТОГДА ТаблицаТовары.Количество
	|	КОНЕЦ                                  КАК НаличиеПодЗаказ
	|
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(&Получатель) = ТИП(Справочник.Склады)
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДвиженияПродукцииИМатериалов.Принято)
	|	И (ТаблицаТовары.КодСтроки = 0
	|			ИЛИ НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИЛИ НЕ &ОрдернаяСхемаПолучатель)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюПоступления(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюПоступления";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)   КАК ВидДвижения,
	|	&Период                                  КАК Период,
	|	&Получатель                              КАК Склад,
	|	&Отправитель                             КАК Отправитель,
	|	ВЫБОР
	|		КОГДА &ПоРаспоряжениям
	|			И НЕ &НакладнаяЯвляетсяРаспоряжением ТОГДА
	|			ТаблицаТовары.Распоряжение
	|		ИНАЧЕ
	|			&Ссылка
	|	КОНЕЦ                                    КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура               КАК Номенклатура,
	|	ТаблицаТовары.Характеристика             КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                    КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                    КАК Серия,
	|	ТаблицаТовары.Количество                 КАК КОформлению
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(&Получатель) = ТИП(Справочник.Склады)
	|	И &ОрдернаяСхемаПолучатель";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКПоступлению";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Ссылка                                КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	&Получатель                            КАК Склад,
	|	&Отправитель                           КАК Отправитель,
	|	ТаблицаТовары.Количество               КАК КПоступлению
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТИПЗНАЧЕНИЯ(&Получатель) = ТИП(Справочник.Склады)
	|	И &ОрдернаяСхемаПолучатель
	|	И (НЕ &ПоРаспоряжениям ИЛИ &НакладнаяЯвляетсяРаспоряжением)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРаспоряженияНаПередачуИзПроизводства(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РаспоряженияНаПередачуИзПроизводства";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Отправитель                                 КАК Отправитель,
	|	&Получатель                                  КАК Получатель,
	|	&ХозяйственнаяОперация                       КАК Операция,
	|	ТабличнаяЧасть.Распоряжение                  КАК Распоряжение,
	|	ТабличнаяЧасть.Номенклатура                  КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика                КАК Характеристика,
	|	ТабличнаяЧасть.Назначение                    КАК Назначение,
	|	ТабличнаяЧасть.НазначениеОтправителя         КАК НазначениеОтправителя,
	|	ТабличнаяЧасть.КодСтроки                     КАК КодСтроки,
	|	ТабличнаяЧасть.Количество                    КАК Количество
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства))";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыЗапросаИнформацияПоОтправителюИПолучателю(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                             КАК Ссылка,
	|	ДанныеДокумента.ДатаДокументаИБ                    КАК ДатаДокументаИБ,
	|	МАКСИМУМ(ДанныеДокумента.НомерДокументаИБ)         КАК НомерДокументаИБ,
	|	ДанныеДокумента.ТипСсылки                          КАК ТипСсылки,
	|	ДанныеДокумента.Организация                        КАК Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация              КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Партнер                            КАК Партнер,
	|	ДанныеДокумента.Контрагент                         КАК Контрагент,
	|	ДанныеДокумента.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|	ДанныеДокумента.МестоХранения                      КАК МестоХранения,
	|	ДанныеДокумента.Подразделение                      КАК Подразделение,
	|	МАКСИМУМ(ДанныеДокумента.Ответственный)            КАК Ответственный,
	|	МАКСИМУМ(ДанныеДокумента.Комментарий)              КАК Комментарий,
	|	МАКСИМУМ(ДанныеДокумента.Валюта)                   КАК Валюта,
	|	МАКСИМУМ(ДанныеДокумента.Сумма)                    КАК Сумма,
	|	МАКСИМУМ(ДанныеДокумента.Статус)                   КАК Статус,
	|	МАКСИМУМ(ДанныеДокумента.Проведен)                 КАК Проведен,
	|	МАКСИМУМ(ДанныеДокумента.ПометкаУдаления)          КАК ПометкаУдаления,
	|	МИНИМУМ(ДанныеДокумента.ДополнительнаяЗапись)      КАК ДополнительнаяЗапись,
	|	МАКСИМУМ(ДанныеДокумента.Дополнительно)            КАК Дополнительно,
	|	МАКСИМУМ(ДанныеДокумента.ДатаПервичногоДокумента)  КАК ДатаПервичногоДокумента,
	|	МАКСИМУМ(ДанныеДокумента.НомерПервичногоДокумента) КАК НомерПервичногоДокумента
	|ИЗ
	|	(ВЫБРАТЬ
	|		&Ссылка                  КАК Ссылка,
	|		&Период                  КАК ДатаДокументаИБ,
	|		&Номер                   КАК НомерДокументаИБ,
	|		&ИдентификаторМетаданных КАК ТипСсылки,
	|		&Организация             КАК Организация,
	|		&ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|		НЕОПРЕДЕЛЕНО             КАК Партнер,
	|		НЕОПРЕДЕЛЕНО             КАК Контрагент,
	|		ВЫБОР
	|			КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыДокумента.НазначениеОтправителя.НаправлениеДеятельности) = 1
	|				ТОГДА МАКСИМУМ(ТоварыДокумента.НазначениеОтправителя.НаправлениеДеятельности)
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ                    КАК НаправлениеДеятельности,
	|		&Отправитель             КАК МестоХранения,
	|		ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(&Отправитель) = ТИП(Справочник.СтруктураПредприятия)
	|				ТОГДА &Отправитель
	|			КОГДА ТИПЗНАЧЕНИЯ(&Получатель) = ТИП(Справочник.СтруктураПредприятия)
	|				ТОГДА &Получатель
	|			КОГДА &ПоступлениеВКладовую
	|				ТОГДА &ПодразделениеПолучателя
	|			КОГДА &ПередачаИзКладовой
	|				ТОГДА &ПодразделениеОтправителя
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		КОНЕЦ                    КАК Подразделение,
	|		&Ответственный           КАК Ответственный,
	|		ВЫРАЗИТЬ(&Комментарий КАК СТРОКА(100)) КАК Комментарий,
	|		НЕОПРЕДЕЛЕНО             КАК Валюта,
	|		0                        КАК Сумма,
	|		&Статус                  КАК Статус,
	|		&Проведен                КАК Проведен,
	|		&ПометкаУдаления         КАК ПометкаУдаления,
	|		ЛОЖЬ                     КАК ДополнительнаяЗапись,
	|		&ИнформацияПоПолучателю  КАК Дополнительно,
	|		&Период                  КАК ДатаПервичногоДокумента,
	|		&НомерНаПечать           КАК НомерПервичногоДокумента
	|	ИЗ
	|		Документ.ДвижениеПродукцииИМатериалов КАК ДанныеДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТоварыДокумента
	|			ПО ДанныеДокумента.Ссылка = ТоварыДокумента.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&Ссылка                  КАК Ссылка,
	|		&Период                  КАК ДатаДокументаИБ,
	|		&Номер                   КАК НомерДокументаИБ,
	|		&ИдентификаторМетаданных КАК ТипСсылки,
	|		&Организация             КАК Организация,
	|		&ХозяйственнаяОперация   КАК ХозяйственнаяОперация,
	|		НЕОПРЕДЕЛЕНО             КАК Партнер,
	|		НЕОПРЕДЕЛЕНО             КАК Контрагент,
	|		ВЫБОР
	|			КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыДокумента.Назначение.НаправлениеДеятельности) = 1
	|				ТОГДА МАКСИМУМ(ТоварыДокумента.Назначение.НаправлениеДеятельности)
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ                    КАК НаправлениеДеятельности,
	|		&Получатель              КАК МестоХранения,
	|		ВЫБОР 
	|			КОГДА ТИПЗНАЧЕНИЯ(&Отправитель) = ТИП(Справочник.СтруктураПредприятия)
	|				ТОГДА &Отправитель
	|			КОГДА ТИПЗНАЧЕНИЯ(&Получатель) = ТИП(Справочник.СтруктураПредприятия)
	|				ТОГДА &Получатель
	|			КОГДА &ПоступлениеВКладовую
	|				ТОГДА &ПодразделениеПолучателя
	|			КОГДА &ПередачаИзКладовой
	|				ТОГДА &ПодразделениеОтправителя
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		КОНЕЦ                    КАК Подразделение,
	|		&Ответственный           КАК Ответственный,
	|		ВЫРАЗИТЬ(&Комментарий КАК СТРОКА(100)) КАК Комментарий,
	|		НЕОПРЕДЕЛЕНО             КАК Валюта,
	|		0                        КАК Сумма,
	|		&Статус                  КАК Статус,
	|		&Проведен                КАК Проведен,
	|		&ПометкаУдаления         КАК ПометкаУдаления,
	|		ИСТИНА                   КАК ДополнительнаяЗапись,
	|		&ИнформацияПоОтправителю КАК Дополнительно,
	|		&Период                  КАК ДатаПервичногоДокумента,
	|		&НомерНаПечать           КАК НомерПервичногоДокумента
	|	ИЗ
	|		Документ.ДвижениеПродукцииИМатериалов КАК ДанныеДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТоварыДокумента
	|			ПО ДанныеДокумента.Ссылка = ТоварыДокумента.Ссылка
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка) КАК ДанныеДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.ДатаДокументаИБ,
	|	ДанныеДокумента.ТипСсылки,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|	ДанныеДокумента.Партнер,
	|	ДанныеДокумента.Контрагент,
	|	ДанныеДокумента.НаправлениеДеятельности,
	|	ДанныеДокумента.МестоХранения,
	|	ДанныеДокумента.Подразделение";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаСерииТоваровОтправитель(ТекстыЗапроса)

	ИмяРегистра = "ВтТаблицаСерииТоваровОтправитель";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                         КАК Ссылка,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	ТаблицаТовары.НазначениеОтправителя          КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерийОтправитель В (4, 6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                        КАК Серия,
	|	ТаблицаТовары.Количество                     КАК Количество,
	|	ТаблицаТовары.СтатусУказанияСерийОтправитель КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ВтТаблицаСерииТоваровОтправитель
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (ТаблицаТовары.СтатусУказанияСерийОтправитель В (0, 2, 10, 14)
	|			ИЛИ ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                          КАК Ссылка,
	|	ТаблицаСерии.Номенклатура                     КАК Номенклатура,
	|	ТаблицаСерии.Характеристика                   КАК Характеристика,
	|	ТаблицаТовары.НазначениеОтправителя           КАК Назначение,
	|	ТаблицаСерии.Серия                            КАК Серия,
	|	ТаблицаСерии.Количество                       КАК Количество,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийОтправитель) СтатусУказанияСерий
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Серии КАК ТаблицаСерии
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|			И ТаблицаСерии.НазначениеОтправителя = ТаблицаТовары.НазначениеОтправителя
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаСерии.НомерСтроки,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаТовары.НазначениеОтправителя,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийОтправитель) В (4, 6, 8)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтТаблицаСерииТоваровПолучатель(ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаСерииТоваровПолучатель";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                        КАК Ссылка,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.Назначение                    КАК Назначение,
	|	ТаблицаТовары.Количество                    КАК Количество,
	|	ТаблицаТовары.СтатусУказанияСерийПолучатель КАК СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерийПолучатель В (4, 6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                       КАК Серия
	|ПОМЕСТИТЬ ВтТаблицаСерииТоваровПолучатель
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество <> 0
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерийПолучатель В (4, 6, 8, 10)
	|			ИЛИ ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Количество,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийПолучатель),
	|	ТаблицаСерии.Серия
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Серии КАК ТаблицаСерии
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|			И ТаблицаСерии.НазначениеОтправителя = ТаблицаТовары.НазначениеОтправителя
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаСерии.НомерСтроки,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерийПолучатель) В (4, 6, 8, 10)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасов";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	УстановитьПараметрЗапросаКорВидЗапасов(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                КАК НомерСтроки,
	|	СпрВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	СпрВидыЗапасов.ВидЗапасовВладельца            КАК ВидЗапасовВладельца,
	|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	АналитикаБезНазначения.КлючАналитики          КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	Аналитика.Номенклатура                        КАК Номенклатура,
	|	Аналитика.Характеристика                      КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД                   КАК НомерГТД,
	|	ТаблицаВидыЗапасов.ГруппаПродукции            КАК ГруппаПродукции,
	|	ТаблицаВидыЗапасов.Количество                 КАК Количество,
	|	&ХозяйственнаяОперация                        КАК ХозяйственнаяОперация,
	|	&НалогообложениеНДС                           КАК НалогообложениеНДС,
	|	КлючиКомитента.КлючАналитики                  КАК АналитикаКомитента,
	|	ВЫБОР КОГДА СпрВидыЗапасов.Комитент ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетов.КлючАналитики
	|	КОНЕЦ                                         КАК АналитикаРасчетовСКомитентом,
	|	КлючиКомитента.Склад                          КАК Комитент,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов      КАК ТипЗапасов,
	|	КлючиПолучателя.КлючАналитики                 КАК АналитикаУчетаНоменклатурыПолучателя,
	|	КлючиПолучателяБезНазначения.КлючАналитики    КАК АналитикаУчетаНоменклатурыПолучателяБезНазначения,
	|	ВЫБОР
	// давальческие материалы и полуфабрикаты всегда на отдельном разделе учета
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	// если передаем со склада
	|		КОГДА НЕ Аналитика.Склад.ЦеховаяКладовая ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	// если передаем из подразделения
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ                                         КАК РазделУчета,
	|	ВЫБОР
	// давальческие материалы и полуфабрикаты всегда на отдельном разделе учета
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	// если передаем на склад
	|		КОГДА НЕ КлючиПолучателя.Склад.ЦеховаяКладовая ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	// если передаем в подразделение
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	КОНЕЦ                                         КАК РазделУчетаПолучателя
	|
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаБезНазначения.СтатьяКалькуляции
	//-- НЕ УТ
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаБезНазначения.Назначение
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.Склад = АналитикаБезНазначения.Склад
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиКомитента
	|	ПО
	|		Аналитика.Номенклатура = КлючиКомитента.Номенклатура
	|		И Аналитика.Характеристика = КлючиКомитента.Характеристика
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиКомитента.СтатьяКалькуляции
	//-- НЕ УТ
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = КлючиКомитента.Назначение
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = КлючиКомитента.Серия
	|		И ТаблицаВидыЗапасов.ВидЗапасов.Комитент = КлючиКомитента.Склад
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПолучателя
	|	ПО
	|		Аналитика.Номенклатура = КлючиПолучателя.Номенклатура
	|		И Аналитика.Характеристика = КлючиПолучателя.Характеристика
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиПолучателя.СтатьяКалькуляции
	//-- НЕ УТ
	|		И ТаблицаВидыЗапасов.НазначениеПолучателя = КлючиПолучателя.Назначение
	|		И ТаблицаВидыЗапасов.Серия = КлючиПолучателя.Серия
	|		И &Получатель = КлючиПолучателя.Склад
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПолучателяБезНазначения
	|	ПО
	|		Аналитика.Номенклатура = КлючиПолучателяБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = КлючиПолучателяБезНазначения.Характеристика
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиПолучателяБезНазначения.СтатьяКалькуляции
	//-- НЕ УТ
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = КлючиПолучателяБезНазначения.Назначение
	|		И ТаблицаВидыЗапасов.Серия = КлючиПолучателяБезНазначения.Серия
	|		И &Получатель = КлючиПолучателяБезНазначения.Склад
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
	|		ПО АналитикаРасчетов.Организация = &Организация
	|		И АналитикаРасчетов.Партнер = СпрВидыЗапасов.Комитент
	|		И АналитикаРасчетов.Контрагент = СпрВидыЗапасов.Контрагент
	|		И АналитикаРасчетов.Договор = СпрВидыЗапасов.Договор
	|		И АналитикаРасчетов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
	|		ПО АналитикаРасчетовИнтеркампани.Организация = &Организация
	|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаРасчетовИнтеркампани.Контрагент = СпрВидыЗапасов.Контрагент
	|		И АналитикаРасчетовИнтеркампани.Договор = СпрВидыЗапасов.Договор
	|		И АналитикаРасчетовИнтеркампани.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрыЗапросаИнформацияПоОтправителюИПолучателю(Запрос)
	
	Если Запрос.Параметры.Свойство("ИнформацияПоОтправителю")
		И Запрос.Параметры.Свойство("ИнформацияПоПолучателю") Тогда
		Возврат;
	КонецЕсли;

	Если Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства
		Или Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой Тогда
		
		ИнформацияПоОтправителю = НСтр("ru = 'Передача продукции из подразделения ""%1""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ИнформацияПоПолучателю  = НСтр("ru = 'Передача продукции на склад ""%1""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		
	ИначеЕсли Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
		Или Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
		
		ИнформацияПоОтправителю = НСтр("ru = 'Передача материалов со склада ""%1""'");
		ИнформацияПоПолучателю  = ?(ТипЗнч( Запрос.Параметры.Получатель) = Тип("СправочникСсылка.СтруктураПредприятия"),
									НСтр("ru = 'Передача материалов в подразделение ""%1""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
									НСтр("ru = 'Передача материалов в кладовую ""%1""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
									
	ИначеЕсли Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства
		Или Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой Тогда
		
		ИнформацияПоОтправителю = ?(ТипЗнч( Запрос.Параметры.Отправитель) = Тип("СправочникСсылка.СтруктураПредприятия"),
									НСтр("ru = 'Возврат материалов из подразделения ""%1""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
									НСтр("ru = 'Возврат материалов из кладовой ""%1""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
									
		ИнформацияПоПолучателю  = НСтр("ru = 'Возврат материалов на склад ""%1""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		
	ИначеЕсли Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеВПроизводстве Тогда
		
		ИнформацияПоОтправителю = НСтр("ru = 'Передача из кладовой ""%1""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ИнформацияПоПолучателю  = НСтр("ru = 'Передача в кладовую ""%1""'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		
	КонецЕсли; 
	
	ИнформацияПоОтправителю = СтрШаблон(ИнформацияПоОтправителю,  Запрос.Параметры.ОтправительПредставление);
	ИнформацияПоПолучателю  = СтрШаблон(ИнформацияПоПолучателю,   Запрос.Параметры.ПолучательПредставление);
	
	Запрос.УстановитьПараметр("ИнформацияПоОтправителю", ИнформацияПоОтправителю);
	Запрос.УстановитьПараметр("ИнформацияПоПолучателю", ИнформацияПоПолучателю);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаКорВидЗапасов(Запрос)
	
	Если Запрос.Параметры.Свойство("КорВидЗапасов") Тогда
		Возврат;
	КонецЕсли;
	
	ДопКолонки = Новый Структура("Комитент, Соглашение, Валюта, НалогообложениеНДС, НалогообложениеОрганизации, Поставщик, Подразделение, Менеджер, Сделка");
	ДопКолонки.Вставить("ОбособленныйУчетТоваровПоСделке",	Ложь);
	ДопКолонки.Вставить("ДеятельностьОблагаетсяЕНВД",		Ложь);
	ДопКолонки.Вставить("ВидЗапасов",						Справочники.ВидыЗапасов.ПустаяСсылка());
	ДопКолонки.Вставить("ТипЗапасов",						Перечисления.ТипыЗапасов.Товар);
	ДопКолонки.Вставить("ГруппаФинансовогоУчета",			Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка());
	ДопКолонки.Вставить("ВариантОбособленногоУчетаТоваров",	Перечисления.ВариантыОбособленногоУчетаТоваров.НеВедется);
	ДопКолонки.Вставить("Организация",						Запрос.Параметры.Организация);
	ДопКолонки.Вставить("ХозяйственнаяОперация",			Перечисления.ХозяйственныеОперации.ПередачаВПроизводство);
	
	Запрос.УстановитьПараметр("КорВидЗапасов", Справочники.ВидыЗапасов.ВидЗапасовДокумента(ДопКолонки.Организация, ДопКолонки.ХозяйственнаяОперация, ДопКолонки));
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область ПроведениеРегламентированныйУчет

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт

// передача в производство

#Область СписаниеКомиссионныхТоваров // (Дт :: Кт 004.01)
	СписаниеКомиссионныхТоваров = "
	|ВЫБРАТЬ //// Списание комиссионных товаров (Дт  :: Кт 004.01)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Отправитель.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.Отправитель КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Списание комиссионных товаров"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))";
	
#КонецОбласти

#Область ПередачаМатериаловВПроизводство // (Дт 20 :: Кт 20, 10, 76.ОК)
	ПередачаМатериаловВПроизводство = "
	|ВЫБРАТЬ //// Передача материалов в производство (Дт 20 :: Кт 20, 10, 76.ОК)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СуммаБалансовая, Строки.СуммаБалансовая) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	ВЫБОР КОГДА Операция.Получатель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Получатель
	|	ИНАЧЕ
	|		Операция.Получатель.Подразделение
	|	КОНЕЦ КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ВЫБОР КОГДА Операция.Получатель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Получатель
	|	ИНАЧЕ
	|		Операция.Получатель.Подразделение
	|	КОНЕЦ КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК СубконтоДт2,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение) 
	|		ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ КАК ВидСчетаКт,
	|
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение) ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		Строки.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	ВЫБОР КОГДА (Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)) 	
	|		И НЕ Операция.Отправитель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|			Операция.Отправитель.Подразделение
	|	ИНАЧЕ
	|		Операция.Отправитель
	|	КОНЕЦ КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Отправитель.Подразделение КАК ПодразделениеКт,
	|	ЕСТЬNULL(Стоимости.НаправлениеДеятельности, Строки.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыКОформлениюОтчетовКомитенту)
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СчетКт,
	|
	|	ВЫБОР КОГДА (Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации)
	|		И НЕ (Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)) ТОГДА
	|		Строки.Контрагент
	|	ИНАЧЕ
	|		Строки.Номенклатура
	|	КОНЕЦ КАК СубконтоКт1,
	|
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение) ТОГДА
	|		Строки.ГруппаПродукции
	|	КОГДА Строки.Склад ССЫЛКА Справочник.Партнеры ИЛИ Строки.Склад ССЫЛКА Справочник.Организации ТОГДА
	|		Строки.Номенклатура
	|	ИНАЧЕ
	|		Операция.Отправитель
	|	КОНЕЦ КАК СубконтоКт2,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИЛИ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение) ТОГДА
	|		0 
	|	ИНАЧЕ 
	|		Строки.Количество 
	|	КОНЕЦ КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Передача материалов в производство"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И НЕ Строки.КорНоменклатура = НЕОПРЕДЕЛЕНО
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.КорНаправлениеДеятельности = Стоимости.КорНаправлениеДеятельности
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.АналитикаРасходов = Стоимости.АналитикаРасходов
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|		И Строки.КорГруппаПродукции = Стоимости.КорГруппаПродукции
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))
	|	И НЕ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|";
#КонецОбласти

#Область ПеремещениеПродукцииДавальцевВПроизводствеЗабаланс // (002 :: 002)
	ПеремещениеПродукцииДавальцевВПроизводствеЗабаланс = "
	|ВЫБРАТЬ //// Перемещение давальческих полуфабрикатов в производстве (Дт 002 :: Кт 002)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СуммаЗабалансовая, Строки.СуммаЗабалансовая) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ВЫБОР КОГДА Операция.Получатель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Получатель
	|	ИНАЧЕ
	|		Операция.Получатель.Подразделение 
	|	КОНЕЦ КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Строки.Контрагент КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Отправитель.Подразделение КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Строки.Контрагент КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Передача давальческих полуфабрикатов в производство"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.НаправлениеДеятельности= Стоимости.НаправлениеДеятельности
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))
	|";
#КонецОбласти

#Область ПередачаТоваровДавальцаВПроизводство // (Дт 003.02 :: Кт 003.01)
	ТекстПередачаТоваровДавальцаВПроизводство = "
	|ВЫБРАТЬ //// Передача товаров давальца в производство (Дт 003.02 :: Кт 003.01)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СуммаЗабалансовая, Строки.СуммаЗабалансовая) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ВЫБОР КОГДА Операция.Получатель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Получатель
	|	ИНАЧЕ
	|		Операция.Получатель.Подразделение
	|	КОНЕЦ КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Отправитель.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПринятыеВПереработку) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	Операция.Отправитель КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Передача товаров давальца в производство"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))";
	
#КонецОбласти

#Область ВключениеИсключениеНДСВСтоимостьТоваров // (Дт 25, 26, 44 :: Кт 19.03)
	ВключениеИсключениеНДСВСтоимостьТоваров = "
	|ВЫБРАТЬ //// Включение/исключение НДС в стоимость товара на складе - получателе (Дт 25, 26, 44 :: Кт 19.03)
	|	Партии.Ссылка КАК Ссылка,
	|	Партии.Период КАК Период,
	|	Партии.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСРегл
	|	ИНАЧЕ
	|		-Партии.НДСРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	ВЫБОР КОГДА Операция.Получатель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Получатель
	|	ИНАЧЕ
	|		Операция.Получатель.Подразделение
	|	КОНЕЦ КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ВЫБОР КОГДА Операция.Получатель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Получатель
	|	ИНАЧЕ
	|		Операция.Получатель.Подразделение
	|	КОНЕЦ КАК ПодразделениеДт,
	|	Партии.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт1,
	|	Партии.Номенклатура КАК СубконтоДт2,
	|	Партии.КорГруппаПродукции КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаКт,
	|	Партии.ВидДеятельностиНДС                                              КАК АналитикаУчетаКт,
	|	Партии.ВидЦенности                                                     КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Партии.Контрагент КАК СубконтоКт1,
	|	Партии.ДокументПоступления КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Включение/исключение НДС в стоимость товара на складе - получателе"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Партии КАК Партии
	|	ПО
	|		ДокументыКОтражению.Ссылка = Партии.Ссылка
	|
	|ГДЕ
	|	(Партии.ВключениеНДСВСтоимость ИЛИ Партии.ИсключениеНДСИзСтоимости)
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))";
#КонецОбласти

// выпуск продукции

#Область ВыпускСобственнойПродукцииНаСклад // (Дт 43, 21 :: Кт 20.01, 23)
	ВыпускСобственнойПродукцииНаСклад = "
	|ВЫБРАТЬ // Выпуск собственной продукции на склад (Дт 43, 21 :: Кт 20.01, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	Операция.Получатель КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Получатель.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.Получатель КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	ВЫБОР КОГДА Операция.Отправитель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Отправитель
	|	ИНАЧЕ
	|		Операция.Отправитель.Подразделение
	|	КОНЕЦ КАК МестоУчетаКт,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ВЫБОР КОГДА Операция.Отправитель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Отправитель
	|	ИНАЧЕ
	|		Операция.Отправитель.Подразделение
	|	КОНЕЦ КАК ПодразделениеКт,
	|	ЕСТЬNULL(Стоимости.НаправлениеДеятельности, Строки.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СубконтоКт1,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Выпуск собственной продукции"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ВидДвижения			= Стоимости.ВидДвижения
	|		И Строки.Номенклатура			= Стоимости.Номенклатура
	|		И Строки.Склад					= Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета	= Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ХозяйственнаяОперация	= Стоимости.ХозяйственнаяОперация
	|		И Строки.НаправлениеДеятельности= Стоимости.НаправлениеДеятельности
	|		И Строки.ГруппаПродукции		= Стоимости.ГруппаПродукции
	|		И Строки.КорГруппаПродукции		= Стоимости.КорГруппаПродукции
	|		
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой))
	|	И НЕ Операция.Получатель.ЦеховаяКладовая
	|	И НЕ Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|";
#КонецОбласти

#Область ВыпускСобственнойПродукцииВКладовую // (Дт 20, 23 :: Кт 20, 23)
	ВыпускСобственнойПродукцииВКладовую = "
	|ВЫБРАТЬ // Выпуск собственной продукции в кладовую // (Дт 20, 23 :: Кт 20, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	Операция.Получатель.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Получатель.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт2,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	ВЫБОР КОГДА Операция.Отправитель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Отправитель
	|	ИНАЧЕ
	|		Операция.Отправитель.Подразделение
	|	КОНЕЦ КАК МестоУчетаКт,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ВЫБОР КОГДА Операция.Отправитель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Отправитель
	|	ИНАЧЕ
	|		Операция.Отправитель.Подразделение
	|	КОНЕЦ КАК ПодразделениеКт,
	|	ЕСТЬNULL(Стоимости.НаправлениеДеятельности, Строки.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СубконтоКт1,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Выпуск собственной продукции"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ВидДвижения			= Стоимости.ВидДвижения
	|		И Строки.Номенклатура			= Стоимости.Номенклатура
	|		И Строки.Склад					= Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета	= Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ХозяйственнаяОперация	= Стоимости.ХозяйственнаяОперация
	|		И Строки.НаправлениеДеятельности= Стоимости.НаправлениеДеятельности
	|		И Строки.ГруппаПродукции		= Стоимости.ГруппаПродукции
	|		И Строки.КорГруппаПродукции		= Стоимости.КорГруппаПродукции
	|		
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой))
	|	И Операция.Получатель.ЦеховаяКладовая
	|";
#КонецОбласти

#Область ВыпускДавальческойПродукцииБаланс // (Дт 20, 23 :: Кт 20, 23)

	// Для давальческой продукции не имеет значения куда она выпускается. 
	// Она всегда будет на счетах производства.
	ВыпускДавальческойПродукцииБаланс = "
	|ВЫБРАТЬ // Выпуск давальческой продукции по балансу (Дт 20, 23 :: Кт 20, 23)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СуммаБалансовая, Строки.СуммаБалансовая) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	Операция.Получатель.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Получатель.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт2,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	ВЫБОР КОГДА Операция.Отправитель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Отправитель
	|	ИНАЧЕ
	|		Операция.Отправитель.Подразделение
	|	КОНЕЦ КАК МестоУчетаКт,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ВЫБОР КОГДА Операция.Отправитель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Отправитель
	|	ИНАЧЕ
	|		Операция.Отправитель.Подразделение
	|	КОНЕЦ КАК ПодразделениеКт,
	|	ЕСТЬNULL(Стоимости.НаправлениеДеятельности, Строки.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СубконтоКт1,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Выпуск давальческой продукции"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ВидДвижения			= Стоимости.ВидДвижения
	|		И Строки.Номенклатура			= Стоимости.Номенклатура
	|		И Строки.Склад					= Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета	= Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ХозяйственнаяОперация	= Стоимости.ХозяйственнаяОперация
	|		И Строки.НаправлениеДеятельности= Стоимости.НаправлениеДеятельности
	|		И Строки.ГруппаПродукции		= Стоимости.ГруппаПродукции
	|		И Строки.КорГруппаПродукции		= Стоимости.КорГруппаПродукции
	|		
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой))
	|";
#КонецОбласти

// возвраты

#Область ВозвратТоваровНаСклад // (Дт 20.01 :: Кт 10.01 сторно)
	ВозвратТоваровНаСклад = "
	|ВЫБРАТЬ   //// Возврат товаров на склад (Дт 20.01 :: Кт 10.01 сторно)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	-ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	ВЫБОР КОГДА Операция.Отправитель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Отправитель
	|	ИНАЧЕ
	|		Операция.Отправитель.Подразделение
	|	КОНЕЦ КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ВЫБОР КОГДА Операция.Отправитель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Отправитель
	|	ИНАЧЕ
	|		Операция.Отправитель.Подразделение
	|	КОНЕЦ КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	Строки.ГруппаПродукции КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	-ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	-ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	-ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаКт,
	|	Строки.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	Операция.Получатель КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Получатель.Подразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Операция.Получатель КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	-Строки.Количество КАК КоличествоКт,
	|	-ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	-ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	-ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Возврат товаров на склад из производства"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВтСтроки КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВтСтоимости КАК Стоимости
	|	ПО 
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.НаправлениеДеятельности= Стоимости.НаправлениеДеятельности
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|	И Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И НЕ Операция.Получатель.ЦеховаяКладовая
	|";
#КонецОбласти

#Область ВозвратТоваровВКладовую // (Дт 20.01 :: Кт 20.01 сторно)
	ВозвратТоваровВКладовую = "
	|ВЫБРАТЬ   //// Возврат товаров на производственный склад из производства (Дт 20.01 :: Кт 20 сторно)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	-ЕСТЬNULL(Стоимости.Сумма, Строки.Сумма) КАК Сумма,
	|
	|	ВЫБОР КОГДА Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ВЫБОР КОГДА Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Строки.СтатьяРасходов
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	ВЫБОР КОГДА Операция.Отправитель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Отправитель
	|	ИНАЧЕ
	|		Операция.Отправитель.Подразделение
	|	КОНЕЦ КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ВЫБОР КОГДА Операция.Отправитель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Отправитель
	|	ИНАЧЕ
	|		Операция.Отправитель.Подразделение
	|	КОНЕЦ КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	Строки.ГруппаПродукции КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	-ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	-ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	-ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	Операция.Получатель.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Получатель.Подразделение КАК ПодразделениеКт,
	|	Строки.КорНаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	Строки.КорГруппаПродукции КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	-ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	-ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	-ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Возврат товаров на производственный склад из производства"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВтСтроки КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВтСтоимости КАК Стоимости
	|	ПО 
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.НаправлениеДеятельности= Стоимости.НаправлениеДеятельности
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|		И Строки.КорГруппаПродукции = Стоимости.КорГруппаПродукции
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|	И Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Операция.Получатель.ЦеховаяКладовая
	|";
#КонецОбласти

#Область ВключениеИсключениеНДСВСтоимостьТовараПриВозврате // (Дт 25, 26, 44 :: Кт 19.03)
	ВключениеИсключениеНДСВСтоимостьТовараПриВозврате = "
	|ВЫБРАТЬ //// Включение/исключение НДС в стоимость товара на складе - получателе Сторно (Дт 25, 26, 44 :: Кт 19.03)
	|
	|	Партии.Ссылка КАК Ссылка,
	|	Партии.Период КАК Период,
	|	Партии.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСРегл
	|	ИНАЧЕ
	|		- Партии.НДСРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	ВЫБОР КОГДА Партии.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ВЫБОР КОГДА Партии.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Партии.СтатьяРасходов
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Операция.Получатель.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Получатель.Подразделение КАК ПодразделениеДт,
	|	Партии.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт1,
	|	Партии.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаКт,
	|	Партии.ВидДеятельностиНДС                                    КАК АналитикаУчетаКт,
	|	Партии.ВидЦенности                                           КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Партии.Контрагент КАК СубконтоКт1,
	|	Партии.ДокументПоступления КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Включение/исключение НДС в стоимость товара (сторно)"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Партии КАК Партии
	|	ПО
	|		Партии.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО 
	|		Партии.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|ГДЕ
	|	СтатьиСтроительства.Ссылка ЕСТЬ NULL
	|	И (Партии.ВключениеНДСВСтоимость ИЛИ Партии.ИсключениеНДСИзСтоимости)
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|";
#КонецОбласти

#Область ВключениеИсключениеНДСВСтоимостьАктивовПриВозврате // (Дт 08 :: Кт 19.03)
	ВключениеИсключениеНДСВСтоимостьАктивовПриВозврате = "
	|ВЫБРАТЬ //// Включение/исключение НДС в стоимость прочих активов (сторно) (Дт 08 :: Кт 19.03)
	|	Партии.Ссылка КАК Ссылка,
	|	Партии.Период КАК Период,
	|	Партии.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСРегл
	|	ИНАЧЕ
	|		-Партии.НДСРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Партии.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Получатель.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Получатель.Подразделение КАК ПодразделениеДт,
	|	Партии.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Партии.АналитикаРасходов КАК СубконтоДт1,
	|	Партии.СтатьяРасходов КАК СубконтоДт2,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный) КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаКт,
	|	Партии.ВидДеятельностиНДС                                              КАК АналитикаУчетаКт,
	|	Партии.ВидЦенности                                                     КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Партии.Контрагент КАК СубконтоКт1,
	|	Партии.ДокументПоступления КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Включение/исключение НДС в стоимость прочих активов (сторно)"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Партии КАК Партии
	|	ПО 
	|		Партии.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО 
	|		Партии.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|ГДЕ
	|	(Партии.ВключениеНДСВСтоимость ИЛИ Партии.ИсключениеНДСИзСтоимости)
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|";
#КонецОбласти

#Область ВозвратМатериаловДавальцаНаСклад // (Дт 003.01 :: Кт 003.02)
	ВозвратМатериаловДавальцаНаСклад = "
	|ВЫБРАТЬ //// Возврат материалов давальца из производства (Дт 003.01 :: Кт 003.02)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СуммаЗабалансовая, Строки.СуммаЗабалансовая) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Получатель.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПринятыеВПереработку) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	Операция.Получатель КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	ВЫБОР КОГДА Операция.Отправитель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Отправитель
	|	ИНАЧЕ
	|		Операция.Отправитель.Подразделение
	|	КОНЕЦ КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Возврат материалов давальца из производства"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.НаправлениеДеятельности= Стоимости.НаправлениеДеятельности
	|ГДЕ
	|	Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|	И НЕ Операция.Получатель.ЦеховаяКладовая";
	
#КонецОбласти

#Область ВозвратПродукцииДавальцаБаланс // (Дт 20.01 :: Кт 20.01 сторно)
	ВозвратПродукцииДавальца = "
	|ВЫБРАТЬ   //// Возврат продукции давальца на производственный склад из производства (Дт 20.01 :: Кт 20 сторно)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	-ЕСТЬNULL(Стоимости.СуммаБалансовая, Строки.СуммаБалансовая) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	ВЫБОР КОГДА Операция.Отправитель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Отправитель
	|	ИНАЧЕ
	|		Операция.Отправитель.Подразделение
	|	КОНЕЦ КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ВЫБОР КОГДА Операция.Отправитель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Отправитель
	|	ИНАЧЕ
	|		Операция.Отправитель.Подразделение
	|	КОНЕЦ КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	Строки.ГруппаПродукции КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	-ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	-ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	-ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	Операция.Получатель.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Получатель.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоКт1,
	|	Строки.Номенклатура КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	-ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	-ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	-ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Возврат продукции давальца на производственный склад из производства"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВтСтроки КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВтСтоимости КАК Стоимости
	|	ПО 
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.НаправлениеДеятельности= Стоимости.НаправлениеДеятельности
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|";
#КонецОбласти

#Область ВозвратПродукцииДавальцаЗабаланс // (Дт 002 :: Кт 002 сторно)
	ВозвратПродукцииДавальцаЗабаланс = "
	|ВЫБРАТЬ   //// Возврат продукции давальца на производственный склад из производства (Дт 002 :: Кт 002 сторно)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	-ЕСТЬNULL(Стоимости.СуммаЗабалансовая, Строки.СуммаЗабалансовая) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	ВЫБОР КОГДА Операция.Отправитель Ссылка Справочник.СтруктураПредприятия ТОГДА
	|		Операция.Отправитель
	|	ИНАЧЕ
	|		Операция.Отправитель.Подразделение
	|	КОНЕЦ КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Строки.Контрагент КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Получатель.Подразделение КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Строки.Контрагент КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Возврат продукции давальца на производственный склад из производства"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО	
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВтСтроки КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВтСтоимости КАК Стоимости
	|	ПО 
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.РазделУчета = Стоимости.РазделУчета
	|		И Строки.НаправлениеДеятельности= Стоимости.НаправлениеДеятельности
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|	И Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|";
#КонецОбласти

// перемещение

#Область ПеремещениеСобственныхТоваров // (Дт 20, 23 :: Кт 20, 23)
	ПеремещениеСобственныхТоваров = "
	|ВЫБРАТЬ //// Перемещение собственных товаров в производстве (Дт 20, 23 :: Кт 20, 23)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СуммаБалансовая, Строки.СуммаБалансовая) КАК Сумма,
	|
	|	ВЫБОР КОГДА Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ВЫБОР КОГДА Строки.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Строки.СтатьяРасходов
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Операция.Получатель.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Получатель.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Стоимости.КорНаправлениеДеятельности, Строки.КорНаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	ЕСТЬNULL(Стоимости.КорГруппаПродукции, Строки.КорГруппаПродукции) КАК СубконтоДт2,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУДт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРДт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	Операция.Отправитель.Подразделение КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Отправитель.Подразделение КАК ПодразделениеКт,
	|	ЕСТЬNULL(Стоимости.НаправлениеДеятельности, Строки.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	ЕСТЬNULL(Стоимости.ГруппаПродукции, Строки.ГруппаПродукции) КАК СубконтоКт2,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	ЕСТЬNULL(Стоимости.СуммаНУ, Строки.СуммаНУ) КАК СуммаНУКт,
	|	ЕСТЬNULL(Стоимости.СуммаПР, Строки.СуммаПР) КАК СуммаПРКт,
	|	ЕСТЬNULL(Стоимости.СуммаВР, Строки.СуммаВР) КАК СуммаВРКт,
	|	""Перемещение собственных товаров в производстве"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.ВидДвижения = Стоимости.ВидДвижения
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
	|		И Строки.ГруппаПродукции = Стоимости.ГруппаПродукции
	|		И Строки.КорГруппаПродукции = Стоимости.КорГруппаПродукции
	|ГДЕ
	|	Строки.РазделУчета В (ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты),
	|							ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение))
	|	И Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеВПроизводстве)
	|";
#КонецОбласти

#Область ПеремещениеДавальческихПолуфрабикатовПоЗабалансу // (002 :: 002)
	ПеремещениеДавальческихПолуфрабикатовПоЗабалансу = "
	|ВЫБРАТЬ //// Перемещение давальческих полуфабрикатов производстве (Дт 002 :: Кт 002)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Стоимости.СуммаЗабалансовая, Строки.СуммаЗабалансовая) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Получатель.Подразделение КАК ПодразделениеДт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Строки.Контрагент КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Отправитель.Подразделение КАК ПодразделениеКт,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТМЦпринятыеНаОтветственноеХранение) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Строки.Контрагент КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Перемещение давальческих полуфабрикатов в производстве"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ДвижениеПродукцииИМатериалов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСтроки КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСтоимости КАК Стоимости
	|	ПО
	|		Строки.Ссылка = Стоимости.Ссылка
	|		И Строки.Номенклатура = Стоимости.Номенклатура
	|		И Строки.Склад = Стоимости.Склад
	|		И Строки.ГруппаФинансовогоУчета = Стоимости.ГруппаФинансовогоУчета
	|		И Строки.ТипЗапасов = Стоимости.ТипЗапасов
	|		И Строки.Контрагент = Стоимости.Контрагент
	|		И Строки.СтатьяРасходов = Стоимости.СтатьяРасходов
	|		И Строки.НаправлениеДеятельности= Стоимости.НаправлениеДеятельности
	|ГДЕ
	|	Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|	И Операция.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеВПроизводстве), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой))
	|";
#КонецОбласти

	Возврат СписаниеКомиссионныхТоваров
		+ " ОБЪЕДИНИТЬ ВСЕ " + ПередачаМатериаловВПроизводство
		+ " ОБЪЕДИНИТЬ ВСЕ " + ПеремещениеПродукцииДавальцевВПроизводствеЗабаланс
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПередачаТоваровДавальцаВПроизводство
		+ " ОБЪЕДИНИТЬ ВСЕ " + ВключениеИсключениеНДСВСтоимостьТоваров
		+ " ОБЪЕДИНИТЬ ВСЕ " + ВыпускСобственнойПродукцииНаСклад
		+ " ОБЪЕДИНИТЬ ВСЕ " + ВыпускСобственнойПродукцииВКладовую
		+ " ОБЪЕДИНИТЬ ВСЕ " + ВыпускДавальческойПродукцииБаланс
		
		+ " ОБЪЕДИНИТЬ ВСЕ " + ВозвратТоваровНаСклад
		+ " ОБЪЕДИНИТЬ ВСЕ " + ВозвратТоваровВКладовую
		+ " ОБЪЕДИНИТЬ ВСЕ " + ВключениеИсключениеНДСВСтоимостьТовараПриВозврате
		+ " ОБЪЕДИНИТЬ ВСЕ " + ВключениеИсключениеНДСВСтоимостьАктивовПриВозврате
		+ " ОБЪЕДИНИТЬ ВСЕ " + ВозвратМатериаловДавальцаНаСклад
		+ " ОБЪЕДИНИТЬ ВСЕ " + ВозвратПродукцииДавальца
		+ " ОБЪЕДИНИТЬ ВСЕ " + ВозвратПродукцииДавальцаЗабаланс
		
		+ " ОБЪЕДИНИТЬ ВСЕ " + ПеремещениеСобственныхТоваров
		+ " ОБЪЕДИНИТЬ ВСЕ " + ПеремещениеДавальческихПолуфрабикатовПоЗабалансу
		+ "";

КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеДокумента

Функция НалогообложениеНДС(Объект) Экспорт

	НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка();
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
		
		НалогообложениеНДС = Справочники.Организации.НалогообложениеНДС(
			Объект.Организация, Объект.Отправитель, Объект.Дата);
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой Тогда
		
		НалогообложениеНДС = Справочники.Организации.НалогообложениеНДС(
			Объект.Организация, Объект.Получатель,  Объект.Дата);
		
	КонецЕсли;
	
	Возврат НалогообложениеНДС;
	
КонецФункции

#КонецОбласти

#Область Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"Накладная",
			НСтр("ru = 'Выпуск продукции'"),
			СформироватьПечатнуюФормуНакладной(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПередачаМатериаловВПроизводство") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПередачаМатериаловВПроизводство",
			НСтр("ru = 'Передача материалов в производство'"),
			ПечатьПередачаМатериаловВПроизводство(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НакладнаяНаВозврат") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "НакладнаяНаВозврат",
			НСтр("ru = 'Оприходование товаров'"), СформироватьПечатнуюФормуВозврат(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуНакладной(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ДвижениеПродукцииИМатериалов.ПФ_MXL_Накладная");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Отправитель.Представление КАК ПредставлениеПодразделения
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|	И ДанныеДокумента.ХозяйственнаяОперация В 
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                                КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура                          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                        КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Ссылка.Получатель                     КАК Склад,
	|	ТаблицаТовары.Ссылка.Отправитель                    КАК Подразделение,
	|	ТаблицаТовары.Упаковка                              КАК Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок                    КАК Количество,
	|	ТаблицаТовары.Серия                                 КАК Серия
	|
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивДокументов)
	|	И ТаблицаТовары.Ссылка.ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой))
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	МАКСИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Ссылка.Получатель,
	|	ТаблицаСерии.Ссылка.Отправитель,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.Серия
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивДокументов)
	|	И ТаблицаСерии.Ссылка.ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой))
	|	И ТаблицаСерии.Количество <> 0
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	| 	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Номенклатура." + ?(КолонкаКодов = "", "Код", КолонкаКодов) + " КАК КодАртикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Характеристика.Наименование КАК ХарактеристикаНаименование,
	|	ТаблицаТовары.Серия.Наименование КАК СерияНаименование,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения.Наименование
	|		ИНАЧЕ ТаблицаТовары.Упаковка.Наименование
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Ссылка.ХозяйственнаяОперация КАК НаправлениеВыпуска,
	|	ТаблицаТовары.Ссылка.Получатель.Представление КАК ПредставлениеПолучателя,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Ссылка.ХозяйственнаяОперация В
	|			(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|			 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой))
	|			ТОГДА &ТипПолучателяСклад
	|		ИНАЧЕ &ТипПолучателяПодразделение
	|	КОНЕЦ КАК ТипПолучателя
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(ТипПолучателя)
	|ПО
	|	Ссылка,
	|	ПредставлениеПолучателя";

	Запрос.УстановитьПараметр("МассивДокументов",           МассивОбъектов);
	Запрос.УстановитьПараметр("ТипПолучателяСклад",         НСтр("ru = 'Склад'"));
	Запрос.УстановитьПараметр("ТипПолучателяПодразделение", НСтр("ru = 'Подразделение'"));
	Запрос.УстановитьПараметр("МассивДокументов",           МассивОбъектов);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВыпускПродукции_Накладная";
	
	МассивРезультатов 		= Запрос.ВыполнитьПакет();
	ДанныеПечати			= МассивРезультатов[0].Выбрать();
	ВыборкаПоДокументам 	= МассивРезультатов[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		ВыборкаПоПолучателям = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоПолучателям.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			НомерСтраницы = 1;
			
			ПервыйДокумент    = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			// Выводим общие реквизиты шапки
			ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ОбластьМакета.Параметры.ПредставлениеПолучателя = ВыборкаПоПолучателям.ПредставлениеПолучателя;
			ОбластьМакета.Параметры.ТипПолучателя = ВыборкаПоПолучателям.ТипПолучателя;
			
			ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Выпуск продукции'"));
			ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
			
			СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата);
			ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
			// Создаем массив для проверки вывода
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть докмента
			ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть(?(КолонкаКодов = "", "ЗаголовокТаб", "ЗаголовокТабСКодом"));
			ОбластьМакета           = Макет.ПолучитьОбласть(?(КолонкаКодов = "", "Строка",       "СтрокаСКодом"));
			ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
			
			СтрокаТовары = ВыборкаПоПолучателям.Выбрать();
			КоличествоСтрок = СтрокаТовары.Количество();
			НомерСтроки = 0;
			ПараметрыСтрокиТовары = Новый Структура("НомерСтроки,ТоварНаименование");
			Пока СтрокаТовары.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ПараметрыСтрокиТовары.НомерСтроки = НомерСтроки;
				ПараметрыСтрокиТовары.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
																СтрокаТовары.ТоварНаименование, 
																СтрокаТовары.ХарактеристикаНаименование,,
																СтрокаТовары.СерияНаименование);
																
				ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
				ОбластьМакета.Параметры.Заполнить(ПараметрыСтрокиТовары);
				
				Если НомерСтроки = 1 Тогда
					
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Страница %1'"), НомерСтраницы); 
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				Иначе
					
					МассивВыводимыхОбластей.Очистить();
					МассивВыводимыхОбластей.Добавить(ОбластьМакета);
					
					Если НомерСтроки = КоличествоСтрок Тогда
						
						МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
						
					КонецЕсли;
					
					Если НомерСтроки <> 1 И Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
						
						НомерСтраницы = НомерСтраницы + 1;
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Страница %1'"), НомерСтраницы);
						ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
						
					КонецЕсли;
					
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЦикла;
			
			// Выводим подвал документа
			ОбластьПодвала.Параметры.ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Всего наименований %1'"), СтрокаТовары.Количество());
			
			ТабличныйДокумент.Вывести(ОбластьПодвала);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуВозврат(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДопКолонка = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если ЗначениеЗаполнено(ДопКолонка) Тогда
		ВыводитьДопКолонку = Истина;
	Иначе
		ВыводитьДопКолонку = Ложь;
		ДопКолонка = "Код";
	КонецЕсли;

	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номер КАК Номер,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.Получатель КАК Склад,
	|	ТаблицаДокумента.Отправитель КАК Подразделение,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокумента.Получатель) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокумента.Отправитель) КАК ПодразделениеПредставление,
	|	ТаблицаДокумента.Организация.НаименованиеСокращенное КАК ОрганизацияПредставление
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В(&МассивОбъектов)
	|	И ТаблицаДокумента.ХозяйственнаяОперация В 
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.Код КАК ДопКолонка,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
	|	&ТекстЗапросаЕдиницаИзмеренияПредставление КАК ЕдиницаИзмеренияПредставление,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	ТаблицаТовары.Серия.Представление
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.ХозяйственнаяОперация В 
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10)
	|	И ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Номенклатура.Код,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения),
	|	МАКСИМУМ(ТаблицаСерии.Количество),
	|	ТаблицаТовары.Ссылка,
	|	МАКСИМУМ(ТаблицаСерии.Количество),
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Серия.Представление
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Серии КАК ТаблицаСерии
	|		ПО ТаблицаТовары.Номенклатура = ТаблицаСерии.Номенклатура
	|			И ТаблицаТовары.Характеристика = ТаблицаСерии.Характеристика
	|			И ТаблицаТовары.Назначение = ТаблицаСерии.Назначение
	|			И ТаблицаТовары.Ссылка = ТаблицаСерии.Ссылка
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.ХозяйственнаяОперация  В 
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Номенклатура.Код,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное,
	|	ТаблицаСерии.НомерСтроки,
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Серия.Представление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка";
	
	Если ВыводитьДопКолонку И ДопКолонка <> "Код" Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Номенклатура.Код", "Номенклатура." + ДопКолонка);
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаЕдиницаИзмеренияПредставление",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "ТаблицаТовары.Упаковка", "ТаблицаТовары.Номенклатура"));
			
	Запрос.Текст = ТекстЗапроса;
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();	
	РеквизитыДокумента = Новый Структура("Номер, Дата");
	СинонимДокумента = НСтр("ru='Возврат из производства'");

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратМатериаловИзПроизводства_ВозвратИзПроизводства";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ДвижениеПродукцииИМатериалов.ПФ_MXL_ВозвратМатериаловИзПроизводства");
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПодразделения") Тогда
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Иначе
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокБезПодразделения");
	КонецЕсли;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");

	Если ВыводитьДопКолонку Тогда
		ОбластьШапкаТаблицы        = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьСтрока              = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвалТаблицы       = Макет.ПолучитьОбласть("ПодвалТаблицы");
	Иначе
		ОбластьШапкаТаблицы        = Макет.ПолучитьОбласть("ШапкаТаблицыБезДопКолонки");
		ОбластьСтрока              = Макет.ПолучитьОбласть("СтрокаБезДопКолонки");	
		ОбластьПодвалТаблицы       = Макет.ПолучитьОбласть("ПодвалТаблицыБезДопКолонки");
	КонецЕсли;
	
	ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
	ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДокументы = РезультатыЗапроса[0].Выбрать();
	ВыборкаПоТабличнымЧастям = РезультатыЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной.
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьЗаголовок, ВыборкаДокументы.Ссылка);
		ТабДокумент.Вывести(ОбластьЗаголовок);
		// Вывод шапки.
		
		ТабДокумент.Вывести(ОбластьШапкаТаблицы);
				
		ВсегоНаименований = 0;
		
		// Вывод строк.
		ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаДокументы.Ссылка));
		
		ВыборкаПоСтрокам = ВыборкаПоТабличнымЧастям.Выбрать();
		
		Пока ВыборкаПоСтрокам.Следующий() Цикл
									
			// Номенклатура.
			ОбластьСтрока.Параметры.ТоварПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоСтрокам.НоменклатураПредставление,
				ВыборкаПоСтрокам.ХарактеристикаПредставление,
				,
				ВыборкаПоСтрокам.СерияПредставление);
			
			// Данные о количестве.
			ОбластьСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			
			ВсегоНаименований = ВсегоНаименований + 1;
			
			ОбластьСтрока.Параметры.НомерСтроки = ВсегоНаименований;
			ТабДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
		// Вывод подвала.
		ТабДокумент.Вывести(ОбластьПодвалТаблицы);
		
		ТекстИтоговойСтроки = НСтр("ru = 'Всего наименований %ВсегоНаименований%'");
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		
		ОбластьИтоги.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		
		ТабДокумент.Вывести(ОбластьИтоги);
		
		// Вывод подписей.
		ТабДокумент.Вывести(ОбластьПодписи);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
		
	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

// Функция получает данные для формирования печатной формы МХ - 18
//
Функция ПолучитьДанныеДляПечатнойФормыМХ18(ПараметрыПечати, МассивОбъектов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов			= ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если НЕ ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Товары.Ссылка                            КАК Ссылка,
	|	МИНИМУМ(Товары.НомерСтроки)              КАК НомерСтроки,
	|	Товары.Номенклатура                      КАК Номенклатура,
	|	Товары.Характеристика                    КАК Характеристика,
	|	Товары.Упаковка                          КАК Упаковка,
	|	СУММА(Товары.КоличествоУпаковок)         КАК КоличествоУпаковок,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ)   КАК ДатаПолученияЦены,
	|	&ВидЦены                                 КАК ВидЦены,
	|	&ВалютаЦены                              КАК ВалютаЦены
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.Ссылка.ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой))
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыЦенНоменклатуры.Ссылка,
	|	ПериодыЦенНоменклатуры.НомерСтроки,
	|	ЦеныНоменклатуры.Цена,
	|	ЦеныНоменклатуры.Упаковка
	|ПОМЕСТИТЬ Цены
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.НомерСтроки КАК НомерСтроки,
	|		ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|		ЦеныНоменклатуры.Характеристика КАК Характеристика,
	|		МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|	ИЗ
	|		Товары КАК Товары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|			ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|				И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|				И Товары.Характеристика = ЦеныНоменклатуры.Характеристика
	|				И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
	|				И Товары.ВалютаЦены = ЦеныНоменклатуры.Валюта
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Товары.Ссылка,
	|		Товары.НомерСтроки,
	|		ЦеныНоменклатуры.ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура,
	|		ЦеныНоменклатуры.Характеристика) КАК ПериодыЦенНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
	|			И ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|			И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ПериодыЦенНоменклатуры.Характеристика = ЦеныНоменклатуры.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыКурсовВалютПоДокументам.Ссылка,
	|	КурсыВалют.Валюта,
	|	КурсыВалют.Курс,
	|	КурсыВалют.Кратность
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабДокументы.Ссылка КАК Ссылка,
	|		МАКСИМУМ(КурсыВалют.Период) КАК Период,
	|		КурсыВалют.Валюта КАК Валюта
	|	ИЗ
	|		Документ.ДвижениеПродукцииИМатериалов КАК ТабДокументы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|			ПО &ВалютаЦены = КурсыВалют.Валюта
	|				И ТабДокументы.Дата >= КурсыВалют.Период
	|	ГДЕ
	|		ТабДокументы.Ссылка В(&МассивДокументов)
	|		И ТабДокументы.ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТабДокументы.Ссылка,
	|		КурсыВалют.Валюта) КАК ПериодыКурсовВалютПоДокументам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ПериодыКурсовВалютПоДокументам.Период = КурсыВалют.Период
	|			И ПериодыКурсовВалютПоДокументам.Валюта = КурсыВалют.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка						КАК Ссылка,
	|	ДанныеДокумента.Номер						КАК Номер,
	|	ДанныеДокумента.Дата						КАК Дата,
	|	ДанныеДокумента.Дата						КАК ДатаДокумента,
	|	ДанныеДокумента.Организация					КАК Организация,
	|	ДанныеДокумента.Организация.Префикс			КАК Префикс,
	|	ДанныеДокумента.Отправитель.Представление	КАК ПредставлениеПодразделения
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|	И ДанныеДокумента.ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка												КАК Ссылка,
	|	ТаблицаТовары.Номенклатура											КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное						КАК НоменклатураНаименование,
	|	ТаблицаТовары.Номенклатура." + КолонкаКодов + "						КАК НоменклатураКод,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное						КАК ХарактеристикаНаименование,
	|	ТаблицаТовары.Характеристика										КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения 							КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения 									КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения 							КАК ВидУпаковки,
	|	ВЫБОР КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|		1
	|	ИНАЧЕ
	|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
	|	КОНЕЦ																КАК КоличествоВОдномМесте,
	|	ТаблицаТовары.КоличествоУпаковок * &ТекстЗапросаВес					КАК МассаБрутто,
	|	ТаблицаТовары.КоличествоУпаковок									КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок 									КАК КоличествоМест,
	|	ТаблицаТовары.НомерСтроки											КАК НомерСтроки,
	|	ЛОЖЬ																КАК ЭтоВозвратнаяТара,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) 
	|		/ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) 
	|		* ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) 
	|		* ЕСТЬNULL(КурсыВалют.Курс, 1)
	|		/ ЕСТЬNULL(КурсыВалют.Кратность, 1) КАК ЧИСЛО(15, 2))			КАК Цена,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) 
	|		/ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) 
	|		* ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) 
	|		* ЕСТЬNULL(КурсыВалют.Курс, 1)
	|		/ ЕСТЬNULL(КурсыВалют.Кратность, 1) КАК ЧИСЛО(15, 2))) * ТаблицаТовары.КоличествоУпаковок КАК Сумма,
	|	ТаблицаТовары.Ссылка.Получатель.Представление                       КАК Получатель
	|
	|ИЗ
	|	Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
	|		ПО ТаблицаТовары.Ссылка = КурсыВалют.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
	|		ПО ТаблицаТовары.Ссылка = Цены.Ссылка
	|			И ТаблицаТовары.НомерСтроки = Цены.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка,
	|	Получатель";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаВес",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
			
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Цены.Упаковка",
			"ТаблицаТовары.Номенклатура"));
			
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
	
	Запрос.Текст = ТекстЗапроса;
	
	ВидЦены = Константы.ВидЦеныПлановойСтоимостиМатериаловРабот.Получить();
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВидЦены", ВидЦены);
	Запрос.УстановитьПараметр("ВалютаЦены", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидЦены, "ВалютаЦены"));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	// Пакет запросов:
	// 		[0] - Временная таблица по табличной части документа
	// 		[1] - Временная таблица по ценам номенклатуры табличной части
	// 		[2] - Временная таблица по курсам валют документов
	// 		[3] - Выборка по шапкам документов
	// 		[4] - Выборка по табличным частям документов

	РезультатПоШапке = МассивРезультатов[3];
	РезультатПоТабличнойЧасти = МассивРезультатов[4];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Функция получает данные для формирования печатной формы МХ - 1
//
Функция ПолучитьДанныеДляПечатнойФормыМХ1(ПараметрыПечати, МассивОбъектов) Экспорт 
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номер КАК Номер,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.Дата КАК ДатаДокумента,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Получатель КАК Склад,
	|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ТаблицаДокумента.Ссылка.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(ТаблицаДокумента.Ссылка.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (ТаблицаДокумента.Ссылка.Организация = РасчетСебестоимостиТоваровОрганизации.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (ТаблицаДокумента.Получатель = Склады.Ссылка)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В(&МассивДокументов)
	|	И ТаблицаДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства))
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой))
	|	И ТаблицаДокумента.Проведен
	|	И Склады.СкладОтветственногоХранения
	|	И ТаблицаДокумента.Организация <> Склады.Поклажедержатель
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	Аналитика.Склад КАК Склад,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасов.Количество КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Аналитика.Склад.УчетныйВидЦены КАК ВидЦены,
	|	Аналитика.Склад.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Аналитика.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Аналитика.Склад.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "Товары.Упаковка", "Товары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "Товары.Упаковка", "Товары.Номенклатура"));
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[6];
	РезультатПоСкладам = МассивРезультатов[7];
	РезультатПоТабличнойЧасти = МассивРезультатов[8];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоСкладам, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоСкладам,
		РезультатПоТабличнойЧасти);
		
	Возврат СтруктураДанныхДляПечати
	
КонецФункции

// Функция получает данные для формирования печатной формы отбора товаров из ячеек.
//
Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДокумента.Ссылка) КАК СсылкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ДанныеДокумента.Отправитель) КАК СкладПредставление,
	|	ДанныеДокумента.Отправитель КАК Склад,
	|	ПРЕДСТАВЛЕНИЕ(ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)) КАК ПомещениеПредставление,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ЛОЖЬ КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ДанныеДокумента.Отправитель КАК Справочник.Склады).ИспользоватьАдресноеХранениеСправочно
	|				И (НЕ ВЫРАЗИТЬ(ДанныеДокумента.Отправитель КАК Справочник.Склады).ИспользоватьАдресноеХранение
	|					ИЛИ ДанныеДокумента.Дата <ВЫРАЗИТЬ(ДанныеДокумента.Отправитель КАК Справочник.Склады).ДатаНачалаАдресногоХраненияОстатков)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользуетсяСправочноеХранение,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ДанныеДокумента.Отправитель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И ДанныеДокумента.Дата >= ВЫРАЗИТЬ(ДанныеДокумента.Отправитель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриОтгрузке
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НарушенаОрдернаяСхема,
	|	ВЫРАЗИТЬ(ДанныеДокумента.Отправитель КАК Справочник.Склады).ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры,
	|	ВЫРАЗИТЬ(ДанныеДокумента.Отправитель КАК Справочник.Склады).ИспользованиеРабочихУчастков КАК ИспользованиеРабочихУчастков
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивОбъектов)
	|	И ДанныеДокумента.ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Отправитель КАК Склад,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок КАК НаборУпаковок,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	(ТаблицаТовары.Ссылка В (&МассивОбъектов)
	|				И НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8)
	|				И НЕ ВЫРАЗИТЬ(ТаблицаТовары.Ссылка.Отправитель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриОтгрузке
	|			ИЛИ ТаблицаТовары.Ссылка.Дата < ВЫРАЗИТЬ(ТаблицаТовары.Ссылка.Отправитель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриОтгрузке)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Ссылка.Отправитель,
	|	МИНИМУМ(ТаблицаСерии.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ВЫРАЗИТЬ(ТаблицаСерии.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	ТаблицаСерии.Количество
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
	|	И ТаблицаСерии.Ссылка.ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))
	|	И (НЕ ВЫРАЗИТЬ(ТаблицаСерии.Ссылка.Отправитель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриОтгрузке
	|			ИЛИ ТаблицаТовары.Ссылка.Дата < ВЫРАЗИТЬ(ТаблицаСерии.Ссылка.Отправитель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриОтгрузке)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.НомерСтроки
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Ссылка.Отправитель КАК Справочник.Склады) КАК Склад,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ КАК Серия,
	|	ТаблицаТовары.НаборУпаковок КАК НаборУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Упаковка,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаТоваровСуммированная
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ,
	|	ТаблицаТовары.НаборУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ТаблицаТовары.Ссылка.Отправитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваровСуммированная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровСуммированная.Склад КАК Склад,
	|	ТаблицаТоваровСуммированная.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваровСуммированная.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровСуммированная.Характеристика КАК Характеристика,
	|	ТаблицаТоваровСуммированная.Серия КАК Серия,
	|	ТаблицаТоваровСуммированная.Номенклатура.Код КАК Код,
	|	ТаблицаТоваровСуммированная.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТоваровСуммированная.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ТаблицаТоваровСуммированная.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТоваровСуммированная.Серия.Наименование КАК ПредставлениеСерии,
	|	ТаблицаТоваровСуммированная.Количество КАК Количество,
	|	ТаблицаТоваровСуммированная.Количество КАК КоличествоУпаковок,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.Код, """") КАК ОсновнаяЯчейкаПредставление,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.Код, """") КАК ЯчейкаПредставление,
	|	ТаблицаТоваровСуммированная.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий КАК НастройкаИспользованияСерий,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Упаковка) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТоваровСуммированная
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТоваровСуммированная.Склад)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТоваровСуммированная.Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаТоваровСуммированная.Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваровСуммированная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровСуммированная.Склад КАК Склад,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ТаблицаТоваровСуммированная.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоВУпаковке,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Представление, ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Номенклатура.ЕдиницаИзмерения)) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТоваровСуммированная
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (ТаблицаТоваровСуммированная.Номенклатура = УпаковкиНоменклатуры.Владелец
	|				ИЛИ ТаблицаТоваровСуммированная.НаборУпаковок = УпаковкиНоменклатуры.Владелец)
	|			И (НЕ УпаковкиНоменклатуры.ПометкаУдаления)
	|			И ТаблицаТоваровСуммированная.Количество >= &ТекстЗапросаКоэффициентУпаковки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТоваровСуммированная.Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	КоличествоВУпаковке УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Склад)
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|	И НЕ ТаблицаТовары.Серия ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";
	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УпаковкиНоменклатуры",
			"ТаблицаТоваровСуммированная.Номенклатура"));
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов); 
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[3];
	РезультатПоУпаковкам		= МассивРезультатов[4];
	РезультатПоСериям			= МассивРезультатов[5];
	
	СтруктураДанныхДляПечати 	= Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", РезультатПоШапке);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", РезультатПоТабличнойЧасти);
	СтруктураДанныхДляПечати.Вставить("РезультатПоУпаковкам", РезультатПоУпаковкам);
	СтруктураДанныхДляПечати.Вставить("РезультатПоСериям", РезультатПоСериям);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Функция получает данные для формирования печатной формы М-11
//
Функция ПолучитьДанныеДляПечатнойФормыМ11(ПараметрыПечати, МассивДокументов) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.Ссылка                            КАК Ссылка,
	|	МИНИМУМ(Товары.НомерСтроки)              КАК НомерСтроки,
	|	Товары.Номенклатура                      КАК Номенклатура,
	|	Товары.Характеристика                    КАК Характеристика,
	|	Товары.Упаковка                          КАК Упаковка,
	|	СУММА(Товары.КоличествоУпаковок)         КАК КоличествоУпаковок,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ)   КАК ДатаПолученияЦены,
	|	Товары.Ссылка.ВидЦены                    КАК ВидЦены,
	|	Товары.Ссылка.ВидЦены.ВалютаЦены         КАК ВалютаЦены
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|	И Товары.Ссылка.ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыЦенНоменклатуры.Ссылка,
	|	ПериодыЦенНоменклатуры.НомерСтроки,
	|	ЦеныНоменклатуры.Цена,
	|	ЦеныНоменклатуры.Упаковка
	|ПОМЕСТИТЬ Цены
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.НомерСтроки КАК НомерСтроки,
	|		ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|		ЦеныНоменклатуры.Характеристика КАК Характеристика,
	|		МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|	ИЗ
	|		Товары КАК Товары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|			ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|				И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|				И Товары.Характеристика = ЦеныНоменклатуры.Характеристика
	|				И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
	|				И Товары.ВалютаЦены = ЦеныНоменклатуры.Валюта
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Товары.Ссылка,
	|		Товары.НомерСтроки,
	|		ЦеныНоменклатуры.ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура,
	|		ЦеныНоменклатуры.Характеристика) КАК ПериодыЦенНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
	|			И ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|			И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ПериодыЦенНоменклатуры.Характеристика = ЦеныНоменклатуры.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыКурсовВалютПоДокументам.Ссылка,
	|	КурсыВалют.Валюта,
	|	КурсыВалют.Курс,
	|	КурсыВалют.Кратность
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабДокументы.Ссылка КАК Ссылка,
	|		МАКСИМУМ(КурсыВалют.Период) КАК Период,
	|		КурсыВалют.Валюта КАК Валюта
	|	ИЗ
	|		Документ.ДвижениеПродукцииИМатериалов КАК ТабДокументы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|			ПО ТабДокументы.ВидЦены.ВалютаЦены = КурсыВалют.Валюта
	|				И ТабДокументы.Дата >= КурсыВалют.Период
	|	ГДЕ
	|		ТабДокументы.Ссылка В(&МассивДокументов)
	|		И ТабДокументы.ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТабДокументы.Ссылка,
	|		КурсыВалют.Валюта) КАК ПериодыКурсовВалютПоДокументам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ПериодыКурсовВалютПоДокументам.Период = КурсыВалют.Период
	|			И ПериодыКурсовВалютПоДокументам.Валюта = КурсыВалют.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабДокументы.Ссылка              КАК Ссылка,
	|	ТабДокументы.Номер               КАК Номер,
	|	ТабДокументы.Дата                КАК ДатаДокумента,
	|	ТабДокументы.Дата                КАК ДатаСоставления,
	|	ТабДокументы.Организация         КАК Организация,
	|	ТабДокументы.Организация.Префикс КАК Префикс,
	|	ТабДокументы.Получатель          КАК Подразделение,
	|	ТабДокументы.ВидЦены             КАК УчетныйВидЦены,
	|	ТабДокументы.ВидЦены.ВалютаЦены  КАК УчетныйВидЦеныВалютаЦены
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ТабДокументы
	|ГДЕ
	|	ТабДокументы.Ссылка В(&МассивДокументов)
	|	И ТабДокументы.ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка                             КАК Ссылка,
	|	Товары.НомерСтроки                        КАК НомерСтроки,
	|	Товары.Ссылка.Отправитель                 КАК Склад,
	|	Товары.Номенклатура                       КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное    КАК НоменклатураНаименование,
	|	Товары.Номенклатура.Код                   КАК НоменклатурныйНомерКод,
	|	Товары.Номенклатура.Артикул               КАК НоменклатурныйНомерАртикул,
	|	Товары.Характеристика.НаименованиеПолное  КАК Характеристика,
	|	ВЫБОР КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Товары.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения  КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения           КАК ЕдиницаИзмеренияКод,
	|	Товары.КоличествоУпаковок                  КАК Количество,
	|
	|	ВЫРАЗИТЬ(Товары.Ссылка.Отправитель КАК Справочник.Склады).ТекущийОтветственный           КАК КладовщикОтправитель,
	|	ВЫРАЗИТЬ(Товары.Ссылка.Отправитель КАК Справочник.Склады).ТекущаяДолжностьОтветственного КАК ДолжностьКладовщикаОтправителя,
	|
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) 
	|		/ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) 
	|		* ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) 
	|		* ЕСТЬNULL(КурсыВалют.Курс, 1)
	|		/ ЕСТЬNULL(КурсыВалют.Кратность, 1) КАК ЧИСЛО(15, 2))) * Товары.КоличествоУпаковок КАК Сумма,
	|
	|	ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) 
	|		/ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) 
	|		* ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) 
	|		* ЕСТЬNULL(КурсыВалют.Курс, 1)
	|		/ ЕСТЬNULL(КурсыВалют.Кратность, 1) КАК ЧИСЛО(15, 2)) КАК Цена
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
	|		ПО Товары.Ссылка = КурсыВалют.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
	|		ПО Товары.Ссылка = Цены.Ссылка
	|			И Товары.НомерСтроки = Цены.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(ДолжностьКладовщикаОтправителя), МАКСИМУМ(КладовщикОтправитель)
	|ПО
	|	Ссылка,
	|	Склад");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Цены.Упаковка",
			"Товары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();
	// Пакет запросов:
	// 		[0] - Временная таблица по табличной части документа
	// 		[1] - Временная таблица по ценам номенклатуры табличной части
	// 		[2] - Временная таблица по курсам валют документов
	// 		[3] - Выборка по шапкам документов
	// 		[4] - Выборка по табличным частям документов
	
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПакетаЗапросов[3],
		РезультатПакетаЗапросов[4]);
	
КонецФункции

Функция ПечатьПередачаМатериаловВПроизводство(МассивОбъектов, ОбъектыПечати)

	ДопКолонка = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьДопКолонку = ЗначениеЗаполнено(ДопКолонка);

	ЗапросПоДокументам = Новый Запрос;
	ЗапросПоДокументам.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ЗапросПоДокументам.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                             КАК Ссылка,
	|	ТаблицаДокумента.Номер                              КАК Номер,
	|	ТаблицаДокумента.Дата                               КАК Дата,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаДокумента.Отправитель)   КАК Склад,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаДокумента.Получатель)	КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ТаблицаДокумента.Организация)   КАК Организация,
	|	ТаблицаДокумента.Организация.Префикс                КАК Префикс,
	|	ТаблицаДокумента.Товары.(
	|
	|		НомерСтроки КАК НомерСтроки,
	|	" + ?(ВыводитьДопКолонку, "Номенклатура." + ДопКолонка +" КАК ДопКолонка,", "") + "
	|		Номенклатура.НаименованиеПолное     КАК Номенклатура,
	|		Характеристика.НаименованиеПолное   КАК Характеристика,
	|		ВЫБОР
	|			КОГДА Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|				ПРЕДСТАВЛЕНИЕССЫЛКИ(Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ 
	|				ПРЕДСТАВЛЕНИЕССЫЛКИ(Упаковка)
	|		КОНЕЦ              КАК Упаковка,
	|		КоличествоУпаковок КАК Количество
	|
	|	) КАК ТаблицаТовары
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В(&МассивОбъектов)
	|	И ТаблицаДокумента.ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата, Ссылка, НомерСтроки
	|";
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПередачаМатериаловВПроизводство";

	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента = СписокОпераций().НайтиПоЗначению(Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство).Представление;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ДвижениеПродукцииИМатериалов.ПФ_MXL_ПередачаМатериаловВПроизводство");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьПодписи   = Макет.ПолучитьОбласть("Подписи");
	Если ВыводитьДопКолонку Тогда
		ОбластьСтрока       = Макет.ПолучитьОбласть("СтрокаДопКолонка");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыДопКолонка");
	Иначе
		ОбластьСтрока       = Макет.ПолучитьОбласть("Строка");
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	КонецЕсли;
	
	ПервыйДокумент = Истина;
	ВыборкаДокументы = ЗапросПоДокументам.Выполнить().Выбрать();
	Пока ВыборкаДокументы.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Вывод заголовка.
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаДокументы);
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьЗаголовок, ВыборкаДокументы.Ссылка);
		ТабДокумент.Вывести(ОбластьЗаголовок);
		
		// Вывод шапки.
		Если ВыводитьДопКолонку Тогда
			ОбластьШапкаТаблицы.Параметры.ДопКолонка = ДопКолонка;
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьШапкаТаблицы);
		
		// Вывод строк документа.
		
		ВыборкаСтроки = ВыборкаДокументы.ТаблицаТовары.Выбрать();
		Пока ВыборкаСтроки.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаСтроки);
			
			ОбластьСтрока.Параметры.Номенклатура = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаСтроки.Номенклатура,
				ВыборкаСтроки.Характеристика);
			
			ТабДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
		// Вывод подвала.
		ТабДокумент.Вывести(ОбластьПодписи);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);

	КонецЦикла;

	Возврат ТабДокумент;

КонецФункции

// Функция получает данные для формирования печатной формы МХ - 3
//
Функция ПолучитьДанныеДляПечатнойФормыМХ3(ПараметрыПечати, МассивОбъектов) Экспорт 
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номер КАК Номер,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.Дата КАК ДатаДокумента,
	|	ТаблицаДокумента.Организация КАК Организация,
	|	ТаблицаДокумента.Отправитель КАК Склад,
	|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ТаблицаДокумента.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(ТаблицаДокумента.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (ТаблицаДокумента.Организация = РасчетСебестоимостиТоваровОрганизации.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (ТаблицаДокумента.Отправитель = Склады.Ссылка)
	|ГДЕ
	|	ТаблицаДокумента.Ссылка В(&МассивДокументов)
	|	И ТаблицаДокумента.ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))
	|	И ТаблицаДокумента.Проведен
	|	И Склады.СкладОтветственногоХранения
	|	И ТаблицаДокумента.Организация <> Склады.Поклажедержатель
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	Аналитика.Склад КАК Склад,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасов.Количество КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Аналитика.Склад.УчетныйВидЦены КАК ВидЦены,
	|	Аналитика.Склад.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Аналитика.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Аналитика.Склад.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "Товары.Упаковка", "Товары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "Товары.Упаковка", "Товары.Номенклатура"));
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[6];
	РезультатПоСкладам = МассивРезультатов[7];
	РезультатПоТабличнойЧасти = МассивРезультатов[8];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоСкладам, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоСкладам,
		РезультатПоТабличнойЧасти);
		
	Возврат СтруктураДанныхДляПечати
	
КонецФункции

#КонецОбласти

#Область ТекущиеДела

// Заполняет список текущих дел пользователя.
// Описание параметров процедуры см. в ТекущиеДелаСлужебный.НоваяТаблицаТекущихДел()
//
Процедура ПриЗаполненииСпискаТекущихДел(ТекущиеДела) Экспорт
	
	ПриЗаполненииСпискаТекущихДел_ПередачиМатериаловВПроизводство(ТекущиеДела);
	
КонецПроцедуры

Процедура ПриЗаполненииСпискаТекущихДел_ПередачиМатериаловВПроизводство(ТекущиеДела)

	ИмяФормы = "Документ.ДвижениеПродукцииИМатериалов.Форма.РабочееМесто";

	ОбщиеПараметрыЗапросов = ТекущиеДелаСлужебный.ОбщиеПараметрыЗапросов();
	
	// Определим доступны ли текущему пользователю показатели группы
	Доступность =
		(ОбщиеПараметрыЗапросов.ЭтоПолноправныйПользователь
			Или ПравоДоступа("Добавление",  Метаданные.Документы.ДвижениеПродукцииИМатериалов))
		И ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеПроизводством2_2");
		
	Если НЕ Доступность Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторДела = "ПередачиМатериаловВПроизводство22";
	ПредставлениеДела = НСтр("ru = 'Передачи материалов в производство'");
	Если ПолучитьФункциональнуюОпцию("ИспользуетсяУправлениеПроизводством21и22") Тогда
		ПредставлениеДела = НСтр("ru = 'Передачи материалов в производство 2.2'");
	КонецЕсли; 
	
	// Расчет показателей
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ОбщийЗапрос.РаспоряженийВсего)     КАК ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеВсегоВРаботе,
	|	СУММА(ОбщийЗапрос.РаспоряженийНаСегодня) КАК ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеНаСегодня
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(1) КАК РаспоряженийВсего,
	|		0 КАК РаспоряженийНаСегодня
	|	ИЗ
	|		РегистрНакопления.ЗаказыМатериаловВПроизводство.Остатки(
	|				,
	|				Распоряжение ССЫЛКА Документ.ЗаказМатериаловВПроизводство
	|						И Получатель ССЫЛКА Справочник.Склады
	|					ИЛИ Распоряжение ССЫЛКА Документ.ЭтапПроизводства2_2) КАК ЗапросПоРаспоряжениямВсего
	|	ГДЕ
	|		ЗапросПоРаспоряжениямВсего.КОформлениюОстаток > 0
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗапросПоРаспоряжениямВсего.Распоряжение,
	|		ЗапросПоРаспоряжениямВсего.Склад
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		0,
	|		СУММА(1)
	|	ИЗ
	|		РегистрНакопления.ЗаказыМатериаловВПроизводство.Остатки(
	|				&ДатаОтгрузки,
	|				Распоряжение ССЫЛКА Документ.ЗаказМатериаловВПроизводство
	|						И Получатель ССЫЛКА Справочник.Склады
	|					ИЛИ Распоряжение ССЫЛКА Документ.ЭтапПроизводства2_2) КАК ЗапросПоРаспоряжениямНаСегодня
	|	ГДЕ
	|		ЗапросПоРаспоряжениямНаСегодня.КОформлениюОстаток > 0
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗапросПоРаспоряжениямНаСегодня.Распоряжение,
	|		ЗапросПоРаспоряжениямНаСегодня.Склад) КАК ОбщийЗапрос";
	
	Запрос.УстановитьПараметр("ДатаОтгрузки", КонецДня(ОбщиеПараметрыЗапросов.ТекущаяДата) + 1);
	Результат = ТекущиеДелаСлужебный.ЧисловыеПоказателиТекущихДел(Запрос, ОбщиеПараметрыЗапросов);
	
	// Заполнение дел.
	// ПередачиМатериаловВПроизводство
	ДелоРодитель = ТекущиеДела.Добавить();
	ДелоРодитель.Идентификатор  = ИдентификаторДела;
	ДелоРодитель.Представление  = ПредставлениеДела;
	ДелоРодитель.ЕстьДела       = Результат.ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеВсегоВРаботе > 0;
	ДелоРодитель.Владелец       = Метаданные.Подсистемы.Производство;
	
	// ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеВсегоВРаботе
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ДатаОтгрузки", ОбщиеПараметрыЗапросов.ПустаяДата);
	ПараметрыОтбора.Вставить("Склад", Справочники.Склады.ПустаяСсылка());
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", ПараметрыОтбора);
	ПараметрыФормы.Вставить("ИмяТекущейСтраницы", "СтраницаОформлениеПередачиВПроизводство");
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеВсегоВРаботе2_2";
	Дело.ЕстьДела       = Результат.ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеВсегоВРаботе > 0;
	Дело.Представление  = НСтр("ru = 'Распоряжения на оформление документов в работе'");
	Дело.Количество     = Результат.ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеВсегоВРаботе;
	Дело.Важное         = Ложь;
	Дело.Форма          = ИмяФормы;
	Дело.ПараметрыФормы = ПараметрыФормы;
	Дело.Владелец       = ИдентификаторДела;
	
	// ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеНаСегодня
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ДатаОтгрузки", ОбщиеПараметрыЗапросов.ТекущаяДата);
	ПараметрыОтбора.Вставить("Склад", Справочники.Склады.ПустаяСсылка());
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", ПараметрыОтбора);
	ПараметрыФормы.Вставить("ИмяТекущейСтраницы", "СтраницаОформлениеПередачиВПроизводство");
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеНаСегодня2_2";
	Дело.ЕстьДела       = Результат.ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеНаСегодня > 0;
	Дело.Представление  = НСтр("ru = 'Распоряжения на оформление документов на сегодня'");
	Дело.Количество     = Результат.ПередачиМатериаловВПроизводствоРаспоряженияНаОформлениеНаСегодня;
	Дело.Важное         = Ложь;
	Дело.Форма          = ИмяФормы;
	Дело.ПараметрыФормы = ПараметрыФормы;
	Дело.Владелец       = ИдентификаторДела;
	
КонецПроцедуры

#КонецОбласти

#Область РабочееМесто

Процедура ПолучитьДанныеРабочегоМеста(Параметры, АдресХранилища) Экспорт

	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("СписокОформлениеПередачиИзПодразделения", ТекстЗапросаСписокОформлениеПередачиИзПодразделения(Параметры));
	
	ПоместитьВоВременноеХранилище(СтруктураДанных, АдресХранилища);
	
КонецПроцедуры

Функция ТекстЗапросаСписокОформлениеПередачиИзПодразделения(Параметры)

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыКОформлениюПоступления.ДокументПоступления,
	|	ТоварыКОформлениюПоступления.Номенклатура,
	|	ТоварыКОформлениюПоступления.Характеристика,
	|	ТоварыКОформлениюПоступления.Склад,
	|	ТоварыКОформлениюПоступления.КОформлениюКонечныйОстаток,
	|	ТоварыКОформлениюПоступления.КОформлениюПриход
	|ПОМЕСТИТЬ ТоварыКОформлениюПоступленияПоНоменклатуре
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюПоступления.ОстаткиИОбороты(
	|			,
	|			,
	|			,
	|			,
	|			ДокументПоступления ССЫЛКА Документ.ЭтапПроизводства2_2
	|				ИЛИ ДокументПоступления ССЫЛКА Документ.ДвижениеПродукцииИМатериалов) КАК ТоварыКОформлениюПоступления
	|//ТекстСоединениеУсловияПодразделение_ТоварыКОформлениюПоступления//
	|	
	|ГДЕ
	|	(ТоварыКОформлениюПоступления.КОформлениюКонечныйОстаток <> 0
	|			ИЛИ ТоварыКОформлениюПоступления.КОформлениюПриход <> 0)
	|	И &ТекстУсловияПодразделение_ТоварыКОформлениюПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	ТоварыКОформлениюПоступления.ДокументПоступления КАК ДокументПоступления,
	|	ТоварыКОформлениюПоступления.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлениюПоступления.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.ДокументПоступления ССЫЛКА Документ.ДвижениеПродукцииИМатериалов
	|			ТОГДА ВЫРАЗИТЬ(ТоварыКОформлениюПоступления.ДокументПоступления КАК Документ.ДвижениеПродукцииИМатериалов).ХозяйственнаяОперация
	|		КОГДА НЕ ТаблицаЭкономия.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства)
	|	КОНЕЦ КАК ХозяйственнаяОперация
	|ПОМЕСТИТЬ ОперацияПоНоменклатуре
	|ИЗ
	|	ТоварыКОформлениюПоступленияПоНоменклатуре КАК ТоварыКОформлениюПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТаблицаЭкономия
	|		ПО (ТаблицаЭкономия.Ссылка = ТоварыКОформлениюПоступления.ДокументПоступления)
	|			И (ТаблицаЭкономия.Номенклатура = ТоварыКОформлениюПоступления.Номенклатура)
	|			И (ТаблицаЭкономия.Характеристика = ТоварыКОформлениюПоступления.Характеристика)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоступления,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОперацияПоНоменклатуре.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТоварыКОформлениюПоступления.ДокументПоступления,
	|	ТоварыКОформлениюПоступления.Номенклатура,
	|	ТоварыКОформлениюПоступления.Характеристика,
	|	ТоварыКОформлениюПоступления.ДокументПоступления КАК ДокументПоступления1,
	|	ЕСТЬNULL(ЭтапПроизводства2_2.Номер, ДвижениеПродукцииИМатериалов.Номер) КАК Номер,
	|	ЕСТЬNULL(ЭтапПроизводства2_2.Дата, ДвижениеПродукцииИМатериалов.Дата) КАК Дата,
	|	ЕСТЬNULL(ЭтапПроизводства2_2.Организация, ДвижениеПродукцииИМатериалов.Организация) КАК Организация,
	|	ЕСТЬNULL(ЭтапПроизводства2_2.Ответственный, ДвижениеПродукцииИМатериалов.Ответственный) КАК Ответственный,
	|	ТоварыКОформлениюПоступления.Склад,
	|	ЕСТЬNULL(ЭтапПроизводства2_2.Подразделение, ДвижениеПродукцииИМатериалов.Отправитель) КАК Отправитель,
	|	ВЫБОР
	|		КОГДА &НакладнаяЯвляетсяРаспоряжением
	|				ИЛИ НЕ ТоварыКОформлениюПоступления.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ ТоварыКОформлениюПоступления.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|					И ТоварыКОформлениюПоступления.Склад.ДатаНачалаОрдернойСхемыПриПоступлении > &ТекущаяДата
	|			ТОГДА 4
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюКонечныйОстаток = 0
	|				И ТоварыКОформлениюПоступления.КОформлениюПриход > 0
	|			ТОГДА 0
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюПриход > 0
	|			ТОГДА 3
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СостояниеОрдера
	|ПОМЕСТИТЬ ТоварыКОформлениюПоступления
	|ИЗ
	|	ТоварыКОформлениюПоступленияПоНоменклатуре КАК ТоварыКОформлениюПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
	|		ПО (ЭтапПроизводства2_2.Ссылка = ТоварыКОформлениюПоступления.ДокументПоступления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов КАК ДвижениеПродукцииИМатериалов
	|		ПО (ДвижениеПродукцииИМатериалов.Ссылка = ТоварыКОформлениюПоступления.ДокументПоступления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОперацияПоНоменклатуре КАК ОперацияПоНоменклатуре
	|		ПО (ОперацияПоНоменклатуре.ДокументПоступления = ТоварыКОформлениюПоступления.ДокументПоступления)
	|			И (ОперацияПоНоменклатуре.Номенклатура = ТоварыКОформлениюПоступления.Номенклатура)
	|			И (ОперацияПоНоменклатуре.Характеристика = ТоварыКОформлениюПоступления.Характеристика)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Распоряжение,
	|	ВложенныйЗапрос.Ссылка,
	|	ВложенныйЗапрос.Номер,
	|	ВложенныйЗапрос.Дата,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.Ответственный,
	|	ВложенныйЗапрос.Получатель,
	|	ВложенныйЗапрос.Отправитель,
	|	ВложенныйЗапрос.ХозяйственнаяОперация,
	|	&ПодстановкаСостояниеНакладной КАК СостояниеНакладной,
	|	&ПодстановкаСостояниеОрдера    КАК СостояниеОрдера
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаРаспоряжения.Операция                    КАК ХозяйственнаяОперация,
	|		ТаблицаРаспоряжения.Распоряжение                КАК Распоряжение,
	|		ТаблицаРаспоряжения.Распоряжение                КАК Ссылка,
	|		ТаблицаРаспоряжения.Распоряжение.Номер          КАК Номер,
	|		ТаблицаРаспоряжения.Распоряжение.Дата           КАК Дата,
	|		ТаблицаРаспоряжения.Распоряжение.Организация    КАК Организация,
	|		ТаблицаРаспоряжения.Распоряжение.Ответственный  КАК Ответственный,
	|		ТаблицаРаспоряжения.Получатель                  КАК Получатель,
	|		ТаблицаРаспоряжения.Отправитель                 КАК Отправитель,
	|		ТаблицаРаспоряжения.КоличествоКонечныйОстаток   КАК КоличествоОстаток,
	|		ТаблицаРаспоряжения.КоличествоРасход            КАК КоличествоРасход,
	|		ВЫБОР
	|			КОГДА &НакладнаяЯвляетсяРаспоряжением
	|				ИЛИ НЕ ВЫРАЗИТЬ(ТаблицаРаспоряжения.Получатель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ ВЫРАЗИТЬ(ТаблицаРаспоряжения.Получатель КАК Справочник.Склады).ИспользоватьОрдернуюСхемуПриПоступлении
	|					И ВЫРАЗИТЬ(ТаблицаРаспоряжения.Получатель КАК Справочник.Склады).ДатаНачалаОрдернойСхемыПриПоступлении > &ТекущаяДата
	|				ТОГДА 4 
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК СостояниеОрдера1,
	|		NULL КАК СостояниеОрдера2
	|	ИЗ
	|		РегистрНакопления.РаспоряженияНаПередачуИзПроизводства.ОстаткиИОбороты(
	|				,
	|				,
	|				,
	|				,
	|				Отправитель = &Подразделение
	|					ИЛИ &Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ТаблицаРаспоряжения
	|	ГДЕ
	|		ТаблицаРаспоряжения.КоличествоКонечныйОстаток > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыКОформлениюПоступления.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ТоварыКОформлениюПоступления.ДокументПоступления   КАК Распоряжение,
	|		ТоварыКОформлениюПоступления.ДокументПоступления   КАК Ссылка,
	|		ТоварыКОформлениюПоступления.Номер                 КАК Номер,
	|		ТоварыКОформлениюПоступления.Дата                  КАК Дата,
	|		ТоварыКОформлениюПоступления.Организация           КАК Организация,
	|		ТоварыКОформлениюПоступления.Ответственный         КАК Ответственный,
	|		ТоварыКОформлениюПоступления.Склад                 КАК Получатель,
	|		ТоварыКОформлениюПоступления.Отправитель           КАК Отправитель,
	|		0                                                  КАК КоличествоОстаток,
	|		0                                                  КАК КоличествоРасход,
	|		0                                                  КАК СостояниеОрдера1,
	|		ТоварыКОформлениюПоступления.СостояниеОрдера       КАК СостояниеОрдера2
	|	ИЗ
	|		ТоварыКОформлениюПоступления КАК ТоварыКОформлениюПоступления) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Распоряжение,
	|	ВложенныйЗапрос.Ссылка,
	|	ВложенныйЗапрос.Номер,
	|	ВложенныйЗапрос.Дата,
	|	ВложенныйЗапрос.ХозяйственнаяОперация,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.Ответственный,
	|	ВложенныйЗапрос.Получатель,
	|	ВложенныйЗапрос.Отправитель
	|ИМЕЮЩИЕ
	|	(&ПодстановкаСостояниеНакладной В(1,2,3) ИЛИ &ПодстановкаСостояниеОрдера В(1,2,3))
	|	И (&СостояниеНакладной        = НЕОПРЕДЕЛЕНО ИЛИ &ПодстановкаСостояниеНакладной = &СостояниеНакладной)
	|	И (&СостояниеПриходногоОрдера = НЕОПРЕДЕЛЕНО ИЛИ &ПодстановкаСостояниеОрдера    = &СостояниеПриходногоОрдера)";
	
	ПодстановкаСостояниеНакладной =
	"ВЫБОР КОГДА ВложенныйЗапрос.Распоряжение ССЫЛКА Документ.ДвижениеПродукцииИМатериалов ТОГДА
	|			4
	|		КОГДА СУММА(ВложенныйЗапрос.КоличествоРасход) = 0 И СУММА(ВложенныйЗапрос.КоличествоОстаток) > 0 ТОГДА
	|			1
	|		КОГДА СУММА(ВложенныйЗапрос.КоличествоОстаток) > 0 ТОГДА
	|			2
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ";
	
	ПодстановкаСостояниеОрдера =
	"ВЫБОР КОГДА НЕ МАКСИМУМ(ВложенныйЗапрос.СостояниеОрдера2) ЕСТЬ NULL ТОГДА
	|			МАКСИМУМ(ВложенныйЗапрос.СостояниеОрдера2)
	|		ИНАЧЕ
	|			МАКСИМУМ(ВложенныйЗапрос.СостояниеОрдера1)
	|	КОНЕЦ";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПодстановкаСостояниеНакладной", ПодстановкаСостояниеНакладной);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПодстановкаСостояниеОрдера",    ПодстановкаСостояниеОрдера);
	
	ТекстУсловияПодразделение_ТоварыКОформлениюПоступления = "";
	ТекстСоединениеУсловияПодразделение_ТоварыКОформлениюПоступления = "";
	
	Если ЗначениеЗаполнено(Параметры.ОтборПодразделение) Тогда
		ТекстСоединениеУсловияПодразделение_ТоварыКОформлениюПоступления = 
		"		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
		|		ПО (ЭтапПроизводства2_2.Ссылка = ТоварыКОформлениюПоступления.ДокументПоступления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов КАК ДвижениеПродукцииИМатериалов
		|		ПО (ДвижениеПродукцииИМатериалов.Ссылка = ТоварыКОформлениюПоступления.ДокументПоступления)";
		
		ТекстУсловияПодразделение_ТоварыКОформлениюПоступления = 
		"И (ЕСТЬNULL(ЭтапПроизводства2_2.Подразделение, ДвижениеПродукцииИМатериалов.Отправитель) = &Подразделение
		|	ИЛИ &Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
					"И &ТекстУсловияПодразделение_ТоварыКОформлениюПоступления", 
					ТекстУсловияПодразделение_ТоварыКОформлениюПоступления);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
					"//ТекстСоединениеУсловияПодразделение_ТоварыКОформлениюПоступления//", 
					ТекстСоединениеУсловияПодразделение_ТоварыКОформлениюПоступления);
	
	НакладнаяЯвляетсяРаспоряжением = ЗакупкиСервер.РаспоряжениеНаПриемкуТовараНакладная(Неопределено);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Подразделение", Параметры.ОтборПодразделение);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("НакладнаяЯвляетсяРаспоряжением", НакладнаяЯвляетсяРаспоряжением);
	
	СостояниеПриходногоОрдера = ?(ЗначениеЗаполнено(Параметры.ОтборСостояниеПриходногоОрдера), Число(Параметры.ОтборСостояниеПриходногоОрдера), Неопределено);
	Запрос.УстановитьПараметр("СостояниеПриходногоОрдера", СостояниеПриходногоОрдера);
	
	СостояниеНакладной = ?(ЗначениеЗаполнено(Параметры.ОтборСостояниеНакладной), Число(Параметры.ОтборСостояниеНакладной), Неопределено);
	Запрос.УстановитьПараметр("СостояниеНакладной", СостояниеНакладной);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция ПредставлениеПолей(Объект) Экспорт

	ХозяйственнаяОперация = Объект.ХозяйственнаяОперация;
	
	ПредставлениеПолей = Новый Структура;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой Тогда
		ПредставлениеПолей.Вставить("Товары", НСтр("ru = 'Продукция'"));
	Иначе
		ПредставлениеПолей.Вставить("Товары", НСтр("ru = 'Материалы'"));
	КонецЕсли;

	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства Тогда
		
		ТипПолучателя = "Склад";
		ТипОтправителя = "Подразделение";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой Тогда
		
		ТипПолучателя = "Склад";
		ТипОтправителя = "Кладовая";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства Тогда
		
		ТипПолучателя = "Склад";
		ТипОтправителя = "Подразделение";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой Тогда
		
		ТипПолучателя = "Склад";
		ТипОтправителя = "Кладовая";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство Тогда
		
		ТипОтправителя = "Склад";
		ТипПолучателя  = "Подразделение";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
		
		ТипОтправителя = "Склад";
		ТипПолучателя  = "Кладовая";
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеВПроизводстве Тогда
		
		ТипОтправителя = "Кладовая";
		ТипПолучателя = "Кладовая";
		
	КонецЕсли;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой 
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой Тогда
		ПолучательЗаголовок = НСтр("ru = 'Склад'");
		Если ТипОтправителя = "Кладовая" Тогда
			ОтправительЗаголовок = НСтр("ru = 'Цеховая кладовая'");
		Иначе	
			ОтправительЗаголовок = НСтр("ru = 'Подразделение'");
		КонецЕсли; 
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
		ОтправительЗаголовок = НСтр("ru = 'Склад'");
		Если ТипПолучателя = "Кладовая" Тогда
			ПолучательЗаголовок = НСтр("ru = 'Цеховая кладовая'");
		Иначе	
			ПолучательЗаголовок = НСтр("ru = 'Подразделение'");
		КонецЕсли; 
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
		ОтправительЗаголовок = НСтр("ru = 'Отправитель'");
		ПолучательЗаголовок = НСтр("ru = 'Получатель'");
	КонецЕсли;
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой Тогда
		
		Если ТипОтправителя = "Кладовая" Тогда
			ОтправительПодсказка = НСтр("ru = 'Цеховая кладовая, из которой передается продукция.'");
		Иначе
			ОтправительПодсказка = НСтр("ru = 'Подразделение, которое выпустило продукцию.'");
		КонецЕсли; 
		
		ПолучательПодсказка = НСтр("ru = 'Склад, на который передается выпущенная продукция.'");
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой Тогда
		
		Если ТипОтправителя = "Кладовая" Тогда
			ОтправительПодсказка = НСтр("ru = 'Цеховая кладовая, из которой возвращаются материалы.'");
		Иначе
			ОтправительПодсказка = НСтр("ru = 'Подразделение, с которого возвращаются материалы.'");
		КонецЕсли;
		
		ПолучательПодсказка = НСтр("ru = 'Склад, который получает материалы.'");
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
		Или Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
		
		ОтправительПодсказка = НСтр("ru = 'Склад, с которого передаются материалы.'");
		
		Если ТипПолучателя = "Кладовая" Тогда
			ПолучательПодсказка = НСтр("ru = 'Цеховая кладовая, в которую передаются материалы.'");
		Иначе
			ПолучательПодсказка = НСтр("ru = 'Подразделение, которое получает материалы.'");
		КонецЕсли;
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеВПроизводстве Тогда
		
		ОтправительПодсказка = НСтр("ru = 'Цеховая кладовая, из которой передаются материалы.'");
		ПолучательПодсказка = НСтр("ru = 'Цеховая кладовая, в которую передаются материалы.'");
		
	КонецЕсли;
	
	ПредставлениеПолей.Вставить("Отправитель", ОтправительЗаголовок);
	ПредставлениеПолей.Вставить("Получатель", ПолучательЗаголовок);
	ПредставлениеПолей.Вставить("ОтправительПодсказка", ОтправительПодсказка);
	ПредставлениеПолей.Вставить("ПолучательПодсказка", ПолучательПодсказка);
	ПредставлениеПолей.Вставить("ТипОтправителя", ТипОтправителя);
	ПредставлениеПолей.Вставить("ТипПолучателя", ТипПолучателя);
	
	Возврат ПредставлениеПолей;
	
КонецФункции

Функция ПустыеЗначенияЗаказов() Экспорт
	
	ПустыеЗначенияЗаказов = Новый Массив;
	ПустыеЗначенияЗаказов.Добавить(Неопределено);
	ПустыеЗначенияЗаказов.Добавить(Документы.ЗаказМатериаловВПроизводство.ПустаяСсылка());
	ПустыеЗначенияЗаказов.Добавить(Документы.ЭтапПроизводства2_2.ПустаяСсылка());

	Возврат ПустыеЗначенияЗаказов;

КонецФункции

Процедура ОтвязатьОтРаспоряжений(Объект) Экспорт
	
	Объект.Распоряжение = Неопределено;
	
	Для Каждого ТекСтрока Из Объект.Товары Цикл
		
		ТекСтрока.КодСтроки = 0;
		ТекСтрока.Распоряжение = Неопределено;
		ТекСтрока.Назначение = Неопределено;
		ТекСтрока.НазначениеОтправителя = Неопределено;
		
	КонецЦикла;
	
	Для Каждого ТекСтрока Из Объект.Серии Цикл
		
		ТекСтрока.Назначение = Неопределено;
		ТекСтрока.НазначениеОтправителя = Неопределено;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьУсловноеОформлениеОперации(УсловноеОформление, ИмяПоляОперация = "ХозяйственнаяОперация", ПутьКРеквизитуОперация = "ХозяйственнаяОперация") Экспорт

	СписокОпераций = СписокОпераций();
	Для каждого ИмяИПредставление Из СписокОпераций Цикл
		ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();

		ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ИмяПоляОперация);

		ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКРеквизитуОперация);
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = ИмяИПредставление.Значение;
		
		ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", ИмяИПредставление.Представление);	
	КонецЦикла; 
	
КонецПроцедуры

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
//	МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
//	НовыйСтатус - Строка - Имя нового статуса
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Запрос - Запрос проверки перед сменой статуса
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыДвиженияПродукцииИМатериалов[НовыйСтатус];
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка КАК Ссылка,
	|	ТаблицаДокументов.Статус КАК ТекущийСтатус,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
	|	ПРЕДСТАВЛЕНИЕ(&Статус) КАК ПредставлениеНовогоСтатуса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументов.Статус = &Статус
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СтатусСовпадает,
	|	ТаблицаДокументов.Проведен КАК Проведен,
	|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
	|	ИСТИНА КАК ЗаписьПроведением
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивДокументов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
//	ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	НовыйСтатус - Перечисление - Новый статус
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Булево - Истина, в случае успешного завершения проверки
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Возврат Истина;
	
КонецФункции

Функция СозданиеНаОснованииПроверкаОтгрузить()
	
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТоварыЗаказа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов КАК ТаблицаДокумента
		|			ПО ТаблицаДокумента.Ссылка = ТоварыЗаказа.Ссылка
		|ГДЕ
		|	ТаблицаДокумента.ПоРаспоряжениям = Ложь
		|	И ТаблицаДокумента.Ссылка В(&МассивСсылок)
		|	И ТаблицаДокумента.Проведен
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТоварыЗаказа
		|ГДЕ
		|	ТоварыЗаказа.ВариантОбеспечения В(
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
		|	И ТоварыЗаказа.Ссылка В(&МассивСсылок)
		|	И ТоварыЗаказа.Ссылка.Проведен
		|	И (НЕ ТоварыЗаказа.Склад.ЦеховаяКладовая
		|		ИЛИ ТоварыЗаказа.Склад.Подразделение <> ТоварыЗаказа.Ссылка.Подразделение)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.ЗаказМатериаловВПроизводство.Товары КАК ТоварыЗаказа
		|ГДЕ
		|	ТоварыЗаказа.ВариантОбеспечения В(
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
		|	И ТоварыЗаказа.Ссылка В(&МассивСсылок)
		|	И НЕ ТоварыЗаказа.Отменено
		|	И ТоварыЗаказа.Ссылка.Проведен
		|
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция СозданиеНаОснованииПроверкаНаличияНеизрасходованныхМатериалов()
	
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК ТоварыЗаказа
		|ГДЕ
		|	НЕ ТоварыЗаказа.СписатьНаРасходы
		|	И ТоварыЗаказа.Ссылка В(&МассивСсылок)
		|	И ТоварыЗаказа.Ссылка.Проведен
		|	И (НЕ ТоварыЗаказа.Склад.ЦеховаяКладовая
		|		ИЛИ ТоварыЗаказа.Склад.Подразделение <> ТоварыЗаказа.Ссылка.Подразделение)
		|
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция СозданиеНаОснованииПроверкаПроизведено(СвойстваРаспоряжений)
	
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТоварыЗаказа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов КАК ТаблицаДокумента
		|			ПО ТаблицаДокумента.Ссылка = ТоварыЗаказа.Ссылка
		|ГДЕ
		|	ТаблицаДокумента.ПоРаспоряжениям = Ложь
		|	И ТаблицаДокумента.Ссылка В(&МассивСсылок)
		|	И ТаблицаДокумента.Проведен
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТоварыЗаказа
		|ГДЕ
		|	ТоварыЗаказа.Произведено
		|	И НЕ ТоварыЗаказа.СписатьНаРасходы
		|	И ТоварыЗаказа.Ссылка В(&МассивСсылок)
		|	И ТоварыЗаказа.Ссылка.Проведен
		|	//&ОтборСтрок И ТоварыЗаказа.Получатель В (&ОтборСтрок)
		|	И ТоварыЗаказа.Получатель ССЫЛКА Справочник.Склады
		|	И (НЕ ВЫРАЗИТЬ(ТоварыЗаказа.Получатель КАК Справочник.Склады).ЦеховаяКладовая
		|		ИЛИ ВЫРАЗИТЬ(ТоварыЗаказа.Получатель КАК Справочник.Склады).Подразделение <> ТоварыЗаказа.Ссылка.Подразделение)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТоварыЗаказа
		|ГДЕ
		|	ТоварыЗаказа.Произведено
		|	И НЕ ТоварыЗаказа.СписатьНаРасходы
		|	И ТоварыЗаказа.Ссылка В(&МассивСсылок)
		|	И ТоварыЗаказа.Ссылка.Проведен
		|	//&ОтборСтрок И ТоварыЗаказа.Получатель В (&ОтборСтрок)
		|	И ТоварыЗаказа.Получатель ССЫЛКА Справочник.Склады
		|	И (НЕ ВЫРАЗИТЬ(ТоварыЗаказа.Получатель КАК Справочник.Склады).ЦеховаяКладовая
		|		ИЛИ ВЫРАЗИТЬ(ТоварыЗаказа.Получатель КАК Справочник.Склады).Подразделение <> ТоварыЗаказа.Ссылка.Подразделение)
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
	
	Если СвойстваРаспоряжений <> Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ОтборСтрок", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция СозданиеНаОснованииПроверкаРеквизитовШапки(ХозяйственнаяОперация, СвойстваРаспоряжений)
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МАКСИМУМ(НЕ Набор.Проведен), ЛОЖЬ)         КАК ЕстьОшибкиПроведен,
		|	ЕСТЬNULL(МАКСИМУМ(Набор.ЕстьОшибкиСтатус), ЛОЖЬ)    КАК ЕстьОшибкиСтатус,
		|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Статус) = 1
		|		ТОГДА МИНИМУМ(Набор.Статус) 
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
		|	КОНЕЦ                                               КАК СтатусРаспоряжения,
		|	МИНИМУМ(Набор.Организация)                          КАК Организация,
		|	МИНИМУМ(Набор.Склад)                                КАК Отправитель,
		|	МИНИМУМ(Набор.Получатель)                           КАК Получатель,
		|	МИНИМУМ(Набор.НалогообложениеНДС)                   КАК НалогообложениеНДС,
		|	&ХозяйственнаяОперация                              КАК ХозяйственнаяОперация,
		|	1                                                   КАК РазличныхОпераций,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Организация)             КАК РазличныхОрганизаций,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Склад)                   КАК РазличныхОтправителей,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Получатель)              КАК РазличныхПолучателей
		|ИЗ(
		|	ВЫБРАТЬ
		|		Заказ.Статус                КАК Статус,
		|		Заказ.Организация           КАК Организация,
		|		Заказ.Склад                 КАК Склад,
		|		ВЫБОР КОГДА Заказ.УправлениеПроизводством2_2
		|			ТОГДА Заказ.ЦеховаяКладовая 
		|			ИНАЧЕ Заказ.Подразделение
		|		КОНЕЦ 		                КАК Получатель,
		|		Заказ.Проведен              КАК Проведен,
		|		НЕОПРЕДЕЛЕНО                КАК НалогообложениеНДС,
		|		ВЫБОР КОГДА НЕ Заказ.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовМатериаловВПроизводство.КВыполнению),
		|										ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовМатериаловВПроизводство.Закрыт))
		|			ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ 
		|		КОНЕЦ                       КАК ЕстьОшибкиСтатус
		|	ИЗ
		|		Документ.ЗаказМатериаловВПроизводство КАК Заказ
		|	ГДЕ
		|		Заказ.Ссылка В(&МассивСсылок)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Заказ.Ссылка.Статус         КАК Статус,
		|		Заказ.Ссылка.Организация    КАК Организация,
		|		Заказ.Склад	                КАК Склад,
		|		Заказ.Ссылка.Подразделение  КАК Получатель,
		|		Заказ.Ссылка.Проведен       КАК Проведен,
		|		Заказ.Ссылка.ВыпускПодДеятельность КАК НалогообложениеНДС,
		|		ВЫБОР КОГДА НЕ Заказ.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
		|												ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
		|												ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
		|			ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ 
		|		КОНЕЦ                       КАК ЕстьОшибкиСтатус
		|	ИЗ
		|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Заказ
		|	ГДЕ
		|		Заказ.Ссылка В(&МассивСсылок)
		|		И (НЕ Заказ.Склад.ЦеховаяКладовая
		|			ИЛИ Заказ.Склад.Подразделение <> Заказ.Ссылка.Подразделение)
		|		И Заказ.ВариантОбеспечения В(
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
		|		//&ОтборСтрок И Заказ.Склад В (&ОтборСтрок)
		|	) КАК Набор
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////////////////
		|";
		Если СвойстваРаспоряжений <> Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ОтборСтрок", "");
		КонецЕсли; 
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МАКСИМУМ(НЕ Набор.Проведен), ЛОЖЬ) КАК ЕстьОшибкиПроведен,
		|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР КОГДА НЕ Набор.Статус В (
		|				ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
		|				ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
		|				ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
		|			ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ 
		|		КОНЕЦ), ЛОЖЬ)                            КАК ЕстьОшибкиСтатус,
		|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Статус) = 1
		|		ТОГДА МИНИМУМ(Набор.Статус) 
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
		|	КОНЕЦ                                      КАК СтатусРаспоряжения,
		|	МИНИМУМ(Набор.Организация)                 КАК Организация,
		|	МИНИМУМ(Набор.Отправитель)                 КАК Отправитель,
		|	МИНИМУМ(Набор.Получатель)                  КАК Получатель,
		|	МИНИМУМ(Набор.НалогообложениеНДС)          КАК НалогообложениеНДС,
		|
		|	&ХозяйственнаяОперация                     КАК ХозяйственнаяОперация,
		|
		|	1                                          КАК РазличныхОпераций,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Организация)    КАК РазличныхОрганизаций,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Отправитель)    КАК РазличныхОтправителей,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Получатель)     КАК РазличныхПолучателей
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЭтапПроизводства2_2.Проведен              КАК Проведен,
		|		ЭтапПроизводства2_2.Статус                КАК Статус,
		|		ЭтапПроизводства2_2.Организация           КАК Организация,
		|		ЭтапПроизводства2_2.Распоряжение.ЗаказПодДеятельность КАК НалогообложениеНДС,
		|		ЭтапПроизводства2_2.Подразделение         КАК Отправитель,
		|		Набор.Получатель                   КАК Получатель
		|	ИЗ
		|		Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Набор
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
		|			ПО Набор.Ссылка = ЭтапПроизводства2_2.Ссылка
		|	ГДЕ
		|		Набор.Ссылка В(&МассивСсылок)
		|		И Набор.Произведено
		|		И НЕ Набор.СписатьНаРасходы
		|		И Набор.Получатель ССЫЛКА Справочник.Склады
		|		И (НЕ ВЫРАЗИТЬ(Набор.Получатель КАК Справочник.Склады).ЦеховаяКладовая
		|			ИЛИ ВЫРАЗИТЬ(Набор.Получатель КАК Справочник.Склады).Подразделение <> Набор.Ссылка.Подразделение)
		|		//&ОтборСтрок И Набор.Получатель В (&ОтборСтрок)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ЭтапПроизводства2_2.Проведен              КАК Проведен,
		|		ЭтапПроизводства2_2.Статус                КАК Статус,
		|		ЭтапПроизводства2_2.Организация           КАК Организация,
		|		ЭтапПроизводства2_2.Распоряжение.ЗаказПодДеятельность КАК НалогообложениеНДС,
		|		ЭтапПроизводства2_2.Подразделение         КАК Отправитель,
		|		Набор.Получатель                   КАК Получатель
		|	ИЗ
		|		Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК Набор
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
		|			ПО Набор.Ссылка = ЭтапПроизводства2_2.Ссылка
		|	ГДЕ
		|		Набор.Ссылка В(&МассивСсылок)
		|		И Набор.Произведено
		|		И НЕ Набор.СписатьНаРасходы
		|		И Набор.Получатель ССЫЛКА Справочник.Склады
		|		И (НЕ ВЫРАЗИТЬ(Набор.Получатель КАК Справочник.Склады).ЦеховаяКладовая
		|			ИЛИ ВЫРАЗИТЬ(Набор.Получатель КАК Справочник.Склады).Подразделение <> Набор.Ссылка.Подразделение)
		|		//&ОтборСтрок И Набор.Получатель В (&ОтборСтрок)
		|	) КАК Набор
		|
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////////////////
		|";
		Если СвойстваРаспоряжений <> Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ОтборСтрок", "");
		КонецЕсли; 
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой Тогда

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МАКСИМУМ(НЕ Набор.Проведен), ЛОЖЬ) КАК ЕстьОшибкиПроведен,
		|	ЛОЖЬ                                       КАК ЕстьОшибкиСтатус,
		|	ИСТИНА                                     КАК СтатусРаспоряжения,
		|	МИНИМУМ(Набор.Организация)                 КАК Организация,
		|	МИНИМУМ(Набор.Отправитель)                 КАК Отправитель,
		|	МИНИМУМ(Набор.Получатель)                  КАК Получатель,
		|	МИНИМУМ(Набор.НалогообложениеНДС)          КАК НалогообложениеНДС,
		|
		|	&ХозяйственнаяОперация                     КАК ХозяйственнаяОперация,
		|
		|	1                                          КАК РазличныхОпераций,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Организация)    КАК РазличныхОрганизаций,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Отправитель)    КАК РазличныхОтправителей,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Получатель)     КАК РазличныхПолучателей
		|ИЗ
		|	(ВЫБРАТЬ
		|		Набор.Ссылка.Проведен              КАК Проведен,
		|		Набор.Ссылка.Статус                КАК Статус,
		|		Набор.Ссылка.Организация           КАК Организация,
		|		Набор.Ссылка.НалогообложениеНДС    КАК НалогообложениеНДС,
		|		Набор.Ссылка.Подразделение         КАК Отправитель,
		|		Набор.Склад                        КАК Получатель
		|	ИЗ
		|		Документ.ЗаказКлиента.Товары КАК Набор
		|	ГДЕ
		|		Набор.Ссылка В(&МассивСсылок)
		|		И НЕ Набор.Отменено
		|		//&ОтборСтрок И Набор.Склад В (&ОтборСтрок)
		|
		//++ НЕ УТКА
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Набор.Ссылка.Проведен              КАК Проведен,
		|		Набор.Ссылка.Статус                КАК Статус,
		|		Набор.Ссылка.Организация           КАК Организация,
		|		Набор.Ссылка.НалогообложениеНДС    КАК НалогообложениеНДС,
		|		Набор.Ссылка.Подразделение         КАК Отправитель,
		|		Набор.Склад                        КАК Получатель
		|	ИЗ
		|		Документ.ЗаказДавальца.Продукция КАК Набор
		|	ГДЕ
		|		Набор.Ссылка В(&МассивСсылок)
		|		И НЕ Набор.Отменено
		|		//&ОтборСтрок И Набор.Склад В (&ОтборСтрок)
		//-- НЕ УТКА
		|	) КАК Набор
		|
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////////////////
		|";
		Если СвойстваРаспоряжений <> Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ОтборСтрок", "");
		КонецЕсли; 
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(МАКСИМУМ(НЕ Набор.Ссылка.Проведен), ЛОЖЬ) КАК ЕстьОшибкиПроведен,
		|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР КОГДА НЕ Набор.Ссылка.Статус В (
		|				ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
		|				ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
		|				ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
		|			ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ 
		|		КОНЕЦ), ЛОЖЬ)                                  КАК ЕстьОшибкиСтатус,
		|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Ссылка.Статус) = 1
		|		ТОГДА МИНИМУМ(Набор.Ссылка.Статус) 
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО 
		|	КОНЕЦ                                             КАК СтатусРаспоряжения,
		|	МИНИМУМ(Набор.Ссылка.Организация)                 КАК Организация,
		|	МИНИМУМ(Набор.Ссылка.Подразделение)               КАК Отправитель,
		|	МИНИМУМ(Набор.Склад)                              КАК Получатель,
		|
		|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
		|
		|	1                                                 КАК РазличныхОпераций,
		|
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Ссылка.Организация)    КАК РазличныхОрганизаций,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Ссылка.Подразделение)  КАК РазличныхОтправителей,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Набор.Склад)                 КАК РазличныхПолучателей
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК Набор
		|ГДЕ
		|	Набор.Ссылка В(&МассивСсылок)
		|	И НЕ Набор.СписатьНаРасходы
		|	И (НЕ Набор.Склад.ЦеховаяКладовая
		|		ИЛИ Набор.Склад.Подразделение <> Набор.Ссылка.Подразделение)
		|	//&ОтборСтрок И Набор.Склад В (&ОтборСтрок)
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////////////////
		|";
		Если СвойстваРаспоряжений <> Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ОтборСтрок", "");
		КонецЕсли; 

	КонецЕсли; 
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция СозданиеНаОснованииПроверкаНаличияОрдеров()

	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.ОстаткиИОбороты(,,,, ДокументОтгрузки В (&МассивСсылок)) КАК ТаблицаОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
		|		ПО СпрСклады.Ссылка = ТаблицаОбороты.Склад
		|ГДЕ
		|	ТаблицаОбороты.КОтгрузкеПриход > 0 И(
		|		ТаблицаОбороты.КОтгрузкеРасход > 0
		|		ИЛИ НЕ СпрСклады.ИспользоватьОрдернуюСхемуПриОтгрузке
		|		ИЛИ СпрСклады.ДатаНачалаОрдернойСхемыПриОтгрузке > &НачалоТекущегоДня)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает описание метаданных документа
// 
// Возвращаемое значение:
//  Структура - Описание метаданных документа.
//
Функция ОписаниеФормыДокументаДляЗаполненияРеквизитовСвязанныхСНаправлениемДеятельности() Экспорт
	
	СтруктураОбъекта = НаправленияДеятельностиСервер.СтруктураОбъекта();
	Возврат СтруктураОбъекта;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СтатусУказанияСерий = 6
	|	И ТаблицаТовары.СтатусУказанияСерийОтправитель = 5
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства),
	|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумент.Ссылка
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ТаблицаДокумент
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|	ПО ТаблицаДокумент.Ссылка = ТаблицаТовары.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Серии КАК ТаблицаСерии
	|	ПО ТаблицаДокумент.Ссылка = ТаблицаСерии.Ссылка
	|		И ТаблицаТовары.Номенклатура = ТаблицаСерии.Номенклатура
	|		И ТаблицаТовары.Характеристика = ТаблицаСерии.Характеристика
	|		И ТаблицаТовары.Назначение = ТаблицаСерии.Назначение
	|		И ТаблицаТовары.НазначениеОтправителя = ТаблицаСерии.НазначениеОтправителя
	|ГДЕ
	|	ТаблицаДокумент.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|	И ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8)
	|	И ТаблицаСерии.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумент.Ссылка
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ТаблицаДокумент
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|	ПО ТаблицаДокумент.Ссылка = ТаблицаТовары.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Серии КАК ТаблицаСерии
	|	ПО ТаблицаДокумент.Ссылка = ТаблицаСерии.Ссылка
	|		И ТаблицаТовары.Номенклатура = ТаблицаСерии.Номенклатура
	|		И ТаблицаТовары.Характеристика = ТаблицаСерии.Характеристика
	|		И ТаблицаТовары.Назначение = ТаблицаСерии.Назначение
	|		И ТаблицаТовары.НазначениеОтправителя = ТаблицаСерии.НазначениеОтправителя
	|ГДЕ
	|	ТаблицаДокумент.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|	И ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8)
	|	И НЕ ТаблицаСерии.Ссылка ЕСТЬ NULL
	|	И ТаблицаСерии.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ДвижениеПродукцииИМатериалов КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТоварыДокумента
	|		ПО ТаблицаДокумента.Ссылка = ТаблицаТоварыДокумента.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.ХозяйственнаяОперация В(
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства)
	|	)
	|	И ТаблицаТоварыДокумента.СтатусУказанияСерийОтправитель В (0)
	|	И ТаблицаТоварыДокумента.СтатусУказанияСерийПолучатель В (10)
	|	И ТаблицаТоварыДокумента.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ДвижениеПродукцииИМатериалов";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументыДляОбработки.Ссылка КАК Ссылка,
	|	ДокументыДляОбработки.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|	МАКСИМУМ(ЕСТЬNULL(ДанныеВыборки.НеобходимоПересчитатьСтатусУказанияСерий, ЛОЖЬ)) КАК НеобходимоПересчитатьСтатусУказанияСерий,
	|	МАКСИМУМ(ЕСТЬNULL(ДанныеВыборки.НеобходимоОбновитьОперациюДокумента, ЛОЖЬ)) КАК НеобходимоОбновитьОперациюДокумента
	|ИЗ
	|	&ВТДокументыДляОбработки КАК ДокументыДляОбработки
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ (
	|
	|	ВЫБРАТЬ
	|		ТаблицаТовары.Ссылка              КАК Ссылка,
	|		ТаблицаТовары.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|		ИСТИНА                            КАК НеобходимоПересчитатьСтатусУказанияСерий,
	|		ЛОЖЬ                              КАК НеобходимоОбновитьОперациюДокумента
	|	ИЗ
	|		&ВТДокументыДляОбработки КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|		ПО ТаблицаДокумента.Ссылка = ТаблицаТовары.Ссылка
	|	ГДЕ
	|		НЕ ТаблицаТовары.Ссылка ЕСТЬ NULL
	|		И ТаблицаТовары.СтатусУказанияСерий = 6
	|		И ТаблицаТовары.СтатусУказанияСерийОтправитель = 5
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		ТаблицаДокумента.Ссылка              КАК Ссылка,
	|		ТаблицаДокумента.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|		ЛОЖЬ                                 КАК НеобходимоПересчитатьСтатусУказанияСерий,
	|		ИСТИНА                               КАК НеобходимоОбновитьОперациюДокумента
	|	ИЗ
	|		&ВТДокументыДляОбработки КАК ТаблицаДокумента
	|	ГДЕ
	|		ТаблицаДокумента.Ссылка.ХозяйственнаяОперация В
	|			(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
	|			 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства),
	|			 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаДокумент.Ссылка,
	|		ТаблицаДокумент.ВерсияДанных КАК ВерсияДанных,
	|		ИСТИНА КАК НеобходимоПересчитатьСтатусУказанияСерий,
	|		ЛОЖЬ КАК НеобходимоОбновитьОперациюДокумента
	|	ИЗ
	|		&ВТДокументыДляОбработки КАК ДокументыДляОбработки
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов КАК ТаблицаДокумент
	|		ПО ДокументыДляОбработки.Ссылка = ТаблицаДокумент.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|		ПО ДокументыДляОбработки.Ссылка = ТаблицаТовары.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Серии КАК ТаблицаСерии
	|		ПО ДокументыДляОбработки.Ссылка = ТаблицаСерии.Ссылка
	|			И ТаблицаТовары.Номенклатура = ТаблицаСерии.Номенклатура
	|			И ТаблицаТовары.Характеристика = ТаблицаСерии.Характеристика
	|			И ТаблицаТовары.Назначение = ТаблицаСерии.Назначение
	|			И ТаблицаТовары.НазначениеОтправителя = ТаблицаСерии.НазначениеОтправителя
	|	ГДЕ
	|		ТаблицаДокумент.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|		И ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8)
	|		И ТаблицаСерии.Ссылка ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаДокумент.Ссылка,
	|		ТаблицаДокумент.ВерсияДанных КАК ВерсияДанных,
	|		ИСТИНА КАК НеобходимоПересчитатьСтатусУказанияСерий,
	|		ЛОЖЬ КАК НеобходимоОбновитьОперациюДокумента
	|	ИЗ
	|		&ВТДокументыДляОбработки КАК ДокументыДляОбработки
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов КАК ТаблицаДокумент
	|		ПО ДокументыДляОбработки.Ссылка = ТаблицаДокумент.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТаблицаТовары
	|		ПО ДокументыДляОбработки.Ссылка = ТаблицаТовары.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов.Серии КАК ТаблицаСерии
	|		ПО ДокументыДляОбработки.Ссылка = ТаблицаСерии.Ссылка
	|			И ТаблицаТовары.Номенклатура = ТаблицаСерии.Номенклатура
	|			И ТаблицаТовары.Характеристика = ТаблицаСерии.Характеристика
	|			И ТаблицаТовары.Назначение = ТаблицаСерии.Назначение
	|			И ТаблицаТовары.НазначениеОтправителя = ТаблицаСерии.НазначениеОтправителя
	|	ГДЕ
	|		ТаблицаДокумент.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
	|		И ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8)
	|		И НЕ ТаблицаСерии.Ссылка ЕСТЬ NULL
	|		И ТаблицаСерии.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК ДанныеВыборки
	|	
	|	ПО ДокументыДляОбработки.Ссылка = ДанныеВыборки.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыДляОбработки.Ссылка,
	|	ДокументыДляОбработки.Ссылка.ВерсияДанных";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДокументыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
			
			Если ДокументОбъект = Неопределено Тогда
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ОбъектИзменен = Ложь;
			
			Если Выборка.НеобходимоОбновитьОперациюДокумента Тогда
				
				ОбъектИзменен = Истина;
				
				Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыпускПродукцииНаСклад
					И ДокументОбъект.ПоРаспоряжениям Тогда
					
					ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства;
					
				ИначеЕсли ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыпускПродукцииНаСклад
					И Не ДокументОбъект.ПоРаспоряжениям Тогда
					
					ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой;
					
				ИначеЕсли ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратИзПроизводства
					И ДокументОбъект.ПоРаспоряжениям Тогда
					
					ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства;
					
				ИначеЕсли ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратИзПроизводства
					И Не ДокументОбъект.ПоРаспоряжениям Тогда
					
					ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой;
					
				ИначеЕсли ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВПроизводство
					И ДокументОбъект.ПоРаспоряжениям
					И ТипЗнч(ДокументОбъект.Получатель) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
					
					ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство;
					
				ИначеЕсли ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВПроизводство
					И ДокументОбъект.ПоРаспоряжениям
					И ТипЗнч(ДокументОбъект.Получатель) = Тип("СправочникСсылка.Склады") Тогда
					
					ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую;
					
				ИначеЕсли ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВПроизводство
					И Не ДокументОбъект.ПоРаспоряжениям Тогда
					
					ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую;
					
				КонецЕсли;
			КонецЕсли;
			
			Если Выборка.НеобходимоПересчитатьСтатусУказанияСерий Тогда
				
				ОбъектИзменен = Истина;
				
				ПараметрыУказанияСерий = Новый ФиксированнаяСтруктура(НоменклатураСервер.ПараметрыУказанияСерий(ДокументОбъект, Документы.ДвижениеПродукцииИМатериалов));
				НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ДокументОбъект, ПараметрыУказанияСерий);
				
			КонецЕсли;
			
			// Перенос серий в ТЧ серии
			
			Если ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства
				Или ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства Тогда
				
				Для Каждого СтрокаТовара Из ДокументОбъект.Товары Цикл
					
					Если СтрокаТовара.СтатусУказанияСерийОтправитель = 0
						И СтрокаТовара.СтатусУказанияСерийПолучатель = 10
						И СтрокаТовара.Серия <> Справочники.СерииНоменклатуры.ПустаяСсылка() Тогда
						
						ЗаполнитьЗначенияСвойств(ДокументОбъект.Серии.Добавить(), СтрокаТовара);
						СтрокаТовара.Серия = Справочники.СерииНоменклатуры.ПустаяСсылка();
						
						ОбъектИзменен = Истина;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект,,, РежимЗаписиДокумента.Запись);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выборка.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Функция СозданиеНаОснованииПроверкаНаличияМатериаловДоступныхКВозврату()
	
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.ДвижениеПродукцииИМатериалов.Товары КАК ТоварыЗаказа
		|ГДЕ
		|	ТоварыЗаказа.Ссылка В(&МассивСсылок)
		|	И ТоварыЗаказа.Ссылка.Проведен
		|	И ТоварыЗаказа.Ссылка.ХозяйственнаяОперация В
		|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство),
		|		 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую))
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
		
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает массив содержащий переданную накладную, а так же:
// А. Заказ из массива заказов (если в массиве один элемент)
// Б. Все заказы которые подходят под отбор по реквизитам шапки
//
// Параметры:
//  Накладная		 - ДокументСсылка.ДвижениеПродукцииИМатериалов - 
//  МассивЗаказов	 - Массив - Массив заказов на передачу материалов в производство, этапов производства
//  РеквизитыШапки	 - Структура - Должна содержать ключи Организация, ХозяйственнаяОперация
//  								Отправитель, Получатель и НаправлениеДеятельности
// 
// Возвращаемое значение:
//  Массив - массив документов ЗаказНаВнутреннееПотребление, ЗаказНаРемонт
//
Функция РаспоряженияНакладной(Накладная, МассивЗаказов, РеквизитыШапки) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Регистратор",             Накладная);
	Запрос.УстановитьПараметр("МассивЗаказов",           МассивЗаказов);
	Запрос.УстановитьПараметр("Организация",             РеквизитыШапки.Организация);
	Запрос.УстановитьПараметр("Отправитель",             РеквизитыШапки.Отправитель);
	Запрос.УстановитьПараметр("Получатель",              РеквизитыШапки.Получатель);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",   РеквизитыШапки.ХозяйственнаяОперация);
	
	Если РеквизитыШапки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаДокумента.Ссылка КАК Заказ
		|ИЗ
		|	Документ.ЗаказМатериаловВПроизводство КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В (&МассивЗаказов)
		|	//&УсловиеПоКлючевымПолям
		|	И ТаблицаДокумента.Проведен";
		
		ТекстУсловияПоКлючевымПолям = 
		"ТаблицаДокумента.Организация               = &Организация
		|И ТаблицаДокумента.Склад                   = &Отправитель
		|И ТаблицаДокумента.ЦеховаяКладовая         = &Получатель
		|И ТаблицаДокумента.ХозяйственнаяОперация   = &ХозяйственнаяОперация";
		
	ИначеЕсли РеквизитыШапки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаДокумента.Ссылка КАК Заказ
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК Товары
		|		ПО ТаблицаДокумента.Ссылка = Товары.Ссылка
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В (&МассивЗаказов)
		|	//&УсловиеПоКлючевымПолям
		|	И ТаблицаДокумента.Проведен";
		
		ТекстУсловияПоКлючевымПолям = 
		"ТаблицаДокумента.Организация               = &Организация
		|И Товары.Склад                             = &Отправитель
		|И ТаблицаДокумента.Подразделение           = &Получатель
		|И &ХозяйственнаяОперация                   = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство)";
		
	ИначеЕсли РеквизитыШапки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаДокумента.Ссылка КАК Заказ
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Товары
		|		ПО ТаблицаДокумента.Ссылка = Товары.Ссылка
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В (&МассивЗаказов)
		|	//&УсловиеПоКлючевымПолям
		|	И ТаблицаДокумента.Проведен
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаДокумента.Ссылка КАК Заказ
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК Товары
		|		ПО ТаблицаДокумента.Ссылка = Товары.Ссылка
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В (&МассивЗаказов)
		|	//&УсловиеПоКлючевымПолям
		|	И ТаблицаДокумента.Проведен";
		
		ТекстУсловияПоКлючевымПолям = 
		"ТаблицаДокумента.Организация               = &Организация
		|И ТаблицаДокумента.Подразделение           = &Отправитель
		|И Товары.Получатель                        = &Получатель
		|И &ХозяйственнаяОперация                   = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства)";
		
	ИначеЕсли РеквизитыШапки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаДокумента.Ссылка КАК Заказ
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ТаблицаДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ЭкономияМатериалов КАК Товары
		|		ПО ТаблицаДокумента.Ссылка = Товары.Ссылка
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В (&МассивЗаказов)
		|	//&УсловиеПоКлючевымПолям
		|	И ТаблицаДокумента.Проведен";
		
		ТекстУсловияПоКлючевымПолям = 
		"ТаблицаДокумента.Организация               = &Организация
		|И ТаблицаДокумента.Подразделение           = &Отправитель
		|И Товары.Склад                             = &Получатель
		|И &ХозяйственнаяОперация                   = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства)";
		
	КонецЕсли;
	
	ОтобратьПоЗаказу = МассивЗаказов.Количество() > 0;
	Если Не ОтобратьПоЗаказу Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаДокумента.Ссылка В (&МассивЗаказов)", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&УсловиеПоКлючевымПолям", ТекстУсловияПоКлючевымПолям);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	ВозвращаемыйМассив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Заказ");
	
	Если ЗначениеЗаполнено(Накладная) Тогда
		ВозвращаемыйМассив.Добавить(Накладная);
	КонецЕсли;
	
	Возврат ВозвращаемыйМассив;
	
КонецФункции

// Формирует список документов, на основании переданных параметров.
//	Параметры:
//		Параметры - Структура - параметры для формирования документов.
//			Имеет структуру {ИзделияПоСпецификации, ДанныеШапки, ГруппировкаЗатрат}, все ключи являются обязательными.
//			ИзделияПоСпецификации - таблица значений, содержащая перечень выпущенной продукции, распределяемой по правилам.
//			ДанныеШапки - Структура - данные заполнения шапки документов.
//			ГруппировкаЗатрат - тип группировки затрат.
//		СписокОбъектов - Структура - список сформированных документов.
//
Функция ДокументыПоПараметрам(Параметры) Экспорт
	
	МассивДокументов = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПроизводствоБезЗаказа.Организация											КАК Организация,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Получатель								КАК Отправитель,
		|	ПроизводствоБезЗаказа.ВыпускПодДеятельность									КАК НалогообложениеНДС,
		|	ПроизводствоБезЗаказа.НаправлениеДеятельности								КАК НаправлениеДеятельности,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Номенклатура							КАК Номенклатура,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Характеристика							КАК Характеристика,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Серия									КАК Серия,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Назначение								КАК Назначение,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Назначение								КАК НазначениеОтправителя,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Упаковка								КАК Упаковка,
		|	СУММА(ПроизводствоБезЗаказаВыходныеИзделия.Количество)						КАК Количество,
		|	ПроизводствоБезЗаказаВыходныеИзделия.КоличествоУпаковок						КАК КоличествоУпаковок,
		|	ПроизводствоБезЗаказаВыходныеИзделия.СтатусУказанияСерий					КАК СтатусУказанияСерий,
		|	ПроизводствоБезЗаказаВыходныеИзделия.СтатусУказанияСерий					КАК СтатусУказанияСерийОтправитель,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Номенклатура.ГруппаАналитическогоУчета	КАК ГруппаПродукции
		|ИЗ
		|	Документ.ПроизводствоБезЗаказа КАК ПроизводствоБезЗаказа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ПроизводствоБезЗаказаВыходныеИзделия
		|		ПО (ПроизводствоБезЗаказаВыходныеИзделия.Ссылка = ПроизводствоБезЗаказа.Ссылка)
		|ГДЕ
		|	ПроизводствоБезЗаказа.Ссылка В(&ОбъектыОснований)
		|	И ПроизводствоБезЗаказаВыходныеИзделия.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПроизводствоБезЗаказаВыходныеИзделия.Упаковка,
		|	ПроизводствоБезЗаказа.Организация,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Получатель,
		|	ПроизводствоБезЗаказа.ВыпускПодДеятельность,
		|	ПроизводствоБезЗаказа.НаправлениеДеятельности,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Номенклатура,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Характеристика,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Серия,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Назначение,
		|	ПроизводствоБезЗаказаВыходныеИзделия.СтатусУказанияСерий,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Назначение,
		|	ПроизводствоБезЗаказаВыходныеИзделия.КоличествоУпаковок,
		|	ПроизводствоБезЗаказаВыходныеИзделия.СтатусУказанияСерий,
		|	ПроизводствоБезЗаказаВыходныеИзделия.Номенклатура.ГруппаАналитическогоУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПроизводствоБезЗаказа.Организация											КАК Организация,
		|	ПроизводствоБезЗаказаПобочныеИзделия.Получатель								КАК Отправитель,
		|	ПроизводствоБезЗаказа.ВыпускПодДеятельность									КАК НалогообложениеНДС,
		|	ПроизводствоБезЗаказа.НаправлениеДеятельности								КАК НаправлениеДеятельности,
		|	ПроизводствоБезЗаказаПобочныеИзделия.Номенклатура							КАК Номенклатура,
		|	ПроизводствоБезЗаказаПобочныеИзделия.Характеристика							КАК Характеристика,
		|	ПроизводствоБезЗаказаПобочныеИзделия.Серия									КАК Серия,
		|	ПроизводствоБезЗаказаПобочныеИзделия.Назначение								КАК Назначение,
		|	ПроизводствоБезЗаказаПобочныеИзделия.Назначение								КАК НазначениеОтправителя,
		|	ПроизводствоБезЗаказаПобочныеИзделия.Упаковка								КАК Упаковка,
		|	СУММА(ПроизводствоБезЗаказаПобочныеИзделия.Количество)						КАК Количество,
		|	ПроизводствоБезЗаказаПобочныеИзделия.КоличествоУпаковок						КАК КоличествоУпаковок,
		|	ПроизводствоБезЗаказаПобочныеИзделия.СтатусУказанияСерий					КАК СтатусУказанияСерий,
		|	ПроизводствоБезЗаказаПобочныеИзделия.СтатусУказанияСерий					КАК СтатусУказанияСерийОтправитель,
		|	ПроизводствоБезЗаказаПобочныеИзделия.Номенклатура.ГруппаАналитическогоУчета	КАК ГруппаПродукции
		|ИЗ
		|	Документ.ПроизводствоБезЗаказа КАК ПроизводствоБезЗаказа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа.ПобочныеИзделия КАК ПроизводствоБезЗаказаПобочныеИзделия
		|		ПО (ПроизводствоБезЗаказаПобочныеИзделия.Ссылка = ПроизводствоБезЗаказа.Ссылка)
		|ГДЕ
		|	ПроизводствоБезЗаказа.Ссылка В(&ОбъектыОснований)
		|	И ПроизводствоБезЗаказаПобочныеИзделия.НаправлениеВыпуска = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПроизводствоБезЗаказа.ВыпускПодДеятельность,
		|	ПроизводствоБезЗаказаПобочныеИзделия.Характеристика,
		|	ПроизводствоБезЗаказа.Организация,
		|	ПроизводствоБезЗаказаПобочныеИзделия.Номенклатура,
		|	ПроизводствоБезЗаказаПобочныеИзделия.Серия,
		|	ПроизводствоБезЗаказаПобочныеИзделия.Упаковка,
		|	ПроизводствоБезЗаказа.НаправлениеДеятельности,
		|	ПроизводствоБезЗаказаПобочныеИзделия.Получатель,
		|	ПроизводствоБезЗаказаПобочныеИзделия.Назначение,
		|	ПроизводствоБезЗаказаПобочныеИзделия.СтатусУказанияСерий,
		|	ПроизводствоБезЗаказаПобочныеИзделия.Назначение,
		|	ПроизводствоБезЗаказаПобочныеИзделия.КоличествоУпаковок,
		|	ПроизводствоБезЗаказаПобочныеИзделия.СтатусУказанияСерий,
		|	ПроизводствоБезЗаказаПобочныеИзделия.Номенклатура.ГруппаАналитическогоУчета
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РаспределениеВозвратныхОтходов.Организация								КАК Организация,
		|	РаспределениеВозвратныхОтходов.Получатель								КАК Отправитель,
		|	РаспределениеВозвратныхОтходов.ВыпускПодДеятельность					КАК НалогообложениеНДС,
		|	РаспределениеВозвратныхОтходов.НаправлениеДеятельности					КАК НаправлениеДеятельности,
		|	РаспределениеВозвратныхОтходов.Номенклатура								КАК Номенклатура,
		|	РаспределениеВозвратныхОтходов.Характеристика							КАК Характеристика,
		|	РаспределениеВозвратныхОтходов.Серия									КАК Серия,
		|	РаспределениеВозвратныхОтходов.Назначение								КАК Назначение,
		|	РаспределениеВозвратныхОтходов.Назначение								КАК НазначениеОтправителя,
		|	РаспределениеВозвратныхОтходов.Номенклатура.ЕдиницаИзмерения			КАК Упаковка,
		|	СУММА(РаспределениеВозвратныхОтходов.Количество)						КАК Количество,
		|	РаспределениеВозвратныхОтходов.Количество								КАК КоличествоУпаковок,
		|	РаспределениеВозвратныхОтходов.СтатусУказанияСерий						КАК СтатусУказанияСерий,
		|	РаспределениеВозвратныхОтходов.СтатусУказанияСерий						КАК СтатусУказанияСерийОтправитель,
		|	РаспределениеВозвратныхОтходов.Номенклатура.ГруппаАналитическогоУчета	КАК ГруппаПродукции
		|ИЗ
		|	Документ.РаспределениеВозвратныхОтходов КАК РаспределениеВозвратныхОтходов
		|ГДЕ
		|	РаспределениеВозвратныхОтходов.Ссылка В(&ОбъектыОснований)
		|	И ТИПЗНАЧЕНИЯ(РаспределениеВозвратныхОтходов.Получатель) = ТИП(Справочник.Склады)
		|
		|СГРУППИРОВАТЬ ПО
		|	РаспределениеВозвратныхОтходов.Серия,
		|	РаспределениеВозвратныхОтходов.Организация,
		|	РаспределениеВозвратныхОтходов.ВыпускПодДеятельность,
		|	РаспределениеВозвратныхОтходов.Получатель,
		|	РаспределениеВозвратныхОтходов.НаправлениеДеятельности,
		|	РаспределениеВозвратныхОтходов.Номенклатура,
		|	РаспределениеВозвратныхОтходов.Характеристика,
		|	РаспределениеВозвратныхОтходов.Назначение,
		|	РаспределениеВозвратныхОтходов.СтатусУказанияСерий,
		|	РаспределениеВозвратныхОтходов.Назначение,
		|	РаспределениеВозвратныхОтходов.Номенклатура.ЕдиницаИзмерения,
		|	РаспределениеВозвратныхОтходов.Количество,
		|	РаспределениеВозвратныхОтходов.СтатусУказанияСерий,
		|	РаспределениеВозвратныхОтходов.Номенклатура.ГруппаАналитическогоУчета
		|ИТОГИ ПО
		|	Организация,
		|	НалогообложениеНДС,
		|	НаправлениеДеятельности,
		|	Отправитель";
	
	Запрос.УстановитьПараметр("ОбъектыОснований",	Параметры.ОбъектыОснований);
	
	ВыборкаОрганизации = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ДатаНовыхДокументов = ТекущаяДатаСеанса();
	Пока ВыборкаОрганизации.Следующий() Цикл
		
		ВыборкаНалогообложение = ВыборкаОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНалогообложение.Следующий() Цикл
			
			ВыборкаНаправлениеДеятельности = ВыборкаНалогообложение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаНаправлениеДеятельности.Следующий() Цикл
				
				ВыборкаОтправитель = ВыборкаНаправлениеДеятельности.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаОтправитель.Следующий() Цикл
					
					ТекДокумент = Документы.ДвижениеПродукцииИМатериалов.СоздатьДокумент();
					ТекДокумент.ПолучитьСсылкуНового();
					МассивДокументов.Добавить(ТекДокумент);
					
					ЗаполнитьЗначенияСвойств(ТекДокумент, ВыборкаОтправитель);
					ТекДокумент.Дата = ДатаНовыхДокументов;
					ТекДокумент.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой;
					ТекДокумент.Заполнить(Неопределено);
					
					ДетальныеЗаписи = ВыборкаОтправитель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ДетальныеЗаписи.Следующий() Цикл
						НоваяСтрока = ТекДокумент.Товары.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ДетальныеЗаписи);
					КонецЦикла;
					
					ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ТекДокумент, Документы.ДвижениеПродукцииИМатериалов);
					НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ТекДокумент, ПараметрыУказанияСерий);
					
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат МассивДокументов;
	
КонецФункции

#КонецОбласти


#КонецОбласти

#КонецЕсли
