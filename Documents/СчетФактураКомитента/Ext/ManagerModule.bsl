

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт



КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураКомитента) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.СчетФактураКомитента.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураКомитента);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьКомиссиюПриЗакупках";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	
	////////////////////////////////////////////////////////////////////////////
	// Поместим результаты запроса в дополнительные свойства
	
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.ДатаСоставления			КАК Период,
	|	ДанныеДокумента.Дата					КАК ДатаПолучения,
	|	ДанныеДокумента.Организация				КАК Организация,
	|	ДанныеДокумента.Комитент				КАК Контрагент,
	|	ДанныеДокумента.Комитент.КПП			КАК КонтрагентКПП,
	|	ДанныеДокумента.Исправление 			КАК Исправление,
	|	ДанныеДокумента.ПолученВЭлектронномВиде КАК ПолученВЭлектронномВиде,
	|	ДанныеДокумента.КодВидаОперации			КАК КодВидаОперации,
	|	ДанныеДокумента.Номер					КАК Номер,
	|	ДанныеДокумента.НомерИсправления		КАК НомерИсправления,
	|	ДанныеДокумента.ДатаИсправления			КАК ДатаИсправления,
	|	ДанныеДокумента.Валюта					КАК Валюта
	|	
	|ИЗ
	|	Документ.СчетФактураКомитента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	КодВидаОперацииКомиссия = УчетНДСПереопределяемый.КодВидаОперацииКомиссия(Реквизиты.КодВидаОперации, Реквизиты.Период);
	
	Запрос.УстановитьПараметр("Период",							Реквизиты.Период);
	Запрос.УстановитьПараметр("ДатаПолучения",					Реквизиты.ДатаПолучения);
	Запрос.УстановитьПараметр("Организация",					Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент",						Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Исправление",					Реквизиты.Исправление);
	Запрос.УстановитьПараметр("ПолученВЭлектронномВиде",		?(Реквизиты.ПолученВЭлектронномВиде, 2, 1));
	Запрос.УстановитьПараметр("КодВидаОперации",				Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("КодВидаОперацииКомиссия",		КодВидаОперацииКомиссия);
	Запрос.УстановитьПараметр("Номер",							Реквизиты.Номер);
	Запрос.УстановитьПараметр("НомерИсправления",				Реквизиты.НомерИсправления);
	Запрос.УстановитьПараметр("ДатаИсправления",				Реквизиты.ДатаИсправления);
	Запрос.УстановитьПараметр("ВалютаСчетаФактуры",				Реквизиты.Валюта);
	Запрос.УстановитьПараметр("КонтрагентКПП",					Реквизиты.КонтрагентКПП);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());

КонецПроцедуры

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&ДатаПолучения КАК Период,
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	&Ссылка КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	Покупатели.НомерСтроки КАК ИндексСтроки,
	|	&ДатаПолучения КАК ДатаВыставленияПолучения,
	|	&ПолученВЭлектронномВиде КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации КАК КодВидаОперации,
	|	&Номер КАК НомерСчетаФактуры,
	|	&Период КАК ДатаСчетаФактуры,
	|	NULL КАК НомерКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаКорректировочногоСчетаФактуры,
	|	&НомерИсправления КАК НомерИсправления,
	|	&ДатаИсправления КАК ДатаИсправления,
	|	NULL КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	NULL КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	&ВалютаСчетаФактуры КАК Валюта,
	|	СУММА(Покупатели.СуммаСНДС) КАК СуммаПоСчетуФактуре,
	|	СУММА(Покупатели.СуммаНДС) КАК СуммаНДС,
	|	0 КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0 КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0 КАК СуммаНДСРазницаУменьшение,
	|	0 КАК СуммаНДСРазницаУвеличение,
	|	ЛОЖЬ КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ КАК СчетФактураНеВыставляется,
	|	&КонтрагентКПП КАК КППКонтрагента,
	|	Покупатели.СчетФактураВыданный КАК СчетФактураВыданныйПокупателю,
	|	Покупатели.Субкомиссионер КАК Субкомиссионер,
	|	""2"" КАК КодВидаСделки,
	|	СУММА(Покупатели.СуммаСНДС) КАК СуммаПоСчетуФактуреКомиссия,
	|	СУММА(Покупатели.СуммаНДС) КАК СуммаНДСКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0 КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0 КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0 КАК СуммаНДСРазницаУвеличениеКомиссия,
	|	&КодВидаОперацииКомиссия КАК КодВидаОперацииКомиссия
	|
	|ИЗ
	|	Документ.СчетФактураКомитента.Покупатели КАК Покупатели
	|ГДЕ
	|	Покупатели.Ссылка = &Ссылка
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И &ДатаПолучения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	Покупатели.НомерСтроки,
	|	Покупатели.Покупатель,
	|	Покупатели.СчетФактураВыданный,
	|	Покупатели.Субкомиссионер";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли