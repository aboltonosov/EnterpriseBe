

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции "ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании".
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт



КонецПроцедуры

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции "ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании".
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ЗаписьКУДиР) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ЗаписьКУДиР.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ЗаписьКУДиР);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции "МенюОтчеты.СоздатьКоллекциюКомандОтчетов".
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	Возврат; //В дальнейшем будет добавлен код команд

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	// Создание запроса инициализации движений и заполенение его параметров
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	// Текст запроса, формирующего таблицы движений
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаКУДиР(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаКУДиР2(Запрос, ТекстыЗапроса, Регистры);
	
	// Выполение запроса и выгрузка полученных таблиц для формирования движений
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Организация КАК Организация
	|ИЗ
	|	Документ.ЗаписьКУДиР КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	
КонецПроцедуры

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт

	ПараметрыПроведения = Новый Структура;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	Реквизиты.Дата КАК Период,
		|	Реквизиты.Организация
		|ИЗ
		|	Документ.ЗаписьКУДиР КАК Реквизиты
		|ГДЕ
		|	Реквизиты.Ссылка = &Ссылка
		|";

	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Если НЕ УчетнаяПолитика.Существует(Выборка.Организация, Выборка.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;

	НомераТаблиц = Новый Структура;

	Запрос.УстановитьПараметр("Период", Выборка.Период);
	Запрос.УстановитьПараметр("Организация", Выборка.Организация);

	Запрос.Текст =
		ТекстЗапросаЗаписьКУДиРРеквизиты(НомераТаблиц)
		+ ТекстЗапросаТаблицаСтроки(НомераТаблиц);

	Результат = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;

	Возврат ПараметрыПроведения;

КонецФункции

Функция ТекстЗапросаЗаписьКУДиРРеквизиты(НомераТаблиц)

	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация
	|ИЗ
	|	Документ.ЗаписьКУДиР КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка"
	;

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаТаблицаСтроки(НомераТаблиц)

	НомераТаблиц.Вставить("ТаблицаДоходовИРасходов", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаписьКУДиРСтроки.Ссылка             КАК Ссылка,
	|	ЗаписьКУДиРСтроки.НомерСтроки        КАК НомерСтроки,
	|	ЗаписьКУДиРСтроки.ДатаНомер          КАК РеквизитыПервичногоДокумента,
	|	ЗаписьКУДиРСтроки.Содержание         КАК Содержание,
	|	ЗаписьКУДиРСтроки.ДоходЕНВД          КАК ДоходЕНВД,
	|	ЗаписьКУДиРСтроки.Графа4             КАК Графа4,
	|	ЗаписьКУДиРСтроки.Графа5             КАК Графа5,
	|	ЗаписьКУДиРСтроки.РасходЕНВД         КАК РасходЕНВД,
	|	ЗаписьКУДиРСтроки.Графа6             КАК Графа6,
	|	ЗаписьКУДиРСтроки.Графа7             КАК Графа7,
	|	ЗаписьКУДиРСтроки.Ссылка.Организация КАК Организация,
	|	ЗаписьКУДиРСтроки.Ссылка.Дата        КАК Дата
	|ИЗ
	|	Документ.ЗаписьКУДиР.Строки КАК ЗаписьКУДиРСтроки
	|ГДЕ
	|	ЗаписьКУДиРСтроки.Ссылка = &Ссылка
	|";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаТаблицаКУДиР(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "КнигаУчетаДоходовИРасходов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	&Период КАК Период,
	               |	&Ссылка КАК Регистратор,
	               |	&Организация КАК Организация,
	               |	ДанныеДокумента.ДоходЕНВД,
				   |	ДанныеДокумента.Графа4,
	               |	ДанныеДокумента.Графа5,
	               |	ДанныеДокумента.РасходЕНВД,
				   |	ДанныеДокумента.Графа6,
	               |	ДанныеДокумента.Графа7,
	               |	ДанныеДокумента.НДС,
	               |	ДанныеДокумента.НомерСтроки КАК НомерСтроки,
	               |	ДанныеДокумента.ДатаНомер КАК РеквизитыПервичногоДокумента,
	               |	ВЫБОР
	               |		КОГДА ДанныеДокумента.ДокументВозникновенияРасходов = НЕОПРЕДЕЛЕНО
				   |				И НЕ ДанныеДокумента.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ПустаяСсылка)
	               |			ТОГДА &Ссылка
	               |		ИНАЧЕ ДанныеДокумента.ДокументВозникновенияРасходов
	               |	КОНЕЦ КАК ДокументВозникновенияРасходов,
	               |	ДанныеДокумента.ВидРасходов КАК ВидРасходов,
				   |	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	               |	ДанныеДокумента.Содержание КАК Содержание
	               |ИЗ
	               |	Документ.ЗаписьКУДиР.Строки КАК ДанныеДокумента
	               |ГДЕ
	               |	ДанныеДокумента.Ссылка = &Ссылка";			   
				   
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаКУДиР2(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "КнигаУчетаДоходовИРасходовРаздел2";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	&Период КАК Период,
	               |	&Ссылка КАК Регистратор,
	               |	&Организация КАК Организация,
	               |	ДанныеДокумента.ЭлементРасходов,
	               |	ДанныеДокумента.ДатаОплаты,
	               |	ДанныеДокумента.Графа3_ДатаВводаВЭксплуатацию,
	               |	ДанныеДокумента.Графа4_ГосударственнаяРегистрация,
	               |	ДанныеДокумента.Графа5_ПервоначальнаяСтоимость,
	               |	ДанныеДокумента.Графа6_ОстаточнаяСтоимость,
	               |	ДанныеДокумента.Графа7_СрокПолезногоИспользования,
	               |	ДанныеДокумента.Графа8_КолКварталовВОтчетномПериоде,
				   |	ДанныеДокумента.Графа9_КолКварталовВНалПериоде,
				   |	ДанныеДокумента.Графа10_ДоляРасходовЗаНалПериод,
				   |	ДанныеДокумента.Графа11_ДоляРасходовЗаКвартал,
				   |	ДанныеДокумента.Графа12_СуммаРасходовЗаОтчетнПериод,
				   |	ДанныеДокумента.Графа13_СуммаРасходовЗаКвартал,
				   |	ДанныеДокумента.Графа14_РасходыПрошлыхПериодов,
				   |	ДанныеДокумента.Графа15_ОстатокРасходов,
				   |	ДанныеДокумента.Графа16_ДатаВыбытия,
	               |	ВЫБОР
	               |		КОГДА ДанныеДокумента.ДокументВозникновенияРасходов = НЕОПРЕДЕЛЕНО
	               |			ТОГДА &Ссылка
	               |		ИНАЧЕ ДанныеДокумента.ДокументВозникновенияРасходов
	               |	КОНЕЦ КАК ДокументВозникновенияРасходов
	               |ИЗ
	               |	Документ.ЗаписьКУДиР.Строки2 КАК ДанныеДокумента
	               |ГДЕ
	               |	ДанныеДокумента.Ссылка = &Ссылка";			   
				   
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции "УправлениеПечатью.СоздатьКоллекциюКомандПечати".
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли