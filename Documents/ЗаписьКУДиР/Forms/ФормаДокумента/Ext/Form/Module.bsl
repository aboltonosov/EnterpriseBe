#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ДополнительныеОтчетыИОбработки
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
		Если Объект.Строки.Количество() Тогда
			// Создаем новый документ сторнирования, укажем что для него время нельзя менять.
			ЭтотОбъект.АвтоВремя = РежимАвтоВремя.НеИспользовать;
		КонецЕсли;
	КонецЕсли;

	// Активизировать первую непустую табличную часть
	СписокТабличныхЧастей = Новый СписокЗначений;
	СписокТабличныхЧастей.Добавить("Строки", "Строки");
	СписокТабличныхЧастей.Добавить("Строки2", "Строки2");
	СписокТабличныхЧастей.Добавить("УменьшениеНалога", "УменьшениеНалога");
	
	// ВводНаОсновании
	ВводНаОсновании.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюСоздатьНаОсновании);
	// Конец ВводНаОсновании

	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ДобавлениеНовойЗаписиСторноКУДиР" Тогда
		
		ДанныеДляДобавления = Объект["Строки"];
	
		НоваяСтрока = ДанныеДляДобавления.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Параметр);
		НоваяСтрока.ДатаНомер = Параметр.РеквизитыПервичногоДокумента;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ЗаполнитьДобавленныеКолонкиТаблиц();

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьЗаголовокФормы(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)

	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;

	// Общие проверки условий по датам.
	ТребуетсяВызовСервера = ОбщегоНазначенияБПКлиент.ТребуетсяВызовСервераПриИзмененииДатыДокумента(Объект.Дата, 
		ТекущаяДатаДокумента);
		
	// Если определили, что изменение даты может повлиять на какие-либо параметры, 
	// то передаем обработку на сервер.
	Если ТребуетсяВызовСервера Тогда
		ДатаПриИзмененииНаСервере();
	КонецЕсли;
	
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ОрганизацияПриИзмененииНаСервере();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, 
		ЭтотОбъект, 
		"Объект.Комментарий");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТабличныхЧастейФормы

&НаКлиенте
Процедура СтрокиГрафа5ПриИзменении(Элемент)
	Элементы.Строки.ТекущиеДанные.Графа4 = Элементы.Строки.ТекущиеДанные.Графа5 + Элементы.Строки.ТекущиеДанные.ДоходЕНВД;
КонецПроцедуры

&НаКлиенте
Процедура СтрокиГрафа7ПриИзменении(Элемент)
	Элементы.Строки.ТекущиеДанные.Графа6 = Элементы.Строки.ТекущиеДанные.Графа7 + Элементы.Строки.ТекущиеДанные.РасходЕНВД;
КонецПроцедуры

&НаКлиенте
Процедура СтрокиДоходЕНВДПриИзменении(Элемент)
	Элементы.Строки.ТекущиеДанные.Графа4 = Элементы.Строки.ТекущиеДанные.Графа5 + Элементы.Строки.ТекущиеДанные.ДоходЕНВД;
КонецПроцедуры

&НаКлиенте
Процедура СтрокиРасходЕНВДПриИзменении(Элемент)
	Элементы.Строки.ТекущиеДанные.Графа6 = Элементы.Строки.ТекущиеДанные.Графа7 + Элементы.Строки.ТекущиеДанные.РасходЕНВД;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// ВводНаОсновании
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ВводНаОсновании

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец МенюОтчеты

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Записать(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Провести(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()

	ТекущаяДатаДокумента			= Объект.Дата;

	УстановитьФункциональныеОпцииФормы();
	
	УстановитьЗаголовокФормы(ЭтаФорма);
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)

	Объект		= Форма.Объект;
	Элементы	= Форма.Элементы;
	
	Элементы.ГруппыУменьшениеНалога.Видимость	= Истина;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	ОбщегоНазначенияБПКлиентСервер.УстановитьПараметрыФункциональныхОпцийФормыДокумента(ЭтаФорма);
		
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	
	ДатаОбработатьИзменение();
			
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ДатаОбработатьИзменение()

	УстановитьФункциональныеОпцииФормы();

КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ОрганизацияОбработатьИзменение();
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ОрганизацияОбработатьИзменение()
	
	УстановитьФункциональныеОпцииФормы();
			
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()

	Для Каждого СтрокаТаблицы Из Объект.УменьшениеНалога Цикл
		
		НачалоПериода = ОтчетыКлиентСервер.НачалоПериодаОтчета(
			Перечисления.ДоступныеПериодыОтчета.Месяц, СтрокаТаблицы.ПериодНачисления);
		КонецПериода  = ОтчетыКлиентСервер.КонецПериодаОтчета(
			Перечисления.ДоступныеПериодыОтчета.Месяц, СтрокаТаблицы.ПериодНачисления);
		
		СтрокаТаблицы.ПериодСтрокой = ВыборПериодаКлиентСервер.ПолучитьПредставлениеПериодаОтчета(
			Перечисления.ДоступныеПериодыОтчета.Месяц, НачалоПериода, КонецПериода);		
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УменьшениеНалогаПериодСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("УменьшениеНалогаПериодСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Месяц");
	ОбщегоНазначенияУТКлиент.ПериодНачалоВыбора(ЭтаФорма, Элемент, СтандартнаяОбработка, ВидПериода, Оповещение, Элементы.УменьшениеНалога.ТекущиеДанные.ПериодНачисления);

КонецПроцедуры

&НаКлиенте
Процедура УменьшениеНалогаПериодСтрокойНачалоВыбораЗавершение(ВыбранныйПериод, ДополнительныеПараметры) Экспорт 
	
	Если ВыбранныйПериод = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.УменьшениеНалога.ТекущиеДанные.ПериодСтрокой = ВыбранныйПериод.Представление;
	Элементы.УменьшениеНалога.ТекущиеДанные.ПериодНачисления = ВыбранныйПериод.Значение;
	
КонецПроцедуры

&НаКлиенте
Процедура УменьшениеНалогаПериодСтрокойОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ВидПериода = ПредопределенноеЗначение("Перечисление.ДоступныеПериодыОтчета.Месяц");
	КонецПериода = "";
	ВыборПериодаКлиент.ПериодОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка,
		ВидПериода, Элементы.УменьшениеНалога.ТекущиеДанные.ПериодСтрокой, Элементы.УменьшениеНалога.ТекущиеДанные.ПериодНачисления, КонецПериода);
		
КонецПроцедуры

&НаКлиенте
Процедура УменьшениеНалогаПериодСтрокойПриИзменении(Элемент)
	
	КонецПериода = "";	
	ВыборПериодаКлиент.ПериодПриИзменении(
		Элемент, Элементы.УменьшениеНалога.ТекущиеДанные.ПериодСтрокой, Элементы.УменьшениеНалога.ТекущиеДанные.ПериодНачисления, КонецПериода);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокФормы(Форма)
	
	Объект	= Форма.Объект;
	
	ТекстЗаголовка	= НСтр("ru = 'Запись книги учета доходов и расходов (УСН)'");
	
	Если Объект.Ссылка.Пустая() Тогда
		Форма.Заголовок = ТекстЗаголовка + " " + НСтр("ru = '(создание)'");
	Иначе
		Форма.Заголовок = ТекстЗаголовка + " " + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1 от %2'"), Объект.Номер, Объект.Дата);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

