#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
//
// Параметры:
// 		КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Документы.ПринятиеКУчетуОС.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

// Заполняет список команд создания на основании.
//
// Параметры:
// 		КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПоступлениеПредметовЛизинга) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ПоступлениеПредметовЛизинга.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ПоступлениеПредметовЛизинга);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьЛизинг";
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	Возврат ИсточникиДанных;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ПоступлениеПредметовЛизинга";
	
	ЗначенияПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров = Новый Структура;
	
	Если ИмяРегистра = "ПервоначальныеСведенияОСНалоговыйУчет" Тогда
		
		ПереопределениеРасчетаПараметров.Вставить("ВариантУчетаИмущества", "ТабличнаяЧасть.Ссылка.ДоговорЛизинга.ВариантУчетаИмущества");
		
		ТекстЗапроса = ТекстЗапросаТаблицаПервоначальныеСведенияОСНалоговыйУчет(ТекстыЗапроса, Неопределено);
		СинонимТаблицыДокумента = "ТабличнаяЧасть";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(ТекстЗапроса,
																								ПолноеИмяДокумента,
																								СинонимТаблицыДокумента,
																								ПереопределениеРасчетаПараметров);

	Возврат Результат;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаПервоначальныеСведенияОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПервоначальныеСведенияОСНалоговыйУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМестонахождениеОСБухгалтерскийУчет(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСостоянияОСОрганизаций(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСчетаБухгалтерскогоУчетаОС(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина,, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.ДоговорЛизинга,
	|	ДанныеДокумента.ДоговорЛизинга.ВариантУчетаИмущества КАК ВариантУчетаИмущества,
	|	ДанныеДокумента.ДоговорЛизинга.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.СчетУчета,
	|	ДанныеДокумента.ВалютаВзаиморасчетов,
	|	ДанныеДокумента.Валюта
	|ИЗ
	|	Документ.ПоступлениеПредметовЛизинга КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка Из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	ВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаДокументаКоэффициентУпр = 0;
	ВалютаВзаиморасчетовКоэффициентУпр = 0;
	Если Реквизиты.Валюта = ВалютаУправленческогоУчета Тогда
		ВалютаДокументаКоэффициентУпр = 1;
	ИначеЕсли Реквизиты.ВалютаВзаиморасчетов = ВалютаУправленческогоУчета Тогда
		ВалютаВзаиморасчетовКоэффициентУпр = 1;
	Иначе
		ВалютаДокументаКоэффициентУпр = РаботаСКурсамивалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
			Реквизиты.Валюта, ВалютаУправленческогоУчета, Реквизиты.Период);
	КонецЕсли;
	Запрос.УстановитьПараметр("ВалютаДокументаКоэффициентУпр", ВалютаДокументаКоэффициентУпр);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетовКоэффициентУпр", ВалютаВзаиморасчетовКоэффициентУпр);
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ВалютаДокументаКоэффициентРегл = 0;
	ВалютаВзаиморасчетовКоэффициентРегл = 0;
	Если Реквизиты.Валюта = ВалютаРегламентированногоУчета Тогда
		ВалютаДокументаКоэффициентРегл = 1;
	ИначеЕсли Реквизиты.ВалютаВзаиморасчетов = ВалютаРегламентированногоУчета Тогда
		ВалютаВзаиморасчетовКоэффициентРегл = 1;
	Иначе
		ВалютаДокументаКоэффициентРегл = РаботаСКурсамивалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
			Реквизиты.Валюта, ВалютаРегламентированногоУчета, Реквизиты.Период);
	КонецЕсли;
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ВалютаДокументаКоэффициентРегл", ВалютаДокументаКоэффициентРегл);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетовКоэффициентРегл", ВалютаВзаиморасчетовКоэффициентРегл);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВременнаяТаблицаОсновныеСредства(ТекстыЗапроса)
	
	ИмяТаблицы = "ТаблицаОС";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОС.Ссылка,
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.ИнвентарныйНомер,
	|	ТаблицаОС.ИдентификаторСтроки,
	|	ТаблицаОС.Сумма КАК ЗалоговаяСтоимость,
	|	ТаблицаОС.Сумма КАК Сумма,
	|	ТаблицаОС.СуммаНУ КАК СуммаНУ,
	|	ТаблицаОС.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаОС.СтавкаНДС КАК СтавкаНДС,
	|	
	|	&ВалютаДокументаКоэффициентУпр * ТаблицаОС.СуммаСНДС
	|	+ &ВалютаВзаиморасчетовКоэффициентУпр * ТаблицаОС.СуммаВзаиморасчетов КАК УпрСумма,
	|
	|	&ВалютаДокументаКоэффициентУпр * ТаблицаОС.СуммаНДС
	|	+ &ВалютаВзаиморасчетовКоэффициентУпр * ТаблицаОС.СуммаНДСВзаиморасчетов КАК УпрСуммаНДС,
	|
	|	&ВалютаДокументаКоэффициентУпр * (ТаблицаОС.СуммаСНДС-ТаблицаОС.СуммаНДС)
	|	+ &ВалютаВзаиморасчетовКоэффициентУпр * (ТаблицаОС.СуммаВзаиморасчетов-ТаблицаОС.СуммаНДСВзаиморасчетов) КАК УпрСуммаБезНДС,
	|	
	|	&ВалютаДокументаКоэффициентРегл * ТаблицаОС.СуммаСНДС
	|	+ &ВалютаВзаиморасчетовКоэффициентРегл * ТаблицаОС.СуммаВзаиморасчетов КАК РеглСумма,
	|
	|	&ВалютаДокументаКоэффициентРегл * ТаблицаОС.СуммаНДС
	|	+ &ВалютаВзаиморасчетовКоэффициентРегл * ТаблицаОС.СуммаНДСВзаиморасчетов КАК РеглСуммаНДС,
	|
	|	&ВалютаДокументаКоэффициентРегл * (ТаблицаОС.СуммаСНДС-ТаблицаОС.СуммаНДС)
	|	+ &ВалютаВзаиморасчетовКоэффициентРегл * (ТаблицаОС.СуммаВзаиморасчетов-ТаблицаОС.СуммаНДСВзаиморасчетов) КАК РеглСуммаБезНДС
	|	
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	Документ.ПоступлениеПредметовЛизинга.ОС КАК ТаблицаОС
	|ГДЕ
	|	ТаблицаОС.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПервоначальныеСведенияОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	НЕОПРЕДЕЛЕНО КАК СпособПоступления,
	|	ТаблицаОС.РеглСумма КАК ПервоначальнаяСтоимость,
	|	НЕОПРЕДЕЛЕНО КАК СпособНачисленияАмортизации,
	|	НЕОПРЕДЕЛЕНО КАК ПоказательНаработки,
	|	НЕОПРЕДЕЛЕНО КАК ПорядокПогашенияСтоимости,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаОС,
	|	НЕОПРЕДЕЛЕНО КАК КодПоОКОФ,
	|	НЕОПРЕДЕЛЕНО КАК ШифрПоЕНАОФ,
	|	НЕОПРЕДЕЛЕНО КАК АмортизационнаяГруппа,
	|	&ДоговорЛизинга КАК ДоговорЛизинга
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.ЗаБалансом)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИнвентарныйНомер,
	|	НЕОПРЕДЕЛЕНО КАК СпособПоступления,
	|	НЕОПРЕДЕЛЕНО КАК ПервоначальнаяСтоимость,
	|	НЕОПРЕДЕЛЕНО КАК СпособНачисленияАмортизации,
	|	НЕОПРЕДЕЛЕНО КАК ПоказательНаработки,
	|	НЕОПРЕДЕЛЕНО КАК ПорядокПогашенияСтоимости,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаОС,
	|	НЕОПРЕДЕЛЕНО КАК КодПоОКОФ,
	|	НЕОПРЕДЕЛЕНО КАК ШифрПоЕНАОФ,
	|	НЕОПРЕДЕЛЕНО КАК АмортизационнаяГруппа,
	|	&ДоговорЛизинга КАК ДоговорЛизинга
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПервоначальныеСведенияОСНалоговыйУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПервоначальныеСведенияОСНалоговыйУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                           КАК Период,
	|	ТабличнаяЧасть.ОсновноеСредство   КАК ОсновноеСредство,
	|	&Организация                      КАК Организация,
	|	ТабличнаяЧасть.СуммаНУ            КАК ПервоначальнаяСтоимостьНУ
	|ИЗ
	|	Документ.ПоступлениеПредметовЛизинга.ОС КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаМестонахождениеОСБухгалтерскийУчет(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МестонахождениеОСБухгалтерскийУчет";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	НЕОПРЕДЕЛЕНО КАК МОЛ,
	|	&Подразделение КАК Местонахождение,
	|	НЕОПРЕДЕЛЕНО КАК АдресМестонахождения
	|	
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.ЗаБалансом)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСостоянияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СостоянияОСОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	&Период КАК ДатаСостояния,
	|	ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету) КАК Состояние
	|	
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.ЗаБалансом)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСчетаБухгалтерскогоУчетаОС(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СчетаБухгалтерскогоУчетаОС";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	
	|	&СчетУчета КАК СчетУчета,
	|	НЕОПРЕДЕЛЕНО КАК СчетНачисленияАмортизации
	|	
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.ЗаБалансом)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаОС.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаОС.ОсновноеСредство КАК АналитикаРасходов,
	|	
	|	ТаблицаОС.УпрСумма КАК Сумма,
	|	ТаблицаОС.УпрСуммаБезНДС КАК СуммаБезНДС,
	|	0 КАК СуммаРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СуммаПрочихАктивов
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаПрочиеАктивыПассивы(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Лизинг) КАК Статья,
	|	&ДоговорЛизинга КАК Аналитика,
	|	
	|	ТаблицаОС.УпрСумма КАК Сумма
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	
	|	&Ссылка КАК Регистратор,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеРасходовЗаСчетПрочихАктивовПассивов) КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|
	|	&Подразделение КАК Подразделение,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Лизинг) КАК Статья,
	|	&ДоговорЛизинга КАК АналитикаАктивовПассивов,
	|
	|	&Подразделение КАК КорПодразделение,
	|	&НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ТаблицаОС.СтатьяРасходов КАК КорСтатья,
	|	ТаблицаОС.ОсновноеСредство КАК КорАналитикаРасходов,
	|	
	|	ТаблицаОС.УпрСумма КАК Сумма,
	|	ТаблицаОС.РеглСумма КАК СуммаРегл,
	|	
	|	&Валюта КАК Валюта,
	|	ТаблицаОС.Сумма КАК СуммаВВалюте,
	|	НЕОПРЕДЕЛЕНО КАК ВидОперацииПоЗарплате
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|ГДЕ
	|	&ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаТаблицаВременнаяТаблицаОсновныеСредства(ТекстыЗапроса);
	
	Текст =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТаблицаОС.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	0 КАК СуммаБезНДС,
	|	ТаблицаОС.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	
	|	ТаблицаОС.РеглСуммаБезНДС КАК СуммаБезНДСРегл,
	|	ТаблицаОС.РеглСумма - ТаблицаОС.РеглСуммаБезНДС КАК СуммаНДСРегл,
	|	ТаблицаОС.РеглСуммаБезНДС КАК БазаНДСРегл
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|	
	|ГДЕ
	|	&ВалютаРегламентированногоУчета <> &Валюта";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ПроведениеПоРеглУчету

Функция ТекстОтраженияВРеглУчете() Экспорт
	
	Разделитель = Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС;
	
	Возврат ЗабалансовыйУчетАрендованныхОС()
		+ Разделитель + ПоступлениеНаБалансЛизингополучателя()
		+ Разделитель + ПоступлениеНДС();
	
КонецФункции

Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

Функция ЗабалансовыйУчетАрендованныхОС()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Поступление на забалансовый учет арендуемых ОС (Дт СчетЗабалансовогоУчета:: Кт ---)
	|ВЫБРАТЬ
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл, Строки.СуммаВзаиморасчетов - Строки.СуммаНДСВзаиморасчетов) КАК Сумма,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	Операция.СчетУчета КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Операция.Контрагент КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Поступление на забалансовый учет ОС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеПредметовЛизинга КАК Операция
	|	ПО ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеПредметовЛизинга.ОС КАК Строки
	|	ПО Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО Строки.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|		И СуммыДокументовВВалютеРегл.СуммаБезНДСРегл <> 0
	|	
	|ГДЕ
	|	Операция.ДоговорЛизинга.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.ЗаБалансом)
	|";
	
КонецФункции

Функция ПоступлениеНаБалансЛизингополучателя()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Поступление расходов по лизингу на балансе лизингополучателя (Дт <08.3, 08.04.2> :: Кт <76.В>)
	|ВЫБРАТЬ
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаВзаиморасчетов - Строки.СуммаНДСВзаиморасчетов) КАК Сумма,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.ДоговорЛизинга.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР КОГДА УчетнаяПолитикаОрганизаций.УчетнаяПолитика.СхемаУчетаСтоимостиОСвНУ = ЗНАЧЕНИЕ(Перечисление.СхемыУчетаСтоимостиОСвНУ.СФормированиемПР) ТОГДА
	|		Строки.СуммаНУ 
	|	ИНАЧЕ
	|		ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаВзаиморасчетов - Строки.СуммаНДСВзаиморасчетов)
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР КОГДА УчетнаяПолитикаОрганизаций.УчетнаяПолитика.СхемаУчетаСтоимостиОСвНУ = ЗНАЧЕНИЕ(Перечисление.СхемыУчетаСтоимостиОСвНУ.СФормированиемПР) ТОГДА
	|		ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаВзаиморасчетов - Строки.СуммаНДСВзаиморасчетов) - Строки.СуммаНУ 
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.ДоговорЛизинга.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	Операция.ДоговорЛизинга.СчетУчетаАрендныеОбязательства КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.ДоговорЛизинга КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	Строки.СуммаВзаиморасчетов - Строки.СуммаНДСВзаиморасчетов КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ВЫБОР КОГДА УчетнаяПолитикаОрганизаций.УчетнаяПолитика.СхемаУчетаСтоимостиОСвНУ = ЗНАЧЕНИЕ(Перечисление.СхемыУчетаСтоимостиОСвНУ.СФормированиемПР) ТОГДА
	|		ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаВзаиморасчетов - Строки.СуммаНДСВзаиморасчетов) 
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Расходы по лизингу на балансе лизингополучателя"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеПредметовЛизинга КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеПредметовЛизинга.ОС КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|ГДЕ
	|	Операция.ДоговорЛизинга.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)
	|	И Операция.ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуиспользованию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Поступление расходов по лизингу на балансе лизингополучателя (Дт <08.3, 08.04.2> :: Кт <76.В>)
	|ВЫБРАТЬ
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.СуммаВзаиморасчетов) КАК Сумма,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.ДоговорЛизинга.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.ОсновноеСредство КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	ВЫБОР КОГДА УчетнаяПолитикаОрганизаций.УчетнаяПолитика.СхемаУчетаСтоимостиОСвНУ = ЗНАЧЕНИЕ(Перечисление.СхемыУчетаСтоимостиОСвНУ.СФормированиемПР) ТОГДА
	|		Строки.СуммаНУ 
	|	ИНАЧЕ
	|		ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.СуммаВзаиморасчетов)
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР КОГДА УчетнаяПолитикаОрганизаций.УчетнаяПолитика.СхемаУчетаСтоимостиОСвНУ = ЗНАЧЕНИЕ(Перечисление.СхемыУчетаСтоимостиОСвНУ.СФормированиемПР) ТОГДА
	|		ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.СуммаВзаиморасчетов) - Строки.СуммаНУ 
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.ДоговорЛизинга.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	Операция.ДоговорЛизинга.СчетУчетаАрендныеОбязательства КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.ДоговорЛизинга КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ВЫБОР КОГДА УчетнаяПолитикаОрганизаций.УчетнаяПолитика.СхемаУчетаСтоимостиОСвНУ = ЗНАЧЕНИЕ(Перечисление.СхемыУчетаСтоимостиОСвНУ.СФормированиемПР) ТОГДА
	|		Строки.СуммаНУ 
	|	ИНАЧЕ
	|		ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.СуммаВзаиморасчетов)
	|	КОНЕЦ КАК СуммаНУКт,
	|	ВЫБОР КОГДА УчетнаяПолитикаОрганизаций.УчетнаяПолитика.СхемаУчетаСтоимостиОСвНУ = ЗНАЧЕНИЕ(Перечисление.СхемыУчетаСтоимостиОСвНУ.СФормированиемПР) ТОГДА
	|		ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.СуммаВзаиморасчетов) - Строки.СуммаНУ 
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Расходы по лизингу на балансе лизингополучателя"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеПредметовЛизинга КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеПредметовЛизинга.ОС КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|ГДЕ
	|	Операция.ДоговорЛизинга.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)
	|	И Операция.ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|";
	
КонецФункции

Функция ПоступлениеНДС()
	
Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// НДС при поступлении услуг (Дт <19.ХХ> :: Кт <60.ХХ, 76.ХХ>)
	|ВЫБРАТЬ
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл, Строки.СуммаНДС) КАК Сумма,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаДт,
	|	Операция.ЗакупкаПодДеятельность                                        КАК АналитикаУчетаДт,
	|	Статьи.ВидЦенностиНДС                                                  КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Операция.Ссылка КАК СубконтоДт2,
	|	ВЫБОР КОГДА Статьи.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы) ТОГДА
	|		Строки.ОсновноеСредство
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.ДоговорЛизинга.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	Операция.ДоговорЛизинга.СчетУчетаАрендныеОбязательства КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.ДоговорЛизинга КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	Строки.СуммаНДСВзаиморасчетов КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Входящий НДС"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеПредметовЛизинга КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеПредметовЛизинга.ОС КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|	ПО
	|		Строки.СтатьяРасходов = Статьи.Ссылка
	|	
	|ГДЕ
	|	Операция.ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуиспользованию))
	|	И Операция.ДоговорЛизинга.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)
	|";

КонецФункции

#КонецОбласти

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УП 2.2.1,
// заполняет реквизиты "Курс" и "Кратность" документа "ПоступлениеПредметовЛизинга".
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ПоступлениеПредметовЛизинга.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПоступлениеПредметовЛизинга КАК ПоступлениеПредметовЛизинга
	|ГДЕ ПоступлениеПредметовЛизинга.Курс = 0 И НЕ ПоступлениеПредметовЛизинга.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) 
	|			И НЕ ПоступлениеПредметовЛизинга.ВалютаВзаиморасчетов = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ПоступлениеПредметовЛизинга";
	
	МетаданныеДокумента = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли; 
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыДляОбработки.Ссылка                      КАК Ссылка,
	|	ОбъектыДляОбработки.Ссылка.ВерсияДанных         КАК ВерсияДанных,
	|	ОбъектыДляОбработки.Ссылка.Дата                 КАК Дата,
	|	ОбъектыДляОбработки.Ссылка.Валюта               КАК Валюта,
	|	ОбъектыДляОбработки.Ссылка.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ОбъектыДляОбработки.Ссылка.СуммаВзаиморасчетов  КАК СуммаВзаиморасчетов,
	|	ОбъектыДляОбработки.Ссылка.СуммаДокумента       КАК СуммаДокумента
	|ПОМЕСТИТЬ ТаблицаСсылок
	|ИЗ
	|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСсылок.Дата          КАК Дата,
	|	ТаблицаСсылок.Валюта        КАК Валюта,
	|	МАКСИМУМ(КурсыВалют.Период) КАК ДатаКурса
	|ПОМЕСТИТЬ ДатыКурсовВалютыДокумента
	|ИЗ
	|	ТаблицаСсылок КАК ТаблицаСсылок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ТаблицаСсылок.Валюта = КурсыВалют.Валюта
	|			И ТаблицаСсылок.Дата >= КурсыВалют.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСсылок.Дата,
	|	ТаблицаСсылок.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСсылок.Дата                 КАК Дата,
	|	ТаблицаСсылок.ВалютаВзаиморасчетов КАК Валюта,
	|	МАКСИМУМ(КурсыВалют.Период)        КАК ДатаКурса
	|ПОМЕСТИТЬ ДатыКурсовВалютыВзаиморасчетов
	|ИЗ
	|	ТаблицаСсылок КАК ТаблицаСсылок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ТаблицаСсылок.ВалютаВзаиморасчетов = КурсыВалют.Валюта
	|			И ТаблицаСсылок.Дата >= КурсыВалют.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСсылок.Дата,
	|	ТаблицаСсылок.ВалютаВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Ссылка               КАК Ссылка,
	|	ДанныеДляОбработки.ВерсияДанных         КАК ВерсияДанных,
	|	ДанныеДляОбработки.Валюта               КАК ВалютаДокумента,
	|	ДанныеДляОбработки.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДляОбработки.СуммаДокумента       КАК СуммаДокумента,
	|	ДанныеДляОбработки.СуммаВзаиморасчетов  КАК СуммаВзаиморасчетов,
	|	ЕСТЬNULL(КурсыВалютыДокумента.Кратность,1)          КАК КратностьВалютыДокумента,
	|	ЕСТЬNULL(КурсыВалютыВзаиморасчетов.Кратность,1)     КАК КратностьВалютыВзаиморасчетов
	|ИЗ
	|	ТаблицаСсылок КАК ДанныеДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыКурсовВалютыДокумента КАК ДатыКурсовВалютыДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ  РегистрСведений.КурсыВалют КАК КурсыВалютыДокумента
	|			ПО ДатыКурсовВалютыДокумента.ДатаКурса = КурсыВалютыДокумента.Период
	|				И ДатыКурсовВалютыДокумента.Валюта = КурсыВалютыДокумента.Валюта
	|		ПО ДанныеДляОбработки.Валюта = ДатыКурсовВалютыДокумента.Валюта
	|			И ДанныеДляОбработки.Дата = ДатыКурсовВалютыДокумента.Дата
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыКурсовВалютыВзаиморасчетов КАК ДатыКурсовВалютыВзаиморасчетов
	|			ЛЕВОЕ СОЕДИНЕНИЕ  РегистрСведений.КурсыВалют КАК КурсыВалютыВзаиморасчетов
	|			ПО ДатыКурсовВалютыВзаиморасчетов.ДатаКурса = КурсыВалютыВзаиморасчетов.Период
	|				И ДатыКурсовВалютыВзаиморасчетов.Валюта = КурсыВалютыВзаиморасчетов.Валюта
	|		ПО ДанныеДляОбработки.ВалютаВзаиморасчетов = ДатыКурсовВалютыВзаиморасчетов.Валюта
	|			И ДанныеДляОбработки.Дата = ДатыКурсовВалютыВзаиморасчетов.Дата
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТОбъектыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			
			НачатьТранзакцию();
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									МетаданныеДокумента,
									Выборка.Ссылка,
									ТекстСообщения);
			Продолжить;
			
		КонецПопытки;
		
		ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
		Если ДокументОбъект = Неопределено Тогда
			ЗафиксироватьТранзакцию();
			Продолжить;
		КонецЕсли;
		
		ОбъектИзменен = Ложь;
		
		Если ДокументОбъект.Курс = 0 И ЗначениеЗаполнено(ДокументОбъект.Валюта) И ЗначениеЗаполнено(ДокументОбъект.ВалютаВзаиморасчетов) Тогда
			Если Выборка.СуммаВзаиморасчетов = 0 ИЛИ Выборка.СуммаДокумента = 0 ИЛИ Выборка.ВалютаДокумента = Выборка.ВалютаВзаиморасчетов Тогда
				ДокументОбъект.Курс = 1;
				ДокументОбъект.Кратность = 1;
			ИначеЕсли Выборка.ВалютаДокумента = ВалютаРеглУчета И НЕ Выборка.ВалютаВзаиморасчетов = ВалютаРеглУчета Тогда
				ДокументОбъект.Курс = Окр(Выборка.СуммаДокумента / Выборка.СуммаВзаиморасчетов * Выборка.КратностьВалютыВзаиморасчетов, 4);
				ДокументОбъект.Кратность = Выборка.КратностьВалютыВзаиморасчетов;
			Иначе
				ДокументОбъект.Курс = Окр(Выборка.СуммаВзаиморасчетов / Выборка.СуммаДокумента * Выборка.КратностьВалютыДокумента, 4);
				ДокументОбъект.Кратность = Выборка.КратностьВалютыДокумента;
			КонецЕсли;
			ОбъектИзменен = Истина;
		КонецЕсли;
	
		Попытка
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект, , , РежимЗаписиДокумента.Запись);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеДокумента,
				Выборка.Ссылка,
				ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли

