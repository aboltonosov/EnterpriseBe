#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область СозданиеНаОсновании

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	
	Обработки.СправочноеРазмещениеНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
КонецПроцедуры
	
#КонецОбласти 

#Область Отчеты

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	КомандаОтчет = ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);
	
	Если КомандаОтчет <> Неопределено Тогда
		
		Для Каждого Форма Из Метаданные.Документы.ВводОстатков.Формы Цикл
			
			Если Форма.Имя = "ФормаДокумента" Тогда Продолжить КонецЕсли;
			Если Форма.Имя = "ФормаСписка" Тогда Продолжить КонецЕсли;
			Если Форма.Имя = "ФормаВыбора" Тогда Продолжить КонецЕсли;
			Если Форма.Имя = "ФормаПодбораТоваровИзЗаказаПереработчику" Тогда Продолжить КонецЕсли;
			
			КомандаОтчет.СписокФорм = КомандаОтчет.СписокФорм + "," + Форма.Имя;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт

	ИменаРеквизитов = "Склад,Помещение,Подразделение,ТипОперации,Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры:
//	 Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение:
//	 Структура - Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ВводОстатков";
	
	Если Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство Тогда
		//++ НЕ УТ
		ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийВПодразделении(Объект.Подразделение);
		ПараметрыУказанияСерий.ИмяПоляСклад = "Подразделение";
		//-- НЕ УТ
	Иначе
		ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	КонецЕсли; 
	
	НужнаяОперация = Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.УдалитьОстаткиСобственныхТоваровНаАдресномСкладе
		//++ НЕ УТ
		Или Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство 
		//-- НЕ УТ
		Или Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров
		Или Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.УдалитьОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе
		Или Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию
		Или Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков 
		Или Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений;
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры И НужнаяОперация;
	
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям И НужнаяОперация;
														
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ВводОстатков);
	ПараметрыУказанияСерий.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	ПараметрыУказанияСерий.ИмяПоляПомещение = "Помещение";
	
	Если Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков
		ИЛИ ((Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров
				ИЛИ Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию
				ИЛИ Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
			И СкладыСервер.ИспользоватьАдресноеХранение(Объект.Склад, Объект.Помещение, Объект.Дата)) Тогда 
			
		ПараметрыУказанияСерий.ИспользоватьАдресноеХранение = Истина;
		ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
		ПараметрыУказанияСерий.ИмяПоляКоличество = "КоличествоУпаковок";	
	КонецЕсли;
	
	ПараметрыУказанияСерий.ТолькоСерииСУчетомОстатков = 
								Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков 
							Или Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений;

	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Процедура заполняет статусы указания серий в строках ТЧ товары
//
// Параметры:
//  ПараметрыУказанияСерий - Структура - структура параметров указания серий, возвращаемая соотвествующей процедурой модуля менеджера документа (обработки)
//
// Возвращаемое значение:
//	Строка - Текст запроса заполнения статусов.
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.ИмяПоляСклад = "Подразделение" Тогда
		//++ НЕ УТ
		Возврат ТекстЗапросаЗаполненияСтатусовУказанияСерийПроизводство();
		//-- НЕ УТ
	Иначе
		Возврат ТекстЗапросаЗаполненияСтатусовУказанияСерийСклад(ПараметрыУказанияСерий);
	КонецЕсли;
	
КонецФункции
//++ НЕ УТ
#Область ПроведениеРегламентированныйУчет

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
#Область ТекстОстаткиСобственныхТоваров                    // (Дт 41 :: Кт 000)
	ТекстОстаткиСобственныхТоваров = "
	|ВЫБРАТЬ // Остатки собственных товаров (Дт 41 :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР
	|		КОГДА Операция.НалогообложениеНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|		ТОГДА Строки.СуммаРегл + Строки.НДСРегл
	|		ИНАЧЕ Строки.СуммаРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	Операция.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладах) КАК СчетДт,
	|	Операция.Склад КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	Строки.СуммаРегл - Строки.СуммаПР - Строки.СуммаВР КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки собственных товаров"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|ГДЕ
	|	Операция.ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|		)
	|	И НЕ Операция.Склад.ЦеховаяКладовая
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти

#Область ТекстОстаткиСобственныхТоваровНаПроизводстве                    // (Дт 20 :: Кт 000)
	ТекстОстаткиСобственныхТоваровНаПроизводстве = "
	|ВЫБРАТЬ // Остатки собственных товаров (Дт 20 :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР
	|		КОГДА Операция.НалогообложениеНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|		ТОГДА Строки.СуммаРегл + Строки.НДСРегл
	|		ИНАЧЕ Строки.СуммаРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	Операция.Склад.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаРегл - Строки.СуммаПР - Строки.СуммаВР КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки собственных товаров в производстве"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|ГДЕ
	|	Операция.ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|		)
	|	И Операция.Склад.ЦеховаяКладовая
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти

#Область ТекстОстаткиКомиссионныхТоваров                   // (Дт 004.01 :: Кт 000)
	ТекстОстаткиКомиссионныхТоваров = "
	|ВЫБРАТЬ // Остатки товаров, принятых на комиссию (Дт 004.01 :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	(Строки.СуммаРегл + Строки.НДСРегл) КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладе) КАК СчетДт,
	|	Операция.Склад КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	(Строки.СуммаРегл + Строки.НДСРегл) - Строки.СуммаПР - Строки.СуммаВР КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	"" Остатки товаров, принятых на комиссию"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|	)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстОстаткиПереданныхТоваров                     // (Дт 45 :: Кт 000)
	ТекстОстаткиПереданныхТоваров = "
	|ВЫБРАТЬ // Остатки товаров, переданных на комиссию (Дт 45 :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР
	|		КОГДА Операция.НалогообложениеНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|	ТОГДА
	|		Строки.СуммаРегл + Строки.НДСРегл
	|	ИНАЧЕ 
	|		Строки.СуммаРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПередачаНаКомиссию) КАК ВидСчетаДт,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		Строки.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Строки.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	Строки.СуммаРегл - Строки.СуммаПР - Строки.СуммаВР КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки товаров, переданных на комиссию"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстОстаткиПолученныхАвансов                     // (Дт 000 :: Кт 62.02)
	ТекстОстаткиПолученныхАвансов = "
	|ВЫБРАТЬ // Остатки авансов, полученных от клиентов (Дт 000 :: Кт 62.02)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Строки.РасчетныйДокумент.Подразделение КАК ПодразделениеКт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	ВЫБОР КОГДА Строки.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		Строки.РасчетныйДокумент
	|	ИНАЧЕ
	|		Строки.РасчетныйДокумент.Договор
	|	КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки авансов, полученных от клиентов"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыСПартнерами КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстРасчетыМеждуОрганизациямиПоАвансам           // (Дт 000 :: Кт 62.02)
	ТекстРасчетыМеждуОрганизациямиПоАвансам = "
	|ВЫБРАТЬ // Остатки авансов, полученных от других организаций (Дт 000 :: Кт 62.02) Учет у продавца
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Строки.РасчетныйДокумент.Подразделение КАК ПодразделениеКт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Операция.ОрганизацияПолучатель КАК СубконтоКт1,
	|	ВЫБОР 
	|		КОГДА Строки.РасчетныйДокумент ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|			ТОГДА ВЫРАЗИТЬ(Строки.РасчетныйДокумент КАК Документ.ОтчетПоКомиссииМеждуОрганизациями).Договор
	|		КОГДА Строки.РасчетныйДокумент ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании 
	|			ТОГДА ВЫРАЗИТЬ(Строки.РасчетныйДокумент КАК Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании).Договор
	|		КОГДА Строки.РасчетныйДокумент ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями 
	|			ТОГДА ВЫРАЗИТЬ(Строки.РасчетныйДокумент КАК Документ.ПередачаТоваровМеждуОрганизациями).Договор
	|		ИНАЧЕ Строки.РасчетныйДокумент
	|	КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки авансов, полученных от других организаций"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Остатки авансов, полученных от других организаций (Дт 60.01 :: Кт 000) Учет у покупателя
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Строки.РасчетныйДокумент.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.Организация КАК СубконтоДт1,
	|	ВЫБОР 
	|		КОГДА Строки.РасчетныйДокумент ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|			ТОГДА ВЫРАЗИТЬ(Строки.РасчетныйДокумент КАК Документ.ОтчетПоКомиссииМеждуОрганизациями).Договор
	|		КОГДА Строки.РасчетныйДокумент ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании 
	|			ТОГДА ВЫРАЗИТЬ(Строки.РасчетныйДокумент КАК Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании).Договор
	|		КОГДА Строки.РасчетныйДокумент ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями 
	|			ТОГДА ВЫРАЗИТЬ(Строки.РасчетныйДокумент КАК Документ.ПередачаТоваровМеждуОрганизациями).Договор
	|		ИНАЧЕ Строки.РасчетныйДокумент
	|	КОНЕЦ КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки авансов, полученных от других организаций"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстРасчетыМеждуОрганизациямиПоРеализациям       // (Дт 62.01 :: Кт 000)
	ТекстРасчетыМеждуОрганизациямиПоРеализациям = "
	|ВЫБРАТЬ // Остатки задолженности по реализациям другим организациям (Дт 62.01 :: Кт 000) Учет у продавца
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Строки.РасчетныйДокумент.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.ОрганизацияПолучатель КАК СубконтоДт1,
	|	ВЫБОР 
	|		КОГДА Строки.РасчетныйДокумент ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|			ТОГДА ВЫРАЗИТЬ(Строки.РасчетныйДокумент КАК Документ.ОтчетПоКомиссииМеждуОрганизациями).Договор
	|		КОГДА Строки.РасчетныйДокумент ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании 
	|			ТОГДА ВЫРАЗИТЬ(Строки.РасчетныйДокумент КАК Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании).Договор
	|		КОГДА Строки.РасчетныйДокумент ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями 
	|			ТОГДА ВЫРАЗИТЬ(Строки.РасчетныйДокумент КАК Документ.ПередачаТоваровМеждуОрганизациями).Договор
	|		ИНАЧЕ Строки.РасчетныйДокумент
	|	КОНЕЦ КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки задолженности по реализациям другим организациям"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Остатки задолженности по реализациям другим организациям (Дт 000 :: Кт 60.01) Учет у покупателя
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.ОрганизацияПолучатель КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Строки.РасчетныйДокумент.Подразделение КАК ПодразделениеКт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Операция.Организация КАК СубконтоКт1,
	|	ВЫБОР 
	|		КОГДА Строки.РасчетныйДокумент ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|			ТОГДА ВЫРАЗИТЬ(Строки.РасчетныйДокумент КАК Документ.ОтчетПоКомиссииМеждуОрганизациями).Договор
	|		КОГДА Строки.РасчетныйДокумент ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании 
	|			ТОГДА ВЫРАЗИТЬ(Строки.РасчетныйДокумент КАК Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании).Договор
	|		КОГДА Строки.РасчетныйДокумент ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями 
	|			ТОГДА ВЫРАЗИТЬ(Строки.РасчетныйДокумент КАК Документ.ПередачаТоваровМеждуОрганизациями).Договор
	|		ИНАЧЕ Строки.РасчетныйДокумент
	|	КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки задолженности по реализациям другим организациям"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстОстаткиЗадолженностиКлиентов                 // (Дт 62.01 :: Кт 000)
	ТекстОстаткиЗадолженностиКлиентов = "
	|ВЫБРАТЬ // Остатки задолженности клиентов (Дт 62.01 :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Строки.РасчетныйДокумент.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	ВЫБОР КОГДА Строки.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		Строки.РасчетныйДокумент
	|	ИНАЧЕ
	|		Строки.РасчетныйДокумент.Договор
	|	КОНЕЦ КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки задолженности клиентов"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыСПартнерами КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстОстаткиЗадолженностиКлиентовПоТаре           // (Дт 76.06 :: Кт 000)
	ТекстОстаткиЗадолженностиКлиентовПоТаре = "
	|ВЫБРАТЬ // Остатки задолженности клиентов по таре (Дт 76.06 :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентамиТара) КАК ВидСчетаДт,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка) КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.Валюта КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.Контрагент КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки задолженности клиентов по таре"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстОстаткиЗадолженностьПередПоставщиками        // (Дт 000 :: Кт 60.01)
	ТекстОстаткиЗадолженностьПередПоставщиками = "
	|ВЫБРАТЬ // Остатки задолженности перед поставщиками (Дт 000 :: Кт 60.01)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Строки.РасчетныйДокумент.Подразделение КАК ПодразделениеКт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	ВЫБОР КОГДА Строки.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		Строки.РасчетныйДокумент
	|	ИНАЧЕ
	|		Строки.РасчетныйДокумент.Договор
	|	КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки задолженности перед поставщиками"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыСПартнерами КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстОстаткиАвансовПоставщикам                    // (Дт 60.02 :: Кт 000)
	ТекстОстаткиАвансовПоставщикам = "
	|ВЫБРАТЬ // Остатки авансов поставщикам (Дт 60.02 :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные) КАК ВидСчетаДт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка)) КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Строки.РасчетныйДокумент.Подразделение КАК ПодразделениеДт,
	|	ЕСТЬNULL(Строки.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	ВЫБОР КОГДА Строки.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		Строки.РасчетныйДокумент
	|	ИНАЧЕ
	|		Строки.РасчетныйДокумент.Договор
	|	КОНЕЦ КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки авансов поставщикам"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыСПартнерами КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстОстаткиВКассах                               // (Дт 50.01 :: Кт 000)
	ТекстОстаткиВКассах = "
	|ВЫБРАТЬ // Остатки наличных денежных средств (Дт 50.01 :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаДт,
	|	Строки.Касса КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Касса.ВалютаДенежныхСредств КАК ВалютаДт,
	|	Строки.Касса.Подразделение КАК ПодразделениеДт,
	|	Строки.Касса.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки наличных денежных средств"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.Кассы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВКассах)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстОстаткиВКассахККМ                            // (Дт 50.02 :: Кт 000)
	ТекстОстаткиВКассахККМ = "
	|ВЫБРАТЬ // Остатки наличных денежных средств в кассах ККМ (Дт 50.02 :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.КассаККМ.ВалютаДенежныхСредств КАК ВалютаДт,
	|	Строки.КассаККМ.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ВЫБОР КОГДА Строки.КассаККМ.ВалютаДенежныхСредств = Константы.ВалютаРегламентированногоУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОперационнаяКасса)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КассаОрганизацииВал)
	|	КОНЕЦ КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки наличных денежных средств в кассах ККМ"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.КассыККМ КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстОстаткиВКассахККМКОформлениюОтчетовОПродажах // (Дт 000 :: Кт 50.02)
	ТекстОстаткиВКассахККМКОформлениюОтчетовОПродажах = "
	|ВЫБРАТЬ // Остатки наличных денежных средств (Дт 000 :: Кт 50.02)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.КассаККМ.ВалютаДенежныхСредств КАК ВалютаКт,
	|	Строки.КассаККМ.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОперационнаяКасса) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки наличных денежных средств"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.КассыККМ КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|ГДЕ
	|	Операция.ТипОперации = 
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстОстаткиНаБанковскихСчетах                    // (Дт 51, 52 :: Кт 000
	ТекстОстаткиНаБанковскихСчетах = "
	|ВЫБРАТЬ // Остатки безналичных денежных средств (Дт 51, 52 :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ДенежныеСредства) КАК ВидСчетаДт,
	|	Строки.БанковскийСчет КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.БанковскийСчет.ВалютаДенежныхСредств КАК ВалютаДт,
	|	Строки.БанковскийСчет.Подразделение КАК ПодразделениеДт,
	|	Строки.БанковскийСчет.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки безналичных денежных средств"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.БанковскиеСчета КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстОстаткиРасчетовПоЭквайрингу                  // (Дт 57 :: Кт 000)
	ТекстОстаткиРасчетовПоЭквайрингу = "
	|ВЫБРАТЬ // Остатки расчетов по эквайрингу (Дт 57 :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.ЭквайринговыйТерминал.БанковскийСчет.ВалютаДенежныхСредств КАК ВалютаДт,
	|	Строки.ЭквайринговыйТерминал.БанковскийСчет.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПродажиПоПлатежнымКартам) КАК СчетДт,
	|	Строки.ЭквайринговыйТерминал.Эквайер КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки расчетов по эквайрингу"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыПоЭквайрингу КАК Строки
	|	ПО
	|		Строки.Ссылка = ДокументыКОтражению.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.СторноОтчетовПоЭквайрингу)
	|	И Строки.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредствПоЭквайрингу.ПоступлениеПоПлатежнойКарте)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Остатки расчетов по эквайрингу (Дт 000 :: Кт 57)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.ЭквайринговыйТерминал.БанковскийСчет.ВалютаДенежныхСредств КАК ВалютаКт,
	|	Строки.ЭквайринговыйТерминал.БанковскийСчет.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПродажиПоПлатежнымКартам) КАК СчетКт,
	|	Строки.ЭквайринговыйТерминал.Эквайер КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки расчетов по эквайрингу"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыПоЭквайрингу КАК Строки
	|	ПО
	|		Строки.Ссылка = ДокументыКОтражению.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.СторноОтчетовПоЭквайрингу)
	|	И Строки.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредствПоЭквайрингу.СписаниеПоПлатежнойКарте)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстОстаткиУПодотчетныхЛиц                       // (Дт 71 :: Кт 000)
	ТекстОстаткиУПодотчетныхЛиц = "
	|ВЫБРАТЬ // Остатки наличных денежных средств (Дт 71 :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.Валюта КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ВЫБОР КОГДА Строки.Валюта = Константы.ВалютаРегламентированногоУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал)
	|	КОНЕЦ КАК СчетДт,
	|	Строки.ПодотчетноеЛицо КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	Строки.Сумма КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки наличных денежных средств"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыСПодотчетниками КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|ГДЕ
	|	Операция.ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетников)
	|	)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстПерерасходыПодотчетныхЛиц                    // (Дт 000 :: Кт 71)
	ТекстПерерасходыПодотчетныхЛиц = "
	|ВЫБРАТЬ // Остатки наличных денежных средств (Дт 000 :: Кт 71)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР КОГДА Строки.Валюта = Константы.ВалютаРегламентированногоУчета ТОГДА
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал)
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ПодотчетноеЛицо КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.Сумма КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки наличных денежных средств"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыСПодотчетниками КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстОстаткиНДСНеПринятогоКВычету        // (Дт 19.03 :: Кт 000)
	ТекстОстаткиНДСНеПринятогоКВычету = "
	|ВЫБРАТЬ // Остатки НДС не принятого к вычету по рег. НДСПредъявленный (Дт 19.03 :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	НДСПредъявленный.НДС КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) 	КАК ВидСчетаДт,
	|	НДСПредъявленный.ВидДеятельностиНДС 									КАК АналитикаУчетаДт,
	|	НДСПредъявленный.ВидЦенности 											КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) 								КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) 					КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) 				КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Операция.Ссылка 	КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО 		КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки НДС не принятого к вычету"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		НДСПредъявленный.Регистратор = Операция.Ссылка
	|ГДЕ
	|	НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти
	
#Область ТекстПодарочныеСертификаты                        // (Дт 000 :: Кт 76.09)
	ТекстПодарочныеСертификаты = "
	|ВЫБРАТЬ //// Остатки авансов от розничного клиента (Дт 000 :: Кт 76.09)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПодарочнымСертификатам) КАК ВидСчетаКт,
	|	Строки.ПодарочныйСертификат.Владелец КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.ПодарочныйСертификат.Владелец.Валюта КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель) КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.СуммаВВалютеСертификата КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки авансов от розничного клиента"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.ПодарочныеСертификаты КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПодарочныеСертификаты)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти

#Область ТекстПрочиеРасходы                                // (Дт 25, 26, 44, 20, 23 :: Кт 000)
	ТекстПрочиеРасходы = "
	|ВЫБРАТЬ // Остатки прочих расходов (Дт <25, 26, 44, 20, 23> :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.АналитикаРасходов КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее) КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаРегл - Строки.СуммаПР - Строки.СуммаВР КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки прочих расходов "" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.ПрочиеРасходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиПрочихОпераций
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиПрочихОпераций.Ссылка
	|		И СтатьиПрочихОпераций.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|ГДЕ 
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПрочихРасходов)
	|	И СтатьиПрочихОпераций.Ссылка ЕСТЬ NULL
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти

#Область ТекстПрочиеОперации    // (Дт ХХ :: Кт 000)
	ТекстПрочиеОперации = "
	|ВЫБРАТЬ // Остатки прочих расходов (Дт <ХХ> :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаРегл - Строки.СуммаПР - Строки.СуммаВР КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки прочих активов"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.ПрочиеРасходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиПрочихОпераций
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиПрочихОпераций.Ссылка
	|		И СтатьиПрочихОпераций.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|ГДЕ 
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПрочихРасходов)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
#КонецОбласти


#Область ТекстТоварыПереданныеВПроизвоство                 // (Дт 20, 2Х, 44, 91.02 :: Кт 000)

	ТекстТоварыПереданныеВПроизводство = "
	|ВЫБРАТЬ // Остатки товаров, переданных в производство (Дт <2X> :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР
	|		КОГДА Операция.НалогообложениеНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|	ТОГДА
	|		Строки.СуммаРегл + Строки.НДСРегл
	|	ИНАЧЕ 
	|		Строки.СуммаРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	Операция.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Строки.ГруппаПродукции КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА Строки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Работы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|	КОНЕЦ КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаРегл - Строки.СуммаПР - Строки.СуммаВР КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки товаров, переданных в производство"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|";
	
#КонецОбласти

#Область ТекстТоварыПереданныеПереработчику                // (Дт 10.07 :: Кт 000)

	ТекстТоварыПереданныеПереработчику = "
	|ВЫБРАТЬ // Остатки товаров, переданных переработчику (Дт 10.07 :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата        КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО         КАК ИдентификаторСтроки,
	|
	|	ВЫБОР
	|		КОГДА Операция.НалогообложениеНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|	ТОГДА
	|		Строки.СуммаРегл + Строки.НДСРегл
	|	ИНАЧЕ 
	|		Строки.СуммаРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		Строки.ВидЗапасов.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		Аналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ        КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)                          КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО	                                            	  КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)         КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.МатериалыПереданныеВПереработку) КАК СчетДт,
	|	Операция.Контрагент    КАК СубконтоДт1,
	|	Аналитика.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО           КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	Строки.СуммаРегл - Строки.СуммаПР - Строки.СуммаВР КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)       КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки товаров, переданных переработчику"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.Товары КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Аналитика.КлючАналитики = Строки.АналитикаУчетаНоменклатуры
	|
	|ГДЕ 
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И НЕ Строки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|";
	
#КонецОбласти

	// Кредиты и займы

#Область ТекстОстаткиПоКредитамЗаймам                      // Дт 000 :: Кт 66.01
	
	ТекстОстаткиПоКредитамЗаймам = "
	|ВЫБРАТЬ // Остатки по кредитам и займам Дт 000 :: Кт 66.01
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|		ИНАЧЕ ДанныеДоговора.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР
	|// Кредиты
	|		КОГДА ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КраткосрочныеКредиты)
	|		КОГДА ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КраткосрочныеКредитыВал)
	|		КОГДА ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДолгосрочныеКредиты)
	|		КОГДА ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДолгосрочныеКредитыВал)
	|// Займы полученные
	|		КОГДА ДанныеДоговора.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КраткосрочныеЗаймы)
	|		КОГДА ДанныеДоговора.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КраткосрочныеЗаймыВал)
	|		КОГДА ДанныеДоговора.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДолгосрочныеЗаймы)
	|		КОГДА ДанныеДоговора.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДолгосрочныеЗаймыВал)
	|		КОНЕЦ КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА 0
	|		ИНАЧЕ Строки.Сумма
	|	КОНЕЦ КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	""Остатки по кредитам и займам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО 
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Константы КАК Константы
	|	ПО 
	|		Истина
	|
	|ГДЕ 
	|	ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|	И Строки.Сумма > 0
	|";
	
#КонецОбласти

#Область ТекстОстаткиВыплатПоКредитамЗаймам                // Дт 66.01 :: Кт 000
	
	ТекстОстаткиВыплатПоКредитамЗаймам = "
	|ВЫБРАТЬ // Остатки выплат по кредитам и займам Дт 66.01 :: Кт 000
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Строки.СуммаРегл < 0
	|		ТОГДА -Строки.СуммаРегл
	|		ИНАЧЕ Строки.СуммаРегл
	|	КОНЕЦ КАК Сумма,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|		ИНАЧЕ ДанныеДоговора.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ВЫБОР
	|// Кредиты
	|		КОГДА ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КраткосрочныеКредиты)
	|		КОГДА ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КраткосрочныеКредитыВал)
	|		КОГДА ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДолгосрочныеКредиты)
	|		КОГДА ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДолгосрочныеКредитыВал)
	|// Займы полученные
	|		КОГДА ДанныеДоговора.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КраткосрочныеЗаймы)
	|		КОГДА ДанныеДоговора.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КраткосрочныеЗаймыВал)
	|		КОГДА ДанныеДоговора.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДолгосрочныеЗаймы)
	|		КОГДА ДанныеДоговора.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДолгосрочныеЗаймыВал)
	|		КОНЕЦ КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА 0
	|		ИНАЧЕ ВЫБОР КОГДА Строки.Сумма < 0
	|				ТОГДА -Строки.Сумма
	|				ИНАЧЕ Строки.Сумма
	|			КОНЕЦ
	|	КОНЕЦ КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки выплат по кредитам и займам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО 
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО 
	|		Истина
	|
	|ГДЕ 
	|	ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|	И Строки.Сумма < 0
	|";
	
#КонецОбласти

#Область ТекстОстаткиВыплаченныхПроцентовПоКредитам        // Дт 66.02 :: Кт 000
	
	ТекстОстаткиВыплаченныхПроцентовПоКредитам = "
	|ВЫБРАТЬ // Остатки выплаченных процентов по кредитам Дт 66.02 :: Кт 000
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Строки.СуммаРегл < 0
	|		ТОГДА -Строки.СуммаРегл
	|		ИНАЧЕ Строки.СуммаРегл
	|	КОНЕЦ КАК Сумма,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|		ИНАЧЕ ДанныеДоговора.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ВЫБОР
	|// Кредиты
	|		КОГДА ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитам)
	|		КОГДА ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитамВал)
	|		КОГДА ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымКредитам)
	|		КОГДА ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымКредитамВал)
	|// Займы полученные
	|		КОГДА ДанныеДоговора.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымЗаймам)
	|		КОГДА ДанныеДоговора.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымЗаймамВал)
	|		КОГДА ДанныеДоговора.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымЗаймам)
	|		КОГДА ДанныеДоговора.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымЗаймамВал)
	|		КОНЕЦ КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА 0
	|		ИНАЧЕ ВЫБОР КОГДА Строки.Сумма < 0
	|				ТОГДА -Строки.Сумма
	|				ИНАЧЕ Строки.Сумма
	|			КОНЕЦ
	|	КОНЕЦ КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки выплаченных процентов по кредитам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО 
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Константы КАК Константы
	|	ПО 
	|		Истина
	|
	|ГДЕ
	|	ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|	И Строки.Сумма < 0
	|";
	
#КонецОбласти

#Область ТекстОстаткиНачисленныхПроцентовПоКредитам        // Дт 000 :: Кт 66.02
	
	ТекстОстаткиНачисленныхПроцентовПоКредитам = "
	|ВЫБРАТЬ // Остатки начисленных процентов по кредитам Дт 000 :: Кт 66.02
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|		ИНАЧЕ ДанныеДоговора.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР
	|// Кредиты
	|		КОГДА ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитам)
	|		КОГДА ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымКредитамВал)
	|		КОГДА ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымКредитам)
	|		КОГДА ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымКредитамВал)
	|// Займы полученные
	|		КОГДА ДанныеДоговора.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымЗаймам)
	|		КОГДА ДанныеДоговора.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Краткосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоКраткосрочнымЗаймамВал)
	|		КОГДА ДанныеДоговора.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымЗаймам)
	|		КОГДА ДанныеДоговора.ТипДоговора <> ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.КредитВБанке)
	|				И ДанныеДоговора.ТипСрочности = ЗНАЧЕНИЕ(Перечисление.ТипыСрочностиКредитовИДепозитов.Долгосрочный)
	|				И ДанныеДоговора.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоДолгосрочнымЗаймамВал)
	|		КОНЕЦ КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА 0
	|		ИНАЧЕ Строки.Сумма
	|	КОНЕЦ КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки начисленных процентов по кредитам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО 
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО 
	|		Истина
	|
	|ГДЕ 
	|	ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|	И Строки.Сумма > 0
	|";
	
#КонецОбласти

#Область ТекстОстаткиВыплаченнойКомиссииПоКредитам         // Дт 76.09 :: Кт 000
	
	ТекстОстаткиВыплаченнойКомиссииПоКредитам = "
	|ВЫБРАТЬ // Остатки выплаченной комиссии по кредитам Дт 76.09 :: Кт 000
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Строки.СуммаРегл < 0
	|		ТОГДА -Строки.СуммаРегл
	|		ИНАЧЕ Строки.СуммаРегл
	|	КОНЕЦ КАК Сумма,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаДт,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|		ИНАЧЕ ДанныеДоговора.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА 0
	|		ИНАЧЕ ВЫБОР КОГДА Строки.Сумма < 0
	|				ТОГДА -Строки.Сумма
	|				ИНАЧЕ Строки.Сумма
	|			КОНЕЦ
	|	КОНЕЦ КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки выплаченной комиссии по кредитам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|
	|ГДЕ 
	|	ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|	И Строки.Сумма < 0
	|";
	
#КонецОбласти

#Область ТекстОстаткиНачисленнийКомиссииПоКредитам         // Дт 000 :: Кт 76.09
	
	ТекстОстаткиНачисленнийКомиссииПоКредитам = "
	|ВЫБРАТЬ // Остатки начисленной комиссии по кредитам Дт 000 :: Кт 76.09
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|		ИНАЧЕ ДанныеДоговора.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА 0
	|		ИНАЧЕ Строки.Сумма
	|	КОНЕЦ КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки начисленной комиссии по кредитам"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО 
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|
	|ГДЕ 
	|	ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|	И Строки.Сумма > 0
	|";
	
#КонецОбласти

#Область ТекстОстаткиПоДепозитам                           // Дт 55.03 :: Кт 000
	
	ТекстОстаткиПоДепозитам = "
	|ВЫБРАТЬ // Остатки по депозитам Дт 55.03 :: Кт 000
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|		ИНАЧЕ ДанныеДоговора.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДепозитныеСчета)
	|			ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДепозитныеСчетаВал)
	|	КОНЕЦ КАК СчетДт,
	|	ДанныеДоговора.БанковскийСчетКонтрагента КАК СубконтоДт1,
	|	ВЫБОР 
	|		КОГДА Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|			ТОГДА ДанныеДоговора.СтатьяДДСПоступленияВыдачи
	|			ИНАЧЕ ДанныеДоговора.СтатьяДДСПроцентов 
	|	КОНЕЦ КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА 0
	|		ИНАЧЕ Строки.Сумма
	|	КОНЕЦ КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки по депозитам"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|
	|ГДЕ 
	|	ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.Депозит)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И (Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|		ИЛИ Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			И ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.ДепозитВБанкеСКапитализацией)
	|	)
	|	И Строки.Сумма > 0
	|";
	
#КонецОбласти

#Область ТекстОстаткиПроцентовПоДепозитам                  // Дт 76.09 :: Кт 000
	
	ТекстОстаткиПроцентовПоДепозитам = "
	|ВЫБРАТЬ // Остатки по депозитам Дт 76.09 :: Кт 000
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|		ИНАЧЕ ДанныеДоговора.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ДанныеДоговора.Контрагент КАК СубконтоДт1,
	|	Строки.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА 0
	|		ИНАЧЕ Строки.Сумма
	|	КОНЕЦ КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки по депозитам"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|
	|ГДЕ
	|	ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.Депозит)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.ДепозитВБанке)
	|	И Строки.ТипСуммы В (ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты))
	|	И Строки.Сумма > 0
	|";
	
#КонецОбласти

#Область ТекстОстаткиПолученныхДенегПоДепозитам            // Дт 000 :: Кт 55.03
	
	ТекстОстаткиПолученныхДенегПоДепозитам = "
	|ВЫБРАТЬ // Остатки полученных денег по депозитам Дт 000 :: Кт 55.03
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Строки.СуммаРегл < 0
	|		ТОГДА -Строки.СуммаРегл
	|		ИНАЧЕ Строки.СуммаРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|		ИНАЧЕ ДанныеДоговора.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДепозитныеСчета)
	|			ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДепозитныеСчетаВал)
	|		КОНЕЦ КАК СчетКт,
	|	ДанныеДоговора.БанковскийСчет КАК СубконтоКт1,
	|	ВЫБОР 
	|		КОГДА Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|			ТОГДА ДанныеДоговора.СтатьяДДСОсновногоДолга
	|			ИНАЧЕ ДанныеДоговора.СтатьяДДСПроцентов 
	|	КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА 0
	|		ИНАЧЕ ВЫБОР КОГДА Строки.Сумма < 0
	|				ТОГДА -Строки.Сумма
	|				ИНАЧЕ Строки.Сумма
	|			КОНЕЦ
	|	КОНЕЦ КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки полученных денег по депозитам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|
	|ГДЕ 
	|	ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.Депозит)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И (Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|		ИЛИ Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			И ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.ДепозитВБанкеСКапитализацией)
	|	)
	|	И Строки.Сумма < 0
	|	
	|";
	
#КонецОбласти

#Область ТекстОстаткиПолученныхДенегПоПроцентамДепозитов   // Дт 000 :: Кт 76.09
	
	ТекстОстаткиПолученныхДенегПоПроцентамДепозитов = "
	|ВЫБРАТЬ // Остатки полученных денег процентов по депозитам Дт 000 :: Кт 76.09
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Строки.СуммаРегл < 0
	|		ТОГДА -Строки.СуммаРегл
	|		ИНАЧЕ Строки.СуммаРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаКт,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|		ИНАЧЕ ДанныеДоговора.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	ДанныеДоговора.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА 0
	|		ИНАЧЕ ВЫБОР КОГДА Строки.Сумма < 0
	|				ТОГДА -Строки.Сумма
	|				ИНАЧЕ Строки.Сумма
	|			КОНЕЦ
	|	КОНЕЦ КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки полученных денег по депозитам"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|
	|ГДЕ
	|	ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.Депозит)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И ДанныеДоговора.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговораКредитовИДепозитов.ДепозитВБанке)
	|	И Строки.ТипСуммы В (ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты))
	|	И Строки.Сумма < 0
	|	
	|";
	
#КонецОбласти

#Область ТекстОстаткиОсновногоДолгаПоЗаймамВыданным        // Дт 58.03 :: Кт 000
	
	ТекстОстаткиОсновногоДолгаПоЗаймамВыданным = "
	|ВЫБРАТЬ // Остатки по займам выданным Дт 58.03 :: Кт 000
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|		ИНАЧЕ ДанныеДоговора.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПредоставленныеЗаймы) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА 0
	|		ИНАЧЕ Строки.Сумма
	|	КОНЕЦ КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки по займам выданным"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|
	|ГДЕ 
	|	ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.ЗаймВыданный)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|	И Строки.Сумма > 0
	|";
	
#КонецОбласти

#Область ТекстОстаткиПолученныхДенегОсновногоДолгаПоЗаймаВыданным // Дт 000 :: Кт 58.03
	
	ТекстОстаткиПолученныхДенегОсновногоДолгаПоЗаймаВыданным = "
	|ВЫБРАТЬ // Остатки полученных процентов по займам выданным Дт 000 :: Кт 58.03
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Строки.СуммаРегл < 0
	|		ТОГДА -Строки.СуммаРегл
	|		ИНАЧЕ Строки.СуммаРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|		ИНАЧЕ ДанныеДоговора.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПредоставленныеЗаймы) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА 0
	|		ИНАЧЕ ВЫБОР КОГДА Строки.Сумма < 0
	|				ТОГДА -Строки.Сумма
	|				ИНАЧЕ Строки.Сумма
	|			КОНЕЦ
	|	КОНЕЦ КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки полученных процентов по займам выданным"" КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО 
	|		Истина
	|
	|ГДЕ 
	|	ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.ЗаймВыданный)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И Строки.ТипСуммы  = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|	И Строки.Сумма < 0
	|";
	
#КонецОбласти

#Область ТекстОстаткиПроцентовПоЗаймамВыданным               // Дт 76.09 :: Кт 000
	
	ТекстОстаткиПроцентовПоЗаймамВыданным = "
	|ВЫБРАТЬ // Остатки по займам выданным Дт 76.09 :: Кт 000
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаРегл КАК Сумма,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаДт,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|		ИНАЧЕ ДанныеДоговора.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаДт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеДт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Контрагент КАК СубконтоДт1,
	|	Строки.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА 0
	|		ИНАЧЕ Строки.Сумма
	|	КОНЕЦ КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки по займам выданным"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|
	|ГДЕ 
	|	ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.ЗаймВыданный)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И Строки.ТипСуммы  = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|	И Строки.Сумма > 0
	|";
	
#КонецОбласти

#Область ТекстОстаткиПолученныхДенегПроцентовПоЗаймаВыданным // Дт 000 :: Кт 76.09
	
	ТекстОстаткиПолученныхДенегПроцентовПоЗаймаВыданным = "
	|ВЫБРАТЬ // Остатки полученных процентов по займам выданным Дт 000 :: Кт 76.09
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Строки.СуммаРегл < 0
	|		ТОГДА -Строки.СуммаРегл
	|		ИНАЧЕ Строки.СуммаРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами) КАК ВидСчетаКт,
	|	ДанныеДоговора.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|		ИНАЧЕ ДанныеДоговора.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаКт,
	|	ДанныеДоговора.Подразделение КАК ПодразделениеКт,
	|	ДанныеДоговора.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Контрагент КАК СубконтоКт1,
	|	Строки.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	ВЫБОР КОГДА ДанныеДоговора.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета
	|		ТОГДА 0
	|		ИНАЧЕ ВЫБОР КОГДА Строки.Сумма < 0
	|				ТОГДА -Строки.Сумма
	|				ИНАЧЕ Строки.Сумма
	|			КОНЕЦ
	|	КОНЕЦ КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки полученных процентов по займам выданным"" КАК Содержание
	|
	|ИЗ 	
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДанныеДоговора
	|	ПО
	|		Строки.Договор = ДанныеДоговора.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Константы КАК Константы
	|	ПО
	|		Истина
	|
	|ГДЕ
	|	ДанныеДоговора.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.ЗаймВыданный)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И Строки.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|	И Строки.Сумма < 0
	|";
	
#КонецОбласти

	// Передача в эксплуатацию

#Область ТекстПередачаВЭксплуатацию                                 // Дт 10.11.Х :: Кт 000
	ТекстПередачаВЭксплуатацию = "
	|ВЫБРАТЬ // Остатки ТМЦ в эксплуатации (Дт 10.11.Х :: Кт 000)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.Сумма КАК Сумма,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатации) КАК ВидСчетаДт,
	|	Строки.КатегорияЭксплуатации КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Строки.ПартияТМЦВЭксплуатации КАК СубконтоДт2,
	|	Строки.ФизическоеЛицо КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	Строки.Сумма - Строки.СуммаПР - Строки.СуммаВР КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Вспомогательный) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки ТМЦ в эксплуатации"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.ТМЦВЭксплуатации КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|	
	|ГДЕ
	|	Операция.ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТМЦВЭксплуатации)
	|	)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И Строки.КатегорияЭксплуатации.СпособПогашенияСтоимостиБУ В (
	|		ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПоСроку),
	|		ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПоНаработке)
	|	)
	|	И НЕ (Строки.Сумма = 0 И Строки.СуммаПР = 0 И Строки.СуммаВР = 0)
	|";
#КонецОбласти

#Область ТекстПередачаВЭксплуатациюЗаБаланс                         // Дт МЦ.0Х :: Кт ---
	ТекстПередачаВЭксплуатациюЗаБаланс = "
	|ВЫБРАТЬ // Остатки ТМЦ в эксплуатации (забаланс) (Дт МЦ.0Х :: Кт ---)
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	Строки.ПервоначальнаяСумма КАК Сумма,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатацииЗаБалансом) КАК ВидСчетаДт,
	|	Строки.КатегорияЭксплуатации КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.Номенклатура КАК СубконтоДт1,
	|	Строки.ПартияТМЦВЭксплуатации КАК СубконтоДт2,
	|	Строки.ФизическоеЛицо КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Остатки ТМЦ в эксплуатации (забаланс)"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.ТМЦВЭксплуатации КАК Строки
	|	ПО
	|		Операция.Ссылка = Строки.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		ДокументыКОтражению.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|	
	|ГДЕ
	|	Операция.ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТМЦВЭксплуатации)
	|	)
	|	И НЕ Операция.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ОперативныйУчет)
	|	И ЕСТЬNULL(УчетнаяПолитикаОрганизаций.УчетнаяПолитика.ЗабалансовыйУчетТМЦВЭксплуатации, ЛОЖЬ) = ИСТИНА
	|";
#КонецОбласти

	Возврат ТекстОстаткиСобственныхТоваров
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиСобственныхТоваровНаПроизводстве
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиКомиссионныхТоваров
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПереданныхТоваров
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПолученныхАвансов
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстРасчетыМеждуОрганизациямиПоАвансам
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстРасчетыМеждуОрганизациямиПоРеализациям
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиЗадолженностиКлиентов
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиЗадолженностиКлиентовПоТаре
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиЗадолженностьПередПоставщиками
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиАвансовПоставщикам
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиВКассах
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиВКассахККМ
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиВКассахККМКОформлениюОтчетовОПродажах
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиНаБанковскихСчетах
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиРасчетовПоЭквайрингу
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиУПодотчетныхЛиц
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПерерасходыПодотчетныхЛиц
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиНДСНеПринятогоКВычету
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПодарочныеСертификаты
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрочиеРасходы
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПрочиеОперации
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстТоварыПереданныеВПроизводство
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстТоварыПереданныеПереработчику
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПоКредитамЗаймам
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиВыплатПоКредитамЗаймам
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиВыплаченныхПроцентовПоКредитам
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиНачисленныхПроцентовПоКредитам
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиВыплаченнойКомиссииПоКредитам
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиНачисленнийКомиссииПоКредитам
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПоДепозитам
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПроцентовПоДепозитам
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПолученныхДенегПоДепозитам
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПолученныхДенегПоПроцентамДепозитов
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиОсновногоДолгаПоЗаймамВыданным
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПолученныхДенегОсновногоДолгаПоЗаймаВыданным
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПроцентовПоЗаймамВыданным
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПолученныхДенегПроцентовПоЗаймаВыданным
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПередачаВЭксплуатацию
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПередачаВЭксплуатациюЗаБаланс;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

// Инициализирует параметры, обслуживающие выбор назначений в формах документа.
// 
//  Возвращаемое значение:
//  Структура - структура параметров, см. Справочники.Назначения.МакетФормыВыбораНазначений().
//
Функция МакетФормыВыбораНазначений() Экспорт
	
	МакетФормы = Справочники.Назначения.МакетФормыВыбораНазначений();
	
//++ НЕ УТКА
	ШаблонНазначения = Справочники.Назначения.ДобавитьШаблонНазначений(МакетФормы);
	ШаблонНазначения.ДавальческаяПродукция2_2 = "ЛОЖЬ";
//-- НЕ УТКА
	
	// Потребности в товарах на складе.
	// "ПереходНаАдресноеХранениеТовары" - имя табличной части формы "ФормаТовары". Т.е. механизм настроен таким образом,
	// что ожидает в каждой форме где встраиваются назначения именно это имя табличной части.
	ОписаниеКолонок = Справочники.Назначения.ДобавитьОписаниеКолонок(МакетФормы, "ОбеспечениеЗаказов", Истина, "Объект.ПереходНаАдресноеХранениеТовары.Назначение");
	ОписаниеКолонок.Колонки.НайтиПоЗначению("Потребность").Пометка = Истина;
	
	ОписаниеКолонок.ПутиКДанным.Номенклатура     = "Объект.ПереходНаАдресноеХранениеТовары.Номенклатура";
	ОписаниеКолонок.ПутиКДанным.Характеристика   = "Объект.ПереходНаАдресноеХранениеТовары.Характеристика";
	ОписаниеКолонок.ПутиКДанным.Склад            = "Объект.Склад";
	
	Возврат МакетФормы;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)

	ВыбраннаяОперация = Неопределено;
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Параметры.Ключ) Тогда
		ВыбраннаяОперация = Параметры.Ключ.ТипОперации;
	ИначеЕсли Параметры.Свойство("ЗначенияЗаполнения") Тогда
		Параметры.ЗначенияЗаполнения.Свойство("ТипОперации", ВыбраннаяОперация);
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") Тогда
		ВыбраннаяОперация = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Параметры.ЗначениеКопирования,"ТипОперации");
	ИначеЕсли Параметры.Свойство("ОтборПоТипамОпераций") И Параметры.ОтборПоТипамОпераций.Количество() = 1 Тогда
		ВыбраннаяОперация = Параметры.ОтборПоТипамОпераций[0].Значение;
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("ТипОперации", ВыбраннаяОперация);
		Параметры.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		Если Параметры.Свойство("Организация") Тогда
			ЗначенияЗаполнения.Вставить("Организация", Параметры.Организация);
		КонецЕсли;
		Если Параметры.Свойство("РазделУчета") Тогда
			ЗначенияЗаполнения.Вставить("РазделУчета", Параметры.РазделУчета);
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(ВыбраннаяОперация) Тогда
		СтандартнаяОбработка = Ложь;
		СоответствиеТиповОперацийФормам = Новый Соответствие;
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах"), "ФормаКассы");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке"), "ФормаКассы");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВКассах"), "ФормаКассы");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов"), "ФормаРасчетыСПартнерами");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками"), "ФормаРасчетыСПартнерами");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетников"), "ФормаРасчетыСПодотчетнымиЛицами");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств"), "ФормаРасчетыСПодотчетнымиЛицами");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах"), "ФормаБанковскиеСчета");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов"), "ФормаРасчетыСПартнерами");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам"), "ФормаРасчетыСПартнерами");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам"), "ФормаРасчетыМеждуОрганизациями");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям"), "ФормаРасчетыМеждуОрганизациями");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиСобственныхТоваровНаАдресномСкладе"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.СторноОтчетовПоЭквайрингу"), "ФормаРасчетыПоЭквайрингу");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиПрочихАктивовПассивов"), "ФормаПрочиеАктивыПассивы");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ПодарочныеСертификаты"), "ФормаПодарочныеСертификаты");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов"), "ФормаРасчетыПоДоговорамКредитовИДепозитов");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиТМЦВЭксплуатации"), "ФормаТМЦВЭксплуатации");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство"), "ФормаТовары");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОстаткиПрочихРасходов"), "ФормаПрочиеРасходы");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ФинансовыйРезультатЗаПрошлыеПериоды"), "ФормаФинансовыйРезультат");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.ОптовыеПродажиЗаПрошлыеПериоды"), "ФормаОптовыеПродажи");
		СоответствиеТиповОперацийФормам.Вставить(ПредопределенноеЗначение("Перечисление.ТипыОперацийВводаОстатков.РозничныеПродажиЗаПрошлыеПериоды"), "ФормаРозничныеПродажи");
		ВыбраннаяФорма = СоответствиеТиповОперацийФормам[ВыбраннаяОперация];
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Ссылка");
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ТипОперации");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Данные.Ссылка <> Неопределено Тогда
		Представление = ОбщегоНазначенияУТВызовСервера.ЗаголовокДокументаВводОстатковПоТипуОперации(Данные.Ссылка,
			Данные.Номер,
			Данные.Дата,
			Данные.ТипОперации);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ВводОстатков"; 
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	
	Если ИмяРегистра = "ТоварыВЯчейках" Тогда
	
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(ТекстЗапроса,
																								ПолноеИмяДокумента,
																								СинонимТаблицыДокумента,
																								ПереопределениеРасчетаПараметров);

	Возврат Результат;

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПередачиТоваровНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваНаличные(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваВКассахККМ(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваБезналичные(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыПоЭквайрингу(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюИзлишковНедостач(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПринятаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПереданнаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаПодарочныеСертификаты(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаИсторияПодарочныхСертификатов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыПоДоговорамКредитовИДепозитов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТМЦВЭксплуатации(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыПереданныеПереработчику(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаФинансовыеРезультаты(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваВПути(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры);
//++ НЕ УТ
	ТекстЗапросаТаблицаПорядокОтраженияПрочихОпераций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
//-- НЕ УТ
	
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                     КАК Период,
	|	ДанныеДокумента.Ссылка                   КАК Ссылка,
	|	ДанныеДокумента.Организация              КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель    КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.Подразделение            КАК Подразделение,
	|	ДанныеДокумента.Подразделение.ВариантОбособленногоУчетаТоваров КАК ВариантОбособленногоУчетаТоваров,
	|	ДанныеДокумента.Склад                    КАК Склад,
	|	ДанныеДокумента.Валюта                   КАК Валюта,
	|	ДанныеДокумента.Помещение                КАК Помещение,
	|	ДанныеДокумента.ТипОперации              КАК ТипОперации,
	|	ДанныеДокумента.НалогообложениеНДС       КАК НалогообложениеНДС,
	|	ДанныеДокумента.Партнер                  КАК Партнер,
	|	ДанныеДокумента.Контрагент               КАК Контрагент,
	|	ДанныеДокумента.Договор                  КАК Договор,
	|	ДанныеДокумента.СоглашениеСКомиссионером КАК СоглашениеСКомиссионером,
	|	ДанныеДокумента.СоглашениеСКомитентом    КАК СоглашениеСКомитентом,
	|	ДанныеДокумента.СоглашениеСКлиентом      КАК СоглашениеСКлиентом,
	|	ДанныеДокумента.Партнер                  КАК Поставщик,
	|	ДанныеДокумента.СоглашениеСКомитентом    КАК Соглашение,
	|	Ложь                                     КАК ОбособленныйУчетТоваровПоСделке,
	|	ДанныеДокумента.ЗаказПереработчику       КАК ЗаказПереработчику,
	|	ДанныеДокумента.ЗонаПриемки              КАК ЗонаПриемки,
	|	ДанныеДокумента.Менеджер                 КАК Менеджер,
	|	ДанныеДокумента.ЦенаВключаетНДС          КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ДанныеДокумента.РазделУчета				 КАК РазделУчета
	|ИЗ
	|	Документ.ВводОстатков КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	Запрос.УстановитьПараметр("Период" , Реквизиты.Период);
	Если Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию Или
		Реквизиты.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам Тогда
		Запрос.УстановитьПараметр("Склад" , Реквизиты.Партнер);
	Иначе
		Запрос.УстановитьПараметр("Склад" , Реквизиты.Склад);
	КонецЕсли;
	Запрос.УстановитьПараметр("Помещение",                      Реквизиты.Помещение);
	Запрос.УстановитьПараметр("Организация",                    Реквизиты.Организация);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель",          Реквизиты.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Подразделение",                  Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ТипОперации",                    Реквизиты.ТипОперации);
	Запрос.УстановитьПараметр("Партнер",                        Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Контрагент",                     Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Договор",                        Реквизиты.Договор);
	Запрос.УстановитьПараметр("СоглашениеСКлиентом",            Реквизиты.СоглашениеСКлиентом);
	Запрос.УстановитьПараметр("СоглашениеСКомиссионером",       Реквизиты.СоглашениеСКомиссионером);
	Запрос.УстановитьПараметр("НалогообложениеНДС",             Реквизиты.НалогообложениеНДС);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов", ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Запрос.УстановитьПараметр("Менеджер",                       Реквизиты.Менеджер);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",     Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ЗонаПриемки",                    Реквизиты.ЗонаПриемки);
	Запрос.УстановитьПараметр("ЗаказПереработчику",             Реквизиты.ЗаказПереработчику);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",                Реквизиты.ЦенаВключаетНДС);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",        Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ЗаполнятьОперУчет",				Не Реквизиты.РазделУчета = Перечисления.РазделыВводаНачальныхОстатков.РегламентированныйУчет);
	Запрос.УстановитьПараметр("ЗаполнятьРеглУчет",				Не Реквизиты.РазделУчета = Перечисления.РазделыВводаНачальныхОстатков.ОперативныйУчет);
	Запрос.УстановитьПараметр("ИспользуетсяНазначение",         ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("ПустоеНазначение",               Справочники.Назначения.ПустаяСсылка());
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ключи.Номенклатура         КАК Номенклатура,
	|	Ключи.Характеристика       КАК Характеристика,
	|	&ПустоеНазначение          КАК Назначение,
	|	Ключи.Серия                КАК Серия,
	|	Ключи.Склад                КАК Склад
	|ИЗ
	|	(
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Ключи.Номенклатура         КАК Номенклатура,
	|		Ключи.Характеристика       КАК Характеристика,
	|		&ПустоеНазначение          КАК Назначение,
	|		Ключи.Серия                КАК Серия,
	|		Ключи.Склад                КАК Склад
	|	ИЗ
	|		Документ.ВводОстатков.Товары КАК Товары
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|		ПО Товары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|	ГДЕ
	|		Не &ИспользуетсяНазначение
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Ключи.Номенклатура         КАК Номенклатура,
	|		Ключи.Характеристика       КАК Характеристика,
	|		&ПустоеНазначение          КАК Назначение,
	|		Ключи.Серия                КАК Серия,
	|		Ключи.Склад                КАК Склад
	|	ИЗ
	|		Документ.ВводОстатков.ОптовыеПродажи КАК Продажи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|		ПО Продажи.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|	ГДЕ
	|		Не &ИспользуетсяНазначение
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Ключи.Номенклатура         КАК Номенклатура,
	|		Ключи.Характеристика       КАК Характеристика,
	|		&ПустоеНазначение          КАК Назначение,
	|		Ключи.Серия                КАК Серия,
	|		Ключи.Склад                КАК Склад
	|	ИЗ
	|		Документ.ВводОстатков.РозничныеПродажи КАК Продажи
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|		ПО Продажи.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|	ГДЕ
	|		Не &ИспользуетсяНазначение
	|	) КАК Ключи
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Ключи.Номенклатура = Аналитика.Номенклатура
	|		И Ключи.Характеристика = Аналитика.Характеристика
	|		И Ключи.Серия = Аналитика.Серия
	|		И Ключи.Склад = Аналитика.Склад
	//++ НЕ УТ
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	//-- НЕ УТ
	|		И Ключи.Назначение = Аналитика.Назначение
	|ГДЕ
	|	Аналитика.КлючАналитики ЕСТЬ NULL
	|");
	
	ЗапросАналитик.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("ПустоеНазначение", Запрос.Параметры.ПустоеНазначение);
	ЗапросАналитик.УстановитьПараметр("ИспользуетсяНазначение", Запрос.Параметры.ИспользуетсяНазначение);
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиПоПартнерамИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос;
	ЗапросАналитик.УстановитьПараметр("Ссылка"     , Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Организация", Запрос.Параметры.Организация);
	ЗапросАналитик.УстановитьПараметр("ТипОперации", Запрос.Параметры.ТипОперации);
	ЗапросАналитик.УстановитьПараметр("ЗаполнятьОперУчет", Запрос.Параметры.ЗаполнятьОперУчет);
	ЗапросАналитик.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	
	ЗапросАналитик.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
	|	ВЫБОР КОГДА ТаблицаРасчетыСПартнерами.РасчетныйДокумент.Организация.ГоловнаяОрганизация = &Организация ТОГДА
	|		ТаблицаРасчетыСПартнерами.РасчетныйДокумент.Организация
	|	ИНАЧЕ
	|		&Организация
	|	КОНЕЦ КАК Организация
	|
	|ПОМЕСТИТЬ ВтТаблицаОбъектовРасчетов
	|ИЗ
	|	Документ.ВводОстатков.РасчетыСПартнерами КАК ТаблицаРасчетыСПартнерами
	|	
	|ГДЕ
	|	ТаблицаРасчетыСПартнерами.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам)
	|	)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныйДокумент
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|	ТаблицаРасчетыСПартнерами.Партнер КАК Партнер,
	|	ТаблицаРасчетыСПартнерами.Контрагент КАК Контрагент,
	|	ВЫБОР КОГДА ТаблицаРасчетыСПартнерами.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		ТаблицаРасчетыСПартнерами.РасчетныйДокумент
	|	ИНАЧЕ
	|		ЕСТЬNULL(ТаблицаРасчетыСПартнерами.РасчетныйДокумент.Договор,
	|			ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|	КОНЕЦ КАК Договор,
	|	ЕСТЬNULL(ТаблицаРасчетыСПартнерами.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности
	|				
	|ИЗ
	|	Документ.ВводОстатков.РасчетыСПартнерами КАК ТаблицаРасчетыСПартнерами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаРасчетыСПартнерами.РасчетныйДокумент = ТаблицаОбъектовРасчетов.РасчетныйДокумент
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ТаблицаРасчетыСПартнерами.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И ТаблицаРасчетыСПартнерами.Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|		И (
	|		ВЫБОР КОГДА ТаблицаРасчетыСПартнерами.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|			ТаблицаРасчетыСПартнерами.РасчетныйДокумент
	|		ИНАЧЕ
	|			ЕСТЬNULL(ТаблицаРасчетыСПартнерами.РасчетныйДокумент.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|		КОНЕЦ) = РегистрАналитикаУчетаПоПартнерам.Договор
	|		И ЕСТЬNULL(ТаблицаРасчетыСПартнерами.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) 
	|			= РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасчетыСПартнерами.Ссылка = &Ссылка
	|	И РегистрАналитикаУчетаПоПартнерам.КлючАналитики ЕСТЬ NULL
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация,
	|	РасчетыПоДоговорамКредитовИДепозитов.Партнер,
	|	РасчетыПоДоговорамКредитовИДепозитов.Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка),
	|   ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК РасчетыПоДоговорамКредитовИДепозитов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО &Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|			И РасчетыПоДоговорамКредитовИДепозитов.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|			И РасчетыПоДоговорамКредитовИДепозитов.Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|			И ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) = РегистрАналитикаУчетаПоПартнерам.Договор
	|			И ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) = РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности
	|ГДЕ
	|	РасчетыПоДоговорамКредитовИДепозитов.Ссылка = &Ссылка 
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов)
	|	И РегистрАналитикаУчетаПоПартнерам.КлючАналитики ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Реквизиты.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	Реквизиты.ОрганизацияПолучатель КАК Контрагент,
	|	ВЫБОР КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыМеждуОрганизациями ТОГДА
	|			Расчеты.РасчетныйДокумент
	|	ИНАЧЕ
	|		ЕСТЬNULL(Расчеты.РасчетныйДокумент.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|	КОНЕЦ КАК Договор,
	|	ЕСТЬNULL(Расчеты.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК Расчеты
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Реквизиты
	|	ПО
	|		Реквизиты.Ссылка = Расчеты.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		Реквизиты.Организация = Аналитика.Организация
	|		И ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) = Аналитика.Партнер
	|		И Реквизиты.ОрганизацияПолучатель = Аналитика.Контрагент
	|		И (ВЫБОР КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыМеждуОрганизациями ТОГДА
	|			Расчеты.РасчетныйДокумент
	|		ИНАЧЕ
	|			ЕСТЬNULL(Расчеты.РасчетныйДокумент.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|		КОНЕЦ) = Аналитика.Договор
	|			И ЕСТЬNULL(Расчеты.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|				= Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	Расчеты.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Реквизиты.ОрганизацияПолучатель КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	Реквизиты.Организация КАК Контрагент,
	|	ВЫБОР КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыМеждуОрганизациями ТОГДА
	|			Расчеты.РасчетныйДокумент
	|	ИНАЧЕ
	|		ЕСТЬNULL(Расчеты.РасчетныйДокумент.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|	КОНЕЦ КАК Договор,
	|	ЕСТЬNULL(Расчеты.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК Расчеты
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Реквизиты
	|	ПО
	|		Реквизиты.Ссылка = Расчеты.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		Реквизиты.ОрганизацияПолучатель = Аналитика.Организация
	|		И ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) = Аналитика.Партнер
	|		И Реквизиты.Организация = Аналитика.Контрагент
	|		И (ВЫБОР КОГДА Расчеты.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыМеждуОрганизациями ТОГДА
	|			Расчеты.РасчетныйДокумент
	|		ИНАЧЕ
	|			ЕСТЬNULL(Расчеты.РасчетныйДокумент.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|		КОНЕЦ) = Аналитика.Договор
	|			И ЕСТЬNULL(Расчеты.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|				= Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	Расчеты.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И &ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям))
	|";
	
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиПоПартнерамИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтКурсыВалют";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта,
	|	КурсыВалютСрезПоследних.Курс / КурсыВалютСрезПоследних.Кратность КАК КоэффициентПересчета
	|	
	|ПОМЕСТИТЬ ВтКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&Период,
	|			Валюта В
	|				(ВЫБРАТЬ
	|					&ВалютаУправленческогоУчета
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Кассы.ВалютаДенежныхСредств
	|				ИЗ
	|					Документ.ВводОстатков.Кассы КАК ВводОстатковКассы
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Кассы КАК Кассы
	|						ПО ВводОстатковКассы.Касса = Кассы.Ссылка
	|				ГДЕ
	|					ВводОстатковКассы.Ссылка = &Ссылка
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					КассыККМ.ВалютаДенежныхСредств
	|				ИЗ
	|					Документ.ВводОстатков.КассыККМ КАК ВводОстатковКассыККМ
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КассыККМ КАК КассыККМ
	|						ПО ВводОстатковКассыККМ.КассаККМ = КассыККМ.Ссылка
	|				ГДЕ
	|					ВводОстатковКассыККМ.Ссылка = &Ссылка
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					БанковскиеСчетаОрганизаций.ВалютаДенежныхСредств
	|				ИЗ
	|					Документ.ВводОстатков.БанковскиеСчета КАК ВводОстатковБанковскиеСчета
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|						ПО ВводОстатковБанковскиеСчета.БанковскийСчет = БанковскиеСчетаОрганизаций.Ссылка
	|				ГДЕ
	|					ВводОстатковБанковскиеСчета.Ссылка = &Ссылка
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					БанковскиеСчетаОрганизаций.ВалютаДенежныхСредств
	|				ИЗ
	|					Документ.ВводОстатков.РасчетыПоЭквайрингу КАК ВводОстатковРасчетыПоЭквайрингу
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчетаОрганизаций
	|						ПО ВводОстатковРасчетыПоЭквайрингу.ЭквайринговыйТерминал.БанковскийСчет = БанковскиеСчетаОрганизаций.Ссылка
	|				ГДЕ
	|					ВводОстатковРасчетыПоЭквайрингу.Ссылка = &Ссылка
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВводОстатковРасчетыСПартнерами.ВалютаВзаиморасчетов
	|				ИЗ
	|					Документ.ВводОстатков.РасчетыСПартнерами КАК ВводОстатковРасчетыСПартнерами
	|				ГДЕ
	|					ВводОстатковРасчетыСПартнерами.Ссылка = &Ссылка
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВводОстатковРасчетыСПартнерами.ВалютаВзаиморасчетов
	|				ИЗ
	|					Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ВводОстатковРасчетыСПартнерами
	|				ГДЕ
	|					ВводОстатковРасчетыСПартнерами.Ссылка = &Ссылка
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВводОстатковРасчетыСПодотчетниками.Валюта
	|				ИЗ
	|					Документ.ВводОстатков.РасчетыСПодотчетниками КАК ВводОстатковРасчетыСПодотчетниками
	|				ГДЕ
	|					ВводОстатковРасчетыСПодотчетниками.Ссылка = &Ссылка
	|				
	|				ОБЪЕДИНИТЬ ВСЕ
	|				
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВводОстатковКредитовДепозитовЗаймов.Договор.ВалютаВзаиморасчетов
	|				ИЗ
	|					Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК ВводОстатковКредитовДепозитовЗаймов
	|				ГДЕ
	|					ВводОстатковКредитовДепозитовЗаймов.Ссылка = &Ссылка
	|				)
	|	) КАК КурсыВалютСрезПоследних";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                       КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура    КАК Номенклатура,
	|	ТаблицаТовары.Характеристика  КАК Характеристика,
	|	ТаблицаТовары.Серия           КАК Серия,
	|	ТаблицаТовары.Назначение      КАК Назначение,
	|	ТаблицаТовары.ВидЗапасов      КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД        КАК НомерГТД
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|		ПО 
	|			  ТаблицаТовары.ВидЗапасов     = ПоступленияТоваров.ВидЗапасов
	|			И ТаблицаТовары.Номенклатура   = ПоступленияТоваров.Номенклатура
	|			И ТаблицаТовары.Характеристика = ПоступленияТоваров.Характеристика
	|			И ТаблицаТовары.Серия          = ПоступленияТоваров.Серия
	|			И ТаблицаТовары.Назначение     = ПоступленияТоваров.Назначение
	|			И ТаблицаТовары.НомерГТД       = ПоступленияТоваров.НомерГТД
	|ГДЕ
	|	(ПоступленияТоваров.ДатаПоступления ЕСТЬ NULL 
	|			ИЛИ ПоступленияТоваров.ДатаПоступления < &Период)
	|	И &ЗаполнятьОперУчет
	|	И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиСобственныхТоваровНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе)
	|			)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Назначение,
	|	ТаблицаТовары.НомерГТД";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДатыПередачиТоваровНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПередачиТоваровНаКомиссию";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                           КАК ДатаПередачи,
	|	Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов                 КАК ВидЗапасов,
	|	Товары.НомерГТД                   КАК НомерГТД,
	|	&СоглашениеСКомиссионером         КАК Соглашение,
	|	&Организация                      КАК Организация
	|ИЗ
	|	ВтТовары КАК Товары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|	ПО
	|		  Товары.ВидЗапасов                 = ДатыПередачиТоваровНаКомиссию.ВидЗапасов 
	|		И Товары.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|		И Товары.НомерГТД                   = ДатыПередачиТоваровНаКомиссию.НомерГТД 
	|		И ДатыПередачиТоваровНаКомиссию.Соглашение  = &СоглашениеСКомиссионером
	|		И ДатыПередачиТоваровНаКомиссию.Организация = &Организация
	|
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию)
	|	И &ЗаполнятьОперУчет
	|	И (ДатыПередачиТоваровНаКомиссию.ДатаПередачи ЕСТЬ NULL
	|		ИЛИ ДатыПередачиТоваровНаКомиссию.ДатаПередачи < &Период)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.НомерГТД";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                  КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)     КАК ВидДвижения,
	|	&Период                                    КАК Период,
	|	&Организация                               КАК Организация,
	|	&Склад                                     КАК Склад,
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов                   КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                     КАК НомерГТД,
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	ИСТИНА                                     КАК Первичное
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ЗаполнятьОперУчет
	|	И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиСобственныхТоваровНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе)
	|		)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваНаличные(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваНаличные";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	ТаблицаКассы.Касса                     КАК Касса,
	|	ТаблицаКассы.Сумма                     КАК Сумма,
	|	ТаблицаКассы.СуммаРегл                 КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА Кассы.ВалютаДенежныхСредств = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаКассы.Сумма
	|		ИНАЧЕ
	|			ТаблицаКассы.Сумма * ЕСТЬNULL(КурсыВалютКассы.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                  КАК СуммаУпр
	|ИЗ
	|	Документ.ВводОстатков.Кассы КАК ТаблицаКассы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Кассы КАК Кассы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютКассы
	|			ПО КурсыВалютКассы.Валюта = Кассы.ВалютаДенежныхСредств
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|			ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|		ПО ТаблицаКассы.Касса = Кассы.Ссылка
	|ГДЕ
	|	ТаблицаКассы.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВКассах)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаКассы.НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваВКассахККМ(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваВКассахККМ";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	ТаблицаКассы.КассаККМ                  КАК КассаККМ,
	|	ТаблицаКассы.Сумма                     КАК Сумма,
	|	ТаблицаКассы.СуммаРегл                 КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА КассыККМ.ВалютаДенежныхСредств = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаКассы.Сумма
	|		ИНАЧЕ
	|			ТаблицаКассы.Сумма * ЕСТЬNULL(КурсыВалютКассы.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                  КАК СуммаУпр,
	|	ТаблицаКассы.НомерСтроки               КАК НомерСтроки
	|ИЗ
	|	Документ.ВводОстатков.КассыККМ КАК ТаблицаКассы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КассыККМ КАК КассыККМ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютКассы
	|			ПО КурсыВалютКассы.Валюта = КассыККМ.ВалютаДенежныхСредств
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|			ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|		ПО ТаблицаКассы.КассаККМ = КассыККМ.Ссылка
	|ГДЕ
	|	ТаблицаКассы.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Организация,
	|	ТаблицаКассы.КассаККМ,
	|	ТаблицаКассы.Сумма,
	|	ТаблицаКассы.СуммаРегл КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА КассыККМ.ВалютаДенежныхСредств = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаКассы.Сумма
	|		ИНАЧЕ
	|			ТаблицаКассы.Сумма * ЕСТЬNULL(КурсыВалютКассы.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ КАК СуммаУпр,
	|	ТаблицаКассы.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.ВводОстатков.КассыККМ КАК ТаблицаКассы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КассыККМ КАК КассыККМ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютКассы
	|			ПО КурсыВалютКассы.Валюта = КассыККМ.ВалютаДенежныхСредств
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|			ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|		ПО ТаблицаКассы.КассаККМ = КассыККМ.Ссылка
	|ГДЕ
	|	ТаблицаКассы.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваБезналичные(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваБезналичные";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	ТаблицаБанковскиеСчета.БанковскийСчет  КАК БанковскийСчет,
	|	ТаблицаБанковскиеСчета.Сумма           КАК Сумма,
	|	ТаблицаБанковскиеСчета.СуммаРегл       КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА БанковскиеСчета.ВалютаДенежныхСредств = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаБанковскиеСчета.Сумма
	|		ИНАЧЕ
	|			ТаблицаБанковскиеСчета.Сумма * ЕСТЬNULL(КурсыВалютСчета.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                  КАК СуммаУпр
	|ИЗ
	|	Документ.ВводОстатков.БанковскиеСчета КАК ТаблицаБанковскиеСчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютСчета
	|			ПО КурсыВалютСчета.Валюта = БанковскиеСчета.ВалютаДенежныхСредств
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|			ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|		ПО ТаблицаБанковскиеСчета.БанковскийСчет = БанковскиеСчета.Ссылка
	|ГДЕ
	|	ТаблицаБанковскиеСчета.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтРасчетыСПартнерами(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтРасчетыСПартнерами";
	
	ИнициализироватьКлючиАналитикиПоПартнерам(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаРасчетыСПартнерами.НомерСтроки           КАК НомерСтроки,
	|	ТаблицаРасчетыСПартнерами.ДатаПлатежа           КАК ДатаПлатежа,
	|	ТаблицаРасчетыСПартнерами.РасчетныйДокумент     КАК РасчетныйДокумент,
	|
	|	ТаблицаРасчетыСПартнерами.Сумма                 КАК Сумма,
	|	ТаблицаРасчетыСПартнерами.ВалютаВзаиморасчетов  КАК ВалютаВзаиморасчетов,
	|	ТаблицаРасчетыСПартнерами.СуммаРегл             КАК СуммаРегл,
	|
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК КлючАналитики
	|
	|ПОМЕСТИТЬ ВтРасчетыСПартнерами
	|ИЗ
	|	Документ.ВводОстатков.РасчетыСПартнерами КАК ТаблицаРасчетыСПартнерами
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаРасчетыСПартнерами.РасчетныйДокумент = ТаблицаОбъектовРасчетов.РасчетныйДокумент
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		ТаблицаОбъектовРасчетов.Организация = Аналитика.Организация
	|		И ТаблицаРасчетыСПартнерами.Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасчетыСПартнерами.Партнер = Аналитика.Партнер
	|		И (
	|		ВЫБОР КОГДА ТаблицаРасчетыСПартнерами.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|			ТаблицаРасчетыСПартнерами.РасчетныйДокумент
	|		ИНАЧЕ
	|			ЕСТЬNULL(ТаблицаРасчетыСПартнерами.РасчетныйДокумент.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|		КОНЕЦ) = Аналитика.Договор
	|		И ЕСТЬNULL(ТаблицаРасчетыСПартнерами.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|			= Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасчетыСПартнерами.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасчетыСПартнерами", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРасчетыСПартнерами(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1                                             КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки          КАК НомерСтроки,
	|	&Период                                       КАК Период,
	|	&Период                                       КАК ДатаРегистратора,
	|	ТаблицаРасчетыСКлиентами.ДатаПлатежа          КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Организация                                  КАК Организация,
	|	ТаблицаРасчетыСКлиентами.РасчетныйДокумент    КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаРасчетыСКлиентами.КлючАналитики        КАК АналитикаУчетаПоПартнерам,
	|	ИСТИНА                                        КАК ИсключатьПриКонтроле,
	|	ТаблицаРасчетыСКлиентами.Сумма                КАК Сумма,
	|	0                                             КАК КОплате,
	|	ТаблицаРасчетыСКлиентами.СуммаРегл            КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасчетыСКлиентами.Сумма
	|		ИНАЧЕ
	|			ТаблицаРасчетыСКлиентами.Сумма * ЕСТЬNULL(КурсыВалютВзаиморасчетов.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                         КАК СуммаУпр
	|ИЗ
	|	ВтРасчетыСПартнерами КАК ТаблицаРасчетыСКлиентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютВзаиморасчетов
	|		ПО КурсыВалютВзаиморасчетов.Валюта = ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов)
	|	И &ЗаполнятьОперУчет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                                        КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки                     КАК НомерСтроки,
	|	КОНЕЦПЕРИОДА(ТаблицаРасчетыСКлиентами.ДатаПлатежа, День) КАК Период,
	|	&Период                                                  КАК ДатаРегистратора,
	|	ТаблицаРасчетыСКлиентами.ДатаПлатежа                     КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                   КАК ВидДвижения,
	|	&Организация                                             КАК Организация,
	|	ТаблицаРасчетыСКлиентами.РасчетныйДокумент               КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов            КАК Валюта,
	|	ТаблицаРасчетыСКлиентами.КлючАналитики                   КАК АналитикаУчетаПоПартнерам,
	|	ИСТИНА                                                   КАК ИсключатьПриКонтроле,
	|	0                                                        КАК Сумма,
	|	ТаблицаРасчетыСКлиентами.Сумма                           КАК КОплате,
	|	0                                                        КАК СуммаРегл,
	|	0                                                        КАК СуммаУпр
	|ИЗ
	|	ВтРасчетыСПартнерами КАК ТаблицаРасчетыСКлиентами
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов)
	|	И &ЗаполнятьОперУчет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3                                             КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки          КАК НомерСтроки,
	|	&Период                                       КАК Период,
	|	&Период                                       КАК ДатаРегистратора,
	|	NULL                                          КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
	|	&Организация                                  КАК Организация,
	|	ТаблицаРасчетыСКлиентами.РасчетныйДокумент    КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаРасчетыСКлиентами.КлючАналитики        КАК АналитикаУчетаПоПартнерам,
	|	ИСТИНА                                        КАК ИсключатьПриКонтроле,
	|	ТаблицаРасчетыСКлиентами.Сумма                КАК Сумма,
	|	ТаблицаРасчетыСКлиентами.Сумма                КАК КОплате,
	|	ТаблицаРасчетыСКлиентами.СуммаРегл            КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасчетыСКлиентами.Сумма
	|		ИНАЧЕ
	|			ТаблицаРасчетыСКлиентами.Сумма * ЕСТЬNULL(КурсыВалютВзаиморасчетов.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                         КАК СуммаУпр
	|ИЗ
	|	ВтРасчетыСПартнерами КАК ТаблицаРасчетыСКлиентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютВзаиморасчетов
	|		ПО КурсыВалютВзаиморасчетов.Валюта = ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов)
	|	И &ЗаполнятьОперУчет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4                                             КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки          КАК НомерСтроки,
	|	&Период                                       КАК Период,
	|	&Период                                       КАК ДатаРегистратора,
	|	ТаблицаРасчетыСКлиентами.ДатаПлатежа          КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Организация                                  КАК Организация,
	|	ТаблицаРасчетыСКлиентами.РасчетныйДокумент    КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов КАК Валюта,
	|	АналитикаПартнера.КлючАналитики               КАК АналитикаУчетаПоПартнерам,
	|	ИСТИНА                                        КАК ИсключатьПриКонтроле,
	|	ТаблицаРасчетыСКлиентами.Сумма                КАК Сумма,
	|	0                                             КАК КОплате,
	|	ТаблицаРасчетыСКлиентами.СуммаРегл            КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасчетыСКлиентами.Сумма
	|		ИНАЧЕ
	|			ТаблицаРасчетыСКлиентами.Сумма * ЕСТЬNULL(КурсыВалютВзаиморасчетов.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                         КАК СуммаУпр
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСКлиентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютВзаиморасчетов
	|		ПО КурсыВалютВзаиморасчетов.Валюта = ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПартнера
	|		ПО АналитикаПартнера.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			И АналитикаПартнера.Контрагент = &ОрганизацияПолучатель
	|			И АналитикаПартнера.Организация = &Организация
	|			И АналитикаПартнера.Договор = 
	|				ВЫБОР КОГДА ТаблицаРасчетыСКлиентами.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|					ТОГДА ТаблицаРасчетыСКлиентами.РасчетныйДокумент
	|					ИНАЧЕ ЕСТЬNULL(ТаблицаРасчетыСКлиентами.РасчетныйДокумент.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|				КОНЕЦ
	|			И ЕСТЬNULL(ТаблицаРасчетыСКлиентами.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|				= АналитикаПартнера.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасчетыСКлиентами.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5                                                        КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки                     КАК НомерСтроки,
	|	КОНЕЦПЕРИОДА(ТаблицаРасчетыСКлиентами.ДатаПлатежа, День) КАК Период,
	|	&Период                                                  КАК ДатаРегистратора,
	|	ТаблицаРасчетыСКлиентами.ДатаПлатежа                     КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                   КАК ВидДвижения,
	|	&Организация                                             КАК Организация,
	|	ТаблицаРасчетыСКлиентами.РасчетныйДокумент               КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов            КАК Валюта,
	|	АналитикаПартнера.КлючАналитики                          КАК АналитикаУчетаПоПартнерам,
	|	ИСТИНА                                                   КАК ИсключатьПриКонтроле,
	|	0                                                        КАК Сумма,
	|	ТаблицаРасчетыСКлиентами.Сумма                           КАК КОплате,
	|	0                                                        КАК СуммаРегл,
	|	0                                                        КАК СуммаУпр
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСКлиентами
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПартнера
	|	ПО АналитикаПартнера.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаПартнера.Контрагент = &ОрганизацияПолучатель
	|		И АналитикаПартнера.Организация = &Организация
	|		И АналитикаПартнера.Договор = 
	|			ВЫБОР КОГДА ТаблицаРасчетыСКлиентами.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|				ТОГДА ТаблицаРасчетыСКлиентами.РасчетныйДокумент
	|				ИНАЧЕ ЕСТЬNULL(ТаблицаРасчетыСКлиентами.РасчетныйДокумент.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|			КОНЕЦ
	|		И ЕСТЬNULL(ТаблицаРасчетыСКлиентами.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|			= АналитикаПартнера.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасчетыСКлиентами.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6                                             КАК Порядок,
	|	ТаблицаРасчетыСКлиентами.НомерСтроки          КАК НомерСтроки,
	|	&Период                                       КАК Период,
	|	&Период                                       КАК ДатаРегистратора,
	|	NULL                                          КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
	|	&Организация                                  КАК Организация,
	|	ТаблицаРасчетыСКлиентами.РасчетныйДокумент    КАК ЗаказКлиента,
	|	ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	АналитикаПартнера.КлючАналитики               КАК АналитикаУчетаПоПартнерам,
	|	ИСТИНА                                        КАК ИсключатьПриКонтроле,
	|	ТаблицаРасчетыСКлиентами.Сумма                КАК Сумма,
	|	ТаблицаРасчетыСКлиентами.Сумма                КАК КОплате,
	|	ТаблицаРасчетыСКлиентами.СуммаРегл            КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасчетыСКлиентами.Сумма
	|		ИНАЧЕ
	|			ТаблицаРасчетыСКлиентами.Сумма * ЕСТЬNULL(КурсыВалютВзаиморасчетов.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                         КАК СуммаУпр
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСКлиентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютВзаиморасчетов
	|		ПО КурсыВалютВзаиморасчетов.Валюта = ТаблицаРасчетыСКлиентами.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПартнера
	|		ПО АналитикаПартнера.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			И АналитикаПартнера.Контрагент = &ОрганизацияПолучатель
	|			И АналитикаПартнера.Организация = &Организация
	|			И АналитикаПартнера.Договор = 
	|				ВЫБОР КОГДА ТаблицаРасчетыСКлиентами.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|					ТОГДА ТаблицаРасчетыСКлиентами.РасчетныйДокумент
	|					ИНАЧЕ ЕСТЬNULL(ТаблицаРасчетыСКлиентами.РасчетныйДокумент.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|				КОНЕЦ
	|			И ЕСТЬNULL(ТаблицаРасчетыСКлиентами.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|				= АналитикаПартнера.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасчетыСКлиентами.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрАналитикаВзаиморасчетовПоставщик(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаВзаиморасчетовПоставщик") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиПоПартнерам(Запрос);
	
	АналитикаВзаиморасчетовПоставщик = Неопределено;
	
	Если Запрос.Параметры.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам
		ИЛИ Запрос.Параметры.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям Тогда
		
		СтруктураПоставщик = Новый Структура;
		СтруктураПоставщик.Вставить("Организация", Запрос.Параметры.ОрганизацияПолучатель);
		СтруктураПоставщик.Вставить("Партнер",     Справочники.Партнеры.НашеПредприятие);
		СтруктураПоставщик.Вставить("Контрагент",  Запрос.Параметры.Организация);
		СтруктураПоставщик.Вставить("Договор",     Справочники.ДоговорыМеждуОрганизациями.ПустаяСсылка());
		СтруктураПоставщик.Вставить("НаправлениеДеятельности", Справочники.НаправленияДеятельности.ПустаяСсылка());
		
		АналитикаВзаиморасчетовПоставщик = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураПоставщик);
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовПоставщик", АналитикаВзаиморасчетовПоставщик);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтРасчетыСПартнерами", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРасчетыСПартнерами(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрАналитикаВзаиморасчетовПоставщик(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	1                                                КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки          КАК НомерСтроки,
	|	&Период                                          КАК Период,
	|	&Период                                          КАК ДатаРегистратора,
	|	ТаблицаРасчетыСПоставщиками.ДатаПлатежа          КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)           КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.РасчетныйДокумент    КАК ЗаказПоставщику,
	|	ТаблицаРасчетыСПоставщиками.КлючАналитики        КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаРасчетыСПоставщиками.Сумма                КАК Сумма,
	|	0                                                КАК КОплате,
	|	ТаблицаРасчетыСПоставщиками.СуммаРегл            КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасчетыСПоставщиками.Сумма
	|		ИНАЧЕ
	|			ТаблицаРасчетыСПоставщиками.Сумма * ЕСТЬNULL(КурсыВалютВзаиморасчетов.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                            КАК СуммаУпр
	|ИЗ
	|	ВтРасчетыСПартнерами КАК ТаблицаРасчетыСПоставщиками
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютВзаиморасчетов
	|		ПО КурсыВалютВзаиморасчетов.Валюта = ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками)
	|	И &ЗаполнятьОперУчет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                                           КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки                     КАК НомерСтроки,
	|	КОНЕЦПЕРИОДА(ТаблицаРасчетыСПоставщиками.ДатаПлатежа, День) КАК Период,
	|	&Период                                                     КАК ДатаРегистратора,
	|	ТаблицаРасчетыСПоставщиками.ДатаПлатежа                     КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                      КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.РасчетныйДокумент               КАК ЗаказПоставщику,
	|	ТаблицаРасчетыСПоставщиками.КлючАналитики                   КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов            КАК Валюта,
	|	0                                                           КАК Сумма,
	|	ТаблицаРасчетыСПоставщиками.Сумма                           КАК КОплате,
	|	0                                                           КАК СуммаРегл,
	|	0                                                           КАК СуммаУпр
	|ИЗ
	|	ВтРасчетыСПартнерами КАК ТаблицаРасчетыСПоставщиками
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками)
	|	И &ЗаполнятьОперУчет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3                                                КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки          КАК НомерСтроки,
	|	&Период                                          КАК Период,
	|	&Период                                          КАК ДатаРегистратора,
	|	NULL                                             КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.РасчетныйДокумент    КАК ЗаказПоставщику,
	|	ТаблицаРасчетыСПоставщиками.КлючАналитики        КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаРасчетыСПоставщиками.Сумма                КАК Сумма,
	|	ТаблицаРасчетыСПоставщиками.Сумма                КАК КОплате,
	|	ТаблицаРасчетыСПоставщиками.СуммаРегл            КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасчетыСПоставщиками.Сумма
	|		ИНАЧЕ
	|			ТаблицаРасчетыСПоставщиками.Сумма * ЕСТЬNULL(КурсыВалютВзаиморасчетов.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                            КАК СуммаУпр
	|ИЗ
	|	ВтРасчетыСПартнерами КАК ТаблицаРасчетыСПоставщиками
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютВзаиморасчетов
	|		ПО КурсыВалютВзаиморасчетов.Валюта = ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам)
	|	И &ЗаполнятьОперУчет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4                                                КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки          КАК НомерСтроки,
	|	&Период                                          КАК Период,
	|	&Период                                          КАК ДатаРегистратора,
	|	ТаблицаРасчетыСПоставщиками.ДатаПлатежа          КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)           КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.РасчетныйДокумент    КАК ЗаказПоставщику,
	|	АналитикаПартнера.КлючАналитики                  КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаРасчетыСПоставщиками.Сумма                КАК Сумма,
	|	0                                                КАК КОплате,
	|	ТаблицаРасчетыСПоставщиками.СуммаРегл            КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасчетыСПоставщиками.Сумма
	|		ИНАЧЕ
	|			ТаблицаРасчетыСПоставщиками.Сумма * ЕСТЬNULL(КурсыВалютВзаиморасчетов.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                            КАК СуммаУпр
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСПоставщиками
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютВзаиморасчетов
	|		ПО КурсыВалютВзаиморасчетов.Валюта = ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПартнера
	|		ПО АналитикаПартнера.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			И АналитикаПартнера.Контрагент = &Организация
	|			И АналитикаПартнера.Организация = &ОрганизацияПолучатель
	|			И АналитикаПартнера.Договор = 
	|				ВЫБОР КОГДА ТаблицаРасчетыСПоставщиками.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|					ТОГДА ТаблицаРасчетыСПоставщиками.РасчетныйДокумент
	|					ИНАЧЕ ЕСТЬNULL(ТаблицаРасчетыСПоставщиками.РасчетныйДокумент.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|				КОНЕЦ
	|			И ЕСТЬNULL(ТаблицаРасчетыСПоставщиками.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|				= АналитикаПартнера.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасчетыСПоставщиками.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5                                                           КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки                     КАК НомерСтроки,
	|	КОНЕЦПЕРИОДА(ТаблицаРасчетыСПоставщиками.ДатаПлатежа, День) КАК Период,
	|	&Период                                                     КАК ДатаРегистратора,
	|	ТаблицаРасчетыСПоставщиками.ДатаПлатежа                     КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                      КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.РасчетныйДокумент               КАК ЗаказПоставщику,
	|	АналитикаПартнера.КлючАналитики                             КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов            КАК Валюта,
	|	0                                                           КАК Сумма,
	|	ТаблицаРасчетыСПоставщиками.Сумма                           КАК КОплате,
	|	0                                                           КАК СуммаРегл,
	|	0                                                           КАК СуммаУпр
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСПоставщиками
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПартнера
	|	ПО АналитикаПартнера.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаПартнера.Контрагент = &Организация
	|		И АналитикаПартнера.Организация = &ОрганизацияПолучатель
	|		И АналитикаПартнера.Договор = 
	|			ВЫБОР КОГДА ТаблицаРасчетыСПоставщиками.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|				ТОГДА ТаблицаРасчетыСПоставщиками.РасчетныйДокумент
	|				ИНАЧЕ ЕСТЬNULL(ТаблицаРасчетыСПоставщиками.РасчетныйДокумент.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|			КОНЕЦ
	|			И ЕСТЬNULL(ТаблицаРасчетыСПоставщиками.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|				= АналитикаПартнера.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасчетыСПоставщиками.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6                                                КАК Порядок,
	|	ТаблицаРасчетыСПоставщиками.НомерСтроки          КАК НомерСтроки,
	|	&Период                                          КАК Период,
	|	&Период                                          КАК ДатаРегистратора,
	|	NULL                                             КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
	|	ТаблицаРасчетыСПоставщиками.РасчетныйДокумент    КАК ЗаказПоставщику,
	|	АналитикаПартнера.КлючАналитики                  КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ТаблицаРасчетыСПоставщиками.Сумма                КАК Сумма,
	|	ТаблицаРасчетыСПоставщиками.Сумма                КАК КОплате,
	|	ТаблицаРасчетыСПоставщиками.СуммаРегл            КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|			ТОГДА ТаблицаРасчетыСПоставщиками.Сумма
	|		ИНАЧЕ
	|			ТаблицаРасчетыСПоставщиками.Сумма * ЕСТЬNULL(КурсыВалютВзаиморасчетов.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                            КАК СуммаУпр
	|ИЗ
	|	Документ.ВводОстатков.РасчетыМеждуОрганизациями КАК ТаблицаРасчетыСПоставщиками
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютВзаиморасчетов
	|		ПО КурсыВалютВзаиморасчетов.Валюта = ТаблицаРасчетыСПоставщиками.ВалютаВзаиморасчетов
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПартнера
	|		ПО АналитикаПартнера.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			И АналитикаПартнера.Контрагент = &Организация
	|			И АналитикаПартнера.Организация = &ОрганизацияПолучатель
	|			И АналитикаПартнера.Договор = 
	|			ВЫБОР КОГДА ТаблицаРасчетыСПоставщиками.РасчетныйДокумент ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|					ТОГДА ТаблицаРасчетыСПоставщиками.РасчетныйДокумент
	|					ИНАЧЕ ЕСТЬNULL(ТаблицаРасчетыСПоставщиками.РасчетныйДокумент.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка))
	|				КОНЕЦ
	|			И ЕСТЬNULL(ТаблицаРасчетыСПоставщиками.РасчетныйДокумент.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|				= АналитикаПартнера.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасчетыСПоставщиками.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыПереданныеНаКомиссию";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	&Период                                  КАК Период,
	|	&Организация                             КАК Организация,
	|	&Партнер                                 КАК Партнер,
	|	&СоглашениеСКомиссионером                КАК Соглашение,
	|	ТаблицаТовары.Номенклатура               КАК Номенклатура,
	|	ТаблицаТовары.Характеристика             КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                   КАК НомерГТД,
	|	ТаблицаТовары.Количество                 КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию)
	|	И &ЗаполнятьОперУчет
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваУПодотчетныхЛиц";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетыСПодотчетниками.НомерСтроки                   КАК НомерСтроки,
	|	&Период                                              КАК Период,
	|	ВЫБОР
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ                                                КАК ВидДвижения,
	|	&Организация                                         КАК Организация,
	|	РасчетыСПодотчетниками.ПодотчетноеЛицо               КАК ПодотчетноеЛицо,
	|	РасчетыСПодотчетниками.Ссылка.Подразделение          КАК Подразделение,
	|	РасчетыСПодотчетниками.СтатьяДвиженияДенежныхСредств КАК ЦельВыдачи,
	|	РасчетыСПодотчетниками.Валюта                        КАК Валюта,
	|	РасчетыСПодотчетниками.Сумма                         КАК Сумма,
	|	РасчетыСПодотчетниками.СуммаРегл                     КАК СуммаРегл,
	|	РасчетыСПодотчетниками.Сумма                         КАК КОтчету,
	|	ВЫБОР
	|		КОГДА РасчетыСПодотчетниками.Валюта = &ВалютаУправленческогоУчета
	|			ТОГДА РасчетыСПодотчетниками.Сумма
	|		ИНАЧЕ
	|			РасчетыСПодотчетниками.Сумма * ЕСТЬNULL(КурсыВалютПодотчетников.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                                КАК СуммаУпр
	|ИЗ
	|	Документ.ВводОстатков.РасчетыСПодотчетниками КАК РасчетыСПодотчетниками
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютПодотчетников
	|		ПО КурсыВалютПодотчетников.Валюта = РасчетыСПодотчетниками.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|ГДЕ
	|	РасчетыСПодотчетниками.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетников)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыПоЭквайрингу(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыПоЭквайрингу";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетыПоЭквайрингу.НомерСтроки             КАК НомерСтроки,
	|	&Период                                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Организация                                КАК Организация,
	|	РасчетыПоЭквайрингу.ТипДенежныхСредств      КАК ТипДенежныхСредств,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал   КАК ЭквайринговыйТерминал,
	|	РасчетыПоЭквайрингу.НомерПлатежнойКарты     КАК НомерПлатежнойКарты,
	|	РасчетыПоЭквайрингу.ДатаПлатежа             КАК ДатаПлатежа,
	|	РасчетыПоЭквайрингу.Сумма                   КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиентаПоПлатежнойКарте) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПоступлениеОплатыОтКлиента) КАК СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоЭквайрингу КАК РасчетыПоЭквайрингу
	|ГДЕ
	|	РасчетыПоЭквайрингу.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.СторноОтчетовПоЭквайрингу)
	|	И РасчетыПоЭквайрингу.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредствПоЭквайрингу.ПоступлениеПоПлатежнойКарте)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыПоЭквайрингу.НомерСтроки             КАК НомерСтроки,
	|	&Период                                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)      КАК ВидДвижения,
	|	&Организация                                КАК Организация,
	|	РасчетыПоЭквайрингу.ТипДенежныхСредств      КАК ТипДенежныхСредств,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал   КАК ЭквайринговыйТерминал,
	|	РасчетыПоЭквайрингу.НомерПлатежнойКарты     КАК НомерПлатежнойКарты,
	|	РасчетыПоЭквайрингу.ДатаПлатежа             КАК ДатаПлатежа,
	|	РасчетыПоЭквайрингу.Сумма                   КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиентуНаПлатежнуюКарту) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ВозвратОплатыКлиенту) КАК СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоЭквайрингу КАК РасчетыПоЭквайрингу
	|ГДЕ
	|	РасчетыПоЭквайрингу.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.СторноОтчетовПоЭквайрингу)
	|	И РасчетыПоЭквайрингу.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредствПоЭквайрингу.СписаниеПоПлатежнойКарте)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТипДенежныхСредств,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса)
	
	// Создадим временную таблицу "ВтТаблицаАналитикУчетаПартий"
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""Товары"" 																КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 											КАК НомерСтроки,
	|	ДанныеДокумента.Партнер													КАК Поставщик,
	|	ДанныеДокумента.Контрагент												КАК Контрагент,
	|	ТаблицаДокумента.СтавкаНДС 												КАК СтавкаНДС,
	|	ДанныеДокумента.НалогообложениеНДС										КАК НалогообложениеНДС,
	|	ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ТаблицаДокумента.Номенклатура.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""ПрочиеРасходы""														КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 											КАК НомерСтроки,
	|	ДанныеДокумента.Партнер													КАК Поставщик,
	|	ДанныеДокумента.Контрагент												КАК Контрагент,
	|	ТаблицаДокумента.СтавкаНДС 												КАК СтавкаНДС,
	|	ВЫБОР КОГДА ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) =
	|	  ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|		ИНАЧЕ ДанныеДокумента.НалогообложениеНДС
	|	КОНЕЦ 																	КАК НалогообложениеНДС,
	|	Статьи.ВидЦенностиНДС 													КАК ВидЦенности
	|ИЗ
	|	Документ.ВводОстатков.ПрочиеРасходы КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|		ПО ТаблицаДокумента.СтатьяРасходов = Статьи.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос, ТекстыЗапроса);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСПредъявленный(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСПредъявленный";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Операция.Дата                          КАК Период,
	|	Операция.Организация                   КАК Организация,
	|	&Ссылка                                КАК СчетФактура,
	|	Операция.Контрагент                    КАК Поставщик,
	|	ТаблицаТовары.ВидЦенности 			   КАК ВидЦенности,
	|	ТаблицаТовары.СтавкаНДС                КАК СтавкаНДС,
	|	ТаблицаТовары.ВидДеятельностиНДС       КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	СУММА(ТаблицаТовары.СуммаРегл)         КАК СуммаБезНДС,
	|	СУММА(ТаблицаТовары.НДСРегл)           КАК НДС,
	|	НЕОПРЕДЕЛЕНО                           КАК Событие,
	|	ЛОЖЬ                                   КАК РегламентнаяОперация
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков КАК Операция
	|		ПО Операция.Ссылка = &Ссылка
	|
	|ГДЕ
	|	Операция.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|	И Операция.НалогообложениеНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуиспользованию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию))
	|	
	|СГРУППИРОВАТЬ ПО
	|	Операция.Дата,
	|	Операция.Организация,
	|	Операция.Контрагент,
	|	ТаблицаТовары.ВидЦенности,
	|	ТаблицаТовары.СтавкаНДС,
	|	ТаблицаТовары.ВидДеятельностиНДС
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТовары";
	
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                		КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура                		КАК Номенклатура,
	|	ТаблицаТовары.Характеристика              		КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ 											КАК Назначение,
	|	ТаблицаТовары.Серия                       		КАК Серия,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры  		КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение 
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаСебестоимости.КлючАналитики
	|	КОНЕЦ                                     		КАК АналитикаУчетаСебестоимости,
	|
	|	ТаблицаТовары.СтавкаНДС                			КАК СтавкаНДС,
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|
	|	ТаблицаТовары.Количество                  		КАК Количество,
	|	ВЫБОР
	|		КОГДА &ЦенаВключаетНДС
	|		ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ ТаблицаТовары.СуммаСНДС
	|	КОНЕЦ 									 		КАК Сумма,
	|	ТаблицаТовары.СуммаБезНДС                 		КАК СуммаБезНДС,
	|	ТаблицаТовары.СуммаРегл                   		КАК СуммаРегл,
	|	ТаблицаТовары.НДСРегл                     		КАК НДСРегл,
	|	ТаблицаТовары.СуммаПР                     		КАК СуммаПР,
	|	ТаблицаТовары.СуммаВР                     		КАК СуммаВР,
	|	ТаблицаТовары.ВидЗапасов                  		КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                    		КАК НомерГТД,
	|	ТаблицаТовары.ПредусмотренЗалогЗаТару     		КАК ПредусмотренЗалогЗаТару,
	|	ТаблицаТовары.КодСтроки                   		КАК КодСтроки,
	|	ТаблицаТовары.ГруппаПродукции                   КАК ГруппаПродукции
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|	ПО ТаблицаТовары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаСебестоимости
	|	ПО Ключи.Номенклатура = АналитикаСебестоимости.Номенклатура
	|		И Ключи.Характеристика = АналитикаСебестоимости.Характеристика
	|		И Ключи.Серия = АналитикаСебестоимости.Серия
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаСебестоимости.СтатьяКалькуляции
	//-- НЕ УТ
	|		И Ключи.Склад = АналитикаСебестоимости.Склад
	|		И &ПустоеНазначение = АналитикаСебестоимости.Назначение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаТовары.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""Товары""
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиСобственныхТоваровНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство))
	|	И ТаблицаТовары.Количество <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаТовары";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура        КАК Номенклатура,
	|	ТаблицаТовары.Характеристика      КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                             КАК Назначение,
	|	ТаблицаТовары.Упаковка            КАК Упаковка,
	|	ТаблицаТовары.Количество          КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок  КАК КоличествоУпаковок,
	|	ТаблицаТовары.Серия               КАК Серия,
	|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиСобственныхТоваровНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам))
	|	И ТаблицаТовары.Количество <> 0
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Упаковка,
	|	МАКСИМУМ(ТаблицаСерии.Количество),
	|	МАКСИМУМ(ТаблицаСерии.КоличествоУпаковок),
	|	ТаблицаСерии.Серия,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий)
	|ИЗ
	|	Документ.ВводОстатков.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиСобственныхТоваровНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам))
	|	И ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Упаковка
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Помещение                             КАК Помещение,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ЗаполнятьОперУчет
	|	И (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	&Склад,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка),
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений)
	|	И &ЗаполнятьОперУчет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СвободныеОстатки";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК ВНаличии
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|	ГДЕ (&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков))
	|	И &ЗаполнятьОперУчет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	ТаблицаТовары.НомерСтроки                КАК НомерСтроки,
	|	&Период                                  КАК Период,
	|	&Организация                             КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаСебестоимости КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР 
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|		ИНАЧЕ
	|			ВЫБОР КОГДА Аналитика.Склад.ЦеховаяКладовая 
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|			КОНЕЦ
	|	КОНЕЦ                                    КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                    КАК ВидЗапасов,
	|	ВЫБОР КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров)
	|	КОНЕЦ                                    КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.ГруппаПродукции    		 КАК ГруппаПродукции,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА &Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК Партия,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|			ВЫБОР
	|				КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|				 И ТаблицаТовары.ГруппаПродукции <> ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|					ТОГДА ТаблицаТовары.ГруппаПродукции
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|					ТОГДА &Менеджер
	|				КОГДА &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|				 И &ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|					ТОГДА &Подразделение
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаТовары.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 И НЕ &ФИФОСкользящаяОценка
	|		ТОГДА ТаблицаТовары.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК КорАналитикаУчетаПартий,
	|	ТаблицаТовары.НДСРегл 					 						КАК НДСРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия) 				КАК ТипЗаписи,
	|
	|	ВЫБОР КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ 									 КАК СтоимостьЗабалансовая,
	|	ВЫБОР КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаРегл + ТаблицаТовары.НДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ 									 КАК СтоимостьЗабалансоваяРегл,
	|	ВЫБОР КОГДА &ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ 									 КАК Стоимость,
	|	ВЫБОР КОГДА &ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ 									 КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|		ТОГДА 
	|			ВЫБОР КОГДА ТаблицаТовары.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ТОГДА ТаблицаТовары.СуммаРегл + ТаблицаТовары.НДСРегл
	|			ИНАЧЕ ТаблицаТовары.СуммаРегл
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ 									 КАК СтоимостьРегл,
	|	ВЫБОР КОГДА &ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаПР
	|		ИНАЧЕ 0
	|	КОНЕЦ 									 КАК ПостояннаяРазница,
	|	ВЫБОР КОГДА &ТипОперации <> ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|		ТОГДА ТаблицаТовары.СуммаВР
	|		ИНАЧЕ 0
	|	КОНЕЦ 									 КАК ВременнаяРазница,
	|	ТаблицаТовары.Количество                 КАК Количество
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Аналитика.КлючАналитики = ТаблицаТовары.АналитикаУчетаСебестоимости
	|
	|ГДЕ
	|	&ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиСобственныхТоваровНаАдресномСкладе),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|		)
	|	И &ЗаполнятьОперУчет
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюИзлишковНедостач(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюИзлишковНедостач";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Серия,
	|	ТаблицаТовары.Количество               КАК КОформлениюАктов,
	|	&Склад                                 КАК Склад,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиСобственныхТоваровНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе))
	|	И &ЗаполнятьОперУчет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура   КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия          КАК Серия,
	|	ТаблицаСерии.Количество     КАК Количество,
	|	ВЫБОР
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ &Склад 
	|	КОНЕЦ                       КАК Получатель,
	|	ВЫБОР
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			ТОГДА Неопределено
	|		ИНАЧЕ &Помещение 
	|	КОНЕЦ                       КАК ПомещениеПолучателя,
	|	ВЫБОР
	|		КОГДА &ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиСобственныхТоваровНаАдресномСкладе),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе))
	|			ТОГДА &Партнер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                       КАК Отправитель,
	|	НЕОПРЕДЕЛЕНО                КАК ПомещениеОтправителя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ВводОстатков) КАК СкладскаяОперация,
	|	&Ссылка                     КАК Документ,
	|	&Период                     КАК Период,
	|	&Ссылка                     КАК Регистратор,
	|	ИСТИНА                      КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ВводОстатков.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И ТаблицаСерии.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	ВЫБОР
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			ТОГДА &Подразделение
	|		ИНАЧЕ &Склад 
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			ТОГДА Неопределено
	|		ИНАЧЕ &Помещение 
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиСобственныхТоваровНаАдресномСкладе),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе))
	|			ТОГДА &Партнер
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ        КАК Отправитель,
	|	НЕОПРЕДЕЛЕНО КАК ПомещениеОтправителя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ВводОстатков),
	|	&Ссылка,
	|	&Период,
	|	&Ссылка,
	|	ИСТИНА
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                  КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)     КАК ВидДвижения,
	|	&Период                                    КАК Период,
	|	&Организация                               КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка                                    КАК ДокументПоступления,
	|	ТаблицаТовары.ВидЗапасов                   КАК ВидЗапасов,
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаПартий         КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.Сумма                        КАК Стоимость,
	|	ТаблицаТовары.СуммаБезНДС                  КАК СтоимостьБезНДС,
	|	(ВЫБОР &ТипОперации
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ТОГДА ТаблицаТовары.СуммаРегл + ТаблицаТовары.НДСРегл
	|		ИНАЧЕ ТаблицаТовары.СуммаРегл КОНЕЦ) КАК СтоимостьРегл,
	|	ТаблицаТовары.СуммаПР                      КАК ПостояннаяРазница,
	|	ТаблицаТовары.СуммаВР                      КАК ВременнаяРазница,
	|	ТаблицаТовары.НДСРегл                      КАК НДСРегл,
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ТаблицаТовары.ВидДеятельностиНДС           КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров) КАК ХозяйственнаяОперация,
	|	ИСТИНА                                     КАК Первичное,
	|	НЕОПРЕДЕЛЕНО                               КАК ДокументИсточник
	|
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	(&ТипОперации В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиСобственныхТоваровНаАдресномСкладе),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе)))
	|	И &ЗаполнятьОперУчет
	|	И &ПартионныйУчетВерсии21
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровПереданныеНаКомиссию";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки                                   КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)               КАК ВидДвижения,
	|	&Период                                              КАК Период,
	|	&Организация                                         КАК Организация,
	|	Товары.АналитикаУчетаНоменклатуры                    КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка                                              КАК ДокументПоступления,
	|	Товары.ВидЗапасов                                    КАК ВидЗапасов,
	|	Товары.АналитикаУчетаПартий                          КАК АналитикаУчетаПартий,
	|	&Ссылка                                              КАК ДокументПередачиНаКомиссию,
	|	Товары.Количество                                    КАК Количество,
	|	Товары.Сумма                                         КАК Стоимость,
	|	Товары.СуммаБезНДС                                   КАК СтоимостьБезНДС,
	|	Товары.СуммаРегл                                     КАК СтоимостьРегл,
	|	Товары.НДСРегл                                       КАК НДСРегл,
	|	Товары.СуммаПР                                       КАК ПостояннаяРазница,
	|	Товары.СуммаВР                                       КАК ВременнаяРазница,
	|	Товары.Номенклатура                                  КАК Номенклатура,
	|	Товары.Характеристика                                КАК Характеристика,
	|	Товары.ВидДеятельностиНДС                            КАК НалогообложениеНДС
	|ИЗ
	|	ВтТовары КАК Товары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию)
	|	И &ЗаполнятьОперУчет
	|	И &ПартионныйУчетВерсии21
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПринятаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПринятаяВозвратнаяТара";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                               КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                  КАК ВидДвижения,
	|	&Период                                                 КАК Период,
	|	ТаблицаТовары.Номенклатура                              КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                            КАК Характеристика,
	|	ТаблицаТовары.Количество                                КАК Количество,
	|	ТаблицаТовары.Сумма                                     КАК Сумма,
	|	&Партнер                                                КАК Партнер,
	|	ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка) КАК ДокументПоступления,
	|	ТаблицаТовары.ПредусмотренЗалогЗаТару                   КАК ПредусмотренЗалог
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.УдалитьОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе)
	|	)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПереданнаяВозвратнаяТара(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПереданнаяВозвратнаяТара";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.Сумма                    КАК Сумма,
	|	&Партнер                               КАК Партнер,
	|	ТаблицаТовары.ВидЗапасов               КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                 КАК НомерГТД,
	|	ТаблицаТовары.ПредусмотренЗалогЗаТару  КАК ПредусмотренЗалог
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтДанныеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаАналитикУчетаПартий", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Документ.Организация                               КАК Организация,
	|	Документ.Дата                                      КАК Дата,
	|	ДанныеДокументаРасходы.НомерСтроки                 КАК НомерСтроки,
	|	Документ.Подразделение                             КАК Подразделение,
	|	ДанныеДокументаРасходы.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	ДанныеДокументаРасходы.СтатьяРасходов              КАК СтатьяРасходов,
	|	ДанныеДокументаРасходы.АналитикаРасходов           КАК АналитикаРасходов,
	|	ДанныеДокументаРасходы.Ссылка                      КАК ДокументПоступленияРасходов,
	|	СтатьиРасходов.ВариантРаспределенияРасходов        КАК ВариантРаспределенияРасходов,
	|
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			   КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	   КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий    КАК АналитикаУчетаПартий,
	|
	|	ДанныеДокументаРасходы.Сумма                       КАК Сумма,
	|	ДанныеДокументаРасходы.СуммаБезНДС                 КАК СуммаБезНДС,
	|	ДанныеДокументаРасходы.СуммаРегл                   КАК СуммаРегл,
	|	ДанныеДокументаРасходы.НДСРегл                     КАК НДСРегл,
	|	ДанныеДокументаРасходы.СуммаПР                     КАК СуммаПР,
	|	ДанныеДокументаРасходы.СуммаВР                     КАК СуммаВР
	|
	|ПОМЕСТИТЬ ВтДанныеРасходы
	|ИЗ
	|	Документ.ВводОстатков.ПрочиеРасходы КАК ДанныеДокументаРасходы
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков КАК Документ
	|	ПО
	|		ДанныеДокументаРасходы.Ссылка = Документ.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ДанныеДокументаРасходы.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ДанныеДокументаРасходы.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""ПрочиеРасходы""
	|
	|ГДЕ
	|	ДанныеДокументаРасходы.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДанныеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтДанныеРасходы.НомерСтроки             КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата                    КАК Период,
	|	ВтДанныеРасходы.Организация             КАК Организация,
	|	ВтДанныеРасходы.Подразделение           КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов          КАК СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов       КАК АналитикаРасходов,
	//++ НЕ УТ
	|	(ВЫБОР
	|		КОГДА ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходов =
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
	|			ТОГДА ВтДанныеРасходы.СуммаБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаБезНДС,
	|	ВтДанныеРасходы.СуммаРегл              КАК СуммаРегл,
	|	ВтДанныеРасходы.СуммаПР                КАК ПостояннаяРазница,
	|	ВтДанныеРасходы.СуммаВР                КАК ВременнаяРазница,
	//-- НЕ УТ
	|	ВтДанныеРасходы.Сумма                  КАК Сумма
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	НЕ ВтДанныеРасходы.ВариантРаспределенияРасходов В(
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	И &ЗаполнятьОперУчет
	//++ НЕ УТ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.НомерСтроки            КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата                   КАК Период,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	ВтДанныеРасходы.Сумма
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	ВтДанныеРасходы.ВариантРаспределенияРасходов В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	И &ЗаполнятьОперУчет
	|
	//-- НЕ УТ
	|УПОРЯДОЧИТЬ ПО
	|	ВтДанныеРасходы.НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДанныеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтДанныеРасходы.НомерСтроки                 КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата                        КАК Период,
	|	ВтДанныеРасходы.Организация                 КАК Организация,
	|	ВтДанныеРасходы.Подразделение               КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов              КАК СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов           КАК АналитикаРасходов,
	|	ВтДанныеРасходы.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	ВтДанныеРасходы.АналитикаУчетаПартий        КАК АналитикаУчетаПартий,
	|	ВтДанныеРасходы.Сумма                       КАК Стоимость,
	|	ВтДанныеРасходы.СуммаБезНДС                 КАК СтоимостьБезНДС,
	|	ВтДанныеРасходы.СуммаРегл                   КАК СтоимостьРегл,
	|	ВтДанныеРасходы.НДСРегл                     КАК НДСРегл,
	|	ВтДанныеРасходы.СуммаПР                     КАК ПостояннаяРазница,
	|	ВтДанныеРасходы.СуммаВР                     КАК ВременнаяРазница,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ВтДанныеРасходы.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                       КАК ВидДеятельностиНДС
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	ВтДанныеРасходы.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|	И &ЗаполнятьОперУчет
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВтДанныеРасходы.НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	Строки.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	Строки.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	Строки.Статья                          КАК Статья,
	|	Строки.Аналитика                       КАК Аналитика,
	|	Строки.Сумма                           КАК Сумма
	|ИЗ
	|	Документ.ВводОстатков.ПрочиеАктивыПассивы КАК Строки
	|ГДЕ
	|	Строки.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПрочихАктивовПассивов)
	|	И Строки.Статья.АктивПассив В (
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСтатейУправленческогоБаланса.Актив),
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСтатейУправленческогоБаланса.АктивПассив))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	Строки.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	Строки.НаправлениеДеятельности         КАК НаправлениеДеятельности,
	|	Строки.Статья                          КАК Статья,
	|	Строки.Аналитика                       КАК Аналитика,
	|	Строки.Сумма                           КАК Сумма
	|ИЗ
	|	Документ.ВводОстатков.ПрочиеАктивыПассивы КАК Строки
	|ГДЕ
	|	Строки.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПрочихАктивовПассивов)
	|	И Строки.Статья.АктивПассив = ЗНАЧЕНИЕ(Перечисление.ВидыСтатейУправленческогоБаланса.Пассив)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыВЯчейках";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&ЗонаПриемки                           КАК Ячейка,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА ТаблицаТовары.Упаковка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА ТаблицаТовары.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТовары.Количество
	|	КОНЕЦ                                  КАК ВНаличии
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	(&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков)
	|			ИЛИ &ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию), ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков))
	|				И &ЗонаПриемки <> ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка))
	|	И &ЗаполнятьОперУчет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаИсторияПодарочныхСертификатов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ИсторияПодарочныхСертификатов";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаАктивации                                     КАК Период,
	|	ТабличнаяЧасть.ПодарочныйСертификат                              КАК ПодарочныйСертификат,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Активирован) КАК Статус
	|ИЗ
	|	Документ.ВводОстатков.ПодарочныеСертификаты КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПодарочныеСертификаты(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПодарочныеСертификаты";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаАктивации           КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ПодарочныйСертификат    КАК ПодарочныйСертификат,
	|	ТабличнаяЧасть.СуммаВВалютеСертификата КАК Сумма,
	|	ТабличнаяЧасть.СуммаРегл               КАК СуммаРегл
	|ИЗ
	|	Документ.ВводОстатков.ПодарочныеСертификаты КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыПоДоговорамКредитовИДепозитов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыПоДоговорамКредитовИДепозитов";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиПоПартнерам(Запрос);
	
	ТекстЗапроса =
	// Остаток задолженности основного долга по кредитам и займам
	"ВЫБРАТЬ
	|	РасчетыПоКредитамДепозитам.НомерСтроки          КАК НомерСтроки,
	|	&Период                                         КАК Период,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0 
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ                                           КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|	РасчетыПоКредитамДепозитам.Договор              КАК Договор,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыГрафикаКредитовИДепозитов.Транши)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыГрафикаКредитовИДепозитов.Оплаты)
	|	КОНЕЦ                                           КАК ТипГрафика,
	|	РасчетыПоКредитамДепозитам.ТипСуммы             КАК ТипСуммы,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДДСПоступленияВыдачи
	|		ИНАЧЕ РасчетыПоКредитамДепозитам.Договор.СтатьяДДСОсновногоДолга
	|	КОНЕЦ                                           КАК СтатьяАналитики,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|		ИНАЧЕ -РасчетыПоКредитамДепозитам.Сумма 
	|	КОНЕЦ                                           КАК СуммаВВалюте,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА 
	|			ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|				ИНАЧЕ РасчетыПоКредитамДепозитам.Сумма * ЕСТЬNULL(КурсыВалютДоговоров.КоэффициентПересчета, 1) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|			КОНЕЦ
	|		ИНАЧЕ
	|			-ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|				ИНАЧЕ РасчетыПоКредитамДепозитам.Сумма * ЕСТЬNULL(КурсыВалютДоговоров.КоэффициентПересчета, 1) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|			КОНЕЦ
	|	КОНЕЦ                                           КАК СуммаУпр,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.СуммаРегл
	|		ИНАЧЕ -РасчетыПоКредитамДепозитам.СуммаРегл 
	|	КОНЕЦ                                           КАК СуммаРегл
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК РасчетыПоКредитамДепозитам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютДоговоров
	|		ПО КурсыВалютДоговоров.Валюта = РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И РасчетыПоКредитамДепозитам.Контрагент = Аналитика.Контрагент
	|		И РасчетыПоКредитамДепозитам.Партнер = Аналитика.Партнер
	|		И Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И Аналитика.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов)
	|	И &ЗаполнятьОперУчет
	|	И РасчетыПоКредитамДепозитам.Ссылка = &Ссылка
	|	И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|	И РасчетыПоКредитамДепозитам.Договор.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Остаток задолженности основного долга по депозитам и займам выданным
	|ВЫБРАТЬ
	|	РасчетыПоКредитамДепозитам.НомерСтроки          КАК НомерСтроки,
	|	&Период                                         КАК Период,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0 
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ                                           КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|	РасчетыПоКредитамДепозитам.Договор              КАК Договор,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыГрафикаКредитовИДепозитов.Транши)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыГрафикаКредитовИДепозитов.Оплаты)
	|	КОНЕЦ                                           КАК ТипГрафика,
	|	РасчетыПоКредитамДепозитам.ТипСуммы             КАК ТипСуммы,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДДСПоступленияВыдачи
	|		ИНАЧЕ РасчетыПоКредитамДепозитам.Договор.СтатьяДДСОсновногоДолга
	|	КОНЕЦ                                           КАК СтатьяАналитики,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|		ИНАЧЕ -РасчетыПоКредитамДепозитам.Сумма 
	|	КОНЕЦ                                           КАК СуммаВВалюте,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА 
	|			ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|				ИНАЧЕ РасчетыПоКредитамДепозитам.Сумма * ЕСТЬNULL(КурсыВалютДоговоров.КоэффициентПересчета, 1) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|			КОНЕЦ
	|		ИНАЧЕ
	|			-ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|				ИНАЧЕ РасчетыПоКредитамДепозитам.Сумма * ЕСТЬNULL(КурсыВалютДоговоров.КоэффициентПересчета, 1) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|			КОНЕЦ
	|	КОНЕЦ                                            КАК СуммаУпр,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.СуммаРегл
	|		ИНАЧЕ -РасчетыПоКредитамДепозитам.СуммаРегл 
	|	КОНЕЦ                                            КАК СуммаРегл
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК РасчетыПоКредитамДепозитам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютДоговоров
	|		ПО КурсыВалютДоговоров.Валюта = РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И РасчетыПоКредитамДепозитам.Контрагент = Аналитика.Контрагент
	|		И РасчетыПоКредитамДепозитам.Партнер = Аналитика.Партнер
	|		И Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И Аналитика.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов)
	|	И &ЗаполнятьОперУчет
	|	И РасчетыПоКредитамДепозитам.Ссылка = &Ссылка
	|	И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|	И РасчетыПоКредитамДепозитам.Договор.ХарактерДоговора <> ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Остаток по выплаченым\начисленным процентам и комиссии кредитов
	|ВЫБРАТЬ
	|	РасчетыПоКредитамДепозитам.НомерСтроки          КАК НомерСтроки,
	|	&Период                                         КАК Период,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма < 0 
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ                                           КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|	РасчетыПоКредитамДепозитам.Договор              КАК Договор,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма < 0
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыГрафикаКредитовИДепозитов.Оплаты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыГрафикаКредитовИДепозитов.Начисления)
	|	КОНЕЦ                                           КАК ТипГрафика,
	|	РасчетыПоКредитамДепозитам.ТипСуммы             КАК ТипСуммы,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|			И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДоходовРасходовПроцентов
	|		КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|			И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|			ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДоходовРасходовКомиссии
	|		КОГДА РасчетыПоКредитамДепозитам.Сумма < 0
	|			И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДДСПроцентов
	|		КОГДА РасчетыПоКредитамДепозитам.Сумма < 0
	|			И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|			ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДДСКомиссии
	|	КОНЕЦ                                           КАК СтатьяАналитики,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|		ИНАЧЕ -РасчетыПоКредитамДепозитам.Сумма 
	|	КОНЕЦ                                           КАК СуммаВВалюте,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА 
	|			ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|				ИНАЧЕ РасчетыПоКредитамДепозитам.Сумма * ЕСТЬNULL(КурсыВалютДоговоров.КоэффициентПересчета, 1) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|			КОНЕЦ
	|		ИНАЧЕ
	|			-ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|				ИНАЧЕ РасчетыПоКредитамДепозитам.Сумма * ЕСТЬNULL(КурсыВалютДоговоров.КоэффициентПересчета, 1) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|			КОНЕЦ
	|	КОНЕЦ                                           КАК СуммаУпр,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.СуммаРегл
	|		ИНАЧЕ -РасчетыПоКредитамДепозитам.СуммаРегл 
	|	КОНЕЦ                                           КАК СуммаРегл
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК РасчетыПоКредитамДепозитам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютДоговоров
	|		ПО КурсыВалютДоговоров.Валюта = РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И РасчетыПоКредитамДепозитам.Контрагент = Аналитика.Контрагент
	|		И РасчетыПоКредитамДепозитам.Партнер = Аналитика.Партнер
	|		И Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И Аналитика.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов)
	|	И &ЗаполнятьОперУчет
	|	И РасчетыПоКредитамДепозитам.Ссылка = &Ссылка
	|	И РасчетыПоКредитамДепозитам.Договор.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|	И РасчетыПоКредитамДепозитам.ТипСуммы В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Остаток по выплаченым\начисленным процентам и комиссии депозитов
	|ВЫБРАТЬ
	|	РасчетыПоКредитамДепозитам.НомерСтроки          КАК НомерСтроки,
	|	&Период                                         КАК Период,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма < 0 
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ                                           КАК ВидДвижения,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|	РасчетыПоКредитамДепозитам.Договор              КАК Договор,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма < 0
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыГрафикаКредитовИДепозитов.Оплаты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыГрафикаКредитовИДепозитов.Начисления)
	|	КОНЕЦ                                           КАК ТипГрафика,
	|	РасчетыПоКредитамДепозитам.ТипСуммы             КАК ТипСуммы,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|			И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДоходовРасходовПроцентов
	|		КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|			И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|			ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДоходовРасходовКомиссии
	|		КОГДА РасчетыПоКредитамДепозитам.Сумма < 0
	|			И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты)
	|			ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДДСПроцентов
	|		КОГДА РасчетыПоКредитамДепозитам.Сумма < 0
	|			И РасчетыПоКредитамДепозитам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|			ТОГДА РасчетыПоКредитамДепозитам.Договор.СтатьяДДСКомиссии
	|	КОНЕЦ                                           КАК СтатьяАналитики,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|		ИНАЧЕ -РасчетыПоКредитамДепозитам.Сумма 
	|	КОНЕЦ                                           КАК СуммаВВалюте,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА 
	|			ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|				ИНАЧЕ РасчетыПоКредитамДепозитам.Сумма * ЕСТЬNULL(КурсыВалютДоговоров.КоэффициентПересчета, 1) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|			КОНЕЦ
	|		ИНАЧЕ
	|			-ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|				ТОГДА РасчетыПоКредитамДепозитам.Сумма 
	|				ИНАЧЕ РасчетыПоКредитамДепозитам.Сумма * ЕСТЬNULL(КурсыВалютДоговоров.КоэффициентПересчета, 1) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|			КОНЕЦ
	|	КОНЕЦ                                           КАК СуммаУпр,
	|	ВЫБОР КОГДА РасчетыПоКредитамДепозитам.Сумма > 0
	|		ТОГДА РасчетыПоКредитамДепозитам.СуммаРегл
	|		ИНАЧЕ -РасчетыПоКредитамДепозитам.СуммаРегл 
	|	КОНЕЦ                                           КАК СуммаРегл
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК РасчетыПоКредитамДепозитам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютДоговоров
	|		ПО КурсыВалютДоговоров.Валюта = РасчетыПоКредитамДепозитам.Договор.ВалютаВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|		ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И РасчетыПоКредитамДепозитам.Контрагент = Аналитика.Контрагент
	|		И РасчетыПоКредитамДепозитам.Партнер = Аналитика.Партнер
	|		И Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И Аналитика.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов)
	|	И &ЗаполнятьОперУчет
	|	И РасчетыПоКредитамДепозитам.Ссылка = &Ссылка
	|	И РасчетыПоКредитамДепозитам.Договор.ХарактерДоговора <> ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|	И РасчетыПоКредитамДепозитам.ТипСуммы В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия)
	|	)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипГрафика УБЫВ,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТМЦВЭксплуатации(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТМЦВЭксплуатации";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.НомерСтроки            КАК НомерСтроки,
	|	
	|	&Ссылка                        КАК Регистратор,
	|	&Период                        КАК Период,
	|	
	|	&Организация                   КАК Организация,
	|	&Подразделение                 КАК Подразделение,
	|	Таблица.ФизическоеЛицо         КАК ФизическоеЛицо,
	|	Таблица.Номенклатура           КАК Номенклатура,
	|	Таблица.Характеристика         КАК Характеристика,
	|	Таблица.ПартияТМЦВЭксплуатации КАК Партия,
	|	
	|	Таблица.Количество КАК Количество
	|ИЗ
	|	Документ.ВводОстатков.ТМЦВЭксплуатации КАК Таблица
	|	
	|ГДЕ
	|	Таблица.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТМЦВЭксплуатации)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыПереданныеПереработчику(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыПереданныеПереработчику";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                  КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)     КАК ВидДвижения,
	|	&Период                                    КАК Период,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов                   КАК ВидЗапасов,
	|	ТаблицаТовары.Количество                   КАК Количество
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|	И &ЗаполнятьОперУчет
	|	И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МатериалыИРаботыВПроизводстве";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	&Период                                         КАК Период,
	|	&Период                                         КАК ДатаРегистратора,
	|	&Организация                                    КАК Организация,
	|	ТаблицаТовары.Номенклатура                      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                    КАК Характеристика,
	|	ТаблицаТовары.Серия	                            КАК Серия,
	|	&Партнер                                  КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику)  КАК ХозяйственнаяОперация,
	|	КлючиПроизводства.КлючАналитики                 КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                    КАК СтатьяЗатрат,
	|	&ЗаказПереработчику                             КАК ЗаказНаПроизводство,
	|	ТаблицаТовары.Количество                        КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводства
	|	ПО
	|		ТаблицаТовары.Номенклатура = КлючиПроизводства.Номенклатура
	|		И ТаблицаТовары.Характеристика = КлючиПроизводства.Характеристика
	|		И ТаблицаТовары.Назначение = КлючиПроизводства.Назначение
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиПроизводства.СтатьяКалькуляции
	//-- НЕ УТ
	|		И (ВЫБОР ТаблицаТовары.СтатусУказанияСерий 
	|			КОГДА 14 ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ) = КлючиПроизводства.Серия
	|		И &Партнер = КлючиПроизводства.Склад
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|	И &ЗаполнятьОперУчет
	|	И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	&Период                                         КАК Период,
	|	&Период                                         КАК ДатаРегистратора,
	|	&Организация                                    КАК Организация,
	|	ТаблицаТовары.Номенклатура                      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                    КАК Характеристика,
	|	ТаблицаТовары.Серия	                            КАК Серия,
	|	&Подразделение                                  КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство) КАК ХозяйственнаяОперация,
	|	КлючиПроизводства.КлючАналитики                 КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                    КАК СтатьяЗатрат,
	|	НЕОПРЕДЕЛЕНО                                    КАК ЗаказНаПроизводство,
	|	ТаблицаТовары.Количество                        КАК Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПроизводства
	|	ПО
	|		ТаблицаТовары.Номенклатура = КлючиПроизводства.Номенклатура
	|		И ТаблицаТовары.Характеристика = КлючиПроизводства.Характеристика
	|		И ТаблицаТовары.Назначение = КлючиПроизводства.Назначение
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиПроизводства.СтатьяКалькуляции
	//-- НЕ УТ	
	|		И (ВЫБОР ТаблицаТовары.СтатусУказанияСерий 
	|			КОГДА 14 ТОГДА ТаблицаТовары.Серия
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КОНЕЦ) = КлючиПроизводства.Серия
	|		И &Подразделение = КлючиПроизводства.Склад
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|	И &ЗаполнятьОперУчет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПроизводственныхЗатрат";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма КАК Стоимость,
	|	ТаблицаТовары.СуммаБезНДС КАК СтоимостьБезНДС,
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	&Ссылка КАК ДокументПоступления,
	|	ТаблицаТовары.СуммаПР КАК ПостояннаяРазница,
	|	ТаблицаТовары.СуммаВР КАК ВременнаяРазница,
	|	ТаблицаТовары.СуммаРегл КАК СтоимостьРегл,
	|	ТаблицаТовары.НДСРегл КАК НДСРегл,
	|	ТаблицаТовары.ВидДеятельностиНДС КАК НалогообложениеНДС
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	(&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|			ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|				И НЕ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &ЗаполнятьОперУчет
	|	И НЕ &ПартионныйУчетВерсии22
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаФинансовыеРезультаты(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ФинансовыеРезультаты";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДоходы.ДатаОтражения           КАК Период,
	|	&Организация                          КАК Организация,
	|	&Подразделение                        КАК Подразделение,
	|	ТаблицаДоходы.СтатьяДоходов           КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО                          КАК СтатьяРасходов,
	|	ТаблицаДоходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаДоходы.СуммаДоходов            КАК Доходы,
	|	0                                     КАК Расходы
	|	
	|ИЗ
	|	Документ.ВводОстатков.ФинансовыйРезультатДоходы КАК ТаблицаДоходы
	|
	|ГДЕ
	|	ТаблицаДоходы.Ссылка = &Ссылка
	|
 	|ОБЪЕДИНИТЬ ВСЕ
 	|
	|ВЫБРАТЬ
	|	ТаблицаРасходы.ДатаОтражения           КАК Период,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                           КАК СтатьяДоходов,
	|	ТаблицаРасходы.СтатьяРасходов          КАК СтатьяРасходов,
	|	ТаблицаРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	0                                      КАК Доходы,
	|	ТаблицаРасходы.СуммаРасходов           КАК Расходы
	|	
	|ИЗ
	|	Документ.ВводОстатков.ФинансовыйРезультатРасходы КАК ТаблицаРасходы
	|
	|ГДЕ
	|	ТаблицаРасходы.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Подразделение,
	|	НаправлениеДеятельности,
	|	СтатьяДоходов,
	|	СтатьяРасходов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;

КонецФункции

Процедура УстановитьПараметрАналитикаУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПоПартнерам") Тогда
		Возврат;
	КонецЕсли;
	
	АналитикаУчетаПоПартнерам = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Запрос.Параметры);
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам", АналитикаУчетаПоПартнерам);

КонецПроцедуры

Функция ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВыручкаИСебестоимостьПродаж";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрАналитикаУчетаПоПартнерам(Запрос);
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                      КАК НомерСтроки,
	|	ТаблицаТовары.ДатаОтражения                                    КАК Период,
	|	&Подразделение                                                 КАК Подразделение,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение 
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаСебестоимости.КлючАналитики
	|	КОНЕЦ                                                          КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                                   КАК АналитикаУчетаНаборов,
	|	&АналитикаУчетаПоПартнерам                                     КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО                                                   КАК ЗаказКлиента,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ИЛИ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ                                                          КАК ТипЗапасов,
	|	&Менеджер                                                      КАК Менеджер,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                          КАК ВидЗапасов,
	|	&Склад                                                         КАК Склад,
	|	&Договор                                                       КАК Договор,
	|	&СоглашениеСКлиентом                                           КАК Соглашение,
	|	&ВалютаУправленческогоУчета                                    КАК ВалютаВзаиморасчетов,
	|	&ВалютаУправленческогоУчета                                    КАК ВалютаДокумента,
	|	&НалогообложениеНДС                                            КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту) КАК ХозяйственнаяОперация,
	|
	|	&НаправлениеДеятельности                                       КАК НаправлениеДеятельностиКонтрагента,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение 
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                          КАК НаправлениеДеятельностиНоменклатуры,
	|
	|	НЕОПРЕДЕЛЕНО                                                   КАК ИсточникГФУНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                                   КАК ИсточникГФУРасчетов,
	|
	|	0                                                              КАК Себестоимость,
	|	0                                                              КАК СебестоимостьБезНДС,
	|	0                                                              КАК СебестоимостьРегл,
	|	0                                                              КАК СуммаРучнойСкидки,
	|	0                                                              КАК СуммаАвтоматическойСкидки,
	|	0                                                              КАК СуммаВВалютеВзаиморасчетов,
	|	0                                                              КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	0                                                              КАК СуммаВВалютеДокумента,
	|	0                                                              КАК СуммаБезНДСВВалютеДокумента,
	|	ТаблицаТовары.Количество                                       КАК Количество,
	|	ТаблицаТовары.Сумма                                            КАК СуммаВыручки,
	|	ТаблицаТовары.СуммаБезНДС                                      КАК СуммаВыручкиБезНДС,
	|	ТаблицаТовары.СуммаРегл                                        КАК СуммаВыручкиРегл,
	|	ТаблицаТовары.СуммаРегл + ТаблицаТовары.НДСРегл                КАК СуммаВыручкиСНДСРегл
	|
	|ИЗ
	|	Документ.ВводОстатков.ОптовыеПродажи КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|	ПО ТаблицаТовары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаСебестоимости
	|	ПО Ключи.Номенклатура = АналитикаСебестоимости.Номенклатура
	|		И Ключи.Характеристика = АналитикаСебестоимости.Характеристика
	|		И Ключи.Серия = АналитикаСебестоимости.Серия
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаСебестоимости.СтатьяКалькуляции
	//-- НЕ УТ
	|		И Ключи.Склад = АналитикаСебестоимости.Склад
	|		И &ПустоеНазначение = АналитикаСебестоимости.Назначение
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                       КАК НомерСтроки,
	|	ТаблицаТовары.ДатаОтражения                                     КАК Период,
	|	&Подразделение                                                  КАК Подразделение,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение 
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаСебестоимости.КлючАналитики
	|	КОНЕЦ                                                           КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                                    КАК АналитикаУчетаНаборов,
	|	ТаблицаТовары.АналитикаУчетаПоПартнерам                         КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО                                                    КАК ЗаказКлиента,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ИЛИ ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ                                                           КАК ТипЗапасов,
	|	&Менеджер                                                       КАК Менеджер,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                           КАК ВидЗапасов,
	|	&Склад                                                          КАК Склад,
	|	&Договор                                                        КАК Договор,
	|	&СоглашениеСКлиентом                                            КАК Соглашение,
	|	&ВалютаУправленческогоУчета                                     КАК ВалютаВзаиморасчетов,
	|	&ВалютаУправленческогоУчета                                     КАК ВалютаДокумента,
	|	&НалогообложениеНДС                                             КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВрозницу) КАК ХозяйственнаяОперация,
	|
	|	&НаправлениеДеятельности                                       КАК НаправлениеДеятельностиКонтрагента,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение 
	|		ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                          КАК НаправлениеДеятельностиНоменклатуры,
	|
	|	НЕОПРЕДЕЛЕНО                                                    КАК ИсточникГФУНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                                    КАК ИсточникГФУРасчетов,
	|
	|	0                                                               КАК Себестоимость,
	|	0                                                               КАК СебестоимостьБезНДС,
	|	0                                                               КАК СебестоимостьРегл,
	|	0                                                               КАК СуммаРучнойСкидки,
	|	0                                                               КАК СуммаАвтоматическойСкидки,
	|	0                                                               КАК СуммаВВалютеВзаиморасчетов,
	|	0                                                               КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	0                                                               КАК СуммаВВалютеДокумента,
	|	0                                                               КАК СуммаБезНДСВВалютеДокумента,
	|	ТаблицаТовары.Количество                                        КАК Количество,
	|	ТаблицаТовары.Сумма                                             КАК СуммаВыручки,
	|	ТаблицаТовары.СуммаБезНДС                                       КАК СуммаВыручкиБезНДС,
	|	ТаблицаТовары.СуммаРегл                                         КАК СуммаВыручкиРегл,
	|	ТаблицаТовары.СуммаРегл + ТаблицаТовары.НДСРегл                 КАК СуммаВыручкиСНДСРегл
	|
	|ИЗ
	|	Документ.ВводОстатков.РозничныеПродажи КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|	ПО ТаблицаТовары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаСебестоимости
	|	ПО Ключи.Номенклатура = АналитикаСебестоимости.Номенклатура
	|		И Ключи.Характеристика = АналитикаСебестоимости.Характеристика
	|		И Ключи.Серия = АналитикаСебестоимости.Серия
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = АналитикаСебестоимости.СтатьяКалькуляции
	//-- НЕ УТ
	|		И Ключи.Склад = АналитикаСебестоимости.Склад
	|		И &ПустоеНазначение = АналитикаСебестоимости.Назначение
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваВПути(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваВПути";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетыПоЭквайрингу.НомерСтроки                                                    КАК НомерСтроки,
	|	&Период                                                                            КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                             КАК ВидДвижения,
	|	&Организация                                                                       КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу) КАК ВидПереводаДенежныхСредств,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал.БанковскийСчет                           КАК Получатель,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал.Эквайер                                  КАК Контрагент,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал.БанковскийСчет.ВалютаДенежныхСредств     КАК Валюта,
	|	РасчетыПоЭквайрингу.Сумма                                                          КАК Сумма,
	|	РасчетыПоЭквайрингу.СуммаРегл                                                      КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ЭквайринговыеТерминалы.БанковскийСчет.ВалютаДенежныхСредств = &ВалютаУправленческогоУчета
	|			ТОГДА РасчетыПоЭквайрингу.Сумма
	|		ИНАЧЕ
	|			РасчетыПоЭквайрингу.Сумма * ЕСТЬNULL(КурсыВалютСчета.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                                                              КАК СуммаУпр
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоЭквайрингу КАК РасчетыПоЭквайрингу
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютСчета
	|			ПО КурсыВалютСчета.Валюта = ЭквайринговыеТерминалы.БанковскийСчет.ВалютаДенежныхСредств
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|			ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|		ПО РасчетыПоЭквайрингу.ЭквайринговыйТерминал = ЭквайринговыеТерминалы.Ссылка
	|ГДЕ
	|	РасчетыПоЭквайрингу.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.СторноОтчетовПоЭквайрингу)
	|	И РасчетыПоЭквайрингу.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредствПоЭквайрингу.ПоступлениеПоПлатежнойКарте)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыПоЭквайрингу.НомерСтроки                                                    КАК НомерСтроки,
	|	&Период                                                                            КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                             КАК ВидДвижения,
	|	&Организация                                                                       КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу) КАК ВидПереводаДенежныхСредств,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал.БанковскийСчет                           КАК Получатель,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал.Эквайер                                  КАК Контрагент,
	|	РасчетыПоЭквайрингу.ЭквайринговыйТерминал.БанковскийСчет.ВалютаДенежныхСредств     КАК Валюта,
	|	РасчетыПоЭквайрингу.Сумма                                                          КАК Сумма,
	|	РасчетыПоЭквайрингу.СуммаРегл                                                      КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ЭквайринговыеТерминалы.БанковскийСчет.ВалютаДенежныхСредств = &ВалютаУправленческогоУчета
	|			ТОГДА РасчетыПоЭквайрингу.Сумма
	|		ИНАЧЕ
	|			РасчетыПоЭквайрингу.Сумма * ЕСТЬNULL(КурсыВалютСчета.КоэффициентПересчета, 0) / ЕСТЬNULL(КурсыВалютУпр.КоэффициентПересчета, 1)
	|	КОНЕЦ                                                                              КАК СуммаУпр
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоЭквайрингу КАК РасчетыПоЭквайрингу
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭквайринговыеТерминалы КАК ЭквайринговыеТерминалы
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютСчета
	|			ПО КурсыВалютСчета.Валюта = ЭквайринговыеТерминалы.БанковскийСчет.ВалютаДенежныхСредств
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыВалют КАК КурсыВалютУпр
	|			ПО КурсыВалютУпр.Валюта = &ВалютаУправленческогоУчета
	|		ПО РасчетыПоЭквайрингу.ЭквайринговыйТерминал = ЭквайринговыеТерминалы.Ссылка
	|ГДЕ
	|	РасчетыПоЭквайрингу.Ссылка = &Ссылка
	|	И &ЗаполнятьОперУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.СторноОтчетовПоЭквайрингу)
	|	И РасчетыПоЭквайрингу.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредствПоЭквайрингу.СписаниеПоПлатежнойКарте)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ НЕ УТ
Функция ТекстЗапросаТаблицаПорядокОтраженияПрочихОпераций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПорядокОтраженияПрочихОпераций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	&Период         КАК Дата,
	|	&Организация    КАК Организация,
	|	&Ссылка         КАК Документ,
	|	""""            КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ВводОстатков.ПрочиеРасходы КАК Строки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиПрочихОпераций
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиПрочихОпераций.Ссылка
	|		И СтатьиПрочихОпераций.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|		И СтатьиПрочихОпераций.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|
	|ГДЕ
	|	Строки.Ссылка = &Ссылка
	|	И &ЗаполнятьРеглУчет
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПрочихРасходов)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период          КАК Период,
	|	&Организация     КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период                  КАК Период,
	|	&ОрганизацияПолучатель   КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|ГДЕ
	|	&ТипОперации В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям))
	|	И &ЗаполнятьРеглУчет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//-- НЕ УТ

#КонецОбласти

#Область Прочее

Функция ТипДокументаРасчетовПоТипуОперации(ТипОперации) Экспорт
	
	РасчетныйДокумент = Неопределено;
	
	Возврат РасчетныйДокумент;
	
КонецФункции

Функция ХозяйственнаяОперацияДоговораПоТипуОперации(ТипОперации) Экспорт

	Если ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов
		Или ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов Тогда
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
	ИначеЕсли ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками
		Или ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам Тогда
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
	Иначе
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПустаяСсылка();
	КонецЕсли;
	Возврат ХозяйственнаяОперация;

КонецФункции

Функция ПорядокОплатыДоговораПоВалюте(Валюта) Экспорт
	Если Не ЗначениеЗаполнено(Валюта)
		Или Валюта = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
		ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях;
	Иначе
		ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВРублях;
	КонецЕсли;
	Возврат ПорядокОплаты;
КонецФункции

Функция ИмяТабличнойЧастиРасчетовПоТипуОперации(ТипОперации) Экспорт
	
	Если (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов)
		Или (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов)
		Или (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками)
		Или (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам) Тогда
		
		Возврат "РасчетыСПартнерами";
		
	ИначеЕсли (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетников)
		Или (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств) Тогда
		Возврат "РасчетыСПодотчетниками";
		
	ИначеЕсли (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
		Или (ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам) Тогда
		
		Возврат "РасчетыМеждуОрганизациями";
		
	Иначе
		
		Возврат "";
		
	КонецЕсли;

КонецФункции

Процедура ПодобратьДокументРасчетов(Объект, ТекущиеДанные, Отказ = Ложь) Экспорт
	
	ИмяТЧ = ИмяТабличнойЧастиРасчетовПоТипуОперации(Объект.ТипОперации);
	
	Если ТекущиеДанные.РасчетныйДокумент = Неопределено Тогда
		
		ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
		
		Если ТекущиеДанные.РасчетныйДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	МетаданныеРасчетногоДокумента = Метаданные.НайтиПоТипу(ТипЗнч(ТекущиеДанные.РасчетныйДокумент));
	
	Если ТипЗнч(ТекущиеДанные.РасчетныйДокумент) = Тип("ПеречислениеСсылка.ТипыДоговоров") Тогда
		ПредставлениеОбъекта = НСтр("ru='Договор контрагента'");
	ИначеЕсли ТипЗнч(ТекущиеДанные.РасчетныйДокумент) = Тип("ПеречислениеСсылка.ТипыДоговоровМеждуОрганизациями") Тогда
		ПредставлениеОбъекта = НСтр("ru='Договор между организациями'");
	Иначе
		ПредставлениеОбъекта = ?(ЗначениеЗаполнено(МетаданныеРасчетногоДокумента.ПредставлениеОбъекта),МетаданныеРасчетногоДокумента.ПредставлениеОбъекта,МетаданныеРасчетногоДокумента.Синоним);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Если ИмяТЧ = "РасчетыСПартнерами" Тогда
		
		Если ТипЗнч(ТекущиеДанные.РасчетныйДокумент) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ДокументРасчетов.Ссылка,
			|	ДокументРасчетов.Контрагент,
			|	ДокументРасчетов.Партнер,
			|	ДокументРасчетов.Организация,
			|	ДокументРасчетов.ВалютаВзаиморасчетов КАК Валюта,
			|	ДокументРасчетов.Дата,
			|	ДокументРасчетов.Номер
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов КАК ДокументРасчетов
			|ГДЕ
			|	ДокументРасчетов.Номер = &Номер
			|	И ДокументРасчетов.Дата = &Дата
			|	И ДокументРасчетов.Партнер = &Партнер
			|	И ДокументРасчетов.Контрагент = &Контрагент
			|	И ДокументРасчетов.Организация = &Организация
			|	И ДокументРасчетов.ПорядокОплаты = &ПорядокОплаты";
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Номер",СокрЛП(ТекущиеДанные.НомерРасчетногоДокумента));
			Запрос.УстановитьПараметр("Дата",ТекущиеДанные.ДатаРасчетногоДокумента);
			Запрос.УстановитьПараметр("Партнер",ТекущиеДанные.Партнер);
			Запрос.УстановитьПараметр("Контрагент",ТекущиеДанные.Контрагент);
			Запрос.УстановитьПараметр("Организация",Объект.Организация);
			Запрос.УстановитьПараметр("ПорядокОплаты",ПорядокОплатыДоговораПоВалюте(ТекущиеДанные.ВалютаВзаиморасчетов));
		ИначеЕсли ТипЗнч(ТекущиеДанные.РасчетныйДокумент) = Тип("ПеречислениеСсылка.ТипыДоговоров") Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ДокументРасчетов.Ссылка,
			|	ДокументРасчетов.Контрагент,
			|	ДокументРасчетов.Партнер,
			|	ДокументРасчетов.Организация,
			|	ДокументРасчетов.ВалютаВзаиморасчетов КАК Валюта,
			|	ДокументРасчетов.Дата,
			|	ДокументРасчетов.Номер
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов КАК ДокументРасчетов
			|ГДЕ
			|	ДокументРасчетов.Номер = &Номер
			|	И ДокументРасчетов.Дата = &Дата
			|	И ДокументРасчетов.Партнер = &Партнер
			|	И ДокументРасчетов.Контрагент = &Контрагент
			|	И ДокументРасчетов.Организация = &Организация
			|	И ДокументРасчетов.ТипДоговора = &ТипДоговора";
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Номер",СокрЛП(ТекущиеДанные.НомерРасчетногоДокумента));
			Запрос.УстановитьПараметр("Дата",ТекущиеДанные.ДатаРасчетногоДокумента);
			Запрос.УстановитьПараметр("Партнер",ТекущиеДанные.Партнер);
			Запрос.УстановитьПараметр("Контрагент",ТекущиеДанные.Контрагент);
			Запрос.УстановитьПараметр("Организация",Объект.Организация);
			Запрос.УстановитьПараметр("ТипДоговора",ТекущиеДанные.РасчетныйДокумент);
		Иначе
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ДокументРасчетов.Ссылка,
			|	ДокументРасчетов.Контрагент,
			|	ДокументРасчетов.Партнер,
			|	ДокументРасчетов.Организация,
			|	ДокументРасчетов.Валюта,
			|	ДокументРасчетов.Дата,
			|	ДокументРасчетов.Номер
			|ИЗ
			|	Документ."+МетаданныеРасчетногоДокумента.Имя+" КАК ДокументРасчетов
			|ГДЕ
			|	ДокументРасчетов.Номер = &Номер
			|	И ГОД(ДокументРасчетов.Дата) = &Год";
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Номер",ТекущиеДанные.НомерРасчетногоДокумента);
			Запрос.УстановитьПараметр("Год",Год(ТекущиеДанные.ДатаРасчетногоДокумента));
		КонецЕсли;
		
	ИначеЕсли ИмяТЧ = "РасчетыСПодотчетниками" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ДокументРасчетов.Ссылка,
		|	ДокументРасчетов.ПодотчетноеЛицо,";
		Если ТипЗнч(ТекущиеДанные.РасчетныйДокумент) <> Тип("ДокументСсылка.АвансовыйОтчет") Тогда
			ТекстЗапроса = ТекстЗапроса + "
		|	ДокументРасчетов.ХозяйственнаяОперация,";
		КонецЕсли;	
		ТекстЗапроса = ТекстЗапроса + "
		|	ДокументРасчетов.Организация,
		|	ДокументРасчетов.Валюта,
		|	ДокументРасчетов.Дата,
		|	ДокументРасчетов.Номер
		|ИЗ
		|	Документ."+МетаданныеРасчетногоДокумента.Имя+" КАК ДокументРасчетов
		|ГДЕ
		|	ДокументРасчетов.Номер = &Номер
		|	И ГОД(ДокументРасчетов.Дата) = &Год";
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Номер",ТекущиеДанные.НомерРасчетногоДокумента);
		Запрос.УстановитьПараметр("Год",Год(ТекущиеДанные.ДатаРасчетногоДокумента));
		
	ИначеЕсли ИмяТЧ = "РасчетыМеждуОрганизациями" Тогда
		Если ТипЗнч(ТекущиеДанные.РасчетныйДокумент) <> Тип("СправочникСсылка.ДоговорыМеждуОрганизациями")
			ИЛИ ТипЗнч(ТекущиеДанные.РасчетныйДокумент) <> Тип("ПеречислениеСсылка.ТипыДоговоровМеждуОрганизациями")
		Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДокументРасчетов.Ссылка,
			|	ДокументРасчетов.ОрганизацияПолучатель КАК Контрагент,
			|	НЕОПРЕДЕЛЕНО КАК Партнер,
			|	ДокументРасчетов.Организация,
			|	ДокументРасчетов.ВалютаВзаиморасчетов КАК Валюта,
			|	ДокументРасчетов.Дата,
			|	ДокументРасчетов.Номер
			|ИЗ
			|	Справочник.ДоговорыМеждуОрганизациями КАК ДокументРасчетов
			|ГДЕ
			|	ДокументРасчетов.Номер = &Номер
			|	И ДокументРасчетов.Дата = &Дата
			|	И ДокументРасчетов.ОрганизацияПолучатель = &ОрганизацияПолучатель
			|	И ДокументРасчетов.Организация = &Организация
			|	И ДокументРасчетов.ПорядокОплаты = &ПорядокОплаты
			|	И ДокументРасчетов.ТипДоговора = &ТипДоговора
			|";
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Номер",СокрЛП(ТекущиеДанные.НомерРасчетногоДокумента));
			Запрос.УстановитьПараметр("Дата",ТекущиеДанные.ДатаРасчетногоДокумента);
			Запрос.УстановитьПараметр("ОрганизацияПолучатель",Объект.ОрганизацияПолучатель);
			Запрос.УстановитьПараметр("Организация",Объект.Организация);
			Если ТипЗнч(ТекущиеДанные.РасчетныйДокумент) = Тип("СправочникСсылка.ДоговорыМеждуОрганизациями") Тогда
				Запрос.УстановитьПараметр("ТипДоговора",ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные.РасчетныйДокумент, "ТипДоговора"));
			Иначе
				Запрос.УстановитьПараметр("ТипДоговора",ТекущиеДанные.РасчетныйДокумент);
			КонецЕсли;
			Запрос.УстановитьПараметр("ПорядокОплаты",ПорядокОплатыДоговораПоВалюте(ТекущиеДанные.ВалютаВзаиморасчетов));
		Иначе
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ДокументРасчетов.Ссылка,
			|	ДокументРасчетов.Контрагент,
			|	ДокументРасчетов.Партнер,
			|	ДокументРасчетов.Организация, ";
			Если ТипЗнч(ТекущиеДанные.РасчетныйДокумент) <> Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями") Тогда
				ТекстЗапроса = ТекстЗапроса + "
			|	ДокументРасчетов.Комиссионер КАК ОрганизацияПолучатель,";
			Иначе
				ТекстЗапроса = ТекстЗапроса + "
			|	ДокументРасчетов.ОрганизацияПолучатель КАК ОрганизацияПолучатель,";
			КонецЕсли;			
			ТекстЗапроса = ТекстЗапроса + "
			|	ДокументРасчетов.Валюта,
			|	ДокументРасчетов.Дата,
			|	ДокументРасчетов.Номер
			|ИЗ
			|	Документ."+МетаданныеРасчетногоДокумента.Имя+" КАК ДокументРасчетов
			|ГДЕ
			|	ДокументРасчетов.Номер = &Номер
			|	И ГОД(ДокументРасчетов.Дата) = &Год";
			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Номер",ТекущиеДанные.НомерРасчетногоДокумента);
			Запрос.УстановитьПараметр("Год",Год(ТекущиеДанные.ДатаРасчетногоДокумента));
		КонецЕсли;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Если ИмяТЧ = "РасчетыСПартнерами" Тогда
			Если Выборка.Организация <> Объект.Организация Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% организация отличается от указанной во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].НомерРасчетногоДокумента",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.Партнер)
				И Выборка.Партнер <> ТекущиеДанные.Партнер Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% партнер отличается от указанного во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].Партнер",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.Контрагент)
				И Выборка.Контрагент <> ТекущиеДанные.Контрагент Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% контрагент отличается от указанного во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].Контрагент",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			ТекущиеДанные.Контрагент = Выборка.Контрагент;
			ТекущиеДанные.Партнер	 = Выборка.Партнер;
			
			Если Не ЗначениеЗаполнено(ТекущиеДанные.ВалютаВзаиморасчетов) Тогда
				ТекущиеДанные.ВалютаВзаиморасчетов = Выборка.Валюта;
			КонецЕсли;
			
		ИначеЕсли ИмяТЧ = "РасчетыСПодотчетниками" Тогда
			
			Если Выборка.Организация <> Объект.Организация Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% организация отличается от указанной во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].НомерРасчетногоДокумента",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.ПодотчетноеЛицо)
				И Выборка.ПодотчетноеЛицо <> ТекущиеДанные.ПодотчетноеЛицо Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% подотчетное лицо отличается от указанного во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].ПодотчетноеЛицо",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ТекущиеДанные.Валюта)
				И Выборка.Валюта <> ТекущиеДанные.Валюта Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% валюта отличается от указанной во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].ПодотчетноеЛицо",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если ТипЗнч(ТекущиеДанные.РасчетныйДокумент) <> Тип("ДокументСсылка.АвансовыйОтчет")
				И Выборка.ХозяйственнаяОперация <>  Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику Тогда
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% хозяйственная операция отличается от ""%ВыдачаДенежныхСредствПодотчетнику%""");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ВыдачаДенежныхСредствПодотчетнику%",Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].НомерРасчетногоДокумента",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				Возврат;
			КонецЕсли;
			
			ТекущиеДанные.ПодотчетноеЛицо = Выборка.ПодотчетноеЛицо;
			ТекущиеДанные.Валюта = Выборка.Валюта;
			
		ИначеЕсли ИмяТЧ = "РасчетыМеждуОрганизациями" Тогда
			
			Если Выборка.Организация <> Объект.Организация Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% %РольОрганизации% отличается от указанной во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				Если ТипЗнч(ТекущиеДанные.РасчетныйДокумент) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%РольОрганизации%",НСтр("ru = 'организация-продавец'"));
				Иначе
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%РольОрганизации%",НСтр("ru = 'организация-комитент'"));
				КонецЕсли;		
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].НомерРасчетногоДокумента",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если Выборка.Контрагент <> Объект.ОрганизацияПолучатель Тогда
				
				ТекстСообщения = НСтр("ru='В найденном документе ""%ТипДокумента%"" № %Номер% %РольОрганизации% отличается от указанной во вводе остатков'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%ТипДокумента%",ПредставлениеОбъекта);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Номер%",ТекущиеДанные.НомерРасчетногоДокумента);
				
				Если ТипЗнч(ТекущиеДанные.РасчетныйДокумент) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%РольОрганизации%",НСтр("ru='организация-покупатель'"));
				Иначе
					ТекстСообщения = СтрЗаменить(ТекстСообщения,"%РольОрганизации%",НСтр("ru='организация-комиссионер'"));
				КонецЕсли;		
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Объект."+ИмяТЧ+"["+Формат(ТекущиеДанные.НомерСтроки-1,"ЧГ=0")+"].НомерРасчетногоДокумента",,Отказ);
				ТекущиеДанные.РасчетныйДокумент = ТипДокументаРасчетовПоТипуОперации(Объект.ТипОперации);
				
				Возврат;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ТекущиеДанные.ВалютаВзаиморасчетов) Тогда
				ТекущиеДанные.ВалютаВзаиморасчетов = Выборка.Валюта;
			КонецЕсли;
			
		КонецЕсли;
		
		ТекущиеДанные.РасчетныйДокумент			= Выборка.Ссылка;
		ТекущиеДанные.ДатаРасчетногоДокумента	= Выборка.Дата;
		ТекущиеДанные.НомерРасчетногоДокумента	= Выборка.Номер;
		
	Иначе
		
		Если ТипЗнч(ТекущиеДанные.РасчетныйДокумент) = Тип("СправочникСсылка.ДоговорыКонтрагентов")
			ИЛИ ТипЗнч(ТекущиеДанные.РасчетныйДокумент) = Тип("СправочникСсылка.ДоговорыМеждуОрганизациями")
		Тогда
			ТекущиеДанные.РасчетныйДокумент = ТекущиеДанные.РасчетныйДокумент.ТипДоговора;
		ИначеЕсли ТипЗнч(ТекущиеДанные.РасчетныйДокумент) <> Тип("ПеречислениеСсылка.ТипыДоговоров")
			И ТипЗнч(ТекущиеДанные.РасчетныйДокумент) <> Тип("ПеречислениеСсылка.ТипыДоговоровМеждуОрганизациями")
		Тогда
			МетаданныеДокумента = Метаданные.НайтиПоТипу(ТипЗнч(ТекущиеДанные.РасчетныйДокумент));
			ТекущиеДанные.РасчетныйДокумент = Документы[МетаданныеДокумента.Имя].ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Формирование списка архивных типов операций ввода начальных остатков.
//
// Параметры:
// 		СписокАрхивныхТиповОпераций - Массив
//
Функция ПолучитьСписокАрхивныхТиповОпераций() Экспорт

	СписокАрхивныхТиповОпераций = Новый Массив;
	СписокАрхивныхТиповОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.УдалитьОстаткиСобственныхТоваровНаАдресномСкладе);
	СписокАрхивныхТиповОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.УдалитьОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе);
	СписокАрхивныхТиповОпераций.Добавить(Перечисления.ТипыОперацийВводаОстатков.УдалитьОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе);
	
	Возврат СписокАрхивныхТиповОпераций;
	
КонецФункции

// Формирование списка доступных типов операций ввода начальных остатков, исходя из настройки функциональных опций.
//
// Параметры:
// СписокТиповОпераций - СписокЗначений
//
Процедура ПолучитьСписокТиповОпераций(СписокТиповОпераций) Экспорт
	
	СписокИсключаемыхТипов = Новый СписокЗначений;
	
	СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиОС);
	СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПереданныхВАрендуОС);
	СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиНМА);
	СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиАрендованныхОС);
	СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПредметовЛизингаЗаБалансом);
	СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПредметовЛизингаНаБалансе);
	СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПереданныхВАрендуПредметовЛизингаНаБалансе);
	СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВзаиморасчетовПоДоговорамЛизинга);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьАдресноеХранение") Тогда
		МассивАрхивныхТипов = ПолучитьСписокАрхивныхТиповОпераций();
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("МассивАрхивныхТипов", МассивАрхивныхТипов);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВводОстатков.ТипОперации
		|ИЗ
		|	Документ.ВводОстатков КАК ВводОстатков
		|ГДЕ
		|	ВводОстатков.ТипОперации В(&МассивАрхивныхТипов)";
		СуществуютДокументыАрхивныхТипов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ТипОперации");
		Для Каждого АрхивныйТип Из МассивАрхивныхТипов Цикл
			Если СуществуютДокументыАрхивныхТипов.Найти(АрхивныйТип) = Неопределено Тогда
				СписокИсключаемыхТипов.Добавить(АрхивныйТип);
			КонецЕсли;
		КонецЦикла;
	Иначе
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.УдалитьОстаткиСобственныхТоваровНаАдресномСкладе);
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.УдалитьОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе);
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.УдалитьОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе);
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ПереходНаИспользованиеАдресногоХраненияОстатков);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОплатуПлатежнымиКартами") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.СторноОтчетовПоЭквайрингу);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию);
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.УдалитьОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе);
	КонецЕсли;

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМКОформлениюОтчетовОРозничныхПродажах);
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВАвтономныхКассахККМПоРозничнойВыручке);
	КонецЕсли;

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам);
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьМногооборотнуюТару") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам);
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков);
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.УдалитьОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПрочихАктивовПассивов);
	КонецЕсли;
	
	Если Не (ПолучитьФункциональнуюОпцию("ИспользоватьОрдернуюСхемуПриОтгрузке", Новый Структура)
			И ПолучитьФункциональнуюОпцию("ИспользоватьОрдернуюСхемуПриПоступлении", Новый Структура)
			И ПолучитьФункциональнуюОпцию("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач", Новый Структура)) Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ПереходНаИспользованиеСкладскихПомещений);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПодарочныеСертификаты") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ПодарочныеСертификаты);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьВнутреннееПотребление")
		   Или ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиТМЦВЭксплуатации);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("УправлениеТорговлей")
//++ НЕ УТ
		   Или Не ПолучитьФункциональнуюОпцию("ИспользоватьПроизводствоНаСтороне")
//-- НЕ УТ
		   Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство")
		   Или ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПрочихРасходов);
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи") Тогда
		СписокИсключаемыхТипов.Добавить(Перечисления.ТипыОперацийВводаОстатков.РозничныеПродажиЗаПрошлыеПериоды);
	КонецЕсли;
	
	Для Каждого ЭлементМетаданных Из Метаданные.Перечисления.ТипыОперацийВводаОстатков.ЗначенияПеречисления Цикл
		
		ТипОперации = Перечисления.ТипыОперацийВводаОстатков[ЭлементМетаданных.Имя];
		Если СписокИсключаемыхТипов.НайтиПоЗначению(ТипОперации) = Неопределено Тогда
			СписокТиповОпераций.Добавить(ТипОперации);
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

//Формирование префикса документа
//
// Параметры:
// Организация - СправочникСсылка.Организации
//
// Возвращаемое значение:
//  Строка - строковое значение префикса документа
//
Функция УстановитьПрефикс(Организация) Экспорт
	
	ПрефиксИнформационнойБазы = "";
	ПрефиксОрганизации        = "";
	
	// устанавливаем привилегированный режим
	УстановитьПривилегированныйРежим(Истина);
	
	ПрефиксИнформационнойБазы = ПолучитьФункциональнуюОпцию("ПрефиксИнформационнойБазы");
	СтроковыеФункцииКлиентСервер.ДополнитьСтроку(ПрефиксИнформационнойБазы, 2, "0", "Слева");

	ПрефиксОрганизации = ПолучитьФункциональнуюОпцию("ПрефиксыОрганизаций", Новый Структура("Организация", Организация));
	
	// если задана пустая ссылка на организацию
	Если ПрефиксОрганизации = Ложь Тогда
		
		ПрефиксОрганизации = "";
		
	КонецЕсли;
	
	СтроковыеФункцииКлиентСервер.ДополнитьСтроку(ПрефиксОрганизации, 2, "0", "Слева");
	
	ОсновнойПрефикс = ПрефиксОрганизации + ПрефиксИнформационнойБазы;
	
	Разделитель = ?(ПустаяСтрока(ОсновнойПрефикс), "", "-");
	
	Префикс = ОсновнойПрефикс + Разделитель + Префикс;
	
	// если префикс не задан, то устанавливаем значение по умолчанию
	Если ПустаяСтрока(Префикс) Тогда
		
		Префикс = "0";
		
	КонецЕсли;
	
	Возврат Префикс;
	
КонецФункции

// Формирование заголовка документа.
//
// Параметры:
// Документ - ДокументСсылка.ВводОстатков
// НомерДокумента - Строка - Номер документа ВводОстатков
// ДатаДокумента - Дата - Дата документа ВводОстатков
// ТипОперации - ПеречислениеСсылка.ТипыОперацийВводаОстатков - Тип операции документа ВводОстатков
//
// Возвращаемое значение:
//  Строка - строковое значение заголовка документа.
//
Функция ЗаголовокДокументаПоТипуОперации(Документ, НомерДокумента, ДатаДокумента, ТипОперации) Экспорт
	
	Возврат ОбщегоНазначенияУТВызовСервера.ЗаголовокДокументаВводОстатковПоТипуОперации(Документ,
																														  НомерДокумента,
																														  ДатаДокумента,
																														  ТипОперации);
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Задание на размещение товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров";
	КомандаПечати.Идентификатор = "ЗаданиеНаОтборРазмещениеТовара";
	КомандаПечати.Представление = НСтр("ru = 'Задание на размещение товаров'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ИмяФормы", "ЗаданиеНаРазмещение");
	КомандаПечати.ФункциональныеОпции = "ИспользоватьАдресноеХранениеСправочно";
	
	// МХ-1 
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "МХ1";
	КомандаПечати.Представление = НСтр("ru='Акт о приеме-передаче ТМЦ на хранение (МХ-1)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ИспользоватьОтветственноеХранение";
	
КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВводОстатков.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ВводОстатков.Ссылка) КАК СсылкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ВводОстатков.Склад) КАК СкладПредставление,
	|	ВводОстатков.Склад КАК Склад,
	|	ПРЕДСТАВЛЕНИЕ(ВводОстатков.Помещение) КАК ПомещениеПредставление,
	|	ВводОстатков.Дата КАК Дата,
	|	ВводОстатков.Номер КАК Номер,
	|	ЛОЖЬ КАК НарушенаОрдернаяСхема,
	|	ВЫБОР
	|		КОГДА ВводОстатков.Склад.ИспользоватьСкладскиеПомещения
	|				И ВводОстатков.Дата >= ВводОстатков.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ВЫБОР
	|					КОГДА ВводОстатков.Помещение.ИспользоватьАдресноеХранениеСправочно
	|							И (НЕ ВводОстатков.Помещение.ИспользоватьАдресноеХранение
	|								ИЛИ ВводОстатков.Дата < ВводОстатков.Помещение.ДатаНачалаАдресногоХраненияОстатков)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВводОстатков.Склад.ИспользоватьАдресноеХранениеСправочно
	|						И (НЕ ВводОстатков.Склад.ИспользоватьАдресноеХранение
	|							ИЛИ ВводОстатков.Дата < ВводОстатков.Склад.ДатаНачалаАдресногоХраненияОстатков)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ КАК ИспользуетсяСправочноеХранение,
	|	ВЫБОР
	|		КОГДА ВводОстатков.Склад.ИспользоватьСкладскиеПомещения
	|				И ВводОстатков.Дата >= ВводОстатков.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ВводОстатков.Помещение.ИспользованиеРабочихУчастков
	|		ИНАЧЕ ВводОстатков.Склад.ИспользованиеРабочихУчастков
	|	КОНЕЦ КАК ИспользованиеРабочихУчастков,
	|	NULL КАК ВидОперации,
	|	ВводОстатков.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры
	|ИЗ
	|	Документ.ВводОстатков КАК ВводОстатков
	|ГДЕ
	|	ВводОстатков.Ссылка В(&МассивОбъектов)
	|	И (ВводОстатков.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ ВводОстатков.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ ВводОстатков.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок КАК НаборУпаковок,
	|	ТаблицаТовары.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Количество КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8, 10)
	|	И (ТаблицаТовары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|			ИЛИ ТаблицаТовары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|			ИЛИ ТаблицаТовары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ВЫРАЗИТЬ(ТаблицаСерии.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	ТаблицаСерии.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.Количество
	|ИЗ
	|	Документ.ВводОстатков.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.Номенклатура.ЕдиницаИзмерения,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.Номенклатура.Код КАК Код,
	|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка) КАК ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.Код, """") КАК ОсновнаяЯчейкаПредставление,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.Код, """") КАК ЯчейкаПредставление,
	|	ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий КАК НастройкаИспользованияСерий
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТовары.Ссылка.Помещение
	|				ИНАЧЕ РазмещениеОсновнаяЯчейка.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТовары.Ссылка.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОстальныеЯчейки.Помещение = ТаблицаТовары.Ссылка.Помещение
	|				ИНАЧЕ РазмещениеОстальныеЯчейки.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоВУпаковке,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Представление, ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (ТаблицаТовары.Номенклатура = УпаковкиНоменклатуры.Владелец
	|				ИЛИ ТаблицаТовары.НаборУпаковок = УпаковкиНоменклатуры.Владелец)
	|			И (НЕ УпаковкиНоменклатуры.ПометкаУдаления)
	|			И ТаблицаТовары.Количество >= &ТекстЗапросаКоэффициентУпаковки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТовары.Ссылка.Помещение
	|				ИНАЧЕ РазмещениеОсновнаяЯчейка.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	КоличествоВУпаковке УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	NULL КАК ПредставлениеСерии,
	|	ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка) КАК РабочийУчасток
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"УпаковкиНоменклатуры",
		"ТаблицаТовары.Номенклатура"));
		
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов); 
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати = Новый Структура();
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", МассивРезультатов[0]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", МассивРезультатов[2]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоУпаковкам", МассивРезультатов[3]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоСериям", МассивРезультатов[4]);
	
	Возврат СтруктураДанныхДляПечати;
КонецФункции

// Функция получает данные для формирования печатной формы МХ - 1
//
Функция ПолучитьДанныеДляПечатнойФормыМХ1(ПараметрыПечати, МассивОбъектов) Экспорт 
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Организация КАК Организация,
	|	Документ.Склад КАК Склад,
	|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	Документ.ВводОстатков КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (Документ.Организация = РасчетСебестоимостиТоваровОрганизации.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (Документ.Склад = Склады.Ссылка)
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)
	|	И Документ.Проведен
	|	И Склады.СкладОтветственногоХранения
	|	И Документ.Организация <> Склады.Поклажедержатель
	|	И (Документ.ТипОперации В (ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)))
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения1 КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения1 КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения1 КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	Аналитика.Склад КАК Склад,
	|	ВидыЗапасов.Упаковка КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения2 КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения2 КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения2 КАК ВидУпаковки,
	|	ВидыЗапасов.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Аналитика.Склад.УчетныйВидЦены КАК ВидЦены,
	|	Аналитика.Склад.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.АналитикаУчетаНоменклатуры.Склад = Шапка.Склад
	|			И ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Аналитика.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Аналитика.Склад.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "Товары.Упаковка", "Товары.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "Товары.Упаковка", "Товары.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "ВидыЗапасов.Упаковка", "Аналитика.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "ВидыЗапасов.Упаковка", "Аналитика.Номенклатура"));
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",
		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[6];
	РезультатПоСкладам = МассивРезультатов[7];
	РезультатПоТабличнойЧасти = МассивРезультатов[8];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоСкладам, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоСкладам,
		РезультатПоТабличнойЧасти);
		
	Возврат СтруктураДанныхДляПечати
	
КонецФункции

#КонецОбласти

#Область Серии

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийСклад(ПараметрыУказанияСерий)

	Если ПараметрыУказанияСерий.ПоляСвязи.Найти("Упаковка") <> Неопределено Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Назначение,
		|	Товары.Упаковка КАК Упаковка,
		|	Товары.Серия,
		|	Товары.КоличествоУпаковок КАК Количество,
		|	Товары.НомерСтроки,
		|	Товары.СтатусУказанияСерий
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Серии.Номенклатура,
		|	Серии.Характеристика,
		|	Серии.Назначение,
		|	Серии.Упаковка КАК Упаковка,
		|	Серии.КоличествоУпаковок КАК Количество
		|ПОМЕСТИТЬ Серии
		|ИЗ
		|	&Серии КАК Серии";
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Назначение,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	Товары.Серия,
		|	Товары.Количество,
		|	Товары.НомерСтроки,
		|	Товары.СтатусУказанияСерий
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Серии.Номенклатура,
		|	Серии.Характеристика,
		|	Серии.Назначение,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	Серии.Количество
		|ПОМЕСТИТЬ Серии
		|ИЗ
		|	&Серии КАК Серии";
	КонецЕсли;	
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Упаковка,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Упаковка,
	|	Товары.Характеристика,
	|	Товары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Упаковка,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Упаковка,
	|	Серии.Характеристика,
	|	Серии.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	ВЫБОР
	|		КОГДА НЕ ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|						ТОГДА ВЫБОР
	|								КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|									ТОГДА 14
	|								ИНАЧЕ 13
	|							КОНЕЦ
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 10
	|								ИНАЧЕ 9
	|							КОНЕЦ
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 8
	|								ИНАЧЕ 7
	|							КОНЕЦ
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|							И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.ТипПолитики = ЗНАЧЕНИЕ(Перечисление.ТипыПолитикУказанияСерий.АвторасчетПоFEFOОстатковСерий)
	|                          И НЕ &ТолькоСерииСУчетомОстатков
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 2
	|								ИНАЧЕ 1
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.Упаковка = СерииДляЗапроса.Упаковка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Упаковка = ТоварыДляЗапроса.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтатусУказанияСерийСтарый <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

//++ НЕ УТ

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийПроизводство()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.НомерСтроки,
	|	Товары.СтатусУказанияСерий
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Упаковка,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Упаковка,
	|	Товары.Характеристика,
	|	Товары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Упаковка,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Упаковка,
	|	Серии.Характеристика,
	|	Серии.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|								И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПолученииМатериалов
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|								И ТоварыДляЗапроса.Количество > 0
	|							ИЛИ Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА ВЫБОР
	|								КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|									ТОГДА 4
	|								ИНАЧЕ 2
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|								ТОГДА 3
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.Упаковка = СерииДляЗапроса.Упаковка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Упаковка = ТоварыДляЗапроса.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтатусУказанияСерийСтарый <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

//-- НЕ УТ

#КонецОбласти

//++ НЕ УТ

#Область ЗаполнениеПоДаннымОперУчетаИнтерфейс

Процедура ВвестиНачОстаткиРеглУчетаПоДаннымОперативного(Параметры, АдресХранилища) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") ИЛИ Не ЗначениеЗаполнено(Параметры.ДатаВвода) Тогда
		Возврат;
	КонецЕсли;
	
	МассивСозданныхДокументов = Новый Массив;
	
	МассивТиповОпераций = Неопределено;
	Параметры.Свойство("ТипыОпераций", МассивТиповОпераций);
	
	МассивОрганизаций = Новый Массив;
	Если Не Параметры.Свойство("Организации", МассивОрганизаций) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Организации.Ссылка КАК Организация
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	НЕ Организации.ПометкаУдаления
		|	И (&МассивОрганизаций = НЕОПРЕДЕЛЕНО
		|			ИЛИ Организации.Ссылка В (&МассивОрганизаций))
		|	И (Организации.Ссылка <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|			ИЛИ &УчитыватьУпрОрганизацию)";
		Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
		Запрос.УстановитьПараметр("УчитыватьУпрОрганизацию", ПолучитьФункциональнуюОпцию("ИспользоватьУправленческуюОрганизацию"));
		
		МассивОрганизаций = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация");
		
	КонецЕсли;
		
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям = Новый Соответствие;
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВКассах, "Кассы");
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах, "БанковскиеСчета");
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов, "РасчетыСПартнерами");
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками, "РасчетыСПартнерами");
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетников, "РасчетыСПодотчетниками");
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств, "РасчетыСПодотчетниками");
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов, "РасчетыСПартнерами");
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам, "РасчетыСПартнерами");
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам, "РасчетыМеждуОрганизациями");
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям, "РасчетыМеждуОрганизациями");
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров, "Товары");
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков, "Товары");
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию, "Товары");
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию, "Товары");
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам, "Товары");
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство, "Товары");
	СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов, "РасчетыПоДоговорамКредитовИДепозитов");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов") Тогда
		СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Вставить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПрочихРасходов, "ПрочиеРасходы");
	КонецЕсли;
		
	НомерПоПорядку = 0;
	ВсегоОбъектов = СоответствиеТиповОперацийЗаполняемымТабличнымЧастям.Количество();
	
	Для каждого ТипОперации из СоответствиеТиповОперацийЗаполняемымТабличнымЧастям Цикл
		
		НомерПоПорядку = НомерПоПорядку + 1;
		ПроцентВыполнения = Окр(100 * НомерПоПорядку / ВсегоОбъектов);
		ДлительныеОперации.СообщитьПрогресс(ПроцентВыполнения);		
		
		Остатки = ОстаткиПоТипуОперации(Параметры.ДатаВвода, ТипОперации.Ключ, МассивОрганизаций);
		ВыборкаОстатков = Остатки.Выбрать();
		ДокументВводаНачальныхОстатков = Неопределено;
		
		Пока ВыборкаОстатков.Следующий() Цикл
			
			Если КлючевыеПоляОтличаются(ДокументВводаНачальныхОстатков, ВыборкаОстатков) Тогда
				
				Если Не ДокументВводаНачальныхОстатков = Неопределено Тогда
					ДокументВводаНачальныхОстатков.Записать(РежимЗаписиДокумента.Запись);
					МассивСозданныхДокументов.Добавить(ДокументВводаНачальныхОстатков.Ссылка);
				КонецЕсли;
								
				ДокументВводаНачальныхОстатков = Документы.ВводОстатков.СоздатьДокумент();
				ЗаполнитьЗначенияСвойств(ДокументВводаНачальныхОстатков, ВыборкаОстатков);
				ДокументВводаНачальныхОстатков.Дата = Параметры.ДатаВвода;
				ДокументВводаНачальныхОстатков.Ответственный = Пользователи.ТекущийПользователь();
				ДокументВводаНачальныхОстатков.РазделУчета = Перечисления.РазделыВводаНачальныхОстатков.РегламентированныйУчет;
				ДокументВводаНачальныхОстатков.Комментарий = НСтр("ru = '#Ввод остатков регл. учета по данным опер. учета.'");
				
				Если ТипОперации.Ключ = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПрочихРасходов Тогда
					ДокументВводаНачальныхОстатков.НалогообложениеНДС = Справочники.Организации.НалогообложениеНДС(
						ДокументВводаНачальныхОстатков.Организация, , ДокументВводаНачальныхОстатков.Дата);
				КонецЕсли;
					
				ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(ДокументВводаНачальныхОстатков.Партнер, ДокументВводаНачальныхОстатков.Контрагент);	
									
				ЗаполняемаяТабличнаяЧасть = ДокументВводаНачальныхОстатков[ТипОперации.Значение];
				
			КонецЕсли;
			
			Стр = ЗаполняемаяТабличнаяЧасть.Добавить();
			ЗаполнитьЗначенияСвойств(Стр, ВыборкаОстатков);
			
		КонецЦикла;
		
		Если Не ДокументВводаНачальныхОстатков = Неопределено Тогда
			ДокументВводаНачальныхОстатков.Записать(РежимЗаписиДокумента.Запись);
			МассивСозданныхДокументов.Добавить(ДокументВводаНачальныхОстатков.Ссылка);
		КонецЕсли;
			
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(МассивСозданныхДокументов, АдресХранилища);
	
КонецПроцедуры

Функция ОстаткиПоТипуОперации(Дата, ТипОперации, МассивОрганизаций, ДополнительныйОтбор = Неопределено) Экспорт
	
	ДатаОстатков = Новый Граница(Дата, ВидГраницы.Включая);
	
	Если ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВКассах Тогда
		
		Возврат ОстаткиПоКассам(ДатаОстатков, МассивОрганизаций);
	ИначеЕсли ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах Тогда
		
		Возврат ОстаткиПоБанковскимСчетам(ДатаОстатков, МассивОрганизаций);
	ИначеЕсли ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам Тогда
		
		Возврат ОстаткиПоРасчетамСПартнерами(ДатаОстатков, ТипОперации, МассивОрганизаций);
	ИначеЕсли ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям Тогда
		
		Возврат ОстаткиПоРасчетамМеждуОрганизациями(ДатаОстатков, ТипОперации, МассивОрганизаций, ДополнительныйОтбор);
	ИначеЕсли ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство Тогда
		
		Возврат ОстаткиПоТоварам(ДатаОстатков, ТипОперации, МассивОрганизаций, ДополнительныйОтбор);
	ИначеЕсли ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетников
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств Тогда
		
		Возврат ОстаткиПоРасчетамСПодотчетниками(ДатаОстатков, ТипОперации, МассивОрганизаций, ДополнительныйОтбор);
	ИначеЕсли ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов Тогда
		
		Возврат ОстаткиПоРасчетамПоДоговорамКредитовИДепозитов(ДатаОстатков, МассивОрганизаций);
	ИначеЕсли ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПрочихРасходов Тогда
		
		Возврат ОстаткиПоПрочимРасходам(ДатаОстатков, МассивОрганизаций, ДополнительныйОтбор);
	КонецЕсли;
	
КонецФункции

Функция КлючевыеПоляРеглУчетаПоТипуОперации(ТипОперации) Экспорт
	
	МассивКлючевыхПолей = Новый Массив;
	МассивКлючевыхПолей.Добавить("Организация");
	
	Если ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоАвансам
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям Тогда		
			МассивКлючевыхПолей.Добавить("ОрганизацияПолучатель");
	КонецЕсли;
		
	Если ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков Тогда		
			МассивКлючевыхПолей.Добавить("Склад");
	КонецЕсли;

	Если ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам Тогда
			МассивКлючевыхПолей.Добавить("НалогообложениеНДС");
	КонецЕсли;
	
	Если ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам Тогда		
			МассивКлючевыхПолей.Добавить("Партнер");
	КонецЕсли;
	
	Если ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПодотчетников
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПрочихРасходов Тогда		
		МассивКлючевыхПолей.Добавить("Подразделение");
	КонецЕсли;
	
	Возврат МассивКлючевыхПолей;
	
КонецФункции

Функция ТипыОперацийНеОтражаемыеВРеглУчете() Экспорт
	
	МассивВозврата = Новый Массив;
	МассивВозврата.Добавить(Перечисления.ТипыОперацийВводаОстатков.РозничныеПродажиЗаПрошлыеПериоды);
	МассивВозврата.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОптовыеПродажиЗаПрошлыеПериоды);
	МассивВозврата.Добавить(Перечисления.ТипыОперацийВводаОстатков.ФинансовыйРезультатЗаПрошлыеПериоды);
	МассивВозврата.Добавить(Перечисления.ТипыОперацийВводаОстатков.ОстаткиПрочихАктивовПассивов);
	
	Возврат МассивВозврата;
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеПоДаннымОперУчета

Функция КлючевыеПоляОтличаются(ДокументВводаНачальныхОстатков, ВыборкаОстатков)
	
	Если ДокументВводаНачальныхОстатков = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	МассивПолейСравнения = КлючевыеПоляРеглУчетаПоТипуОперации(ВыборкаОстатков.ТипОперации);
	
	Для каждого ПолеСравнения из МассивПолейСравнения Цикл
		Если Не ДокументВводаНачальныхОстатков[ПолеСравнения] = ВыборкаОстатков[ПолеСравнения] Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ОстаткиПоКассам(ДатаОстатков, МассивОрганизаций)
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДенежныеСредстваНаличныеОстатки.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВКассах) КАК ТипОперации,
	|	ДенежныеСредстваНаличныеОстатки.Касса,
	|	СУММА(ДенежныеСредстваНаличныеОстатки.СуммаОстаток) КАК Сумма,
	|	СУММА(ДенежныеСредстваНаличныеОстатки.СуммаРеглОстаток) КАК СуммаРегл
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные.Остатки(&Дата, Организация В (&МассивОрганизаций)) КАК ДенежныеСредстваНаличныеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ДенежныеСредстваНаличныеОстатки.Организация,
	|	ДенежныеСредстваНаличныеОстатки.Касса
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация";
	
	Запрос.Параметры.Вставить("МассивОрганизаций", МассивОрганизаций);
	Запрос.Параметры.Вставить("Дата", ДатаОстатков);
	
	Запрос.Выполнить();
	
	Возврат Запрос.Результат;
	
КонецФункции

Функция ОстаткиПоБанковскимСчетам(ДатаОстатков, МассивОрганизаций)
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДенежныеСредстваБезналичныеОстатки.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиНаБанковскихСчетах) КАК ТипОперации,
	|	ДенежныеСредстваБезналичныеОстатки.БанковскийСчет,
	|	СУММА(ДенежныеСредстваБезналичныеОстатки.СуммаОстаток) КАК Сумма,
	|	СУММА(ДенежныеСредстваБезналичныеОстатки.СуммаРеглОстаток) КАК СуммаРегл
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные.Остатки(&Дата, Организация В (&МассивОрганизаций)) КАК ДенежныеСредстваБезналичныеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ДенежныеСредстваБезналичныеОстатки.Организация,
	|	ДенежныеСредстваБезналичныеОстатки.БанковскийСчет
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация";
	
	Запрос.Параметры.Вставить("МассивОрганизаций", МассивОрганизаций);
	Запрос.Параметры.Вставить("Дата", ДатаОстатков);
	
	Запрос.Выполнить();
	
	Возврат Запрос.Результат;
	
КонецФункции

Функция ОстаткиПоРасчетамСПартнерами(ДатаОстатков, ТипОперации, МассивОрганизаций)
	
	Если ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов
		ИЛИ ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов Тогда
		АктуализироватьРасчетыСПартнерами(ДатаОстатков, МассивОрганизаций, "РасчетыСКлиентами");
	Иначе
		АктуализироватьРасчетыСПартнерами(ДатаОстатков, МассивОрганизаций, "РасчетыСПоставщиками");
	КонецЕсли;
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеАналитики.Партнер,
	|	ДанныеАналитики.Контрагент,
	|	ДанныеАналитики.Организация КАК Организация,
	|	&ТипОперации КАК ТипОперации,
	|	ДанныеАналитики.Договор,
	|	ДанныеАналитики.НаправлениеДеятельности,
	|	ДанныеПоОстаткам.ЗаказКлиента КАК РасчетныйДокумент,
	|	ДанныеПоОстаткам.Валюта КАК ВалютаВзаиморасчетов,
	|	СУММА(ВЫБОР
	|			КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов)
	|				ТОГДА ДанныеПоОстаткам.ДолгОстаток
	|			ИНАЧЕ -ДанныеПоОстаткам.ПредоплатаОстаток
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов)
	|				ТОГДА ДанныеПоОстаткам.ДолгРеглОстаток
	|			ИНАЧЕ -ДанныеПоОстаткам.ПредоплатаРеглОстаток
	|		КОНЕЦ) КАК СуммаРегл
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам.Остатки(
	|			&Дата,
	|			&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов)
	|				ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамКлиентов)) КАК ДанныеПоОстаткам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК ДанныеАналитики
	|		ПО ДанныеПоОстаткам.АналитикаУчетаПоПартнерам = ДанныеАналитики.КлючАналитики
	|			И (ДанныеАналитики.Организация В (&МассивОрганизаций))
	|			И (ДанныеАналитики.Контрагент ССЫЛКА Справочник.Контрагенты)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиКлиентов)
	|				ТОГДА ДанныеПоОстаткам.ДолгОстаток
	|			ИНАЧЕ -ДанныеПоОстаткам.ПредоплатаОстаток
	|		КОНЕЦ > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПоОстаткам.Валюта,
	|	ДанныеПоОстаткам.ЗаказКлиента,
	|	ДанныеАналитики.НаправлениеДеятельности,
	|	ДанныеАналитики.Контрагент,
	|	ДанныеАналитики.Договор,
	|	ДанныеАналитики.Организация,
	|	ДанныеАналитики.Партнер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеАналитики.Партнер,
	|	ДанныеАналитики.Контрагент,
	|	ДанныеАналитики.Организация,
	|	&ТипОперации,
	|	ДанныеАналитики.Договор,
	|	ДанныеАналитики.НаправлениеДеятельности,
	|	ДанныеПоОстаткам.ЗаказПоставщику,
	|	ДанныеПоОстаткам.Валюта,
	|	СУММА(ВЫБОР
	|			КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками)
	|				ТОГДА -ДанныеПоОстаткам.ДолгОстаток
	|			ИНАЧЕ ДанныеПоОстаткам.ПредоплатаОстаток
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками)
	|				ТОГДА -ДанныеПоОстаткам.ДолгРеглОстаток
	|			ИНАЧЕ ДанныеПоОстаткам.ПредоплатаРеглОстаток
	|		КОНЕЦ)
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам.Остатки(
	|			&Дата,
	|			&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками)
	|				ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоАвансамПоставщикам)) КАК ДанныеПоОстаткам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК ДанныеАналитики
	|		ПО ДанныеПоОстаткам.АналитикаУчетаПоПартнерам = ДанныеАналитики.КлючАналитики
	|			И (ДанныеАналитики.Организация В (&МассивОрганизаций))
	|			И (ДанныеАналитики.Контрагент ССЫЛКА Справочник.Контрагенты)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиЗадолженностиПередПоставщиками)
	|				ТОГДА -ДанныеПоОстаткам.ДолгОстаток
	|			ИНАЧЕ ДанныеПоОстаткам.ПредоплатаОстаток
	|		КОНЕЦ > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеАналитики.Партнер,
	|	ДанныеАналитики.Организация,
	|	ДанныеАналитики.Контрагент,
	|	ДанныеАналитики.Договор,
	|	ДанныеАналитики.НаправлениеДеятельности,
	|	ДанныеПоОстаткам.ЗаказПоставщику,
	|	ДанныеПоОстаткам.Валюта
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация";
	
	Запрос.Параметры.Вставить("МассивОрганизаций", МассивОрганизаций);
	Запрос.Параметры.Вставить("ТипОперации", ТипОперации);
	Запрос.Параметры.Вставить("Дата", ДатаОстатков);
	
	Запрос.Выполнить();
	
	Возврат Запрос.Результат;
	
КонецФункции

Функция ОстаткиПоРасчетамСПодотчетниками(ДатаОстатков, ТипОперации, МассивОрганизаций, ДопОтбор)
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.Организация КАК Организация,
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.Подразделение КАК Подразделение,
	|	&ТипОперации КАК ТипОперации,
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.ПодотчетноеЛицо,
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.ЦельВыдачи КАК СтатьяДвиженияДенежныхСредств,
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.Валюта,
	|	&Коэффициент * ДенежныеСредстваУПодотчетныхЛицОстатки.СуммаОстаток КАК Сумма,
	|	&Коэффициент * ДенежныеСредстваУПодотчетныхЛицОстатки.СуммаРеглОстаток КАК СуммаРегл
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц.Остатки(&Дата, Организация В (&МассивОрганизаций)) КАК ДенежныеСредстваУПодотчетныхЛицОстатки
	|ГДЕ
	|	&Коэффициент * ДенежныеСредстваУПодотчетныхЛицОстатки.СуммаОстаток > 0
	|{ГДЕ
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.Подразделение.*}
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Подразделение";
	
	Запрос.Параметры.Вставить("МассивОрганизаций", МассивОрганизаций);
	Запрос.Параметры.Вставить("ТипОперации", ТипОперации);
	Запрос.Параметры.Вставить("Коэффициент", ?(ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ПерерасходыПодотчетныхСредств, -1, 1));
	Запрос.Параметры.Вставить("Дата", ДатаОстатков);
	
	Если Не ДопОтбор = Неопределено Тогда
		Для каждого УсловиеОтбора из ДопОтбор Цикл
			ТекущийОтбор = Запрос.Отбор.Добавить(УсловиеОтбора.Ключ);
			ТекущийОтбор.ВидСравнения = ВидСравнения.Равно;
			ТекущийОтбор.Значение = УсловиеОтбора.Значение;
			ТекущийОтбор.Использование = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Возврат Запрос.Результат;
	
КонецФункции

Функция ОстаткиПоРасчетамМеждуОрганизациями(ДатаОстатков, ТипОперации, МассивОрганизаций, ДопОтбор)
	
	АктуализироватьРасчетыСПартнерами(ДатаОстатков, МассивОрганизаций, "РасчетыСКлиентами");
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеАналитики.Партнер,
	|	ДанныеАналитики.Контрагент КАК ОрганизацияПолучатель,
	|	ДанныеАналитики.Организация КАК Организация,
	|	&ТипОперации КАК ТипОперации,
	|	ДанныеАналитики.Договор,
	|	ДанныеАналитики.НаправлениеДеятельности,
	|	ДанныеПоОстаткам.ЗаказКлиента КАК РасчетныйДокумент,
	|	ДанныеПоОстаткам.Валюта КАК ВалютаВзаиморасчетов,
	|	СУММА(ВЫБОР
	|			КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|				ТОГДА ДанныеПоОстаткам.ДолгОстаток
	|			ИНАЧЕ -ДанныеПоОстаткам.ПредоплатаОстаток
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|				ТОГДА ДанныеПоОстаткам.ДолгРеглОстаток
	|			ИНАЧЕ -ДанныеПоОстаткам.ПредоплатаРеглОстаток
	|		КОНЕЦ) КАК СуммаРегл
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам.Остатки(&Дата, ) КАК ДанныеПоОстаткам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК ДанныеАналитики
	|		ПО ДанныеПоОстаткам.АналитикаУчетаПоПартнерам = ДанныеАналитики.КлючАналитики
	|			И (ДанныеАналитики.Организация В (&МассивОрганизаций))
	|			И (ДанныеАналитики.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие))
	|			И (ДанныеАналитики.Контрагент ССЫЛКА Справочник.Организации)
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиРасчетовМеждуОрганизациямиПоРеализациям)
	|				ТОГДА ДанныеПоОстаткам.ДолгОстаток
	|			ИНАЧЕ -ДанныеПоОстаткам.ПредоплатаОстаток
	|		КОНЕЦ > 0
	|{ГДЕ
	|	ДанныеАналитики.Контрагент.* КАК ОрганизацияПолучатель}
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеПоОстаткам.Валюта,
	|	ДанныеПоОстаткам.ЗаказКлиента,
	|	ДанныеАналитики.НаправлениеДеятельности,
	|	ДанныеАналитики.Контрагент,
	|	ДанныеАналитики.Договор,
	|	ДанныеАналитики.Организация,
	|	ДанныеАналитики.Партнер
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ОрганизацияПолучатель";
	
	Запрос.Параметры.Вставить("МассивОрганизаций", МассивОрганизаций);
	Запрос.Параметры.Вставить("ТипОперации", ТипОперации);
	Запрос.Параметры.Вставить("Дата", ДатаОстатков);
	
	Если Не ДопОтбор = Неопределено Тогда
		Для каждого УсловиеОтбора из ДопОтбор Цикл
			ТекущийОтбор = Запрос.Отбор.Добавить(УсловиеОтбора.Ключ);
			ТекущийОтбор.ВидСравнения = ВидСравнения.Равно;
			ТекущийОтбор.Значение = УсловиеОтбора.Значение;
			ТекущийОтбор.Использование = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Возврат Запрос.Результат;
	
КонецФункции

Функция ОстаткиПоТоварам(ДатаОстатков, ТипОперации, МассивОрганизаций, ДопОтбор)
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация,
	|	ВЫБОР
	|		КОГДА НЕ УчетнаяПолитикаОрганизацийСрезПоследних.ПрименяетсяУСН
	|				И УчетныеПолитикиОрганизаций.ПрименяетсяУчетНДСПоФактическомуИспользованию
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|		КОГДА УчетнаяПолитикаОрганизацийСрезПоследних.ПрименяетсяУСН
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ КАК НалогообложениеНДС
	|ПОМЕСТИТЬ НалогообложенияОрганизаций
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Дата, Организация В (&МассивОрганизаций)) КАК УчетнаяПолитикаОрганизацийСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитикиОрганизаций КАК УчетныеПолитикиОрганизаций
	|		ПО УчетнаяПолитикаОрганизацийСрезПоследних.УчетнаяПолитика = УчетныеПолитикиОрганизаций.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеАналитики.Номенклатура,
	|	ДанныеАналитики.Характеристика,
	|	ДанныеАналитики.Серия,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеАналитики.Склад КАК Справочник.Склады), ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК Склад,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеАналитики.Склад КАК Справочник.Партнеры), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)) КАК Партнер,
	|	СебестоимостьТоваровОстатки.ВидЗапасов,
	|	СебестоимостьТоваровОстатки.АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваровОстатки.КоличествоОстаток КАК Количество,
	|	СебестоимостьТоваровОстатки.СтоимостьОстаток + СебестоимостьТоваровОстатки.СуммаДопРасходовОстаток КАК Сумма,
	|	СебестоимостьТоваровОстатки.СтоимостьБезНДСОстаток + СебестоимостьТоваровОстатки.СуммаДопРасходовБезНДСОстаток КАК СуммаБезНДС,
	|	СебестоимостьТоваровОстатки.Организация КАК Организация,
	|	СебестоимостьТоваровОстатки.СтоимостьРеглОстаток КАК СуммаРегл,
	|	СебестоимостьТоваровОстатки.ПостояннаяРазницаОстаток КАК СуммаПР,
	|	СебестоимостьТоваровОстатки.ВременнаяРазницаОстаток КАК СуммаВР,
	|	&ТипОперации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СебестоимостьТоваровОстатки.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА НалогообложенияОрганизаций.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					КОГДА НЕ ПримененияЕНВДСрезПоследних.Склад ЕСТЬ NULL 
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|					ИНАЧЕ НалогообложенияОрганизаций.НалогообложениеНДС
	|				КОНЕЦ
	|		ИНАЧЕ СебестоимостьТоваровОстатки.ВидЗапасов.НалогообложениеНДС
	|	КОНЕЦ КАК НалогообложениеНДС,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеАналитики.Склад КАК Справочник.СтруктураПредприятия), СебестоимостьТоваровОстатки.ВидЗапасов.Подразделение) КАК Подразделение,
	|	ДанныеАналитики.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	СебестоимостьТоваровОстатки.КоличествоОстаток КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА СебестоимостьТоваровОстатки.КоличествоОстаток = 0
	|			ТОГДА СебестоимостьТоваровОстатки.СтоимостьОстаток
	|		ИНАЧЕ СебестоимостьТоваровОстатки.СтоимостьОстаток / СебестоимостьТоваровОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Цена,
	|	ВЫБОР
	|		КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|				И &АналитическийУчетПоГруппамПродукции
	|			ТОГДА СебестоимостьТоваровОстатки.ВидЗапасов.ГруппаПродукции
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК ГруппаПродукции,
	|	СебестоимостьТоваровОстатки.СтоимостьОстаток + СебестоимостьТоваровОстатки.СуммаДопРасходовОстаток - (СебестоимостьТоваровОстатки.СтоимостьБезНДСОстаток + СебестоимостьТоваровОстатки.СуммаДопРасходовБезНДСОстаток) КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА СебестоимостьТоваровОстатки.СтоимостьБезНДСОстаток + СебестоимостьТоваровОстатки.СуммаДопРасходовБезНДСОстаток = СебестоимостьТоваровОстатки.СтоимостьРеглОстаток
	|			ТОГДА СебестоимостьТоваровОстатки.СтоимостьОстаток + СебестоимостьТоваровОстатки.СуммаДопРасходовОстаток - (СебестоимостьТоваровОстатки.СтоимостьБезНДСОстаток + СебестоимостьТоваровОстатки.СуммаДопРасходовБезНДСОстаток)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСРегл,
	|	ИСТИНА КАК ЦенаВключаетНДС
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(&Дата, Организация В (&МассивОрганизаций)) КАК СебестоимостьТоваровОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК ДанныеАналитики
	|		ПО СебестоимостьТоваровОстатки.АналитикаУчетаНоменклатуры = ДанныеАналитики.КлючАналитики
	|			И (ВЫБОР
	|				КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков)
	|					ТОГДА ДанныеАналитики.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|				ИНАЧЕ НЕ ДанныеАналитики.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию)
	|					ТОГДА СебестоимостьТоваровОстатки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|							ИЛИ СебестоимостьТоваровОстатки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|								И ДанныеАналитики.Склад ССЫЛКА Справочник.Партнеры
	|				КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию)
	|					ТОГДА СебестоимостьТоваровОстатки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|							И ДанныеАналитики.Склад ССЫЛКА Справочник.Склады
	|				ИНАЧЕ СебестоимостьТоваровОстатки.РазделУчета = ВЫБОР
	|						КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|						КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|					КОНЕЦ
	|			КОНЕЦ)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НалогообложенияОрганизаций КАК НалогообложенияОрганизаций
	|		ПО СебестоимостьТоваровОстатки.Организация = НалогообложенияОрганизаций.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПримененияЕНВД.СрезПоследних(&Дата, Организация В (&МассивОрганизаций)) КАК ПримененияЕНВДСрезПоследних
	|		ПО СебестоимостьТоваровОстатки.Организация = ПримененияЕНВДСрезПоследних.Организация
	|			И ((ВЫРАЗИТЬ(СебестоимостьТоваровОстатки.АналитикаУчетаНоменклатуры.Склад КАК Справочник.Склады)) = ПримененияЕНВДСрезПоследних.Склад)
	|ГДЕ
	|	СебестоимостьТоваровОстатки.КоличествоОстаток > 0
	|{ГДЕ
	|	(ВЫБОР
	|			КОГДА ЕСТЬNULL(СебестоимостьТоваровОстатки.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|				ТОГДА ВЫБОР
	|						КОГДА НалогообложенияОрганизаций.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						КОГДА НЕ ПримененияЕНВДСрезПоследних.Склад ЕСТЬ NULL 
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|						ИНАЧЕ НалогообложенияОрганизаций.НалогообложениеНДС
	|					КОНЕЦ
	|			ИНАЧЕ СебестоимостьТоваровОстатки.ВидЗапасов.НалогообложениеНДС
	|		КОНЕЦ).* КАК НалогообложениеНДС,
	|	(ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеАналитики.Склад КАК Справочник.СтруктураПредприятия), СебестоимостьТоваровОстатки.ВидЗапасов.Подразделение)).* КАК Подразделение,
	|	(ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеАналитики.Склад КАК Справочник.Склады), ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))).* КАК Склад,
	|	(ЕСТЬNULL(ВЫРАЗИТЬ(ДанныеАналитики.Склад КАК Справочник.Партнеры), ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))).* КАК Партнер}
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Склад,
	|	Партнер,
	|	НалогообложениеНДС,
	|	Подразделение";
	
	Запрос.Параметры.Вставить("МассивОрганизаций", МассивОрганизаций);
	Запрос.Параметры.Вставить("ТипОперации", ТипОперации);
	Запрос.Параметры.Вставить("Дата", ДатаОстатков);
	Запрос.Параметры.Вставить("АналитическийУчетПоГруппамПродукции", ПолучитьФункциональнуюОпцию("АналитическийУчетПоГруппамПродукции"));
	
	Если Не ДопОтбор = Неопределено Тогда
		Для каждого УсловиеОтбора из ДопОтбор Цикл
			ТекущийОтбор = Запрос.Отбор.Добавить(УсловиеОтбора.Ключ);
			ТекущийОтбор.ВидСравнения = ВидСравнения.Равно;
			ТекущийОтбор.Значение = УсловиеОтбора.Значение;
			ТекущийОтбор.Использование = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Возврат Запрос.Результат;
	
КонецФункции

Функция ОстаткиПоРасчетамПоДоговорамКредитовИДепозитов(ДатаОстатков, МассивОрганизаций)
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеАналитики.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПоДоговорамКредитовИДепозитов) КАК ТипОперации,
	|	ДанныеАналитики.Партнер,
	|	ДанныеАналитики.Контрагент,
	|	РасчетыПоДоговорамКредитовИДепозитовОстатки.Договор,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыПоДоговорамКредитовИДепозитовОстатки.Договор.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ * РасчетыПоДоговорамКредитовИДепозитовОстатки.СуммаВВалютеОстаток) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыПоДоговорамКредитовИДепозитовОстатки.Договор.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ * РасчетыПоДоговорамКредитовИДепозитовОстатки.СуммаРеглОстаток) КАК СуммаРегл,
	|	РасчетыПоДоговорамКредитовИДепозитовОстатки.ТипСуммы
	|ИЗ
	|	РегистрНакопления.РасчетыПоДоговорамКредитовИДепозитов.Остатки(&Дата, ) КАК РасчетыПоДоговорамКредитовИДепозитовОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК ДанныеАналитики
	|		ПО РасчетыПоДоговорамКредитовИДепозитовОстатки.АналитикаУчетаПоПартнерам = ДанныеАналитики.КлючАналитики
	|			И (ДанныеАналитики.Организация В (&МассивОрганизаций))
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеАналитики.Контрагент,
	|	РасчетыПоДоговорамКредитовИДепозитовОстатки.ТипСуммы,
	|	ДанныеАналитики.Организация,
	|	ДанныеАналитики.Партнер,
	|	РасчетыПоДоговорамКредитовИДепозитовОстатки.Договор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация";
	
	Запрос.Параметры.Вставить("МассивОрганизаций", МассивОрганизаций);
	Запрос.Параметры.Вставить("Дата", ДатаОстатков);
	
	Запрос.Выполнить();
	
	Возврат Запрос.Результат;
	
КонецФункции

Функция ОстаткиПоПрочимРасходам(ДатаОстатков, МассивОрганизаций, ДопОтбор)
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрочиеРасходыОстатки.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиПрочихРасходов) КАК ТипОперации,
	|	ПрочиеРасходыОстатки.Подразделение,
	|	ПрочиеРасходыОстатки.НаправлениеДеятельности,
	|	ПрочиеРасходыОстатки.СтатьяРасходов,
	|	ПрочиеРасходыОстатки.АналитикаРасходов,
	|	СУММА(ПрочиеРасходыОстатки.СуммаРеглОстаток) КАК СуммаРегл,
	|	СУММА(ПрочиеРасходыОстатки.ПостояннаяРазницаОстаток) КАК СуммаПР,
	|	СУММА(ПрочиеРасходыОстатки.ВременнаяРазницаОстаток) КАК СуммаВР,
	|	СУММА(ПрочиеРасходыОстатки.СуммаБезНДСОстаток) КАК СуммаБезНДС,
	|	СУММА(ПрочиеРасходыОстатки.СуммаОстаток) КАК Сумма
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.Остатки(&Дата, Организация В (&МассивОрганизаций)) КАК ПрочиеРасходыОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО ПрочиеРасходыОстатки.СтатьяРасходов = СтатьиРасходов.Ссылка
	|			И (НЕ СтатьиРасходов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|{ГДЕ
	|	ПрочиеРасходыОстатки.Подразделение.*}
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрочиеРасходыОстатки.Организация,
	|	ПрочиеРасходыОстатки.Подразделение,
	|	ПрочиеРасходыОстатки.НаправлениеДеятельности,
	|	ПрочиеРасходыОстатки.СтатьяРасходов,
	|	ПрочиеРасходыОстатки.АналитикаРасходов	
	|
	|ИМЕЮЩИЕ
	|	СУММА(ПрочиеРасходыОстатки.СуммаРеглОстаток) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация";
	
	Запрос.Параметры.Вставить("МассивОрганизаций", МассивОрганизаций);
	Запрос.Параметры.Вставить("Дата", ДатаОстатков);
	
	Если Не ДопОтбор = Неопределено Тогда
		Для каждого УсловиеОтбора из ДопОтбор Цикл
			ТекущийОтбор = Запрос.Отбор.Добавить(УсловиеОтбора.Ключ);
			ТекущийОтбор.ВидСравнения = ВидСравнения.Равно;
			ТекущийОтбор.Значение = УсловиеОтбора.Значение;
			ТекущийОтбор.Использование = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Выполнить();
	
	Возврат Запрос.Результат;
	
КонецФункции

Функция АктуализироватьРасчетыСПартнерами(Дата, МассивОрганизаций, ИмяОперативногоРегистра)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	АктуальныеОстатки.АналитикаУчетаПоПартнерам
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(&ДатаОстатков, АналитикаУчетаПоПартнерам.Организация В (&МассивОрганизаций)) КАК АктуальныеОстатки";
	
	Если ИмяОперативногоРегистра = "РасчетыСПоставщиками" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "РасчетыСКлиентами", ИмяОперативногоРегистра);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаОстатков", Дата);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	
	МассивАналитик = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
	Если МассивАналитик.Количество() > 0 Тогда
		Если ИмяОперативногоРегистра = "РасчетыСПоставщиками" Тогда
			АналитикиРасчета = РаспределениеВзаиморасчетов.АналитикиРасчета();
			АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитик;
			Попытка
				РаспределениеВзаиморасчетов.РаспределитьВсеРасчетыСПоставщиками(Дата.Значение, АналитикиРасчета);
			Исключение
				ТекстСообщения = НСтр("ru ='Печатная форма сформирована по неактуальным данным.
				|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецПопытки;
		Иначе
			АналитикиРасчета = РаспределениеВзаиморасчетов.АналитикиРасчета();
			АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитик;
			Попытка
				РаспределениеВзаиморасчетов.РаспределитьВсеРасчетыСКлиентами(Дата.Значение, АналитикиРасчета);
			Исключение
				ТекстСообщения = НСтр("ru ='Печатная форма сформирована по неактуальным данным.
				|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

//-- НЕ УТ

#Область ОбновлениеИнформационнойБазы

#Область Обработчики_11_3_1

// Регистрирует данные для обработчика обновления ОбработатьДанныеДляПереходаНаНовуюВерсию
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Товары.Ссылка КАК Ссылка
	|	ИЗ
	|		Документ.ВводОстатков.Товары КАК Товары
	|	ГДЕ
	|		Товары.АналитикаУчетаНоменклатуры.Назначение <> Товары.ВидЗапасов.УдалитьНазначение
	|		И Товары.ВидЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И Товары.Ссылка.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Продажи.Ссылка
	|	ИЗ
	|		Документ.ВводОстатков.ОптовыеПродажи КАК Продажи
	|	ГДЕ
	|		Продажи.АналитикаУчетаНоменклатуры.Назначение <> Продажи.ВидЗапасов.УдалитьНазначение
	|		И Продажи.ВидЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И Продажи.Ссылка.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Продажи.Ссылка
	|	ИЗ
	|		Документ.ВводОстатков.РозничныеПродажи КАК Продажи
	|	ГДЕ
	|		Продажи.АналитикаУчетаНоменклатуры.Назначение <> Продажи.ВидЗапасов.УдалитьНазначение
	|		И Продажи.ВидЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И Продажи.Ссылка.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВводОстатков.Ссылка
	|	ИЗ
	|		Документ.ВводОстатков КАК ВводОстатков
	|	ГДЕ
	|		ВводОстатков.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыВводаНачальныхОстатков.ПустаяСсылка)) КАК Товары
	|");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
КонецПроцедуры

// Обработчик обновления УТ 11.3.1:
// - переносит данные о назначении из вида запасов в аналитику учета номенклатуры;
// - заполняет новый реквизит РазделУчета значением по умолчанию.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяДокумента = "Документ.ВводОстатков";
	
	ИмяДокумента = СтрРазделить(ПолноеИмяДокумента,".")[1];
	МетаданныеДокумента = Метаданные.Документы.ВводОстатков;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяДокумента, МенеджерВременныхТаблиц);
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОбработке.Ссылка КАК Ссылка,
	|	КОбработке.Ссылка.ВерсияДанных КАК ВерсияДанных
	|ИЗ
	|	&ВТДокументыДляОбработки КАК КОбработке
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДокументыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									МетаданныеДокумента,
									Выборка.Ссылка,
									ТекстСообщения);
			Продолжить;
		КонецПопытки;
		
		ДокОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
		Если ДокОбъект = Неопределено Тогда
			ЗафиксироватьТранзакцию();
			Продолжить;
		КонецЕсли;
		
		ОбъектИзменен = Ложь;
		Если Не ЗначениеЗаполнено(ДокОбъект.РазделУчета) Тогда
			ДокОбъект.РазделУчета = Перечисления.РазделыВводаНачальныхОстатков.ОперативныйУчет;
			//++ НЕ УТ
			Если Документы.ВводОстатков.ТипыОперацийНеОтражаемыеВРеглУчете().Найти(ДокОбъект.ТипОперации) = Неопределено Тогда
				ДокОбъект.РазделУчета = Перечисления.РазделыВводаНачальныхОстатков.ОперативныйИРегламентированныйУчет;
			КонецЕсли;
			//-- НЕ УТ
			ОбъектИзменен = Истина;
		КонецЕсли;
		
		Если ДокОбъект.Проведен Тогда
			ПараметрыЗаполненияКлючей = РегистрыСведений.АналитикаУчетаНоменклатуры.ПараметрыЗаполненияКлючейАналитики();
			Если ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров
				ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.УдалитьОстаткиСобственныхТоваровНаАдресномСкладе
				ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПереданныхНаКомиссию
				ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТоваровПолученныхНаКомиссию
				ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.УдалитьОстаткиТоваровПолученныхНаКомиссиюНаАдресномСкладе
				ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПереданнойКлиентам
				ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиВозвратнойТарыПринятойОтПоставщиков
				ИЛИ ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.УдалитьОстаткиВозвратнойТарыПринятойОтПоставщиковНаАдресномСкладе Тогда
				МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(ДокОбъект.ТипОперации, ДокОбъект.Склад, ДокОбъект.Подразделение, ДокОбъект.Партнер);
				РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ДокОбъект.Товары, МестаУчета, Неопределено, Ложь, ПараметрыЗаполненияКлючей);
			ИначеЕсли ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам Тогда
				МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(ДокОбъект.ТипОперации, ДокОбъект.Склад, ДокОбъект.Подразделение, ДокОбъект.Партнер);
				РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ДокОбъект.Товары, МестаУчета, Неопределено, Ложь, ПараметрыЗаполненияКлючей);
			ИначеЕсли ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхВПроизводство Тогда
				МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(ДокОбъект.ТипОперации, ДокОбъект.Склад, ДокОбъект.Подразделение, ДокОбъект.Партнер);
				МестаУчета.Произвольный = ДокОбъект.Подразделение;
				РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ДокОбъект.Товары, МестаУчета, Неопределено, Ложь, ПараметрыЗаполненияКлючей);
			ИначеЕсли ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОптовыеПродажиЗаПрошлыеПериоды Тогда
				МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(ДокОбъект.ТипОперации, ДокОбъект.Склад, ДокОбъект.Подразделение, ДокОбъект.Партнер);
			
				ИменаПолей = РегистрыСведений.АналитикаУчетаНоменклатуры.ИменаПолейКоллекцииПоУмолчанию();
				ИменаПолей.Назначение = "";
				ИменаПолей.СтатусУказанияСерий = "";
				ИменаПолей.Серия = "";
				
				РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ДокОбъект.ОптовыеПродажи, МестаУчета, ИменаПолей, Ложь, ПараметрыЗаполненияКлючей);
			ИначеЕсли ДокОбъект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.РозничныеПродажиЗаПрошлыеПериоды Тогда
				МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(ДокОбъект.ТипОперации, ДокОбъект.Склад, ДокОбъект.Подразделение, ДокОбъект.Партнер);
			
				ИменаПолей = РегистрыСведений.АналитикаУчетаНоменклатуры.ИменаПолейКоллекцииПоУмолчанию();
				ИменаПолей.Назначение = "";
				ИменаПолей.СтатусУказанияСерий = "";
				ИменаПолей.Серия = "";
			
				РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ДокОбъект.РозничныеПродажи, МестаУчета, ИменаПолей, Ложь, ПараметрыЗаполненияКлючей);
			КонецЕсли;
		КонецЕсли;
		
		Попытка
			Если ОбъектИзменен ИЛИ ПараметрыЗаполненияКлючей.ИзмененаАналитика Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокОбъект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.ВводОстатков,
				,
				ТекстСообщения);
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяДокумента);
КонецПроцедуры

// Регистрирует данные для обработчика обновления СгенерироватьКлючиАналитикиНоменклатуры
//
Процедура ЗарегистрироватьДанныеКОбновлениюКлючейАналитики(Параметры) Экспорт
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаНоменклатуры.ТекстЗапросаГенерацииКлючейКОбработке()
	+ "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.АналитикаУчетаНоменклатуры,
	|		Товары.ВидЗапасов.УдалитьНазначение КАК Назначение
	|	ИЗ
	|		Документ.ВводОстатков.Товары КАК Товары
	|	ГДЕ
	|		Товары.АналитикаУчетаНоменклатуры.Назначение <> Товары.ВидЗапасов.УдалитьНазначение
	|		И Товары.ВидЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И Товары.Ссылка.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Продажи.Ссылка,
	|		Продажи.АналитикаУчетаНоменклатуры,
	|		Продажи.ВидЗапасов.УдалитьНазначение КАК Назначение
	|	ИЗ
	|		Документ.ВводОстатков.ОптовыеПродажи КАК Продажи
	|	ГДЕ
	|		Продажи.АналитикаУчетаНоменклатуры.Назначение <> Продажи.ВидЗапасов.УдалитьНазначение
	|		И Продажи.ВидЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И Продажи.Ссылка.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Продажи.Ссылка,
	|		Продажи.АналитикаУчетаНоменклатуры,
	|		Продажи.ВидЗапасов.УдалитьНазначение КАК Назначение
	|	ИЗ
	|		Документ.ВводОстатков.РозничныеПродажи КАК Продажи
	|	ГДЕ
	|		Продажи.АналитикаУчетаНоменклатуры.Назначение <> Продажи.ВидЗапасов.УдалитьНазначение
	|		И Продажи.ВидЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И Продажи.Ссылка.Проведен
	|) КАК Товары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтКлючиКГенерации КАК КлючиКГенерации
	|	ПО КлючиКГенерации.Ссылка = Товары.АналитикаУчетаНоменклатуры
	|		И КлючиКГенерации.Назначение = Товары.Назначение
	|ГДЕ
	|	КлючиКГенерации.Ссылка ЕСТЬ NULL
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоРегистратору", " ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ВводОстатков)");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПоместитьВТ", "ПОМЕСТИТЬ ВтКлючиКГенерации");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Справочники.КлючиАналитикиУчетаНоменклатуры.УстановитьПараметрыЗапросаКлючей(Запрос);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
КонецПроцедуры

// Обработчик обновления документа, по табличным частям генерирует недостающие ключи аналитики учета номенклатуры в ИБ.
Процедура СгенерироватьКлючиАналитикиНоменклатуры(Параметры) Экспорт
	
	ПолноеИмяДокумента = "Документ.ВводОстатков";
	МетаданныеДокумента = Метаданные.Документы.ВводОстатков;
	
	ДополнительныеПараметрыВыборкиДанных = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметрыВыборкиДанных.ВыбиратьПорциями = Ложь;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяДокумента, ДополнительныеПараметрыВыборкиДанных);
	Пока Выборка.Следующий() Цикл
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Поля.Номенклатура,
		|	Поля.Характеристика,
		|	Поля.Серия,
		|	Поля.Склад,
		|	Поля.Назначение,
		|	Поля.СтатьяКалькуляции
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Аналитика.Номенклатура КАК Номенклатура,
		|		Аналитика.Характеристика КАК Характеристика,
		|		Аналитика.Серия КАК Серия,
		|		Аналитика.Склад КАК Склад,
		|		Товары.ВидЗапасов.УдалитьНазначение КАК Назначение,
		|		Аналитика.СтатьяКалькуляции КАК СтатьяКалькуляции
		|	ИЗ
		|		Документ.ВводОстатков.Товары КАК Товары
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Товары.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
		|	ГДЕ
		|		Товары.АналитикаУчетаНоменклатуры.Назначение <> Товары.ВидЗапасов.УдалитьНазначение
		|		И Товары.ВидЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		И Товары.Ссылка = &Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Аналитика.Номенклатура КАК Номенклатура,
		|		Аналитика.Характеристика КАК Характеристика,
		|		Аналитика.Серия КАК Серия,
		|		Аналитика.Склад КАК Склад,
		|		Продажи.ВидЗапасов.УдалитьНазначение КАК Назначение,
		|		Аналитика.СтатьяКалькуляции КАК СтатьяКалькуляции
		|	ИЗ
		|		Документ.ВводОстатков.ОптовыеПродажи КАК Продажи
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Продажи.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
		|	ГДЕ
		|		Продажи.АналитикаУчетаНоменклатуры.Назначение <> Продажи.ВидЗапасов.УдалитьНазначение
		|		И Продажи.ВидЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		И Продажи.Ссылка = &Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Аналитика.Номенклатура КАК Номенклатура,
		|		Аналитика.Характеристика КАК Характеристика,
		|		Аналитика.Серия КАК Серия,
		|		Аналитика.Склад КАК Склад,
		|		Продажи.ВидЗапасов.УдалитьНазначение КАК Назначение,
		|		Аналитика.СтатьяКалькуляции КАК СтатьяКалькуляции
		|	ИЗ
		|		Документ.ВводОстатков.РозничныеПродажи КАК Продажи
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Продажи.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
		|	ГДЕ
		|		Продажи.АналитикаУчетаНоменклатуры.Назначение <> Продажи.ВидЗапасов.УдалитьНазначение
		|		И Продажи.ВидЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		И Продажи.Ссылка = &Ссылка
		|
		|	) КАК Поля
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|	ПО Поля.Номенклатура = Аналитика.Номенклатура
		|		И Поля.Характеристика = Аналитика.Характеристика
		|		И Поля.Серия = Аналитика.Серия
		|		И Поля.Склад = Аналитика.Склад
		|		И Поля.Назначение = Аналитика.Назначение
		|		И Поля.СтатьяКалькуляции = Аналитика.СтатьяКалькуляции
		|
		|ГДЕ
		|	Аналитика.КлючАналитики ЕСТЬ NULL
		|");
		
		Запрос.УстановитьПараметр("Ссылка", Выборка.Ссылка);
		
		Попытка
			НачатьТранзакцию();
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			Блокировка.Заблокировать();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									МетаданныеДокумента,
									Выборка.Ссылка,
									ТекстСообщения);
			Продолжить;
		КонецПопытки;
		
		Ключи = Запрос.Выполнить().Выбрать();
		Пока Ключи.Следующий() Цикл
			Попытка
				РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Ключи, Истина);
			Исключение
				ТекстСообщения = НСтр("ru = 'Не удалось инициализировать ключ аналитики учета номенклатуры: %Ключ% по причине: %Причина%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ключ%", Выборка.Ссылка);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
					МетаданныеДокумента, ТекстСообщения);
				КонецПопытки;
		КонецЦикла;
		ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
		ЗафиксироватьТранзакцию();
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяДокумента);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
