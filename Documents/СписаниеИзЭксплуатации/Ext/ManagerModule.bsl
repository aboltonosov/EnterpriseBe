#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
//
// Параметры:
// 		КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	
	
КонецПроцедуры

// Заполняет список команд создания на основании.
//
// Параметры:
// 		КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СписаниеИзЭксплуатации) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.СписаниеИзЭксплуатации.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.СписаниеИзЭксплуатации);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьВнутреннееПотребление";
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуМатериалыВЭксплуатации(КомандыОтчетов);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	Возврат ИсточникиДанных;
	
КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТМЦВЭксплуатации(ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Ложь, Ложь, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеШапки.Дата КАК Период,
	|	ДанныеШапки.Организация КАК Организация,
	|	ДанныеШапки.Подразделение КАК Подразделение
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации КАК ДанныеШапки
	|ГДЕ
	|	ДанныеШапки.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	
КонецПроцедуры

Процедура ТМЦВЭксплуатации(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТМЦВЭксплуатации";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// ТМЦВЭксплуатации
	|" +
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.ПартияТМЦВЭксплуатации КАК Партия,
	|	-ТабличнаяЧасть.Количество КАК Количество
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// 4D:ERP для Беларуси, ВладимирР, 21.09.2015 14:30:43 
	// Учет бланков строгой отчетности, №10038
	// {
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктСписанияИспользованныхБСО";
	КомандаПечати.Представление = НСтр("ru = 'Акт на списание использованных бланков строгой отчетности'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РеестрБСО";
	КомандаПечати.Представление = НСтр("ru = 'Реест бланков строгой отчетности, подлежащих уничтожению'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктСписанияИспорченныхБСО";
	КомандаПечати.Представление = НСтр("ru = 'Акт на списание испорченных, аннулированных'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	// }
	// 4D
	
	// 4D:ERP для Беларуси, Яна, 27.11.2015 10:16:06 
	// Списание из эксплуатации ( + все акты, как в УПП), № 10160
	// {
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СписаниеМатериалов";
	КомандаПечати.Представление = НСтр("ru = 'Акт на списание материалов из эксплуатации'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "М39п";
	КомандаПечати.Представление = НСтр("ru = 'М-39п (Акт на списание инвентаря и хозяйственных принадлежностей)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СписаниеИнструментов";
	КомандаПечати.Представление = НСтр("ru = 'МБ-5 (Акт на списание инструментов)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "СписаниеСпецодежды";
	КомандаПечати.Представление = НСтр("ru = 'Акт на списание спецодежды'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "МБ8";
	КомандаПечати.Представление = НСтр("ru = 'МБ-8 (Акт на списание малоценных и быстроизнашевающихся предметов)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;	
	// }
	// 4D
	
КонецПроцедуры

// 4D:ERP для Беларуси, ВладимирР, 21.09.2015 14:30:43 
// Учет бланков строгой отчетности, №10038
// {
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктСписанияИспользованныхБСО") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктСписанияИспользованныхБСО", НСтр("ru = 'Акт на списание использованных бланков строгой отчетности'"),
			СформироватьПечатнуюФормуАктСписанияИспользованныхБСО(МассивОбъектов, ОбъектыПечати, Неопределено));
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РеестрБСО") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "РеестрБСО", НСтр("ru = 'Реест бланков строгой отчетности, подлежащих уничтожению'"),
			СформироватьПечатнуюФормуРеестрБСО(МассивОбъектов, ОбъектыПечати, Неопределено));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктСписанияИспорченныхБСО") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктСписанияИспорченныхБСО", НСтр("ru = 'Акт на списание испорченных, аннулированных'"),
			СформироватьПечатнуюФормуАктСписанияИспорченныхБСО(МассивОбъектов, ОбъектыПечати, Неопределено));
	КонецЕсли;
		
	// 4D:ERP для Беларуси, Яна, 27.11.2015 10:34:48 
	// Списание из эксплуатации ( + все акты, как в УПП), № 10160
	// {
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписаниеМатериалов") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СписаниеМатериалов", НСтр("ru = 'Акт на списание материалов из эксплуатации'"),
		СформироватьПечатнуюФормуСписаниеМатериалов(МассивОбъектов, ОбъектыПечати, Неопределено));
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М39п") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М39п", НСтр("ru = 'Акт на списание инвентаря и хозяйственных принадлежностей'"),
		СформироватьПечатнуюФормуМ39п(МассивОбъектов, ОбъектыПечати, Неопределено));
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписаниеИнструментов") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СписаниеИнструментов", НСтр("ru = 'Акт на списание спецодежды'"),
		СформироватьПечатнуюФормуМБ5(МассивОбъектов, ОбъектыПечати, Неопределено));
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СписаниеСпецодежды") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СписаниеСпецодежды", НСтр("ru = 'МБ-5 (Акт на списание инструментов)'"),
		СформироватьПечатнуюФормуАктаНаСписаниеСпецОдежды(МассивОбъектов, ОбъектыПечати, Неопределено));
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МБ8") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "МБ8", НСтр("ru = 'МБ8 (Акт на списание малоценных и быстроизнашевающихся предметов)'"),
		СформироватьПечатнуюФормуМБ8(МассивОбъектов, ОбъектыПечати, Неопределено));
	КонецЕсли;
	// }
	// 4D
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуАктСписанияИспорченныхБСО(МассивОбъектов, ОбъектыПечати, КомплектыПечати)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БСО.Ссылка КАК Ссылка,
	|	БСО.Номер КАК НомерДокумента,
	|	БСО.Дата КАК Дата,
	|	БСО.Организация КАК Организация,
	|	БСО.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	БСО.Ответственный КАК Ответственный,
	|	БСО.Подразделение КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕ(БСО.Подразделение) КАК ПодразделениеПредставление,
	|	"""" КАК Склад,
	|	"""" КАК СкладДолжность,
	|	"""" КАК СкладОтветственный
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации КАК БСО
	|ГДЕ
	|	БСО.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БСО.Ссылка КАК Ссылка,
	|	БСО.Номенклатура.Код КАК Код,
	|	БСО.Номенклатура КАК Номенклатура,
	|	БСО.СерияБСО КАК Серия,
	|	БСО.НачальныйНомерБСО КАК НачальныйНомер,
	|	БСО.КонечныйНомерБСО КАК КонечныйНомер,
	|	БСО.Количество КАК Количество
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации.Товары КАК БСО
	|ГДЕ
	|	БСО.Ссылка В(&МассивОбъектов)
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Ссылка,
	|	Номенклатура";
	
	Результат = Запрос.ВыполнитьПакет();
	Если Результат[0].Пустой() Или Результат[1].Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеИзЭксплуатации_ПФ_MXL_АктСписанияИспорченныхБСО";
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ПолеСверху = 5;
	ТабДокумент.ПолеСлева = 10;
	ТабДокумент.ПолеСнизу = 5;
	ТабДокумент.ПолеСправа = 5;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеИзЭксплуатации.ПФ_MXL_АктСписанияИспорченныхБСО");
	
	ПервыйДокумент = Истина;
	
	Шапка = Результат[0].Выбрать();
	ВыборкаСсылка = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	
	Пока Шапка.Следующий() Цикл
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Организация, Шапка.Дата);
		
		ОблЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОблЗаголовок1 = Макет.ПолучитьОбласть("Заголовок1");
		ОблЗаголовок2 = Макет.ПолучитьОбласть("Заголовок2");
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		ОблПодписи = Макет.ПолучитьОбласть("Подписи");
		ОблПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
		ОблКомиссия = Макет.ПолучитьОбласть("Комиссия");
		
		ВыборкаСсылка.Сбросить();
		СтуктураПоиска = Новый Структура("Ссылка", Шапка.Ссылка);
		Пока ВыборкаСсылка.НайтиСледующий(СтуктураПоиска) Цикл
			ВыборкаНоменклатура = ВыборкаСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Номенклатура");
			Пока ВыборкаНоменклатура.Следующий() Цикл
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				ОблЗаголовок.Параметры.Заполнить(Шапка);
				ОблЗаголовок.Параметры.ПредставлениеОрганизации = Шапка.ПредставлениеОрганизации;
				ОблЗаголовок.Параметры.Число = Формат(Шапка.Дата, "ДФ=дд");
				ОблЗаголовок.Параметры.Месяц = Формат(Шапка.Дата, "ДФ=ММММ");
				ОблЗаголовок.Параметры.Год = Формат(Шапка.Дата, "ДФ=гггг");
				ОблЗаголовок.Параметры.УполномоченноеЛицо = ОтветственныеЛица.РуководительДолжностьПредставление + " " + ОтветственныеЛица.РуководительПредставление;
				ОблЗаголовок.Параметры.НаименованиеБланка = ВыборкаНоменклатура.Номенклатура;
				ТабДокумент.Вывести(ОблЗаголовок);
				ТабДокумент.Вывести(ОблПустаяСтрока);
				
				ОблЗаголовок1.Параметры.Число = "";
				ОблЗаголовок1.Параметры.Месяц = "";
				ОблЗаголовок1.Параметры.Год = "";
				ТабДокумент.Вывести(ОблЗаголовок1);
				
				Выборка = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.Прямой);
				Пока Выборка.Следующий() Цикл
					ОблСтрока.Параметры.Заполнить(Выборка);
					ОблСтрока.Параметры.Серия = СокрЛП(Выборка.Серия);
					ТабДокумент.Вывести(ОблСтрока);
				КонецЦикла;
				
				ТабДокумент.Вывести(ОблПустаяСтрока);
				
				КоличествоПрописью = НРег(ЧислоПрописью(ВыборкаНоменклатура.Количество,, "бланк, бланка, бланков, м,,,,, 0"));
				ОблЗаголовок2.Параметры.Количество = ВыборкаНоменклатура.Количество;
				ОблЗаголовок2.Параметры.КоличествоПрописью = КоличествоПрописью;
				ТабДокумент.Вывести(ОблЗаголовок2);
				ТабДокумент.Вывести(ОблПустаяСтрока);
			КонецЦикла;
		КонецЦикла;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабДокумент;
КонецФункции

Функция СформироватьПечатнуюФормуРеестрБСО(МассивОбъектов, ОбъектыПечати, КомплектыПечати)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БСО.Ссылка КАК Ссылка,
	|	БСО.Номер КАК НомерДокумента,
	|	БСО.Дата КАК Дата,
	|	БСО.Организация КАК Организация,
	|	БСО.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	БСО.Ответственный КАК Ответственный,
	|	БСО.Подразделение КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕ(БСО.Подразделение) КАК ПодразделениеПредставление,
	|	"""" КАК Склад,
	|	"""" КАК СкладДолжность,
	|	"""" КАК СкладОтветственный
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации КАК БСО
	|ГДЕ
	|	БСО.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БСО.Ссылка КАК Ссылка,
	|	БСО.Номенклатура.Код КАК Код,
	|	БСО.Номенклатура КАК Номенклатура,
	|	БСО.СерияБСО КАК Серия,
	|	БСО.НачальныйНомерБСО КАК НачальныйНомер,
	|	БСО.КонечныйНомерБСО КАК КонечныйНомер,
	|	БСО.Количество КАК Количество
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации.Товары КАК БСО
	|ГДЕ
	|	БСО.Ссылка В(&МассивОбъектов)
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Ссылка,
	|	Номенклатура";
	
	Результат = Запрос.ВыполнитьПакет();
	Если Результат[0].Пустой() Или Результат[1].Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеИзЭксплуатации_ПФ_MXL_РеестрБСО";
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ПолеСверху = 5;
	ТабДокумент.ПолеСлева = 10;
	ТабДокумент.ПолеСнизу = 5;
	ТабДокумент.ПолеСправа = 5;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеИзЭксплуатации.ПФ_MXL_РеестрБСО");
	
	ПервыйДокумент = Истина;
	
	Шапка = Результат[0].Выбрать();
	ВыборкаСсылка = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	
	Пока Шапка.Следующий() Цикл
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ОблЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОблЗаголовок1 = Макет.ПолучитьОбласть("Заголовок1");
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		ОблПодписи = Макет.ПолучитьОбласть("Подписи");
		ОблПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
		
		ОблЗаголовок.Параметры.Заполнить(Шапка);
		ОблЗаголовок.Параметры.Месяц = Формат(Шапка.Дата, "ДФ=ММММ");
		ОблЗаголовок.Параметры.Год = Формат(Шапка.Дата, "ДФ=гггг");
		ТабДокумент.Вывести(ОблЗаголовок);
		
		Количество = 0;
		
		ВыборкаСсылка.Сбросить();
		СтуктураПоиска = Новый Структура("Ссылка", Шапка.Ссылка);
		Пока ВыборкаСсылка.НайтиСледующий(СтуктураПоиска) Цикл
			ВыборкаНоменклатура = ВыборкаСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Номенклатура");
			Пока ВыборкаНоменклатура.Следующий() Цикл
				Количество = Количество + ВыборкаНоменклатура.Количество;
				
				Выборка = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.Прямой);
				Пока Выборка.Следующий() Цикл
					Если ПустаяСтрока(Выборка.НачальныйНомер) Или ПустаяСтрока(Выборка.КонечныйНомер) Тогда
						Продолжить;
					КонецЕсли;
					
					ОблСтрока.Параметры.Заполнить(Выборка);
					
					Если Число(Выборка.НачальныйНомер) = Число(Выборка.КонечныйНомер) Тогда
						ОблСтрока.Параметры.НомерБланка = Выборка.НачальныйНомер;
						ОблСтрока.Параметры.Количество = 1;
						ТабДокумент.Вывести(ОблСтрока);
					Иначе
						НомерБланка = Число(Выборка.НачальныйНомер);
						Пока НомерБланка <= Число(Выборка.КонечныйНомер) Цикл
							ОблСтрока.Параметры.НомерБланка = НомерБланка;
							ОблСтрока.Параметры.Количество = 1;
							ТабДокумент.Вывести(ОблСтрока);
							НомерБланка = НомерБланка + 1;
						КонецЦикла;
					КонецЕсли;
					
					ОблСтрока.Параметры.Номенклатура = СокрЛП(Выборка.Номенклатура);
					ОблСтрока.Параметры.Номенклатура = СокрЛП(Выборка.Серия);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		ТабДокумент.Вывести(ОблПустаяСтрока);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабДокумент;
КонецФункции

Функция СформироватьПечатнуюФормуАктСписанияИспользованныхБСО(МассивОбъектов, ОбъектыПечати, КомплектыПечати)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БСО.Ссылка КАК Ссылка,
	|	БСО.Номер КАК НомерДокумента,
	|	БСО.Дата КАК Дата,
	|	БСО.Организация КАК Организация,
	|	БСО.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	БСО.Ответственный КАК Ответственный,
	|	БСО.Подразделение КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕ(БСО.Подразделение) КАК ПодразделениеПредставление,
	|	"""" КАК Склад,
	|	"""" КАК СкладДолжность,
	|	"""" КАК СкладОтветственный
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации КАК БСО
	|ГДЕ
	|	БСО.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БСО.Ссылка КАК Ссылка,
	|	БСО.Номенклатура.Код КАК Код,
	|	БСО.Номенклатура КАК Номенклатура,
	|	БСО.СерияБСО КАК Серия,
	|	БСО.НачальныйНомерБСО КАК НачальныйНомер,
	|	БСО.КонечныйНомерБСО КАК КонечныйНомер,
	|	БСО.Количество КАК Количество
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации.Товары КАК БСО
	|ГДЕ
	|	БСО.Ссылка В(&МассивОбъектов)
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Ссылка,
	|	Номенклатура";
	
	Результат = Запрос.ВыполнитьПакет();
	Если Результат[0].Пустой() Или Результат[1].Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеИзЭксплуатации_НакладнаяБСО";
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ПолеСверху = 5;
	ТабДокумент.ПолеСлева = 10;
	ТабДокумент.ПолеСнизу = 5;
	ТабДокумент.ПолеСправа = 5;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеИзЭксплуатации.ПФ_MXL_АктСписанияИспользованныхБСО");
	
	ПервыйДокумент = Истина;
	
	Шапка = Результат[0].Выбрать();
	ВыборкаСсылка = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
	
	Пока Шапка.Следующий() Цикл
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(Шапка.Организация, Шапка.Дата);
		
		ОблЗаголовок = Макет.ПолучитьОбласть("Заголовок");
		ОблЗаголовок1 = Макет.ПолучитьОбласть("Заголовок1");
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		ОблПодписи = Макет.ПолучитьОбласть("Подписи");
		ОблПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
		
		ОблЗаголовок.Параметры.Заполнить(Шапка);
		ОблЗаголовок.Параметры.ПредставлениеОрганизации = Шапка.ПредставлениеОрганизации;
		ОблЗаголовок.Параметры.Ответственный = Шапка.СкладДолжность + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.СкладОтветственный);
		ОблЗаголовок.Параметры.Число = Формат(Шапка.Дата, "ДФ=дд");
		ОблЗаголовок.Параметры.Месяц = Формат(Шапка.Дата, "ДФ=ММММ");
		ОблЗаголовок.Параметры.Год = Формат(Шапка.Дата, "ДФ=гггг");
		ОблЗаголовок.Параметры.УполномоченноеЛицо = ОтветственныеЛица.РуководительДолжностьПредставление + " " + ОтветственныеЛица.РуководительПредставление;
		ТабДокумент.Вывести(ОблЗаголовок);
		
		Количество = 0;
		
		ВыборкаСсылка.Сбросить();
		СтуктураПоиска = Новый Структура("Ссылка", Шапка.Ссылка);
		Пока ВыборкаСсылка.НайтиСледующий(СтуктураПоиска) Цикл
			ВыборкаНоменклатура = ВыборкаСсылка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Номенклатура");
			Пока ВыборкаНоменклатура.Следующий() Цикл
				Количество = Количество + ВыборкаНоменклатура.Количество;
				
				Выборка = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.Прямой);
				Пока Выборка.Следующий() Цикл
					ОблСтрока.Параметры.Заполнить(Выборка);
					ОблСтрока.Параметры.Номенклатура = СокрЛП(Выборка.Номенклатура);
					ТабДокумент.Вывести(ОблСтрока);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		ТабДокумент.Вывести(ОблПустаяСтрока);
		
		КоличествоПрописью = НРег(ЧислоПрописью(Количество,, "бланк, бланка, бланков, м,,,,, 0"));
		ОблЗаголовок1.Параметры.Количество = Количество;
		ОблЗаголовок1.Параметры.КоличествоПрописью = КоличествоПрописью;
		ТабДокумент.Вывести(ОблЗаголовок1);
		ТабДокумент.Вывести(ОблПустаяСтрока);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	КонецЦикла;
	
	Возврат ТабДокумент;
КонецФункции
// }
// 4D

// 4D:ERP для Беларуси, Яна, 27.11.2015 10:30:19 
// Списание из эксплуатации ( + все акты, как в УПП), № 10160
// {
Функция СформироватьПечатнуюФормуСписаниеМатериалов(МассивОбъектов, ОбъектыПечати, КомплектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ 
	|	СписаниеИзЭксплуатации.Ссылка КАК Ссылка,
	|	СписаниеИзЭксплуатации.Номер КАК НомерДокумента,
	|	СписаниеИзЭксплуатации.Дата КАК Дата,
	|	СписаниеИзЭксплуатации.Организация КАК Организация,
	|	СписаниеИзЭксплуатации.Организация.НаименованиеПолное КАК ПечОрганизация,
	|	СписаниеИзЭксплуатации.Ответственный КАК Ответственный,
	|	СписаниеИзЭксплуатации.Подразделение КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕ(СписаниеИзЭксплуатации.Подразделение) КАК ПечПодразделение,
	|	"""" КАК ПечСклад,
	|	"""" КАК СкладДолжность,
	|	"""" КАК СкладОтветственный
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации КАК СписаниеИзЭксплуатации
	|ГДЕ
	|	СписаниеИзЭксплуатации.Ссылка В(&МассивОбъектов)";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Товар,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.ФизЛицо КАК Сотрудник,
	|	ВложенныйЗапрос.ФизЛицо.Представление КАК ПечФИО,
	|	МИНИМУМ(ВложенныйЗапрос.НомерСтроки) КАК НомерСтроки,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	ВложенныйЗапрос.ФизЛицо.Код КАК ПечТабНомер,
	|	ВложенныйЗапрос.НоменклатураЕдиницаДляОтчетов.Представление КАК ПечЕдИзм,
	|	ВложенныйЗапрос.НоменклатураЕдиницаДляОтчетов.Код КАК ЕдиницаИзмКод,
	|	ВложенныйЗапрос.ПартияТМЦВЭксплуатации
	|ИЗ
	|	(ВЫБРАТЬ
	|		СписаниеИзЭксплуатацииТовары.Номенклатура КАК Номенклатура,
	|		СписаниеИзЭксплуатацииТовары.Характеристика КАК Характеристика,
	|		СписаниеИзЭксплуатацииТовары.ФизическоеЛицо КАК ФизЛицо,
	|		СУММА(СписаниеИзЭксплуатацииТовары.Количество) КАК Количество,
	|		МИНИМУМ(СписаниеИзЭксплуатацииТовары.НомерСтроки) КАК НомерСтроки,
	|		СписаниеИзЭксплуатацииТовары.Номенклатура.ЕдиницаДляОтчетов КАК НоменклатураЕдиницаДляОтчетов,
	|		СписаниеИзЭксплуатацииТовары.ПартияТМЦВЭксплуатации КАК ПартияТМЦВЭксплуатации
	|	ИЗ
	|		Документ.СписаниеИзЭксплуатации.Товары КАК СписаниеИзЭксплуатацииТовары
	|	ГДЕ
	|		СписаниеИзЭксплуатацииТовары.Ссылка В(&МассивОбъектов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СписаниеИзЭксплуатацииТовары.Характеристика,
	|		СписаниеИзЭксплуатацииТовары.Номенклатура,
	|		СписаниеИзЭксплуатацииТовары.ФизическоеЛицо,
	|		СписаниеИзЭксплуатацииТовары.Номенклатура.ЕдиницаДляОтчетов,
	|		СписаниеИзЭксплуатацииТовары.ПартияТМЦВЭксплуатации) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)),
	|	ВложенныйЗапрос.ФизЛицо.Представление,
	|	ВложенныйЗапрос.Номенклатура.Артикул,
	|	ВложенныйЗапрос.Номенклатура.Код,
	|	ВложенныйЗапрос.ФизЛицо,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ФизЛицо.Код,
	|	ВложенныйЗапрос.НоменклатураЕдиницаДляОтчетов,
	|	ВложенныйЗапрос.НоменклатураЕдиницаДляОтчетов.Представление,
	|	ВложенныйЗапрос.НоменклатураЕдиницаДляОтчетов.Код,
	|	ВложенныйЗапрос.ПартияТМЦВЭксплуатации
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки" ;
	
	
	ЗапросПоТоварам = Новый Запрос;
	ЗапросПоТоварам.Текст = ТекстЗапроса;
	
	ЗапросПоТоварам.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = ЗапросПоТоварам.Выполнить();
	
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеМатериалов_СписаниеМатериалов";
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ПолеСверху = 5;
	ТабДокумент.ПолеСлева = 10;
	ТабДокумент.ПолеСнизу = 5;
	ТабДокумент.ПолеСправа = 5;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеИзЭксплуатации.ПФ_MXL_СписаниеМатериалов");
	
	
	// Вывод заголовка
	Область = Макет.ПолучитьОбласть("Заголовок|Данные");
	
	Область.Параметры.Заполнить(Шапка);
	область.Параметры.Дата = Формат(Шапка.Дата, "ДФ='дд ММММ гггг'");
	Область.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НомерДокумента, Истина, Истина);
	
	ТабДокумент.Вывести(Область);
	
	
	// Параметры вывода
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	КолАртикул = ?( ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул, "Артикул",
	?( ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код,     "Код", ""));
	ФлагВыводКода = НЕ ПустаяСтрока(КолАртикул);
	
	// Вывод шапки табличной части
	Если ФлагВыводКода Тогда
		Область = Макет.ПолучитьОбласть("ТабШапка|Данные");
		Область.Параметры.ПечАртикул = КолАртикул;
		Область.Области[?(ФлагВыводКода,"ОблКолЗаг","ОблКолЗагБезАртикула")].ГраницаСправа = Новый Линия( ТипЛинииРисункаТабличногоДокумента.Сплошная, 2);
		ТабДокумент.Вывести(Область);
	Иначе
		Область = Макет.ПолучитьОбласть("ТабШапкаБезАртикула|Данные");
		Область.Области[?(ФлагВыводКода,"ОблКолЗаг","ОблКолЗагБезАртикула")].ГраницаСправа = Новый Линия( ТипЛинииРисункаТабличногоДокумента.Сплошная, 2);
		ТабДокумент.Вывести(Область);
	КонецЕсли;
	
	// Вывод табличной части
	Если ФлагВыводКода Тогда
		Область = Макет.ПолучитьОбласть("ТабСтрока|Данные");
	Иначе
		Область = Макет.ПолучитьОбласть("ТабСтрокаБезАртикула|Данные");
	КонецЕсли;
	
	ТабЧасть = РезультатЗапроса.Выбрать();
	СуммаИтого = 0;
	ПечНомер = 0;
	
	Пока ТабЧасть.Следующий() Цикл
		
		ЗапросСерии = Новый Запрос;
		ЗапросСерии.Текст = 
		"ВЫБРАТЬ
		|	СерийТоваров.Регистратор,
		|	СерийТоваров.Серия,
		|	СерийТоваров.Номенклатура,
		|	СерийТоваров.Характеристика
		|ИЗ
		|	РегистрНакопления.ДвиженияСерийТоваров КАК СерийТоваров
		|ГДЕ
		|	СерийТоваров.Номенклатура = &Номенклатура
		|	И СерийТоваров.Характеристика = &Характеристика
		|	И СерийТоваров.Регистратор = &Регистратор";
		
		
		ЗапросСерии.УстановитьПараметр("Номенклатура", ТабЧасть.Товар); 
		ЗапросСерии.УстановитьПараметр("Характеристика", ТабЧасть.Характеристика);
		ЗапросСерии.УстановитьПараметр("Регистратор", ТабЧасть.ПартияТМЦВЭксплуатации.Документ);
		
		СерииНомеклатуры = ЗапросСерии.Выполнить().Выбрать();
		СерииНомеклатуры.Следующий();
		
		ПечНомер = ПечНомер + 1;
		Область.Параметры.ПечНомер = ПечНомер;
		
		Если ФлагВыводКода Тогда
			Область.Параметры.ПечАртикул = ТабЧасть[КолАртикул];
		КонецЕсли;
		
		Область.Параметры.Заполнить(ТабЧасть);
		
		Если СерииНомеклатуры.Количество() <> 0 Тогда
			Область.Параметры.ТоварНаименование = СокрЛП(ТабЧасть.ТоварНаименование)
			+ ПредставлениеСерий(СерииНомеклатуры);
		Иначе 
			Область.Параметры.ТоварНаименование = СокрЛП(ТабЧасть.ТоварНаименование) + СокрЛП(ТабЧасть.Характеристика) ;
		КонецЕсли;
		
		
		Область.Параметры.Материал    = ТабЧасть.Товар;
		Область.Параметры.ПечКол      = ТабЧасть.Количество;
		Область.Параметры.ПечТабНомер = ТабЧасть.ПечТабНомер;
		
		Область.Области[?(ФлагВыводКода,"ОблЕдИзм","ОблЕдИзмБезАртикула")].ГраницаСправа = Новый Линия( ТипЛинииРисункаТабличногоДокумента.Сплошная, 2);
		
		ТабДокумент.Вывести(Область);
		
	КонецЦикла;
	
	// Вывод итогов документа
	
	Область = Макет.ПолучитьОбласть("Подвал|Данные");
	
	
	Область.Параметры.СтрокаИтог = "Всего наименований: " + ТабЧасть.Количество();
	ТабДокумент.Вывести( Область);
	
	Если ФлагВыводКода Тогда
		Область = Макет.ПолучитьОбласть("НизДокумента");
	Иначе
		Область = Макет.ПолучитьОбласть("НизДокументаБезАртикула|Данные");	
	КонецЕсли;
	
	ТабДокумент.Вывести( Область);
	Возврат ТабДокумент;
	
КонецФункции

// Печатная форма для "Акт на списание инвентаря и хозяйственных принадлежностей - М39п 
Функция СформироватьПечатнуюФормуМ39п(МассивОбъектов, ОбъектыПечати, КомплектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписаниеИзЭксплуатации.Номер КАК Номер,
	|	СписаниеИзЭксплуатации.Дата КАК ДатаСоставления,
	|	СписаниеИзЭксплуатации.Дата КАК ДатаДокумента,
	|	СписаниеИзЭксплуатации.Организация КАК Организация,
	|	СписаниеИзЭксплуатации.Организация КАК ЮрФизЛицо,
	|	СписаниеИзЭксплуатации.Организация КАК Руководители,
	|	СписаниеИзЭксплуатации.Подразделение КАК Подразделение,
	|	"""" КАК НомерПриказа,
	|	"""" КАК ДатаПриказа,
	|	СписаниеИзЭксплуатации.Ссылка,
	|	СписаниеИзЭксплуатации.Ответственный КАК ФизЛицо
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации КАК СписаниеИзЭксплуатации
	|ГДЕ
	|	СписаниеИзЭксплуатации.Ссылка В(&МассивОбъектов)";
	
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеИзЭксплуатации.ПФ_MXL_М39п");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры печатной формы по умолчанию
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ПолеСверху = 5;
	ТабДокумент.ПолеСлева = 10;
	ТабДокумент.ПолеСнизу = 5;
	ТабДокумент.ПолеСправа = 5;
	
	
	// Восстановим установленные пользователем параметры печатной формы
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеИзЭксплуатации_М39п";
	
	// Выводим общие реквизиты шапки
	СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеОрганизации	= ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование");
	ОбластьМакета.Параметры.НомерДокумента				= ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НомерПриказа, Истина, Истина);
	
	ОбластьМакета.Параметры.ПредставлениеПодразделения	= Шапка.Подразделение;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	НомерСтраницы	= 1;
	
	Строка	= Макет.ПолучитьОбласть("Строка");
	Итого	= Макет.ПолучитьОбласть("Итого");
	
	// Инициализация итогов в документе
	ИтогоКоличество 				  = 0;
	ИтогоСуммаПервоначальнойСтоимости = 0;
	ИтогоСуммаПогашеннойСтоимости     = 0;
	Ном = 0;
	
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	
	Выборка = СформироватьЗапросПоМатериалам(Шапка).Выбрать();
	КоличествоСтрок = Выборка.Количество();
	
	Пока Выборка.Следующий() Цикл
		
		ЗапросСерии = Новый Запрос;
		ЗапросСерии.Текст = 
		"ВЫБРАТЬ
		|	СерийТоваров.Регистратор,
		|	СерийТоваров.Серия,
		|	СерийТоваров.Номенклатура,
		|	СерийТоваров.Характеристика
		|ИЗ
		|	РегистрНакопления.ДвиженияСерийТоваров КАК СерийТоваров
		|ГДЕ
		|	СерийТоваров.Номенклатура = &Номенклатура
		|	И СерийТоваров.Характеристика = &Характеристика
		|	И СерийТоваров.Регистратор = &Регистратор";
		
		
		ЗапросСерии.УстановитьПараметр("Номенклатура", Выборка.Номенклатура); 
		ЗапросСерии.УстановитьПараметр("Характеристика", Выборка.Характеристика);
		ЗапросСерии.УстановитьПараметр("Регистратор", Выборка.ПартияТМЦВЭксплуатацииДокумент);
		
		СерииНомеклатуры = ЗапросСерии.Выполнить().Выбрать();
		СерииНомеклатуры.Следующий();	
		
		Если НЕ ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.");
			Продолжить;
		КонецЕсли;
		
		Ном = Ном + 1;
		
		// Проверим, помещается ли строка с данными и последняя строка (или итоги) на странице.
		
		СтрокаТаблицы = Новый Массив;
		СтрокаТаблицы.Добавить(Строка);
		Если Ном = КоличествоСтрок Тогда
			СтрокаТаблицы.Добавить(Итого);
		КонецЕсли;
		
		Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаТаблицы) Тогда
			
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(Выборка);
		
		Если СерииНомеклатуры.Количество() <> 0 Тогда
			ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(Выборка.ТоварНаименование)
			+ ПредставлениеСерий(СерииНомеклатуры);
		Иначе 
			ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(Выборка.ТоварНаименование) + СокрЛП(Выборка.Характеристика) ;
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		ИтогоКоличество = ИтогоКоличество + Выборка.Количество;
		
	КонецЦикла;
	
	// Выводим итоги по документу
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.ИтогоКоличество = ИтогоКоличество;
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуМБ5(МассивОбъектов, ОбъектыПечати, КомплектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписаниеИзЭксплуатации.Номер КАК Номер,
	|	СписаниеИзЭксплуатации.Дата КАК ДатаСоставления,
	|	СписаниеИзЭксплуатации.Дата КАК ДатаДокумента,
	|	СписаниеИзЭксплуатации.Организация КАК Организация,
	|	СписаниеИзЭксплуатации.Организация КАК ЮрФизЛицо,
	|	СписаниеИзЭксплуатации.Организация КАК Руководители,
	|	СписаниеИзЭксплуатации.Подразделение КАК Подразделение,
	|	"""" КАК НомерПриказа,
	|	"""" КАК ДатаПриказа,
	|	СписаниеИзЭксплуатации.Ссылка,
	|	СписаниеИзЭксплуатации.Ответственный КАК ФизЛицо
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации КАК СписаниеИзЭксплуатации
	|ГДЕ
	|	СписаниеИзЭксплуатации.Ссылка В(&МассивОбъектов)";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеИзЭксплуатации.ПФ_MXL_СписаниеИнструментов");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры печатной формы по умолчанию
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ПолеСверху = 5;
	ТабДокумент.ПолеСлева = 10;
	ТабДокумент.ПолеСнизу = 5;
	ТабДокумент.ПолеСправа = 5;
	
	// Восстановим установленные пользователем параметры печатной формы
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеИзЭксплуатации_МБ5";
	
	// Выводим общие реквизиты шапки
	СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеОрганизации	= ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование");
	ОбластьМакета.Параметры.НомерДокумента				= ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НомерПриказа, Истина, Истина);
	ОбластьМакета.Параметры.ПредставлениеПодразделения	= Шапка.Подразделение;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	НомерСтраницы	= 1;
	
	Строка	= Макет.ПолучитьОбласть("Строка");
	Итого	= Макет.ПолучитьОбласть("Итого");
	
	// Инициализация итогов в документе
	ИтогоКоличество 				  = 0;
	ИтогоСуммаПервоначальнойСтоимости = 0;
	ИтогоСуммаПогашеннойСтоимости     = 0;
	Ном = 0;
	
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	
	Выборка = СформироватьЗапросПоМатериалам(Шапка).Выбрать();
	КоличествоСтрок = Выборка.Количество();
	Пока Выборка.Следующий() Цикл
		
		ЗапросСерии = Новый Запрос;
		ЗапросСерии.Текст = 
		"ВЫБРАТЬ
		|	СерийТоваров.Регистратор,
		|	СерийТоваров.Серия,
		|	СерийТоваров.Номенклатура,
		|	СерийТоваров.Характеристика
		|ИЗ
		|	РегистрНакопления.ДвиженияСерийТоваров КАК СерийТоваров
		|ГДЕ
		|	СерийТоваров.Номенклатура = &Номенклатура
		|	И СерийТоваров.Характеристика = &Характеристика
		|	И СерийТоваров.Регистратор = &Регистратор";
		
		
		ЗапросСерии.УстановитьПараметр("Номенклатура", Выборка.Номенклатура); 
		ЗапросСерии.УстановитьПараметр("Характеристика", Выборка.Характеристика);
		ЗапросСерии.УстановитьПараметр("Регистратор", Выборка.ПартияТМЦВЭксплуатации.Документ);
		
		СерииНомеклатуры = ЗапросСерии.Выполнить().Выбрать();
		СерииНомеклатуры.Следующий();
		
		
		Если НЕ ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.");
			Продолжить;
		КонецЕсли;
		
		Ном = Ном + 1;
		
		// Проверим, помещается ли строка с данными и последняя строка (или итоги) на странице.
		СтрокаТаблицы = Новый Массив;
		СтрокаТаблицы.Добавить(Строка);
		Если Ном = КоличествоСтрок Тогда
			СтрокаТаблицы.Добавить(Итого);
		КонецЕсли;
		
		Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаТаблицы) Тогда
			
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(Выборка);
		
		Если СерииНомеклатуры.Количество() <> 0 Тогда
			ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(Выборка.ТоварНаименование)
			+ ПредставлениеСерий(СерииНомеклатуры);
		Иначе 
			ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(Выборка.ТоварНаименование) + СокрЛП(Выборка.Характеристика) ;
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		ИтогоКоличество = ИтогоКоличество + Выборка.Количество;
		
		МассивМол = Новый Массив;
		МассивМол.Добавить(Выборка.ФизЛицо);
		
	КонецЦикла;
	
	// Выводим итоги по документу
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.ИтогоКоличество						= ИтогоКоличество;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаМатериал");
	Для сч = 1 По 5 Цикл 
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;	
	
	ОбластьМакета = Макет.ПолучитьОбласть("ИтогоМатериал");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакетаМОЛ = Макет.ПолучитьОбласть("ЧленыКомиссии");
	ОбластьМакетаМОЛ.Параметры.НадписьЧленыКомиссии = "Материально-ответственное лицо:";
	
	МассивПолей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(МассивМол[0].Наименование, " ");
	
	ОбластьМакетаМОЛ.Параметры.ЧленКомиссии = "";
	
	ТабДокумент.Вывести(ОбластьМакетаМОЛ);
	
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьМБ5()

Функция СформироватьПечатнуюФормуАктаНаСписаниеСпецОдежды(МассивОбъектов, ОбъектыПечати, КомплектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписаниеИзЭксплуатации.Номер КАК Номер,
	|	СписаниеИзЭксплуатации.Дата КАК ДатаСоставления,
	|	СписаниеИзЭксплуатации.Дата КАК ДатаДокумента,
	|	СписаниеИзЭксплуатации.Организация КАК Организация,
	|	СписаниеИзЭксплуатации.Организация КАК ЮрФизЛицо,
	|	СписаниеИзЭксплуатации.Организация КАК Руководители,
	|	СписаниеИзЭксплуатации.Подразделение КАК Подразделение,
	|	"""" КАК НомерПриказа,
	|	"""" КАК ДатаПриказа,
	|	СписаниеИзЭксплуатации.Ссылка,
	|	СписаниеИзЭксплуатации.Ответственный КАК ФизЛицо
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации КАК СписаниеИзЭксплуатации
	|ГДЕ
	|	СписаниеИзЭксплуатации.Ссылка В(&МассивОбъектов)";
	
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеИзЭксплуатации.ПФ_MXL_СписаниеСпецодежды");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	
	// Зададим параметры печатной формы по умолчанию
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ПолеСверху = 5;
	ТабДокумент.ПолеСлева = 10;
	ТабДокумент.ПолеСнизу = 5;
	ТабДокумент.ПолеСправа = 5;
	
	
	// Восстановим установленные пользователем параметры печатной формы
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеИзЭксплуатации_СписаниеСпецодежды";
	
	// Выводим общие реквизиты шапки
	СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);
	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ДатаПриказа					= Формат(Шапка.ДАтаПриказа, "ДЛФ=DD");
	ОбластьМакета.Параметры.ПредставлениеОрганизации	= ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование");
	ОбластьМакета.Параметры.НомерДокумента				= ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НомерПриказа, Истина, Истина);
	
	ОбластьМакета.Параметры.ДолжностьПредседатель    = "";
	ОбластьМакета.Параметры.Председатель             = "";
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	НомерСтраницы	= 1;
	
	Строка	= Макет.ПолучитьОбласть("Строка");
	Итого	= Макет.ПолучитьОбласть("Итого");
	
	// Инициализация итогов в документе
	ИтогоКоличество 				  = 0;
	ИтогоСуммаПервоначальнойСтоимости = 0;
	ИтогоСуммаПогашеннойСтоимости     = 0;
	Ном = 0;
	
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	
	Выборка = СформироватьЗапросПоМатериалам(Шапка).Выбрать();
	КоличествоСтрок = Выборка.Количество();
	Пока Выборка.Следующий() Цикл
		
		ЗапросСерии = Новый Запрос;
		ЗапросСерии.Текст = 
		"ВЫБРАТЬ
		|	СерийТоваров.Регистратор,
		|	СерийТоваров.Серия,
		|	СерийТоваров.Номенклатура,
		|	СерийТоваров.Характеристика
		|ИЗ
		|	РегистрНакопления.ДвиженияСерийТоваров КАК СерийТоваров
		|ГДЕ
		|	СерийТоваров.Номенклатура = &Номенклатура
		|	И СерийТоваров.Характеристика = &Характеристика
		|	И СерийТоваров.Регистратор = &Регистратор";
		
		
		ЗапросСерии.УстановитьПараметр("Номенклатура", Выборка.Номенклатура); 
		ЗапросСерии.УстановитьПараметр("Характеристика", Выборка.Характеристика);
		ЗапросСерии.УстановитьПараметр("Регистратор", Выборка.ПартияТМЦВЭксплуатации.Документ);
		
		СерииНомеклатуры = ЗапросСерии.Выполнить().Выбрать();
		СерииНомеклатуры.Следующий();
		
		Если НЕ ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.");
			Продолжить;
		КонецЕсли;
		
		Ном = Ном + 1;
		
		// Проверим, помещается ли строка с данными и последняя строка (или итоги) на странице.
		СтрокаТаблицы = Новый Массив;
		СтрокаТаблицы.Добавить(Строка);
		Если Ном = КоличествоСтрок Тогда
			СтрокаТаблицы.Добавить(Итого);
		КонецЕсли;
		
		Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаТаблицы) Тогда
			
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.Заполнить(Выборка);
		
		ОбластьМакета.Параметры.СрокСлужбы = Выборка.ПартияТМЦВЭксплуатации.СрокЭксплуатации ;
		
		Если СерииНомеклатуры.Количество() <> 0 Тогда
			ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(Выборка.ТоварНаименование)
			+ ПредставлениеСерий(СерииНомеклатуры);
		Иначе 
			ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(Выборка.ТоварНаименование) + СокрЛП(Выборка.Характеристика) ;
		КонецЕсли;
		
		МассивПолей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Выборка.ФизЛицо, " ");
		
		ОбластьМакета.Параметры.Пользователь = "";
		ТабДокумент.Вывести(ОбластьМакета);
		
		ИтогоКоличество = ИтогоКоличество + Выборка.Количество;
		
	КонецЦикла;
	
	// Выводим итоги по документу
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.ИтогоКоличество						= ИтогоКоличество;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.ДатаСоставления				= Формат(Шапка.ДатаСоставления, "ДЛФ=DD");
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьАктНаСписаниеСпецОдежды()

Функция СформироватьПечатнуюФормуМБ8(МассивОбъектов, ОбъектыПечати, КомплектыПечати)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписаниеИзЭксплуатации.Номер КАК Номер,
	|	СписаниеИзЭксплуатации.Дата КАК ДатаСоставления,
	|	СписаниеИзЭксплуатации.Дата КАК ДатаДокумента,
	|	СписаниеИзЭксплуатации.Организация КАК Организация,
	|	СписаниеИзЭксплуатации.Организация КАК ЮрФизЛицо,
	|	СписаниеИзЭксплуатации.Организация КАК Руководители,
	|	СписаниеИзЭксплуатации.Подразделение КАК Подразделение,
	|	"""" КАК НомерПриказа,
	|	"""" КАК ДатаПриказа,
	|	СписаниеИзЭксплуатации.Ссылка,
	|	СписаниеИзЭксплуатации.Ответственный КАК ФизЛицо
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации КАК СписаниеИзЭксплуатации
	|ГДЕ
	|	СписаниеИзЭксплуатации.Ссылка В(&МассивОбъектов)";
	
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеИзЭксплуатации.ПФ_MXL_МБ8");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры печатной формы по умолчанию
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.ПолеСверху = 5;
	ТабДокумент.ПолеСлева = 10;
	ТабДокумент.ПолеСнизу = 5;
	ТабДокумент.ПолеСправа = 5;
	
	
	// Восстановим установленные пользователем параметры печатной формы
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеМатериаловИзЭксплуатации_МБ8";
	
	// Выводим общие реквизиты шапки
	СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеОрганизации	= ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование");
	ОбластьМакета.Параметры.НомерДокумента				= ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Шапка.НомерПриказа, Истина, Истина);
	ОбластьМакета.Параметры.ПредставлениеПодразделения	= Шапка.Подразделение;
	ОбластьМакета.Параметры.ДатаСоставления				= Формат(Шапка.ДатаСоставления, "ДЛФ=DD");
	ОбластьМакета.Параметры.ДатаПриказа					= Формат(Шапка.ДатаПриказа, "ДЛФ=DD");
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	НомерСтраницы	= 1;
	
	Строка	= Макет.ПолучитьОбласть("Строка");
	Итого	= Макет.ПолучитьОбласть("Итого");
	
	// Инициализация итогов в документе
	ИтогоКоличество 				  = 0;
	ИтогоСуммаПервоначальнойСтоимости = 0;
	ИтогоСуммаПогашеннойСтоимости     = 0;
	Ном = 0;
	
	// Выводим многострочную часть докмента
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	
	Выборка = СформироватьЗапросПоМатериалам(Шапка).Выбрать();
	КоличествоСтрок = Выборка.Количество();
	Пока Выборка.Следующий() Цикл
		
		ЗапросСерии = Новый Запрос;
		ЗапросСерии.Текст = 
		"ВЫБРАТЬ
		|	СерийТоваров.Регистратор,
		|	СерийТоваров.Серия,
		|	СерийТоваров.Номенклатура,
		|	СерийТоваров.Характеристика
		|ИЗ
		|	РегистрНакопления.ДвиженияСерийТоваров КАК СерийТоваров
		|ГДЕ
		|	СерийТоваров.Номенклатура = &Номенклатура
		|	И СерийТоваров.Характеристика = &Характеристика
		|	И СерийТоваров.Регистратор = &Регистратор";
		
		
		ЗапросСерии.УстановитьПараметр("Номенклатура", Выборка.Номенклатура); 
		ЗапросСерии.УстановитьПараметр("Характеристика", Выборка.Характеристика);
		ЗапросСерии.УстановитьПараметр("Регистратор", Выборка.ПартияТМЦВЭксплуатации.Документ);
		
		СерииНомеклатуры = ЗапросСерии.Выполнить().Выбрать();
		СерииНомеклатуры.Следующий();		
		
		
		Если НЕ ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.");
			Продолжить;
		КонецЕсли;
		
		Ном = Ном + 1;
		
		// Проверим, помещается ли строка с данными и последняя строка (или итоги) на странице.
		СтрокаТаблицы = Новый Массив;
		СтрокаТаблицы.Добавить(Строка);
		Если Ном = КоличествоСтрок Тогда
			СтрокаТаблицы.Добавить(Итого);
		КонецЕсли;
		
		Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаТаблицы) Тогда
			
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;
		
		ОбластьМакета.Параметры.ИнвентарныйНомер = Выборка.ПартияТМЦВЭксплуатации.ИнвентарныйНомер;
		
		ОбластьМакета.Параметры.Заполнить(Выборка);
		
		Если СерииНомеклатуры.Количество() <> 0 Тогда
			ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(Выборка.ТоварНаименование)
			+ ПредставлениеСерий(СерииНомеклатуры);
		Иначе 
			ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(Выборка.ТоварНаименование) + СокрЛП(Выборка.Характеристика) ;
		КонецЕсли;
		
		ОбластьМакета.Параметры.ИнвентарныйНомер = Выборка.ПартияТМЦВЭксплуатации.ИнвентарныйНомер;
		
		ОбластьМакета.Параметры.СрокСлужбы = Выборка.ПартияТМЦВЭксплуатации.СрокЭксплуатации;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		ИтогоКоличество = ИтогоКоличество + Выборка.Количество;
		
	КонецЦикла;
	
	// Выводим итоги по документу
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ОбластьМакета.Параметры.ИтогоКоличество					= ИтогоКоличество;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Утиль");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	
	// Проверим, помещается ли подвал
	Если НЕ ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаТаблицы) Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьМБ8()

Функция СформироватьЗапросПоМатериалам(Шапка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Шапка.Ссылка); 
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МИНИМУМ(Материалы.НомерСтроки) КАК НомерСтроки,
	|	Материалы.Номенклатура,
	|	ВЫРАЗИТЬ(Материалы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	|	Материалы.Характеристика,
	|	Материалы.Номенклатура.ЕдиницаДляОтчетов КАК ЕдиницаИзмерения,
	|	Материалы.ФизическоеЛицо КАК ФизЛицо,
	|	СУММА(Материалы.Количество) КАК Количество,
	|	Материалы.Номенклатура.Код КАК НоменклатурныйНомер,
	|	Материалы.Номенклатура.ЕдиницаДляОтчетов.Представление КАК ЕдиницаИзмеренияНаименование,
	|	Материалы.Номенклатура.ЕдиницаДляОтчетов.Код КАК ЕдиницаИзмеренияКод,
	|	Материалы.ПартияТМЦВЭксплуатации.Дата КАК ДатаВводаВЭксплуатацию,
	|	Материалы.ПартияТМЦВЭксплуатации.Документ,
	|	Материалы.ПартияТМЦВЭксплуатации
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации.Товары КАК Материалы
	|ГДЕ
	|	Материалы.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	Материалы.Характеристика,
	|	Материалы.ФизическоеЛицо,
	|	Материалы.Номенклатура,
	|	Материалы.НомерСтроки,
	|	Материалы.Номенклатура.ЕдиницаДляОтчетов,
	|	Материалы.Количество,
	|	ВЫРАЗИТЬ(Материалы.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)),
	|	Материалы.Номенклатура.Код,
	|	Материалы.Номенклатура.ЕдиницаДляОтчетов.Представление,
	|	Материалы.Номенклатура.ЕдиницаДляОтчетов.Код,
	|	Материалы.ПартияТМЦВЭксплуатации.Дата,
	|	Материалы.ПартияТМЦВЭксплуатации.Документ,
	|	Материалы.ПартияТМЦВЭксплуатации" ;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Формирует описание серий и характеристик ТМЦ для печати
//
// Параметры
//  Выборка  – <ВыборкаИзРезультатаЗапроса > – Исходные данные
//
// Возвращаемое значение:
//   Строка - Описание серий и характеристик ТМЦ
//
Функция ПредставлениеСерий(Выборка) 
	
	// 4D:УПП для Беларуси, Дмитрий, 23.05.2010 16:51:56 
	// Немного оптимизируем для печатной формы
	// {
	Результат = "";
	
	Если ЗначениеЗаполнено(Выборка.Характеристика) Тогда
		Результат = Результат + Выборка.Характеристика;
		Результат = СтрЗаменить(Результат, "<>", "");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Выборка.Серия) Тогда
		Результат = ?(Результат = "(", Результат, Результат + "; ");
		Результат = Результат + Выборка.Серия;
		Результат = СтрЗаменить(Результат,  "(<>", "(");
		Результат = СтрЗаменить(Результат, "; <>",  "");
	КонецЕсли;
	
	Возврат ?(Результат = "", "", " " + Результат);
	// }
	// 4D
	
КонецФункции // ПредставлениеСерий()	
// }
// 4D

#КонецОбласти

#КонецОбласти

#КонецЕсли