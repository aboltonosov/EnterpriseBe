
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ = Документы.РегистрацияПрочихДоходов.ПустаяСсылка() Тогда
		
		// создается новый документ
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный, Месяц", 
		"Объект.Организация", "Объект.Ответственный", "Объект.ПериодРегистрации");
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		Если Не ЗначениеЗаполнено(Объект.ПериодРегистрации) Тогда
			Объект.ПериодРегистрации = ТекущаяДатаСеанса();
		КонецЕсли;
		
		Объект.ПланируемаяДатаВыплаты = НачалоДня(ТекущаяДатаСеанса()) + 86400;
		ЗаполнитьДанныеФормыПоОрганизации();
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	// Запомним дату документа, при смене месяца надо пересчитывать налоги и взносы.
	ДатаПрежняя = Объект.Дата;
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки".
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	СоответствиеДоступныхВычетовДоходам = УчетНДФЛ.ВычетыКДоходам(Год(ТекущийОбъект.Дата));
	КодДоходаНДФЛ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийОбъект.ВидПрочегоДохода, "КодДоходаНДФЛ");
	УстановитьСписокВыбораКодВычетаНДФЛ(Элементы.КодВычетаНДФЛ, КодДоходаНДФЛ, СоответствиеДоступныхВычетовДоходам);
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступностьСуммыВычета();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПриПолученииДанныхНаСервере();
	
	СохраняемыеЗначения = Новый Структура;
	СохраняемыеЗначения.Вставить("Исполнитель", ТекущийОбъект.Исполнитель);
	СохраняемыеЗначения.Вставить("ДолжностьИсполнителя", ТекущийОбъект.ДолжностьИсполнителя);
	
	ЗарплатаКадры.СохранитьЗначенияЗаполненияОтветственныхРаботников(ТекущийОбъект.Организация, СохраняемыеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ЗаписьДокумента", Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыРезультатыРасчетаНДФЛ" И Источник.ВладелецФормы = ЭтаФорма Тогда
		ОбновитьДанныеНДФЛНаСервере(Параметр);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбработатьИзменениеОрганизацииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ОбработатьИзменениеДатыДокументаНаСервере();
	ДатаПрежняя = Объект.Дата;
КонецПроцедуры

&НаКлиенте
Процедура ВидПрочегоДоходаПриИзменении(Элемент)
	
	ОбработатьИзменениеВидаПрочегоДоходаНаСервере();
	УстановитьДоступностьСуммыВычета();
	
КонецПроцедуры

&НаКлиенте
Процедура ПланируемаяДатаВыплатыПриИзменении(Элемент)
	
	РассчитатьНДФЛИВзносыВсем();
	
КонецПроцедуры

&НаКлиенте
Процедура КодВычетаНДФЛПриИзменении(Элемент)
	
	ОчиститьРезультатыВСтрокахТаблицы();
	УстановитьДоступностьСуммыВычета();
	РассчитатьНДФЛИВзносыВсем();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	Если ПодразделениеПрежнее <> Объект.Подразделение Тогда
		РассчитатьНДФЛИВзносыВсем();
	КонецЕсли;
	ПодразделениеПрежнее = Объект.Подразделение;
	
КонецПроцедуры


#Область РедактированиеМесяцаСтрокой

&НаКлиенте
Процедура ПериодРегистрацииПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой", Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой");
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой", Направление, Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#КонецОбласти


#Область ОбработчикиСобытийТаблицыФормыНачисленияУдержанияВзносы

&НаКлиенте
Процедура НачисленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ЗарплатаКадрыРасширенныйКлиент.ВыполнитьКомандуПросмотрСтраховыхВзносов(ЭтотОбъект, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	ПодробнееОРасчетеНДФЛ(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияФизическоеЛицоПриИзменении(Элемент)
	
	ДанныеСтроки = Элементы.НачисленияУдержанияВзносы.ТекущиеДанные;
	
	Если ДанныеСтроки.ФизическоеЛицо <> УдаляемоеФизическоеЛицо Тогда
		УдалитьДанныеУдаляемогоФизическогоЛица();
		УдаляемоеФизическоеЛицо = ДанныеСтроки.ФизическоеЛицо;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеСтроки.ФизическоеЛицо)
		И НЕ ДатаРожденияЗаполнена(ДанныеСтроки.ФизическоеЛицо)
		И Объект.ПланируемаяДатаВыплаты < УчетСтраховыхВзносовКлиентСервер.ДатаОбъединенияСтраховойИНакопительнойЧастейВзносовПФР() Тогда
		
		ТекстИсключения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='У %1 не заполнена дата рождения'"),
			ДанныеСтроки.ФизическоеЛицо);
		
		ДанныеСтроки.ФизическоеЛицо = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
		
		ВызватьИсключение ТекстИсключения;
	
	КонецЕсли;
	
	РассчитатьНДФЛиВзносыПоТекущейСтроке();
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияНачисленоПриИзменении(Элемент)
	
	РассчитатьНДФЛиВзносыПоТекущейСтроке();
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияСуммаВычетаПриИзменении(Элемент)
	
	РассчитатьНДФЛиВзносыПоТекущейСтроке();
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияУдержанияВзносыПередУдалением(Элемент, Отказ)
	
	Если Элементы.НачисленияУдержанияВзносы.ТекущиеДанные <> Неопределено Тогда
		УдаляемоеФизическоеЛицо = Элементы.НачисленияУдержанияВзносы.ТекущиеДанные.ФизическоеЛицо;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияУдержанияВзносыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Элементы.НачисленияУдержанияВзносы.ТекущиеДанные <> Неопределено Тогда
		
		Если НоваяСтрока И Копирование Тогда
			Элементы.НачисленияУдержанияВзносы.ТекущиеДанные.ФизическоеЛицо = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
		Иначе
			УдаляемоеФизическоеЛицо = Элементы.НачисленияУдержанияВзносы.ТекущиеДанные.ФизическоеЛицо;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияУдержанияВзносыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УдаляемоеФизическоеЛицо = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	НачисленияОбработкаВыбораНаСервере(ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияУдержанияВзносыПослеУдаления(Элемент)
	
	УдалитьДанныеУдаляемогоФизическогоЛица();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура ПодборПолучателей(Команда)
	
	РолиФизическихЛиц = Новый Массив;
	РолиФизическихЛиц.Добавить(ПредопределенноеЗначение("Перечисление.РолиФизическихЛиц.Сотрудник"));
	РолиФизическихЛиц.Добавить(ПредопределенноеЗначение("Перечисление.РолиФизическихЛиц.БывшийСотрудник"));
	РолиФизическихЛиц.Добавить(ПредопределенноеЗначение("Перечисление.РолиФизическихЛиц.ПрочийПолучательДоходов"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("АдресСпискаПодобранныхФизическихЛиц", АдресСпискаПодобранныхФизическихЛиц());
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация", Объект.Организация);
	СтруктураОтбора.Вставить("Роль", РолиФизическихЛиц);
	
	ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
	
	ОткрытьФорму("Справочник.ФизическиеЛица.ФормаВыбора", ПараметрыФормы, Элементы.НачисленияУдержанияВзносы);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПолучателей(Команда)
	
	Отказ = Ложь;
	
	Если Объект.ВидПрочегоДохода.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнен вид дохода.'"), , "Объект.ВидПрочегоДохода", , Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ПланируемаяДатаВыплаты) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не заполнена дата выплаты.'"), , "Объект.ПланируемаяДатаВыплаты", , Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗадаватьВопрос = Объект.НачисленияУдержанияВзносы.Количество() > 0;
	
	Если ЗадаватьВопрос Тогда
		
		ТекстВопроса = НСтр("ru = 'Таблица документа будет очищена. 
	                         |Продолжить?'");
		
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе 
		
		ЗаполнитьЗавершение(КодВозвратаДиалога.Да, Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура НачисленияОбработкаВыбораНаСервере(МассивФизическихЛиц)
	
	МассивРассчитываемыхПолучателей = Новый Массив();
	РассчитыватьНачисления = Ложь;
	
	Если Не Объект.ВидПрочегоДохода.Пустая() Тогда 
		
		Выборка = ВыборкаНачисленийПолучателямПрочегоДохода(МассивФизическихЛиц);
		РассчитыватьНачисления = ЗначениеЗаполнено(Выборка);
		
	КонецЕсли;

	Для каждого ФизическоеЛицо Из МассивФизическихЛиц Цикл
		
		СтруктураПоиска = Новый Структура("ФизическоеЛицо", ФизическоеЛицо);
		
		СтрокиНачислений = Объект.НачисленияУдержанияВзносы.НайтиСтроки(СтруктураПоиска);
		
		Если СтрокиНачислений.Количество() = 0 Тогда
						
			НоваяСтрока = Объект.НачисленияУдержанияВзносы.Добавить();
			НоваяСтрока.ФизическоеЛицо = ФизическоеЛицо;
			
			Если РассчитыватьНачисления Тогда
				
				Выборка.Сбросить();
				Если Выборка.НайтиСледующий(СтруктураПоиска) Тогда
					
					НоваяСтрока.Начислено = Выборка.Начислено;
					
					МассивРассчитываемыхПолучателей.Добавить(ФизическоеЛицо);

				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Не РассчитыватьНачисления Или Не ЗначениеЗаполнено(Объект.ПланируемаяДатаВыплаты) Тогда
		Возврат;
	КонецЕсли;
	
	Если РасчетНДФЛНарастающимИтогомСНачалаГода Тогда
		РассчитатьНДФЛИВзносыНаСервере(МассивРассчитываемыхПолучателей);
	Иначе
				
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидПрочегоДохода, "КодДоходаНДФЛ, КодДоходаСтраховыеВзносы");
		Результат = РасчетЗарплатыРасширенный.НДФЛИВзносыПоНеЗарплатнымДоходамФизическихЛиц(Объект, ЗначенияРеквизитов);
		
		Для Каждого ДанныеСтроки Из Объект.НачисленияУдержанияВзносы Цикл
			
			Если МассивРассчитываемыхПолучателей.Найти(ДанныеСтроки.ФизическоеЛицо) <> Неопределено Тогда 
				
				ЗаполнитьЗначенияСвойств(ДанныеСтроки, Результат.Получить(ДанныеСтроки.ФизическоеЛицо));
				ЗаполнитьКВыплатеПоСтроке(ЭтотОбъект, ДанныеСтроки);
				ЗаполнитьИтогВзносовПоСтроке(ДанныеСтроки);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ИтогВзносы = ИтогВзносы(Объект.НачисленияУдержанияВзносы);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДанныеУдаляемогоФизическогоЛица()
	
	Если ЗначениеЗаполнено(УдаляемоеФизическоеЛицо) Тогда
		
		УчетНДФЛКлиентСерверРасширенный.УдалитьДанныеНДФЛФизическоголица(Объект, УдаляемоеФизическоеЛицо);
		
		СтрокиФизическогоЛица = Объект.НачисленияУдержанияВзносы.НайтиСтроки(Новый Структура("ФизическоеЛицо", УдаляемоеФизическоеЛицо));
		Если СтрокиФизическогоЛица.Количество() > 0 Тогда
			РассчитатьНДФЛиВзносыВСтроке(СтрокиФизическогоЛица[0].ПолучитьИдентификатор());
		КонецЕсли;
		
		УдаляемоеФизическоеЛицо = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьНачисленияСотрудника(Сотрудники, СохранятьИсправления = Истина) Экспорт
	РассчитатьНДФЛИВзносыНаСервере(Сотрудники);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьСуммыВычета()

	ВычетПоНормативу = Объект.КодВычетаНДФЛ = УчетНДФЛКлиентПовтИсп.ВычетВПределахНормативовПоАвторскимВознаграждениям();
	СуммаВычетаНеРедактируется = ?(НЕ ЗначениеЗаполнено(Объект.КодВычетаНДФЛ), Истина, ВычетПоНормативу);
	Элементы.НачисленияСуммаВычета.ТолькоПросмотр = СуммаВычетаНеРедактируется Или РасчетНДФЛНарастающимИтогомСНачалаГода;

КонецПроцедуры

&НаКлиенте
Процедура ПодробнееОРасчетеНДФЛ(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя <> "НачисленияНДФЛ" И Поле.Имя <> "НачисленияСуммаВычета" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ФизическоеЛицо = Элементы.НачисленияУдержанияВзносы.ТекущиеДанные.ФизическоеЛицо;
	УчетНДФЛКлиент.ОткрытьФормуПодробнееОРасчетеНДФЛ(Объект.Организация, ЭтаФорма, Объект.ПериодРегистрации, ФизическоеЛицо, Истина);
	
КонецПроцедуры

&НаСервере
Функция НДФЛПодробнееНаСервере(ФизическиеЛица) Экспорт
	
	Если ТипЗнч(ФизическиеЛица) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		СписокФизическихЛиц = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическиеЛица);
	Иначе
		СписокФизическихЛиц = ФизическиеЛица;
	КонецЕсли;
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	НДФЛПодробнее = Новый Массив;
	НДФЛПодробнее.Добавить(ДокументОбъект.Ссылка);
	НДФЛПодробнее.Добавить(УчетНДФЛФормы.РегистрНалоговогоУчетаПоНДФЛ(ДокументОбъект, Модифицированность, СписокФизическихЛиц, Объект.ПериодРегистрации));
	
	Возврат НДФЛПодробнее;
	
КонецФункции

&НаСервереБезКонтекста
Функция НДФЛиВзносыПолучателяДохода(Знач Объект, Знач НомерСтроки)
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидПрочегоДохода, "КодДоходаНДФЛ, КодДоходаСтраховыеВзносы");
	Возврат РасчетЗарплатыРасширенный.НДФЛИВзносыПоНеЗарплатнымДоходамФизическихЛиц(Объект, ЗначенияРеквизитов, НомерСтроки);
	
КонецФункции

&НаСервере
Процедура РассчитатьНДФЛИВзносыВсем()
	
	Если Не ЗначениеЗаполнено(Объект.ПланируемаяДатаВыплаты) Или Объект.НачисленияУдержанияВзносы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если РасчетНДФЛНарастающимИтогомСНачалаГода Тогда
		РассчитатьНДФЛИВзносыНаСервере();
	Иначе
		
		Объект.НДФЛ.Очистить();
		Объект.ПримененныеВычетыНаДетейИИмущественные.Очистить();
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидПрочегоДохода, "КодДоходаНДФЛ, КодДоходаСтраховыеВзносы");
		Результат = РасчетЗарплатыРасширенный.НДФЛИВзносыПоНеЗарплатнымДоходамФизическихЛиц(Объект, ЗначенияРеквизитов);
		
		Для Каждого ДанныеСтроки Из Объект.НачисленияУдержанияВзносы Цикл
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, Результат.Получить(ДанныеСтроки.ФизическоеЛицо));
			ЗаполнитьКВыплатеПоСтроке(ЭтаФорма, ДанныеСтроки);
			ЗаполнитьИтогВзносовПоСтроке(ДанныеСтроки);
		КонецЦикла;
		
	КонецЕсли;
	
	ИтогВзносы = ИтогВзносы(Объект.НачисленияУдержанияВзносы);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьНДФЛиВзносыПоТекущейСтроке()
	
	РассчитатьНДФЛиВзносыВСтроке(Элементы.НачисленияУдержанияВзносы.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьНДФЛиВзносыВСтроке(ИдентификаторСтроки)
	
	ДанныеСтроки = Объект.НачисленияУдержанияВзносы.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если ДанныеСтроки.ФизическоеЛицо.Пустая() Или ДанныеСтроки.Начислено = 0 Или Объект.ВидПрочегоДохода.Пустая() Или Не ЗначениеЗаполнено(Объект.ПланируемаяДатаВыплаты) Тогда
		
		Если ДанныеСтроки.Начислено = 0 Тогда
			ДанныеСтроки.НДФЛ = 0;
			ДанныеСтроки.СуммаВычета = 0;
			ДанныеСтроки.КВыплате = 0;
			ДанныеСтроки.ИтогВзносыСтрока = 0;
			Для каждого ИмяПоля Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносовКлиентСервер.РассчитываемыеВзносы(Ложь,,Ложь)) Цикл
				ДанныеСтроки[ИмяПоля] = 0 	
			КонецЦикла;
			УчетНДФЛКлиентСерверРасширенный.УдалитьДанныеНДФЛФизическогоЛица(Объект, ДанныеСтроки.ФизическоеЛицо);
		КонецЕсли;
		
	Иначе
		
		Если РасчетНДФЛНарастающимИтогомСНачалаГода Тогда
			РассчитатьНДФЛИВзносыНаСервере(ДанныеСтроки.ФизическоеЛицо);
		Иначе
			
			Результат = НДФЛиВзносыПолучателяДохода(Объект, ДанныеСтроки.НомерСтроки);
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, Результат.Получить(ДанныеСтроки.ФизическоеЛицо));
			
			ЗаполнитьКВыплатеПоСтроке(ЭтаФорма, ДанныеСтроки);
			ЗаполнитьИтогВзносовПоСтроке(ДанныеСтроки);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИтогВзносы = ИтогВзносы(ЭтотОбъект.Объект.НачисленияУдержанияВзносы);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьИтогВзносовПоСтроке(ДанныеСтроки)
	
	СуммаВзносов = 0;
	Для каждого ИмяПоля Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносовКлиентСервер.РассчитываемыеВзносы(Ложь,,Ложь)) Цикл
		СуммаВзносов = СуммаВзносов + ДанныеСтроки[ИмяПоля];
	КонецЦикла;
	
	ДанныеСтроки.ИтогВзносыСтрока = СуммаВзносов;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИтогиКВыплате()
	
	Для Каждого ДанныеСтроки Из Объект.НачисленияУдержанияВзносы Цикл
		ЗаполнитьКВыплатеПоСтроке(ЭтаФорма, ДанныеСтроки);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьКВыплатеПоСтроке(Форма, ДанныеСтроки)
	
	Если Форма.РасчетНДФЛНарастающимИтогомСНачалаГода Тогда
		
		ДанныеСтроки.НДФЛ = 0;
		СтрокиНДФЛ = Форма.Объект.НДФЛ.НайтиСтроки(Новый Структура("ФизическоеЛицо", ДанныеСтроки.ФизическоеЛицо));
		Для каждого СтрокаНДФЛ Из СтрокиНДФЛ Цикл
			ДанныеСтроки.НДФЛ = ДанныеСтроки.НДФЛ + СтрокаНДФЛ.Налог;
		КонецЦикла;
		
	КонецЕсли;
	ДанныеСтроки.КВыплате = ДанныеСтроки.Начислено - ДанныеСтроки.НДФЛ;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИтогВзносы(КоллекцияСтрок)

	ИтогВзносы = 0;
	Для каждого Строка Из КоллекцияСтрок Цикл
		ИтогВзносы = ИтогВзносы + Строка.ИтогВзносыСтрока;
	КонецЦикла;
	
	Возврат ИтогВзносы;
	
КонецФункции

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()
	
	ПараметрыФО = Новый Структура("Организация, Период", Объект.Организация, НачалоДня(Объект.ПериодРегистрации));
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеОрганизацииНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	ЗаполнитьДанныеФормыПоОрганизации();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеДатыДокументаНаСервере()

	УстановитьФункциональныеОпцииФормы();
	Если НачалоМесяца(ДатаПрежняя) <> НачалоМесяца(Объект.Дата) Тогда
		РассчитатьНДФЛИВзносыВсем();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеВидаПрочегоДоходаНаСервере()
	
	Если Не ЗначениеЗаполнено(Объект.ВидПрочегоДохода) Тогда
		
		Объект.КодВычетаНДФЛ = Справочники.ВидыВычетовНДФЛ.ПустаяСсылка();
		
	Иначе
		
		КодДоходаНДФЛ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидПрочегоДохода, "КодДоходаНДФЛ");
		СоответствиеДоступныхВычетовДоходам = УчетНДФЛ.ВычетыКДоходам(Год(Объект.Дата));
		УстановитьСписокВыбораКодВычетаНДФЛ(Элементы.КодВычетаНДФЛ, КодДоходаНДФЛ, СоответствиеДоступныхВычетовДоходам);
		
		ОписаниеКодаДохода = УчетНДФЛВызовСервера.ПолучитьОписаниеКодаДохода(КодДоходаНДФЛ);
		Объект.КодВычетаНДФЛ = ОписаниеКодаДохода.ВычетПоУмолчанию;
		
	КонецЕсли;
	
	УстановитьРежимРасчетаНДФЛИОтображениеЭлементовРедактированияНДФЛ();
	
	ОчиститьРезультатыВСтрокахТаблицы();
	РассчитатьНДФЛИВзносыВсем();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьСписокВыбораКодВычетаНДФЛ(ЭлементКодВычетаНДФЛ, КодДоходаНДФЛ, СоответствиеДоступныхВычетовДоходам)

	МассивДоступныхВычетов = СоответствиеДоступныхВычетовДоходам.Получить(КодДоходаНДФЛ);
	Если МассивДоступныхВычетов = Неопределено Тогда
		ЭлементКодВычетаНДФЛ.СписокВыбора.Очистить();
	Иначе
		ЭлементКодВычетаНДФЛ.СписокВыбора.ЗагрузитьЗначения(МассивДоступныхВычетов);
	КонецЕсли;
	ЭлементКодВычетаНДФЛ.ТолькоПросмотр = (МассивДоступныхВычетов = Неопределено);

КонецПроцедуры

&НаСервере
Процедура ОчиститьРезультатыВСтрокахТаблицы()

	СтрокаИменаКолонок = "НДФЛ,СуммаВычета,КВыплате,ИтогВзносыСтрока,
	|ФФОМС,ФФОМСЕНВД,ТФОМС,ТФОМСЕНВД,ФСС,ФССЕНВД,ФССНесчастныеСлучаи,
	|ПФРНакопительная,ПФРНакопительнаяЕНВД,ПФРСтраховая,ПФРСтраховаяЕНВД,
	|ПФРПоСуммарномуТарифу,ПФРПоСуммарномуТарифуЕНВД,
	|ПФРДоПредельнойВеличины,ПФРДоПредельнойВеличиныЕНВД,
	|ПФРСПревышения,ПФРСПревышенияЕНВД";
	
	ИменаКолонок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаИменаКолонок,,,Истина);
	Для каждого Строка Из Объект.НачисленияУдержанияВзносы Цикл
		Для каждого ИмяКолонки Из ИменаКолонок Цикл
			Строка[ИмяКолонки] = 0;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ДатаРожденияЗаполнена(ФизическоеЛицо)
	
	ДатаРождения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФизическоеЛицо, "ДатаРождения");
	
	Возврат ЗначениеЗаполнено(ДатаРождения);
	
КонецФункции

&НаСервере
Процедура РассчитатьИтогиНаСервере()

	Для каждого Строка Из ЭтотОбъект.Объект.НачисленияУдержанияВзносы Цикл
		ЗаполнитьИтогВзносовПоСтроке(Строка);
		ЗаполнитьКВыплатеПоСтроке(ЭтаФорма, Строка);
	КонецЦикла;
	ИтогВзносы = ИтогВзносы(ЭтотОбъект.Объект.НачисленияУдержанияВзносы);

КонецПроцедуры

&НаСервере
Функция АдресСпискаПодобранныхФизическихЛиц()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.НачисленияУдержанияВзносы.Выгрузить(,"ФизическоеЛицо").ВыгрузитьКолонку("ФизическоеЛицо"), УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьДанныеФормыПоОрганизации()
	
	Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
		Возврат;
	КонецЕсли; 
	
	ЗапрашиваемыеЗначения = Новый Структура;
	ЗапрашиваемыеЗначения.Вставить("Организация", "Объект.Организация");
	
	ЗапрашиваемыеЗначения.Вставить("Исполнитель", "Объект.Исполнитель");
	ЗапрашиваемыеЗначения.Вставить("ДолжностьИсполнителя", "Объект.ДолжностьИсполнителя");
	
	ЗарплатаКадры.ЗаполнитьЗначенияВФорме(ЭтаФорма, ЗапрашиваемыеЗначения, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Организация"));	
	
КонецПроцедуры

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	ПодразделениеПрежнее = Объект.Подразделение;
	УстановитьРежимРасчетаНДФЛИОтображениеЭлементовРедактированияНДФЛ();
	
	Для каждого Строка Из ЭтотОбъект.Объект.НачисленияУдержанияВзносы Цикл
		ЗаполнитьИтогВзносовПоСтроке(Строка);
	КонецЦикла;
	ИтогВзносы = ИтогВзносы(ЭтотОбъект.Объект.НачисленияУдержанияВзносы);
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтотОбъект, "Объект.ПериодРегистрации", "ПериодРегистрацииСтрокой");
	
	УстановитьФункциональныеОпцииФормы();

	УстановитьВидимостьКомандыЗаполнитьПолучателей();
	
КонецПроцедуры

&НаСервере
Функция СведенияОбНДФЛ() Экспорт
	
	ТекущиеДанные = Объект.НачисленияУдержанияВзносы.НайтиПоИдентификатору(Элементы.НачисленияУдержанияВзносы.ТекущаяСтрока);
	
	Запрос = Новый Запрос;

	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	
	Запрос.УстановитьПараметр("ВидПрочегоДохода", Объект.ВидПрочегоДохода);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ТекущиеДанные.ФизическоеЛицо);
	Запрос.УстановитьПараметр("ПланируемаяДатаВыплаты", Объект.ПланируемаяДатаВыплаты);
	Запрос.УстановитьПараметр("КодВычета", Объект.КодВычетаНДФЛ);
	Запрос.УстановитьПараметр("Сумма", ТекущиеДанные.Начислено);
	Запрос.УстановитьПараметр("СуммаВычета", ТекущиеДанные.СуммаВычета);
	Запрос.УстановитьПараметр("НДФЛ", ТекущиеДанные.НДФЛ);
	Запрос.УстановитьПараметр("ПериодРегистрации", Объект.ПериодРегистрации);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	&ФизическоеЛицо КАК ФизическоеЛицо,
	               |	ВидыПрочихДоходовФизическихЛиц.Ссылка КАК Начисление,
	               |	ВидыПрочихДоходовФизическихЛиц.КодДоходаНДФЛ КАК КодДохода,
	               |	ВидыПрочихДоходовФизическихЛиц.КодДоходаНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	               |	&КодВычета КАК КодВычета,
	               |	&Сумма КАК Сумма,
	               |	&СуммаВычета КАК СуммаВычета,
	               |	&НДФЛ КАК НДФЛ,
	               |	НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ) КАК МесяцНалоговогоПериода,
	               |	&Организация КАК Организация,
	               |	&Подразделение КАК Подразделение,
	               |	&ПланируемаяДатаВыплаты КАК ПланируемаяДатаВыплаты
	               |ПОМЕСТИТЬ ВТДанныеДокумента
	               |ИЗ
	               |	Справочник.ВидыПрочихДоходовФизическихЛиц КАК ВидыПрочихДоходовФизическихЛиц
	               |ГДЕ
	               |	ВидыПрочихДоходовФизическихЛиц.Ссылка = &ВидПрочегоДохода";
				   
	Запрос.Выполнить();			   
	
	СведенияОДоходах = Документы.РегистрацияПрочихДоходов.ДанныеДляПроведениеНДФЛ(Запрос.МенеджерВременныхТаблиц);	
	АдресСведенийОбНДФЛ = УчетНДФЛФормыРасширенный.СведенияОбНДФЛ(ЭтотОбъект, ТекущиеДанные.ФизическоеЛицо);
	
	ДанныеОбНДФЛ = ПолучитьИзВременногоХранилища(АдресСведенийОбНДФЛ);
	ДанныеОбНДФЛ.Вставить("СведенияОДоходах", СведенияОДоходах);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеДокумента.*
	               |ИЗ
	               |	ВТДанныеДокумента КАК ДанныеДокумента
	               |ГДЕ
	               |	ДанныеДокумента.КодВычета <> ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)";
				   
	ВычетыКДоходам = Запрос.Выполнить().Выгрузить();
	ДанныеОбНДФЛ.Вставить("ВычетыКДоходам", ВычетыКДоходам);
	
	МаксимальныйИдентификаторСтрокиНДФЛ = УчетНДФЛФормы.МаксимальныйИдентификаторСтрокиНДФЛ(Объект.НДФЛ);
	ДанныеОбНДФЛ.Вставить("МаксимальныйИдентификаторСтрокиНДФЛ", МаксимальныйИдентификаторСтрокиНДФЛ);
	
	Возврат ПоместитьВоВременноеХранилище(ДанныеОбНДФЛ, ЭтаФорма.УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура РассчитатьНДФЛИВзносыНаСервере(ФизическоеЛицо = Неопределено)
	
	Если ФизическоеЛицо = Неопределено Тогда
		СписокФизическихЛиц = Неопределено;
	ИначеЕсли ТипЗнч(ФизическоеЛицо) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		СписокФизическихЛиц = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо);
	Иначе
		СписокФизическихЛиц = ФизическоеЛицо; 
	КонецЕсли;
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.РассчитатьНДФЛИВзносыДокумента(СписокФизическихЛиц);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	РассчитатьИтогиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРежимРасчетаНДФЛИОтображениеЭлементовРедактированияНДФЛ()
	
	РасчетНДФЛНарастающимИтогомСНачалаГода = УчетНДФЛФормыРасширенный.РасчетНДФЛНарастающимИтогомСНачалаГода(Объект.ВидПрочегоДохода);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"НачисленияНДФЛ",
		"ТолькоПросмотр",
		РасчетНДФЛНарастающимИтогомСНачалаГода);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеНДФЛНаСервере(АдресВременногоХранилища)
	
	Параметр = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	КонтролируемыеПоля = Новый Структура;
	ОписаниеДокумента = РасчетЗарплатыРасширенныйКлиентСервер.ОписаниеРасчетногоДокумента();
	
	ОтборСтрокФизическихЛиц = Новый Структура("ФизическоеЛицо", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Параметр.ФизическоеЛицо));
	РасчетЗарплатыРасширенный.ЗаменитьСтрокиНДФЛ(Объект.НДФЛ, Параметр.НДФЛ, Объект.ПримененныеВычетыНаДетейИИмущественные, Параметр.ПримененныеВычетыНаДетейИИмущественные, КонтролируемыеПоля, ОписаниеДокумента, ОтборСтрокФизическихЛиц, Ложь);
	
	Для Каждого СтрокаНачислений Из Параметр.Начисления Цикл
		СтрокиНачисленияУдержанияВзносы = Объект.НачисленияУдержанияВзносы.НайтиСтроки(Новый Структура("ФизическоеЛицо", СтрокаНачислений.ФизическоеЛицо));
		Если СтрокиНачисленияУдержанияВзносы.Количество() > 0 Тогда
			СтрокиНачисленияУдержанияВзносы[0].СуммаВычета = СтрокаНачислений.СуммаВычета;
		КонецЕсли; 
	КонецЦикла;
	
	Модифицированность = Истина;
	
	ЗаполнитьИтогиКВыплате();
	РассчитатьИтогиНаСервере();
	
КонецПроцедуры

#Область ПлановыеПрочиеДоходы

&НаСервере
Процедура УстановитьВидимостьКомандыЗаполнитьПолучателей()
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ПлановыеПрочиеДоходы") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("ПлановыеПрочиеДоходы");
		Модуль.УстановитьВидимостьКомандыЗаполнитьПолучателей(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

Функция ВыборкаНачисленийПолучателямПрочегоДохода(МассивФизическихЛиц = Неопределено)
	
	Выборка = Неопределено;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ПлановыеПрочиеДоходы") Тогда
		
		Модуль = ОбщегоНазначения.ОбщийМодуль("ПлановыеПрочиеДоходы");
		Выборка = Модуль.ВыборкаНачисленийПолучателямПрочегоДохода(ЭтотОбъект, МассивФизическихЛиц);
		
	КонецЕсли;

	Возврат Выборка;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПолучателейНаСервере() 
	
	Если Не ЗначениеЗаполнено(Объект.ВидПрочегоДохода) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.НачисленияУдержанияВзносы.Очистить();
	
	Выборка = ВыборкаНачисленийПолучателямПрочегоДохода();
	
	Если ЗначениеЗаполнено(Выборка) Тогда
		
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Объект.НачисленияУдержанияВзносы.Добавить(), Выборка);
		КонецЦикла;
		
	КонецЕсли;

	Модифицированность = Истина;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	ЗаполнитьПолучателейНаСервере();
	РассчитатьНДФЛИВзносыВсем();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗавершение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;
	
	ЗаполнитьНаСервере();
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти
