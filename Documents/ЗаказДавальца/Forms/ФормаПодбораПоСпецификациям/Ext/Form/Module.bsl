&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Продукция.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище.Продукция));
	
	Отбор = Новый Структура("Спецификация", Справочники.РесурсныеСпецификации.ПустаяСсылка());
	Если Продукция.НайтиСтроки(Отбор).Количество() = 0 Тогда
		Элементы.ГруппаИнформацияОбОшибках.Видимость = Ложь;
	КонецЕсли;
	
	СписокСпецификаций = Параметры.СписокСпецификаций;
	ПустаяСпецификация = СписокСпецификаций.Найти(Справочники.РесурсныеСпецификации.ПустаяСсылка());
	Если Не ПустаяСпецификация = Неопределено Тогда
		СписокСпецификаций.Удалить(ПустаяСпецификация);
	КонецЕсли;
	
	Элементы.РаспределенныеМатериалыСпецификация.СписокВыбора.ЗагрузитьЗначения(СписокСпецификаций);
	Элементы.ОтборПоСпецификации.СписокВыбора.ЗагрузитьЗначения(СписокСпецификаций);
	
	ЗаполнитьТаблицыДанных();
	
	УстановитьОтборМатериалов(Элементы, ОтборПоСпецификации);

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если Не ЗавершениеРаботы И ПеренестиВДокумент Тогда
		АдресТоваровВХранилище = ПоместитьТоварыВХранилище();
		ОповеститьОВыборе(Новый Структура("АдресТоваровВХранилище", АдресТоваровВХранилище));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Если ЗавершениеРаботы Тогда
			
			ТекстПредупреждения = НСтр("ru='Данные были изменены.
				|Перед завершением работы рекомендуется сохранить изменения,
				|иначе измененные данные будут утеряны.'");
			
			Возврат;
			
		Иначе
			
			Если Не ПеренестиВДокумент Тогда // Не нажата кнопка "Перенести в документ", простое закрытие
			
				Отказ = Истина;
				
				ТекстВопроса = НСтр("ru = 'Отказаться от переноса изменений и перейти в документ?'");
				
				СписокКнопок = Новый СписокЗначений;
				СписокКнопок.Добавить("Отказаться", НСтр("ru = 'Отказаться от переноса'"));
				СписокКнопок.Добавить("Перенести",  НСтр("ru = 'Перенести'"));
				СписокКнопок.Добавить("Отмена",     НСтр("ru = 'Отмена'"));
				
				ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект), ТекстВопроса, СписокКнопок);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = "Перенести" Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли РезультатВопроса = "Отказаться" Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборПоПродукцииПриИзменении(Элемент)
	
	УстановитьОтборМатериалов(Элементы, ОтборПоСпецификации);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоПродукцииОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОтборПоСпецификации = Неопределено;
	УстановитьОтборМатериалов(Элементы, ОтборПоСпецификации);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРаспределенныеМатериалы

&НаКлиенте
Процедура РаспределенныеМатериалыКоличествоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.РаспределенныеМатериалы.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределенныеМатериалыПослеУдаления(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределенныеМатериалыНоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.РаспределенныеМатериалы.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", 	ТекущаяСтрока.Характеристика);
	СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", ТекущаяСтрока.Упаковка);

	СтруктураДействий.Вставить("НоменклатураПриИзмененииПереопределяемый", Новый Структура("ИмяФормы, ИмяТабличнойЧасти",
		ЭтаФорма.ИмяФормы, "РаспределенныеМатериалы"));

	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	Если Не ТекущаяСтрока.ХарактеристикиИспользуются Тогда
		ТекущаяСтрока.Характеристика = НСтр("ru = '<характеристики не используются>'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределенныеМатериалыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущаяСтрока = Элементы.РаспределенныеМатериалы.ТекущиеДанные;
	
	Если НоваяСтрока Тогда
		
		ТекущаяСтрока.КодСтроки = 0;
		ТекущаяСтрока.Спецификация = ОтборПоСпецификации;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределенныеМатериалыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоМатериалам(Команда)
	
	РаспределенныеМатериалы.Сортировать("Номенклатура, Характеристика, Спецификация");
	
КонецПроцедуры

&НаКлиенте
Процедура СортироватьПоСпецификации(Команда)
	
	РаспределенныеМатериалы.Сортировать("Спецификация, Номенклатура, Характеристика");
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	НоменклатураСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтаФорма, 
																			 "РаспределенныеМатериалыХарактеристика",
																		     "РаспределенныеМатериалы.ХарактеристикиИспользуются");

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РаспределенныеМатериалыСпецификация.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОтборПоСпецификации");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;

	Элемент.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь);

КонецПроцедуры

#Область Прочее

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборМатериалов(Элементы, Спецификация)
	
	Если Не ЗначениеЗаполнено(Спецификация) Тогда // Все строки материалов.
		ОтборСтрок = Новый ФиксированнаяСтруктура;
	Иначе
		ОтборСтрок = Новый ФиксированнаяСтруктура("Спецификация", Спецификация);
	КонецЕсли;
	
	Элементы.РаспределенныеМатериалы.ОтборСтрок = ОтборСтрок;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыДанных()
	
	МассивДанных = Новый Массив;
	МассивКлючей = Новый Массив;
	
	Для Каждого СтрТЧ из Продукция Цикл
		
		МассивДанных.Добавить(Документы.ЗаказДавальца.ДанныеПоНоменклатуре(
			СтрТЧ,
			СтрТЧ.Спецификация,
			Параметры.Подразделение));
		
		МассивКлючей.Добавить(СтрТЧ.Спецификация);
		
	КонецЦикла;
	
	МатериалыПоСпецификации = РаспределенныеМатериалы.Выгрузить(,
			"Номенклатура, Характеристика, Спецификация, Упаковка, КоличествоУпаковок, ТипНоменклатуры, Количество");
	
	ПереченьДанных = Новый Массив;
	ПереченьДанных.Добавить("МатериалыИУслуги");
	
	ПараметрыСпецификаций = Новый Структура;
	ПараметрыСпецификаций.Вставить("ПереченьДанных",ПереченьДанных);
	ПараметрыСпецификаций.Вставить("МассивКлючей",	МассивКлючей);
	ПараметрыСпецификаций.Вставить("МассивДанных",	МассивДанных);
	ПараметрыСпецификаций.Вставить("Подразделение",	Параметры.Подразделение);
	
	Документы.ЗаказДавальца.МатериалыПоСпецификациям(ПараметрыСпецификаций, МатериалыПоСпецификации);
	
	Запрос = Новый Запрос;
	
#Область ТекстЗапроса
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВТ.Номенклатура,
	|	ВТ.Характеристика,
	|	ВТ.Количество,
	|	ВТ.КоличествоУпаковок,
	|	ВТ.Упаковка,
	|	ВТ.Спецификация
	|ПОМЕСТИТЬ ВтМатериалы
	|
	|ИЗ
	|	&Материалы КАК ВТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Номенклатура,
	|	ВТ.Характеристика,
	|	ВТ.Количество,
	|	ВТ.Упаковка,
	|	ВТ.Спецификация,
	|	ВТ.ТипНоменклатуры
	|ПОМЕСТИТЬ ВтСпецификации
	|
	|ИЗ
	|	&МатериалыПоСпецификации КАК ВТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МатериалыДок.Номенклатура,			МатериалыСпец.Номенклатура)			КАК Номенклатура,
	|	ЕСТЬNULL(МатериалыДок.Характеристика,		МатериалыСпец.Характеристика)		КАК Характеристика,
	|	ЕСТЬNULL(МатериалыДок.Упаковка,				МатериалыСпец.Упаковка)				КАК Упаковка,
	|	ЕСТЬNULL(МатериалыДок.Спецификация,			МатериалыСпец.Спецификация)			КАК Спецификация,
	|
	|	ЕСТЬNULL(МатериалыДок.КоличествоУпаковок,	0) КАК КоличествоУпаковок,
	|	ЕСТЬNULL(МатериалыДок.Количество,			0) КАК Количество,
	|	ЕСТЬNULL(МатериалыСпец.Количество,			0) КАК КоличествоПлан
	|
	|ПОМЕСТИТЬ ВтРаспределенныеМатериалы
	|
	|ИЗ
	|	ВтМатериалы КАК МатериалыДок
	|
	|	ПОЛНОЕ СОЕДИНЕНИЕ
	|		ВтСпецификации КАК МатериалыСпец
	|	ПО
	|		МатериалыДок.Спецификация		= МатериалыСпец.Спецификация
	|		И МатериалыДок.Номенклатура		= МатериалыСпец.Номенклатура
	|		И МатериалыДок.Характеристика	= МатериалыСпец.Характеристика
	|ГДЕ
	|	МатериалыСпец.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Материалы.Спецификация			КАК Спецификация,
	|	Материалы.Номенклатура			КАК Номенклатура,
	|	Материалы.Характеристика		КАК Характеристика,
	|	Материалы.Упаковка				КАК Упаковка,
	|	Материалы.Количество			КАК Количество,
	|	Материалы.КоличествоУпаковок	КАК КоличествоУпаковок,
	|	Материалы.КоличествоПлан		КАК КоличествоПлан
	|
	|ИЗ
	|	ВтРаспределенныеМатериалы КАК Материалы";
#КонецОбласти

	ТаблицаМатериалов = ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище.Материалы);
	ТаблицаМатериалов.Свернуть("Номенклатура, Характеристика, Упаковка, ТипНоменклатуры, Спецификация", 
		"КоличествоУпаковок, Количество");
	НайденныеСтроки = ТаблицаМатериалов.НайтиСтроки(Новый Структура("Спецификация", Справочники.РесурсныеСпецификации.ПустаяСсылка()));
	Если НайденныеСтроки.Количество() > 0 Тогда
		Для Каждого СтрокаКУдалению Из НайденныеСтроки Цикл
			ТаблицаМатериалов.Удалить(СтрокаКУдалению);
		КонецЦикла;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МатериалыПоСпецификации", МатериалыПоСпецификации);
	Запрос.УстановитьПараметр("Материалы", ТаблицаМатериалов);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = РаспределенныеМатериалы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		// Заполним признак характеристики используются для материалов
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", НоваяСтрока.Характеристика);
		СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
		
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, Неопределено);
		
	КонецЦикла;
	
	РаспределенныеМатериалы.Сортировать("Спецификация, Номенклатура, Характеристика");
	
КонецПроцедуры

&НаСервере
Функция ПоместитьТоварыВХранилище()
	
	Товары = РаспределенныеМатериалы.Выгрузить();
	АдресТоваровВХранилище = ПоместитьВоВременноеХранилище(Товары, УникальныйИдентификатор);
	
	Возврат АдресТоваровВХранилище;
	
КонецФункции

#Конецобласти

#КонецОбласти
