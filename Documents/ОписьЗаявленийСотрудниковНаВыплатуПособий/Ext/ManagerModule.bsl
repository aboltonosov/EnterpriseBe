#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьТабличнуюЧастьФизическихЛицИНаборыЗначенийДоступа() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОписьФизическиеЛица.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОписиСФизическимиЛицами
	|ИЗ
	|	Документ.ОписьЗаявленийСотрудниковНаВыплатуПособий.ФизическиеЛица КАК ОписьФизическиеЛица
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОписьЗаявления.Ссылка КАК Ссылка,
	|	ЗаявлениеСотрудника.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	Документ.ОписьЗаявленийСотрудниковНаВыплатуПособий.Заявления КАК ОписьЗаявления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК ЗаявлениеСотрудника
	|		ПО ОписьЗаявления.Заявление = ЗаявлениеСотрудника.Ссылка
	|ГДЕ
	|	НЕ ОписьЗаявления.Ссылка В
	|				(ВЫБРАТЬ
	|					ОписиСФизическимиЛицами.Ссылка
	|				ИЗ
	|					ОписиСФизическимиЛицами)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ФизическоеЛицо";
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
			Документ = Выборка.Ссылка.ПолучитьОбъект();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(Документ.ФизическиеЛица.Добавить(), Выборка, "ФизическоеЛицо");			
			КонецЦикла;
			Документ.ОбменДанными.Загрузка = Истина;
			Документ.ДополнительныеСвойства.Вставить("ЗаписатьНаборыЗначенийДоступа", Истина);
			Документ.Записать(РежимЗаписиДокумента.Запись);
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Печать описи заявлений сотрудников о выплате пособий.
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.Идентификатор = "ОписьЗаявленийСотрудниковНаВыплатуПособий";
	КомандаПечати.Представление = НСтр("ru = 'Печать описи заявлений сотрудников о выплате пособий'");
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	// Проверяем, нужно ли для макета СчетЗаказа формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОписьЗаявленийСотрудниковНаВыплатуПособий") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		"ОписьЗаявленийСотрудниковНаВыплатуПособий", Нстр("ru = 'Опись заявлений сотрудников на выплату пособий'"), ПечатьОписиЗаявленийСотрудниковНаВыплатуПособий(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
КонецПроцедуры

Функция ПечатьОписиЗаявленийСотрудниковНаВыплатуПособий(МассивОбъектов, ОбъектыПечати)
	// Создаем табличный документ и устанавливаем имя параметров печати.
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ОписьЗаявленийСотрудниковНаВыплатуПособий";
	ТабличныйДокумент.ПолеСлева = 0;
	ТабличныйДокумент.ПолеСправа = 0;
	ТабличныйДокумент.ПолеСнизу = 0;
	ТабличныйДокумент.ПолеСверху = 0;

	// Получаем запросом необходимые данные.
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОписьЗаявленийСотрудниковНаВыплатуПособий.Ссылка КАК Ссылка,
	|	ОписьЗаявленийСотрудниковНаВыплатуПособийЗаявления.Заявление,
	|	ОписьЗаявленийСотрудниковНаВыплатуПособийЗаявления.КраткоеНаименованиеДокументов КАК ДокументыОснования,
	|	ОписьЗаявленийСотрудниковНаВыплатуПособийЗаявления.КоличествоСтраниц,
	|	ОписьЗаявленийСотрудниковНаВыплатуПособий.НаименованиеОрганизации КАК НаименованиеОрганизации,
	|	ОписьЗаявленийСотрудниковНаВыплатуПособий.РегистрационныйНомерФСС КАК РегистрационныйНомерФСС,
	|	ОписьЗаявленийСотрудниковНаВыплатуПособий.КодПодчиненностиФСС КАК КодПодчиненностиФСС,
	|	ОписьЗаявленийСотрудниковНаВыплатуПособий.ИНН КАК ИНН,
	|	ОписьЗаявленийСотрудниковНаВыплатуПособий.КПП КАК КПП,
	|	ОписьЗаявленийСотрудниковНаВыплатуПособий.ДополнительныйКодФСС КАК ДополнительныйКодФСС,
	|	ОписьЗаявленийСотрудниковНаВыплатуПособий.НаименованиеТерриториальногоОрганаФСС КАК НаименованиеТерриториальногоОрганаФСС,
	|	ОписьЗаявленийСотрудниковНаВыплатуПособий.Телефон КАК Телефон,
	|	ОписьЗаявленийСотрудниковНаВыплатуПособий.ДолжностьУполномоченного КАК ДолжностьУполномоченного,
	|	ОписьЗаявленийСотрудниковНаВыплатуПособий.ФИОУполномоченного КАК ФИОУполномоченного,
	|	ВЫБОР
	|		КОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ВидПособия = ЗНАЧЕНИЕ(Перечисление.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам)
	|			ТОГДА 2
	|		КОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ВидПособия = ЗНАЧЕНИЕ(Перечисление.ПособияНазначаемыеФСС.ПособиеВставшимНаУчетВРанниеСроки)
	|			ТОГДА 3
	|		КОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ВидПособия = ЗНАЧЕНИЕ(Перечисление.ПособияНазначаемыеФСС.ЕдиновременноеПособиеПриРожденииРебенка)
	|			ТОГДА 4
	|		КОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ВидПособия = ЗНАЧЕНИЕ(Перечисление.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком)
	|			ТОГДА 5
	|		КОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ВидПособия = ЗНАЧЕНИЕ(Перечисление.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве)
	|			ТОГДА 6
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ВидПособия,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ФамилияЗаявителя,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ИмяЗаявителя,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ОтчествоЗаявителя
	|ИЗ
	|	Документ.ОписьЗаявленийСотрудниковНаВыплатуПособий КАК ОписьЗаявленийСотрудниковНаВыплатуПособий
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОписьЗаявленийСотрудниковНаВыплатуПособий.Заявления КАК ОписьЗаявленийСотрудниковНаВыплатуПособийЗаявления
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК ЗаявлениеСотрудникаНаВыплатуПособия
	|			ПО ОписьЗаявленийСотрудниковНаВыплатуПособийЗаявления.Заявление = ЗаявлениеСотрудникаНаВыплатуПособия.Ссылка
	|		ПО (ОписьЗаявленийСотрудниковНаВыплатуПособийЗаявления.Ссылка = ОписьЗаявленийСотрудниковНаВыплатуПособий.Ссылка)
	|ГДЕ
	|	ОписьЗаявленийСотрудниковНаВыплатуПособий.Ссылка В(&МассивОбъектов)
	|ИТОГИ
	|	МАКСИМУМ(НаименованиеОрганизации),
	|	МАКСИМУМ(РегистрационныйНомерФСС),
	|	МАКСИМУМ(КодПодчиненностиФСС),
	|	МАКСИМУМ(ИНН),
	|	МАКСИМУМ(КПП),
	|	МАКСИМУМ(ДополнительныйКодФСС),
	|	МАКСИМУМ(НаименованиеТерриториальногоОрганаФСС),
	|	МАКСИМУМ(Телефон),
	|	МАКСИМУМ(ДолжностьУполномоченного),
	|	МАКСИМУМ(ФИОУполномоченного)
	|ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока Выборка.Следующий() Цикл
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
						
		ВыведеноСтрок = 0;
		Макет  = Неопределено;
		
		ВыборкаПоЗаявлениям = Выборка.Выбрать();
		Пока ВыборкаПоЗаявлениям.Следующий() Цикл
			
			Если Не ЗначениеЗаполнено(ВыборкаПоЗаявлениям.Заявление) Тогда
				Продолжить;
			КонецЕсли;
			
			ВыведеноСтрок = (ВыведеноСтрок + 1) % 15;
			Если ВыведеноСтрок = 1 Тогда
				Если Макет <> Неопределено Тогда
					ТабличныйДокумент.Вывести(Макет);
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				Макет = МакетСЗаполненнымиШапкойИПодвалом(Выборка);
			КонецЕсли;
			
			НомерСтроки = ?(ВыведеноСтрок = 0, 15, ВыведеноСтрок);
			ПрефиксСтроки = "ФИО_" + Формат(НомерСтроки,"ЧЦ=2; ЧВН=") + "_";
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(ВыборкаПоЗаявлениям.ФамилияЗаявителя), Макет, ПрефиксСтроки, 20);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(ВыборкаПоЗаявлениям.ИмяЗаявителя), 	Макет, ПрефиксСтроки, 20, 21);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(ВыборкаПоЗаявлениям.ОтчествоЗаявителя),Макет, ПрефиксСтроки, 20, 41);
			
			Макет.Области["ВидВыплаты" + НомерСтроки].Текст = ВыборкаПоЗаявлениям.ВидПособия;
			Макет.Области["Документы_" + НомерСтроки].Текст = Лев(ВыборкаПоЗаявлениям.ДокументыОснования, 105);
			
			Если ВыборкаПоЗаявлениям.КоличествоСтраниц < 10 Тогда
				Макет.Области["Страниц" + НомерСтроки].Текст = "      " + ВыборкаПоЗаявлениям.КоличествоСтраниц;
			Иначе
				КоличествоСтраниц = Формат(ВыборкаПоЗаявлениям.КоличествоСтраниц, "ЧЦ=2");
				КоличествоСтраниц = Лев("    ", 2 - СтрДлина(КоличествоСтраниц)) + КоличествоСтраниц;
				Макет.Области["Страниц" + НомерСтроки].Текст = Лев(КоличествоСтраниц, 1) + "    " + Прав(КоличествоСтраниц, 1);
			КонецЕсли;
		КонецЦикла; 
		
		Если Макет = Неопределено Тогда
			Макет = МакетСЗаполненнымиШапкойИПодвалом(Выборка);
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(Макет);
		
		// В табличном документе необходимо задать имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции 

Функция МакетСЗаполненнымиШапкойИПодвалом(Выборка)
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОписьЗаявленийСотрудниковНаВыплатуПособий.ПФ_MXL_ОписьЗаявленийИДокументовВФСС_2012");
		
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.РегистрационныйНомерФСС, Макет, "РегистрационныйНомер_", 10);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.ДополнительныйКодФСС, Макет, "ДополнительныйКод_", 10);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.КодПодчиненностиФСС, Макет, "КодПодчиненности_", 5);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.ИНН, Макет, "ИНН_", 12);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Выборка.КПП, Макет, "КПП_", 9);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(ВРег(Выборка.НаименованиеОрганизации), Макет, "Страхователь_", 30);
	ДлиныСтрок = Новый Массив();
	ДлиныСтрок.Добавить(35);
	ДлиныСтрок.Добавить(39);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(ЗарплатаКадры.РазбитьСтрокуНаПодСтроки(ВРег(Выборка.НаименованиеТерриториальногоОрганаФСС), ДлиныСтрок), Макет, "Фонд_", 74);
	Телефон = СокрЛП(Выборка.Телефон);
	Если Лев(Телефон,3) = "+7 " Тогда
		Телефон = Сред(Телефон,4)
	ИначеЕсли Лев(Телефон,2) = "8 " Тогда
		Телефон = Сред(Телефон,3)
	КонецЕсли;
	Телефон = СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(Телефон,"(",""),")","")," ",""),"-",""),",","");
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Телефон, Макет, "ТелефонСоставителя_", 10);
	Макет.Параметры.ДолжностьРуководителя = "" + Выборка.ДолжностьУполномоченного;
	Макет.Параметры.ФИОРуководителя = "" + Выборка.ФИОУполномоченного;
	
	Возврат Макет;
	
КонецФункции

#КонецОбласти

#КонецЕсли
