#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	// 4D:ERP для Беларуси
	// ЭСЧФ
	// {
	// отключаем команды
	// }
	// 4D

КонецПроцедуры

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
// Возвращаемое значение:
//	 КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОснованииКорректировочныйСчетФактура(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураПолученный) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "ВводНаОснованииУТКлиент.КорректировочныйСчетФактура";
		КомандаСоздатьНаОсновании.Идентификатор = "КорректировочныйСчетФактура";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru = 'Корректировочный/исправительный счет-фактура'");
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
			
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
// Возвращаемое значение:
//	 КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетФактураПолученный) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.СчетФактураПолученный.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.СчетФактураПолученный);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуКарточкаПартииПоВидамНалогообложения(КомандыОтчетов);

КонецПроцедуры


// Функция находит счета-фактуры заданного документа.
//
// Параметры:
//	Основание - ДокументСсылка - Документ, для которого необходимо найти счет-фактуру;
//	Организация - СправочникСсылка.Организации - Организация, для которой формируется счет-фактура;
//	РеквизитыСчетФактуры - Структура - Возвращаемый. Данные счета-фактуры (Ссылка, Номер, ДатаСоставления, ВИностраннойВалюте);
//	Проведен - Булево - Поиск только проведенных счетов-фактур..
//
// Возвращаемое значение:
//	Массив - Массив найденных счетов-фактур.
//
Функция СчетаФактурыПоОснованию(Основание, Организация = Неопределено, РеквизитыСчетаФактуры = Неопределено, Проведен = Истина) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	ТаблицаОснований.Ссылка.Номер КАК Номер,
	|	ТаблицаОснований.Ссылка.Дата КАК Дата,
	|	ТаблицаОснований.Ссылка.ДатаСоставления КАК ДатаСоставления,
	|	ТаблицаОснований.Ссылка.НомерИсправления КАК НомерИсправления,
	|	ТаблицаОснований.Ссылка.ДатаИсправления КАК ДатаИсправления,
	|	ТаблицаОснований.Ссылка.Валюта КАК Валюта,
	|	ТаблицаОснований.Ссылка.Проведен КАК Проведен,
	|	ТаблицаОснований.Ссылка.Корректировочный КАК Корректировочный
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И ТаблицаОснований.ДокументОснование = &Основание
	|	И (ТаблицаОснований.Ссылка.Организация = &Организация
	|		ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОснований.Ссылка.НомерИсправления УБЫВ
	|");
	Запрос.УстановитьПараметр("Основание",   Основание);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Если Проведен Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПометкаУдаления = ЛОЖЬ", "Проведен");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РеквизитыСчетаФактуры = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		РеквизитыСчетаФактуры.Вставить(Колонка.Имя);
	КонецЦикла;
	
	ТаблицаСчетовФактур = Новый ТаблицаЗначений;
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТаблицаСчетовФактур = РезультатЗапроса.Выгрузить();
		ЗаполнитьЗначенияСвойств(РеквизитыСчетаФактуры, ТаблицаСчетовФактур[0]);
	КонецЕсли;
	
	Возврат ТаблицаСчетовФактур;
	
КонецФункции

// Помечает на удаление счет-фактуру, если:
// - организация счета-фактуры не соответствует указанной 
// - или если документ-основание помечен на удаление
//
// Параметры:
//	Основание		- Документ - документ-основание счета-фактуры
//	ПометкаУдаления - Булево - пометка удаления документа-основания
//	Организация		- СправочникСсылка.Организации - Организация, для которой формируется счет-фактура
//
Процедура ПроверитьРеквизитыСчетФактуры(Основание, ПометкаУдаления, Организация = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка
	|ПОМЕСТИТЬ СчетаФактуры
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактуры.Ссылка КАК Ссылка,
	|	СчетаФактуры.Ссылка.Организация КАК Организация,
	|	КОЛИЧЕСТВО(ТаблицаОснований.ДокументОснование) КАК КоличествоОснований
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|		ПО СчетаФактуры.Ссылка = ТаблицаОснований.Ссылка
	|ГДЕ
	|	НЕ ТаблицаОснований.Ссылка.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактуры.Ссылка
	|");
	Запрос.УстановитьПараметр("Основание", Основание);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если (Организация <> Неопределено И Выборка.Организация <> Организация)
		 ИЛИ ПометкаУдаления Тогда
			Если Выборка.КоличествоОснований = 1 Тогда			 
				ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
				ДокументОбъект.УстановитьПометкуУдаления(Истина);
			Иначе
				ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
				СтрокаКУдалению = ДокументОбъект.ДокументыОснования.Найти(Основание);
				ДокументОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
				ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает реквизиты исправляемого счета-фактуры.
//
// Параметры:
//	Основание		 - ДокументСсылка - документ-основание счета-фактуры
//	Организация		 - СправочникСсылка.Организации - Организация, для которой формируется счет-фактура
//
// Возвращаемое значение:
//	Структура - Реквизиты счета-фактуры
//
Функция ИсправляемыйСчетФактураПоОснованию(Ссылка, Основание, Организация = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИсправляемыйСчетФактура = Неопределено;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	&ДокументОснование КАК Ссылка
	|ПОМЕСТИТЬ ОснованияСчетаФактуры
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеКорректировок.ДокументОснование КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаПоступления КАК ДанныеКорректировок
	|ГДЕ
	|	ДанныеКорректировок.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеКорректировок.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.КорректировкаПоступления КАК ДанныеОснования
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаПоступления КАК ДанныеКорректировок
	|	ПО
	|		ДанныеКорректировок.ДокументОснование = ДанныеОснования.ДокументОснование
	|
	|ГДЕ
	|	ДанныеОснования.Ссылка = &ДокументОснование
	|;
	|////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураПолученный.Ссылка                        КАК Ссылка,
	|	СчетФактураПолученный.Валюта                        КАК Валюта,
	|	СчетФактураПолученный.Организация                   КАК Организация,
	|	СчетФактураПолученный.Контрагент                    КАК Контрагент,
	|	СчетФактураПолученный.КодВидаОперации               КАК КодВидаОперации,
	|	СчетФактураПолученный.Корректировочный              КАК Корректировочный,
	|	СчетФактураПолученный.Номер                         КАК НомерИсходногоДокумента,
	|	СчетФактураПолученный.Номер                         КАК Номер,
	|	СчетФактураПолученный.Подразделение                 КАК Подразделение,
	|	ВЫБОР КОГДА СчетФактураПолученный.Исправление ТОГДА
	|		ЕСТЬNULL(СчетФактураПолученный.СчетФактураОснование.ДатаСоставления, Неопределено)
	|	ИНАЧЕ
	|		СчетФактураПолученный.ДатаСоставления
	|	КОНЕЦ                                             КАК ДатаИсходногоДокумента,
	|	ВЫБОР КОГДА СчетФактураПолученный.Исправление ТОГДА
	|		ЕСТЬNULL(СчетФактураПолученный.СчетФактураОснование.ДатаСоставления, Неопределено)
	|	ИНАЧЕ
	|		СчетФактураПолученный.ДатаСоставления
	|	КОНЕЦ                                             КАК ДатаСоставления,
	|	ВЫБОР КОГДА СчетФактураПолученный.Исправление ТОГДА
	|		СчетФактураПолученный.НомерИсправления
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                             КАК НомерИсправленияИсходногоДокумента,
	|	ВЫБОР КОГДА СчетФактураПолученный.Исправление ТОГДА
	|		СчетФактураПолученный.Дата
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                             КАК ДатаИсправленияИсходногоДокумента,
	|	
	|	СчетФактураПолученный.ДокументыОснования.(
	|		ДокументОснование,
	|		ИсходныйДокумент,
	|		НомерИсходногоДокумента,
	|		ДатаИсходногоДокумента,
	|		НомерИсправленияИсходногоДокумента,
	|		ДатаИсправленияИсходногоДокумента
	|	) КАК ДокументыОснования
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйОснования
	|	ПО СчетФактураПолученный.Ссылка = СчетФактураПолученныйОснования.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОснованияСчетаФактуры КАК ОснованияСчетаФактуры
	|		ПО ОснованияСчетаФактуры.Ссылка = СчетФактураПолученныйОснования.ДокументОснование
	|
	|ГДЕ
	|	СчетФактураПолученный.Ссылка <> &Ссылка
	|	И (СчетФактураПолученный.Организация = &Организация
	|	ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
	|	И СчетФактураПолученный.Проведен
	|	И НЕ СчетФактураПолученный.ПометкаУдаления
	|	И НЕ СчетФактураПолученный.Исправление
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетФактураПолученный.Корректировочный УБЫВ,
	|	СчетФактураПолученный.МоментВремени УБЫВ
	|");
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РеквизитыСчетаФактуры = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		РеквизитыСчетаФактуры.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(РеквизитыСчетаФактуры, Выборка);
		ТаблицаОснований = Выборка.ДокументыОснования.Выгрузить();
		Если ТаблицаОснований.Найти(Основание,"ДокументОснование")=Неопределено Тогда
			
			ТаблицаОснований.Очистить();
			
			СтрокаОснования = ТаблицаОснований.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаОснования, Выборка);
			СтрокаОснования.ДокументОснование = Основание;
			Если Выборка.Корректировочный Тогда
				СтрокаОснования.ИсходныйДокумент = Выборка.Ссылка;
			КонецЕсли;
			
		КонецЕсли;
		РеквизитыСчетаФактуры.Вставить("ДокументыОснования", ТаблицаОснований);
		
	КонецЕсли;
	
	Возврат РеквизитыСчетаФактуры;
	
КонецФункции

// Получает реквизиты счета-фактуры.
//
// Параметры:
//	СчетФактура - ДокументСсылка.СчетФактураПолученный - Счет-фактура, данные которого необходимо получить.
//
// Возвращаемое значение:
//	Структура - Реквизиты счета-фактуры
//
Функция ДанныеСчетаФактуры(СчетФактура) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА СчетФактураПолученный.Исправление ТОГДА
	|		СчетФактураПолученный.СчетФактураОснование
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                               КАК СчетФактураОснование,
	|	СчетФактураПолученный.Валюта                        КАК Валюта,
	|	СчетФактураПолученный.Организация                   КАК Организация,
	|	СчетФактураПолученный.Контрагент                    КАК Контрагент,
	|	СчетФактураПолученный.КодВидаОперации               КАК КодВидаОперации,
	|	СчетФактураПолученный.Корректировочный              КАК Корректировочный,
	|	СчетФактураПолученный.Номер			                КАК Номер,
	|	СчетФактураПолученный.Дата                          КАК Дата,
	|	СчетФактураПолученный.ДатаСоставления               КАК ДатаСоставления,
	|	СчетФактураПолученный.Подразделение                 КАК Подразделение,
	|	СчетФактураПолученный.ДокументыОснования.(
	|		ДокументОснование,
	|		ИсходныйДокумент,
	|		НомерИсходногоДокумента,
	|		ДатаИсходногоДокумента,
	|		НомерИсправленияИсходногоДокумента,
	|		ДатаИсправленияИсходногоДокумента
	|	)                                                 КАК ДокументыОснования
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", СчетФактура);
	РезультатЗапроса = Запрос.Выполнить();
	
	СтруктураДанных = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		СтруктураДанных.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураДанных, Выборка);
		СтруктураДанных.Вставить("ДокументыОснования", Выборка.ДокументыОснования.Выгрузить());
	КонецЕсли;
	
	Возврат СтруктураДанных;
	
КонецФункции

// Определяет документы "Корректировка поступления" по переданному основанию, по которым требуется ввести счет-фактуру.
//
// Параметры:
//	Основание - ДокументСсылка - Основание корректировки
//
// Возвращаемое значение:
//	ТаблицаЗначений - Найденные документы корректировки и даты корректировки.
//
Функция КорректировочныеДокументыПоОснованию(Основание) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураПолученный.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_СчетаФактурыИсходные
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованияСчетаФактуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|	ПО СчетФактураПолученный.Ссылка = ОснованияСчетаФактуры.Ссылка
	|		И НЕ СчетФактураПолученный.Исправление
	|		И СчетФактураПолученный.Проведен
	|ГДЕ
	|	ОснованияСчетаФактуры.ДокументОснование = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаПоступления.Ссылка КАК Ссылка,
	|	КорректировкаПоступления.Дата КАК Дата
	|ИЗ
	|	ВТ_СчетаФактурыИсходные КАК СчетаФактурыИсходные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованияСчетаФактуры
	|			ПО СчетаФактурыИсходные.Ссылка = ОснованияСчетаФактуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК КорректировкаПоступления
	|			ПО ОснованияСчетаФактуры.ДокументОснование = КорректировкаПоступления.ДокументОснование
	|			И КорректировкаПоступления.ВидКорректировки В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяСчетФактура
	|			ПО (КорректировкаПоступления.Ссылка = ТребуетсяСчетФактура.Основание)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ");
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

// Приводит состояние проведения счета-фактуры в соответствие с документом-основанием
//
// Параметры:
//	Основание				- Документ - документ-основание счета-фактуры
//	Проведен 				- Булево - Состояние проведения документа-основания
//	ТребуетсяСчетФактура	- Булево - Потребность в наличии счета-фактуры для документа-основания
//
Процедура АктуализироватьСчетФактуру(Основание, Проведен, ТребуетсяСчетФактура = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОснований.Ссылка КАК Ссылка,
	|	НАЧАЛОПЕРИОДА(ТаблицаОснований.Ссылка.ДатаСоставления, ДЕНЬ) КАК ДатаСоставления,
	|	ТаблицаОснований.Ссылка.ДатаИсправления КАК ДатаИсправления
	|ПОМЕСТИТЬ СчетаФактуры
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|ГДЕ
	|	ТаблицаОснований.ДокументОснование = &Основание
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактуры.Ссылка КАК Ссылка,
	|	КОЛИЧЕСТВО(ТаблицаОснований.ДокументОснование) КАК КоличествоОснований
	|ИЗ
	|	СчетаФактуры КАК СчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|		ПО СчетаФактуры.Ссылка = ТаблицаОснований.Ссылка
	|ГДЕ
	|	НЕ ТаблицаОснований.Ссылка.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетаФактуры.Ссылка,
	|	СчетаФактуры.ДатаСоставления,
	|	СчетаФактуры.ДатаИсправления
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетаФактуры.ДатаСоставления,
	|	СчетаФактуры.ДатаИсправления
	|"
	;
	
	Запрос.УстановитьПараметр("Основание", Основание);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ДополнительныеСвойства.Вставить("АктуализацияДвижений", Истина);
		
		Если НЕ Проведен ИЛИ НЕ ТребуетсяСчетФактура Тогда
			Если Выборка.КоличествоОснований = 1 Тогда
				РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения;
			Иначе
				СтрокаКУдалению = ДокументОбъект.ДокументыОснования.Найти(Основание);
				ДокументОбъект.ДокументыОснования.Удалить(СтрокаКУдалению);
				РежимЗаписи = РежимЗаписиДокумента.Проведение;
			КонецЕсли;
		Иначе
			РежимЗаписи = РежимЗаписиДокумента.Проведение;
		КонецЕсли;
		
		Попытка
			ДокументОбъект.Записать(РежимЗаписи);
		Исключение
			ТекстОшибки = НСтр("ru='Не удалось записать %Документ%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%",       ДокументОбъект);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

//++ НЕ УТ

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//	Строка - текст запроса
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

//-- НЕ УТ

//Определяет параметры заполнения нового счета-фактуры, вводимого на основании существующего счета-фактуры.
//
// Параметры:
//	СчетФактура - ДокументСсылка.СчетФактураПолученный - Счет-фактура, на основании которого вводится счет-фактура.
//
// Возвращаемое значение:
//	Структура - структура со следующими свойствами:
//	* Основания - Массив - Документы-основания "Корректировка поступления" нового счета-фактуры
//	* ДатаКорректировки - Дата - Дата нового корректировочного счета-фактуры
//	* Корректировочный - Булево - Истина, указывает на необходимость создания корректировочного счета-фактуры.
//	* Исправление - Булево - Истина, указывает на необходимость создания исправительного счета-фактуры.
//
Функция ПараметрыЗаполненияПоСчетуФактуре(СчетФактура) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыЗаполнения = Новый Структура("Основания, ДатаКорректировки");
	ПараметрыЗаполнения.Вставить("Корректировочный", Ложь);
	ПараметрыЗаполнения.Вставить("Исправление", Ложь);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураПолученный.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованийКоррективочныхСФ
	|		ПО СчетФактураПолученный.Ссылка = ОснованийКоррективочныхСФ.ИсходныйДокумент
	|			И НЕ СчетФактураПолученный.Исправление
	|			И (ОснованийКоррективочныхСФ.Ссылка.Проведен)
	|ГДЕ
	|	СчетФактураПолученный.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СчетФактураПолученный.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованийКоррективочныхСФ
	|		ПО СчетФактураПолученный.СчетФактураОснование = ОснованийКоррективочныхСФ.ИсходныйДокумент
	|			И СчетФактураПолученный.Исправление
	|			И (ОснованийКоррективочныхСФ.Ссылка.Проведен)
	|ГДЕ
	|	СчетФактураПолученный.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(КорректировкаПоступления.ДокументОснование, ОснованияСчетаФактуры.ДокументОснование) КАК ДокументОснование
	|ПОМЕСТИТЬ ВТ_ДокументыОснования
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованияСчетаФактуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК КорректировкаПоступления
	|		ПО ОснованияСчетаФактуры.ДокументОснование = КорректировкаПоступления.Ссылка
	|ГДЕ
	|	ОснованияСчетаФактуры.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОснованияСчетаФактуры.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ИсходныеСчетаФактуры
	|ИЗ
	|	ВТ_ДокументыОснования КАК ВТ_ДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованияСчетаФактуры
	|		ПО ВТ_ДокументыОснования.ДокументОснование = ОснованияСчетаФактуры.ДокументОснование
	|			И ОснованияСчетаФактуры.Ссылка.Проведен
	|			И (НЕ ОснованияСчетаФактуры.Ссылка.Исправление)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОснованияСчетаФактуры.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ВТ_ОснованияИсходныхСФ
	|ИЗ
	|	ВТ_ИсходныеСчетаФактуры КАК ИсходныеСчетаФактуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованияСчетаФактуры
	|		ПО ИсходныеСчетаФактуры.Ссылка = ОснованияСчетаФактуры.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КорректировкаПоступления.Ссылка                КАК Ссылка,
	|	КорректировкаПоступления.Дата                  КАК Дата
	|ИЗ
	|	ВТ_ОснованияИсходныхСФ КАК ВТ_ОснованияИсходныхСФ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК КорректировкаПоступления
	|		ПО ВТ_ОснованияИсходныхСФ.ДокументОснование = КорректировкаПоступления.ДокументОснование
	|			И (КорректировкаПоступления.ВидКорректировки В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок), 
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяСчетФактура
	|		ПО (КорректировкаПоступления.Ссылка = ТребуетсяСчетФактура.Основание)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ");
	
	Запрос.УстановитьПараметр("Ссылка", СчетФактура);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если РезультатЗапроса[4].Пустой() Тогда
		
		Если РезультатЗапроса[0].Пустой() Тогда
			ПараметрыЗаполнения.Исправление = Истина;
		КонецЕсли;
		
	Иначе
		
		ТаблицаОснований = РезультатЗапроса[4].Выгрузить();
		ПараметрыЗаполнения.Основания = ТаблицаОснований.ВыгрузитьКолонку("Ссылка");
		ПараметрыЗаполнения.ДатаКорректировки = ТаблицаОснований[0].Дата;
		ПараметрыЗаполнения.Корректировочный = Истина;
		
	КонецЕсли;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

//Определяет необходимость ввода корректировочного счета-фактуры для документов-оснований счета-фактуры.
// Параметры:
//	СчетФактура - ДокументСсылка.СчетФактураПолученный - Счет-фактура, для которого определяется необходимость корректировки.
//	Исходный - Булево - Ложь - Исходный счет-фактура будет вычислен на основании переданного.
//
// Возвращаемое значение:
//	Булево - Истина - требуется создание корректировочного счета-фактуры.
//
Функция ТребуетсяСозданиеКорректировочного(СчетФактура, Исходный = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Исходный Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КорректировкаПоступления.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованияСчетаФактуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК КорректировкаПоступления
		|			ПО ОснованияСчетаФактуры.ДокументОснование = КорректировкаПоступления.ДокументОснование
		|			И КорректировкаПоступления.ВидКорректировки В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок))
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяСчетФактура
		|			ПО (КорректировкаПоступления.Ссылка = ТребуетсяСчетФактура.Основание)
		|ГДЕ
		|	ОснованияСчетаФактуры.Ссылка = &Ссылка";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(КорректировкаПоступления.ДокументОснование, ОснованияСчетаФактуры.ДокументОснование) КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_ДокументыОснования
		|ИЗ
		|	Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованияСчетаФактуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК КорректировкаПоступления
		|		ПО ОснованияСчетаФактуры.ДокументОснование = КорректировкаПоступления.Ссылка
		|ГДЕ
		|	ОснованияСчетаФактуры.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОснованияСчетаФактуры.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ИсходныеСчетаФактуры
		|ИЗ
		|	ВТ_ДокументыОснования КАК ВТ_ДокументыОснования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованияСчетаФактуры
		|		ПО ВТ_ДокументыОснования.ДокументОснование = ОснованияСчетаФактуры.ДокументОснование
		|			И ОснованияСчетаФактуры.Ссылка.Проведен
		|			И (НЕ ОснованияСчетаФактуры.Ссылка.Исправление)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОснованияСчетаФактуры.ДокументОснование КАК ДокументОснование
		|ПОМЕСТИТЬ ВТ_ОснованияИсходныхСФ
		|ИЗ
		|	ВТ_ИсходныеСчетаФактуры КАК ИсходныеСчетаФактуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК ОснованияСчетаФактуры
		|		ПО ИсходныеСчетаФактуры.Ссылка = ОснованияСчетаФактуры.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	КорректировкаПоступления.Ссылка                КАК Ссылка
		|ИЗ
		|	ВТ_ОснованияИсходныхСФ КАК ВТ_ОснованияИсходныхСФ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК КорректировкаПоступления
		|		ПО ВТ_ОснованияИсходныхСФ.ДокументОснование = КорректировкаПоступления.ДокументОснование
		|			И (КорректировкаПоступления.ВидКорректировки В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИсправлениеОшибок), 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон)))
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяСчетФактура
		|		ПО (КорректировкаПоступления.Ссылка = ТребуетсяСчетФактура.Основание)";
		
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", СчетФактура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой()
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;
	
	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
	//++ НЕ УТ
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ
	ТекстЗапросаТаблицаРеквизиты(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.ДатаСоставления         КАК Период,
	|	ДанныеДокумента.Дата                    КАК ДатаПолучения,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДатаЗаписиКнигиПокупок = ДАТАВРЕМЯ(1, 1, 1) ТОГДА
	|			ДанныеДокумента.Дата
	|		ИНАЧЕ
	|			ДанныеДокумента.ДатаЗаписиКнигиПокупок
	|	КОНЕЦ                                   КАК ПериодЗаписи,
	|	ДанныеДокумента.Организация             КАК Организация,
	|	ДанныеДокумента.Контрагент              КАК Контрагент,
	|	ДанныеДокумента.Корректировочный        КАК Корректировочный,
	|	ДанныеДокумента.Исправление             КАК Исправление,
	|	ДанныеДокумента.ПолученВЭлектронномВиде КАК ПолученВЭлектронномВиде,
	|	ДанныеДокумента.КодВидаОперации         КАК КодВидаОперации,
	|	ДанныеДокумента.КодВидаОперацииНаУменьшение КАК КодВидаОперацииНаУменьшение,
	|	ДанныеДокумента.Номер                   КАК Номер,
	|	ДанныеДокумента.НомерИсправления        КАК НомерИсправления,
	|	ДанныеДокумента.ДатаИсправления         КАК ДатаИсправления,
	|	ДанныеДокумента.Валюта                  КАК Валюта,
	|	ДанныеДокумента.СчетФактураОснование    КАК СчетФактураОснование,
	|	ДанныеДокумента.Подразделение           КАК Подразделение,
	|	ДанныеДокумента.Ответственный           КАК Ответственный,
	|	ДанныеДокумента.СоставленКомиссионеромОтИмениПродавца    КАК СоставленКомиссионеромОтИмениПродавца,
	|	ДанныеДокумента.СводныйКомиссионный     КАК СводныйКомиссионный,
	|	ДанныеДокумента.Проведен                КАК Проведен,
	// 4D:ERP для Беларуси, Дмитрий, 07.10.2017 14:44:41 
	// Серия в реестре документов
	// {
	|	ДанныеДокумента.СерияВходящегоДокумента       КАК СерияВходящегоДокумента,
	|	ДанныеДокумента.НомерВходящегоДокумента       КАК НомерВходящегоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента        КАК ДатаВходящегоДокумента,
	// }
	// 4D
	|	ДанныеДокумента.ПометкаУдаления         КАК ПометкаУдаления
	|ИЗ
	|	Документ.СчетФактураПолученный КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата            КАК Период,
	|	ДанныеДокумента.Дата            КАК ДатаПолучения,
	|	ДанныеДокумента.Дата            КАК ПериодЗаписи,
	|	ДанныеДокумента.Организация     КАК Организация,
	|	ДанныеДокумента.Организация     КАК Контрагент,
	|	ЛОЖЬ                            КАК Корректировочный,
	|	ЛОЖЬ                            КАК Исправление,
	|	ЛОЖЬ                            КАК ПолученВЭлектронномВиде,
	|	""03""                          КАК КодВидаОперации,
	|	""""                            КАК КодВидаОперацииНаУменьшение,
	|	ДанныеДокумента.Номер           КАК Номер,
	|	""""                            КАК НомерИсправления,
	|	ДАТАВРЕМЯ(1,1,1)                КАК ДатаИсправления,
	|	ДанныеДокумента.Валюта          КАК Валюта,
	|	ДАТАВРЕМЯ(1,1,1)                КАК СчетФактураОснование,
	|	ДанныеДокумента.Подразделение   КАК Подразделение,
	|	ДанныеДокумента.Менеджер        КАК Ответственный,
	|	ЛОЖЬ                            КАК СоставленКомиссионеромОтИмениПродавца,
	|	ЛОЖЬ                            КАК СводныйКомиссионный,
	|	ДанныеДокумента.Проведен        КАК Проведен,
	// 4D:ERP для Беларуси, Дмитрий, 07.10.2017 14:44:41 
	// Серия в реестре документов
	// {
	|	ДанныеДокумента.СерияВходящегоДокумента КАК СерияВходящегоДокумента,
	|	ДанныеДокумента.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента  КАК ДатаВходящегоДокумента,
	// }
	// 4D
	|	ДанныеДокумента.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	КодВидаОперацииКомиссия = УчетНДСПереопределяемый.КодВидаОперацииКомиссия(Реквизиты.КодВидаОперации, Реквизиты.Период);
	
	Запрос.УстановитьПараметр("Период",                         Реквизиты.Период);
	Запрос.УстановитьПараметр("ПериодЗаписи",                   Реквизиты.ПериодЗаписи);
	Запрос.УстановитьПараметр("ДатаПолучения",                  Реквизиты.ДатаПолучения);
	Запрос.УстановитьПараметр("Организация",                    Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент",                     Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Корректировочный",               Реквизиты.Корректировочный);
	Запрос.УстановитьПараметр("Исправление",                    Реквизиты.Исправление);
	Запрос.УстановитьПараметр("ПолученВЭлектронномВиде",      ?(Реквизиты.ПолученВЭлектронномВиде, 2, 1));
	Запрос.УстановитьПараметр("КодВидаОперации",                Реквизиты.КодВидаОперации);
	Запрос.УстановитьПараметр("КодВидаОперацииНаУменьшение",    Реквизиты.КодВидаОперацииНаУменьшение);
	Запрос.УстановитьПараметр("КодВидаОперацииКомиссия",        КодВидаОперацииКомиссия);
	Запрос.УстановитьПараметр("Номер",                          Реквизиты.Номер);
	Запрос.УстановитьПараметр("НомерИсправления",               Реквизиты.НомерИсправления);
	Запрос.УстановитьПараметр("ДатаИсправления",                Реквизиты.ДатаИсправления);
	Запрос.УстановитьПараметр("Валюта",                         Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаСчетаФактуры",             Реквизиты.Валюта);
	Запрос.УстановитьПараметр("СчетФактураОснование",           Реквизиты.СчетФактураОснование);
	Запрос.УстановитьПараметр("Подразделение",                  Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Ответственный",                  Реквизиты.Ответственный);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("СоставленКомиссионеромОтИмениПродавца", Реквизиты.СоставленКомиссионеромОтИмениПродавца);
	Запрос.УстановитьПараметр("СводныйКомиссионный",            Реквизиты.СводныйКомиссионный);
	//++ НЕ УТ
	Запрос.УстановитьПараметр("ПустойСчет",                     ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	//-- НЕ УТ
	Запрос.УстановитьПараметр("Проведен",                       Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления",                Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("ИдентификаторМетаданных",        ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураПолученный"));
	
	ИнформацияПоИсправлению = "";
	Если ЗначениеЗаполнено(Реквизиты.ДатаИсправления)
		И ЗначениеЗаполнено(Реквизиты.НомерИсправления) Тогда
		Если Реквизиты.Исправление Тогда
			ИнформацияПоИсправлению = НСтр("ru='Исправление %НомерИсправления от %ДатаИсправления'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		КонецЕсли;
		Если Реквизиты.Корректировочный Тогда
			ИнформацияПоИсправлению = НСтр("ru='Исправление %НомерИсправления от %ДатаИсправления (корректировочный)'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		КонецЕсли;
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%НомерИсправления", СокрЛП(Реквизиты.НомерИсправления));
		ИнформацияПоИсправлению = СтрЗаменить(ИнформацияПоИсправлению, "%ДатаИсправления", Реквизиты.ДатаИсправления);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИнформацияПоИсправлению", ИнформацияПоИсправлению);
	
	// 4D:ERP для Беларуси, Дмитрий, 07.10.2017 13:38:32 
	// Серия в реестре документов
	// {
	Запрос.УстановитьПараметр("СерияВходящегоДокумента",       Реквизиты.СерияВходящегоДокумента);
	Запрос.УстановитьПараметр("НомерВходящегоДокумента",       Реквизиты.НомерВходящегоДокумента);
	Запрос.УстановитьПараметр("ДатаВходящегоДокумента",        Реквизиты.ДатаВходящегоДокумента);
	// }
	// 4D

КонецПроцедуры

Функция ТекстЗапросаВтСторнируемыеКорректировки(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтСторнируемыеКорректировки";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Документы.ДокументОснование КАК СторнируемаяКорректировка
	|ПОМЕСТИТЬ ВтСторнируемыеКорректировки
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактура
	|			ПО Документы.Ссылка = СчетФактура.Ссылка
	|ГДЕ
	|	&Исправление
	|	И &Корректировочный
	|	И СчетФактура.Ссылка <> &Ссылка
	|	И СчетФактура.Номер ПОДОБНО &Номер
	|	И Документы.ДокументОснование ССЫЛКА Документ.КорректировкаПоступления
	|	И НАЧАЛОПЕРИОДА(СчетФактура.ДатаСоставления, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|	И СчетФактура.Корректировочный
	|	И НЕ СчетФактура.Исправление
	|	И СчетФактура.Проведен";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтДокументыОснования(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтДокументыОснования";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтСторнируемыеКорректировки", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСторнируемыеКорректировки(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &Корректировочный И &Исправление
	|			ТОГДА ВложенныйЗапрос.ДокументОснование
	|		КОГДА &Корректировочный И НЕ &Исправление
	|			ТОГДА ДокументыОснования.ДокументОснование
	|		ИНАЧЕ
	|			ЕСТЬNULL(КорректировкаПоступления.ДокументОснование,ДокументыОснования.ДокументОснование)
	|	КОНЕЦ                                                             	КАК КорректируемыйДокумент,
	|	ДокументыОснования.ДокументОснование                              	КАК ДокументОснование,
	|	ДокументыОснования.ДокументОснование.Дата                         	КАК ДатаДокументаОснования,
	|	КорректировкаПоступления.ДокументОснование.ЗакупкаПодДеятельность	КАК ЗакупкаПодДеятельность,
	|	ДокументыОснования.НомерИсходногоДокумента     						КАК НомерИсходногоДокумента,
	|	ДокументыОснования.ДатаИсходногоДокумента             				КАК ДатаИсходногоДокумента,
	|	ДокументыОснования.НомерИсправленияИсходногоДокумента 				КАК НомерИсправленияИсходногоДокумента,
	|	ДокументыОснования.ДатаИсправленияИсходногоДокумента  				КАК ДатаИсправленияИсходногоДокумента
	|ПОМЕСТИТЬ ВтДокументыОснования
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК КорректировкаПоступления
	|			ПО ДокументыОснования.ДокументОснование = КорректировкаПоступления.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				СторнируемыеКорректировки.СторнируемаяКорректировка КАК ДокументОснование
	|			ИЗ
	|				ВтСторнируемыеКорректировки КАК СторнируемыеКорректировки
	|			) КАК ВложенныйЗапрос
	|				ПО (ИСТИНА)
	|ГДЕ
	|	ДокументыОснования.Ссылка = &Ссылка
	|	И &ПериодЗаписи <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументВозврата.Ссылка   КАК КорректируемыйДокумент,
	|	ДокументВозврата.Ссылка   КАК ДокументОснование,
	|	ДокументВозврата.Дата     КАК ДатаДокументаОснования,
	|	NULL                      КАК ЗакупкаПодДеятельность,
	|   NULL,
	|   NULL,
	|   NULL,
	|   NULL
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ДокументВозврата
	|ГДЕ
	|	ДокументВозврата.Ссылка = &Ссылка
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;

КонецФункции

Процедура УстановитьПараметрВалютаОснования(Запрос)
	
	Если Запрос.Параметры.Свойство("ВалютаОснования") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Запрос.Параметры.Ссылка) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
		ВалютаОснования	= Запрос.Параметры.Валюта;
	ИначеЕсли Запрос.Параметры.Ссылка.ДокументыОснования.Количество() Тогда
		ДокументОснование = Запрос.Параметры.Ссылка.ДокументыОснования[0].ДокументОснование;
		ВалютаОснования	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "Валюта");
	Иначе
		ВалютаОснования	= Справочники.Валюты.ПустаяСсылка();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВалютаОснования", ВалютаОснования);
	
КонецПроцедуры

Процедура УстановитьПараметрКоэффициентПересчетаВВалютуРегл(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПараметрВалютаОснования(Запрос);

	Коэффициенты = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
			Запрос.Параметры.ВалютаОснования,
			Запрос.Параметры.ВалютаОснования,
			Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Функция ТекстЗапросаВтТаблицаСуммДокументов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаСуммДокументов";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДокументыОснования", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДокументыОснования(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрВалютаОснования(Запрос);
	УстановитьПараметрКоэффициентПересчетаВВалютуРегл(Запрос);
	
#Область ТекстПоступлениеУслугПрочихАктивов
	ТекстПоступлениеУслугПрочихАктивов ="
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Статьи.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)) КАК ВидЦенности,
	|	ТаблицаРасходы.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаРасходы.СуммаСНДС - ТаблицаРасходы.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасходы.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаРасходы.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасходы.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаПоСчетуФактуреЖурнал,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаРасходы.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасходы.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДСЖурнал,
	|	ДокументыОснования.ДокументОснование КАК Основание,
	|	NULL КАК СчетФактураВыданный,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Статьи.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В
	|		  (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|		  И ЕСТЬNULL(Статьи.ВариантРаспределенияРасходов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		  И ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|		КОГДА ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|		ИНАЧЕ Документ.ЗакупкаПодДеятельность
	|	КОНЕЦ                           КАК ЗакупкаПодДеятельность,
	|	ЛОЖЬ КАК ПрошлыеКорректировки,
	|	Документ.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ЛОЖЬ КАК ВозвратКомиссионногоТовара,
	|	"""" КАК КодВидаОперации
	|ПОМЕСТИТЬ ВтТаблицаСуммДокументов
	|ИЗ
	|	Документ.ПоступлениеУслугПрочихАктивов.Расходы КАК ТаблицаРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеУслугПрочихАктивов КАК Документ
	|			ПО ТаблицаРасходы.Ссылка = Документ.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|			ПО ТаблицаРасходы.Ссылка = ДокументыОснования.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|			ПО ТаблицаРасходы.СтатьяРасходов = Статьи.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|			ПО ТаблицаРасходы.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|				И ТаблицаРасходы.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|";
#КонецОбласти
	
#Область ТекстВводОстатковСобственныхТоваров
	ТекстВводОстатковСобственныхТоваров ="
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)),
	|	ТаблицаТовары.СтавкаНДС,
	|	ВЫБОР 
	|		КОГДА (&ПериодЗаписи >= КОНЕЦПЕРИОДА(Операция.Дата, МЕСЯЦ) 
	|					ИЛИ Операция.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию))
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаБезНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР 
	|		КОГДА (&ПериодЗаписи >= КОНЕЦПЕРИОДА(Операция.Дата, МЕСЯЦ) 
	|					ИЛИ Операция.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию))
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ВалютаСчетаФактуры = &ВалютаОснования ТОГДА
	|		ТаблицаТовары.СуммаБезНДС + ТаблицаТовары.СуммаНДС
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ТаблицаТовары.СуммаБезНДС + ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &ВалютаСчетаФактуры = &ВалютаОснования ТОГДА
	|		ТаблицаТовары.СуммаНДС
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ,
	|	ДокументыОснования.ДокументОснование,
	|	NULL КАК СчетФактураВыданный,
	|	Операция.НалогообложениеНДС КАК ЗакупкаПодДеятельность,
	|	ЛОЖЬ КАК ПрошлыеКорректировки,
	|	Операция.НалогообложениеНДС,
	|	ЛОЖЬ,
	|	""""
	|ИЗ
	|	Документ.ВводОстатков КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтДокументыОснования КАК ДокументыОснования
	|	ПО
	|		Операция.Ссылка = ДокументыОснования.ДокументОснование
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|	ПО
	|		Операция.Ссылка = ТаблицаТовары.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ТаблицаТовары.Номенклатура.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|
	|ГДЕ
	|	Операция.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
	|";
#КонецОбласти
	
#Область ТекстПоступлениеТоваровУслуг
	ТекстПоступлениеТоваровУслуг ="
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|														    ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|		ТОГДА
	|			ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|	ИНАЧЕ
	|		ЕСТЬNULL(Статьи.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги))
	|	КОНЕЦ КАК ВидЦенности,
	|	ТаблицаТовары.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаТовары.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаТовары.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ДокументыОснования.ДокументОснование,
	|	NULL КАК СчетФактураВыданный,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Статьи.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В
	|		  (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|		  И ЕСТЬNULL(Статьи.ВариантРаспределенияРасходов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		  И ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|		КОГДА ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|		ИНАЧЕ ТаблицаТовары.Ссылка.ЗакупкаПодДеятельность
	|	КОНЕЦ  КАК ЗакупкаПодДеятельность,
	|	ЛОЖЬ КАК ПрошлыеКорректировки,
	|	ТаблицаТовары.Ссылка.НалогообложениеНДС,
	|	ЛОЖЬ,
	|	""""
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|			ПО ТаблицаТовары.Ссылка = ДокументыОснования.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ТаблицаТовары.Номенклатура.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|			ПО ТаблицаТовары.СтатьяРасходов = Статьи.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|			ПО ТаблицаТовары.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|				И ТаблицаТовары.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаТовары.Ссылка.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет))
	|	И (ВЫБОР
	|		КОГДА ТаблицаТовары.Ссылка.ВернутьМногооборотнуюТару
	|			ТОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИНАЧЕ
	|			ИСТИНА
	|		КОНЕЦ)
	|
	|";
#КонецОбласти
	
#Область ТекстВозвратТоваровОтКлиента
	ТекстВозвратТоваровОтКлиента ="
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	ТаблицаВидыЗапасов.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|						ТОГДА ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|						ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.Ссылка.ПокупательНеПлательщикНДС
	|			ТОГДА ТаблицаВидыЗапасов.ДокументРеализации
	|		ИНАЧЕ ДокументыОснования.ДокументОснование
	|	КОНЕЦ,
	|	СчетФактураВыданный.Ссылка КАК СчетФактураВыданный,
	|	ТаблицаВидыЗапасов.Ссылка.НалогообложениеНДС,
	|	ЛОЖЬ КАК ПрошлыеКорректировки,
	|	ТаблицаВидыЗапасов.Ссылка.НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.Ссылка.ПокупательНеПлательщикНДС
	|			ТОГДА ""16""
	|		ИНАЧЕ """"
	|	КОНЕЦ
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВтДокументыОснования КАК ДокументыОснования
	|	ПО 
	|		ТаблицаВидыЗапасов.Ссылка = ДокументыОснования.ДокументОснование
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ТаблицаВидыЗапасов.ВидЗапасов.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО 
	|		ТаблицаВидыЗапасов.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И ТаблицаВидыЗапасов.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданный
	|	ПО 
	|		ТаблицаВидыЗапасов.ДокументРеализации = СчетФактураВыданный.ДокументОснование
	|		И ТаблицаВидыЗапасов.Ссылка.ПокупательНеПлательщикНДС
	|		И СчетФактураВыданный.Ссылка.Проведен
	|		И НЕ СчетФактураВыданный.Ссылка.Корректировочный
	|		И НЕ СчетФактураВыданный.Ссылка.Исправление
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента)
	|	И (НЕ ТаблицаВидыЗапасов.Ссылка.ПокупательНеПлательщикНДС ИЛИ СчетФактураВыданный.Ссылка ЕСТЬ НЕ NULL)
	|	И (ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.Ссылка.ВозвратПереданнойМногооборотнойТары
	|			ТОГДА Аналитика.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИНАЧЕ
	|			ИСТИНА
	|		КОНЕЦ)
	|
	|";
#КонецОбласти
	
#Область ТекстОтчетКомиссионераВознаграждение
	ТекстОтчетКомиссионераВознаграждение = "
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	ОтчетКомиссионера.СтавкаНДСВознаграждения,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ОтчетКомиссионера.СуммаВознаграждения - ОтчетКомиссионера.СуммаНДСВознаграждения) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ОтчетКомиссионера.СуммаНДСВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ОтчетКомиссионера.СуммаВознаграждения
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ОтчетКомиссионера.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ОтчетКомиссионера.СуммаНДСВознаграждения
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ОтчетКомиссионера.СуммаНДСВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ДокументыОснования.ДокументОснование,
	|	NULL КАК СчетФактураВыданный,
	|	ОтчетКомиссионера.НалогообложениеНДС,
	|	ЛОЖЬ КАК ПрошлыеКорректировки,
	|	ВЫБОР
	|		КОГДА ОтчетКомиссионера.СтавкаНДСВознаграждения = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	""""
	|ИЗ
	|	Документ.ОтчетКомиссионера КАК ОтчетКомиссионера
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|			ПО ОтчетКомиссионера.Ссылка = ДокументыОснования.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|			ПО ОтчетКомиссионера.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|				И СуммыДокументовВВалютеРегл.ИдентификаторСтроки = """"
	|ГДЕ
	|	ОтчетКомиссионера.СуммаВознаграждения <> 0
	|
	|";
#КонецОбласти
	
#Область ТекстПередачаТоваровМеждуОрганизациямиВидыЗапасов
	ТекстПередачаТоваровМеждуОрганизациямиВидыЗапасов = "
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)),
	|	ТаблицаВидыЗапасов.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ДокументыОснования.ДокументОснование,
	|	NULL КАК СчетФактураВыданный,
	|	ТаблицаВидыЗапасов.Ссылка.ПередачаПодДеятельность,
	|	ЛОЖЬ КАК ПрошлыеКорректировки,
	|	ТаблицаВидыЗапасов.Ссылка.НалогообложениеНДС,
	|	ЛОЖЬ,
	|	""""
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|			ПО ТаблицаВидыЗапасов.Ссылка = ДокументыОснования.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ТаблицаВидыЗапасов.ВидЗапасов.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|			ПО ТаблицаВидыЗапасов.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|				И ТаблицаВидыЗапасов.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка.РасчетыЧерезОтдельногоКонтрагента
	|	И ТаблицаВидыЗапасов.Ссылка.ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|
	|";
#КонецОбласти
	
#Область ТекстПередачаТоваровМеждуОрганизациямиТовары
	ТекстПередачаТоваровМеждуОрганизациямиТовары = "
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|															  ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)) ТОГДА
	|		ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|	ИНАЧЕ
	|		ЕСТЬNULL(Статьи.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги))
	|	КОНЕЦ КАК ВидЦенности,
	|	ТаблицаТовары.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаТовары.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаТовары.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ДокументыОснования.ДокументОснование,
	|	NULL КАК СчетФактураВыданный,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Статьи.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В
	|		  (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|		  И ЕСТЬNULL(Статьи.ВариантРаспределенияРасходов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		  И ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|		КОГДА ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|		ИНАЧЕ ТаблицаТовары.Ссылка.ПередачаПодДеятельность
	|	КОНЕЦ                           КАК ЗакупкаПодДеятельность,
	|	ЛОЖЬ                            КАК ПрошлыеКорректировки,
	|	ТаблицаТовары.Ссылка.НалогообложениеНДС,
	|	ЛОЖЬ,
	|	""""
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|			ПО ТаблицаТовары.Ссылка = ДокументыОснования.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|			ПО ТаблицаТовары.СтатьяРасходов = Статьи.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|			ПО ТаблицаТовары.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|				И ТаблицаТовары.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ТаблицаТовары.Номенклатура.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры НЕ В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.Ссылка.РасчетыЧерезОтдельногоКонтрагента
	|	И ТаблицаТовары.Ссылка.ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|
	|";
#КонецОбласти
	
#Область ТекстВозвратТоваровМеждуОрганизациями
	ТекстВозвратТоваровМеждуОрганизациями = "
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	ТаблицаВидыЗапасов.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|						ТОГДА ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|						ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаВидыЗапасов.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ДокументыОснования.ДокументОснование,
	|	NULL КАК СчетФактураВыданный,
	|	ТаблицаВидыЗапасов.Ссылка.НалогообложениеНДС,
	|	ЛОЖЬ КАК ПрошлыеКорректировки,
	|	ТаблицаВидыЗапасов.Ссылка.НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	""""
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|			ПО ТаблицаВидыЗапасов.Ссылка = ДокументыОснования.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|			ПО ТаблицаВидыЗапасов.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|				И ТаблицаВидыЗапасов.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ТаблицаВидыЗапасов.ВидЗапасов.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка.РасчетыЧерезОтдельногоКонтрагента
	|	И ТаблицаВидыЗапасов.Ссылка.ХозяйственнаяОперация = Значение(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|
	|";
#КонецОбласти
	
#Область ТекстОтчетПоКомиссииМеждуОрганизациямиВознаграждение
	ТекстОтчетПоКомиссииМеждуОрганизациямиВознаграждение = "
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	ОтчетПоКомиссии.СтавкаНДСВознаграждения,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ОтчетПоКомиссии.СуммаВознаграждения - ОтчетПоКомиссии.СуммаНДСВознаграждения) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ОтчетПоКомиссии.СуммаНДСВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ОтчетПоКомиссии.СуммаВознаграждения
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ОтчетПоКомиссии.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ОтчетПоКомиссии.СуммаНДСВознаграждения
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ОтчетПоКомиссии.СуммаНДСВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ДокументыОснования.ДокументОснование,
	|	NULL КАК СчетФактураВыданный,
	|	ОтчетПоКомиссии.НалогообложениеНДС,
	|	ЛОЖЬ КАК ПрошлыеКорректировки,
	|	ВЫБОР
	|		КОГДА ОтчетПоКомиссии.СтавкаНДСВознаграждения = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ,
	|	ЛОЖЬ,
	|	""""
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ОтчетПоКомиссии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|			ПО ОтчетПоКомиссии.Ссылка = ДокументыОснования.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|			ПО ОтчетПоКомиссии.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|				И СуммыДокументовВВалютеРегл.ИдентификаторСтроки = """"
	|ГДЕ
	|	ОтчетПоКомиссии.РасчетыЧерезОтдельногоКонтрагента
	|	И ОтчетПоКомиссии.СуммаВознаграждения <> 0
	|
	|";
#КонецОбласти
	
#Область ТекстВыкупВозвратнойТарыУПоставщика
	ТекстВыкупВозвратнойТарыУПоставщика = "
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ТипНоменклатуры В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)) 
	|			ТОГДА ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	ТаблицаТовары.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаТовары.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаТовары.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ДокументыОснования.ДокументОснование,
	|	NULL КАК СчетФактураВыданный,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|	ЛОЖЬ КАК ПрошлыеКорректировки,
	|	ТаблицаТовары.Ссылка.НалогообложениеНДС,
	|	ЛОЖЬ,
	|	""""
	|ИЗ
	|	Документ.ВыкупВозвратнойТарыУПоставщика.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|			ПО ТаблицаТовары.Ссылка = ДокументыОснования.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|			ПО ТаблицаТовары.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|				И ТаблицаТовары.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ТаблицаТовары.Номенклатура.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|
	|";
#КонецОбласти
	
#Область ТекстКорректировкаРеализацииРасхождения
	ТекстКорректировкаРеализацииРасхождения ="
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги),
	|	ТаблицаРасхождения.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(-(ТаблицаРасхождения.СуммаСНДС - ТаблицаРасхождения.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ -СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(-ТаблицаРасхождения.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ -СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА -ТаблицаРасхождения.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(-ТаблицаРасхождения.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ -(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА -ТаблицаРасхождения.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(-ТаблицаРасхождения.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ -СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ДокументыОснования.ДокументОснование,
	|	NULL КАК СчетФактураВыданный,
	|	ТаблицаРасхождения.Ссылка.НалогообложениеНДС,
	|	ЛОЖЬ КАК ПрошлыеКорректировки,
	|	ТаблицаРасхождения.Ссылка.НалогообложениеНДС,
	|	ЛОЖЬ,
	|	""""
	|ИЗ
	|	Документ.КорректировкаРеализации.Расхождения КАК ТаблицаРасхождения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|			ПО ТаблицаРасхождения.Ссылка = ДокументыОснования.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|			ПО ТаблицаРасхождения.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|				И ТаблицаРасхождения.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаРасхождения.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНедопоставленногоТовара)
	|	И (ТаблицаРасхождения.Номенклатура.ТипНоменклатуры НЕ В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|		ИЛИ ТаблицаРасхождения.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|";
#КонецОбласти

#Область ТекстКорректировкаРеализацииВидыЗапасовОприходование
	ТекстКорректировкаРеализацииВидыЗапасовОприходование ="
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)),
	|	ТаблицаОприходование.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаОприходование.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|						ТОГДА ВЫРАЗИТЬ((ТаблицаОприходование.СуммаСНДС - ТаблицаОприходование.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|					ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаОприходование.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|						ТОГДА ВЫРАЗИТЬ(ТаблицаОприходование.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|				ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|			КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаОприходование.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаОприходование.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ (СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаОприходование.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаОприходование.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ,
	|	ДокументыОснования.ДокументОснование,
	|	NULL КАК СчетФактураВыданный,
	|	ТаблицаОприходование.Ссылка.НалогообложениеНДС,
	|	ЛОЖЬ КАК ПрошлыеКорректировки,
	|	ТаблицаОприходование.Ссылка.НалогообложениеНДС,
	|	ЛОЖЬ,
	|	""""
	|ИЗ
	|	Документ.КорректировкаРеализации.ВидыЗапасовОприходование КАК ТаблицаОприходование
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|			ПО ТаблицаОприходование.Ссылка = ДокументыОснования.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|			ПО ТаблицаОприходование.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|				И ТаблицаОприходование.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ТаблицаОприходование.ВидЗапасов.ГруппаФинансовогоУчета = ГФУ.Ссылка
	|ГДЕ
	|	ТаблицаОприходование.Ссылка.ВидКорректировки = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратНедопоставленногоТовара)
	|";
#КонецОбласти
	
//++ НЕ УТ
#Область ТекстОтчетПереработчика
	ТекстОтчетПереработчика = "
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги) КАК ВидЦенности,
	|	Отчет.СтавкаНДС КАК СтавкаНДС,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(Суммы.СуммаБезНДСРегл, 0) = 0 ТОГДА
	|		ВЫРАЗИТЬ((Отчет.СуммаСНДС - Отчет.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		Суммы.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|
	|	ВЫБОР КОГДА ЕСТЬNULL(Суммы.СуммаБезНДСРегл, 0) = 0 ТОГДА
	|		ВЫРАЗИТЬ(Отчет.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		Суммы.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДС,
	|
	|	ВЫБОР КОГДА &ВалютаСчетаФактуры = &ВалютаОснования ТОГДА
	|		Отчет.СуммаСНДС
	|	КОГДА ЕСТЬNULL(Суммы.СуммаБезНДСРегл, 0) = 0 ТОГДА
	|		ВЫРАЗИТЬ(Отчет.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаПоСчетуФактуреЖурнал,
	|
	|	ВЫБОР КОГДА &ВалютаСчетаФактуры = &ВалютаОснования ТОГДА
	|		Отчет.СуммаНДС
	|	КОГДА ЕСТЬNULL(Суммы.СуммаБезНДСРегл, 0) = 0 ТОГДА
	|		ВЫРАЗИТЬ(Отчет.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		Суммы.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДСЖурнал,
	|
	|	ДокументыОснования.ДокументОснование КАК Основание,
	|	NULL КАК СчетФактураВыданный,
	|	Отчет.ЗакупкаПодДеятельность КАК ЗакупкаПодДеятельность,
	|	ЛОЖЬ КАК ПрошлыеКорректировки,
	|	ВЫБОР КОГДА Отчет.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ КАК НалогообложениеНДС,
	|	ЛОЖЬ,
	|	""""
	|
	|ИЗ
	|	Документ.ОтчетПереработчика КАК Отчет
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтДокументыОснования КАК ДокументыОснования
	|	ПО
	|		Отчет.Ссылка = ДокументыОснования.ДокументОснование
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Отчет.Ссылка = Суммы.Регистратор
	|		И Суммы.ИдентификаторСтроки = """"
	|
	|ГДЕ
	|	Отчет.Сумма <> 0
	|
	|";
#КонецОбласти
	
#Область ТекстПоступлениеУслугПоЛизингу
	ТекстПоступлениеУслугПоЛизингу ="
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Статьи.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС)) КАК ВидЦенности,
	|	ТаблицаНачисления.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаНачисления.СуммаСНДС - ТаблицаНачисления.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаНачисления.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаНачисления.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаНачисления.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаПоСчетуФактуреЖурнал,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаНачисления.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаНачисления.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДСЖурнал,
	|	ДокументыОснования.ДокументОснование КАК Основание,
	|	NULL КАК СчетФактураВыданный,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Статьи.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В
	|		  (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|		  И ЕСТЬNULL(Статьи.ВариантРаспределенияРасходов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		  И ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|		КОГДА ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|		ИНАЧЕ ПоступлениеУслугПоЛизингу.ЗакупкаПодДеятельность
	|	КОНЕЦ                           КАК ЗакупкаПодДеятельность,
	|	ЛОЖЬ КАК ПрошлыеКорректировки,
	|	ПоступлениеУслугПоЛизингу.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ЛОЖЬ КАК ВозвратКомиссионногоТовара,
	|	""""
	|	
	|ИЗ
	|	Документ.ПоступлениеУслугПоЛизингу.Начисления КАК ТаблицаНачисления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеУслугПоЛизингу КАК ПоступлениеУслугПоЛизингу
	|			ПО ТаблицаНачисления.Ссылка = ПоступлениеУслугПоЛизингу.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|			ПО ТаблицаНачисления.Ссылка = ДокументыОснования.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|			ПО ТаблицаНачисления.СтатьяРасходов = Статьи.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|			ПО ТаблицаНачисления.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|				И ТаблицаНачисления.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|";
#КонецОбласти
	
//-- НЕ УТ
	
	ТекстЗапроса = ТекстПоступлениеУслугПрочихАктивов 
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВводОстатковСобственныхТоваров 
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПоступлениеТоваровУслуг 
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВозвратТоваровОтКлиента
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтчетКомиссионераВознаграждение
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПередачаТоваровМеждуОрганизациямиВидыЗапасов
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПередачаТоваровМеждуОрганизациямиТовары
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВозвратТоваровМеждуОрганизациями
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтчетПоКомиссииМеждуОрганизациямиВознаграждение
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВыкупВозвратнойТарыУПоставщика
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстКорректировкаРеализацииРасхождения
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстКорректировкаРеализацииВидыЗапасовОприходование
	//++ НЕ УТ
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстОтчетПереработчика
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПоступлениеУслугПоЛизингу
	//-- НЕ УТ
	;
	
	Если Запрос.Параметры.Исправление Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДокументыОснования.ДокументОснование", "ДокументыОснования.КорректируемыйДокумент");
		ТекстЗапроса = ТекстЗапроса
			+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстЗапросаВтТаблицаКорректировки(Запрос, ТекстыЗапроса, Истина)
	КонецЕсли;
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаВтПрошлыеКорректировки(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтПрошлыеКорректировки";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДокументыОснования", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДокументыОснования(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументыОснования.КорректируемыйДокумент   КАК КорректируемыйДокумент,
	|	ДокументыОснования.ЗакупкаПодДеятельность   КАК ЗакупкаПодДеятельность,
	|	КорректировкаПоступления.Ссылка             КАК ДокументОснование
	|ПОМЕСТИТЬ ВтПрошлыеКорректировки
	|ИЗ
	|	ВтДокументыОснования КАК ДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК КорректировкаПоступления
	|		ПО ДокументыОснования.КорректируемыйДокумент = КорректировкаПоступления.ДокументОснование
	|ГДЕ
	|	&Исправление
	|	И КорректировкаПоступления.Проведен
	|	И КорректировкаПоступления.Дата < ДокументыОснования.ДатаДокументаОснования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОснования.КорректируемыйДокумент,
	|	ПоступлениеТоваровУслуг.ЗакупкаПодДеятельность,
	|	ПоступлениеТоваровУслуг.Ссылка
	|ИЗ
	|	ВтДокументыОснования КАК ДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ПО ДокументыОснования.КорректируемыйДокумент = ПоступлениеТоваровУслуг.Ссылка
	|ГДЕ
	|	&Исправление
	|	И ДокументыОснования.КорректируемыйДокумент <> ДокументыОснования.ДокументОснование";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтПрошлыеИсправленияКорректировки(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтПрошлыеИсправленияКорректировки";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтСторнируемыеКорректировки", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСторнируемыеКорректировки(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДокументыОснования", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДокументыОснования(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеТабличнойЧасти.ДокументОснование  КАК ДокументКорректировки,
	|	ВложенныйЗапрос.ДокументОснование       КАК ДокументОснование
	|ПОМЕСТИТЬ ВтПрошлыеИсправленияКорректировки
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДанныеТабличнойЧасти
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|			ПО ДанныеТабличнойЧасти.Ссылка = СчетФактураПолученный.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				СторнируемыеКорректировки.СторнируемаяКорректировка КАК ДокументОснование
	|			ИЗ
	|				ВтСторнируемыеКорректировки КАК СторнируемыеКорректировки
	|			) КАК ВложенныйЗапрос
	|				ПО (ИСТИНА)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК Основания
	|			ПО (ИСТИНА)
	|ГДЕ
	|	&Исправление
	|	И &Корректировочный
	|	И СчетФактураПолученный.Ссылка <> &Ссылка
	|	И ДанныеТабличнойЧасти.ДокументОснование ССЫЛКА Документ.КорректировкаПоступления
	|	И СчетФактураПолученный.Номер ПОДОБНО &Номер
	|	И НАЧАЛОПЕРИОДА(СчетФактураПолученный.ДатаСоставления, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|	И НАЧАЛОПЕРИОДА(СчетФактураПолученный.ДатаИсправления,ДЕНЬ) < НАЧАЛОПЕРИОДА(&ДатаИсправления, ДЕНЬ)
	|	И СчетФактураПолученный.Корректировочный
	|	И СчетФактураПолученный.Проведен
	|	И ДанныеТабличнойЧасти.ДокументОснование <> Основания.ДокументОснование";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтТаблицаКорректировки(Запрос, ТекстыЗапроса, ПрошлыеКорректировки = Ложь)
	
	ИмяРегистра = "ВтТаблицаКорректировки";
	
	УстановитьПараметрВалютаОснования(Запрос);
	УстановитьПараметрКоэффициентПересчетаВВалютуРегл(Запрос);

#Область ТекстКорректировкаПоступленияРасхождения
	ТекстКорректировкаПоступленияРасхождения = "
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаРасхождения.Номенклатура.ТипНоменклатуры В
	|		  (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|		КОГДА ТаблицаРасхождения.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		  И НЕ ТаблицаРасхождения.СписатьНаРасходы
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		КОГДА ЕСТЬNULL(Статьи.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)) <>
	|		  ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|			ТОГДА Статьи.ВидЦенностиНДС
	//++ НЕ УТ
	|		КОГДА ТаблицаРасхождения.АналитикаАктивовПассивов ССЫЛКА Справочник.ОбъектыЭксплуатации
	|		  И ТаблицаРасхождения.АналитикаАктивовПассивов <> ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС)
	|		КОГДА ТаблицаРасхождения.АналитикаАктивовПассивов ССЫЛКА Справочник.НематериальныеАктивы
	|		  И ТаблицаРасхождения.АналитикаАктивовПассивов <> ЗНАЧЕНИЕ(Справочник.НематериальныеАктивы.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
	//-- НЕ УТ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ  КАК ВидЦенности,
	|	ТаблицаРасхождения.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаРасхождения.СуммаСНДС - ТаблицаРасхождения.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасхождения.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаРасхождения.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасхождения.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаПоСчетуФактуреЖурнал,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаРасхождения.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасхождения.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДСЖурнал,
	|	ДокументыОснования.КорректируемыйДокумент КАК Основание,
	|	NULL КАК СчетФактураВыданный,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Статьи.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В
	|		  (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|		  И ЕСТЬNULL(Статьи.ВариантРаспределенияРасходов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		  И ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|		КОГДА ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|		ИНАЧЕ ДокументыОснования.ЗакупкаПодДеятельность
	|	КОНЕЦ                           КАК ЗакупкаПодДеятельность,
	|	ЛОЖЬ КАК ПрошлыеКорректировки,
	|	ТаблицаРасхождения.Ссылка.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ЛОЖЬ КАК ВозвратКомиссионногоТовара,
	|	"""" КАК КодВидаОперации
	|ПОМЕСТИТЬ ВтТаблицаКорректировки
	|ИЗ
	|	Документ.КорректировкаПоступления.Расхождения КАК ТаблицаРасхождения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДокументыОснования
	|			ПО ТаблицаРасхождения.Ссылка = ДокументыОснования.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|			ПО ТаблицаРасхождения.СтатьяРасходов = Статьи.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|			ПО ТаблицаРасхождения.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|				И ТаблицаРасхождения.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК КорректировкаПоступления
	|			ПО ТаблицаРасхождения.Ссылка = КорректировкаПоступления.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ТаблицаРасхождения.Номенклатура.ГруппаФинансовогоУчета = ГФУ.Ссылка
	//++ НЕ УТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНоменклатуры КАК ПорядокОтражения
	|			ПО ПорядокОтражения.Организация = &Организация
	|				И ТаблицаРасхождения.Склад = ПорядокОтражения.Склад
	|				И ТаблицаРасхождения.Номенклатура.ГруппаФинансовогоУчета = ПорядокОтражения.ГруппаФинансовогоУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГруппыФинансовогоУчета
	|			ПО ТаблицаРасхождения.Номенклатура.ГруппаФинансовогоУчета = ГруппыФинансовогоУчета.Ссылка
	//-- НЕ УТ
	|ГДЕ
	|	&Исправление ИЛИ &Корректировочный
	|
	|";
#КонецОбласти
	
#Область ТекстПрошлыеИсправленияКорректировки
	ТекстПрошлыеИсправленияКорректировки = "
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТаблицаРасхождения.Номенклатура.ТипНоменклатуры В
	|		  (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ЕСТЬNULL(ГФУ.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары))
	|		КОГДА ТаблицаРасхождения.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		  И НЕ ТаблицаРасхождения.СписатьНаРасходы
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|		КОГДА ЕСТЬNULL(Статьи.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)) <>
	|		  ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|			ТОГДА Статьи.ВидЦенностиНДС
	//++ НЕ УТ
	|		КОГДА ТаблицаРасхождения.АналитикаАктивовПассивов ССЫЛКА Справочник.ОбъектыЭксплуатации
	|		  И ТаблицаРасхождения.АналитикаАктивовПассивов <> ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС)
	|		КОГДА ТаблицаРасхождения.АналитикаАктивовПассивов ССЫЛКА Справочник.НематериальныеАктивы
	|		  И ТаблицаРасхождения.АналитикаАктивовПассивов <> ЗНАЧЕНИЕ(Справочник.НематериальныеАктивы.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
	//-- НЕ УТ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ  КАК ВидЦенности,
	|	ТаблицаРасхождения.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ((ТаблицаРасхождения.СуммаСНДС - ТаблицаРасхождения.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасхождения.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаРасхождения.СуммаСНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасхождения.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаПоСчетуФактуреЖурнал,
	|	ВЫБОР
	|		КОГДА &ВалютаСчетаФактуры = &ВалютаОснования
	|			ТОГДА ТаблицаРасхождения.СуммаНДС
	|		КОГДА ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,0) = 0
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаРасхождения.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНДСЖурнал,
	|	ПрошлыеИсправленияКорректировки.ДокументОснование КАК Основание,
	|	NULL КАК СчетФактураВыданный,
	|	КорректировкаПоступления.ДокументОснование.ЗакупкаПодДеятельность КАК ЗакупкаПодДеятельность,
	|	ИСТИНА КАК КорректировкаТекущегоКвартала,
	|	КорректировкаПоступления.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ЛОЖЬ,
	|	""""
	|ИЗ
	|	Документ.КорректировкаПоступления.Расхождения КАК ТаблицаРасхождения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтПрошлыеИсправленияКорректировки КАК ПрошлыеИсправленияКорректировки
	|			ПО ТаблицаРасхождения.Ссылка = ПрошлыеИсправленияКорректировки.ДокументКорректировки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК КорректировкаПоступления
	|			ПО ТаблицаРасхождения.Ссылка = КорректировкаПоступления.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|			ПО ТаблицаРасхождения.СтатьяРасходов = Статьи.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|			ПО ТаблицаРасхождения.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|				И ТаблицаРасхождения.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГФУ
	|		ПО ТаблицаРасхождения.Номенклатура.ГруппаФинансовогоУчета = ГФУ.Ссылка
	//++ НЕ УТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНоменклатуры КАК ПорядокОтражения
	|			ПО ПорядокОтражения.Организация = &Организация
	|				И ТаблицаРасхождения.Склад = ПорядокОтражения.Склад
	|				И ТаблицаРасхождения.Номенклатура.ГруппаФинансовогоУчета = ПорядокОтражения.ГруппаФинансовогоУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГруппыФинансовогоУчета
	|			ПО ТаблицаРасхождения.Номенклатура.ГруппаФинансовогоУчета = ГруппыФинансовогоУчета.Ссылка
	//-- НЕ УТ
	|
	|";
#КонецОбласти
	
	Если ПрошлыеКорректировки Тогда
		
		Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрошлыеКорректировки", ТекстыЗапроса) Тогда
			ТекстЗапросаВтПрошлыеКорректировки(Запрос, ТекстыЗапроса);
		КонецЕсли; 
		
		ТекстЗапроса = ТекстКорректировкаПоступленияРасхождения;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ВтДокументыОснования","ВтПрошлыеКорректировки");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ПОМЕСТИТЬ ВтТаблицаКорректировки","");
		
	Иначе
		
		Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтДокументыОснования", ТекстыЗапроса) Тогда
			ТекстЗапросаВтДокументыОснования(Запрос, ТекстыЗапроса);
		КонецЕсли; 

		Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтПрошлыеИсправленияКорректировки", ТекстыЗапроса) Тогда
			ТекстЗапросаВтПрошлыеИсправленияКорректировки(Запрос, ТекстыЗапроса);
		КонецЕсли; 
		
		ТекстЗапроса = ТекстКорректировкаПоступленияРасхождения
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстПрошлыеИсправленияКорректировки;
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса

КонецФункции

Функция ТекстЗапросаВтТаблицаДокументовДляКоррСФ(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаДанныхДляЖурнала";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаКорректировки", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаКорректировки(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ 
	|    ТаблицаДокументов.НалогообложениеНДС,
	|    ТаблицаДокументов.ДокументОснование КАК ДокументОснование,
	|    ТаблицаДокументов.СуммаПоСчетуФактуреУменьшение,
	|    ТаблицаДокументов.СуммаНДСУменьшение,
	|    ТаблицаДокументов.СуммаПоСчетуФактуреУвеличение,
	|    ТаблицаДокументов.СуммаНДСУвеличение,
	|    ТаблицаДокументов.СуммаПоСчетуФактуреУменьшениеКомиссия,
	|    ТаблицаДокументов.СуммаНДСУменьшениеКомиссия,
	|    ТаблицаДокументов.СуммаПоСчетуФактуреУвеличениеКомиссия,
	|    ТаблицаДокументов.СуммаНДСУвеличениеКомиссия,
	|    ТаблицаДокументов.ВозвратКомиссионногоТовара,
	|    ТаблицаДокументов.СчетФактураВыданный
	|
	|ПОМЕСТИТЬ ВтТаблицаДокументовДляКоррСФ
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаКорректировки.НалогообложениеНДС КАК НалогообложениеНДС,
	|		ТаблицаКорректировки.Основание КАК ДокументОснование,
	|		ВЫБОР
	|			КОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал < 0 
	|				ТОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаПоСчетуФактуреУменьшение,
	|		ВЫБОР 
	|			КОГДА ТаблицаКорректировки.СуммаНДСЖурнал < 0 
	|				ТОГДА ТаблицаКорректировки.СуммаНДСЖурнал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаНДСУменьшение,
	|		ВЫБОР 
	|			КОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал > 0 
	|				ТОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаПоСчетуФактуреУвеличение,
	|		ВЫБОР 
	|			КОГДА ТаблицаКорректировки.СуммаНДСЖурнал > 0 
	|				ТОГДА ТаблицаКорректировки.СуммаНДСЖурнал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаНДСУвеличение,
	|		0 КАК СуммаПоСчетуФактуреУменьшениеКомиссия,
	|		0 КАК СуммаНДСУменьшениеКомиссия,
	|		0 КАК СуммаПоСчетуФактуреУвеличениеКомиссия,
	|		0 КАК СуммаНДСУвеличениеКомиссия,
	|		ЛОЖЬ КАК ВозвратКомиссионногоТовара,
	|		ТаблицаКорректировки.СчетФактураВыданный КАК СчетФактураВыданный
	|			
	|	ИЗ
	|		ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		ТаблицаКорректировки.НалогообложениеНДС КАК НалогообложениеНДС,
	|		ТаблицаКорректировки.Основание КАК ДокументОснование,
	|	
	|		0 КАК СуммаПоСчетуФактуреУменьшение,
	|		0 КАК СуммаНДСУменьшение,
	|		0 КАК СуммаПоСчетуФактуреУвеличение,
	|		0 КАК СуммаНДСУвеличение,
	|			
	|		ВЫБОР
	|			КОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал < 0 
	|				ТОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаПоСчетуФактуреУменьшениеКомиссия,
	|		ВЫБОР 
	|			КОГДА ТаблицаКорректировки.СуммаНДСЖурнал < 0 
	|				ТОГДА ТаблицаКорректировки.СуммаНДСЖурнал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаНДСУменьшениеКомиссия,
	|		ВЫБОР 
	|			КОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал > 0 
	|				ТОГДА ТаблицаКорректировки.СуммаПоСчетуФактуреЖурнал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаПоСчетуФактуреУвеличениеКомиссия,
	|		ВЫБОР 
	|			КОГДА ТаблицаКорректировки.СуммаНДСЖурнал > 0 
	|				ТОГДА ТаблицаКорректировки.СуммаНДСЖурнал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаНДСУвеличениеКомиссия,
	|		ИСТИНА КАК ВозвратКомиссионногоТовара,
	|		ТаблицаКорректировки.СчетФактураВыданный КАК СчетФактураВыданный
	|
	|	ИЗ
	|		ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|	ГДЕ
	|		ТаблицаКорректировки.ВозвратКомиссионногоТовара) КАК ТаблицаДокументов			
	|";
	 
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	 
КонецФункции

Функция ТекстЗапросаВтТаблицаДанныхДляЖурнала(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаДанныхДляЖурнала";
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаСуммДокументов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСуммДокументов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаКорректировки", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаКорректировки(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаДокументовДляКоррСФ", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаДокументовДляКоррСФ(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = " 	
	//ВТТаблицаДанныхДляЖурнала
	|ВЫБРАТЬ
	|   ТаблицаДанныхДляЖурнала.СчетФактураВыданный,
	|   ТаблицаДанныхДляЖурнала.НомерСчетаФактуры,
	|   ТаблицаДанныхДляЖурнала.ДатаСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.НомерКорректировочногоСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.ДатаКорректировочногоСчетаФактуры,
	|   ТаблицаДанныхДляЖурнала.НомерИсправления,
	|   ТаблицаДанныхДляЖурнала.ДатаИсправления,
	|	ТаблицаДанныхДляЖурнала.НомерИсправленияКорректировочногоСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.ДатаИсправленияКорректировочногоСчетаФактуры,
	|
	|   ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуре,
	|   ТаблицаДанныхДляЖурнала.СуммаНДС,
	|   ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреРазницаУменьшение,
	|   ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреРазницаУвеличение,
	|   ТаблицаДанныхДляЖурнала.СуммаНДСРазницаУменьшение,
	|   ТаблицаДанныхДляЖурнала.СуммаНДСРазницаУвеличение,
	|
	|   ТаблицаДанныхДляЖурнала.ПоСтавкеБезНДС,
	|   ТаблицаДанныхДляЖурнала.КодВидаСделки,
	|
	|   ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреКомиссия,
	|   ТаблицаДанныхДляЖурнала.СуммаНДСКомиссия,
	|   ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|   ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|   ТаблицаДанныхДляЖурнала.СуммаНДСРазницаУменьшениеКомиссия,
	|   ТаблицаДанныхДляЖурнала.СуммаНДСРазницаУвеличениеКомиссия,
	|
	|   ТаблицаДанныхДляЖурнала.КодВидаОперацииКомиссия
	|
	|ПОМЕСТИТЬ ВтТаблицаДанныхДляЖурнала
	| 
	|ИЗ
	| 
	//Данные счета-фактуры на поступление
	|	(ВЫБРАТЬ
	|  		ТаблицаДанных.СчетФактураВыданный КАК СчетФактураВыданный,
	|   	&Номер 	КАК НомерСчетаФактуры,
	|  	 	&Период КАК ДатаСчетаФактуры,
	|		NULL 	КАК НомерКорректировочногоСчетаФактуры,
	|		NULL 	КАК ДатаКорректировочногоСчетаФактуры,
	|  	 	NULL 	КАК НомерИсправления,
	|   	NULL 	КАК ДатаИсправления,
	|		NULL 	КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|		NULL 	КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|
	|		ТаблицаДанных.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|		ТаблицаДанных.СуммаНДС 			  КАК СуммаНДС,
	|  	 	0 КАК 	СуммаПоСчетуФактуреРазницаУменьшение,
	|   	0 КАК 	СуммаПоСчетуФактуреРазницаУвеличение,
	|   	0 КАК 	СуммаНДСРазницаУменьшение,
	|   	0 КАК 	СуммаНДСРазницаУвеличение,
	|
	|		ВЫБОР
	|			КОГДА ТаблицаДанных.НалогообложениеНДС
	|				В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПоСтавкеБезНДС,   
	|		ТаблицаДанных.КодВидаСделки КАК КодВидаСделки,
	|
	|		ТаблицаДанных.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|		ТаблицаДанных.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|   	0 КАК 	СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|   	0 КАК 	СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|   	0 КАК 	СуммаНДСРазницаУменьшениеКомиссия,
	|   	0 КАК 	СуммаНДСРазницаУвеличениеКомиссия,
	|
	|		ВЫБОР 
	|			КОГДА ТаблицаДанных.СуммаПоСчетуФактуреКомиссия <> 0 
	|				ТОГДА &КодВидаОперацииКомиссия
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК КодВидаОперацииКомиссия
	|
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МАКСИМУМ(ТаблицаДокументов.НалогообложениеНДС) КАК НалогообложениеНДС,
	|			СУММА(ТаблицаДокументов.СуммаПоСчетуФактуре) КАК СуммаПоСчетуФактуре,
	|			СУММА(ТаблицаДокументов.СуммаНДС) КАК СуммаНДС,
	|			СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреКомиссия) КАК СуммаПоСчетуФактуреКомиссия,
	|			СУММА(ТаблицаДокументов.СуммаНДСКомиссия) КАК СуммаНДСКомиссия,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ТаблицаДокументов.ВозвратКомиссионногоТовара 
	|						ТОГДА ""4""
	|					ИНАЧЕ """"
	|				КОНЕЦ) КАК КодВидаСделки,
	|			ТаблицаДокументов.СчетФактураВыданный КАК СчетФактураВыданный
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ТаблицаСуммДокументов.НалогообложениеНДС КАК НалогообложениеНДС,
	|				ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал КАК СуммаПоСчетуФактуре,
	|				ТаблицаСуммДокументов.СуммаНДСЖурнал КАК СуммаНДС,
	|				0 КАК СуммаПоСчетуФактуреКомиссия,
	|				0 КАК СуммаНДСКомиссия,
	|				ТаблицаСуммДокументов.ВозвратКомиссионногоТовара КАК ВозвратКомиссионногоТовара,
	|				ТаблицаСуммДокументов.СчетФактураВыданный КАК СчетФактураВыданный
	|			ИЗ
	|				ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				ТаблицаСуммДокументов.НалогообложениеНДС КАК НалогообложениеНДС,
	|				0,
	|				0,
	|				ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал,
	|				ТаблицаСуммДокументов.СуммаНДСЖурнал,
	|				ИСТИНА КАК ВозвратКомиссионногоТовара,
	|				ТаблицаСуммДокументов.СчетФактураВыданный КАК СчетФактураВыданный
	|			ИЗ
	|				ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|			ГДЕ
	|				ТаблицаСуммДокументов.ВозвратКомиссионногоТовара
	|			
	|			) КАК ТаблицаДокументов
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДокументов.СчетФактураВыданный
	|		) КАК ТаблицаДанных
	|	ГДЕ
	|		НЕ &Исправление
	|		И НЕ &Корректировочный 
	|
	|	ОБЪЕДИНИТЬ ВСЕ 
	|
	//Данные счета-фактуры исправления
	|	ВЫБРАТЬ
	|       ТаблицаДанныхИсправление.СчетФактураВыданный,
	|   	&Номер 				КАК НомерСчетаФактуры,
	|  	 	&Период 			КАК ДатаИсходногоДокумента,
	|		NULL 				КАК НомерКорректировочногоСчетаФактуры,
	|		NULL 				КАК ДатаКорректировочногоСчетаФактуры,
	|		&НомерИсправления 	КАК НомерИсправления,
	|		&ДатаИсправления 	КАК ДатаИсправления,
	|		NULL 				КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|		NULL 				КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|
	|		ТаблицаДанныхИсправление.СуммаПоСчетуФактуре,
	|		ТаблицаДанныхИсправление.СуммаНДС,
	|  	 	0 КАК 	СуммаПоСчетуФактуреРазницаУменьшение,
	|   	0 КАК 	СуммаПоСчетуФактуреРазницаУвеличение,
	|   	0 КАК 	СуммаНДСРазницаУменьшение,
	|   	0 КАК 	СуммаНДСРазницаУвеличение,
	|
	|		ВЫБОР
	|			КОГДА ЕстьNULL(ТаблицаДанныхИсправление.НалогообложениеКорректировки, ТаблицаДанныхИсправление.НалогообложениеОснования)
	|				В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПоСтавкеБезНДС,
	|		ТаблицаДанныхИсправление.КодВидаСделки КАК КодВидаСделки,
	|
	|		ТаблицаДанныхИсправление.СуммаПоСчетуФактуреКомиссия КАК СуммаПоСчетуФактуреКомиссия,
	|		ТаблицаДанныхИсправление.СуммаНДСКомиссия КАК СуммаНДСКомиссия,
	|   	0 КАК 	СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|   	0 КАК 	СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|   	0 КАК 	СуммаНДСРазницаУменьшениеКомиссия,
	|   	0 КАК 	СуммаНДСРазницаУвеличениеКомиссия,
    |
	|		ВЫБОР 
	|			КОГДА ТаблицаДанныхИсправление.СуммаПоСчетуФактуреКомиссия <> 0 
	|				ТОГДА &КодВидаОперации
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК КодВидаОперацииКомиссия
	|		
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МАКСИМУМ(ТаблицаДокументов.НалогообложениеОснования) КАК НалогообложениеОснования,
	|			МАКСИМУМ(ТаблицаДокументов.НалогообложениеКорректировки) КАК НалогообложениеКорректировки,
	|			СУММА(ТаблицаДокументов.СуммаПоСчетуФактуре) КАК СуммаПоСчетуФактуре,
	|			СУММА(ТаблицаДокументов.СуммаНДС) КАК СуммаНДС,
	|			СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреКомиссия) КАК СуммаПоСчетуФактуреКомиссия,
	|			СУММА(ТаблицаДокументов.СуммаНДСКомиссия) КАК СуммаНДСКомиссия,
	|			МАКСИМУМ(ВЫБОР
	|						КОГДА ТаблицаДокументов.ВозвратКомиссионногоТовара 
	|							ТОГДА ""4""
	|						ИНАЧЕ """"
	|					КОНЕЦ) КАК КодВидаСделки,
	|			ТаблицаДокументов.СчетФактураВыданный
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ТаблицаСуммДокументов.НалогообложениеНДС КАК НалогообложениеОснования,
	|				NULL КАК НалогообложениеКорректировки,
	|				ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал КАК СуммаПоСчетуФактуре,
	|				ТаблицаСуммДокументов.СуммаНДСЖурнал КАК СуммаНДС,
	|				0 КАК СуммаПоСчетуФактуреКомиссия,
	|				0 КАК СуммаНДСКомиссия,
	|				ТаблицаСуммДокументов.ВозвратКомиссионногоТовара КАК ВозвратКомиссионногоТовара,
	|				ТаблицаСуммДокументов.СчетФактураВыданный КАК СчетФактураВыданный
	|			ИЗ
	|				ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|	
	|			ОБЪЕДИНИТЬ ВСЕ
	|	
	|			ВЫБРАТЬ
	|				NULL,
	|				ТаблицаКорректировки.НалогообложениеНДС,
	|				ТаблицаКорректировки.СуммаПоСчетуфактуреЖурнал,
	|				ТаблицаКорректировки.СуммаНДСЖурнал,
	|				0,
	|				0,
	|				ТаблицаКорректировки.ВозвратКомиссионногоТовара КАК ВозвратКомиссионногоТовара,
	|				ТаблицаКорректировки.СчетФактураВыданный КАК СчетФактураВыданный
	|			ИЗ
	|				ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|	
	|			ОБЪЕДИНИТЬ ВСЕ
	|	
	|			ВЫБРАТЬ
	|				ТаблицаСуммДокументов.НалогообложениеНДС,
	|				NULL,
	|				0,
	|				0,
	|				ТаблицаСуммДокументов.СуммаПоСчетуФактуреЖурнал,
	|				ТаблицаСуммДокументов.СуммаНДСЖурнал,
	|				ТаблицаСуммДокументов.ВозвратКомиссионногоТовара КАК ВозвратКомиссионногоТовара,
	|				ТаблицаСуммДокументов.СчетФактураВыданный КАК СчетФактураВыданный
	|			ИЗ
	|				ВтТаблицаСуммДокументов КАК ТаблицаСуммДокументов
	|			ГДЕ
	|				ТаблицаСуммДокументов.ВозвратКомиссионногоТовара
	|		
	|			ОБЪЕДИНИТЬ ВСЕ
	|		
	|			ВЫБРАТЬ
	|				NULL,
	|				ТаблицаКорректировки.НалогообложениеНДС,
	|				0,
	|				0,
	|				ТаблицаКорректировки.СуммаПоСчетуфактуреЖурнал,
	|				ТаблицаКорректировки.СуммаНДСЖурнал,
	|				ТаблицаКорректировки.ВозвратКомиссионногоТовара КАК ВозвратКомиссионногоТовара,
	|				ТаблицаКорректировки.СчетФактураВыданный КАК СчетФактураВыданный
	|			ИЗ
	|				ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|			ГДЕ
	|				ТаблицаКорректировки.ВозвратКомиссионногоТовара
	|		
	|			) КАК ТаблицаДокументов
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаДокументов.СчетФактураВыданный
	|		) КАК ТаблицаДанныхИсправление
	|	ГДЕ
	|		&Исправление
	|		И НЕ &Корректировочный
	|
	|	ОБЪЕДИНИТЬ ВСЕ 
	|
	//Данные счета-фактуры корректировочной
	|	ВЫБРАТЬ
	|		ТаблицаДанныхКорректировка.СчетФактураВыданный,
	|		ТаблицаДанныхКорректировка.НомерИсходногоДокумента 				КАК НомерСчетаФактуры,
	|		ТаблицаДанныхКорректировка.ДатаИсходногоДокумента				КАК ДатаСчетаФактуры,
	|		&Номер 															КАК НомерКорректировочногоСчетаФактуры,
	|		&Период 														КАК ДатаКорректировочногоСчетаФактуры,
	|		ТаблицаДанныхКорректировка.НомерИсправленияИсходногоДокумента 	КАК НомерИсправления,
	|		ТаблицаДанныхКорректировка.ДатаИсправленияИсходногоДокумента 	КАК ДатаИсправления,
	|		&НомерИсправления 												КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|		ВЫБОР
	|			КОГДА &Исправление
	|				ТОГДА &ДатаИсправления
	|		КОНЕЦ 															КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|
	|		0 КАК СуммаПоСчетуФактуре,
	|		0 КАК СуммаНДС,
	|		-ТаблицаДанныхКорректировка.СуммаПоСчетуФактуреУменьшение 		КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|		ТаблицаДанныхКорректировка.СуммаПоСчетуФактуреУвеличение 		КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|		-ТаблицаДанныхКорректировка.СуммаНДСУменьшение КАК СуммаНДСРазницаУменьшение,
	|		ТаблицаДанныхКорректировка.СуммаНДСУвеличение  КАК СуммаНДСРазницаУвеличение,
	|
	|		ВЫБОР
	|			КОГДА ТаблицаДанныхКорректировка.НалогообложениеНДС
	|				В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ПоСтавкеБезНДС,
	|		ТаблицаДанныхКорректировка.КодВидаСделки КАК КодВидаСделки,
	|
	|		0 КАК СуммаПоСчетуФактуреКомиссия,
	|		0 КАК СуммаНДСКомиссия,
	|		-ТаблицаДанныхКорректировка.СуммаПоСчетуФактуреУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|		ТаблицаДанныхКорректировка.СуммаНДСУменьшениеКомиссия КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|		-ТаблицаДанныхКорректировка.СуммаПоСчетуФактуреУвеличениеКомиссия КАК СуммаНДСРазницаУменьшениеКомиссия,
	|		ТаблицаДанныхКорректировка.СуммаНДСУвеличениеКомиссия КАК СуммаНДСРазницаУвеличениеКомиссия,
	|
	|		ВЫБОР 
	|			КОГДА ТаблицаДанныхКорректировка.СуммаПоСчетуФактуреУменьшениеКомиссия <> 0 
	|			 	 ИЛИ ТаблицаДанныхКорректировка.СуммаПоСчетуФактуреУвеличениеКомиссия <> 0
	|				ТОГДА &КодВидаОперации
	|			ИНАЧЕ """"
	|		КОНЕЦ КАК КодВидаОперацииКомиссия
	|
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ДанныеОснований.НомерИсходногоДокумента КАК НомерИсходногоДокумента,
	|			ДанныеОснований.ДатаИсходногоДокумента КАК ДатаИсходногоДокумента,
	|			ДанныеОснований.НомерИсправленияИсходногоДокумента КАК НомерИсправленияИсходногоДокумента,
	|			ДанныеОснований.ДатаИсправленияИсходногоДокумента КАК ДатаИсправленияИсходногоДокумента,
	|			МАКСИМУМ(ТаблицаДокументов.НалогообложениеНДС) КАК НалогообложениеНДС,
	|		
	|			СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреУменьшение)         КАК СуммаПоСчетуФактуреУменьшение,
	|			СУММА(ТаблицаДокументов.СуммаНДСУменьшение)                    КАК СуммаНДСУменьшение,
	|			СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреУвеличение)         КАК СуммаПоСчетуФактуреУвеличение,
	|			СУММА(ТаблицаДокументов.СуммаНДСУвеличение)                    КАК СуммаНДСУвеличение,
	|		
	|			СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреУменьшениеКомиссия) КАК СуммаПоСчетуФактуреУменьшениеКомиссия,
	|			СУММА(ТаблицаДокументов.СуммаНДСУменьшениеКомиссия)            КАК СуммаНДСУменьшениеКомиссия,
	|			СУММА(ТаблицаДокументов.СуммаПоСчетуФактуреУвеличениеКомиссия) КАК СуммаПоСчетуФактуреУвеличениеКомиссия,
	|			СУММА(ТаблицаДокументов.СуммаНДСУвеличениеКомиссия)            КАК СуммаНДСУвеличениеКомиссия,
	|			МАКСИМУМ(ВЫБОР
	|						КОГДА ТаблицаДокументов.ВозвратКомиссионногоТовара 
	|							ТОГДА ""4""
	|						ИНАЧЕ """"
	|					КОНЕЦ) КАК КодВидаСделки,
	|       	ТаблицаДокументов.СчетФактураВыданный
	|		ИЗ
	|			ВтТаблицаДокументовДляКоррСФ КАК ТаблицаДокументов
	|		
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументыОснования КАК ДанныеОснований
	|				ПО ТаблицаДокументов.ДокументОснование = ДанныеОснований.КорректируемыйДокумент
	|
	|		СГРУППИРОВАТЬ ПО
	|			НомерИсходногоДокумента,
	|			ДатаИсходногоДокумента,
	|			НомерИсправленияИсходногоДокумента,
	|			ДатаИсправленияИсходногоДокумента,
	|			СчетФактураВыданный
	|
	|		) КАК ТаблицаДанныхКорректировка
	|
	|	ГДЕ
	|		&Корректировочный) КАК ТаблицаДанныхДляЖурнала
	|
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаЖурналУчетаСчетовФактур(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЖурналУчетаСчетовФактур";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаДанныхДляЖурнала", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаДанныхДляЖурнала(Запрос, ТекстыЗапроса);
	КонецЕсли; 
		
	ТекстЗапроса = " 
	|ВЫБРАТЬ 
	|	&ПериодЗаписи 																КАК Период,
	|	&Организация 																КАК Организация,
	|	&Контрагент 																КАК Контрагент,
	|	ЕСТЬNULL(ДокументСчетФактура.Ссылка, &Ссылка) 								КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	ЕСТЬNULL(ДокументСчетФактура.ДатаВыставления, &ПериодЗаписи) 				КАК ДатаВыставленияПолучения,
	|	&ПолученВЭлектронномВиде 													КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации 															КАК КодВидаОперации,
	|	ТаблицаДанныхДляЖурнала.НомерСчетаФактуры 									КАК НомерСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.ДатаСчетаФактуры 									КАК ДатаСчетаФактуры,
	|
	|	ТаблицаДанныхДляЖурнала.НомерКорректировочногоСчетаФактуры                  КАК НомерКорректировочногоСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.ДатаКорректировочногоСчетаФактуры                   КАК ДатаКорректировочногоСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.НомерИсправления                                    КАК НомерИсправления,
	|	ТаблицаДанныхДляЖурнала.ДатаИсправления                                     КАК ДатаИсправления,
	|	ТаблицаДанныхДляЖурнала.НомерИсправленияКорректировочногоСчетаФактуры       КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.ДатаИсправленияКорректировочногоСчетаФактуры        КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	&ВалютаСчетаФактуры 														КАК Валюта,
	|	
	|	0			 																КАК ИндексСтроки,
	|	ЕСТЬNULL(Продавцы.Продавец, НЕОПРЕДЕЛЕНО)									КАК Продавец,
	|	
	|	ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуре 								КАК СуммаПоСчетуФактуре,
	|	ТаблицаДанныхДляЖурнала.СуммаНДС 											КАК СуммаНДС,
	|	ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреРазницаУменьшение				КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреРазницаУвеличение                КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	ТаблицаДанныхДляЖурнала.СуммаНДСРазницаУменьшение                           КАК СуммаНДСРазницаУменьшение,
	|	ТаблицаДанныхДляЖурнала.СуммаНДСРазницаУвеличение                           КАК СуммаНДСРазницаУвеличение,
	|
	|	ТаблицаДанныхДляЖурнала.ПоСтавкеБезНДС                                      КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ 																		КАК СчетФактураНеВыставляется,
	|	NULL 																		КАК СчетФактураВыданныйПокупателю,
	|	NULL 																		КАК Субкомиссионер,     
	|	ТаблицаДанныхДляЖурнала.КодВидаСделки 										КАК КодВидаСделки,
	|
	|	ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреКомиссия 						КАК СуммаПоСчетуФактуреКомиссия,
	|	ТаблицаДанныхДляЖурнала.СуммаНДСКомиссия 									КАК СуммаНДСКомиссия,
	|	ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия		КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	ТаблицаДанныхДляЖурнала.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия		КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	ТаблицаДанныхДляЖурнала.СуммаНДСРазницаУменьшениеКомиссия					КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	ТаблицаДанныхДляЖурнала.СуммаНДСРазницаУвеличениеКомиссия					КАК СуммаНДСРазницаУвеличениеКомиссия,
	|
	|	ТаблицаДанныхДляЖурнала.КодВидаОперацииКомиссия		                    	КАК КодВидаОперацииКомиссия
	|
	|ИЗ 
	|	ВтТаблицаДанныхДляЖурнала КАК ТаблицаДанныхДляЖурнала	
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК ДокументСчетФактура
	|		ПО ДокументСчетФактура.Ссылка = ТаблицаДанныхДляЖурнала.СчетФактураВыданный
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученный.Продавцы КАК Продавцы
	|	ПО
	|		Продавцы.Ссылка = &Ссылка
	|		И &СоставленКомиссионеромОтИмениПродавца
	|		И НЕ &СводныйКомиссионный
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	&ПериодЗаписи 																КАК Период,
	|	&Организация 																КАК Организация,
	|	&Контрагент 																КАК Контрагент,
	|	&Ссылка										 								КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	&ПериодЗаписи												 				КАК ДатаВыставленияПолучения,
	|	&ПолученВЭлектронномВиде 													КАК КодСпособаВыставленияПолучения,
	|	&КодВидаОперации 															КАК КодВидаОперации,
	|	ТаблицаДанныхДляЖурнала.НомерСчетаФактуры 									КАК НомерСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.ДатаСчетаФактуры 									КАК ДатаСчетаФактуры,
	|
	|	ТаблицаДанныхДляЖурнала.НомерКорректировочногоСчетаФактуры                  КАК НомерКорректировочногоСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.ДатаКорректировочногоСчетаФактуры                   КАК ДатаКорректировочногоСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.НомерИсправления                                    КАК НомерИсправления,
	|	ТаблицаДанныхДляЖурнала.ДатаИсправления                                     КАК ДатаИсправления,
	|	ТаблицаДанныхДляЖурнала.НомерИсправленияКорректировочногоСчетаФактуры       КАК НомерИсправленияКорректировочногоСчетаФактуры,
	|	ТаблицаДанныхДляЖурнала.ДатаИсправленияКорректировочногоСчетаФактуры        КАК ДатаИсправленияКорректировочногоСчетаФактуры,
	|	&ВалютаСчетаФактуры 														КАК Валюта,
	|
	|	Продавцы.НомерСтроки														КАК ИндексСтроки,
	|	Продавцы.Продавец															КАК Продавец,
	|	
	|	0													 						КАК СуммаПоСчетуФактуре,
	|	0													 						КАК СуммаНДС,
	|	0													 						КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	0													 						КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	0													 						КАК СуммаНДСРазницаУменьшение,
	|	0													 						КАК СуммаНДСРазницаУвеличение,
	|
	|	ТаблицаДанныхДляЖурнала.ПоСтавкеБезНДС                                      КАК ПоСтавкеБезНДС,
	|	ЛОЖЬ 																		КАК СчетФактураНеВыставляется,
	|	NULL 																		КАК СчетФактураВыданныйПокупателю,
	|	NULL 																		КАК Субкомиссионер,     
	|	ТаблицаДанныхДляЖурнала.КодВидаСделки 										КАК КодВидаСделки,
	|
	|	0													 						КАК СуммаПоСчетуФактуреКомиссия,
	|	0										 									КАК СуммаНДСКомиссия,
	|	0																			КАК СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	0																			КАК СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	0																			КАК СуммаНДСРазницаУменьшениеКомиссия,
	|	0																			КАК СуммаНДСРазницаУвеличениеКомиссия,
	|
	|	ТаблицаДанныхДляЖурнала.КодВидаОперацииКомиссия		                    	КАК КодВидаОперацииКомиссия
	|
	|ИЗ 
	|	ВтТаблицаДанныхДляЖурнала КАК ТаблицаДанныхДляЖурнала	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученный.Продавцы КАК Продавцы
	|	ПО
	|		Продавцы.Ссылка = &Ссылка
	|ГДЕ
	|	&СоставленКомиссионеромОтИмениПродавца
	|	И &СводныйКомиссионный
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
		
КонецФункции

Функция ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаДанныхОснований";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Ссылка КАК Ссылка,
	|	ДанныеОснований.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	МАКСИМУМ(ДанныеОснований.НаправлениеДеятельности) КАК НаправлениеДеятельности,
	|	МАКСИМУМ(ДанныеОснований.МестоХранения) КАК МестоХранения,
	|	МАКСИМУМ(ДанныеОснований.Партнер) КАК Партнер,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.НаправлениеДеятельности) КАК КоличествоНаправленийДеятельности,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.МестоХранения) КАК КоличествоМестХранения,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеОснований.Партнер) КАК КоличествоПартнеров
	|ПОМЕСТИТЬ ДанныеОснований
	|ИЗ
	|	(ВЫБРАТЬ
	|		ШапкаОснования.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика) КАК ХозяйственнаяОперация,
	|		ШапкаОснования.Склад КАК МестоХранения,
	|		ШапкаОснования.Партнер КАК Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВводОстатков КАК ШапкаОснования
	|			ПО ТаблицаОснований.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ТаблицаОснований.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ШапкаОснования.НаправлениеДеятельности,
	|		ШапкаОснования.ХозяйственнаяОперация,
	|		ШапкаОснования.Склад,
	|		ШапкаОснования.Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК ШапкаОснования
	|			ПО ТаблицаОснований.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ТаблицаОснований.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ШапкаОснования.НаправлениеДеятельности,
	|		ШапкаОснования.ХозяйственнаяОперация,
	|		ШапкаОснования.Склад,
	|		ШапкаОснования.Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ШапкаОснования
	|			ПО ТаблицаОснований.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ТаблицаОснований.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ШапкаОснования.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		НЕОПРЕДЕЛЕНО,
	|		ШапкаОснования.Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыкупВозвратнойТарыУПоставщика КАК ШапкаОснования
	|			ПО ТаблицаОснований.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ТаблицаОснований.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ШапкаОснования.НаправлениеДеятельности,
	|		ШапкаОснования.ДокументОснование.ХозяйственнаяОперация,
	|		ШапкаОснования.Склад,
	|		ШапкаОснования.Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК ШапкаОснования
	|			ПО ТаблицаОснований.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ТаблицаОснований.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ШапкаОснования.НаправлениеДеятельности,
	|		ШапкаОснования.ВидКорректировки,
	|		ШапкаОснования.Склад,
	|		ШапкаОснования.Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК ШапкаОснования
	|			ПО ТаблицаОснований.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ТаблицаОснований.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ШапкаОснования.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера),
	|		НЕОПРЕДЕЛЕНО,
	|		ШапкаОснования.Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионера КАК ШапкаОснования
	|			ПО ТаблицаОснований.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ТаблицаОснований.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ШапкаОснования.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомитенту),
	|		НЕОПРЕДЕЛЕНО,
	|		ШапкаОснования.Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитенту КАК ШапкаОснования
	|			ПО ТаблицаОснований.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ТаблицаОснований.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ШапкаОснования.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями),
	|		НЕОПРЕДЕЛЕНО,
	|		ШапкаОснования.Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ШапкаОснования
	|			ПО ТаблицаОснований.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ТаблицаОснований.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ШапкаОснования.НаправлениеДеятельности,
	|		ШапкаОснования.ХозяйственнаяОперация,
	|		ШапкаОснования.Склад,
	|		ШапкаОснования.Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ШапкаОснования
	|			ПО ТаблицаОснований.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ТаблицаОснований.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ШапкаОснования.НаправлениеДеятельности,
	|		ШапкаОснования.ХозяйственнаяОперация,
	|		ШапкаОснования.Склад,
	|		ШапкаОснования.Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ШапкаОснования
	|			ПО ТаблицаОснований.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ТаблицаОснований.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ШапкаОснования.НаправлениеДеятельности,
	|		ШапкаОснования.ХозяйственнаяОперация,
	|		НЕОПРЕДЕЛЕНО,
	|		ШапкаОснования.Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеУслугПрочихАктивов КАК ШапкаОснования
	|			ПО ТаблицаОснований.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ТаблицаОснований.Ссылка = &Ссылка
	//++ НЕ УТ
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ШапкаОснования.НаправлениеДеятельности,
	|		ШапкаОснования.ХозяйственнаяОперация,
	|		НЕОПРЕДЕЛЕНО,
	|		ШапкаОснования.Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика КАК ШапкаОснования
	|			ПО ТаблицаОснований.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ТаблицаОснований.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ШапкаОснования.Договор.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеПоЛизинговомуДоговору),
	|		НЕОПРЕДЕЛЕНО,
	|		ШапкаОснования.Договор.Партнер
	|	ИЗ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК ТаблицаОснований
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеУслугПоЛизингу КАК ШапкаОснования
	|			ПО ТаблицаОснований.ДокументОснование = ШапкаОснования.Ссылка
	|	ГДЕ
	|		ТаблицаОснований.Ссылка = &Ссылка
	|	
	//-- НЕ УТ
	|											) КАК ДанныеОснований
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОснований.ХозяйственнаяОперация";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	Если Не ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтТаблицаДанныхОснований", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаДанныхОснований(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка,
	|	ВложенныйЗапрос.ДатаДокументаИБ,
	|	МАКСИМУМ(ВложенныйЗапрос.НомерДокументаИБ) КАК НомерДокументаИБ,
	|	ВложенныйЗапрос.ТипСсылки,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ХозяйственнаяОперация,
	|	ВложенныйЗапрос.Партнер,
	|	ВложенныйЗапрос.Контрагент,
	|	ВложенныйЗапрос.НаправлениеДеятельности,
	|	ВложенныйЗапрос.МестоХранения,
	|	ВложенныйЗапрос.Подразделение,
	|	МАКСИМУМ(ВложенныйЗапрос.Ответственный) КАК Ответственный,
	|	МАКСИМУМ(ВложенныйЗапрос.Комментарий) КАК Комментарий,
	|	МАКСИМУМ(ВложенныйЗапрос.Валюта) КАК Валюта,
	|	МАКСИМУМ(ВложенныйЗапрос.Сумма) КАК Сумма,
	|	МАКСИМУМ(ВложенныйЗапрос.Статус) КАК Статус,
	|	МАКСИМУМ(ВложенныйЗапрос.Проведен) КАК Проведен,
	|	МАКСИМУМ(ВложенныйЗапрос.ПометкаУдаления) КАК ПометкаУдаления,
	|	МИНИМУМ(ВложенныйЗапрос.ДополнительнаяЗапись) КАК ДополнительнаяЗапись,
	|	МАКСИМУМ(ВложенныйЗапрос.Дополнительно) КАК Дополнительно,
	|	МАКСИМУМ(ВложенныйЗапрос.ДатаПервичногоДокумента) КАК ДатаПервичногоДокумента,
	|	МАКСИМУМ(ВложенныйЗапрос.НомерПервичногоДокумента) КАК НомерПервичногоДокумента
	|ИЗ
	|	(ВЫБРАТЬ
	|		&Ссылка КАК Ссылка,
	|		&Период КАК ДатаДокументаИБ,
	|		&Номер КАК НомерДокументаИБ,
	|		&ИдентификаторМетаданных КАК ТипСсылки,
	|		&Организация КАК Организация,
	|		ДанныеОснований.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ВЫБОР
	|			КОГДА ДанныеОснований.КоличествоПартнеров = 1
	|				ТОГДА ДанныеОснований.Партнер
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК Партнер,
	|		&Контрагент КАК Контрагент,
	|		ВЫБОР
	|			КОГДА ДанныеОснований.КоличествоНаправленийДеятельности = 1
	|				ТОГДА ДанныеОснований.НаправлениеДеятельности
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК НаправлениеДеятельности,
	|		ВЫБОР
	|			КОГДА ДанныеОснований.КоличествоМестХранения = 1
	|				ТОГДА ДанныеОснований.МестоХранения
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК МестоХранения,
	|		&Подразделение КАК Подразделение,
	|		&Ответственный КАК Ответственный,
	|		"""" КАК Комментарий,
	|		&Валюта КАК Валюта,
	|		0 КАК Сумма,
	|		НЕОПРЕДЕЛЕНО КАК Статус,
	|		&Проведен КАК Проведен,
	|		&ПометкаУдаления КАК ПометкаУдаления,
	|		ЛОЖЬ КАК ДополнительнаяЗапись,
	|		&ИнформацияПоИсправлению КАК Дополнительно,
	// 4D:ERP для Беларуси, Дмитрий, 07.10.2017 14:28:35 
	// Серия в реестре документов
	// {
	|	&ДатаВходящегоДокумента                 КАК ДатаПервичногоДокумента,
	|	&СерияВходящегоДокумента                КАК СерияПервичногоДокумента,
	|	&НомерВходящегоДокумента                КАК НомерПервичногоДокумента
	// }
	// 4D
	|	ИЗ
	|		Документ.СчетФактураПолученный КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеОснований КАК ДанныеОснований
	|			ПО (ДанныеОснований.Ссылка = ДанныеДокумента.Ссылка)
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И ДанныеОснований.ХозяйственнаяОперация В
	|				(ВЫБРАТЬ ПЕРВЫЕ 1
	|					ДанныеОснований.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|				ИЗ
	|					ДанныеОснований КАК ДанныеОснований
	|				УПОРЯДОЧИТЬ ПО
	|					ХозяйственнаяОперация)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&Ссылка,
	|		&Период,
	|		&Номер,
	|		&ИдентификаторМетаданных,
	|		&Организация,
	|		ДанныеОснований.ХозяйственнаяОперация,
	|		ВЫБОР
	|			КОГДА ДанныеОснований.КоличествоПартнеров = 1
	|				ТОГДА ДанныеОснований.Партнер
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		&Контрагент,
	|		ВЫБОР
	|			КОГДА ДанныеОснований.КоличествоНаправленийДеятельности = 1
	|				ТОГДА ДанныеОснований.НаправлениеДеятельности
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеОснований.КоличествоМестХранения = 1
	|				ТОГДА ДанныеОснований.МестоХранения
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		&Подразделение,
	|		&Ответственный,
	|		"""",
	|		&Валюта,
	|		0,
	|		НЕОПРЕДЕЛЕНО,
	|		&Проведен,
	|		&ПометкаУдаления,
	|		ИСТИНА,
	|		&ИнформацияПоИсправлению,
	// 4D:ERP для Беларуси, Дмитрий, 07.10.2017 14:28:35 
	// Серия в реестре документов
	// {
	|	&ДатаВходящегоДокумента,
	|	&СерияВходящегоДокумента,
	|	&НомерВходящегоДокумента
	// }
	// 4D
	|	ИЗ
	|		Документ.СчетФактураПолученный КАК ДанныеДокумента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеОснований КАК ДанныеОснований
	|			ПО (ДанныеОснований.Ссылка = ДанныеДокумента.Ссылка)
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И НЕ ДанныеОснований.ХозяйственнаяОперация В
	|					(ВЫБРАТЬ ПЕРВЫЕ 1
	|						ДанныеОснований.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|					ИЗ
	|						ДанныеОснований КАК ДанныеОснований
	|					УПОРЯДОЧИТЬ ПО
	|						ХозяйственнаяОперация)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ТипСсылки,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ХозяйственнаяОперация,
	|	ВложенныйЗапрос.Партнер,
	|	ВложенныйЗапрос.Контрагент,
	|	ВложенныйЗапрос.НаправлениеДеятельности,
	|	ВложенныйЗапрос.Подразделение,
	|	ВложенныйЗапрос.МестоХранения,
	|	ВложенныйЗапрос.ДатаДокументаИБ,
	|	ВложенныйЗапрос.Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//++ НЕ УТ

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&ДатаПолучения                          КАК Период,
	|	&Организация                            КАК Организация,
	|	НАЧАЛОПЕРИОДА(&ПериодЗаписи, ДЕНЬ)      КАК ДатаОтражения
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

//-- НЕ УТ

Функция ТекстЗапросаТаблицаРеквизиты(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "Реквизиты";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Организация,
	|	&Период";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Определяет счета-фактуры выданные для печати по переданным документам-основаниям.
// 
// Параметры:
//	МассивОбъектов - Массив - Документ-основания, для которых необходимо найти счета-фактуры
//	ПечатьВВалюте - Булево - Признак печати счетов-фактуры в валюте.
//
// Возвращаемое значение:
//	Структура - структура со следующими свойствами:
//	* СчетаФактурыНаПечать - Массив - Найденные счета-фактуры для печати.
//	* ТаблицаОшибок - ТаблицаЗначений - Документы-основания, по которым счет-фактура не может быть напечатан.
//
Функция ПолучитьСчетаФактурыНаПечать(МассивОбъектов, ПечатьВВалюте = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = "";
	ПервыйТип    = Истина;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		ИмяОбъекта = Сред(СтруктураОбъектов.Ключ, 10);
		
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ДокументОснование_" + ИмяОбъекта, СтруктураОбъектов.Значение);
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА %ТекстУсловияТребуется% ТОГДА
		|			ЛОЖЬ
		|	ИНАЧЕ
		|		ИСТИНА
		|	КОНЕЦ КАК НеТребуетсяСчетФактура,
		|	ВЫБОР
		|		КОГДА &ПечатьВВалюте И ДанныеДокумента.Валюта = &ВалютаРегламентированногоУчета ТОГДА
		|			ИСТИНА
		|	ИНАЧЕ
		|		ЛОЖЬ
		|	КОНЕЦ КАК НеТребуетсяПечатьВВалюте
		|		
		|//ОператорПОМЕСТИТЬ
		|ИЗ
		|	Документ.%ИмяОбъекта% КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка В (&ДокументОснование_%ИмяОбъекта%)";
		
		МенеджерОбъекта = Документы[ИмяОбъекта];
		ТекстУсловияТребуется = МенеджерОбъекта.ТекстУсловияТребуетсяСчетФактураПосредника();
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстУсловияТребуется%", ТекстУсловияТребуется);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяОбъекта%", ИмяОбъекта);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"//ОператорПОМЕСТИТЬ", ?(ПервыйТип, "ПОМЕСТИТЬ ТаблицаОснований", ""));
		
		ПервыйТип = Ложь;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ТаблицаОснований.Ссылка                 КАК ДокументОснование,
	|	МАКСИМУМ(СчетаФактуры.НомерИсправления) КАК НомерИсправления
	|ПОМЕСТИТЬ НомераИсправлений
	|ИЗ
	|	ТаблицаОснований КАК ТаблицаОснований
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетаФактурыОснования
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетаФактуры
	|			ПО СчетаФактурыОснования.Ссылка = СчетаФактуры.Ссылка
	|			И НЕ СчетаФактуры.ПометкаУдаления
	|		ПО ТаблицаОснований.Ссылка = СчетаФактурыОснования.ДокументОснование
	|			И НЕ ТаблицаОснований.НеТребуетсяСчетФактура
	|			И НЕ ТаблицаОснований.НеТребуетсяПечатьВВалюте
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОснований.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаФактурыОснования.ДокументОснование КАК Ссылка
	|
	|ПОМЕСТИТЬ ОснованияСоСчетФактурой
	|ИЗ
	|	НомераИсправлений КАК СчетаФактурыОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураПолученный.Ссылка КАК Ссылка
	|ИЗ
	|	НомераИсправлений КАК НомераИсправлений
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетаФактурыОснования
	|		ПО НомераИсправлений.ДокументОснование = СчетаФактурыОснования.ДокументОснование
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ПО СчетаФактурыОснования.Ссылка = СчетФактураПолученный.Ссылка
	|			И НЕ СчетФактураПолученный.ПометкаУдаления
	|			И НомераИсправлений.НомерИсправления = СчетФактураПолученный.НомерИсправления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОснований.Ссылка                   КАК ДокументОснование,
	|	ТаблицаОснований.НеТребуетсяСчетФактура   КАК НеТребуетсяСчетФактура,
	|	ТаблицаОснований.НеТребуетсяПечатьВВалюте КАК НеТребуетсяПечатьВВалюте,
	|	ВЫБОР
	|		КОГДА ОснованияСоСчетФактурой.Ссылка ЕСТЬ NULL ТОГДА
	|			ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ                                     КАК НеВыставленСчетФактура
	|ИЗ
	|	ТаблицаОснований КАК ТаблицаОснований
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ОснованияСоСчетФактурой КАК ОснованияСоСчетФактурой
	|	ПО ТаблицаОснований.Ссылка = ОснованияСоСчетФактурой.Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ПечатьВВалюте", ПечатьВВалюте);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",
		ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	СчетаФактурыНаПечать = РезультатЗапроса[3].Выгрузить().ВыгрузитьКолонку("Ссылка");
	ТаблицаОшибок        = РезультатЗапроса[4].Выгрузить();
	
	Структура = Новый Структура;
	Структура.Вставить("СчетаФактурыНаПечать", СчетаФактурыНаПечать);
	Структура.Вставить("ТаблицаОшибок",        ТаблицаОшибок);
	
	Возврат Структура;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	НЕ СчетФактураПолученный.ПометкаУдаления
	|	И СчетФактураПолученный.Корректировочный
	|	И СчетФактураПолученный.Дата >= ДАТАВРЕМЯ(2015, 1, 1)
	|	И СчетФактураПолученный.КодВидаОперацииНаУменьшение = """"
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ОбновлениеИнформационнойБазыУТ.ЗаполнитьПустойРеквизитЗначениемПоУмолчанию(
		Параметры, 
		"Документ.СчетФактураПолученный", 
		"КодВидаОперацииНаУменьшение", 
		"18");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
