#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ВариантУчетаИмущества = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВариантУчетаИмущества");
	Для каждого Строка Из Начисления Цикл
		Если ВариантУчетаИмущества = Перечисления.ВариантыУчетаИмуществаПриЛизинге.НаБалансе Тогда
			Строка.Подразделение     = Неопределено;
			Строка.СтатьяРасходов    = Неопределено;
			Строка.АналитикаРасходов = Неопределено;
		КонецЕсли;
		Если Строка.ТипНачисления <> Перечисления.ТипыНачисленийПоЛизингу.ЗачетОбеспечительногоПлатежа Тогда
			Строка.ОбеспечительныйПлатеж = Неопределено;
		КонецЕсли;
	КонецЦикла;
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
		
		Для Каждого ТекСтрока Из Начисления Цикл
			ТекСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		КонецЦикла;
		
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВТЧ(ЭтотОбъект);
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
		СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
		
		ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Начисления, СтруктураДействий, Неопределено);
		
	КонецЕсли; 
	
	СуммаДокумента = ЦенообразованиеКлиентСервер.ПолучитьСуммуДокумента(Начисления, ЦенаВключаетНДС);
	
	СтруктураКурса = РаботаСКурсамиВалютУТ.СтруктураКурсаВалюты(Курс, Кратность);
	
	ВзаиморасчетыСервер.ЗаполнитьСуммуВзаиморасчетовВПоступлении(ЭтотОбъект, "Начисления", СтруктураКурса);
	Ценообразование.РассчитатьСуммыВзаиморасчетовВТабличнойЧасти(ЭтотОбъект, "Начисления", СтруктураКурса);
	ВзаиморасчетыСервер.ЗаполнитьСуммуНДСВзаиморасчетовВТабличнойЧасти(ЭтотОбъект, "Начисления");
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ВзаиморасчетыСервер.ЗаполнитьИдентификаторыСтрокВТабличнойЧасти(Начисления);
	КонецЕсли;
	
	Документы.СчетФактураПолученный.ПроверитьРеквизитыСчетФактуры(Ссылка, ПометкаУдаления, Организация);
	
	УчетОСВызовСервера.ПодготовитьДанныеДляЗаданияПризнаниеВНУЛизинговыхПлатежейКЗакрытиюМесяца(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	ИнициализироватьДокумент();
	
	ДатаВходящегоДокумента	= Дата(1,1,1);
	НомерВходящегоДокумента	= "";
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
	// Выполним востановление НДС по результатам зачета обеспечительного платежа
	Документы.СчетФактураПолученныйАванс.СформироватьДвиженияПоКнигеПродаж(Ссылка);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		Документы.СчетФактураПолученный.АктуализироватьСчетФактуру(ЭтотОбъект.Ссылка, ЭтотОбъект.Проведен);
	КонецЕсли;
	
	Если Не Отказ Тогда
		УчетОСВызовСервера.ЗарегистрироватьЗаданиеПризнаниеВНУЛизинговыхПлатежейКЗакрытиюМесяца(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС  Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Начисления.СтавкаНДС");
	КонецЕсли;
	
	ВариантУчетаИмущества = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВариантУчетаИмущества");
	Если ВариантУчетаИмущества = Перечисления.ВариантыУчетаИмуществаПриЛизинге.НаБалансе Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Начисления.Подразделение");
		МассивНепроверяемыхРеквизитов.Добавить("Начисления.СтатьяРасходов");
	КонецЕсли;
	МассивНепроверяемыхРеквизитов.Добавить("Начисления.ОбеспечительныйПлатеж");
	ПроверитьЗаполнениеТЧНачисления(Отказ);
		
	Если МассивНепроверяемыхРеквизитов.Найти("Начисления.АналитикаРасходов") = Неопределено Тогда
		ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
			ЭтотОбъект, Новый Структура("Начисления"), МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.ПоступлениеУслугПоЛизингу.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДоходыИРасходыСервер.ОтразитьПрочиеРасходы(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьПартииПрочихРасходов(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьПрочиеАктивыПассивы(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьНДСПредъявленный(ДополнительныеСвойства, Движения, Отказ);
	УправленческийУчетПроведениеСервер.ОтразитьДвиженияДоходыРасходыПрочиеАктивыПассивы(ДополнительныеСвойства, Движения, Отказ);
	ВзаиморасчетыСервер.ОтразитьСуммыДокументаВВалютеРегл(ДополнительныеСвойства, Движения, Отказ);
	
	// Нужно отразить в регл учете оперативно, для последующего выполнения регл. операции "Признание лизинговых платежей в налоговом учете".
	ВариантУчетаИмуществаПоДоговору = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВариантУчетаИмущества");
	ОтразитьВРеглУчетеОперативно = ВариантУчетаИмуществаПоДоговору = Перечисления.ВариантыУчетаИмуществаПриЛизинге.НаБалансе;
	
	Если НЕ ОтразитьВРеглУчетеОперативно Тогда
		РеглУчетПроведениеСервер.ОтразитьПорядокОтраженияПрочихОпераций(ДополнительныеСвойства, Отказ);
	КонецЕсли; 
	
	РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	//++ НЕ УТКА
	МеждународныйУчетПроведениеСервер.ЗарегистрироватьКОтражению(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);
	//-- НЕ УТКА
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
	// Выполним востановление НДС по результатам зачета обеспечительного платежа
	Документы.СчетФактураПолученныйАванс.СформироватьДвиженияПоКнигеПродаж(Ссылка);
	
	Если Не Отказ И ОтразитьВРеглУчетеОперативно Тогда
		
		Результат = РеглУчетПроведениеСервер.ОтразитьДокумент(
			Новый Структура("Ссылка, Дата, Организация", Ссылка, Дата, Организация));
		
		Если Результат <> Перечисления.СтатусыОтраженияДокументовВРеглУчете.ОтраженоВРеглУчете Тогда
			ТекстСообщения = РеглУчетПроведениеСервер.СводныйКомментарийПоДокументу(Ссылка, Организация);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка,,, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Ответственный = Пользователи.ТекущийПользователь();
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить(); 
	
	Если НЕ ЗначениеЗаполнено(Валюта) Тогда
		Валюта = ВалютаРегламентированногоУчета;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВалютаВзаиморасчетов) Тогда
		ВалютаВзаиморасчетов = ВалютаВзаиморасчетов;
	КонецЕсли;
	
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Подразделение = ЗначениеНастроекПовтИсп.ПодразделениеПользователя(Ответственный, Подразделение);
	
	УчетНДСУТ.ПроверитьКорректностьДеятельностиНДСПотребления(
		ЗакупкаПодДеятельность, 
		Организация,
		Дата, 
		Неопределено);
	
	Если НЕ ЗначениеЗаполнено(ЗакупкаПодДеятельность) Тогда
		ЗакупкаПодДеятельность = Справочники.Организации.НалогообложениеНДС(Организация, , Дата);
	КонецЕсли;
	
	РаботаСКурсамиВалютУТ.ЗаполнитьКурсКратностьПоУмолчанию(Курс, Кратность, Валюта, ВалютаВзаиморасчетов);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура СформироватьСписокРегистровДляКонтроля()
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Новый Массив);
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеТЧНачисления(Отказ)
	
	// Вспомогательные реквизиты для проверки учета НДС
	ПоФактИспользованию = (ЗакупкаПодДеятельность = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
	ИзДокумента = Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента;
	НаНаправленияДеятельности = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
	НаПроизводственныеЗатраты = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты;
	ПартионныйУчетВключен = УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВключен(НачалоМесяца(Дата));
	ВариантУчетаИмущества = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ВариантУчетаИмущества");
	
	ДоступныеТипыНачислений = Справочники.ДоговорыЛизинга.ТипыНачисленийПоДоговору(Договор);
	
	Для ТекИндекс = 0 По Начисления.Количество()-1 Цикл
		
		// Статья расходов не должна ссылаться на налогообложение в документе закупки,
		// если у организации включено налогообложение по факт. использованию
		Если ПартионныйУчетВключен
			И ПоФактИспользованию
			И ЗначениеЗаполнено(Начисления[ТекИндекс].СтатьяРасходов) Тогда
			
			Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Начисления[ТекИндекс].СтатьяРасходов,
			"ВариантРаздельногоУчетаНДС, ВариантРаспределенияРасходов");
			
			Если (Реквизиты.ВариантРаспределенияРасходов = НаНаправленияДеятельности
					ИЛИ Реквизиты.ВариантРаспределенияРасходов = НаПроизводственныеЗатраты)
				 И Реквизиты.ВариантРаздельногоУчетаНДС = ИзДокумента Тогда
				
				ТекстОшибки = НСтр("ru='При использовании учета НДС по фактическому использованию, у статьи расходов должен быть выбран раздельный учет НДС по расходам: ""НДС распределяется по видам налогообложения пропорционально выручке"" в строке %1 списка ""Начисления""'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтрШаблон(ТекстОшибки, Начисления[ТекИндекс].НомерСтроки),
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Начисления", Начисления[ТекИндекс].НомерСтроки, "СтатьяРасходов"),
					,
					Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДоступныеТипыНачислений.Найти(Начисления[ТекИндекс].ТипНачисления) = Неопределено Тогда
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Тип начисления ""%1"" не предусмотрен в рамках данного договора'"),
				Начисления[ТекИндекс].ТипНачисления);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ЭтотОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Начисления", Начисления[ТекИндекс].НомерСтроки, "ТипНачисления"),
				,
				Отказ);
		КонецЕсли;
		
		Если Начисления[ТекИндекс].ТипНачисления = Перечисления.ТипыНачисленийПоЛизингу.ЗачетОбеспечительногоПлатежа Тогда
			
			Если НЕ ЗначениеЗаполнено(Начисления[ТекИндекс].ОбеспечительныйПлатеж) Тогда
				ТекстОшибки = НСтр("ru='Не заполнено поле ""Обеспечительный платеж"" в строке %1 списка ""Начисления""'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтрШаблон(ТекстОшибки, Начисления[ТекИндекс].НомерСтроки),
					ЭтотОбъект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Начисления", Начисления[ТекИндекс].НомерСтроки, "ОбеспечительныйПлатеж"),
					,
					Отказ);
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
