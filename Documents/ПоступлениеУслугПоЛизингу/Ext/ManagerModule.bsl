#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт


	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);


КонецПроцедуры

// Заполняет список команд создания на основании.
//
// Параметры:
// 		КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПоступлениеУслугПоЛизингу) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ПоступлениеУслугПоЛизингу.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ПоступлениеУслугПоЛизингу);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьЛизинг";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

// Возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = ""
		+ ТекстЗапросаИмуществоЗаБалансом()
		+ "ОБЪЕДИНИТЬ ВСЕ"
		+ ТекстЗапросаИмуществоНаБалансе()
		+ "";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
// 		Строка - Строка текста запроса
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса);
	
	СуммыДокументовВВалютеРегл(ТекстыЗапроса, Регистры);
	ПрочиеРасходы(ТекстыЗапроса, Регистры);
	ПартииПрочихРасходов(ТекстыЗапроса, Регистры);
	ПорядокОтраженияПрочихОпераций(ТекстыЗапроса, Регистры);
	ПрочиеАктивыПассивы(ТекстыЗапроса, Регистры);
	ДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса, Регистры);
	НДСПредъявленный(ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Ложь, Истина, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.Договор.ВариантУчетаИмущества КАК ВариантУчетаИмущества,
	|	ДанныеДокумента.Договор.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДокумента.ЗакупкаПодДеятельность КАК ЗакупкаПодДеятельность,
	|	ДанныеДокумента.МоментВремени КАК МоментВремени
	|ИЗ
	|	Документ.ПоступлениеУслугПоЛизингу КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();
	
	КоэффициентПересчетаВВалютуУпр = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(Реквизиты.ВалютаВзаиморасчетов, ВалютаУправленческогоУчета, Реквизиты.Период);
	КоэффициентПересчетаВВалютуРегл = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(Реквизиты.ВалютаВзаиморасчетов, ВалютаРегламентированногоУчета, Реквизиты.Период);
	
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Валюта", Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов", Реквизиты.ВалютаВзаиморасчетов);
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета", ВалютаУправленческогоУчета);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", ?(Реквизиты.ЦенаВключаетНДС, 0, 1));
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ВариантУчетаИмущества", Реквизиты.ВариантУчетаИмущества);
	Запрос.УстановитьПараметр("НаправлениеДеятельности", Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр", КоэффициентПересчетаВВалютуУпр);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("Договор", Реквизиты.Договор);
	Запрос.УстановитьПараметр("ЗакупкаПодДеятельность", Реквизиты.ЗакупкаПодДеятельность);
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов", ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Запрос.УстановитьПараметр("Контрагент", Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("МоментВремени", Реквизиты.МоментВремени);
	Запрос.УстановитьПараметр("СтатьяАктивовПассивов", ПланыВидовХарактеристик.СтатьиАктивовПассивов.Лизинг);
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Процедура ВременнаяТаблицаОплатаОбеспечительногоПлатежа(ТекстыЗапроса)
	
	ИмяТаблицы = "ОплатаОбеспечительногоПлатежа";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица ОплатаОбеспечительногоПлатежа
	|"+
	"ВЫБРАТЬ
	|	РасшифровкаСписаниеБезналичныхДС.Ссылка                     КАК Документ,
	|	РасшифровкаСписаниеБезналичныхДС.Ссылка.Дата                КАК ДатаОплаты,
	|	РасшифровкаСписаниеБезналичныхДС.Ссылка.Валюта              КАК ВалютаОплаты,
	|	&ВалютаВзаиморасчетов                                       КАК ВалютаВзаиморасчетов,
	|	СУММА(РасшифровкаСписаниеБезналичныхДС.Сумма)               КАК Сумма,
	|	СУММА(РасшифровкаСписаниеБезналичныхДС.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ ОплатаОбеспечительногоПлатежа
	|ИЗ
	|	Документ.ПоступлениеУслугПоЛизингу.Начисления КАК Начисления
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК РасшифровкаСписаниеБезналичныхДС
	|	ПО
	|		Начисления.ОбеспечительныйПлатеж = РасшифровкаСписаниеБезналичныхДС.Ссылка
	|		И РасшифровкаСписаниеБезналичныхДС.ДоговорЛизинга = &Договор
	|		И РасшифровкаСписаниеБезналичныхДС.ВалютаВзаиморасчетов = &ВалютаВзаиморасчетов
	|		И РасшифровкаСписаниеБезналичныхДС.ТипПлатежаПоЛизингу = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоЛизингу.ОбеспечительныйПлатеж)
	|	
	|ГДЕ
	|	Начисления.Ссылка = &Ссылка
	|	И Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ЗачетОбеспечительногоПлатежа)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаСписаниеБезналичныхДС.Ссылка,
	|	РасшифровкаСписаниеБезналичныхДС.Ссылка.Дата,
	|	РасшифровкаСписаниеБезналичныхДС.Ссылка.Валюта,
	|	РасшифровкаСписаниеБезналичныхДС.ВалютаВзаиморасчетов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасшифровкаРасходныйКассовыйОрдер.Ссылка                     КАК Документ,
	|	РасшифровкаРасходныйКассовыйОрдер.Ссылка.Дата                КАК ДатаОплаты,
	|	РасшифровкаРасходныйКассовыйОрдер.Ссылка.Валюта              КАК ВалютаОплаты,
	|	&ВалютаВзаиморасчетов                                        КАК ВалютаВзаиморасчетов,
	|	СУММА(РасшифровкаРасходныйКассовыйОрдер.Сумма)               КАК Сумма,
	|	СУММА(РасшифровкаРасходныйКассовыйОрдер.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|ИЗ
	|	Документ.ПоступлениеУслугПоЛизингу.Начисления КАК Начисления
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РасшифровкаРасходныйКассовыйОрдер
	|	ПО
	|		Начисления.ОбеспечительныйПлатеж = РасшифровкаРасходныйКассовыйОрдер.Ссылка
	|		И РасшифровкаРасходныйКассовыйОрдер.ДоговорЛизинга = &Договор
	|		И РасшифровкаРасходныйКассовыйОрдер.ТипПлатежаПоЛизингу = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоЛизингу.ОбеспечительныйПлатеж)
	|	
	|ГДЕ
	|	Начисления.Ссылка = &Ссылка
	|	И Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ЗачетОбеспечительногоПлатежа)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаРасходныйКассовыйОрдер.Ссылка,
	|	РасшифровкаРасходныйКассовыйОрдер.Ссылка.Дата,
	|	РасшифровкаРасходныйКассовыйОрдер.Ссылка.Валюта,
	|	РасшифровкаРасходныйКассовыйОрдер.ВалютаВзаиморасчетов" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаПериодыКурсовВалют(ТекстыЗапроса)
	
	ИмяТаблицы = "ПериодыКурсовВалют";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОплатаОбеспечительногоПлатежа(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица ПериодыКурсовВалют
	|"+
	"ВЫБРАТЬ
	|	ОплатаОбеспечительногоПлатежа.Документ КАК Документ,
	|	ОплатаОбеспечительногоПлатежа.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	МАКСИМУМ(КурсыВалют.Период) КАК Период
	|ПОМЕСТИТЬ ПериодыКурсовВалют
	|ИЗ
	|	ОплатаОбеспечительногоПлатежа КАК ОплатаОбеспечительногоПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.КурсыВалют КАК КурсыВалют
	|	ПО 
	|		ОплатаОбеспечительногоПлатежа.ВалютаВзаиморасчетов = КурсыВалют.Валюта
	|		И ОплатаОбеспечительногоПлатежа.ДатаОплаты >= КурсыВалют.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ОплатаОбеспечительногоПлатежа.Документ,
	|	ОплатаОбеспечительногоПлатежа.ВалютаВзаиморасчетов" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаКурсыОбеспечительногоПлатежа(ТекстыЗапроса)
	
	ИмяТаблицы = "втКурсыОбеспечительногоПлатежа";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПериодыКурсовВалют(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втКурсыОбеспечительногоПлатежа
	|"+
	"ВЫБРАТЬ
	|	ОплатаОбеспечительноПлатежа.Документ КАК Документ,
	|	ВЫБОР
	|		КОГДА ОплатаОбеспечительноПлатежа.ВалютаОплаты = &ВалютаРегламентированногоУчета
	|			ТОГДА ОплатаОбеспечительноПлатежа.Сумма / ОплатаОбеспечительноПлатежа.СуммаВзаиморасчетов
	|		КОГДА ОплатаОбеспечительноПлатежа.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ОплатаОбеспечительноПлатежа.СуммаВзаиморасчетов / ОплатаОбеспечительноПлатежа.Сумма
	|		ИНАЧЕ 
	|			ЕСТЬNULL(КурсыВалют.Курс, 1) / ЕСТЬNULL(КурсыВалют.Кратность, 1)
	|	КОНЕЦ КАК Курс
	|	
	|ПОМЕСТИТЬ втКурсыОбеспечительногоПлатежа
	|ИЗ
	|	ОплатаОбеспечительногоПлатежа ОплатаОбеспечительноПлатежа
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПериодыКурсовВалют КАК ПериодыКурсовВалют
	|	ПО 
	|		ОплатаОбеспечительноПлатежа.Документ = ПериодыКурсовВалют.Документ
	|		И ОплатаОбеспечительноПлатежа.ВалютаВзаиморасчетов = ПериодыКурсовВалют.ВалютаВзаиморасчетов
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют КАК КурсыВалют
	|	ПО
	|		ПериодыКурсовВалют.Период = КурсыВалют.Период
	|		И ПериодыКурсовВалют.ВалютаВзаиморасчетов = КурсыВалют.Валюта" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСуммыДокументовВВалютеРегл(ТекстыЗапроса)
	
	ИмяТаблицы = "ВтСуммыДокументовВВалютеРегл";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаКурсыОбеспечительногоПлатежа(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица ВтСуммыДокументовВВалютеРегл
	|"+
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	Начисления.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	0 КАК СуммаБезНДС,
	|	Начисления.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА Начисления.СуммаВзаиморасчетов - Начисления.СуммаНДСВзаиморасчетов
	|		КОГДА Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ЗачетОбеспечительногоПлатежа)
	|			ТОГДА (Начисления.СуммаВзаиморасчетов - Начисления.СуммаНДСВзаиморасчетов) * КурсыОбеспечительногоПлатежа.Курс
	|		ИНАЧЕ (Начисления.СуммаВзаиморасчетов - Начисления.СуммаНДСВзаиморасчетов) * &КоэффициентПересчетаВВалютуРегл
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|	ЕстьNULL(Суммы.БазаНДСРегл, ВЫБОР
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА Начисления.СуммаВзаиморасчетов - Начисления.СуммаНДСВзаиморасчетов
	|		КОГДА Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ЗачетОбеспечительногоПлатежа)
	|			ТОГДА (Начисления.СуммаВзаиморасчетов - Начисления.СуммаНДСВзаиморасчетов) * КурсыОбеспечительногоПлатежа.Курс
	|		ИНАЧЕ (Начисления.СуммаВзаиморасчетов - Начисления.СуммаНДСВзаиморасчетов) * &КоэффициентПересчетаВВалютуРегл
	|	КОНЕЦ) КАК БазаНДСРегл,
	|	ВЫБОР
	|		КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА Начисления.СуммаНДСВзаиморасчетов
	|		КОГДА Начисления.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ЗачетОбеспечительногоПлатежа)
	|			ТОГДА Начисления.СуммаНДСВзаиморасчетов * КурсыОбеспечительногоПлатежа.Курс
	|		ИНАЧЕ Начисления.СуммаНДСВзаиморасчетов * &КоэффициентПересчетаВВалютуРегл
	|	КОНЕЦ КАК СуммаНДСРегл
	|ПОМЕСТИТЬ ВтСуммыДокументовВВалютеРегл
	|ИЗ
	|	Документ.ПоступлениеУслугПоЛизингу.Начисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтКурсыОбеспечительногоПлатежа КАК КурсыОбеспечительногоПлатежа
	|		ПО Начисления.ОбеспечительныйПлатеж = КурсыОбеспечительногоПлатежа.Документ
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|		ПО
	|			Начисления.Ссылка = Суммы.Регистратор
	|			И Начисления.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|			И Суммы.БазаНДСРегл <> 0
	|			И (Начисления.СуммаВзаиморасчетов - Начисления.СуммаНДСВзаиморасчетов) = Суммы.СуммаБезНДС
	|			И Начисления.СуммаНДСВзаиморасчетов = Суммы.СуммаНДС
	|ГДЕ
	|	Начисления.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Функция ТекстЗапросаВтТаблицаАналитикУчетаПартий(Запрос, ТекстыЗапроса)
	
	// Создадим временную таблицу "ВтТаблицаАналитикУчетаПартий"
	
	ТекстВыборкаПоляАналитик =
	"ВЫБРАТЬ
	|	""Начисления"" 							КАК ИмяТабличнойЧасти,
	|	ТаблицаДокумента.НомерСтроки 			КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО							КАК Поставщик,
	|	ДанныеДокумента.Контрагент				КАК Контрагент,
	|	ТаблицаДокумента.СтавкаНДС 				КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Статьи.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В
	|		  (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|		  И ЕСТЬNULL(Статьи.ВариантРаспределенияРасходов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		  И ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|		КОГДА ЕСТЬNULL(Статьи.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|		ИНАЧЕ ДанныеДокумента.ЗакупкаПодДеятельность
	|	КОНЕЦ                               	КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Статьи.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)) <>
	|		  ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПустаяСсылка)
	|			ТОГДА Статьи.ВидЦенностиНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ                               	КАК ВидЦенности
	|ПОМЕСТИТЬ ВТПоляАналитикУчетаПартий
	|ИЗ
	|	Документ.ПоступлениеУслугПоЛизингу.Начисления КАК ТаблицаДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеУслугПоЛизингу КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаДокумента.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|		ПО ТаблицаДокумента.СтатьяРасходов = Статьи.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|";
	
	ТекстЗапроса = Справочники.КлючиАналитикиУчетаПартий.ТекстЗапросаВтТаблицаАналитикУчетаПартий(ТекстВыборкаПоляАналитик, Запрос, ТекстыЗапроса);
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ВтТаблицаАналитикУчетаПартий
	|" + ТекстЗапроса + "
	|;";
	
	ТекстыЗапроса[ТекстыЗапроса.Количество() - 1].Значение = ТекстЗапроса;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ВременнаяТаблицаРасходы(ТекстыЗапроса)
	
	ИмяТаблицы = "втРасходы";
	
	Если ПроведениеСерверУТ.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСуммыДокументовВВалютеРегл(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втРасходы
	|"+
	"ВЫБРАТЬ
	|	ТаблицаНачисления.Ссылка КАК Ссылка,
	|	ТаблицаНачисления.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаНачисления.Подразделение КАК Подразделение,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаНачисления.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаНачисления.АналитикаРасходов КАК АналитикаРасходов,
	|
	|	ТаблицаАналитикУчетаПартий.ВидЦенности			КАК ВидЦенности,
	|	ТаблицаАналитикУчетаПартий.НалогообложениеНДС	КАК ВидДеятельностиНДС,
	|	ТаблицаАналитикУчетаПартий.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	
	|	ТаблицаНачисления.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаНачисления.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаНачисления.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаНачисления.СуммаВзаиморасчетов - ТаблицаНачисления.СуммаНДСВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ((ТаблицаНачисления.СуммаСНДС - ТаблицаНачисления.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаБезНДСУпр,
	|
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА ТаблицаНачисления.СуммаНДСВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаНачисления.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СуммаНДСУпр,
	|	
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаНачисления.СуммаВзаиморасчетов
	|		ИНАЧЕ ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаБезНДСРегл + СуммыДокументовВВалютеРегл.СуммаНДСРегл, ТаблицаНачисления.СуммаСНДС)
	|	КОНЕЦ КАК СуммаРегл,
	|
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаНачисления.СуммаВзаиморасчетов - ТаблицаНачисления.СуммаНДСВзаиморасчетов
	|		ИНАЧЕ ЕСТЬNULL(СуммыДокументовВВалютеРегл.БазаНДСРегл, ТаблицаНачисления.СуммаСНДС - ТаблицаНачисления.СуммаНДС)
	|	КОНЕЦ КАК СуммаБезНДСРегл,
	|
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА ТаблицаНачисления.СуммаНДСВзаиморасчетов
	|		ИНАЧЕ ЕСТЬNULL(СуммыДокументовВВалютеРегл.СуммаНДСРегл, ТаблицаНачисления.СуммаНДС)
	|	КОНЕЦ КАК СуммаНДСРегл,
	|	
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета 
	|		ТОГДА ТаблицаНачисления.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаНачисления.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) 
	|	КОНЕЦ КАК СуммаУпр,
	|	ТаблицаНачисления.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТаблицаНачисления.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
	|	ТаблицаНачисления.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ПОМЕСТИТЬ втРасходы
	|ИЗ
	|	Документ.ПоступлениеУслугПоЛизингу.Начисления КАК ТаблицаНачисления
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		ТаблицаНачисления.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаАналитикУчетаПартий КАК ТаблицаАналитикУчетаПартий
	|	ПО ТаблицаАналитикУчетаПартий.НомерСтроки 		= ТаблицаНачисления.НомерСтроки
	|	 И ТаблицаАналитикУчетаПартий.ИмяТабличнойЧасти = ""Начисления""
	|	
	|ГДЕ
	|	ТаблицаНачисления.Ссылка = &Ссылка
	|	И &ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.ЗаБалансом)" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура СуммыДокументовВВалютеРегл(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСуммыДокументовВВалютеРегл(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица СуммыДокументовВВалютеРегл
	|"+
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВтСуммыДокументовВВалютеРегл" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПрочиеРасходы(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаРасходы(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|"+
	"ВЫБРАТЬ
	|	ТаблицаРасходы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасходы.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаРасходы.Организация КАК Организация,
	|	ТаблицаРасходы.Подразделение КАК Подразделение,
	|	ТаблицаРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|
	|	ТаблицаРасходы.СуммаУпр КАК Сумма,
	|
	|	ВЫБОР КОГДА ТаблицаРасходы.СтатьяРасходов.ВариантРаспределенияРасходов =
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты)
	|			ТОГДА ТаблицаРасходы.СуммаБезНДСУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаБезНДС,
	|
	|	ВЫБОР 
	|		КОГДА ТаблицаРасходы.СтатьяРасходов.ВариантРаспределенияРасходов В (
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|			ТОГДА 0
	|		КОГДА ТаблицаРасходы.ВидДеятельностиНДС В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ТаблицаРасходы.СуммаРегл
	|		ИНАЧЕ
	|			ТаблицаРасходы.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаРегл,
	|
	|	ВЫБОР КОГДА ТаблицаРасходы.СтатьяРасходов.ВариантРаспределенияРасходов В (
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы))
	|	ТОГДА
	|		0
	|	КОГДА Не ТаблицаРасходы.СтатьяРасходов.ПринятиеКналоговомуУчету ТОГДА
	|		ВЫБОР КОГДА ТаблицаРасходы.ВидДеятельностиНДС В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ТаблицаРасходы.СуммаРегл
	|			ИНАЧЕ ТаблицаРасходы.СуммаБезНДСРегл
	|		КОНЕЦ
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	0 ВременнаяРазница,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы) КАК ХозяйственнаяОперация,
	|	Неопределено КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	втРасходы КАК ТаблицаРасходы
	|ГДЕ
	|	ТаблицаРасходы.СтатьяРасходов.ВариантРаспределенияРасходов <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И &ИспользоватьУчетПрочихДоходовРасходов" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПартииПрочихРасходов(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаРасходы(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПартииПрочихРасходов
	|"+
	"ВЫБРАТЬ
	|	ТаблицаРасходы.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасходы.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаРасходы.Организация КАК Организация,
	|	ТаблицаРасходы.Подразделение КАК Подразделение,
	|	ТаблицаРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ТаблицаРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаРасходы.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	
	|	0 КАК Стоимость,
	|	
	|	0 КАК СтоимостьБезНДС,
	|	
	|	ТаблицаРасходы.СуммаБезНДСРегл КАК СтоимостьРегл,
	|	ВЫБОР КОГДА ТаблицаРасходы.СтатьяРасходов.ПринятиеКналоговомуУчету = ЛОЖЬ ТОГДА
	|		ТаблицаРасходы.СуммаБезНДСРегл
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ТаблицаРасходы.СуммаНДСРегл КАК НДСРегл,
	|
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА ТаблицаРасходы.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидДеятельностиНДС
	|ИЗ
	|	втРасходы КАК ТаблицаРасходы
	|ГДЕ
	|	ТаблицаРасходы.СтатьяРасходов.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|	И &Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И &ИспользоватьУчетПрочихДоходовРасходов" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПорядокОтраженияПрочихОпераций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПорядокОтраженияПрочихОпераций";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПорядокОтраженияПрочихОпераций
	|"+
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	&Период КАК Дата,
	|	&Организация КАК Организация,
	|	&Ссылка КАК Документ,
	|	"""" КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ПоступлениеУслугПоЛизингу.Начисления КАК Строки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиПрочихОпераций
	|		ПО Строки.СтатьяРасходов = СтатьиПрочихОпераций.Ссылка
	|			И (СтатьиПрочихОпераций.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы))
	|ГДЕ
	|	Строки.Ссылка = &Ссылка" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ПрочиеАктивыПассивы(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаРасходы(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПрочиеАктивыПассивы
	|"+
	"ВЫБРАТЬ
	|	ТаблицаРасходы.Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаРасходы.Организация КАК Организация,
	|	ТаблицаРасходы.Подразделение КАК Подразделение,
	|	ТаблицаРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяАктивовПассивов КАК Статья,
	|	&Договор КАК Аналитика,
	|	СУММА(ТаблицаРасходы.СуммаУпр) КАК Сумма
	|	
	|ИЗ
	|	втРасходы КАК ТаблицаРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасходы.Период,
	|	ТаблицаРасходы.Организация,
	|	ТаблицаРасходы.Подразделение,
	|	ТаблицаРасходы.НаправлениеДеятельности" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ДвиженияДоходыРасходыПрочиеАктивыПассивы(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Если Не ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаРасходы(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|"+
	"ВЫБРАТЬ
	|	ТаблицаРасходы.НомерСтроки,
	|	ТаблицаРасходы.Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеРасходовЗаСчетПрочихАктивовПассивов) КАК ХозяйственнаяОперация,
	|	ТаблицаРасходы.Организация КАК Организация,
	|
	|	ТаблицаРасходы.Подразделение КАК Подразделение,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	&СтатьяАктивовПассивов КАК Статья,
	|	&Договор КАК АналитикаАктивовПассивов,
	|
	|	ТаблицаРасходы.Подразделение КАК КорПодразделение,
	|	&НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ТаблицаРасходы.СтатьяРасходов КАК КорСтатья,
	|	ТаблицаРасходы.АналитикаРасходов КАК КорАналитикаРасходов,
	|	
	|	ТаблицаРасходы.СуммаУпр КАК Сумма,
	|	ВЫБОР 
	|		КОГДА ТаблицаРасходы.СтатьяРасходов.ВариантРаспределенияРасходов =
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|			ТОГДА 0
	|		КОГДА ТаблицаРасходы.ВидДеятельностиНДС В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|			ТОГДА ТаблицаРасходы.СуммаРегл
	|		ИНАЧЕ
	|			ТаблицаРасходы.СуммаБезНДСРегл
	|	КОНЕЦ КАК СуммаРегл,
	|	
	|	&Валюта КАК Валюта,
	|	ТаблицаРасходы.СуммаСНДС КАК СуммаВВалюте,
	|	НЕОПРЕДЕЛЕНО КАК ВидОперацииПоЗарплате
	|ИЗ
	|	втРасходы КАК ТаблицаРасходы" + ";";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Функция НДСПредъявленный(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСПредъявленный";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ВременнаяТаблицаРасходы(ТекстыЗапроса);
	
	ТекстЗапроса = "
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	Операция.Организация                   КАК Организация,
	|	&Ссылка                                КАК СчетФактура,
	|	Операция.Контрагент                    КАК Поставщик,
	|	Строки.ВидЦенности                     КАК ВидЦенности,
	|	Строки.СтавкаНДС                       КАК СтавкаНДС,
	|	Строки.ВидДеятельностиНДС              КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                           КАК РеализацияЭкспорт,
	|	Строки.СуммаБезНДСРегл                 КАК СуммаБезНДС,
	|	Строки.СуммаНДСРегл                    КАК НДС,
	|	НЕОПРЕДЕЛЕНО                           КАК Событие,
	|	ЛОЖЬ                                   КАК РегламентнаяОперация,
	|	Строки.ИдентификаторСтроки             КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ПоступлениеУслугПоЛизингу КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		втРасходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		И Строки.СуммаБезНДСРегл <> 0
	|	
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Строки.ВидДеятельностиНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуиспользованию))
	|	И Операция.Договор.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.ЗаБалансом)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	Операция.Организация                    КАК Организация,
	|	&Ссылка                                 КАК СчетФактура,
	|	Операция.Контрагент                     КАК Поставщик,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС) КАК ВидЦенности,
	|	Строки.СтавкаНДС                        КАК СтавкаНДС,
	|	Операция.ЗакупкаПодДеятельность         КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО                            КАК ИсправленныйСчетФактура,
	|	НЕОПРЕДЕЛЕНО                            КАК РеализацияЭкспорт,
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА Строки.СуммаВзаиморасчетов - Строки.СуммаНДСВзаиморасчетов
	|		ИНАЧЕ ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС)
	|	КОНЕЦ КАК СуммаБезНДС,
	|
	|	ВЫБОР КОГДА &ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета И &Валюта <> &ВалютаРегламентированногоУчета
	|		ТОГДА Строки.СуммаНДСВзаиморасчетов
	|		ИНАЧЕ ЕСТЬNULL(Суммы.СуммаНДСРегл, Строки.СуммаНДС)
	|	КОНЕЦ КАК СуммаНДС,
	|	НЕОПРЕДЕЛЕНО                           КАК Событие,
	|	ЛОЖЬ                                   КАК РегламентнаяОперация,
	|	Строки.ИдентификаторСтроки             КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ПоступлениеУслугПоЛизингу КАК Операция
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеУслугПоЛизингу.Начисления КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|	ПО
	|		Строки.СтатьяРасходов = Статьи.Ссылка
	|	
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И Операция.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Операция.ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуиспользованию))
	|	И Операция.Договор.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПроводкиРеглУчета

Функция ТекстЗапросаИмуществоЗаБалансом()

#Область ТекстЗапросаРасходы // (Дт <25, 26, 44, 20, 23, 08.3, 20> :: Кт <76.В, 76.Л, 76.ОЛП>)
	
	ТекстПоступлениеРасходов = "
	|ВЫБРАТЬ // Поступление услуг по лизингу (имущество за балансом) (Дт <25, 26, 44, 20, 23, 08.3, 20> :: Кт <76.В, 76.Л, 76.ОЛП> )
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуиспользованию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию))
	|		ИЛИ НЕ СтатьиНДСРаспределяется.Ссылка ЕСТЬ NULL
	|	ТОГДА
	|		ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС)
	|	КОГДА Операция.ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|	ТОГДА
	|		ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.СуммаСНДС)
	|	КОНЕЦ) КАК Сумма,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Операция.Договор.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.АналитикаРасходов КАК СубконтоДт1,
	|	Строки.СтатьяРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.Договор.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.УслугаПоЛизингу)
	|			ТОГДА Операция.Договор.СчетУчетаУслугиПоЛизингу 
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ЗачетОбеспечительногоПлатежа)
	|			ТОГДА Операция.Договор.СчетУчетаОбеспечительныйПлатеж
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ВыкупПредметаЛизинга)
	|			ТОГДА Операция.Договор.СчетУчетаВыкупПредметаЛизинга
	|	КОНЕЦ КАК СчетКт,
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуиспользованию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию))
	|		ИЛИ НЕ СтатьиНДСРаспределяется.Ссылка ЕСТЬ NULL
	|	ТОГДА
	|		Строки.СуммаВзаиморасчетов - Строки.СуммаНДСВзаиморасчетов
	|	КОГДА Операция.ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|	ТОГДА
	|		Строки.СуммаВзаиморасчетов
	|	КОНЕЦ) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	ВЫБОР
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.УслугаПоЛизингу)
	|			ТОГДА ""Поступление услуг по лизингу (имущество за балансом)"" 
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ЗачетОбеспечительногоПлатежа)
	|			ТОГДА ""Зачет обеспечительного платежа (имущество за балансом)""
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ВыкупПредметаЛизинга)
	|			ТОГДА ""Выкуп предмета лизинга (имущество за балансом)""
	|	КОНЕЦ КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеУслугПоЛизингу КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеУслугПоЛизингу.Начисления КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНДСРаспределяется
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиНДСРаспределяется.Ссылка
	|		И СтатьиНДСРаспределяется.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		
	|ГДЕ
	|	Операция.Договор.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.ЗаБалансом)
	|	И (СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL)
	|";
	
#КонецОбласти

#Область ТекстПрочееПоступление   // (Дт <ХХ.ХХ> :: Кт <76.Л, 76.В, 76.ОЛП>)
	ТекстПрочееПоступление = "
	// Поддержка статей расходов с устаревшим направлением распределения "НаПрочиеАктивы"
	|ВЫБРАТЬ // Поступление по лизингу на прочие активы (имущество за балансом) (Дт <ХХ.ХХ> :: Кт <76.Л, 76.В, 76.ОЛП> )
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуиспользованию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию))
	|	ТОГДА
	|		ЕСТЬNULL(Суммы.СуммаБезНДСРегл, Строки.СуммаСНДС - Строки.СуммаНДС)
	|	КОГДА Операция.ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|	ТОГДА
	|		ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл, Строки.СуммаСНДС)
	|	КОНЕЦ) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.Договор.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.УслугаПоЛизингу)
	|			ТОГДА Операция.Договор.СчетУчетаУслугиПоЛизингу 
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ЗачетОбеспечительногоПлатежа)
	|			ТОГДА Операция.Договор.СчетУчетаОбеспечительныйПлатеж
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ВыкупПредметаЛизинга)
	|			ТОГДА Операция.Договор.СчетУчетаВыкупПредметаЛизинга
	|	КОНЕЦ КАК СчетКт,
	|	
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуиспользованию),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию))
	|	ТОГДА
	|		Строки.СуммаВзаиморасчетов - Строки.СуммаНДСВзаиморасчетов
	|	КОГДА Операция.ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|	ТОГДА
	|		Строки.СуммаВзаиморасчетов
	|	КОНЕЦ) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	ВЫБОР
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.УслугаПоЛизингу)
	|			ТОГДА ""Поступление услуг по лизингу на прочие активы (имущество за балансом)"" 
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ЗачетОбеспечительногоПлатежа)
	|			ТОГДА ""Зачет обеспечительного платежа (имущество за балансом)""
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ВыкупПредметаЛизинга)
	|			ТОГДА ""Выкуп предмета лизинга (имущество за балансом)""
	|	КОНЕЦ КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеУслугПоЛизингу КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеУслугПоЛизингу.Начисления КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиПрочихОпераций
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиПрочихОпераций.Ссылка
	|		И СтатьиПрочихОпераций.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|ГДЕ
	|	Операция.Договор.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.ЗаБалансом)
	|";
#КонецОбласти

#Область ТекстНДС // НДС  (Дт <19.ХХ> :: Кт <76.Л, 76.ОЛП, 76.В>)
	ТекстНДС = "
	|ВЫБРАТЬ // Поступление НДС по рег. НДСПредъявленный (Дт <19.ХХ> :: Кт <76.Л, 76.ОЛП, 76.В>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(НДСПредъявленный.НДС) КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаДт,
	|	НДСПредъявленный.ВидДеятельностиНДС                                    КАК АналитикаУчетаДт,
	|	НДСПредъявленный.ВидЦенности                                           КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)                               КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)                 КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)              КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Операция.Ссылка КАК СубконтоДт2,
	|	ВЫБОР КОГДА Статьи.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы) ТОГДА
	|		Строки.АналитикаРасходов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.Договор.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.УслугаПоЛизингу)
	|			ТОГДА Операция.Договор.СчетУчетаУслугиПоЛизингу 
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ЗачетОбеспечительногоПлатежа)
	|			ТОГДА Операция.Договор.СчетУчетаОбеспечительныйПлатеж
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ВыкупПредметаЛизинга)
	|			ТОГДА Операция.Договор.СчетУчетаВыкупПредметаЛизинга
	|	КОНЕЦ КАК СчетКт,
	|	
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	Строки.СуммаНДСВзаиморасчетов КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Поступление НДС"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеУслугПоЛизингу КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеУслугПоЛизингу.Начисления КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		НДСПредъявленный.Регистратор = Строки.Ссылка
	|		И НДСПредъявленный.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|	ПО
	|		Строки.СтатьяРасходов = Статьи.Ссылка
	|ГДЕ
	|	Операция.Договор.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.ЗаБалансом)
	|
	|СГРУППИРОВАТЬ ПО
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Операция.ВалютаВзаиморасчетов,
	|	Операция.Подразделение,
	|	Операция.Контрагент,
	|	Операция.Договор,
	|	Операция.Договор.НаправлениеДеятельности,
	|	Операция.Договор.СчетУчетаУслугиПоЛизингу,
	|	Операция.Договор.СчетУчетаОбеспечительныйПлатеж,
	|	Операция.Договор.СчетУчетаВыкупПредметаЛизинга,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	НДСПредъявленный.ВидЦенности,
	|	Статьи.ВариантРаспределенияРасходов,
	|	Строки.АналитикаРасходов,
	|	Строки.ТипНачисления,
	|	Строки.СуммаНДСВзаиморасчетов
	|";
	
#КонецОбласти
	
	Возврат
		ТекстПоступлениеРасходов
		+ "ОБЪЕДИНИТЬ ВСЕ"
		+ ТекстПрочееПоступление
		+ "ОБЪЕДИНИТЬ ВСЕ"
		+ ТекстНДС;
	
КонецФункции

Функция ТекстЗапросаИмуществоНаБалансе()
	
	Возврат "
	|ВЫБРАТЬ // Поступление услуг по лизингу (имущество на балансе) (Дт <76.А> :: Кт <76.Л, 76.ОЛП, 76.В>)
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл,  Строки.СуммаСНДС) КАК Сумма,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Операция.Подразделение КАК ПодразделениеДт,
	|	Операция.Договор.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	Операция.Договор.СчетУчетаАрендныеОбязательства КАК СчетДт,
	|	
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Операция.Договор    КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоДт3,
	|	
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	Операция.Договор.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.УслугаПоЛизингу)
	|			ТОГДА Операция.Договор.СчетУчетаУслугиПоЛизингу 
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ЗачетОбеспечительногоПлатежа)
	|			ТОГДА Операция.Договор.СчетУчетаОбеспечительныйПлатеж
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ВыкупПредметаЛизинга)
	|			ТОГДА Операция.Договор.СчетУчетаВыкупПредметаЛизинга
	|	КОНЕЦ КАК СчетКт,
	|	
	|	Операция.Контрагент КАК СубконтоКт1,
	|	Операция.Договор    КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО        КАК СубконтоКт3,
	|
	|	Строки.СуммаВзаиморасчетов КАК ВалютнаяСуммаКт,
	|	
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	ВЫБОР
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.УслугаПоЛизингу)
	|			ТОГДА ""Поступление услуг по лизингу (имущество на балансе)"" 
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ЗачетОбеспечительногоПлатежа)
	|			ТОГДА ""Зачет обеспечительного платежа (имущество на балансе)""
	|		КОГДА Строки.ТипНачисления = ЗНАЧЕНИЕ(Перечисление.ТипыНачисленийПоЛизингу.ВыкупПредметаЛизинга)
	|			ТОГДА""Выкуп предмета лизинга (имущество на балансе)""
	|	КОНЕЦ КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеУслугПоЛизингу КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеУслугПоЛизингу.Начисления КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|ГДЕ
	|	Операция.Договор.ВариантУчетаИмущества = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаИмуществаПриЛизинге.НаБалансе)
	|";
	
КонецФункции

#КонецОбласти

#Область Печать

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УП 2.2.1,
// заполняет реквизиты "Курс" и "Кратность" документа "ПоступлениеУслугПоЛизингу".
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ПоступлениеУслугПоЛизингу.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПоступлениеУслугПоЛизингу КАК ПоступлениеУслугПоЛизингу
	|ГДЕ ПоступлениеУслугПоЛизингу.Курс = 0
	|");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ПоступлениеУслугПоЛизингу";
	
	МетаданныеДокумента = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли; 
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОбъектыДляОбработки.Ссылка                      КАК Ссылка,
	|	ОбъектыДляОбработки.Ссылка.ВерсияДанных         КАК ВерсияДанных,
	|	ОбъектыДляОбработки.Ссылка.Дата                 КАК Дата,
	|	ОбъектыДляОбработки.Ссылка.Валюта               КАК Валюта,
	|	ОбъектыДляОбработки.Ссылка.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ОбъектыДляОбработки.Ссылка.СуммаВзаиморасчетов  КАК СуммаВзаиморасчетов,
	|	ОбъектыДляОбработки.Ссылка.СуммаДокумента       КАК СуммаДокумента
	|ПОМЕСТИТЬ ТаблицаСсылок
	|ИЗ
	|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСсылок.Дата          КАК Дата,
	|	ТаблицаСсылок.Валюта        КАК Валюта,
	|	МАКСИМУМ(КурсыВалют.Период) КАК ДатаКурса
	|ПОМЕСТИТЬ ДатыКурсовВалютыДокумента
	|ИЗ
	|	ТаблицаСсылок КАК ТаблицаСсылок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ТаблицаСсылок.Валюта = КурсыВалют.Валюта
	|			И ТаблицаСсылок.Дата >= КурсыВалют.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСсылок.Дата,
	|	ТаблицаСсылок.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСсылок.Дата                 КАК Дата,
	|	ТаблицаСсылок.ВалютаВзаиморасчетов КАК Валюта,
	|	МАКСИМУМ(КурсыВалют.Период)        КАК ДатаКурса
	|ПОМЕСТИТЬ ДатыКурсовВалютыВзаиморасчетов
	|ИЗ
	|	ТаблицаСсылок КАК ТаблицаСсылок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ТаблицаСсылок.ВалютаВзаиморасчетов = КурсыВалют.Валюта
	|			И ТаблицаСсылок.Дата >= КурсыВалют.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСсылок.Дата,
	|	ТаблицаСсылок.ВалютаВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Ссылка               КАК Ссылка,
	|	ДанныеДляОбработки.ВерсияДанных         КАК ВерсияДанных,
	|	ДанныеДляОбработки.Валюта               КАК ВалютаДокумента,
	|	ДанныеДляОбработки.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДляОбработки.СуммаДокумента       КАК СуммаДокумента,
	|	ДанныеДляОбработки.СуммаВзаиморасчетов  КАК СуммаВзаиморасчетов,
	|	ЕСТЬNULL(КурсыВалютыДокумента.Кратность,1)          КАК КратностьВалютыДокумента,
	|	ЕСТЬNULL(КурсыВалютыВзаиморасчетов.Кратность,1)     КАК КратностьВалютыВзаиморасчетов
	|ИЗ
	|	ТаблицаСсылок КАК ДанныеДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыКурсовВалютыДокумента КАК ДатыКурсовВалютыДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ  РегистрСведений.КурсыВалют КАК КурсыВалютыДокумента
	|			ПО ДатыКурсовВалютыДокумента.ДатаКурса = КурсыВалютыДокумента.Период
	|				И ДатыКурсовВалютыДокумента.Валюта = КурсыВалютыДокумента.Валюта
	|		ПО ДанныеДляОбработки.Валюта = ДатыКурсовВалютыДокумента.Валюта
	|			И ДанныеДляОбработки.Дата = ДатыКурсовВалютыДокумента.Дата
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыКурсовВалютыВзаиморасчетов КАК ДатыКурсовВалютыВзаиморасчетов
	|			ЛЕВОЕ СОЕДИНЕНИЕ  РегистрСведений.КурсыВалют КАК КурсыВалютыВзаиморасчетов
	|			ПО ДатыКурсовВалютыВзаиморасчетов.ДатаКурса = КурсыВалютыВзаиморасчетов.Период
	|				И ДатыКурсовВалютыВзаиморасчетов.Валюта = КурсыВалютыВзаиморасчетов.Валюта
	|		ПО ДанныеДляОбработки.ВалютаВзаиморасчетов = ДатыКурсовВалютыВзаиморасчетов.Валюта
	|			И ДанныеДляОбработки.Дата = ДатыКурсовВалютыВзаиморасчетов.Дата
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТОбъектыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			
			НачатьТранзакцию();
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									МетаданныеДокумента,
									Выборка.Ссылка,
									ТекстСообщения);
			Продолжить;
			
		КонецПопытки;
		
		ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
		Если ДокументОбъект = Неопределено Тогда
			ЗафиксироватьТранзакцию();
			Продолжить;
		КонецЕсли;
		
		ОбъектИзменен = Ложь;
		
		Если ДокументОбъект.Курс = 0 Тогда
			Если Выборка.СуммаВзаиморасчетов = 0 ИЛИ Выборка.СуммаДокумента = 0 ИЛИ Выборка.ВалютаДокумента = Выборка.ВалютаВзаиморасчетов Тогда
				ДокументОбъект.Курс = 1;
				ДокументОбъект.Кратность = 1;
			ИначеЕсли Выборка.ВалютаДокумента = ВалютаРеглУчета И НЕ Выборка.ВалютаВзаиморасчетов = ВалютаРеглУчета Тогда
				ДокументОбъект.Курс = Окр(Выборка.СуммаДокумента / Выборка.СуммаВзаиморасчетов * Выборка.КратностьВалютыВзаиморасчетов, 4);
				ДокументОбъект.Кратность = Выборка.КратностьВалютыВзаиморасчетов;
			Иначе
				ДокументОбъект.Курс = Окр(Выборка.СуммаВзаиморасчетов / Выборка.СуммаДокумента * Выборка.КратностьВалютыДокумента, 4);
				ДокументОбъект.Кратность = Выборка.КратностьВалютыДокумента;
			КонецЕсли;
			ОбъектИзменен = Истина;
		КонецЕсли;
	
		Попытка
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект, , , РежимЗаписиДокумента.Запись);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеДокумента,
				Выборка.Ссылка,
				ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
