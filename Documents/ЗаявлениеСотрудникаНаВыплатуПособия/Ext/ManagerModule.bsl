#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	ПрямыеВыплатыПособийСоциальногоСтрахования.ДобавитьКомандыПечатиЗаявленияСотрудникаНаВыплатуПособия(КомандыПечати);
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаявлениеСотрудникаНаВыплатуПособия") Тогда
		ТабличныйДокумент = ТабличныйДокументЗаявленияСотрудниковНаВыплатуПособия(МассивОбъектов, ОбъектыПечати);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,	"ЗаявлениеСотрудникаНаВыплатуПособия", Нстр("ru = 'Заявление сотрудника на выплату пособия'"), ТабличныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область ТабличныйДокументЗаявленияСотрудниковНаВыплатуПособия

Функция ТабличныйДокументЗаявленияСотрудниковНаВыплатуПособия(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПараметрыПечати_ЗаявлениеСотрудникаНаВыплатуПособия";
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	ДанныеДляПечатиЗаявлений = ДанныеДляПечатиЗаявлений(МассивОбъектов);
	
	Для каждого Заявление Из ДанныеДляПечатиЗаявлений Цикл
		
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВывестиЗаявлениеВТабличныйДокумент(ТабличныйДокумент, Заявление);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Заявление.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#Область ДанныеДляПечатиЗаявлений

Функция ДанныеДляПечатиЗаявлений(ПечатаемыеЗаявления)
	Таблица = РезультатЗапросаДанныхДляПечатиЗаявлений(ПечатаемыеЗаявления).Выгрузить();
	
	// Проверка прав.
	ПравоЧтенияСреднегоЗаработка = КадровыйУчет.ПравоНаРазделУчета("Чтение", "НачисленнаяЗарплата");
	Если Не ПравоЧтенияСреднегоЗаработка Тогда
		ВидПособиеПоУходуЗаРебенком = ПредопределенноеЗначение("Перечисление.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком");
		Найденные = Таблица.НайтиСтроки(Новый Структура("ВидПособия", ВидПособиеПоУходуЗаРебенком));
		Для Каждого СтрокаТаблицы Из Найденные Цикл
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1: Недостаточно прав для печати заявления, содержащего средний заработок сотрудника.'"),
				Строка(СтрокаТаблицы.Ссылка));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, СтрокаТаблицы.Ссылка);
			Таблица.Удалить(СтрокаТаблицы);
		КонецЦикла;
	КонецЕсли;
	
	// Перевод строковых данных в верхний регистр.
	ТипСтрока = Тип("Строка");
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		Для Каждого Колонка Из Таблица.Колонки Цикл
			Значение = СтрокаТаблицы[Колонка.Имя];
			Если ТипЗнч(Значение) = ТипСтрока И Не ЭтоСтрокаXML(Значение) Тогда
				СтрокаТаблицы[Колонка.Имя] = ВРег(Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Таблица;
КонецФункции

Функция РезультатЗапросаДанныхДляПечатиЗаявлений(ПечатаемыеЗаявления)
	
	Запрос = Новый Запрос();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаявлениеСотрудникаНаВыплатуПособия.Ссылка КАК Ссылка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ВидПособия КАК ВидПособия,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НаименованиеТерриториальногоОрганаФСС КАК НаименованиеТерриториальногоОрганаФСС,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ФамилияЗаявителя КАК ФамилияЗаявителя,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ИмяЗаявителя КАК ИмяЗаявителя,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ОтчествоЗаявителя КАК ОтчествоЗаявителя,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ФамилияПолучателя КАК ФамилияПолучателя,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ИмяПолучателя КАК ИмяПолучателя,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ОтчествоПолучателя КАК ОтчествоПолучателя,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.СпособВыплатыПособия КАК СпособВыплатыПособия,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НаименованиеБанка КАК НаименованиеБанка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерЛицевогоСчета КАК НомерЛицевогоСчета,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.БИКБанка КАК БИКБанка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРожденияПолучателя КАК ДатаРождения,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.СерияДокументаУдостоверяющегоЛичностьПолучателя КАК УдостоверениеЛичностиСерия,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерДокументаУдостоверяющегоЛичностьПолучателя КАК УдостоверениеЛичностиНомер,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаВыдачиДокументаУдостоверяющегоЛичностьПолучателя КАК УдостоверениеЛичностиДата,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.КемВыданДокументУдостоверяющийЛичностьПолучателя КАК УдостоверениеЛичностиКемВыдан,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаДействияДокументаУдостоверяющегоЛичностьПолучателя КАК УдостоверениеЛичностиСрокДействия,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.СерияДокументаНаПроживание КАК СерияДокументаНаПроживание,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерДокументаНаПроживание КАК НомерДокументаНаПроживание,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаВыдачиДокументаНаПроживание КАК ДатаВыдачиДокументаНаПроживание,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.АдресПолучателяРегистрации КАК АдресРегистрации,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.АдресПолучателяФактический КАК АдресПроживания,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ТелефонПолучателя КАК Телефон,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСправкиОПостановкеНаУчетВРанниеСрокиБеременности КАК ДатаСправкиБеременной,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерСправкиОПостановкеНаУчетВРанниеСрокиБеременности КАК НомерСправкиБеременной,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаЛисткаНетрудоспособности КАК ДатаВыдачиБольничного,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерЛисткаНетрудоспособности КАК НомерБольничного,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерИногоДокументаПодтверждающегоРождение КАК НомерИногоПодтвержденияРождения,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаИногоДокументаПодтверждающегоРождение КАК ДатаИногоПодтвержденияРождения,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ФормаСправкиОРожденииРебенка КАК ВидСправкиОРожденииРебенка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСправкиОРожденииРебенка КАК ДатаСправкиОРождении,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерСправкиОРожденииРебенка КАК НомерСправкиОРождении,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРешенияОбУсыновлении КАК ДатаРешенияОбУсыновлении,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерРешенияОбУсыновлении КАК НомерРешенияОбУсыновлении,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаДоговораОПередачеРебенкаВПриемнуюСемью КАК ДатаДоговораОПередачеНаВоспитание,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерДоговораОПередачеРебенкаВПриемнуюСемью КАК НомерДоговораОПередачеНаВоспитание,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.Дата КАК ДатаПодачиЗаявления,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НаличиеОдногоИзДокументовНаПредыдущихДетей КАК НаличиеДокументаОРожденииПредыдущегоРебенка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НаличиеСвидетельстваОСмертиПредыдущихДетей КАК НаличиеДокументаОСмертиПредыдущегоРебенка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.СправкаОНеполученииПособия КАК СправкаОНеполученииПособия,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСправкиОНеполученииПособияОтОтца КАК ДатаСправкиОтОтца,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерСправкиОНеполученииПособияОтОтца КАК НомерСправкиОтОтца,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСправкиОНеполученииПособияОтМатери КАК ДатаСправкиОтМатери,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерСправкиОНеполученииПособияОтМатери КАК НомерСправкиОтМатери,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСправкиОНеполученииПособияПоДругимМестамРаботы КАК ДатаСправкиПоДругимМестамРаботы,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерСправкиОНеполученииПособияПоДругимМестамРаботы КАК НомерСправкиПоДругимМестамРаботы,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСвидетельстваОРождении КАК ДатаСвидетельстваОРождении,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.СерияСвидетельстваОРождении КАК СерияСвидетельстваОРождении,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерСвидетельстваОРождении КАК НомерСвидетельстваОРождении,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРешенияОбОпеке КАК ДатаРешенияОбОпеке,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерРешенияОбОпеке КАК НомерРешенияОбОпеке,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком КАК ДатаПриказаНаОтпускПоУходуЗаРебенком,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаНачалаОтпускаПоУходуЗаРебенком КАК ОтпускПоУходуЗаРебенкомДатаНачало,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаОкончанияОтпускаПоУходуЗаРебенком КАК ОтпускПоУходуЗаРебенкомДатаОкончание,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком КАК НомерПриказаНаОтпускПоУходуЗаРебенком,
	|	ВЫБОР
	|		КОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ОтношениеКОсобойЗоне = ЗНАЧЕНИЕ(Перечисление.ОтношениеКОсобойЗоне.Проживает)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПроживаниеВЗоне,
	|	ВЫБОР
	|		КОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ОтношениеКОсобойЗоне = ЗНАЧЕНИЕ(Перечисление.ОтношениеКОсобойЗоне.Работает)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РаботаВЗоне,
	|	ВЫБОР
	|		КОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ВидОсобойЗоныПроживанияРаботы = ЗНАЧЕНИЕ(Перечисление.ВидыОсобойЗоныПроживанияРаботы.ЗонаСПравомНаОтселение)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВЗонеСПравомНаОтселение,
	|	ВЫБОР
	|		КОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ВидОсобойЗоныПроживанияРаботы = ЗНАЧЕНИЕ(Перечисление.ВидыОсобойЗоныПроживанияРаботы.ЗонаОтселения)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВЗонеОтселения,
	|	ВЫБОР
	|		КОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ВидОсобойЗоныПроживанияРаботы = ЗНАЧЕНИЕ(Перечисление.ВидыОсобойЗоныПроживанияРаботы.ЗонаСЛьготнымСоциальноЭкономическимСтатусом)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВЗонеСЛьготнымСтатусом,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НаименованиеОрганизации КАК НаименованиеОрганизации,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ТипЗанятостиРаботника КАК ВидЗанятостиСотрудника,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.СНИЛСПолучателя КАК СНИЛССотрудника,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ИННПолучателя КАК ИННСотрудника,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка КАК ЗаявлениеРаботникаОЗаменеКалендарныхГодов,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ПервыйЗамененныйГод - 2000 КАК ПервыйГод,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ПервыйРасчетныйГод - 2000 КАК ВторойГод,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ВторойЗамененныйГод - 2000 КАК ТретийГод,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ВторойРасчетныйГод - 2000 КАК ЧетвертыйГод,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.СчитатьПоПравилам2010Года КАК ЗаявлениеПоМатеринству2010,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаНачалаРасчетногоПериода КАК ЗаявлениеПоМатеринству2010ДатаНачало,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаОкончанияРасчетногоПериода КАК ЗаявлениеПоМатеринству2010ДатаОкончание,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ЧислоКалендарныхДнейРасчетногоПериода КАК ЧислоКалендарныхДней,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НеполноеРабочееВремя КАК НеполноеРабочееВремя,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.РазмерСтавки КАК ДоляВремени,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДолжностнойОклад КАК ТарифнаяСтавкаОклад,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ЗаработокПервыйГодРасчета + ЗаявлениеСотрудникаНаВыплатуПособия.ЗаработокВторойГодРасчета КАК СреднийЗаработок,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ПериодПростоя1ДатаНачала КАК ПериодПростояДатаНачало,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ПериодПростоя1ДатаОкончания КАК ПериодПростояДатаОкончание,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ПериодПростоя1СреднийЗаработок КАК СреднедневнойЗаработокНаПериодПростоя,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НеоплачиваемыйПериод1ДатаНачала КАК ПособияНеНазначаютсяДатаНачало,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НеоплачиваемыйПериод2ДатаНачала КАК ПособияНеНазначаютсяДатаОкончание,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ФИОУполномоченного КАК ФИОРуководителя,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДолжностьУполномоченного КАК ДолжностьРуководителя,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ТелефонУполномоченного КАК ТелефонСоставителя,
	|	ВидДокументаУдостоверениеЛичности.КодМВД КАК КодУдостоверенияЛичности,
	|	ВидДокументаДокументНаПроживание.КодМВД КАК КодДокументаНаПроживание
	|ИЗ
	|	Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК ЗаявлениеСотрудникаНаВыплатуПособия
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыДокументовФизическихЛиц КАК ВидДокументаУдостоверениеЛичности
	|		ПО ЗаявлениеСотрудникаНаВыплатуПособия.ВидДокументаУдостоверяющегоЛичностьПолучателя = ВидДокументаУдостоверениеЛичности.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыДокументовФизическихЛиц КАК ВидДокументаДокументНаПроживание
	|		ПО ЗаявлениеСотрудникаНаВыплатуПособия.ВидДокументаНаПроживание = ВидДокументаДокументНаПроживание.Ссылка
	|ГДЕ
	|	ЗаявлениеСотрудникаНаВыплатуПособия.Ссылка В(&ПечатаемыеЗаявления)";
	
	Запрос.УстановитьПараметр("ПечатаемыеЗаявления", ПечатаемыеЗаявления);
	
	Возврат Запрос.Выполнить();

КонецФункции 

Функция ЭтоСтрокаXML(Строка)
	Возврат Лев(Строка, 1) = "<";
КонецФункции

#КонецОбласти

Процедура ВывестиЗаявлениеВТабличныйДокумент(ТабличныйДокумент, Заявление)
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЗаявлениеСотрудникаНаВыплатуПособия.ПФ_MXL_ЗаявлениеВФССОВыплатеПособия_2012");
	
	ЗаполнитьДанныеЗаявленияВМакете(Макет, Заявление);
	
	ТабличныйДокумент.Вывести(Макет);
	
КонецПроцедуры

Процедура ЗаполнитьДанныеЗаявленияВМакете(Макет, Заявление)
	
	ЗаполнитьВМакетеНаименованиеФСС(Макет, Заявление);
	
	ЗаполнитьВМакетеФИОЗаявителя(Макет, Заявление);
	
	ЗаполнитьВМакетеВидПособия(Макет, Заявление);
	
	Если ПособиеВыплачиваетсяЧерезБанк(Заявление) Тогда
		ЗаполнитьВМакетеВыплатуЧерезБанк(Макет, Заявление);		
	Иначе 
		ЗаполнитьВМакетеВыплатуЧерезПочту(Макет, Заявление);		
	КонецЕсли; 
	
	ЗаполнитьВМакетеФИОПолучателя(Макет, Заявление);	
	
	ЗаполнитьВМакетеДатуРожденияПолучателя(Макет, Заявление);
	
	ЗаполнитьВМакетеУдостоверениеЛичности(Макет, Заявление);
	
	ЗаполнитьВМакетеРазрешениеНаПроживание(Макет, Заявление);
	
	ЗаполнитьВМакетеСведенияОМестеЖительства(Макет, Заявление);
	
	ЗаполнитьВМакетеТелефонПолучателя(Макет, Заявление);
	
	Если ЭтоПособиеПоВременнойНетрудоспособности(Заявление.ВидПособия)
		Или ЭтоПособиеПоНесчастномуСлучаю(Заявление.ВидПособия)
		Или ЭтоПособиеПоБеременностиИРодам(Заявление.ВидПособия) Тогда
		ЗаполнитьВМакетеРеквизитыЛН(Макет, Заявление);
	КонецЕсли;
	
	Если ЭтоПособиеВставшимНаУчетВРанниеСроки(Заявление.ВидПособия) Тогда
		ЗаполнитьВМакетеРеквизитыСправкиОПостановкеНаУчетВРанниеСрокиБеременности(Макет, Заявление);	
	КонецЕсли;
	
	Если ЭтоЕдиновременноеПособиеПриРожденииРебенка(Заявление.ВидПособия) Тогда
		ЗаполнитьВМакетеОбластьЕдиновременногоПособияПриРожденииРебенка(Макет, Заявление)
	КонецЕсли;
	
	Если ЭтоЕжемесячноеПособиеПоУходуЗаРебенком(Заявление.ВидПособия) Тогда
		ЗаполнитьВМакетеОбластьЕжемесячноеПособиеПоУходуЗаРебенком(Макет, Заявление)
	КонецЕсли; 
	
	ЗаполнитьВМакетеДатуПодачиЗаявления(Макет, Заявление);
	
	ЗаполнитьВМакетеНаименованиеРаботодателя(Макет, Заявление);
	
	ЗаполнитьВМакетеВидЗанятостиСотрудника(Макет, Заявление);
	
	ЗаполнитьВМакетеСНИЛССотрудника(Макет, Заявление);
	
	ЗаполнитьВМакетеИННСотрудника(Макет, Заявление);
	
	Если ПредоставленоЗаявлениеОЗаменеКалендарныхГодов(Заявление) Тогда 
		ЗаполнитьВМакетеДанныеОЗаменеКалендарныхГодов(Макет, Заявление);
	КонецЕсли;
	
	Если ПредоставленоЗаявлениеОбИсчисленииПоПравилам2010Года(Заявление) Тогда 
		ЗаполнитьВМакетеРеквизитыЗаявленияОбИсчисленииПоПравилам2010Года(Макет, Заявление);
	КонецЕсли;
	
	Если Заявление.НеполноеРабочееВремя Тогда
		ЗаполнитьВМакетеДанныеОНеполномРабочемВремени(Макет, Заявление);
	КонецЕсли;
	
	ЗаполнитьВМакетеТарифнуюСтавкуОклад(Макет, Заявление);
	
	Если ЭтоЕжемесячноеПособиеПоУходуЗаРебенком(Заявление.ВидПособия) Тогда
		ЗаполнитьВМакетеСреднийЗаработок(Макет, Заявление);
	КонецЕсли;
	
	ЗаполнитьВМакетеДанныеОПериодеПростоя(Макет, Заявление);
	
	ЗаполнитьВМакетеПериодЗаКоторыйПособиеНеНазначается(Макет, Заявление);
	
	ЗаполнитьВМакетеДанныеРуководителяОрганизации(Макет, Заявление);
	
	ЗаполнитьВМакетеТелефонСоставителя(Макет, Заявление);
	
КонецПроцедуры

Процедура ЗаполнитьВМакетеНаименованиеФСС(Макет, Заявление)
	
	ДлиныСтрок = Новый Массив();
	ДлиныСтрок.Добавить(27);
	НаименованиеТерриториальногоОрганаФСС = ЗарплатаКадры.РазбитьСтрокуНаПодСтроки(Заявление.НаименованиеТерриториальногоОрганаФСС, ДлиныСтрок);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(НаименованиеТерриториальногоОрганаФСС, Макет, "Наименование_ФСС_", 135);
	
КонецПроцедуры

Процедура ЗаполнитьВМакетеФИОЗаявителя(Макет, Заявление)
	
	ФамилияЗаявителя = Заявление.ФамилияЗаявителя;
	ИмяЗаявителя = Заявление.ИмяЗаявителя;
	ОтчествоЗаявителя = Заявление.ОтчествоЗаявителя;	
	
	КоличествоСловФамилии = 0;
	КоличествоСловИмени = 0;
		
	Если ЗначениеЗаполнено(Заявление.ФамилияЗаявителя) Тогда
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СокрЛП(Заявление.ФамилияЗаявителя), " ");
		КоличествоСловФамилии = МассивПодстрок.Количество();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Заявление.ИмяЗаявителя) Тогда
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СокрЛП(Заявление.ИмяЗаявителя), " ");
		КоличествоСловИмени = МассивПодстрок.Количество();
	КонецЕсли;
		
	ФИО = Заявление.ФамилияЗаявителя + " " + Заявление.ИмяЗаявителя + " " + Заявление.ОтчествоЗаявителя;
	ФИОВРодительномПадеже = "";
	ФизическиеЛицаЗарплатаКадры.Просклонять(ФИО, 2, ФИОВРодительномПадеже);
	
	Если ЗначениеЗаполнено(ФИОВРодительномПадеже) Тогда

		Если КоличествоСловФамилии = 1 
			И КоличествоСловИмени = 1 Тогда    		
			
			МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ФИОВРодительномПадеже, " ");
			ФамилияЗаявителя = МассивПодстрок[0];
			ИмяЗаявителя = МассивПодстрок[1];
			ОтчествоЗаявителя = "";
			Для Индекс = 2 По МассивПодстрок.Количество() - 1 Цикл
				ОтчествоЗаявителя = ОтчествоЗаявителя + ?(ЗначениеЗаполнено(ОтчествоЗаявителя), " ", "") + МассивПодстрок[Индекс];
			КонецЦикла;
			
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ФамилияЗаявителя, 	Макет, "ФИО_Заявителя_", 27);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ИмяЗаявителя, 		Макет, "ФИО_Заявителя_", 27, 28);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ОтчествоЗаявителя, 	Макет, "ФИО_Заявителя_", 27, 55);
			
		Иначе
			
			ДлиныСтрок = Новый Массив();
			ДлиныСтрок.Добавить(27);
			ФИОВФорматеЗаявления = ЗарплатаКадры.РазбитьСтрокуНаПодСтроки(ФИОВРодительномПадеже, ДлиныСтрок);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ФИОВФорматеЗаявления, Макет, "ФИО_Заявителя_", 81);
					
		КонецЕсли;

	Иначе
		
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.ФамилияЗаявителя, 	Макет, "ФИО_Заявителя_", 27);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.ИмяЗаявителя, 		Макет, "ФИО_Заявителя_", 27, 28);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.ОтчествоЗаявителя, 	Макет, "ФИО_Заявителя_", 27, 55);
		   		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьВМакетеВидПособия(Макет, Заявление)
	
	Если ЭтоПособиеПоВременнойНетрудоспособности(Заявление.ВидПособия) Тогда
		
		Макет.Области["Нетрудоспособность"].Текст = "v";
		
	КонецЕсли;
	
	Если ЭтоПособиеПоБеременностиИРодам(Заявление.ВидПособия) Тогда
		
		Макет.Области["БеременностьРоды"].Текст = "v";
		
	КонецЕсли;
	
	Если ЭтоПособиеВставшимНаУчетВРанниеСроки(Заявление.ВидПособия) Тогда
		
		Макет.Области["ПриПостановкеНаУчетВРанниеСрокиБеременности"].Текст = "v";
		
	КонецЕсли;
	
	Если ЭтоЕдиновременноеПособиеПриРожденииРебенка(Заявление.ВидПособия) Тогда
		
		Макет.Области["ПриРожденииРебенка"].Текст = "v";
		
	КонецЕсли;
	
	Если ЭтоЕжемесячноеПособиеПоУходуЗаРебенком(Заявление.ВидПособия) Тогда
		
		Макет.Области["ПоУходуЗаРебенкомДоПолутораЛет"].Текст = "v";
		
	КонецЕсли;
	
	Если ЭтоПособиеПоНесчастномуСлучаю(Заявление.ВидПособия) Тогда
		
		Макет.Параметры.НетрудоспособностьНесчастныйСлучай = Истина;
		
	КонецЕсли;
	
	Если ЭтоОтпускСверхЕжегодногоНаПериодЛечения(Заявление.ВидПособия) Тогда
		
		Макет.Области["ДополнительныйОтпускПослеНесчастныхСлучаев"].Текст = "v";
		
	КонецЕсли; 
	
КонецПроцедуры

#Область СпособВыплатыПособия

Функция ПособиеВыплачиваетсяЧерезБанк(Заявление)
	Возврат Заявление.СпособВыплатыПособия = Перечисления.СпособыВыплатыПособия.ЧерезБанк;	
КонецФункции

Процедура ЗаполнитьВМакетеВыплатуЧерезБанк(Макет, Заявление)
	
	Макет.Области["ВыплатаЧерезБанк"].Текст = "v";	
	
	ДлиныСтрок = Новый Массив();
	ДлиныСтрок.Добавить(39);
	НаименованиеБанка = ЗарплатаКадры.РазбитьСтрокуНаПодСтроки(Заявление.НаименованиеБанка, ДлиныСтрок);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(НаименованиеБанка, Макет, "НаименованиеБанка_", 78);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.НомерЛицевогоСчета, Макет, "НомерСчета_", 20);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.БИКБанка, Макет, "БИК_", 9);
	
КонецПроцедуры

Процедура ЗаполнитьВМакетеВыплатуЧерезПочту(Макет, Заявление)
	
	Макет.Области["ВыплатаПочтой"].Текст = "v";
	
	СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(Заявление.АдресПроживания, ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресМестаПроживанияФизическиеЛица"));	
	Если СтруктураАдреса <> Неопределено Тогда
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Индекс"), Макет, "Адрес_", 6);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Регион"), Макет, "Адрес_", 17, 7);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Район"), Макет, "Адрес_", 17, 24);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(?(ЗначениеЗаполнено(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Город")), ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Город") + " " + ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "НаселенныйПункт"), ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "НаселенныйПункт")), Макет, "Адрес_", 34, 41);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Улица"), Макет, "Адрес_", 37, 75);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Дом"), Макет, "Адрес_", 8, 112);
		Если ВРег(СтруктураАдреса.ТипКорпуса) = "СТРОЕНИЕ" Тогда
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Корпус"), Макет, "Адрес_", 3, 123);
		Иначе
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Корпус"), Макет, "Адрес_", 3, 120);
		КонецЕсли;;
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Квартира"), Макет, "Адрес_", 6, 126);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

Процедура ЗаполнитьВМакетеФИОПолучателя(Макет, Заявление)
	
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.ФамилияПолучателя, Макет, "ФИО_Получателя_", 36);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.ИмяПолучателя, Макет, "ФИО_Получателя_", 36, 37);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.ОтчествоПолучателя, Макет, "ФИО_Получателя_", 36, 73);
	
КонецПроцедуры

Процедура ЗаполнитьВМакетеДатуРожденияПолучателя(Макет, Заявление)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ДатаРождения, "ДЛФ=D"),".",""), Макет, "ДатаРождения_", 8);
КонецПроцедуры

#Область УдостоверениеЛичности

Процедура ЗаполнитьВМакетеУдостоверениеЛичности(Макет, Заявление)
	
	ДокументСерия = Заявление.УдостоверениеЛичностиСерия;
	ДокументСерия = СтрЗаменить(ДокументСерия, " ", "");
	
	Если ЭтоПаспорт(Заявление.КодУдостоверенияЛичности) Тогда
		
		Макет.Области["Паспорт"].Текст = "v ";
		
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ДокументСерия, Макет, "ПаспортСерия_", 4);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.УдостоверениеЛичностиНомер, Макет, "ПаспортНомер_", 6);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.УдостоверениеЛичностиДата, "ДЛФ=D"),".",""), Макет, "ПаспортДата_", 8);
		
		ДлиныСтрок = Новый Массив();
		ДлиныСтрок.Добавить(36);
		ДлиныСтрок.Добавить(39); 
		УдостоверениеЛичностиКемВыдан = ЗарплатаКадры.РазбитьСтрокуНаПодСтроки(Заявление.УдостоверениеЛичностиКемВыдан, ДлиныСтрок);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(УдостоверениеЛичностиКемВыдан, Макет, "ПаспортКемВыдан_", 75);
		
	ИначеЕсли ЭтоВременноеУдостоверениеЛичности(Заявление.КодУдостоверенияЛичности) Тогда
		
		Макет.Области["ВременноеУдостоверение"].Текст = "v ";
		
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.УдостоверениеЛичностиНомер, Макет, "ВременноеУдостоверениеНомер_", 6);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.УдостоверениеЛичностиСрокДействия, "ДФ=dd.MM.yy"),".",""), Макет, "ВременноеУдостоверениеДата_", 6);
		
	ИначеЕсли ЗначениеЗаполнено(Заявление.КодУдостоверенияЛичности) Тогда
		
		Макет.Области["ИнойДокумент"].Текст = "v ";
		
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ДокументСерия, Макет, "ИнойДокументСерия_", 2);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.УдостоверениеЛичностиНомер, Макет, "ИнойДокументНомер_", 8);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.УдостоверениеЛичностиСрокДействия, "ДФ=dd.MM.yy"),".",""), Макет, "ИнойДокументДата_", 6);
		
	КонецЕсли; 
	
КонецПроцедуры

Функция ЭтоПаспорт(КодУдостоверенияЛичности)
	
	Возврат КодУдостоверенияЛичности = "01"
		ИЛИ КодУдостоверенияЛичности = "02"
		ИЛИ КодУдостоверенияЛичности = "06"
		ИЛИ КодУдостоверенияЛичности = "09"
		ИЛИ КодУдостоверенияЛичности = "10"
		ИЛИ КодУдостоверенияЛичности = "21"
		ИЛИ КодУдостоверенияЛичности = "22"
		ИЛИ КодУдостоверенияЛичности = "26";
	
КонецФункции 

Функция ЭтоВременноеУдостоверениеЛичности(КодУдостоверенияЛичности)
	
	Возврат КодУдостоверенияЛичности = "14";
	
КонецФункции 
	
#КонецОбласти

#Область РазрешениеНаПроживание

Процедура ЗаполнитьВМакетеРазрешениеНаПроживание(Макет, Заявление)
	
	ДокументСерия = Заявление.СерияДокументаНаПроживание;
	ДокументСерия = СтрЗаменить(ДокументСерия, " ", "");
	
	Если ЭтоРазрешениеНаВременноеПроживание(Заявление.КодДокументаНаПроживание) Тогда
		Макет.Области["ИнойДокумент2"].Текст = "v ";
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ДокументСерия, Макет, "РазрешениеСерия_", 2);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.НомерДокументаНаПроживание, Макет, "РазрешениеНомер_", 8);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ДатаВыдачиДокументаНаПроживание, "ДЛФ=D"),".",""), Макет, "РазрешениеДата_", 8);
	ИначеЕсли ЭтоВидНаЖительство(Заявление.КодДокументаНаПроживание) Тогда
		Макет.Области["ИнойДокумент1"].Текст = "v ";
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ДокументСерия, Макет, "ВидНаЖительствоСерия_", 2);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.НомерДокументаНаПроживание, Макет, "ВидНаЖительствоНомер_", 8);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ДатаВыдачиДокументаНаПроживание, "ДЛФ=D"),".",""), Макет, "ВидНаЖительствоДата_", 8);
	КонецЕсли;
	
КонецПроцедуры

Функция ЭтоРазрешениеНаВременноеПроживание(КодДокументаНаПроживание)
	
	Возврат КодДокументаНаПроживание = "15";
	
КонецФункции 

Функция ЭтоВидНаЖительство(КодДокументаНаПроживание)
	
	Возврат КодДокументаНаПроживание = "12";
	
КонецФункции 
	
#КонецОбласти

Процедура ЗаполнитьВМакетеСведенияОМестеЖительства(Макет, Заявление)
	
	СтруктураАдреса = ЗарплатаКадры.СтруктураАдресаИзXML(Заявление.АдресРегистрации, ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица"));	
	Если СтруктураАдреса <> Неопределено Тогда
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Индекс"), Макет, "АдресРегистрации_", 6);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Регион"), Макет, "АдресРегистрации_", 17, 7);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Район"), Макет, "АдресРегистрации_", 17, 24);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(?(ЗначениеЗаполнено(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Город")), ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Город") + " " + ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "НаселенныйПункт"), ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "НаселенныйПункт")), Макет, "АдресРегистрации_", 34, 41);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Улица"), Макет, "АдресРегистрации_", 37, 75);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Дом"), Макет, "АдресРегистрации_", 8, 112);
		Если ВРег(СтруктураАдреса.ТипКорпуса) = "СТРОЕНИЕ" Тогда
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Корпус"), Макет, "АдресРегистрации_", 3, 123);
		Иначе
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Корпус"), Макет, "АдресРегистрации_", 3, 120);
		КонецЕсли;
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(ПолеАдресаВВерхнемРегистре(СтруктураАдреса, "Квартира"), Макет, "АдресРегистрации_", 6, 126);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьВМакетеТелефонПолучателя(Макет, Заявление)
	
	Если ПустаяСтрока(Заявление.Телефон) Тогда
		Возврат;	
	КонецЕсли;
	
	ПредставлениеТелефона = ПредставлениеТелефонаБезКодаСтраны(Заявление.Телефон, Справочники.ВидыКонтактнойИнформации.ТелефонДомашнийФизическиеЛица);
	
	ЗаполнитьВМакетеТелефон(Макет, ПредставлениеТелефона, "Тел_");
	
КонецПроцедуры

Процедура ЗаполнитьВМакетеРеквизитыЛН(Макет, Заявление)
	
	Если ЭтоПособиеПоБеременностиИРодам(Заявление.ВидПособия) Тогда
		ПрефиксОбласти = "БеременностьРоды";
	Иначе
		ПрефиксОбласти = "Нетрудоспособность";
	КонецЕсли;
	
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ДатаВыдачиБольничного, "ДФ=dd.MM.yy"),".",""),  Макет, ПрефиксОбласти + "ЛН_Дата_", 6);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.НомерБольничного, Макет, ПрефиксОбласти + "ЛН_Номер_", 12);
	
КонецПроцедуры

Процедура ЗаполнитьВМакетеРеквизитыСправкиОПостановкеНаУчетВРанниеСрокиБеременности(Макет, Заявление)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ДатаСправкиБеременной, "ДФ=dd.MM.yy"),".",""),  Макет, "СправкаПоБеременностиДата_", 6);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.НомерСправкиБеременной, Макет, "СправкаПоБеременностиНомер_", 11);
КонецПроцедуры

#Область ПособияНаДетей

#Область ЕдиновременноеПособиеПриРожденииРебенка

Процедура ЗаполнитьВМакетеОбластьЕдиновременногоПособияПриРожденииРебенка(Макет, Заявление)
	
	Если ДолжнаБытьСправкаОРождении(Заявление) Тогда
		ЗаполнитьВМакетеРеквизитыСправкиОРождении(Макет, Заявление);	
	Иначе
		ЗаполнитьВМакетеРеквизитыСвидетельстваОРождении(Макет, Заявление, "СвидетельствоОРождении");	
		ЗаполнитьВМакетеРеквизитыИногоПодтвержденияРождения(Макет, Заявление, "ИноеПодтверждениеРождения", 12);
	КонецЕсли;
	
	Если ПредоставленаСправкаОНеполученииПособияОтОтца(Заявление) Тогда
		ЗаполнитьВМакетеРеквизитыСправкиОНеполученииПособияОтДругогоРодителя(Макет, Заявление.НомерСправкиОтОтца, Заявление.ДатаСправкиОтОтца);
	Иначе
		ЗаполнитьВМакетеРеквизитыСправкиОНеполученииПособияОтДругогоРодителя(Макет, Заявление.НомерСправкиОтМатери, Заявление.ДатаСправкиОтМатери)
	КонецЕсли;
	
	ЗаполнитьВМакетеРеквизитыРешенияОбОпеке(Макет, Заявление, "РешениеОбОпеке", 12);	
	
	ЗаполнитьВМакетеРеквизитыРешенияОбУсыновлении(Макет, Заявление);	
	
	ЗаполнитьВМакетеРеквизитыДоговораОПередачеНаВоспитание(Макет, Заявление);	
	
КонецПроцедуры

#Область СправкаОРожденииРебенка

Функция ДолжнаБытьСправкаОРождении(Заявление)
	Возврат Не ЗначениеЗаполнено(Заявление.ДатаСвидетельстваОРождении) 
			И Не ЗначениеЗаполнено(Заявление.ДатаИногоПодтвержденияРождения);
КонецФункции 

Процедура ЗаполнитьВМакетеРеквизитыСправкиОРождении(Макет, Заявление)
	ЗаполнитьВМакетеФормуСправкиОРождении(Макет, Заявление);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ДатаСправкиОРождении, "ДФ=dd.MM.yy"),".",""),  Макет, "СправкаДата_", 6);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.НомерСправкиОРождении, Макет, "СправкаНомер_", 10);
КонецПроцедуры

Процедура ЗаполнитьВМакетеФормуСправкиОРождении(Макет, Заявление)
	Если Заявление.ВидСправкиОРожденииРебенка = Перечисления.ФормыСправкиОРожденииРебенка.Форма24 Тогда
		Макет.Параметры.Форма24 = Истина;
	ИначеЕсли Заявление.ВидСправкиОРожденииРебенка = Перечисления.ФормыСправкиОРожденииРебенка.Форма25 Тогда
		Макет.Параметры.Форма25 = Истина;
	ИначеЕсли Заявление.ВидСправкиОРожденииРебенка = Перечисления.ФормыСправкиОРожденииРебенка.Форма26 Тогда
		Макет.Параметры.Форма26 = Истина;
	КонецЕсли;
КонецПроцедуры
	
#КонецОбласти

Процедура ЗаполнитьВМакетеРеквизитыСправкиОНеполученииПособияОтДругогоРодителя(Макет, НомерСправки, ДатаСправки)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(ДатаСправки, "ДФ=dd.MM.yy"),".",""),  Макет, "СправкаОтДругогоРодителяДата_", 6);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(НомерСправки, Макет, "СправкаОтДругогоРодителяНомер_", 12);
КонецПроцедуры

Процедура ЗаполнитьВМакетеРеквизитыРешенияОбУсыновлении(Макет, Заявление)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ДатаРешенияОбУсыновлении, "ДЛФ=D"),".",""),  Макет, "РешениеОбУсыновленииДата_", 8);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.НомерРешенияОбУсыновлении, Макет, "РешениеОбУсыновленииНомер_", 9);
КонецПроцедуры

Процедура ЗаполнитьВМакетеРеквизитыДоговораОПередачеНаВоспитание(Макет, Заявление)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ДатаДоговораОПередачеНаВоспитание, "ДЛФ=D"),".",""),  Макет, "ДоговорОВоспитанииДата_", 8);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.НомерДоговораОПередачеНаВоспитание, Макет, "ДоговорОВоспитанииНомер_", 9);
КонецПроцедуры

#КонецОбласти

#Область ЕжемесячноеПособиеПоУходуЗаРебенком

Процедура ЗаполнитьВМакетеОбластьЕжемесячноеПособиеПоУходуЗаРебенком(Макет, Заявление)
	
	ЗаполнитьВМакетеРеквизитыСвидетельстваОРождении(Макет, Заявление, "СвидетельствоОРожденииII");	
	
	ЗаполнитьВМакетеРеквизитыРешенияОбОпеке(Макет, Заявление, "РешениеОбОпекеII", 11);
	
	ЗаполнитьВМакетеРеквизитыИногоПодтвержденияРождения(Макет, Заявление, "ИноеПодтверждениеРожденияII", 11);
	
	ЗаполнитьВМакетеРеквизитыПриказаНаОтпускПоУходуЗаРебенком(Макет, Заявление);
	
	ЗаполнитьВМакетеДокументаОРожденииДругогоРебенка(Макет, Заявление);	
		
	Если ПредоставленаСправкаОНеполученииПособияОтОбоихРодителей(Заявление) Тогда
		ЗаполнитьВМакетеРеквизитыСправкиОНеполученииПособияОтОбоихРодителей(Макет, Заявление);
	ИначеЕсли ПредоставленаСправкаОНеполученииПособияОтОтца(Заявление) Тогда
		ЗаполнитьВМакетеРеквизитыСправкиОНеполученииПособияОтОтца(Макет, Заявление);
	ИначеЕсли ПредоставленаСправкаОНеполученииПособияОтМатери(Заявление) Тогда
		ЗаполнитьВМакетеРеквизитыСправкиОНеполученииПособияОтМатери(Макет, Заявление);
	КонецЕсли;
	
	ЗаполнитьВМакетеРеквизитыСправкиОНеполученииПоДругимМестамРаботы(Макет, Заявление);
	
	ЗаполнитьВМакетеДанныеОПроживанииРаботеВОсобойЗоне(Макет, Заявление);	
	
КонецПроцедуры

Процедура ЗаполнитьВМакетеРеквизитыПриказаНаОтпускПоУходуЗаРебенком(Макет, Заявление)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ДатаПриказаНаОтпускПоУходуЗаРебенком, "ДФ=dd.MM.yy"),".",""),  Макет, "ДатаПриказаНаОтпускПоУходуЗаРебенком_", 6);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ОтпускПоУходуЗаРебенкомДатаНачало, "ДФ=dd.MM.yy"),".",""),  Макет, "ОтпускПоУходуЗаРебенкомДатаНачало_", 6);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ОтпускПоУходуЗаРебенкомДатаОкончание, "ДФ=dd.MM.yy"),".",""),  Макет, "ОтпускПоУходуЗаРебенкомДатаОкончание_", 6);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Прав(Заявление.НомерПриказаНаОтпускПоУходуЗаРебенком,10), Макет, "НомерПриказаНаОтпускПоУходуЗаРебенком_", 10);
КонецПроцедуры

Процедура ЗаполнитьВМакетеДокументаОРожденииДругогоРебенка(Макет, Заявление)
	Макет.Параметры.НаличиеДокументаОРожденииПредыдущегоРебенка = Заявление.НаличиеДокументаОРожденииПредыдущегоРебенка;
	Макет.Параметры.НаличиеДокументаОСмертиПредыдущегоРебенка = Заявление.НаличиеДокументаОСмертиПредыдущегоРебенка;
КонецПроцедуры

#Область СправкиОНеполученииПособия

Процедура ЗаполнитьВМакетеРеквизитыСправкиОНеполученииПособияОтОбоихРодителей(Макет, Заявление)
	Макет.Параметры.СправкаОтОбоихРодителейОНеполученииПособия = Истина;
	ЗаполнитьВМакетеДатуНомерСправкиОНеполученииПособияОтОтца(Макет, Заявление);
	ЗаполнитьВМакетеДатуНомерСправкиОНеполученииПособияОтМатери(Макет, Заявление);
КонецПроцедуры

Процедура ЗаполнитьВМакетеРеквизитыСправкиОНеполученииПособияОтОтца(Макет, Заявление)
	Макет.Параметры.СправкаОтОтцаОНеполученииПособия = Истина;
	ЗаполнитьВМакетеДатуНомерСправкиОНеполученииПособияОтОтца(Макет, Заявление);
КонецПроцедуры

Процедура ЗаполнитьВМакетеДатуНомерСправкиОНеполученииПособияОтОтца(Макет, Заявление)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ДатаСправкиОтОтца, "ДФ=dd.MM.yy"),".",""),  Макет, "ДатаСправкиОтОтца_", 6);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.НомерСправкиОтОтца,  Макет, "НомерСправкиОтОтца_", 11);
КонецПроцедуры

Процедура ЗаполнитьВМакетеРеквизитыСправкиОНеполученииПособияОтМатери(Макет, Заявление)
	Макет.Параметры.СправкаОтМатериОНеполученииПособия = Истина;
	ЗаполнитьВМакетеДатуНомерСправкиОНеполученииПособияОтМатери(Макет, Заявление);
КонецПроцедуры

Процедура ЗаполнитьВМакетеДатуНомерСправкиОНеполученииПособияОтМатери(Макет, Заявление)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ДатаСправкиОтМатери, "ДФ=dd.MM.yy"),".",""),  Макет, "ДатаСправкиОтМатери_", 6);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.НомерСправкиОтМатери,  Макет, "НомерСправкиОтМатери_", 11);
КонецПроцедуры
	
#КонецОбласти

Процедура ЗаполнитьВМакетеРеквизитыСправкиОНеполученииПоДругимМестамРаботы(Макет, Заявление)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ДатаСправкиПоДругимМестамРаботы, "ДФ=dd.MM.yy"),".",""),  Макет, "ДатаСправкиПоДругимМестамРаботы_", 6);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.НомерСправкиПоДругимМестамРаботы,  Макет, "НомерСправкиПоДругимМестамРаботы_", 11);
КонецПроцедуры

Процедура ЗаполнитьВМакетеДанныеОПроживанииРаботеВОсобойЗоне(Макет, Заявление)
	Макет.Параметры.ПроживаниеВЗоне = Заявление.ПроживаниеВЗоне;
	Макет.Параметры.РаботаВЗоне = Заявление.РаботаВЗоне;
	Макет.Параметры.ВЗонеСПравомНаОтселение = Заявление.ВЗонеСПравомНаОтселение;
	Макет.Параметры.ВЗонеОтселения = Заявление.ВЗонеОтселения;
	Макет.Параметры.ВЗонеСЛьготнымСтатусом = Заявление.ВЗонеСЛьготнымСтатусом;
КонецПроцедуры

#КонецОбласти

Процедура ЗаполнитьВМакетеРеквизитыСвидетельстваОРождении(Макет, Заявление, ПрефиксОбласти)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ДатаСвидетельстваОРождении, "ДЛФ=D"),".",""),  Макет, ПрефиксОбласти + "Дата_", 8);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.СерияСвидетельстваОРождении, Макет, ПрефиксОбласти + "Серия_", 4);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.НомерСвидетельстваОРождении, Макет, ПрефиксОбласти + "Номер_", 9);
КонецПроцедуры

Процедура ЗаполнитьВМакетеРеквизитыРешенияОбОпеке(Макет, Заявление, ПрефиксОбласти, ДлинаНомераРешенияОбОпеке)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ДатаРешенияОбОпеке, "ДЛФ=D"),".",""),  Макет, ПрефиксОбласти + "Дата_", 8);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.НомерРешенияОбОпеке, Макет, ПрефиксОбласти + "Номер_", ДлинаНомераРешенияОбОпеке);
КонецПроцедуры

Процедура ЗаполнитьВМакетеРеквизитыИногоПодтвержденияРождения(Макет, Заявление, ПрефиксОбласти, ДлинаНомераИногоДокумента)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ДатаИногоПодтвержденияРождения, "ДЛФ=D"),".",""),  Макет, ПрефиксОбласти + "Дата_", 8);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.НомерИногоПодтвержденияРождения, Макет, ПрефиксОбласти + "Номер_", ДлинаНомераИногоДокумента);
КонецПроцедуры

Функция ПредоставленаСправкаОНеполученииПособияОтОтца(Заявление)
	Возврат Заявление.СправкаОНеполученииПособия = Перечисления.РодителиПредоставившиеСправкуОНеполученииПособия.Отец;
КонецФункции

Функция ПредоставленаСправкаОНеполученииПособияОтМатери(Заявление)
	Возврат Заявление.СправкаОНеполученииПособия = Перечисления.РодителиПредоставившиеСправкуОНеполученииПособия.Мать;
КонецФункции

Функция ПредоставленаСправкаОНеполученииПособияОтОбоихРодителей(Заявление)
	Возврат Заявление.СправкаОНеполученииПособия = Перечисления.РодителиПредоставившиеСправкуОНеполученииПособия.ОбаРодителя;
КонецФункции

#КонецОбласти

Процедура ЗаполнитьВМакетеДатуПодачиЗаявления(Макет, Заявление)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ДатаПодачиЗаявления, "ДФ=dd.MM.yy"),".",""),  Макет, "ДатаПодачи_", 6);
КонецПроцедуры

Процедура ЗаполнитьВМакетеНаименованиеРаботодателя(Макет, Заявление)
	ДлиныСтрок = Новый Массив();
	ДлиныСтрок.Добавить(26);
	НаименованиеРаботодателяИВидЗанятости = ЗарплатаКадры.РазбитьСтрокуНаПодСтроки("" + Заявление.НаименованиеОрганизации, ДлиныСтрок);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(НаименованиеРаботодателяИВидЗанятости, Макет, "РаботодательИВидЗанятости_", 78);
КонецПроцедуры

Процедура ЗаполнитьВМакетеВидЗанятостиСотрудника(Макет, Заявление)
	
	Макет.Параметры.ОсновноеМестоРаботы = Заявление.ВидЗанятостиСотрудника = Перечисления.ВидыЗанятости.ОсновноеМестоРаботы;
	
КонецПроцедуры

Процедура ЗаполнитьВМакетеСНИЛССотрудника(Макет, Заявление)
	
	СНИЛС = Заявление.СНИЛССотрудника;
	СНИЛС = СтрЗаменить(СНИЛС,"-","");
	СНИЛС = СтрЗаменить(СНИЛС," ","");
	
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СНИЛС, Макет, "СНИЛС_", 11);
	
КонецПроцедуры

Процедура ЗаполнитьВМакетеИННСотрудника(Макет, Заявление)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.ИННСотрудника, Макет, "ИНННетрудоспособного_", 12);
КонецПроцедуры

#Область ЗаменаКалендарныхГодов

Функция ПредоставленоЗаявлениеОЗаменеКалендарныхГодов(Заявление)
	Возврат Заявление.ЗаявлениеРаботникаОЗаменеКалендарныхГодов;
КонецФункции

Процедура ЗаполнитьВМакетеДанныеОЗаменеКалендарныхГодов(Макет, Заявление)
	Макет.Параметры.ЗаявлениеРаботникаОЗаменеКалендарныхГодов = Истина;
	
	ПервыйПериодЗаменен = (Заявление.ПервыйГод <> Заявление.ВторойГод);
	ВторойПериодЗаменен = (Заявление.ТретийГод <> Заявление.ЧетвертыйГод);
	
	Если Не ПервыйПериодЗаменен И ВторойПериодЗаменен Тогда
		// Вывод 2го периода на месте 1го.
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Формат(Заявление.ТретийГод,"ЧЦ=2; ЧВН="), Макет, "ПервыйГод_", 2);
		ЗарплатаКадры.ВывестиДанныеПоБуквенно(Формат(Заявление.ЧетвертыйГод,"ЧЦ=2; ЧВН="), Макет, "ВторойГод_", 2);
	Иначе
		Если ПервыйПериодЗаменен Тогда
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(Формат(Заявление.ПервыйГод,"ЧЦ=2; ЧВН="), Макет, "ПервыйГод_", 2);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(Формат(Заявление.ВторойГод,"ЧЦ=2; ЧВН="), Макет, "ВторойГод_", 2);
		КонецЕсли;
		Если ВторойПериодЗаменен Тогда
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(Формат(Заявление.ТретийГод,"ЧЦ=2; ЧВН="), Макет, "ТретийГод_", 2);
			ЗарплатаКадры.ВывестиДанныеПоБуквенно(Формат(Заявление.ЧетвертыйГод,"ЧЦ=2; ЧВН="), Макет, "ЧетвертыйГод_", 2);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ЗаменаКалендарныхГодов

Функция ПредоставленоЗаявлениеОбИсчисленииПоПравилам2010Года(Заявление)
	Возврат Заявление.ЗаявлениеПоМатеринству2010;
КонецФункции

Процедура ЗаполнитьВМакетеРеквизитыЗаявленияОбИсчисленииПоПравилам2010Года(Макет, Заявление)
	Макет.Параметры.ЗаявлениеПоМатеринству2010 = Истина;
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ЗаявлениеПоМатеринству2010ДатаНачало, "ДФ=dd.MM.yy"),".",""),  Макет, "ЗаявлениеПоМатеринству2010ДатаНачало_", 6);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ЗаявлениеПоМатеринству2010ДатаОкончание, "ДФ=dd.MM.yy"),".",""),  Макет, "ЗаявлениеПоМатеринству2010ДатаОкончание_", 6);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Заявление.ЧислоКалендарныхДней, Макет, "ЧислоКалендарныхДней_", 3);
КонецПроцедуры

#КонецОбласти

Процедура ЗаполнитьВМакетеДанныеОНеполномРабочемВремени(Макет, Заявление)
	Макет.Параметры.НеполноеРабочееВремя = Истина;
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Формат(Заявление.ДоляВремени, "ЧЦ=3; ЧДЦ=0; ЧС=-2; ЧН=' '; ЧВН="), Макет, "Ставка_", 3);
КонецПроцедуры

Процедура ЗаполнитьВМакетеТарифнуюСтавкуОклад(Макет, Заявление)
	ЗарплатаКадры.ВывестиСуммуВРубляхКопейкахВЯчейки(Заявление.ТарифнаяСтавкаОклад, Макет, "ТарифнаяСтавкаОклад_", 9);
КонецПроцедуры

Процедура ЗаполнитьВМакетеСреднийЗаработок(Макет, Заявление)
	ЗарплатаКадры.ВывестиСуммуВРубляхКопейкахВЯчейки(Заявление.СреднийЗаработок, Макет, "СреднийЗаработок_", 10);
КонецПроцедуры

Процедура ЗаполнитьВМакетеДанныеОПериодеПростоя(Макет, Заявление)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ПериодПростояДатаНачало, "ДФ=dd.MM.yy"),".",""),  Макет, "ПериодПростояДатаНачало_", 6);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ПериодПростояДатаОкончание, "ДФ=dd.MM.yy"),".",""),  Макет, "ПериодПростояДатаОкончание_", 6);
	ЗарплатаКадры.ВывестиСуммуВРубляхКопейкахВЯчейки(Заявление.СреднедневнойЗаработокНаПериодПростоя, Макет, "СреднедневнойЗаработокНаПериодПростоя_", 8);
КонецПроцедуры

Процедура ЗаполнитьВМакетеПериодЗаКоторыйПособиеНеНазначается(Макет, Заявление)
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ПособияНеНазначаютсяДатаНачало, "ДФ=dd.MM.yy"),".",""),  Макет, "ПособияНеНазначаютсяДатаНачало_", 6);
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(СтрЗаменить(Формат(Заявление.ПособияНеНазначаютсяДатаОкончание, "ДФ=dd.MM.yy"),".",""),  Макет, "ПособияНеНазначаютсяДатаОкончание_", 6);
КонецПроцедуры

Процедура ЗаполнитьВМакетеДанныеРуководителяОрганизации(Макет, Заявление)
	Макет.Параметры.Подтверждаю = ЗначениеЗаполнено(Заявление.ФИОРуководителя);
	Макет.Параметры.ДолжностьРуководителя = "" + Заявление.ДолжностьРуководителя;
	Макет.Параметры.ФИОРуководителя = "" + Заявление.ФИОРуководителя;
КонецПроцедуры

Процедура ЗаполнитьВМакетеТелефонСоставителя(Макет, Заявление)
	
	Если ПустаяСтрока(Заявление.ТелефонСоставителя) Тогда
		Возврат;	
	КонецЕсли;
	
	ПредставлениеТелефона = ПредставлениеТелефонаБезКодаСтраны(Заявление.ТелефонСоставителя, Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
	
	ЗаполнитьВМакетеТелефон(Макет, ПредставлениеТелефона, "ТелефонСоставителя_");
	
КонецПроцедуры

Функция ЭтоПособиеПоВременнойНетрудоспособности(ВидПособия)
	Возврат ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоВременнойНетрудоспособности;
КонецФункции 

Функция ЭтоПособиеПоБеременностиИРодам(ВидПособия)
	Возврат ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки;
КонецФункции 

Функция ЭтоПособиеВставшимНаУчетВРанниеСроки(ВидПособия)
	Возврат ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВставшимНаУчетВРанниеСроки
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки;
КонецФункции 

Функция ЭтоЕдиновременноеПособиеПриРожденииРебенка(ВидПособия)
	Возврат ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕдиновременноеПособиеПриРожденииРебенка;
КонецФункции 

Функция ЭтоЕжемесячноеПособиеПоУходуЗаРебенком(ВидПособия)
	Возврат ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком;
КонецФункции 

Функция ЭтоПособиеПоНесчастномуСлучаю(ВидПособия)
	Возврат ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве;
КонецФункции 

Функция ЭтоОтпускСверхЕжегодногоНаПериодЛечения(ВидПособия)
	Возврат ВидПособия = Перечисления.ПособияНазначаемыеФСС.ОтпускСверхЕжегодногоНаПериодЛечения;
КонецФункции 

Функция ПредставлениеТелефонаБезКодаСтраны(Телефон, ВидКонтактнойИнформации)
	СтруктураТелефона = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(Телефон, ВидКонтактнойИнформации);
	Возврат УправлениеКонтактнойИнформациейКлиентСервер.СформироватьПредставлениеТелефона("", СтруктураТелефона.КодГорода, СтруктураТелефона.НомерТелефона, СтруктураТелефона.Добавочный,  "");	
КонецФункции

Процедура ЗаполнитьВМакетеТелефон(Макет, Телефон, ПрефиксОбласти)
	
	УдалитьНезначащиеСимволы(Телефон);
	
	ЗарплатаКадры.ВывестиДанныеПоБуквенно(Телефон, Макет, ПрефиксОбласти, 10);

КонецПроцедуры

Процедура УдалитьНезначащиеСимволы(Телефон)
	Телефон = СтрЗаменить(Телефон, "(", "");
	Телефон = СтрЗаменить(Телефон, ")", "");
	Телефон = СтрЗаменить(Телефон, " ", "");
	Телефон = СтрЗаменить(Телефон, "-", "");
	Телефон = СтрЗаменить(Телефон, ",", "");	
КонецПроцедуры

#КонецОбласти 

Функция ПолеАдресаВВерхнемРегистре(Структура, ИмяСвойства) 
	
	Значение = "";
	Структура.Свойство(ИмяСвойства, Значение);
	
	Возврат ВРег(Значение)
	
КонецФункции

Функция ДатаНаступленияСтраховогоСлучая(ДокументОснование) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Менеджер = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ДокументОснование);
	
	Возврат Менеджер.ДатаНаступленияСтраховогоСлучая(ДокументОснование);
	
КонецФункции

Процедура ЗаполнитьНомерКартыМИР(ДокументОбъект) Экспорт
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.НомерКартыМИР) Тогда
		ПоследнийНомерКартыМИР = ПоследнийНомерКартыМИР(ДокументОбъект.Сотрудник, ДокументОбъект.Дата);
		Если ЗначениеЗаполнено(ПоследнийНомерКартыМИР) Тогда
			ДокументОбъект.НомерКартыМИР = ПоследнийНомерКартыМИР;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПоследнийНомерКартыМИР(Сотрудник, Дата)
	Если Не ЗначениеЗаполнено(Сотрудник)
		Или Не ЗначениеЗаполнено(Дата) Тогда
		Возврат "";
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ЗаявлениеСотрудникаНаВыплатуПособия.НомерКартыМИР
	|ИЗ
	|	Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК ЗаявлениеСотрудникаНаВыплатуПособия
	|ГДЕ
	|	ЗаявлениеСотрудникаНаВыплатуПособия.Сотрудник = &Сотрудник
	|	И ЗаявлениеСотрудникаНаВыплатуПособия.Дата < &Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаявлениеСотрудникаНаВыплатуПособия.Дата УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗарплатаКадрыКлиентСервер.ЭтоНомерКарты(Выборка.НомерКартыМИР) Тогда
			Возврат Выборка.НомерКартыМИР;
		КонецЕсли;
	КонецЦикла;
	Возврат "";
КонецФункции

#Область МеханизмФиксацииИзменений

Функция ПараметрыФиксацииВторичныхДанных(Объект) Экспорт
	Возврат ФиксацияВторичныхДанныхВДокументах.ПараметрыФиксацииВторичныхДанных(ФиксацияОписаниеФиксацииРеквизитов(Объект), , ФиксацияОписанияТЧ())
КонецФункции

Функция ФиксацияОписаниеФиксацииРеквизитов(Объект)
	
	ОписаниеФиксацииРеквизитов = Новый Соответствие;
	
	// ЗАПОЛНЯЕМЫЕ АВТОМАТИЧЕСКИ
	ИспользоватьФиксациюПоОснованию = ЗначениеЗаполнено(Объект.ДокументОснование);
	 
	ОписаниеФиксацииРеквизитов.Вставить("Организация", 										ФиксацияОписаниеФиксацииРеквизита("Организация", "Шапка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("Сотрудник", 										ФиксацияОписаниеФиксацииРеквизита("Сотрудник", "Шапка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ВидПособия", 										ФиксацияОписаниеФиксацииРеквизита("ВидПособия", "Шапка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ФинансированиеФедеральнымБюджетом", 				ФиксацияОписаниеФиксацииРеквизита("ФинансированиеФедеральнымБюджетом", "ОтпускПоУходуЗаРебенком", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	
	ОписаниеФиксацииРеквизитов.Вставить("Перерасчет", 										ФиксацияОписаниеФиксацииРеквизита("Перерасчет", "Шапка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("КодПричиныПерерасчета", 							ФиксацияОписаниеФиксацииРеквизита("КодПричиныПерерасчета", "Шапка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	
	// Реквизиты листка нетрудоспособности.
	ОписаниеФиксацииРеквизитов.Вставить("НомерЛисткаНетрудоспособности", 					ФиксацияОписаниеФиксацииРеквизита("НомерЛисткаНетрудоспособности", "ЛистокНетрудоспособности", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ДатаЛисткаНетрудоспособности", 					ФиксацияОписаниеФиксацииРеквизита("ДатаЛисткаНетрудоспособности", "ЛистокНетрудоспособности", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	
	// Расчет среднего заработка
	ОписаниеФиксацииРеквизитов.Вставить("СреднийЗаработокЗаРасчетныйПериод", 				ФиксацияОписаниеФиксацииРеквизита("СреднийЗаработокЗаРасчетныйПериод", "РасчетСреднегоЗаработка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ДатаНачалаРасчетногоПериода", 						ФиксацияОписаниеФиксацииРеквизита("ДатаНачалаРасчетногоПериода", "РасчетСреднегоЗаработка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ДатаОкончанияРасчетногоПериода", 					ФиксацияОписаниеФиксацииРеквизита("ДатаОкончанияРасчетногоПериода", "РасчетСреднегоЗаработка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ЧислоКалендарныхДнейРасчетногоПериода", 			ФиксацияОписаниеФиксацииРеквизита("ЧислоКалендарныхДнейРасчетногоПериода", "РасчетСреднегоЗаработка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ПервыйРасчетныйГод", 								ФиксацияОписаниеФиксацииРеквизита("ПервыйРасчетныйГод", "РасчетСреднегоЗаработка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ВторойРасчетныйГод", 								ФиксацияОписаниеФиксацииРеквизита("ВторойРасчетныйГод", "РасчетСреднегоЗаработка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ПервыйЗамененныйГод", 								ФиксацияОписаниеФиксацииРеквизита("ПервыйЗамененныйГод", "РасчетСреднегоЗаработка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ВторойЗамененныйГод", 								ФиксацияОписаниеФиксацииРеквизита("ВторойЗамененныйГод", "РасчетСреднегоЗаработка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ЗаработокПервыйГодРасчета", 						ФиксацияОписаниеФиксацииРеквизита("ЗаработокПервыйГодРасчета", "РасчетСреднегоЗаработка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ЗаработокВторойГодРасчета", 						ФиксацияОписаниеФиксацииРеквизита("ЗаработокВторойГодРасчета", "РасчетСреднегоЗаработка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка", 	ФиксацияОписаниеФиксацииРеквизита("ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка", "РасчетСреднегоЗаработка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("СчитатьПоПравилам2010Года", 						ФиксацияОписаниеФиксацииРеквизита("СчитатьПоПравилам2010Года", "РасчетСреднегоЗаработка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	
	// Приказ о предоставлении отпуска по уходу за ребенком.
	ОписаниеФиксацииРеквизитов.Вставить("НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком", 	ФиксацияОписаниеФиксацииРеквизита("НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком", "ОтпускПоУходуЗаРебенком", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком", 	ФиксацияОписаниеФиксацииРеквизита("ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком", "ОтпускПоУходуЗаРебенком", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ДатаНачалаОтпускаПоУходуЗаРебенком", 					ФиксацияОписаниеФиксацииРеквизита("ДатаНачалаОтпускаПоУходуЗаРебенком", "ОтпускПоУходуЗаРебенком", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ДатаОкончанияОтпускаПоУходуЗаРебенком", 				ФиксацияОписаниеФиксацииРеквизита("ДатаОкончанияОтпускаПоУходуЗаРебенком", "ОтпускПоУходуЗаРебенком", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	
	ОписаниеФиксацииРеквизитов.Вставить("НаличиеОдногоИзДокументовНаПредыдущихДетей", 	ФиксацияОписаниеФиксацииРеквизита("НаличиеОдногоИзДокументовНаПредыдущихДетей", "ОтпускПоУходуЗаРебенком", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("НаличиеСвидетельстваОСмертиПредыдущихДетей", 	ФиксацияОписаниеФиксацииРеквизита("НаличиеСвидетельстваОСмертиПредыдущихДетей", "ОтпускПоУходуЗаРебенком", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	
	// Данные ребенка
	ОписаниеФиксацииРеквизитов.Вставить("ДатаРожденияРебенка", 							ФиксацияОписаниеФиксацииРеквизита("ДатаРожденияРебенка", "ДанныеРебенка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ФамилияРебенка", 								ФиксацияОписаниеФиксацииРеквизита("ФамилияРебенка", "ДанныеРебенка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ИмяРебенка", 									ФиксацияОписаниеФиксацииРеквизита("ИмяРебенка", "ДанныеРебенка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ОтчествоРебенка", 								ФиксацияОписаниеФиксацииРеквизита("ОтчествоРебенка", "ДанныеРебенка", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	
	// Документы о рождении ребенка.
	ОписаниеФиксацииРеквизитов.Вставить("ДатаСвидетельстваОРождении", 					ФиксацияОписаниеФиксацииРеквизита("ДатаСвидетельстваОРождении", "СвидетельствоОРождении", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("СерияСвидетельстваОРождении", 					ФиксацияОписаниеФиксацииРеквизита("СерияСвидетельстваОРождении", "СвидетельствоОРождении", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("НомерСвидетельстваОРождении", 					ФиксацияОписаниеФиксацииРеквизита("НомерСвидетельстваОРождении", "СвидетельствоОРождении", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ДатаРешенияОбОпеке", 							ФиксацияОписаниеФиксацииРеквизита("ДатаРешенияОбОпеке", "РешениеОбОпеке", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("НомерРешенияОбОпеке", 							ФиксацияОписаниеФиксацииРеквизита("НомерРешенияОбОпеке", "РешениеОбОпеке", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("ДатаИногоДокументаПодтверждающегоРождение", 	ФиксацияОписаниеФиксацииРеквизита("ДатаИногоДокументаПодтверждающегоРождение", "ИнойДокументПодтверждающийРождение", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	ОписаниеФиксацииРеквизитов.Вставить("НомерИногоДокументаПодтверждающегоРождение", 	ФиксацияОписаниеФиксацииРеквизита("НомерИногоДокументаПодтверждающегоРождение", "ИнойДокументПодтверждающийРождение", "ДокументОснование", ИспользоватьФиксациюПоОснованию));
	
	// Данные о банковском счете
	ОписаниеФиксацииРеквизитов.Вставить("НаименованиеБанка", 							ФиксацияОписаниеФиксацииРеквизита("НаименованиеБанка", "БанковскиеРеквизиты", "Банк",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("БИКБанка", 									ФиксацияОписаниеФиксацииРеквизита("БИКБанка", "БанковскиеРеквизиты", "Банк",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("НомерЛицевогоСчета", 							ФиксацияОписаниеФиксацииРеквизита("НомерЛицевогоСчета", "БанковскиеРеквизиты", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("Банк", 										ФиксацияОписаниеФиксацииРеквизита("Банк", "БанковскиеРеквизиты", "Сотрудник",,,Истина));
	
	// ФИОПолучателя
	ОписаниеФиксацииРеквизитов.Вставить("ФамилияПолучателя", 							ФиксацияОписаниеФиксацииРеквизита("ФамилияПолучателя", "ФИО", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("ИмяПолучателя", 								ФиксацияОписаниеФиксацииРеквизита("ИмяПолучателя", "ФИО", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("ОтчествоПолучателя", 							ФиксацияОписаниеФиксацииРеквизита("ОтчествоПолучателя", "ФИО", "Сотрудник",,,Истина));
	
	// ФИОЗаявителя
	ОписаниеФиксацииРеквизитов.Вставить("ФамилияЗаявителя", 							ФиксацияОписаниеФиксацииРеквизита("ФамилияЗаявителя", "ФИО", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("ИмяЗаявителя", 								ФиксацияОписаниеФиксацииРеквизита("ИмяЗаявителя", "ФИО", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("ОтчествоЗаявителя", 							ФиксацияОписаниеФиксацииРеквизита("ОтчествоЗаявителя", "ФИО", "Сотрудник",,,Истина));
	
	// СНИЛСПолучателя
	ОписаниеФиксацииРеквизитов.Вставить("СНИЛСПолучателя", 								ФиксацияОписаниеФиксацииРеквизита("СНИЛСПолучателя", "ДанныеСотрудника", "Сотрудник"));
	
	// ИННПолучателя 
	ОписаниеФиксацииРеквизитов.Вставить("ИННПолучателя", 								ФиксацияОписаниеФиксацииРеквизита("ИННПолучателя", "ДанныеСотрудника", "Сотрудник"));
	
	// СтатусНалогоплательщикаПолучателя 
	ОписаниеФиксацииРеквизитов.Вставить("СтатусНалогоплательщикаПолучателя", 			ФиксацияОписаниеФиксацииРеквизита("СтатусНалогоплательщикаПолучателя", "ДанныеСотрудника", "Сотрудник"));
	
	// ГражданствоПолучателя 
	ОписаниеФиксацииРеквизитов.Вставить("Гражданство", 									ФиксацияОписаниеФиксацииРеквизита("Гражданство", "ДанныеСотрудника", "Сотрудник"));
	
	// ДатаРожденияПолучателя
	ОписаниеФиксацииРеквизитов.Вставить("ДатаРожденияПолучателя", 						ФиксацияОписаниеФиксацииРеквизита("ДатаРожденияПолучателя", "ДанныеСотрудника", "Сотрудник"));
	
	// ДокументУдостоверяющийЛичностьПолучателя	
	ОписаниеФиксацииРеквизитов.Вставить("ВидДокументаУдостоверяющегоЛичностьПолучателя", 			ФиксацияОписаниеФиксацииРеквизита("ВидДокументаУдостоверяющегоЛичностьПолучателя", "ДокументУдостоверяющийЛичностьПолучателя", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("СерияДокументаУдостоверяющегоЛичностьПолучателя", 			ФиксацияОписаниеФиксацииРеквизита("СерияДокументаУдостоверяющегоЛичностьПолучателя", "ДокументУдостоверяющийЛичностьПолучателя", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("НомерДокументаУдостоверяющегоЛичностьПолучателя", 			ФиксацияОписаниеФиксацииРеквизита("НомерДокументаУдостоверяющегоЛичностьПолучателя", "ДокументУдостоверяющийЛичностьПолучателя", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("ДатаВыдачиДокументаУдостоверяющегоЛичностьПолучателя",		ФиксацияОписаниеФиксацииРеквизита("ДатаВыдачиДокументаУдостоверяющегоЛичностьПолучателя", "ДокументУдостоверяющийЛичностьПолучателя", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("ДатаДействияДокументаУдостоверяющегоЛичностьПолучателя", 	ФиксацияОписаниеФиксацииРеквизита("ДатаДействияДокументаУдостоверяющегоЛичностьПолучателя", "ДокументУдостоверяющийЛичностьПолучателя", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("КемВыданДокументУдостоверяющийЛичностьПолучателя",			ФиксацияОписаниеФиксацииРеквизита("КемВыданДокументУдостоверяющийЛичностьПолучателя", "ДокументУдостоверяющийЛичностьПолучателя", "Сотрудник",,,Истина));
	
	ОписаниеФиксацииРеквизитов.Вставить("ВидДокументаУдостоверяющегоЛичностьЗаявителя", 			ФиксацияОписаниеФиксацииРеквизита("ВидДокументаУдостоверяющегоЛичностьЗаявителя", "ДокументУдостоверяющийЛичностьЗаявителя", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("СерияДокументаУдостоверяющегоЛичностьЗаявителя", 			ФиксацияОписаниеФиксацииРеквизита("СерияДокументаУдостоверяющегоЛичностьЗаявителя", "ДокументУдостоверяющийЛичностьЗаявителя", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("НомерДокументаУдостоверяющегоЛичностьЗаявителя", 			ФиксацияОписаниеФиксацииРеквизита("НомерДокументаУдостоверяющегоЛичностьЗаявителя", "ДокументУдостоверяющийЛичностьЗаявителя", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("ДатаВыдачиДокументаУдостоверяющегоЛичностьЗаявителя", 		ФиксацияОписаниеФиксацииРеквизита("ДатаВыдачиДокументаУдостоверяющегоЛичностьЗаявителя", "ДокументУдостоверяющийЛичностьЗаявителя", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("КемВыданДокументУдостоверяющийЛичностьЗаявителя", 			ФиксацияОписаниеФиксацииРеквизита("КемВыданДокументУдостоверяющийЛичностьЗаявителя", "ДокументУдостоверяющийЛичностьЗаявителя", "Сотрудник",,,Истина));
	
	ОписаниеФиксацииРеквизитов.Вставить("ВидДокументаНаПроживание", 								ФиксацияОписаниеФиксацииРеквизита("ВидДокументаНаПроживание", "ДокументНаПроживаниеПолучателя", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("СерияДокументаНаПроживание", 								ФиксацияОписаниеФиксацииРеквизита("СерияДокументаНаПроживание", "ДокументНаПроживаниеПолучателя", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("НомерДокументаНаПроживание", 								ФиксацияОписаниеФиксацииРеквизита("НомерДокументаНаПроживание", "ДокументНаПроживаниеПолучателя", "Сотрудник",,,Истина));
	ОписаниеФиксацииРеквизитов.Вставить("ДатаВыдачиДокументаНаПроживание", 							ФиксацияОписаниеФиксацииРеквизита("ДатаВыдачиДокументаНаПроживание", "ДокументНаПроживаниеПолучателя", "Сотрудник",,,Истина));
	
	// Адрес и телефон
	ОписаниеФиксацииРеквизитов.Вставить("АдресПолучателяФактический", 								ФиксацияОписаниеФиксацииРеквизита("АдресПолучателяФактический", "ДанныеСотрудника", "Сотрудник"));
	ОписаниеФиксацииРеквизитов.Вставить("АдресПолучателяРегистрации", 								ФиксацияОписаниеФиксацииРеквизита("АдресПолучателяРегистрации", "ДанныеСотрудника", "Сотрудник"));
	ОписаниеФиксацииРеквизитов.Вставить("ТелефонПолучателя", 										ФиксацияОписаниеФиксацииРеквизита("ТелефонПолучателя", "ДанныеСотрудника", "Сотрудник"));
	
	// ТипЗанятостиРаботника
	ОписаниеФиксацииРеквизитов.Вставить("ТипЗанятостиРаботника", 									ФиксацияОписаниеФиксацииРеквизита("ТипЗанятостиРаботника", "ДанныеСотрудника", "Сотрудник"));
	
	// НеполноеРабочееВремя
	ОписаниеФиксацииРеквизитов.Вставить("НеполноеРабочееВремя", 									ФиксацияОписаниеФиксацииРеквизита("НеполноеРабочееВремя", "ДанныеСотрудника", "Сотрудник"));
	
	// РазмерСтавки
	ОписаниеФиксацииРеквизитов.Вставить("РазмерСтавки", 											ФиксацияОписаниеФиксацииРеквизита("РазмерСтавки", "ДанныеСотрудника", "Сотрудник"));
	
	// ДолжностнойОклад
	ОписаниеФиксацииРеквизитов.Вставить("ДолжностнойОклад", 										ФиксацияОписаниеФиксацииРеквизита("ДолжностнойОклад", "ДанныеСотрудника", "Сотрудник"));
	
	// Данные работодателя
	ОписаниеФиксацииРеквизитов.Вставить("НаименованиеОрганизации", 									ФиксацияОписаниеФиксацииРеквизита("НаименованиеОрганизации", "РеквизитыОрганизации", "Организация"));
	ОписаниеФиксацииРеквизитов.Вставить("ФИОУполномоченного", 										ФиксацияОписаниеФиксацииРеквизита("ФИОУполномоченного", "РеквизитыОрганизации", "Организация"));
	ОписаниеФиксацииРеквизитов.Вставить("ДолжностьУполномоченного",									ФиксацияОписаниеФиксацииРеквизита("ДолжностьУполномоченного", "РеквизитыОрганизации", "Организация"));
	ОписаниеФиксацииРеквизитов.Вставить("ТелефонУполномоченного", 									ФиксацияОписаниеФиксацииРеквизита("ТелефонУполномоченного", "РеквизитыОрганизации", "Организация"));
	ОписаниеФиксацииРеквизитов.Вставить("НаименованиеТерриториальногоОрганаФСС", 					ФиксацияОписаниеФиксацииРеквизита("НаименованиеТерриториальногоОрганаФСС", "РеквизитыОрганизации", "Организация"));
	ОписаниеФиксацииРеквизитов.Вставить("РайонныйКоэффициент", 										ФиксацияОписаниеФиксацииРеквизита("РайонныйКоэффициент", "РеквизитыОрганизации", "Организация"));
	
	Возврат ОписаниеФиксацииРеквизитов;  
	
КонецФункции 
 
Функция ФиксацияОписанияТЧ()
	
	СтруктураКлючевыхПолей = Новый Структура;
	
	Возврат	СтруктураКлючевыхПолей
КонецФункции

Функция ФиксацияОписаниеФиксацииРеквизита(ИмяРеквизита,
	ИмяГруппы, 
	ОснованиеЗаполнения,
	Используется = Истина, 
	РеквизитСтроки = Ложь,
	ФиксацияГруппы = Ложь, 
	Путь = "",
	ОтображатьПредупреждение = Истина, 
	СтрокаПредупреждения =  "")
	
	ФиксацияРеквизита = ФиксацияВторичныхДанныхВДокументах.СтруктураПараметровОписанияФиксацииРеквизитов();
	ФиксацияРеквизита.Вставить("ИмяРеквизита", ИмяРеквизита);
	ФиксацияРеквизита.Вставить("Используется", Используется);
	ФиксацияРеквизита.Вставить("ИмяГруппы", ИмяГруппы);
	ФиксацияРеквизита.Вставить("ФиксацияГруппы", ФиксацияГруппы);
	ФиксацияРеквизита.Вставить("ОснованиеЗаполнения", ОснованиеЗаполнения);
	ФиксацияРеквизита.Вставить("Путь", Путь);
	ФиксацияРеквизита.Вставить("ОтображатьПредупреждение", ОтображатьПредупреждение);
	Если СтрокаПредупреждения <> "" Тогда
		ФиксацияРеквизита.Вставить("СтрокаПредупреждения", СтрокаПредупреждения);
	КонецЕсли;
	ФиксацияРеквизита.Вставить("РеквизитСтроки", РеквизитСтроки);
	
	Возврат ФиксацияВторичныхДанныхВДокументах.ОписаниеФиксацииРеквизита(ФиксацияРеквизита)
КонецФункции 

#КонецОбласти

#КонецОбласти

#КонецЕсли
