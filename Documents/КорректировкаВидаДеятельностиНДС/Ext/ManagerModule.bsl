#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	Если ПравоДоступа("Добавление", Метаданные.Документы.КорректировкаВидаДеятельностиНДС) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.КорректировкаВидаДеятельностиНДС.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.КорректировкаВидаДеятельностиНДС);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьРаздельныйУчетПоНалогообложению";
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуОстаткиТоваровОрганизаций(КомандыОтчетов);

КонецПроцедуры

//++ НЕ УТ

#Область ПроводкиРеглУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	#Область ВключениеИсключениеНДСВСтоимостьТовараНаСкладе
	ТекстВключениеИсключениеНДСВСтоимостьТовараНаСкладе =
	"ВЫБРАТЬ //// Включение/исключение НДС в стоимость товара на складе - получателе (Дт 41.01 :: Кт 19.03)
	|	Партии.Ссылка КАК Ссылка,
	|	Партии.Период КАК Период,
	|	Партии.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСРегл
	|	ИНАЧЕ
	|		-Партии.НДСРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	Партии.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	Операция.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	Партии.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Партии.Номенклатура КАК СубконтоДт1,
	|	Операция.Склад КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаКт,
	|	Партии.ВидДеятельностиНДС                                              КАК АналитикаУчетаКт,
	|	Партии.ВидЦенности                                                     КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Партии.Контрагент КАК СубконтоКт1,
	|	Партии.ДокументПоступления КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Включение/исключение НДС в стоимость товара"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаВидаДеятельностиНДС КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Партии КАК Партии
	|	ПО
	|		Партии.Ссылка = Операция.Ссылка
	|ГДЕ
	|	(Партии.ВключениеНДСВСтоимость ИЛИ Партии.ИсключениеНДСИзСтоимости)
	|	И НЕ Операция.Склад.ЦеховаяКладовая
	|";
	#КонецОбласти
	
	#Область ВключениеИсключениеНДСВСтоимостьТовараНаПроизводственномСкладе
	ТекстВключениеИсключениеНДСВСтоимостьТовараНаПроизводственномСкладе =
	"ВЫБРАТЬ //// Включение/исключение НДС в стоимость товара на производственном складе - получателе (Дт 20 :: Кт 19.03)
	|	Партии.Ссылка КАК Ссылка,
	|	Партии.Период КАК Период,
	|	Партии.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСРегл
	|	ИНАЧЕ
	|		-Партии.НДСРегл
	|	КОНЕЦ КАК Сумма,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	Операция.Склад.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	Партии.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты) КАК СубконтоДт1,
	|	Партии.Номенклатура КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаКт,
	|	Партии.ВидДеятельностиНДС                                              КАК АналитикаУчетаКт,
	|	Партии.ВидЦенности                                                     КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Партии.Контрагент КАК СубконтоКт1,
	|	Партии.ДокументПоступления КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Включение/исключение НДС в стоимость товара"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаВидаДеятельностиНДС КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Партии КАК Партии
	|	ПО
	|		Партии.Ссылка = Операция.Ссылка
	|ГДЕ
	|	(Партии.ВключениеНДСВСтоимость ИЛИ Партии.ИсключениеНДСИзСтоимости)
	|	И Операция.Склад.ЦеховаяКладовая
	|";
	#КонецОбласти
	
	Возврат 
		ТекстВключениеИсключениеНДСВСтоимостьТовараНаСкладе
		+ " ОБЪЕДИНИТЬ ВСЕ " + ТекстВключениеИсключениеНДСВСтоимостьТовараНаПроизводственномСкладе;
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц, 
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//	ТекстЗапроса - Строка - Текст запроса cоздания временных таблиц.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат ""
	
КонецФункции

#КонецОбласти

//-- НЕ УТ

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.КорректировкаВидаДеятельностиНДС";
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПустаяСсылка());
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	ПараметрыУказанияСерий.ТолькоСерииДляСебестоимости = Истина;
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

// Возвращает текст запроса расчета статусов указания серий
//		
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|			ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|		ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|			И (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	
	////////////////////////////////////////////////////////////////////////////
	// Поместим результаты запроса в дополнительные свойства
	
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.Назначение КАК Назначение,
	|	ДанныеДокумента.НовоеНалогообложениеНДС КАК НовоеНалогообложениеНДС,
	|	ДанныеДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ДанныеДокумента.СохранятьВидЗапасов КАК СохранятьВидЗапасов,
	|	ДанныеДокумента.ДокументПоступления КАК ДокументПоступления
	|ИЗ
	|	Документ.КорректировкаВидаДеятельностиНДС КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Склад", Реквизиты.Склад);
	Запрос.УстановитьПараметр("Назначение", Реквизиты.Назначение);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("НалогообложениеНДС", Реквизиты.НалогообложениеНДС);
	Запрос.УстановитьПараметр("НовоеНалогообложениеНДС", Реквизиты.НовоеНалогообложениеНДС);
	Запрос.УстановитьПараметр("ДокументПоступления", Реквизиты.ДокументПоступления);
	Запрос.УстановитьПараметр("СохранятьВидЗапасов",      Реквизиты.СохранятьВидЗапасов);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПеремещениеТоваров);
	Запрос.УстановитьПараметр("ИспользуетсяНазначение", Константы.УчитыватьСебестоимостьТоваровПоВидамЗапасов.Получить());
	Запрос.УстановитьПараметр("ИспользуютсяВидыЗапасов", Константы.УчитыватьСебестоимостьТоваровПоВидамЗапасов.Получить());
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
КонецПроцедуры

Функция ИнициализироватьВидыЗапасов(Реквизиты)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.ВидЗапасов,
	|	ДД.КорВидЗапасов
	|ПОМЕСТИТЬ КорВидыЗапасов
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ДД
	|ГДЕ
	|	ДД.Регистратор = &Ссылка
	|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДД.Активность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Комитент КАК Комитент,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Соглашение КАК Соглашение,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Валюта КАК Валюта,
	|	&НалогообложениеОрганизации КАК НалогообложениеОрганизации,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Поставщик КАК Поставщик,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СохранятьВидЗапасов 
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов.НалогообложениеНДС
	|		ИНАЧЕ ДанныеДокумента.НовоеНалогообложениеНДС
	|	КОНЕЦ КАК НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Менеджер КАК Менеджер,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Сделка КАК Сделка,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|
	|	ТаблицаВидыЗапасов.ВидЗапасов.Подразделение.ВариантОбособленногоУчетаТоваров КАК ВариантОбособленногоУчетаТоваров,
	|
	|	ЕСТЬNULL(ТаблицаВидыЗапасов.ВидЗапасов.Сделка.ОбособленныйУчетТоваровПоСделке, ЛОЖЬ) КАК ОбособленныйУчетТоваровПоСделке,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ЕСТЬNULL(КорВидыЗапасов.КорВидЗапасов, НЕОПРЕДЕЛЕНО) КАК СохраняемыйВидЗапасов,
	|	ДанныеДокумента.СохранятьВидЗапасов КАК СохранятьВидЗапасов
	|ИЗ
	|	Документ.КорректировкаВидаДеятельностиНДС.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаВидаДеятельностиНДС КАК ДанныеДокумента
	|	ПО
	|		&Ссылка = ДанныеДокумента.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ КорВидыЗапасов КАК КорВидыЗапасов
	|		ПО КорВидыЗапасов.ВидЗапасов = ТаблицаВидыЗапасов.ВидЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|";
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("НалогообложениеОрганизации",
		Справочники.Организации.НалогообложениеНДС(Реквизиты.Организация, Неопределено, Реквизиты.Период));
	
	СоответствиеВидовЗапасов = Новый ТаблицаЗначений;
	СоответствиеВидовЗапасов.Колонки.Добавить("ВидЗапасов", 	 Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов")); 
	СоответствиеВидовЗапасов.Колонки.Добавить("НовыйВидЗапасов", Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов")); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = СоответствиеВидовЗапасов.Добавить();
		НоваяСтрока.ВидЗапасов 		= Выборка.ВидЗапасов;
		
		Если Выборка.СохранятьВидЗапасов Тогда
			НоваяСтрока.НовыйВидЗапасов = НоваяСтрока.ВидЗапасов;
		Иначе
			НовыйВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(Выборка.Организация, Выборка.ХозяйственнаяОперация, Выборка);
			НоваяСтрока.НовыйВидЗапасов = НовыйВидЗапасов;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СоответствиеВидовЗапасов;

КонецФункции

Функция ТекстЗапросаТаблицаВтСоответствиеВидовЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтСоответствиеВидовЗапасов"; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СоответствиеВидовЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	СоответствиеВидовЗапасов.НовыйВидЗапасов КАК НовыйВидЗапасов
	|ПОМЕСТИТЬ ВтСоответствиеВидовЗапасов
	|ИЗ
	|	&СоответствиеВидовЗапасов КАК СоответствиеВидовЗапасов
	|";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	СоответствиеВидовЗапасов = ИнициализироватьВидыЗапасов(Запрос.Параметры);
	Запрос.УстановитьПараметр("СоответствиеВидовЗапасов", СоответствиеВидовЗапасов);
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаВтВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасов"; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                КАК НомерСтроки,
	|	Аналитика.Номенклатура                        КАК Номенклатура,
	|	Аналитика.Характеристика                      КАК Характеристика,
	|	Аналитика.Серия                               КАК Серия,
	|	Аналитика.Назначение                          КАК Назначение,
	|	Аналитика.Склад.ЦеховаяКладовая               КАК ЦеховаяКладовая,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	КлючиБезНазначения.КлючАналитики              КАК АналитикаУчетаНоменклатурыБезНазначения,
	|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД                   КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                 КАК Количество
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.КорректировкаВидаДеятельностиНДС.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиБезНазначения
	|	ПО КлючиБезНазначения.Номенклатура = Аналитика.Номенклатура
	|		И КлючиБезНазначения.Характеристика = Аналитика.Характеристика
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = КлючиБезНазначения.СтатьяКалькуляции
	//-- НЕ УТ
	|		И КлючиБезНазначения.Серия = Аналитика.Серия
	|		И КлючиБезНазначения.Склад = Аналитика.Склад
	|		И КлючиБезНазначения.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтСоответствиеВидовЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтСоответствиеВидовЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	&Склад КАК Склад,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВтСоответствиеВидовЗапасов.НовыйВидЗапасов КАК КорВидЗапасов,
	|	&НовоеНалогообложениеНДС КАК НалогообложениеНДС,
	|	&ДокументПоступления КАК ДокументРеализации
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСоответствиеВидовЗапасов КАК ВтСоответствиеВидовЗапасов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = ВтСоответствиеВидовЗапасов.ВидЗапасов
	|ГДЕ
	|	НЕ &ПартионныйУчетВерсии22
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ТаблицаВидыЗапасов.НомерСтроки,
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Организация,
	|	НЕОПРЕДЕЛЕНО,
	|	&Склад,
	|	ТаблицаВидыЗапасов.Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика,
	|	ВтСоответствиеВидовЗапасов.НовыйВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	ТаблицаВидыЗапасов.Количество,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК КорВидЗапасов,
	|	&НалогообложениеНДС КАК НалогообложениеНДС,
	|	&ДокументПоступления КАК ДокументРеализации
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСоответствиеВидовЗапасов КАК ВтСоответствиеВидовЗапасов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = ВтСоответствиеВидовЗапасов.ВидЗапасов
	|ГДЕ
	|	НЕ &ПартионныйУчетВерсии22
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	Порядок
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтСоответствиеВидовЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтСоответствиеВидовЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоступленияТоваров.ДатаПоступления КАК ДатаПоступления,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.Серия КАК Серия,
	|	ТаблицаВидыЗапасов.Назначение КАК Назначение,
	|	ВтСоответствиеВидовЗапасов.НовыйВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтСоответствиеВидовЗапасов КАК ВтСоответствиеВидовЗапасов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = ВтСоответствиеВидовЗапасов.ВидЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = ПоступленияТоваров.ВидЗапасов
	|		И ТаблицаВидыЗапасов.Номенклатура = ПоступленияТоваров.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = ПоступленияТоваров.Характеристика
	|		И ТаблицаВидыЗапасов.Серия = ПоступленияТоваров.Серия
	|		И ТаблицаВидыЗапасов.Назначение = ПоступленияТоваров.Назначение
	|		И ТаблицаВидыЗапасов.НомерГТД = ПоступленияТоваров.НомерГТД
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваровПолучатель
	|	ПО
	|		ВтСоответствиеВидовЗапасов.НовыйВидЗапасов = ПоступленияТоваровПолучатель.ВидЗапасов
	|		И ТаблицаВидыЗапасов.Номенклатура = ПоступленияТоваровПолучатель.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = ПоступленияТоваровПолучатель.Характеристика
	|		И ТаблицаВидыЗапасов.Серия = ПоступленияТоваровПолучатель.Серия
	|		И ТаблицаВидыЗапасов.Назначение = ПоступленияТоваровПолучатель.Назначение
	|		И ТаблицаВидыЗапасов.НомерГТД = ПоступленияТоваровПолучатель.НомерГТД
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.Номенклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (ПоступленияТоваровПолучатель.ДатаПоступления ЕСТЬ NULL
	|		ИЛИ ПоступленияТоваровПолучатель.ДатаПоступления < &Период)
	|	И НЕ &ПартионныйУчетВерсии22
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаВидыЗапасов.Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика,
	|	ТаблицаВидыЗапасов.Серия,
	|	ТаблицаВидыЗапасов.Назначение,
	|	ТаблицаВидыЗапасов.НомерГТД
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры) Экспорт
		
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтСоответствиеВидовЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтСоответствиеВидовЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСерверУТ.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ КАК РазделУчета,
	|	ВЫБОР КОГДА &ИспользуютсяВидыЗапасов
	|		ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА &НалогообложениеНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 												 КАК ВидДеятельностиНДС,
	|   &НовоеНалогообложениеНДС 							 КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) КАК ТипЗаписи,
	|
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ КАК КорРазделУчета,
	|	ВЫБОР КОГДА &ИспользуютсяВидыЗапасов ТОГДА
	|		ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|			ИНАЧЕ ВтСоответствиеВидовЗапасов.НовыйВидЗапасов
	|		КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорВидЗапасов,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено КАК АналитикаУчетаПоПартнерам,
	|	Неопределено КАК Подразделение
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСоответствиеВидовЗапасов КАК ВтСоответствиеВидовЗапасов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = ВтСоответствиеВидовЗапасов.ВидЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И НЕ &СохранятьВидЗапасов
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВЫБОР КОГДА &ИспользуетсяНазначение
	|		ТОГДА ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ЦеховаяКладовая
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ КАК РазделУчета,
	|	ВЫБОР КОГДА &ИспользуютсяВидыЗапасов ТОГДА
	|		ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|			ИНАЧЕ ВтСоответствиеВидовЗапасов.НовыйВидЗапасов
	|		КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|
	//	партионный учет версии 2.2
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22
	|		ТОГДА &НовоеНалогообложениеНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 												 КАК ВидДеятельностиНДС,
	|   НЕОПРЕДЕЛЕНО 										 КАК КорВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение) КАК ТипЗаписи,
	|
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|   НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСоответствиеВидовЗапасов КАК ВтСоответствиеВидовЗапасов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = ВтСоответствиеВидовЗапасов.ВидЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И НЕ &СохранятьВидЗапасов
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

#КонецОбласти


#Область ОбновлениеИнформационнойБазы

//++ НЕ УТ

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокРегистраторов = ДокументыКОбработке().Выполнить().Выгрузить().ВыгрузитьКолонку("ДокументПоступления");
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, СписокРегистраторов, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолныеИменаДокументов = Новый Массив;
	ПолныеИменаДокументов.Добавить("Документ.ПоступлениеТоваровУслуг");
	ПолныеИменаДокументов.Добавить("Документ.ПередачаТоваровМеждуОрганизациями");
	
	ДанныеДокументов = ДокументыКОбработке().Выполнить().Выгрузить();

	Для Каждого ПолноеИмяДокумента Из ПолныеИменаДокументов Цикл
		
		ВыборкаПоРегистраторам = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяДокумента);
		
		Пока ВыборкаПоРегистраторам.Следующий() Цикл
			
			НачатьТранзакцию();
			
			Попытка
				
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента);
				ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПоРегистраторам.Ссылка);
				Блокировка.Заблокировать();
			
				Строки = ДанныеДокументов.НайтиСтроки(Новый Структура("ДокументПоступления", ВыборкаПоРегистраторам.Ссылка));
				
				Если Строки.Количество() > 0 Тогда
					
					#Область ФормированиеДокумента
						
					ДанныеДокументаОснования = Строки[0];
					
					ДокОбъект = Документы.КорректировкаВидаДеятельностиНДС.СоздатьДокумент();
					
					ДокОбъект.Организация 				= ДанныеДокументаОснования.Организация;
					ДокОбъект.Склад 					= ДанныеДокументаОснования.Склад;
					ДокОбъект.НалогообложениеНДС		= ДанныеДокументаОснования.ЗакупкаПодДеятельность;
					ДокОбъект.ДокументПоступления		= ДанныеДокументаОснования.ДокументПоступления;
					ДокОбъект.НовоеНалогообложениеНДС	= Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию;
					ДокОбъект.ВидыЗапасовУказаныВручную = Истина;
					ДокОбъект.СохранятьВидЗапасов		= Истина;
					
					Если ДанныеДокументаОснования.Дата = КонецМесяца(ДанныеДокументаОснования.Дата) Тогда 
						ДокОбъект.Дата = ДанныеДокументаОснования.Дата;
					Иначе
						ДокОбъект.Дата = ДанныеДокументаОснования.Дата + 1;
					КонецЕсли;
					
					ДокОбъект.УстановитьНовыйНомер();
					
					Для каждого Строка Из Строки Цикл
						
						НоваяСтрокаТовары = ДокОбъект.Товары.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, Строка);
						
						НоваяСтрокаВидыЗапасов = ДокОбъект.ВидыЗапасов.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаВидыЗапасов, Строка);
					
					КонецЦикла;
					
					ДокОбъект.Проведен = Истина;
					ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокОбъект);
					
					#КонецОбласти 
					
					#Область ДвиженияДокумента
					
					ДополнительныеСвойства = Новый Структура;
					ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(ДокОбъект.Ссылка, ДополнительныеСвойства);
					ДополнительныеСвойства.Удалить("ДляПроведения");
					Документы.КорректировкаВидаДеятельностиНДС.ИнициализироватьДанныеДокумента(ДокОбъект.Ссылка, ДополнительныеСвойства, "ТоварыОрганизаций");
					НаборЗаписей = РегистрыНакопления.ТоварыОрганизаций.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Регистратор.Установить(ДокОбъект.Ссылка);
					НаборЗаписей.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыОрганизаций);
					ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
					
					Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
								ДанныеДокументаОснования.Валюта, ДанныеДокументаОснования.ВалютаВзаиморасчетов, ДанныеДокументаОснования.Дата);
					
					ВыборкаНДСПредъявленный = ЗапросНДСПредъявленный(ВыборкаПоРегистраторам.Ссылка, ДокОбъект.Ссылка, Коэффициенты.КоэффициентПересчетаВВалютуРегл);
					НаборЗаписей = РегистрыНакопления.НДСПредъявленный.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Регистратор.Установить(ДокОбъект.Ссылка);
					
					Пока ВыборкаНДСПредъявленный.Следующий() Цикл
						
						ЗаписьРасход = НаборЗаписей.ДобавитьРасход();
						ЗаписьРасход.Период = ДокОбъект.Дата;
						ЗаписьРасход.Регистратор = ДокОбъект.Ссылка;
						ЗаполнитьЗначенияСвойств(ЗаписьРасход, ВыборкаНДСПредъявленный);
						ЗаписьРасход.ВидЦенности = Перечисления.ВидыЦенностей.Товары;
						ЗаписьРасход.ВидДеятельностиНДС = ДокОбъект.НалогообложениеНДС;
						ЗаписьРасход.РегламентнаяОперация = Истина;
						ЗаписьРасход.КорВидДеятельностиНДС = ДокОбъект.НовоеНалогообложениеНДС;
						ЗаписьРасход.Событие = Перечисления.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС;
						
						ЗаписьПриход = НаборЗаписей.ДобавитьПриход();
						ЗаписьПриход.Период = ДокОбъект.Дата;
						ЗаписьПриход.Регистратор = ДокОбъект.Ссылка;
						ЗаполнитьЗначенияСвойств(ЗаписьПриход, ВыборкаНДСПредъявленный);
						ЗаписьПриход.ВидЦенности = Перечисления.ВидыЦенностей.Товары;
						ЗаписьПриход.ВидДеятельностиНДС = ДокОбъект.НовоеНалогообложениеНДС;
						ЗаписьПриход.РегламентнаяОперация = Истина;
						ЗаписьПриход.КорВидДеятельностиНДС = ДокОбъект.НалогообложениеНДС;
						ЗаписьПриход.Событие = Перечисления.СобытияНДСПредъявленный.ИзменениеВидаДеятельностиНДС;
						
					КонецЦикла;
					ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
					
					#КонецОбласти 
					
				КонецЕсли; 
				
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ВыборкаПоРегистраторам.Ссылка);
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				
				ТекстСообщения = НСтр("ru = 'Не удалось сформировать документ %ИмяДокумента% на основании %Ссылка% по причине: %Причина%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ВыборкаПоРегистраторам.Ссылка);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяДокумента%", ПолноеИмяДокумента);
				
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.НайтиПоПолномуИмени(ВыборкаПоРегистраторам.Ссылка.Метаданные().ПолноеИмя()), ВыборкаПоРегистраторам.Ссылка, ТекстСообщения);
				
				ВызватьИсключение;
				
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = НЕ ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолныеИменаДокументов);
	
КонецПроцедуры

Функция ДокументыКОбработке()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	// 4D:ERP для Беларуси, Яна, 04.08.2017 15:26:22 
	// Проверить первый запуск, № 15650 
	// {
	"ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация,
	|	КлючиАналитикиУчетаНоменклатуры.Склад,
	|	ТоварыОрганизаций.Регистратор КАК ДокументПоступления,
	|	ВидыЗапасов.УдалитьНазначение КАК Назначение,
	|	ВидыЗапасов.Поставщик,
	|	ВидыЗапасов.НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ВидыЗапасовПоГФУ.Значение
	|			ТОГДА ВидыЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ СпрНоменклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика,
	|	КлючиАналитикиУчетаНоменклатуры.Серия,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.Количество,
	|	ТоварыОрганизаций.Период
	|ПОМЕСТИТЬ ВТ_Документы
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО (ВидыЗапасов.Ссылка = ТоварыОрганизаций.ВидЗапасов)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|			ПО КлючиАналитикиУчетаНоменклатуры.Номенклатура = СпрНоменклатура.Ссылка
	|		ПО (КлючиАналитикиУчетаНоменклатуры.Ссылка = ТоварыОрганизаций.АналитикаУчетаНоменклатуры)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета КАК ВидыЗапасовПоГФУ
	|		ПО (ИСТИНА)
	|ГДЕ
	|	(ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|			ИЛИ ТоварыОрганизаций.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Документы.Период КАК Дата,
	|	ВТ_Документы.Организация,
	|	ВТ_Документы.ДокументПоступления КАК ДокументПоступления,
	|	ВТ_Документы.Склад,
	|	ВТ_Документы.НалогообложениеНДС,
	|	ВТ_Документы.Поставщик,
	|	ВТ_Документы.ГруппаФинансовогоУчета,
	|	ВТ_Документы.Номенклатура,
	|	ВТ_Документы.Характеристика,
	|	ВТ_Документы.Серия,
	|	ВТ_Документы.ВидЗапасов,
	|	ВТ_Документы.АналитикаУчетаНоменклатуры,
	|	ВТ_Документы.Количество,
	|	ВЫБОР
	|		КОГДА ВТ_Документы.ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|			ТОГДА ПоступлениеТоваровУслуг.Валюта
	|		КОГДА ВТ_Документы.ДокументПоступления ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.Валюта
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА ВТ_Документы.ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|			ТОГДА ПоступлениеТоваровУслуг.ВалютаВзаиморасчетов
	|		КОГДА ВТ_Документы.ДокументПоступления ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.ВалютаВзаиморасчетов
	|	КОНЕЦ КАК ВалютаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА ВТ_Документы.ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|			ТОГДА ПоступлениеТоваровУслуг.ЗакупкаПодДеятельность
	|		КОГДА ВТ_Документы.ДокументПоступления ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|			ТОГДА ПередачаТоваровМеждуОрганизациями.ПередачаПодДеятельность
	|	КОНЕЦ КАК ЗакупкаПодДеятельность
	|ИЗ
	|	ВТ_Документы КАК ВТ_Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНоменклатуры КАК ПорядокОтраженияНоменклатуры
	|		ПО (ПорядокОтраженияНоменклатуры.Организация = ВТ_Документы.Организация)
	|			И (ПорядокОтраженияНоменклатуры.Склад = ВТ_Документы.Склад)
	|			И (ПорядокОтраженияНоменклатуры.ГруппаФинансовогоУчета = ВТ_Документы.ГруппаФинансовогоУчета)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГруппыФинансовогоУчетаНоменклатуры
	|		ПО (ГруппыФинансовогоУчетаНоменклатуры.Ссылка = ВТ_Документы.ГруппаФинансовогоУчета)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаВидаДеятельностиНДС КАК КорректировкаНДС
	|		ПО (КорректировкаНДС.Проведен)
	|			И (КорректировкаНДС.ДокументПоступления = ВТ_Документы.ДокументПоступления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ПО ВТ_Документы.ДокументПоступления = ПоступлениеТоваровУслуг.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваровМеждуОрганизациями
	|		ПО ВТ_Документы.ДокументПоступления = ПередачаТоваровМеждуОрганизациями.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(ПорядокОтраженияНоменклатуры.СчетУчетаНаСкладе, ГруппыФинансовогоУчетаНоменклатуры.СчетУчетаНаСкладе)
	|										= ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеОбъектовОсновныхСредств)
	|	И КорректировкаНДС.Ссылка ЕСТЬ NULL ";
	// }
	// 4D

	Возврат Запрос;

КонецФункции

Функция ЗапросНДСПредъявленный(ДокументПоступления, КорректировкаВидДеятельностиНДС, КоэффициентПересчетаВВалютуРегл)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Операция.Организация КАК Организация,
	|	ТаблицаТовары.Ссылка КАК СчетФактура,
	|	Операция.Контрагент  КАК Поставщик,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл, ВЫБОР
	|			КОГДА Операция.ВалютаВзаиморасчетов = ВалютаРегламентированногоУчета.Значение
	|					И Операция.Валюта <> Операция.ВалютаВзаиморасчетов
	|				ТОГДА ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) КАК СуммаБезНДС,
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл, ВЫБОР
	|			КОГДА Операция.ВалютаВзаиморасчетов = ВалютаРегламентированногоУчета.Значение
	|					И Операция.Валюта <> Операция.ВалютаВзаиморасчетов
	|				ТОГДА ТаблицаТовары.СуммаВзаиморасчетов
	|			ИНАЧЕ ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) КАК НДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|		ПО ТаблицаТовары.Ссылка = Суммы.Регистратор
	|			И ТаблицаТовары.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|			И (Суммы.СуммаБезНДСРегл <> 0)
	|			И (ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС = Суммы.СуммаБезНДС)
	|			И ТаблицаТовары.СуммаНДС = Суммы.СуммаНДС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК Операция
	|		ПО ТаблицаТовары.Ссылка = Операция.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаВидаДеятельностиНДС.Товары КАК КорректировкаВидаДеятельностиНДСТовары
	|		ПО ТаблицаТовары.АналитикаУчетаНоменклатуры = КорректировкаВидаДеятельностиНДСТовары.АналитикаУчетаНоменклатуры,
	|	Константа.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументПоступления
	|	И КорректировкаВидаДеятельностиНДСТовары.Ссылка = &КорректировкаВидДеятельностиНДС";
	
	Если ТипЗнч(ДокументПоступления) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПоступлениеТоваровУслуг", "ПередачаТоваровМеждуОрганизациями");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокументПоступления", ДокументПоступления);
	Запрос.УстановитьПараметр("КорректировкаВидДеятельностиНДС", КорректировкаВидДеятельностиНДС);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", КоэффициентПересчетаВВалютуРегл);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

//-- НЕ УТ

#КонецОбласти

#КонецОбласти

#КонецЕсли
