#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт


	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);


КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.РаспределениеДоходовИРасходовПоНаправлениямДеятельности) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.РаспределениеДоходовИРасходовПоНаправлениямДеятельности.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.РаспределениеДоходовИРасходовПоНаправлениямДеятельности);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ФормироватьФинансовыйРезультат";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры


// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры

// Создает документы распределения за указанный месяц
//	
//	Параметры:
//		Период - Дата - Начало месяца, за который необходимо создать документы.
//		Организация - Массив, Неопределено - Список организаций по которым формируются документы. Если список пустой,
//												то документы формируются по всем организациям.
//		Отказ - Булево - Используется при вызове из формы закрытия месяца. При установке в "Истина" - дальнейшие операции
//							выполняться не будут.
Процедура СоздатьДокументыЗаПериод(Период, Организация = Неопределено, Отказ = Ложь) Экспорт
	
	ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(НСтр("ru='Распределение доходов и расходов по направлениям деятельности'"));
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеСправочника.Ссылка КАК Организация
	|ПОМЕСТИТЬ ВТОрганизации
	|ИЗ
	|	Справочник.Организации КАК ДанныеСправочника
	|ГДЕ
	|	(ДанныеСправочника.Ссылка = &Организация
	|		ИЛИ &ПоВсемОрганизациям)
	|	И (ДанныеСправочника.Ссылка <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|		ИЛИ &УчитыватьУпрОрганизацию)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Док.Ссылка КАК Ссылка,
	|	Док.Организация КАК Организация
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности КАК Док
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОрганизации КАК ВТОрганизации
	|	ПО Док.Организация = ВТОрганизации.Организация
	|ГДЕ
	|	Док.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И Док.ПометкаУдаления = ЛОЖЬ
	|	И Док.РаспределениеПоВсемОрганизациям = ЛОЖЬ
	|	И
	|	(Док.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|		ИЛИ &УчитыватьУпрОрганизацию)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОрганизации.Организация КАК Организация,
	|	ВТДокументы.Ссылка КАК Документ
	|ИЗ
	|	ВТОрганизации КАК ВТОрганизации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументы КАК ВТДокументы
	|	ПО ВТОрганизации.Организация = ВТДокументы.Организация
	|");

	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", (Организация = Неопределено ИЛИ Организация = Справочники.Организации.ПустаяСсылка()));
	Запрос.УстановитьПараметр("УчитыватьУпрОрганизацию", ПолучитьФункциональнуюОпцию("ИспользоватьУправленческуюОрганизацию"));
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		Если Результат.Документ = Null Тогда
			ДокументРаспределения = Документы.РаспределениеДоходовИРасходовПоНаправлениямДеятельности.СоздатьДокумент();
			ДокументРаспределения.Дата = КонецМесяца(Период);
			ДокументРаспределения.РаспределениеПоВсемОрганизациям 	= Ложь;
			ДокументРаспределения.Организация = Результат.Организация;
			ДокументРаспределения.Ответственный = Пользователи.ТекущийПользователь();
		Иначе
			ДокументРаспределения = Результат.Документ.ПолучитьОбъект();
		КонецЕсли;
		Если ДокументРаспределения.Проведен Тогда
			Попытка 
				ДокументРаспределения.Записать(РежимЗаписиДокумента.ОтменаПроведения)
			Исключение
				Отказ = Истина;
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Распределение доходов и насходов по направлениям деятельности'",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
					УровеньЖурналаРегистрации.Ошибка,,,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				Возврат;
			КонецПопытки;
		КонецЕсли;
		ДокументРаспределения.ДополнительныеСвойства.Вставить("ВыводитьСообщенияВЖурналРегистрации",Истина);
		ДокументРаспределения.ЗаполнитьРасходыПоОстаткам();
		ДокументРаспределения.ЗаполнитьДоходыПоОстаткам();
		ДокументРаспределения.Записать(РежимЗаписиДокумента.Запись);
		Если ДокументРаспределения.ПроверитьЗаполнение() Тогда
			Попытка
				ДокументРаспределения.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				Отказ = Истина;
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Распределение доходов и насходов по направлениям деятельности'",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
					УровеньЖурналаРегистрации.Ошибка,,,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаФинансовыеРезультаты(Запрос, ТекстыЗапроса, Регистры, ДополнительныеСвойства);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры, ДополнительныеСвойства);
	ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры, ДополнительныеСвойства);
	
	////////////////////////////////////////////////////////////////////////////
	// Поместим результаты запроса в дополнительные свойства
	
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.РаспределениеПоВсемОрганизациям КАК РаспределениеПоВсемОрганизациям
	|ИЗ
	|	Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";

	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("РаспределениеПоВсемОрганизациям", Реквизиты.РаспределениеПоВсемОрганизациям);
	Запрос.УстановитьПараметр("НачГраница", Новый Граница(НачалоМесяца(Реквизиты.Период), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонГраница", Новый Граница(КонецМесяца(Реквизиты.Период), ВидГраницы.Включая));
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры)
		
	ИмяРегистра = "ПрочиеДоходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаДоходы.Организация              КАК Организация,
	|	ТаблицаДоходы.Подразделение            КАК Подразделение,
	|	ТаблицаДоходы.НаправлениеДеятельности  КАК НаправлениеДеятельности,
	|	ТаблицаДоходы.СтатьяДоходов            КАК СтатьяДоходов,
	|	ТаблицаДоходы.АналитикаДоходов         КАК АналитикаДоходов,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеДоходовПоНаправлениямДеятельности) КАК ХозяйственнаяОперация,
	|	ТаблицаДоходы.Сумма                    КАК Сумма
	|ИЗ
	|	Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности.Доходы КАК ТаблицаДоходы
	|ГДЕ
	|	ТаблицаДоходы.Ссылка = &Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаДоходы.НомерСтроки
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасходы.НомерСтроки             КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаРасходы.Организация             КАК Организация,
	|	ТаблицаРасходы.Подразделение           КАК Подразделение,
	|	ТаблицаРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаРасходы.СтатьяРасходов          КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов       КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРасходовПоНаправлениямДеятельности) КАК ХозяйственнаяОперация,
	|	ТаблицаРасходы.Сумма                   КАК Сумма
	|ИЗ
	|	Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности.Расходы КАК ТаблицаРасходы
	|ГДЕ
	|	ТаблицаРасходы.Ссылка = &Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаФинансовыеРезультаты(Запрос, ТекстыЗапроса, Регистры, ДополнительныеСвойства = Неопределено)
	
	ИмяРегистра = "ФинансовыеРезультаты";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ДополнительныеСвойства = Неопределено Тогда
		 ДополнительныеСвойства = Новый Структура();
	КонецЕсли;
	
	РезультатРаспределенияПоБазе(Запрос, ДополнительныеСвойства);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Таблица.Период                  КАК Период,
	|	Таблица.Регистратор             КАК Регистратор,
	|	Таблица.НомерСтроки             КАК НомерСтроки,
	|	Таблица.Организация             КАК Организация,
	|	Таблица.Подразделение           КАК Подразделение,
	|	Таблица.НаправлениеДеятельностиПолучатель КАК НаправлениеДеятельности,
	|	Таблица.СтатьяДоходов           КАК СтатьяДоходов,
	|	Таблица.СтатьяРасходов          КАК СтатьяРасходов,
	|	СУММА(Таблица.Доходы)           КАК Доходы,
	|	СУММА(Таблица.Расходы)          КАК Расходы,
	|	Таблица.СпособРаспределения     КАК СпособРаспределения
	|ИЗ
	|	ВТФинансовыеРезультаты КАК Таблица
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Период,
	|	Таблица.Регистратор,
	|	Таблица.НомерСтроки,
	|	Таблица.Организация,
	|	Таблица.Подразделение,
	|	Таблица.НаправлениеДеятельностиПолучатель,
	|	Таблица.СтатьяДоходов,
	|	Таблица.СтатьяРасходов,
	|	Таблица.СпособРаспределения";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаДоходыРасходыКРаспределению()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                             КАК Период,
	|	ТаблицаДоходы.Организация           КАК Организация,
	|	ТаблицаДоходы.Подразделение         КАК Подразделение,
	|	ТаблицаДоходы.СтатьяДоходов         КАК СтатьяДоходов,
	|	ТаблицаДоходы.АналитикаДоходов      КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                        КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                        КАК АналитикаРасходов,
	|	(ВЫБОР
	|		КОГДА ТаблицаДоходы.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияПоНаправлениямДеятельности.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаДоходы.СпособРаспределения КОНЕЦ) КАК СпособРаспределения,
	|
	|	(ВЫБОР
	|		КОГДА ТаблицаДоходы.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ТаблицаДоходы.НаправлениеДеятельности
	|		КОГДА ТаблицаДоходы.АналитикаДоходов ССЫЛКА Справочник.НаправленияДеятельности
	|			ТОГДА ТаблицаДоходы.АналитикаДоходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КОНЕЦ) КАК НаправлениеДеятельности,
	|
	|	МАКСИМУМ(ТаблицаДоходы.НомерСтроки) КАК НомерСтроки,
	|	СУММА(ТаблицаДоходы.Сумма)          КАК Доходы,
	|	0                                   КАК Расходы
	|ИЗ
	|	Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности.Доходы КАК ТаблицаДоходы
	|ГДЕ
	|	ТаблицаДоходы.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДоходы.Организация,
	|	ТаблицаДоходы.Подразделение,
	|	ТаблицаДоходы.СтатьяДоходов,
	|	ТаблицаДоходы.АналитикаДоходов,
	|	(ВЫБОР
	|		КОГДА ТаблицаДоходы.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияПоНаправлениямДеятельности.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаДоходы.СпособРаспределения КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА ТаблицаДоходы.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ТаблицаДоходы.НаправлениеДеятельности
	|		КОГДА ТаблицаДоходы.АналитикаДоходов ССЫЛКА Справочник.НаправленияДеятельности
	|			ТОГДА ТаблицаДоходы.АналитикаДоходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КОНЕЦ)
	|
 	|ОБЪЕДИНИТЬ ВСЕ
 	|
	|ВЫБРАТЬ
	|	&Период                              КАК Период,
	|	ТаблицаРасходы.Организация           КАК Организация,
	|	ТаблицаРасходы.Подразделение         КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                         КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО                         КАК АналитикаДоходов,
	|	ТаблицаРасходы.СтатьяРасходов        КАК СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов     КАК АналитикаРасходов,
	|	(ВЫБОР
	|		КОГДА ТаблицаРасходы.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияПоНаправлениямДеятельности.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаРасходы.СпособРаспределения КОНЕЦ) КАК СпособРаспределения,
	|
	|	(ВЫБОР
	|		КОГДА ТаблицаРасходы.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ТаблицаРасходы.НаправлениеДеятельности
	|		КОГДА ТаблицаРасходы.АналитикаРасходов ССЫЛКА Справочник.НаправленияДеятельности
	|			ТОГДА ТаблицаРасходы.АналитикаРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КОНЕЦ) КАК НаправлениеДеятельности,
	|
	|	МАКСИМУМ(ТаблицаРасходы.НомерСтроки) КАК НомерСтроки,
	|	0                                    КАК Доходы,
	|	СУММА(ТаблицаРасходы.Сумма)          КАК Расходы
	|ИЗ
	|	Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности.Расходы КАК ТаблицаРасходы
	|ГДЕ
	|	ТаблицаРасходы.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасходы.Организация,
	|	ТаблицаРасходы.Подразделение,
	|	ТаблицаРасходы.СтатьяРасходов,
	|	ТаблицаРасходы.АналитикаРасходов,
	|	(ВЫБОР
	|		КОГДА ТаблицаРасходы.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СпособыРаспределенияПоНаправлениямДеятельности.ПустаяСсылка)
	|		ИНАЧЕ ТаблицаРасходы.СпособРаспределения КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА ТаблицаРасходы.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			ТОГДА ТаблицаРасходы.НаправлениеДеятельности
	|		КОГДА ТаблицаРасходы.АналитикаРасходов ССЫЛКА Справочник.НаправленияДеятельности
	|			ТОГДА ТаблицаРасходы.АналитикаРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КОНЕЦ)
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Подразделение,
	|	СпособРаспределения,
	|	СтатьяДоходов,
	|	АналитикаДоходов,
	|	СтатьяРасходов,
	|	АналитикаРасходов
	|;
	|///////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаСпособовРаспределения()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация                              КАК Организация,
	|	ДанныеДокумента.СпособРаспределения                      КАК СпособРаспределения,
	|	ДанныеДокумента.СпособРаспределения.ПравилоРаспределения КАК ПравилоРаспределения,
	|	ВЫБОР КОГДА ДанныеДокумента.СпособРаспределения.ПравилоРаспределения <>
	|		ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияПоНаправлениямДеятельности.ПропорциональноКоэффициентам)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СпособРасчетаАвтоматически,
	|	ЕСТЬNULL(НаправленияДеятельности.НаправлениеДеятельности, Неопределено) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(НаправленияДеятельности.Коэффициент, 1) КАК Коэффициент
	|	
	|ПОМЕСТИТЬ ТаблицаСпособовРаспределения
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаДоходы.Организация КАК Организация,
	|		ТаблицаДоходы.СпособРаспределения КАК СпособРаспределения
	|	ИЗ
	|		Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности.Доходы КАК ТаблицаДоходы
	|	ГДЕ
	|		ТаблицаДоходы.Ссылка = &Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТаблицаРасходы.Организация КАК Организация,
	|		ТаблицаРасходы.СпособРаспределения КАК СпособРаспределения
	|	ИЗ
	|		Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности.Расходы КАК ТаблицаРасходы
	|	ГДЕ
	|		ТаблицаРасходы.Ссылка = &Ссылка
	|	) КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыРаспределенияПоНаправлениямДеятельности.НаправленияДеятельности КАК НаправленияДеятельности
	|	ПО ДанныеДокумента.СпособРаспределения = НаправленияДеятельности.Ссылка
	|;
	|///////////////////////////////////////////////////////////
	|";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаБазыРаспределения()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаСпособовРаспределения.Организация КАК Организация,
	|	ТаблицаСпособовРаспределения.СпособРаспределения КАК СпособРаспределения,
	|	ЕСТЬNULL(
	|		ФинансовыеРезультаты.НаправлениеДеятельности,
	|		ТаблицаСпособовРаспределения.НаправлениеДеятельности) КАК НаправлениеДеятельности,
	|
	|	СУММА(
	|		ВЫБОР КОГДА ТаблицаСпособовРаспределения.ПравилоРаспределения =
	|			ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияПоНаправлениямДеятельности.ПропорциональноКоэффициентам)
	|		ТОГДА
	|			ТаблицаСпособовРаспределения.Коэффициент
	|
	|		КОГДА ТаблицаСпособовРаспределения.ПравилоРаспределения =
	|			ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияПоНаправлениямДеятельности.ПропорциональноДоходам)
	|		ТОГДА
	|			ЕСТЬNULL(ФинансовыеРезультаты.ДоходыОборот, 0)
	|		
	|		КОГДА ТаблицаСпособовРаспределения.ПравилоРаспределения =
	|			ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияПоНаправлениямДеятельности.ПропорциональноРасходам)
	|		ТОГДА
	|			ЕСТЬNULL(ФинансовыеРезультаты.РасходыОборот, 0)
	|		
	|		ИНАЧЕ
	|			ЕСТЬNULL(ФинансовыеРезультаты.ДоходыОборот - ФинансовыеРезультаты.РасходыОборот, 0)
	|		
	|		КОНЕЦ
	|	) КАК База
	|ИЗ
	|	ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения
	| 	
	| 	ЛЕВОЕ СОЕДИНЕНИЕ
	|
	|		(ВЫБРАТЬ
	|			ФинансовыеРезультаты.НаправлениеДеятельности,
	|			СУММА(ФинансовыеРезультаты.Доходы) КАК ДоходыОборот,
	|			СУММА(ФинансовыеРезультаты.Расходы) КАК РасходыОборот
	|		ИЗ
	|			РегистрНакопления.ФинансовыеРезультаты КАК ФинансовыеРезультаты
	|		ГДЕ
	|			ФинансовыеРезультаты.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ)
	|			И ФинансовыеРезультаты.Активность
	|			И ФинансовыеРезультаты.Организация В
	|				(ВЫБРАТЬ
	|						ТаблицаСпособовРаспределения.Организация
	|					ИЗ
	|						ТаблицаСпособовРаспределения КАК ТаблицаСпособовРаспределения)
	|			И (ФинансовыеРезультаты.СтатьяДоходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ВыручкаОтПродаж)
	|					ИЛИ ФинансовыеРезультаты.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.СебестоимостьПродаж))
	|			И (ФинансовыеРезультаты.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
	|					ИЛИ ФинансовыеРезультаты.РасчетСебестоимости)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ФинансовыеРезультаты.НаправлениеДеятельности
	|
	|	) КАК ФинансовыеРезультаты
	|
	| 	ПО
	| 		ТаблицаСпособовРаспределения.СпособРасчетаАвтоматически
	| 		И (ТаблицаСпособовРаспределения.НаправлениеДеятельности = ФинансовыеРезультаты.НаправлениеДеятельности
	| 			ИЛИ ТаблицаСпособовРаспределения.НаправлениеДеятельности = Неопределено)
	|
	|СГРУППИРОВАТЬ ПО
	| 	ТаблицаСпособовРаспределения.Организация,
	| 	ТаблицаСпособовРаспределения.СпособРаспределения,
	|	ЕСТЬNULL(
	|		ФинансовыеРезультаты.НаправлениеДеятельности,
	|		ТаблицаСпособовРаспределения.НаправлениеДеятельности)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	| 	СпособРаспределения,
	| 	НаправлениеДеятельности
	|
	|ИТОГИ
	|	СУММА(База)
	|ПО
	|	Организация,
	| 	СпособРаспределения
	|";
	
	Возврат ТекстЗапроса;
КонецФункции

Процедура РезультатРаспределенияПоБазе(Запрос, ДополнительныеСвойства)
	
	Если Запрос = Неопределено ИЛИ Запрос.Параметры.Свойство("РаспределеныДоходыИРасходыПоБазе") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросРаспределения = Новый Запрос;
	ЗапросРаспределения.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросРаспределения.Текст = ТекстЗапросаТаблицаДоходыРасходыКРаспределению()
		+ ТекстЗапросаТаблицаСпособовРаспределения()
		+ ТекстЗапросаТаблицаБазыРаспределения();
		
	ЗапросРаспределения.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросРаспределения.УстановитьПараметр("Период", Запрос.Параметры.Период);
	ЗапросРаспределения.УстановитьПараметр("НачГраница", Запрос.Параметры.НачГраница);
	ЗапросРаспределения.УстановитьПараметр("КонГраница", Запрос.Параметры.КонГраница);
	
	Результат = ЗапросРаспределения.ВыполнитьПакет();
	
	РезультатРаспределения = РаспределитьДоходыИРасходыПоБазе(Результат[0].Выгрузить(), Результат[2], ДополнительныеСвойства, Запрос.Параметры.Ссылка);
	
	ЗапросДанных = Новый Запрос("
	|ВЫБРАТЬ
	|	Таблица.Период                  КАК Период,
	|	Таблица.Регистратор             КАК Регистратор,
	|	Таблица.НомерСтроки             КАК НомерСтроки,
	|	Таблица.Организация             КАК Организация,
	|	Таблица.Подразделение           КАК Подразделение,
	|	Таблица.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Таблица.НаправлениеДеятельностиПолучатель КАК НаправлениеДеятельностиПолучатель,
	|	Таблица.СтатьяДоходов           КАК СтатьяДоходов,
	|	Таблица.АналитикаДоходов        КАК АналитикаДоходов,
	|	Таблица.СтатьяРасходов          КАК СтатьяРасходов,
	|	Таблица.АналитикаРасходов       КАК АналитикаРасходов,
	|	Таблица.Доходы                  КАК Доходы,
	|	Таблица.Расходы                 КАК Расходы,
	|	Таблица.СпособРаспределения     КАК СпособРаспределения
	|ПОМЕСТИТЬ ВТФинансовыеРезультаты
	|ИЗ
	|	&ТаблицаФинансовыеРезультаты КАК Таблица
	|");
	ЗапросДанных.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросДанных.УстановитьПараметр("ТаблицаФинансовыеРезультаты", РезультатРаспределения);
	ЗапросДанных.Выполнить();
	
	Запрос.УстановитьПараметр("РаспределеныДоходыИРасходыПоБазе", Истина);
	
КонецПроцедуры

Функция РаспределитьДоходыИРасходыПоБазе(ТаблицаФинансовыеРезультаты, РезультатЗапросаПоБазе, ДополнительныеСвойства, СсылкаНаДокумент)
	
	НаборЗаписей = РегистрыНакопления.ФинансовыеРезультаты.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	НаборЗаписей.Колонки.Добавить("НаправлениеДеятельностиПолучатель", Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Измерения.КорНаправлениеДеятельности.Тип);
	НаборЗаписей.Колонки.Добавить("АналитикаДоходов", Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Измерения.АналитикаДоходов.Тип);
	НаборЗаписей.Колонки.Добавить("АналитикаРасходов", Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Измерения.АналитикаРасходов.Тип);
	НаборЗаписей.Колонки.Удалить("Активность");
	
	Если ТаблицаФинансовыеРезультаты.Количество() = 0
	 ИЛИ РезультатЗапросаПоБазе.Пустой()
	Тогда
		Возврат НаборЗаписей;
	КонецЕсли;
	
	КодЯзыка = Метаданные.ОсновнойЯзык.КодЯзыка;
	
	// Выборка строк базы распределения по способу распределения.
	ВыборкаПоОрганизации = РезультатЗапросаПоБазе.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоОрганизации.Следующий() Цикл
		ВыборкаПоСпособуРаспределения = ВыборкаПоОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоСпособуРаспределения.Следующий() Цикл
			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Организация", ВыборкаПоСпособуРаспределения.Организация);
			СтруктураОтбора.Вставить("СпособРаспределения", ВыборкаПоСпособуРаспределения.СпособРаспределения);
			
			// Получаем массив расходов, имеющих одинаковый индекс аналитики, соответствующий текущей выборки базы распределения.
			// Данные затраты будут распределены по одинаковой базе распределения.
			МассивСтрокТаблицы = ТаблицаФинансовыеРезультаты.НайтиСтроки(СтруктураОтбора);
			Если МассивСтрокТаблицы.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если ВыборкаПоСпособуРаспределения.База = 0
			 И ЗначениеЗаполнено(ВыборкаПоСпособуРаспределения.СпособРаспределения) Тогда
			 
				Если МассивСтрокТаблицы[0].Доходы <> 0 Тогда
					Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Отсутствует база для распределения доходов по способу распределения %1. Укажите другой способ распределения или удалите строку из документа.'", КодЯзыка),
						ВыборкаПоСпособуРаспределения.СпособРаспределения);
					Если ДополнительныеСвойства.Свойство("ВыводитьСообщенияВЖурналРегистрации") Тогда
						ЗаписьЖурналаРегистрации(
							НСтр("ru = 'Ошибка при проведении документа'", КодЯзыка), 
							УровеньЖурналаРегистрации.Ошибка,
							Метаданные.Документы.РаспределениеДоходовИРасходовПоНаправлениямДеятельности,
							СсылкаНаДокумент,
							Текст,
							РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
					Иначе
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							Текст,
							СсылкаНаДокумент,
							"Доходы[" + (МассивСтрокТаблицы[0].НомерСтроки - 1) + "].СпособРаспределения",
							,
							);
					КонецЕсли;
					ДополнительныеСвойства.Вставить("НетБазыРаспределения", Истина);
				КонецЕсли;
				
				Если МассивСтрокТаблицы[0].Расходы <> 0 Тогда
					Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Отсутствует база для распределения расходов по способу распределения %1. Укажите другой способ распределения или удалите строку из документа.'", КодЯзыка),
						ВыборкаПоСпособуРаспределения.СпособРаспределения);
					Если ДополнительныеСвойства.Свойство("ВыводитьСообщенияВЖурналРегистрации") Тогда
						ЗаписьЖурналаРегистрации(
							НСтр("ru = 'Ошибка при проведении документа'", КодЯзыка), 
							УровеньЖурналаРегистрации.Ошибка,
							Метаданные.Документы.РаспределениеДоходовИРасходовПоНаправлениямДеятельности,
							СсылкаНаДокумент,
							Текст,
							РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
					Иначе
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
							Текст,
							СсылкаНаДокумент,
							"Расходы[" + (МассивСтрокТаблицы[0].НомерСтроки - 1) + "].СпособРаспределения",
							,
							);
					КонецЕсли;
					ДополнительныеСвойства.Вставить("НетБазыРаспределения", Истина);	
				КонецЕсли;
				
				Продолжить;
				
			КонецЕсли;
			
			Выборка = ВыборкаПоСпособуРаспределения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
			Для Каждого СтрокаТаблицы Из МассивСтрокТаблицы Цикл
				
				Если ЗначениеЗаполнено(СтрокаТаблицы.НаправлениеДеятельности) Тогда
					
					НоваяЗапись = НаборЗаписей.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТаблицы);
					НоваяЗапись.НаправлениеДеятельностиПолучатель = НоваяЗапись.НаправлениеДеятельности;
					НоваяЗапись.СпособРаспределения = Неопределено;
					
				Иначе
			
					ДоходыКРаспределению = СтрокаТаблицы.Доходы;
					РасходыКРаспределению = СтрокаТаблицы.Расходы;
					БазаВсего = ВыборкаПоСпособуРаспределения.База;
				
					// Выборка строк базы распределения по индексу базы распределения
					Выборка.Сбросить();
					Пока Выборка.Следующий() Цикл
					
						Если БазаВсего <> 0 Тогда
							Доходы = Окр(ДоходыКРаспределению * Выборка.База / БазаВсего, 2, 1); 
							Расходы = Окр(РасходыКРаспределению * Выборка.База / БазаВсего, 2, 1) ;
						Иначе
							Доходы = 0;
							Расходы = 0;
						КонецЕсли;
						
						ДоходыКРаспределению = ДоходыКРаспределению - Доходы;
						РасходыКРаспределению = РасходыКРаспределению - Расходы;
						БазаВсего = БазаВсего - Выборка.База;
						
						НоваяЗапись = НаборЗаписей.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаТаблицы);
						НоваяЗапись.НаправлениеДеятельностиПолучатель = Выборка.НаправлениеДеятельности;
						НоваяЗапись.Доходы = Доходы;
						НоваяЗапись.Расходы = Расходы;
					
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат НаборЗаписей;
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры, ДополнительныеСвойства = Неопределено)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ДополнительныеСвойства = Неопределено Тогда
		 ДополнительныеСвойства = Новый Структура();
	КонецЕсли;
	
	РезультатРаспределенияПоБазе(Запрос, ДополнительныеСвойства);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ФинансовыеРезультаты.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ФинансовыеРезультаты.НаправлениеДеятельностиПолучатель КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки) КАК Статья,
	|	ФинансовыеРезультаты.Организация КАК Аналитика,
	|	СУММА(ФинансовыеРезультаты.Доходы) КАК Сумма
	|ИЗ
	|	ВТФинансовыеРезультаты КАК ФинансовыеРезультаты
	|
	|ГДЕ
	|	НЕ ФинансовыеРезультаты.Доходы = 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ФинансовыеРезультаты.Организация,
	|	ФинансовыеРезультаты.НаправлениеДеятельностиПолучатель
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ФинансовыеРезультаты.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ФинансовыеРезультаты.НаправлениеДеятельностиПолучатель КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки) КАК Статья,
	|	ФинансовыеРезультаты.Организация КАК Аналитика,
	|	СУММА(ФинансовыеРезультаты.Расходы) КАК Сумма
	|ИЗ
	|	ВТФинансовыеРезультаты КАК ФинансовыеРезультаты
	|
	|ГДЕ
	|	НЕ ФинансовыеРезультаты.Расходы = 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ФинансовыеРезультаты.Организация,
	|	ФинансовыеРезультаты.НаправлениеДеятельностиПолучатель
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры, ДополнительныеСвойства = Неопределено)
	
	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если ДополнительныеСвойства = Неопределено Тогда
		 ДополнительныеСвойства = Новый Структура();
	КонецЕсли;
	
	РезультатРаспределенияПоБазе(Запрос, ДополнительныеСвойства);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеДоходовПоНаправлениямДеятельности) КАК ХозяйственнаяОперация,
	|	ФинансовыеРезультаты.Организация КАК Организация,
	|
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ФинансовыеРезультаты.НаправлениеДеятельностиПолучатель КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	ФинансовыеРезультаты.Организация КАК АналитикаАктивовПассивов,
	|
	|	ФинансовыеРезультаты.Подразделение КАК КорПодразделение,
	|	ФинансовыеРезультаты.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ФинансовыеРезультаты.СтатьяДоходов КАК КорСтатья,
	|	ФинансовыеРезультаты.АналитикаДоходов КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаАктивовПассивов,
	|
	|	СУММА(ФинансовыеРезультаты.Доходы) КАК Сумма
	|ИЗ
	|	ВТФинансовыеРезультаты КАК ФинансовыеРезультаты
	|
	|ГДЕ
	|	НЕ ФинансовыеРезультаты.Доходы = 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ФинансовыеРезультаты.Организация,
	|	ФинансовыеРезультаты.Подразделение,
	|	ФинансовыеРезультаты.НаправлениеДеятельности,
	|	ФинансовыеРезультаты.НаправлениеДеятельностиПолучатель,
	|	ФинансовыеРезультаты.СтатьяДоходов,
	|	ФинансовыеРезультаты.АналитикаДоходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРасходовПоНаправлениямДеятельности) КАК ХозяйственнаяОперация,
	|	ФинансовыеРезультаты.Организация КАК Организация,
	|
	|	ФинансовыеРезультаты.Подразделение КАК Подразделение,
	|	ФинансовыеРезультаты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ФинансовыеРезультаты.СтатьяРасходов КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	ФинансовыеРезультаты.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК КорПодразделение,
	|	ФинансовыеРезультаты.НаправлениеДеятельностиПолучатель КАК КорНаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки) КАК КорСтатья,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаРасходов,
	|	ФинансовыеРезультаты.Организация КАК КорАналитикаАктивовПассивов,
	|
	|	СУММА(ФинансовыеРезультаты.Расходы) КАК Сумма
	|ИЗ
	|	ВТФинансовыеРезультаты КАК ФинансовыеРезультаты
	|
	|ГДЕ
	|	НЕ ФинансовыеРезультаты.Расходы = 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ФинансовыеРезультаты.Организация,
	|	ФинансовыеРезультаты.Подразделение,
	|	ФинансовыеРезультаты.НаправлениеДеятельности,
	|	ФинансовыеРезультаты.НаправлениеДеятельностиПолучатель,
	|	ФинансовыеРезультаты.СтатьяРасходов,
	|	ФинансовыеРезультаты.АналитикаРасходов
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

#КонецОбласти

#Область БлокировкаПриОбновленииИБ

Процедура ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ПредставлениеОперации)
	
	ВходящиеДанные = Новый Соответствие;
	
	ВходящиеДанные.Вставить(Метаданные.Документы.РаспределениеДоходовИРасходовПоНаправлениямДеятельности);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеДоходы);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы);
	
	ЗакрытиеМесяцаУТВызовСервера.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ВходящиеДанные, ПредставлениеОперации);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
