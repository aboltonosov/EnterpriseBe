#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Устанавливает статус для объекта документа
//
// Параметры:
//	НовыйСтатус - Строка - Имя статуса, который будет установлен у заказов
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров установки статуса
//
// Возвращаемое значение:
//	Булево - Истина, в случае успешной установки нового статуса
//
Функция УстановитьСтатус(НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ДатаПерехода = Дата('00010101');
	Если ДополнительныеПараметры <> Неопределено Тогда
		ДополнительныеПараметры.Свойство("НоваяДата", ДатаПерехода);
	КонецЕсли;
	
	Статус = Перечисления.СтатусыРеализацийТоваровУслуг[НовыйСтатус];
	
	// Установка даты перехода права собственности
	Если ЗначениеЗаполнено(ДатаПерехода) Тогда
		
		Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности Тогда
			ДатаПереходаПраваСобственности = ДатаПерехода;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	ИдентификаторПлатежа   = Неопределено;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если Не ЗначениеЗаполнено(ХозяйственнаяОперация)
		Или ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности Тогда
		НепроверяемыеРеквизиты.Добавить("Статус");
		НепроверяемыеРеквизиты.Добавить("ДатаПереходаПраваСобственности");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Статус)
		Или Статус <> Перечисления.СтатусыРеализацийТоваровУслуг.Отгружено Тогда
		НепроверяемыеРеквизиты.Добавить("ДатаПереходаПраваСобственности");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Соглашение)
		Или Не ОбщегоНазначенияУТ.ЗначениеРеквизитаОбъектаТипаБулево(Соглашение, "ИспользуютсяДоговорыКонтрагентов") Тогда
		НепроверяемыеРеквизиты.Добавить("Договор");
	КонецЕсли;
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
		НепроверяемыеРеквизиты.Добавить("Доходы.СтавкаНДС");
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам") Тогда
		ПроверяемыеРеквизиты.Добавить("Подразделение");
	КонецЕсли;
	
	ПланыВидовХарактеристик.СтатьиДоходов.ПроверитьЗаполнениеАналитик(
		ЭтотОбъект,Новый Структура("Доходы"), НепроверяемыеРеквизиты, Отказ);
	ПланыВидовХарактеристик.СтатьиРасходов.ПроверитьЗаполнениеАналитик(
		ЭтотОбъект, Новый Структура("Расходы"), НепроверяемыеРеквизиты, Отказ);
	
	Если ЗначениеЗаполнено(НаправлениеДеятельности) 
		ИЛИ НЕ НаправленияДеятельностиСервер.УказаниеНаправленияДеятельностиОбязательно(ХозяйственнаяОперация) Тогда
		НепроверяемыеРеквизиты.Добавить("НаправлениеДеятельности");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ВзаиморасчетыСервер.ПроверитьДатуПлатежа(ЭтотОбъект, Отказ);
	ПродажиСервер.ПроверитьЗапретОтгрузки(Партнер, Отказ);
	
	Если Не Отказ И ОбщегоНазначенияУТ.ПроверитьЗаполнениеРеквизитовОбъекта(ЭтотОбъект, ПроверяемыеРеквизиты) Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	ПроведениеСерверУТ.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Документы.СчетФактураВыданный.ПроверитьРеквизитыСчетФактурыПередЗаписьюОснования(ЭтотОбъект);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ДозаполнитьДанныеДоходов();
		ОчиститьНеиспользуемыеРеквизиты();
		ВзаиморасчетыСервер.ЗаполнитьИдентификаторыСтрокВТабличнойЧасти(Доходы);
	КонецЕсли;
	
	СуммаДокумента = ЦенообразованиеКлиентСервер.ПолучитьСуммуДокумента(Доходы, ЦенаВключаетНДС);
	СтруктураКурса = РаботаСКурсамиВалютУТ.СтруктураКурсаВалюты(Курс, Кратность);
	ЗаполнитьСуммуВзаиморасчетов(СтруктураКурса);
	Ценообразование.РассчитатьСуммыВзаиморасчетовВТабличнойЧасти(ЭтотОбъект, "Доходы", СтруктураКурса);
	ПорядокРасчетов = ВзаиморасчетыСервер.ПорядокРасчетовПоДокументу(ЭтотОбъект);
	
	Если ЭтоНовый() И НЕ ЗначениеЗаполнено(Номер) Тогда
		УстановитьНовыйНомер();
	КонецЕсли;

	ИдентификаторПлатежа = ОбщегоНазначенияУТ.ПолучитьУникальныйИдентификаторПлатежа(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.РеализацияУслугПрочихАктивов.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ДоходыИРасходыСервер.ОтразитьПрочиеДоходы(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьПрочиеРасходы(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьПрочиеАктивыПассивы(ДополнительныеСвойства, Движения, Отказ);
	
	ВзаиморасчетыСервер.ОтразитьРасчетыСКлиентами(ДополнительныеСвойства, Движения, Отказ);
	
	ВзаиморасчетыСервер.ОтразитьСуммыДокументаВВалютеРегл(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьНДСЗаписиКнигиПродаж(ДополнительныеСвойства, Движения, Отказ);
	
	// Движения по оборотным регистрам управленческого учета
	УправленческийУчетПроведениеСервер.ОтразитьДвиженияКонтрагентДоходыРасходы(ДополнительныеСвойства, Движения, Отказ);
	УправленческийУчетПроведениеСервер.ОтразитьДвиженияДоходыРасходыПрочиеАктивыПассивы(ДополнительныеСвойства, Движения, Отказ);
	
	//++ НЕ УТ
	РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);
	//-- НЕ УТ
	РегистрыСведений.РеестрДокументов.ЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	//++ НЕ УТКА
	МеждународныйУчетПроведениеСервер.ЗарегистрироватьКОтражению(ЭтотОбъект, ДополнительныеСвойства, Движения, Отказ);
	//-- НЕ УТКА
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
	Документы.СчетФактураВыданный.АктуализироватьСчетФактуру(ЭтотОбъект, Истина);
	РегистрыСведений.ТребуетсяОформлениеСчетаФактуры.ОтразитьНеобходимостьОформленияСчетаФактуры(ДополнительныеСвойства, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	СформироватьСписокРегистровДляКонтроля();

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	ПроведениеСерверУТ.СформироватьЗаписиРегистровЗаданий(ЭтотОбъект);
	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
	Документы.СчетФактураВыданный.АктуализироватьСчетФактуру(ЭтотОбъект, Ложь);
	РегистрыСведений.ТребуетсяОформлениеСчетаФактуры.ОтразитьНеобходимостьОформленияСчетаФактуры(ДополнительныеСвойства, Отказ);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("СправочникСсылка.СоглашенияСКлиентами") Тогда
		УсловияПродаж = ПродажиСервер.ПолучитьУсловияПродаж(ДанныеЗаполнения);
		
		Если УсловияПродаж.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.РеализацияКлиенту Тогда
			ТекстОшибки = НСтр("ru='Ввод на основании соглашения с операцией `%Операция%.` не допускается.'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Операция%", УсловияПродаж.ХозяйственнаяОперация); 
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		ДопустимыеСтатусы = Новый Массив();
		ДопустимыеСтатусы.Добавить(Перечисления.СтатусыСоглашенийСКлиентами.Действует);
		ОшибкиСтатуса = (УсловияПродаж.СтатусСоглашения <> Перечисления.СтатусыСоглашенийСКлиентами.Действует);
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСоглашения(УсловияПродаж.Типовое);
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(ДанныеЗаполнения, УсловияПродаж.СтатусСоглашения, , ОшибкиСтатуса, ДопустимыеСтатусы);
		
		Если (Не УсловияПродаж.Типовое) И ЗначениеЗаполнено(УсловияПродаж.Партнер) Тогда
			Партнер = УсловияПродаж.Партнер;
		КонецЕсли;
		Соглашение = ДанныеЗаполнения;
		Документы.РеализацияУслугПрочихАктивов.ЗаполнитьПоУсловиямПродаж(ЭтотОбъект, УсловияПродаж);
	//++ НЕ УТ
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПодготовкаКПередачеНМА") Тогда
		ЗаполнитьПоДокументуПодготовкаКПередачеНМА(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПодготовкаКПередачеОС") Тогда
		ЗаполнитьПоДокументуПодготовкаКПередачеОС(ДанныеЗаполнения);
	//-- НЕ УТ
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	ДополнительныеСвойства.Вставить("НеобходимостьЗаполненияСчетаПриФОИспользоватьНесколькоСчетовЛожь", Ложь);
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	Префикс = ОбщегоНазначенияУТПовтИсп.ДополнительныйПрефиксНумератораДокументыРеализацииТоваров();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Документы.РеализацияУслугПрочихАктивов.ЗаполнитьПоУмолчанию(ЭтотОбъект);
	
	РаботаСКурсамиВалютУТ.ЗаполнитьКурсКратностьПоУмолчанию(Курс, Кратность, Валюта, ВалютаВзаиморасчетов);
	
	ВалютаОплаты  = ДенежныеСредстваСервер.ПолучитьВалютуОплаты(ФормаОплаты, БанковскийСчетОрганизации);
	ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.ПолучитьПорядокОплатыПоУмолчанию(ВалютаВзаиморасчетов,НалогообложениеНДС,ВалютаОплаты);
	
	
КонецПроцедуры

//++ НЕ УТ

Процедура ЗаполнитьПоДокументуПодготовкаКПередачеОС(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ДанныеЗаполнения", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияШтуки", Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("796", Ложь));
	
	#Область ТекстЗапроса
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Организация КАК Организация,
	|	Операция.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.ОсновноеСредство.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство,
	|	Операция.ПоддержкаОтложенногоПереходаПрав КАК ПоддержкаОтложенногоПереходаПрав,
	|	Операция.СчетВыбытияОС КАК СчетВыбытияОС,
	|	Операция.ПередачаВыполнена,
	|	Операция.ДатаПередачи,
	|	Операция.Партнер,
	|	Операция.Контрагент,
	|	Операция.Валюта,
	|	Операция.ЦенаВключаетНДС,
	|	Операция.НалогообложениеНДС,
	|	Операция.Основание,
	|	Операция.ОснованиеДата,
	|	Операция.ОснованиеНомер,
	|	Операция.Грузоотправитель,
	|	Операция.Грузополучатель,
	|	Операция.БанковскийСчетОрганизации,
	|	Операция.БанковскийСчетКонтрагента,
	|	Операция.БанковскийСчетГрузоотправителя,
	|	Операция.БанковскийСчетГрузополучателя,
	|	Операция.Отпустил,
	|	Операция.ОтпустилДолжность,
	|	Операция.Руководитель,
	|	Операция.ГлавныйБухгалтер,
	|	ТабличнаяЧасть.Сумма КАК Цена,
	|	ТабличнаяЧасть.Сумма КАК Сумма,
	|	ТабличнаяЧасть.СтавкаНДС КАК СтавкаНДС,
	|	ТабличнаяЧасть.СуммаНДС КАК СуммаНДС,
	|	ТабличнаяЧасть.СуммаСНДС КАК СуммаСНДС
	|ПОМЕСТИТЬ втДанныеОснования
	|ИЗ
	|	Документ.ПодготовкаКПередачеОС КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеОС.ОС КАК ТабличнаяЧасть
	|		ПО Операция.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Операция.Ссылка = &ДанныеЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеОснования.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(ПрочиеАктивыПассивыОстатки.СуммаОстаток, 0) КАК СуммаУпр,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстаток, 0) КАК СуммаБУ,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаНУОстаток, 0) КАК СуммаНУ,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаПРОстаток, 0) КАК СуммаПР,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаВРОстаток, 0) КАК СуммаВР
	|ПОМЕСТИТЬ втДанныеСтоимости
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&Дата,
	|				Счет В
	|					(ВЫБРАТЬ
	|						Т.СчетВыбытияОС
	|					ИЗ
	|						втДанныеОснования КАК Т),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|				(Организация, Подразделение, НаправлениеДеятельности, Субконто1) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.Подразделение,
	|						Т.НаправлениеДеятельности,
	|						Т.ОсновноеСредство
	|					ИЗ
	|						втДанныеОснования КАК Т
	|					ГДЕ
	|						Т.ПоддержкаОтложенногоПереходаПрав)) КАК ХозрасчетныйОстатки
	|		ПО втДанныеОснования.ОсновноеСредство = ХозрасчетныйОстатки.Субконто1
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеАктивыПассивы.Остатки(
	|				&Дата,
	|				Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства)
	|					И (Организация, Подразделение, НаправлениеДеятельности, Аналитика) В
	|						(ВЫБРАТЬ
	|							Т.Организация,
	|							Т.Подразделение,
	|							Т.НаправлениеДеятельности,
	|							Т.ОсновноеСредство
	|						ИЗ
	|							втДанныеОснования КАК Т
	|						ГДЕ
	|							Т.ПоддержкаОтложенногоПереходаПрав)) КАК ПрочиеАктивыПассивыОстатки
	|		ПО втДанныеОснования.ОсновноеСредство = ПрочиеАктивыПассивыОстатки.Аналитика
	|ГДЕ
	|	втДанныеОснования.ПоддержкаОтложенногоПереходаПрав
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК РеализацияНаОсновании,
	|	втДанныеОснования.Ссылка КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту) КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА втДанныеОснования.ПоддержкаОтложенногоПереходаПрав И втДанныеОснования.ПередачаВыполнена
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
	|		КОГДА втДанныеОснования.ПоддержкаОтложенногоПереходаПрав
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.ВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
	|	КОНЕЦ КАК Статус,
	|	ВЫБОР
	|		КОГДА втДанныеОснования.ПоддержкаОтложенногоПереходаПрав И втДанныеОснования.ПередачаВыполнена
	|			ТОГДА втДанныеОснования.ДатаПередачи
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаПереходаПраваСобственности,
	|	втДанныеОснования.Организация КАК Организация,
	|	втДанныеОснования.Подразделение КАК Подразделение,
	|	втДанныеОснования.Партнер,
	|	втДанныеОснования.Контрагент,
	|	втДанныеОснования.Валюта,
	|	втДанныеОснования.ЦенаВключаетНДС,
	|	втДанныеОснования.НалогообложениеНДС,
	|	втДанныеОснования.Основание,
	|	втДанныеОснования.ОснованиеДата,
	|	втДанныеОснования.ОснованиеНомер,
	|	втДанныеОснования.Грузоотправитель,
	|	втДанныеОснования.Грузополучатель,
	|	втДанныеОснования.БанковскийСчетОрганизации,
	|	втДанныеОснования.БанковскийСчетКонтрагента,
	|	втДанныеОснования.БанковскийСчетГрузоотправителя,
	|	втДанныеОснования.БанковскийСчетГрузополучателя,
	|	втДанныеОснования.Отпустил,
	|	втДанныеОснования.ОтпустилДолжность,
	|	втДанныеОснования.Руководитель,
	|	втДанныеОснования.ГлавныйБухгалтер
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(втДанныеОснования.ОсновноеСредство) КАК Содержание,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.РеализацияОС) КАК СтатьяДоходов,
	|	втДанныеОснования.ОсновноеСредство КАК АналитикаДоходов,
	|	&ЕдиницаИзмеренияШтуки КАК ЕдиницаИзмерения,
	|	1 КАК Количество,
	|	втДанныеОснования.Сумма КАК Цена,
	|	втДанныеОснования.Сумма КАК Сумма,
	|	втДанныеОснования.СтавкаНДС КАК СтавкаНДС,
	|	втДанныеОснования.СуммаНДС КАК СуммаНДС,
	|	втДанныеОснования.СуммаСНДС КАК СуммаСНДС
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства) КАК СтатьяАктивовПассивов,
	|	втДанныеОснования.ОсновноеСредство КАК АналитикаАктивовПассивов,
	|	втДанныеОснования.СчетВыбытияОС КАК СчетУчета,
	|	втДанныеОснования.ОсновноеСредство КАК Субконто1,
	|	втДанныеСтоимости.СуммаУпр КАК Сумма,
	|	втДанныеСтоимости.СуммаБУ КАК СуммаРегл,
	|	втДанныеСтоимости.СуммаПР КАК ПостояннаяРазница,
	|	втДанныеСтоимости.СуммаВР КАК ВременнаяРазница
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДанныеСтоимости КАК втДанныеСтоимости
	|		ПО втДанныеОснования.ОсновноеСредство = втДанныеСтоимости.ОсновноеСредство
	|ГДЕ
	|	втДанныеОснования.ПоддержкаОтложенногоПереходаПрав
	|	И НЕ(втДанныеСтоимости.СуммаУпр = 0
	|				И втДанныеСтоимости.СуммаБУ = 0
	|				И втДанныеСтоимости.СуммаПР = 0
	|				И втДанныеСтоимости.СуммаПР = 0)";
	
	#КонецОбласти
	
	Пакет = Запрос.ВыполнитьПакет();
	
	Выборка = Пакет[Пакет.Количество()-3].Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	КонецЕсли;
	
	Доходы.Загрузить(Пакет[Пакет.Количество()-2].Выгрузить());
	Расходы.Загрузить(Пакет[Пакет.Количество()-1].Выгрузить());
	
КонецПроцедуры

Процедура ЗаполнитьПоДокументуПодготовкаКПередачеНМА(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ДанныеЗаполнения", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ЕдиницаИзмеренияШтуки", Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("796", Ложь));
	
	#Область ТекстЗапроса
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Организация КАК Организация,
	|	Операция.Подразделение КАК Подразделение,
	|	Операция.НематериальныйАктив.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Операция.НематериальныйАктив КАК НематериальныйАктив,
	|	Операция.ПоддержкаОтложенногоПереходаПрав КАК ПоддержкаОтложенногоПереходаПрав,
	|	Операция.Партнер,
	|	Операция.Контрагент
	|ПОМЕСТИТЬ втДанныеОснования
	|ИЗ
	|	Документ.ПодготовкаКПередачеНМА КАК Операция
	|ГДЕ
	|	Операция.Ссылка = &ДанныеЗаполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеОснования.НематериальныйАктив КАК НематериальныйАктив,
	|	СчетаБухгалтерскогоУчетаНМАСрезПоследних.СчетУчета КАК СчетУчета,
	|	ЛОЖЬ КАК ЦелевыеСредства
	|ПОМЕСТИТЬ втПараметры
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаНМА.СрезПоследних(
	|				&Дата,
	|				(Организация, НематериальныйАктив) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.НематериальныйАктив
	|					ИЗ
	|						втДанныеОснования КАК Т)) КАК СчетаБухгалтерскогоУчетаНМАСрезПоследних
	|		ПО втДанныеОснования.НематериальныйАктив = СчетаБухгалтерскогоУчетаНМАСрезПоследних.НематериальныйАктив
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втДанныеОснования.НематериальныйАктив,
	|	ПараметрыЦелевогоФинансированияНМАСрезПоследних.СчетУчета,
	|	ИСТИНА
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияНМА.СрезПоследних(
	|				&Дата,
	|				ПрименениеЦелевогоФинансирования
	|					И НематериальныйАктив В
	|						(ВЫБРАТЬ
	|							Т.НематериальныйАктив
	|						ИЗ
	|							втДанныеОснования КАК Т)) КАК ПараметрыЦелевогоФинансированияНМАСрезПоследних
	|		ПО втДанныеОснования.НематериальныйАктив = ПараметрыЦелевогоФинансированияНМАСрезПоследних.НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеОснования.НематериальныйАктив КАК НематериальныйАктив,
	|	ЕСТЬNULL(ПрочиеАктивыПассивыОстатки.СуммаОстаток, 0) КАК СуммаУпр,
	|	ЕСТЬNULL(втПараметры.СчетУчета, 0) КАК СчетУчета,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстаток, 0) КАК СуммаБУ,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаНУОстаток, 0) КАК СуммаНУ,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаПРОстаток, 0) КАК СуммаПР,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаВРОстаток, 0) КАК СуммаВР
	|ПОМЕСТИТЬ втДанныеСтоимости
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметры КАК втПараметры
	|		ПО втДанныеОснования.НематериальныйАктив = втПараметры.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&Дата,
	|				Счет В
	|					(ВЫБРАТЬ
	|						Т.СчетУчета
	|					ИЗ
	|						втПараметры КАК Т),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|				(Организация, Подразделение, НаправлениеДеятельности, Субконто1) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.Подразделение,
	|						Т.НаправлениеДеятельности,
	|						Т.НематериальныйАктив
	|					ИЗ
	|						втДанныеОснования КАК Т
	|					ГДЕ
	|						Т.ПоддержкаОтложенногоПереходаПрав)) КАК ХозрасчетныйОстатки
	|		ПО втДанныеОснования.НематериальныйАктив = ХозрасчетныйОстатки.Субконто1
	|			И (втПараметры.СчетУчета = ХозрасчетныйОстатки.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПрочиеАктивыПассивы.Остатки(
	|				&Дата,
	|				Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства)
	|					И (Организация, Подразделение, НаправлениеДеятельности, Аналитика) В
	|						(ВЫБРАТЬ
	|							Т.Организация,
	|							Т.Подразделение,
	|							Т.НаправлениеДеятельности,
	|							Т.НематериальныйАктив
	|						ИЗ
	|							втДанныеОснования КАК Т
	|						ГДЕ
	|							Т.ПоддержкаОтложенногоПереходаПрав)) КАК ПрочиеАктивыПассивыОстатки
	|		ПО втДанныеОснования.НематериальныйАктив = ПрочиеАктивыПассивыОстатки.Аналитика
	|			И (НЕ втПараметры.ЦелевыеСредства)
	|ГДЕ
	|	втДанныеОснования.ПоддержкаОтложенногоПереходаПрав
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК РеализацияНаОсновании,
	|	втДанныеОснования.Ссылка КАК ДокументОснование,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено) КАК Статус,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПереходаПраваСобственности,
	|	втДанныеОснования.Организация КАК Организация,
	|	втДанныеОснования.Подразделение КАК Подразделение,
	|	втДанныеОснования.Партнер,
	|	втДанныеОснования.Контрагент
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПРЕДСТАВЛЕНИЕ(втДанныеОснования.НематериальныйАктив) КАК Содержание,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) КАК СтатьяДоходов,
	|	втДанныеОснования.НематериальныйАктив КАК АналитикаДоходов,
	|	&ЕдиницаИзмеренияШтуки КАК ЕдиницаИзмерения,
	|	1 КАК Количество
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы) КАК СтатьяАктивовПассивов,
	|	втДанныеОснования.НематериальныйАктив КАК АналитикаАктивовПассивов,
	|	втПараметры.СчетУчета КАК СчетУчета,
	|	втДанныеОснования.НематериальныйАктив КАК Субконто1,
	|	втДанныеСтоимости.СуммаУпр КАК Сумма,
	|	втДанныеСтоимости.СуммаБУ КАК СуммаРегл,
	|	втДанныеСтоимости.СуммаПР КАК ПостояннаяРазница,
	|	втДанныеСтоимости.СуммаВР КАК ВременнаяРазница
	|ИЗ
	|	втДанныеОснования КАК втДанныеОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметры КАК втПараметры
	|		ПО втДанныеОснования.НематериальныйАктив = втПараметры.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДанныеСтоимости КАК втДанныеСтоимости
	|		ПО втДанныеОснования.НематериальныйАктив = втДанныеСтоимости.НематериальныйАктив
	|			И (втПараметры.СчетУчета = втДанныеСтоимости.СчетУчета)
	|ГДЕ
	|	втДанныеОснования.ПоддержкаОтложенногоПереходаПрав
	|	И НЕ(втДанныеСтоимости.СуммаУпр = 0
	|				И втДанныеСтоимости.СуммаБУ = 0
	|				И втДанныеСтоимости.СуммаПР = 0
	|				И втДанныеСтоимости.СуммаПР = 0)";
	
	#КонецОбласти
	
	Пакет = Запрос.ВыполнитьПакет();
	
	Выборка = Пакет[Пакет.Количество()-3].Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка);
	КонецЕсли;
	Доходы.Загрузить(Пакет[Пакет.Количество()-2].Выгрузить());
	Расходы.Загрузить(Пакет[Пакет.Количество()-1].Выгрузить());
	
КонецПроцедуры

//-- НЕ УТ

#КонецОбласти

#Область Прочее

Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;

	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Массив.Добавить(Движения.РасчетыСКлиентами);
		
	КонецЕсли;

	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);

КонецПроцедуры

Процедура ДозаполнитьДанныеДоходов()
	Для Каждого Строка из Доходы Цикл
		Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС И Не ЗначениеЗаполнено(Строка.СтавкаНДС) Тогда
			Строка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОчиститьНеиспользуемыеРеквизиты()
	
	ОчищаемыеРеквизиты = Новый Массив;
	
КонецПроцедуры

Процедура ЗаполнитьСуммуВзаиморасчетов(СтруктураКурса)
	
	Если Доходы.НайтиСтроки(Новый Структура("СуммаВзаиморасчетов", 0)).Количество()=0 Тогда
		
		СуммаВзаиморасчетов = Доходы.Итог("СуммаВзаиморасчетов");
		
	Иначе
		
		ВзаиморасчетыСервер.ЗаполнитьСуммуВзаиморасчетов(ЭтотОбъект, , СтруктураКурса);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ
		И Не ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		РегистрыСведений.РеестрДокументов.ИнициализироватьИЗаписатьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли