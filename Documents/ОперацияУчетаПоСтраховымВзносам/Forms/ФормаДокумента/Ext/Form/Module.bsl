// 4D:ERP для Беларуси
// {
// Форма изменена
// }
// 4D

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		ЗначенияДляЗаполнения = Новый Структура("Организация, Ответственный, Месяц", 
			"Объект.Организация",
			"Объект.Ответственный",
			"Объект.МесяцРасчетногоПериода");
		
		ЗарплатаКадры.ЗаполнитьПервоначальныеЗначенияВФорме(ЭтаФорма, ЗначенияДляЗаполнения);
		
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки".
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Обработчик подсистемы "ВерсионированиеОбъектов".
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ЗаписьДокумента", Объект.Ссылка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбработатьИзменениеОрганизацииНаСервере();
КонецПроцедуры

#Область РедактированиеМесяцаСтрокой

&НаКлиенте
Процедура МесяцРасчетногоПериодаСтрокойПриИзменении(Элемент)
	
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтаФорма, "Объект.МесяцРасчетногоПериода", "МесяцРасчетногоПериодаСтрокой", Модифицированность);
	ОбработатьИзменениеМесяцРасчетногоПериодаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцРасчетногоПериодаСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("МесяцРасчетногоПериодаСтрокойНачалоВыбораЗавершение", ЭтотОбъект);
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(ЭтаФорма, ЭтаФорма, "Объект.МесяцРасчетногоПериода", "МесяцРасчетногоПериодаСтрокой", , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцРасчетногоПериодаСтрокойНачалоВыбораЗавершение(ЗначениеВыбрано, ДополнительныеПараметры) Экспорт 
	
	Если ЗначениеВыбрано Тогда
		ОбработатьИзменениеМесяцРасчетногоПериодаНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцРасчетногоПериодаСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтаФорма, "Объект.МесяцРасчетногоПериода", "МесяцРасчетногоПериодаСтрокой", Направление, Модифицированность);
	ПодключитьОбработчикОжидания("ОбработчикОжиданияМесяцРасчетногоПериодаПриИзменении", 0.3, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцРасчетногоПериодаСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцРасчетногоПериодаСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура ОбработчикОжиданияМесяцРасчетногоПериодаПриИзменении()

	ОбработатьИзменениеМесяцРасчетногоПериодаНаСервере();

КонецПроцедуры

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "Объект.МесяцРасчетногоПериода", "МесяцРасчетногоПериодаСтрокой");
	
	УчетСтраховыхВзносов.УстановитьВидимостьКолонокТаблицыСтраховыхВзносов(ЭтаФорма, Объект.МесяцРасчетногоПериода, "");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	ПараметрыФО = Новый Структура;
	ПараметрыФО.Вставить("Организация", Объект.Организация);
	ПараметрыФО.Вставить("Период", НачалоДня(Объект.МесяцРасчетногоПериода));
	УстановитьПараметрыФункциональныхОпцийФормы(ПараметрыФО);

КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеОрганизацииНаСервере()

	УстановитьФункциональныеОпцииФормы();

КонецПроцедуры

&НаСервере
Процедура ОбработатьИзменениеМесяцРасчетногоПериодаНаСервере()

	УстановитьФункциональныеОпцииФормы();
	
	УчетСтраховыхВзносов.УстановитьВидимостьКолонокТаблицыСтраховыхВзносов(ЭтаФорма, Объект.МесяцРасчетногоПериода, "");
	
КонецПроцедуры

// 4D:ERP для Беларуси, Яна, 08.09.2017 14:54:27 
// Локализация документов зарплатного модуля, №15480
// {
&НаКлиенте
Процедура ФСЗНПриИзменении(Элемент)
	
	ТарифыСтраховыхВзносов = ПолучитьТарифСтраховыхВзносов();
	Объект.ПС =(Объект.ФСЗН*100/ТарифыСтраховыхВзносов.ФСЗН)*(ТарифыСтраховыхВзносов.ПС/100);
	Объект.СС =(Объект.ФСЗН*100/ТарифыСтраховыхВзносов.ФСЗН)*(ТарифыСтраховыхВзносов.СС/100);
	Объект.ПенсионныйФонд =(Объект.ФСЗН*100/ТарифыСтраховыхВзносов.ФСЗН)*(ТарифыСтраховыхВзносов.ПенсионныйФонд/100);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТарифСтраховыхВзносов()
	
	ТарифыСтраховыхВзносов = Новый Структура;
	ТарифыСтраховыхВзносов.Вставить("ФСЗН",0);
	ТарифыСтраховыхВзносов.Вставить("ПС",0);
	ТарифыСтраховыхВзносов.Вставить("СС",0);
	ТарифыСтраховыхВзносов.Вставить("ПенсионныйФонд"  ,0);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",Объект.Организация);
	Запрос.УстановитьПараметр("Период",Объект.МесяцРасчетногоПериода);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПрименяемыеТарифыСтраховыхВзносовСрезПоследних.ВидТарифа
	|ПОМЕСТИТЬ ВТПрименяемыеТарифыСтраховыхВзносов
	|ИЗ
	|	РегистрСведений.ПрименяемыеТарифыСтраховыхВзносов.СрезПоследних(&Период, ГоловнаяОрганизация = &Организация) КАК ПрименяемыеТарифыСтраховыхВзносовСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТарифыСтраховыхВзносовСрезПоследних.ФСЗН,
	|	ТарифыСтраховыхВзносовСрезПоследних.ПС,
	|	ТарифыСтраховыхВзносовСрезПоследних.СС,
	|	ТарифыСтраховыхВзносовСрезПоследних.ПенсионныйФонд
	|ИЗ
	|	РегистрСведений.ТарифыСтраховыхВзносов.СрезПоследних(&Период, ) КАК ТарифыСтраховыхВзносовСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПрименяемыеТарифыСтраховыхВзносов КАК ВТПрименяемыеТарифыСтраховыхВзносов
	|		ПО ТарифыСтраховыхВзносовСрезПоследних.ВидТарифа = ВТПрименяемыеТарифыСтраховыхВзносов.ВидТарифа";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		ТарифыСтраховыхВзносов.Вставить("ФСЗН",Выборка.ФСЗН);
		ТарифыСтраховыхВзносов.Вставить("ПС"  ,Выборка.ПС);
		ТарифыСтраховыхВзносов.Вставить("СС"  ,Выборка.СС);
		ТарифыСтраховыхВзносов.Вставить("ПенсионныйФонд"  ,Выборка.ПенсионныйФонд);
		
	КонецЕсли;
	
	Возврат ТарифыСтраховыхВзносов 
		
КонецФункции
// }
// 4D

#КонецОбласти
