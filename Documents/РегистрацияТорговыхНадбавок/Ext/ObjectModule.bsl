#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ИИЦИАЛИЗАЦИИ И ЗАПОЛНЕНИЯ РЕГИСТРАЦИИ ЦЕН ПОСТАВЩИКА

#Область ОбработчикиСобытий

// Инициализирует установку цен номенклатуры партнеров.
//
Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)

	Ответственный = Пользователи.ТекущийПользователь();

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ДанныеЗаполнения = Неопределено Тогда
		ИнициализироватьДокумент(ДанныеЗаполнения);	
	Иначе
	    ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
		
		Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
			ИЛИ ТипДанныхЗаполнения = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			
			Документы.РегистрацияТорговыхНадбавок.ЗаполнитьТоварыПроцентомТорговойНадбавкиПоОснованию(ДанныеЗаполнения, ЭтотОбъект);
			ИнициализироватьДокумент(ДанныеЗаполнения);
		Иначе 
			Перемещение = ТипЗнч(ДанныеЗаполнения.ДокументОснование[0]) = Тип("ДокументСсылка.ПеремещениеТоваров");
			Склад = ?(Перемещение, ДанныеЗаполнения.ДокументОснование[0].СкладПолучатель, ДанныеЗаполнения.ДокументОснование[0].Склад);
			
			Если Склад.ЭтоГруппа Тогда
					//надо дописать
						
			ИначеЕсли Склад.ТипСклада = Перечисления.ТипыСкладов.ОптовыйСклад Тогда
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Не требуется регистрировать торговые надбавки на основании документа %1'"),
					ДанныеЗаполнения.ДокументОснование[0]);
				ВызватьИсключение Текст;
			КонецЕсли; 
			
			Документы.РегистрацияТорговыхНадбавок.ЗаполнитьТоварыПроцентомТорговойНадбавкиПоОснованию(ДанныеЗаполнения.ДокументОснование[0], ЭтотОбъект);
			ИнициализироватьДокумент(ДанныеЗаполнения.ДокументОснование[0]);
			 
		КонецЕсли;
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ);
	
	РозничныеПродажиВызовСервера_Локализация.ПроверитьКорректностьЗаполненияДокументаТорговаяНадбавка(ЭтотОбъект,Отказ);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	Документы.РегистрацияТорговыхНадбавок.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	РозничныеПродажиВызовСервера_Локализация.ОтразитьТорговыеНадбавки(ДополнительныеСвойства, Движения, Отказ);

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСерверУТ.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ПроведениеСерверУТ.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСерверУТ.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	ИнициализироватьДокумент();

КонецПроцедуры

#КонецОбласти

#КонецЕсли
