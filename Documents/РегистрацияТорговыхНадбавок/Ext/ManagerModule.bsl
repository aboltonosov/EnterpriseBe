#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область Отчеты

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры

// Инициализирует таблицы значений, содержащие данные табличных частей документа
// Таблицы значений сохраняет в свойствах структуры "ДополнительныеСвойства"
//
Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства) Экспорт

	Запрос = Новый Запрос(
	
	"ВЫБРАТЬ
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Ссылка.Дата КАК Период,
	|	ТаблицаТовары.СтавкаТННовый КАК Надбавка
	|ИЗ
	|	Документ.РегистрацияТорговыхНадбавок.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)");

	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Результат = Запрос.Выполнить().Выгрузить();
	
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаТорговыеНадбавки", Результат);

КонецПроцедуры

// Заполняет торговые надбавки из документа-основания
//
// Параметры:
//  Основание - Ссылка на поступление или перемещение.
//
Процедура ЗаполнитьТоварыПроцентомТорговойНадбавкиПоОснованию(Основание, ДокументОбъект = Неопределено, ЗаполнитьФормуПодбора = Ложь, ТаблицаТоваров = Неопределено) Экспорт
	
	Если Основание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяТаблицы = Основание.Метаданные().Имя;
	
	Если  НЕ ЗаполнитьФормуПодбора Тогда
		Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ
		|	ДокументЗакупки.Ссылка КАК ДокументОснование,
		|	ДокументЗакупки.Склад КАК Склад,
		|	НЕ ДокументЗакупки.Проведен КАК ЕстьОшибкиПроведен
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК ДокументЗакупки
		|ГДЕ
		|	ДокументЗакупки.Ссылка = &Ссылка";
		
		Если ТипЗнч(Основание) = тип("ДокументСсылка.ПеремещениеТоваров")Тогда	
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПоступлениеТоваровУслуг", "ПеремещениеТоваров");	
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ДокументЗакупки.Склад", "ДокументЗакупки.СкладПолучатель");	
		КонецЕсли;	
		
		Запрос.УстановитьПараметр("Ссылка", Основание);
		ВыборкаШапка = Запрос.Выполнить().Выбрать();
		ВыборкаШапка.Следующий();
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(ВыборкаШапка.ДокументОснование,,ВыборкаШапка.ЕстьОшибкиПроведен);		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, ВыборкаШапка);
	КонецЕсли;	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТН.Надбавка, 0) <> 0
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ТН.Надбавка, 0) <> ВложенныйЗапрос.СтавкаТН
	|						ТОГДА ТН.Надбавка
	|				КОНЕЦ
	|		ИНАЧЕ ЕСТЬNULL(ТН.Надбавка, 0)
	|	КОНЕЦ КАК СтавкаТН,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТН.Надбавка, 0) <> 0
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(ТН.Надбавка, 0) <> ВложенныйЗапрос.СтавкаТН
	|						ТОГДА ВложенныйЗапрос.СтавкаТН
	|				КОНЕЦ
	|		ИНАЧЕ ВложенныйЗапрос.СтавкаТН
	|	КОНЕЦ КАК СтавкаТННовый,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.СтавкаТНРез,
	|	ВложенныйЗапрос.Склад
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.Номенклатура КАК Номенклатура,
	|		Товары.Характеристика КАК Характеристика,
	|		Товары.Склад КАК Склад,
	|		МАКСИМУМ(ТорговыеНадбавки.Период) КАК Период,
	|		Товары.СтавкаТН КАК СтавкаТН,
	|		Товары.НомерСтроки КАК НомерСтроки,
	|		Товары.СтавкаТН КАК СтавкаТНРез
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.Товары КАК Товары
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТорговыеНадбавки КАК ТорговыеНадбавки
	|			ПО Товары.Номенклатура = ТорговыеНадбавки.Номенклатура
	|				И (ТорговыеНадбавки.Характеристика = Товары.Характеристика)
	|				И Товары.Ссылка.Дата >= ТорговыеНадбавки.Период
	|	ГДЕ
	|		Товары.Ссылка = &Ссылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Товары.Ссылка,
	|		Товары.Характеристика,
	|		Товары.Номенклатура,
	|		Товары.СтавкаТН,
	|		Товары.НомерСтроки,
	|		Товары.Склад,
	|		Товары.СтавкаТН) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТорговыеНадбавки КАК ТН
	|		ПО ВложенныйЗапрос.Период = ТН.Период
	|			И ВложенныйЗапрос.Номенклатура = ТН.Номенклатура
	|			И ВложенныйЗапрос.Характеристика = ТН.Характеристика
	|			И ВложенныйЗапрос.Склад = ТН.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Если ТипЗнч(Основание) = тип("ДокументСсылка.ПеремещениеТоваров")Тогда	
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПоступлениеТоваровУслуг", "ПеремещениеТоваров");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Товары.Ссылка.Склад", "Товары.Ссылка.СкладПолучатель");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Товары.Склад", "Товары.Ссылка.СкладПолучатель");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", Основание);
		
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Приемник = ?(ЗаполнитьФормуПодбора, ТаблицаТоваров, ДокументОбъект.Товары);
	Пока Выборка.Следующий() Цикл
		
		Если  НЕ Значениезаполнено(Выборка.СтавкаТННовый) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Приемник.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ПроверитьУстановкуТН(Выборка.СтавкаТН, Выборка.НомерСтроки, НоваяСтрока, Выборка.СтавкаТНРез, НЕ ЗаполнитьФормуПодбора);
	КонецЦикла
		
КонецПроцедуры

Процедура ПроверитьУстановкуТН(СтавкаТН, НомерСтроки, СтрокаЗаполнения, СтавкаЗаполнения, ВыдаватьСообщения)
	
	Если СтавкаТН = NULL Тогда
		СтрокаЗаполнения.СтавкаТН = СтавкаЗаполнения;
		//Если ВыдаватьСообщения ТОгда
		//	ТекстОшибки = НСтр("ru='Ставка торговой надбавки в строке ""%НомерСтроки%"" списка ""Товары"" не изменялась'");
		//	ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%", НомерСтроки);
		//	
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		//	ТекстОшибки,
		//	,
		//	ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", НомерСтроки, "СтавкаТН"));
		//	
		//КонецЕсли;
	КонецЕсли;
	
Конецпроцедуры

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

#КонецОбласти 


#КонецЕсли
