
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	
	ЗаполнитьТаблицуТоваров();
	
	ПодборТоваровКлиентСервер.СформироватьЗаголовокФормыПодбора(Заголовок, Параметры.Основание);
	
	УстановитьПризнакиПрисутствияСтрокиВДокументе(ТаблицаТоваров, Параметры.МассивСтрокТЧ);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Если Модифицированность Тогда

		Ответ = Вопрос(НСтр("ru = 'Данные были изменены. Перенести изменения в документ?'"), РежимДиалогаВопрос.ДаНетОтмена);

		Если Ответ = КодВозвратаДиалога.Да Тогда

			Отказ = Истина;
			// Снятие модифицированности, т.к. перед закрытием признак проверяется.
			Модифицированность = Ложь;

			ПеренестиТоварыВДокумент();

		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда

			Отказ = Истина;

		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТаблицаТоваровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.ТаблицаТоваров.ТекущиеДанные <> Неопределено Тогда
		Если Поле.Имя = "ТаблицаТоваровЗаказПоставщику" Тогда
			ОткрытьЗначение(Элементы.ТаблицаТоваров.ТекущиеДанные.ЗаказПоставщику);
		ИначеЕсли Поле.Имя = "ТаблицаТоваровСделка" Тогда
			ОткрытьЗначение(Элементы.ТаблицаТоваров.ТекущиеДанные.Сделка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокументВыполнить()

	ПеренестиТоварыВДокумент();

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТоварыВыполнить()
	
	ВыбратьВсеТоварыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьТоварыВыполнить()
	
	ВыбратьВсеТоварыНаСервере(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


#Область Прочее

&НаСервере
Процедура ВыбратьВсеТоварыНаСервере(ЗначениеВыбора = Истина)
	
	Для Каждого СтрокаТаблицы Из ТаблицаТоваров.НайтиСтроки(Новый Структура("СтрокаВыбрана", Не ЗначениеВыбора)) Цикл
		
		СтрокаТаблицы.СтрокаВыбрана = ЗначениеВыбора;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьТоварыВХранилище()

	Возврат ПоместитьВоВременноеХранилище(ТаблицаТоваров.Выгрузить(Новый Структура("СтрокаВыбрана", Истина)));

КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуТоваров()

	Документы.РегистрацияТорговыхНадбавок.ЗаполнитьТоварыПроцентомТорговойНадбавкиПоОснованию(Параметры.Основание,,Истина, ТаблицаТоваров);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиТоварыВДокумент()

	// Снятие модифицированности, т.к. перед закрытием признак проверяется.
	Модифицированность = Ложь;

	Закрыть();

	ОповеститьОВыборе(Новый Структура("АдресТоваровВХранилище", ПоместитьТоварыВХранилище()));

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаТоваров.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаТоваров.ПрисутствуетВДокументе");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Gray);

КонецПроцедуры

Процедура УстановитьПризнакиПрисутствияСтрокиВДокументе(ТаблицаТовары,  МассивСтрокТЧ) 

	Для Каждого СтрокаТаб Из ТаблицаТовары Цикл
	
		СтрокаТаб.ПрисутствуетВДокументе = Ложь;
		
		Для Каждого ТекСтрока Из МассивСтрокТЧ Цикл
			
			Если ТекСтрока.Номенклатура = СтрокаТаб.Номенклатура  
				И ТекСтрока.Характеристика = СтрокаТаб.Характеристика
				И (ТекСтрока.СтавкаТН = СтрокаТаб.СтавкаТН
				ИЛИ ТекСтрока.СтавкаТННовый = СтрокаТаб.СтавкаТН) Тогда
				
				СтрокаТаб.ПрисутствуетВДокументе = Истина;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		СтрокаТаб.СтрокаВыбрана = Не СтрокаТаб.ПрисутствуетВДокументе;
		
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти
