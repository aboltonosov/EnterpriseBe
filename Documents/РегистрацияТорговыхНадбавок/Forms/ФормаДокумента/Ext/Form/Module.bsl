&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПриЧтенииСозданииНаСервере();
		
	КонецЕсли;

	// Обработчик подсистемы "Свойства"
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	//ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	//ДополнительныеПараметры.Вставить("ОтложеннаяИнициализация", Истина);
	//УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
		
	// Подсистема "ЭлектронныеДокументы"
	УстановитьТекстСостоянияЭДНаСервере();

	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	Элементы.Товары.ПодчиненныеЭлементы.ТоварыСклад.Видимость = ЭтаФорма.Объект.Склад.ЭтоГруппа;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);

	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	РозничныеПродажиВызовСервера_Локализация.ДобавитьРеквизитРозничныйВидЦен(ЭтаФорма);	
	ЭтаФорма["РозничныйВидЦен"] = Объект.Склад.РозничныйВидЦены;
	
	СтруктураНаименованийТабличныхЧастей = Новый Структура("Товары");
	ЗаполнитьСлужебныеРеквизитыПоНоменклатуре(СтруктураНаименованийТабличныхЧастей);
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизитыПоНоменклатуре(СтруктураНаименованийТабличныхЧастей)
	
	ПараметрыЗаполненияРеквизитов = Новый Структура;
	ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются",
											Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакАртикул",
											Новый Структура("Номенклатура", "Артикул"));
	
												
	Если СтруктураНаименованийТабличныхЧастей.Свойство("Товары") Тогда
		НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Объект.Товары, ПараметрыЗаполненияРеквизитов);
		
	КонецЕсли;	
		
КонецПроцедуры


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Объект.Товары,
		Новый Структура("ЗаполнитьПризнакХарактеристикиИспользуются, ЗаполнитьПризнакАртикул",
			Новый Структура("Номенклатура", "ХарактеристикиИспользуются"),
			Новый Структура("Номенклатура", "Артикул")));

	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ПроверитьЗаполнениеСкладаВТЧ();
		СвернутьСтроки();
		МассивОшибок = ПроверитьКорректностьЗаполненияСтавокТН();
		
		Если МассивОшибок.Количество() > 0 Тогда
			Для Счетчик = 0 По МассивОшибок.Количество() - 1 Цикл
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для номенклатуры " + МассивОшибок[Счетчик] + " установлено несколько торговых надбавок!");
			КонецЦикла; 
			Отказ = Истина;
		КонецЕсли; 
		//ЗакупкиКлиент.ПроверитьСопоставленнуюНоменклатуруПоставщика(Объект, Отказ, НеВыполнятьПроверкуСопоставленнойНоменклатурыПоставщика);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьКорректностьЗаполненияСтавокТН()

	МассивОшибок = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Склад,
		|	Товары.СтавкаТННовый
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Склад КАК Склад,
		|	ВТ.Номенклатура КАК Номенклатура,
		|	ВТ.Характеристика КАК Характеристика,
		|	ВТ.СтавкаТННовый КАК СтавкаТННовый
		|ИЗ
		|	ВТ КАК ВТ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ.Номенклатура,
		|	ВТ.Характеристика,
		|	ВТ.СтавкаТННовый,
		|	ВТ.Склад
		|ИТОГИ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтавкаТННовый)
		|ПО
		|	Склад,
		|	Номенклатура,
		|	Характеристика";
	
	Запрос.УстановитьПараметр("Товары", Объект.Товары.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСклад = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаСклад.Следующий() Цикл
		// Вставить обработку выборки ВыборкаСклад
	
		ВыборкаНоменклатура = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаНоменклатура.Следующий() Цикл
			// Вставить обработку выборки ВыборкаНоменклатура
	        Если ВыборкаНоменклатура.СтавкаТННовый > 1 Тогда
				МассивОшибок.Добавить(ВыборкаНоменклатура.Номенклатура);
			КонецЕсли; 		
		КонецЦикла;
	КонецЦикла;

	Возврат МассивОшибок;
	
КонецФункции // ()
 
&НаСервере
Процедура ПроверитьЗаполнениеСкладаВТЧ()

	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Склад", Справочники.Склады.ПустаяСсылка());
	НайденныеСтроки = Объект.Товары.НайтиСтроки(ПараметрыОтбора);
		
	Если НайденныеСтроки.Количество() > 0 Тогда
		Для Счетчик = 0 По НайденныеСтроки.Количество() - 1 Цикл
			НайденныеСтроки[Счетчик].Склад = Объект.Склад;
		КонецЦикла; 	
	КонецЕсли; 
	
КонецПроцедуры
 
&НаСервере
Процедура СвернутьСтроки() 
	
	Товары = Объект.Товары.Выгрузить();	
	Товары.Свернуть("Номенклатура, Характеристика, Склад, СтавкаТН, СтавкаТННовый");
	Объект.Товары.Загрузить(Товары);
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Документ.РегистрацияТорговыхНадбавок.Форма.ФормаПодбораТоваровИзОснования" 
		ИЛИ ИсточникВыбора.ИмяФормы = "Обработка.ПодборТоваровВДокументЗакупки.Форма.Форма" Тогда
		
		ЗаполнитьТоварыИзПодбораИзВременногоХранилищаСервер(ВыбранноеЗначение.АдресТоваровВХранилище);
		
	ИначеЕсли ИсточникВыбора.ИмяФормы = "ОбщаяФорма.ФормаСтавкиВРознице_Локализация" Тогда	
		Если ВыбранноеЗначение <> Неопределено Тогда
			Если ВыбранноеЗначение.СтавкаТН > 0 Тогда
				Если ВыбранноеЗначение.ВыделенныеСтроки Тогда
					НазначитьСтавкуТорговойНадбавкиНаСервере(ВыбранноеЗначение.СтавкаТН, Элементы.Товары.ВыделенныеСтроки);
				Иначе	
				    НазначитьСтавкуТорговойНадбавкиНаСервере(ВыбранноеЗначение.СтавкаТН);
				КонецЕсли; 
				РозничныеПродажиКлиент_Локализация.ОповеститьОбОкончанииНазначенияТорговыхНадбавок(ВыбранноеЗначение.СтавкаТН);	
			КонецЕсли; 		
		КонецЕсли;			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// Подсистема "Свойства"
	//Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
	//	ОбновитьЭлементыДополнительныхРеквизитов();
	//КонецЕсли;
	
	//// Подсистема "ЭлектронныеДокументы"
	//Если ИмяСобытия = "ОбновитьСостояниеЭД" Тогда
	//	УстановитьТекстСостоянияЭДНаСервере();
	//ИначеЕсли ИмяСобытия = "ОбновитьДокументИБПослеЗаполнения" Тогда
	//	ЭтаФорма.Прочитать();
	//ИначеЕсли ИмяСобытия = "ОбновитьДокументИБПослеЗаполненияИзФайла" Тогда
	//	ПриИзмененииСоглашенияСервер();
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СостояниеЭДНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбменСконтрагентамиКлиент.ОткрытьАктуальныйЭД(Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)

	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекущаяСтрока.Характеристика);
	СтруктураДействий.Вставить("ЗаполнитьПризнакАртикул", Новый Структура("Номенклатура", "Артикул"));
	СтруктураДействий.Вставить("НоменклатураПриИзмененииПереопределяемый", Новый Структура("ИмяФормы, ИмяТабличнойЧасти",
		ЭтаФорма.ИмяФормы, "Товары"));

	СтруктураДействий.Вставить("ЗаполнитьСтавкуТорговойНадбавки", Новый Структура("Склад,Дата",Объект.Склад, Объект.Дата));
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыХарактеристикаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ХарактеристикаПриИзмененииПереопределяемый", Новый Структура("ИмяФормы, ИмяТабличнойЧасти",
		ЭтаФорма.ИмяФормы, "Товары"));

	СтруктураДействий.Вставить("ЗаполнитьСтавкуТорговойНадбавки", Новый Структура("Склад,Дата",Объект.Склад, Объект.Дата));
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Провести(ЭтаФорма, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтаФорма, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Записать(ЭтаФорма, Истина);
	
КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

#Область ПодбораЗаполненияТоваров

&НаКлиенте
Процедура ПодобратьТовары(Команда)

	ПараметрыФормы = Новый Структура;

	ПараметрыФормы.Вставить("Документ",   Объект.Ссылка);
	ПараметрыФормы.Вставить("Склад",      Объект.Склад);
	Валюта = ПредопределенноеЗначение("Справочник.Валюты.ПустаяСсылка");
	
	
	ПараметрыФормы.Вставить("Валюта",                                  Валюта);
	ПараметрыФормы.Вставить("Дата",                                    ДатаДокумента(Объект.Дата));
	ПараметрыФормы.Вставить("РегистрироватьЦеныПоУсловиям",            Ложь);
	ПараметрыФормы.Вставить("РежимПодбораБезКоличественныхПараметров", Истина);
	ПараметрыФормы.Вставить("РежимПодбораБезСуммовыхПараметров",       Истина);
	ПараметрыФормы.Вставить("СкрыватьКомандуЦеныНоменклатуры",         Истина);
	ПараметрыФормы.Вставить("СкрыватьКомандуОстаткиНаСкладах",         Истина);
	ПараметрыФормы.Вставить("СкрыватьКнопкуЗапрашиватьКоличество",     Истина);
	ПараметрыФормы.Вставить("СкрыватьРучныеСкидки", Истина);
	
	ОткрытьФорму("Обработка.ПодборТоваровВДокументЗакупки.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);

КонецПроцедуры

&НаКлиенте
Процедура ПодобратьТоварыИзДокументаОснования(Команда)
	ПодборТоваровИзДокументаОснования();
КонецПроцедуры

&НаКлиенте
Процедура ПодборТоваровИзДокументаОснования()
	
	Если НЕ Значениезаполнено(Объект.ДокументОснование) ТОгда
		Возврат;
	КонецЕсли;	
	
	МассивСтрокТЧ = Новый Массив;
	Для Каждого СтрокаТЧ Из Объект.Товары Цикл
		
		//Если СтрокаТЧ.КодСтроки <> 0 Тогда
			МассивСтрокТЧ.Добавить(Новый Структура("Номенклатура,Характеристика, СтавкаТН, СтавкаТННовый", 
			                                СтрокаТЧ.Номенклатура, СтрокаТЧ.Характеристика,СтрокаТЧ.СтавкаТН, 
											СтрокаТЧ.СТавкаТННовый));
		//КонецЕсли;
		
	КонецЦикла;
	
	ПараметрыПодбора = Новый Структура(
		"Основание,
		|Склад,
		|МассивСтрокТЧ,
		|Организация",
		Объект.ДокументОснование,
		Объект.Ссылка,
		МассивСтрокТЧ
		);
	
	ОткрытьФормуМодально(
		"Документ.РегистрацияТорговыхНадбавок.Форма.ФормаПодбораТоваровИзОснования",
		ПараметрыПодбора,
		ЭтаФорма);

КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнитьИзДокументаОснования(Команда)
	
	Если НЕ Значениезаполнено(Объект.ДокументОснование) ТОгда
		Возврат;
	КонецЕсли;	

	
	//Если Не РаботаСДиалогамиКлиент.ПроверитьНаличиеСтрокВСписке(Объект.Товары, "Товары") Тогда
	//	Возврат;
	//КонецЕсли;
	

	Если Объект.Товары.Количество() > 0 Тогда
		
		ОтветНаВопрос = Вопрос(НСтр("ru='Таблица ""Товары"" будет перезаполнена. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
		
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьДокументПоОснованиюСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТоварыПоОтбору(Команда)
	
	ПараметрыФормы = Новый Структура("УникальныйИдентификатор", УникальныйИдентификатор);
	АдресВоВременномХранилище = ОткрытьФормуМодально("Обработка.ПодборТоваровПоОтбору.Форма.Форма", ПараметрыФормы, ЭтаФорма);
	Если ЗначениеЗаполнено(АдресВоВременномХранилище) Тогда
		ЗаполнитьТоварыИзПодбораИзВременногоХранилищаСервер(АдресВоВременномХранилище,Истина);
	КонецЕсли;
	
		
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокиБезИзменения(Команда)
	
	МассивУдаляемыхСтрок = Новый Массив;
	
	Для каждого текСтрока Из Объект.Товары  Цикл
		Если ТекСтрока.СтавкаТН = ТекСтрока.СтавкаТННовый Тогда
		     МассивУдаляемыхСтрок.Добавить(текСтрока);
		КонецЕсли; 
	КонецЦикла; 
	
	Для каждого текСтрока Из   МассивУдаляемыхСтрок Цикл
		Объект.Товары.Удалить(текСтрока);
    КонецЦикла;	
КонецПроцедуры

#КонецОбласти

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	НоменклатураСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтаФорма);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыНоменклатура.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыХарактеристика.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.Номенклатура");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.FireBrick);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<пропущена при регистрации>'"));

КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

#Область ПриИзмененииРеквизитов

#КонецОбласти

#Область ПодсистемаЭлектронныедокументы

&НаСервере
Процедура УстановитьТекстСостоянияЭДНаСервере()
	
	ТекстСостоянияЭД = ОбменСБанкамиКлиентСервер.ПолучитьТекстСостоянияЭД(Объект.Ссылка, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ЗаполнитьТоварыИзПодбораИзВременногоХранилищаСервер(АдресВоВременномХранилище, ЗаполнитьТН = Ложь)
	
	Товары = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	Для Каждого ТекСтрока Из Товары Цикл
		НоваяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		Если ЗаполнитьТН  Тогда
			СтруктураДействий = Новый Структура;
			СтруктураДействий.Вставить("ЗаполнитьСтавкуТорговойНадбавки", Новый Структура("Склад,Дата",Объект.Склад, Объект.Дата));		
			КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, КэшированныеЗначения);
		КонецЕсли;
	КонецЦикла;
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Объект.Товары,
		Новый Структура("ЗаполнитьПризнакХарактеристикиИспользуются, ЗаполнитьПризнакАртикул",
			Новый Структура("Номенклатура", "ХарактеристикиИспользуются"),
			Новый Структура("Номенклатура", "Артикул")));
	
			
			
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьТоварыИзВременногоХранилищаСервер(АдресВоВременномХранилище)
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	
	Для каждого ТекСтрока Из ТаблицаТоваров Цикл
		
		МассивСтрокКоллекции = Объект.Товары.НайтиСтроки(Новый Структура("НомерСтроки", ТекСтрока.НомерСтроки));
		Если МассивСтрокКоллекции.Количество() <> 1 Тогда
			Продолжить;
		Иначе
			СтрокаКоллекции = МассивСтрокКоллекции[0];
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтрокаКоллекции, ТекСтрока);
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ЗаполнитьСтавкуТорговойНадбавки", Новый Структура("Склад,Дата",Объект.Склад, Объект.Дата));		
		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаКоллекции, СтруктураДействий, КэшированныеЗначения);
		

	КонецЦикла;
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Объект.Товары,
		Новый Структура("ЗаполнитьПризнакХарактеристикиИспользуются, ЗаполнитьПризнакАртикул",
			Новый Структура("Номенклатура", "ХарактеристикиИспользуются"),
			Новый Структура("Номенклатура", "Артикул")));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ДатаДокумента(Дата)
	
	Возврат ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата());
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств(Команда)
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтавкуТН(Команда)
	
	Если Не РозничныеПродажиКлиент_Локализация.ВозможноНазначениеТорговойНадбавки(Объект, "Товары", НСтр("ru='Товары'")) Тогда
		Возврат;
	КонецЕсли;
	
	РозничныеПродажиКлиент_Локализация.ОткрытьФормуФормаСтавкиВРознице(ЭтаФорма, Истина, Ложь);

КонецПроцедуры


&НаСервере
Процедура ЗаполнитьДокументПоОснованиюСервер()
	
	Если НЕ Значениезаполнено(Объект.ДокументОснование) ТОгда
		Возврат;
	КонецЕсли;	

	
	Объект.Товары.Очистить();
	
	Документы.РегистрацияТорговыхНадбавок.ЗаполнитьТоварыПроцентомТорговойНадбавкиПоОснованию(Объект.ДокументОснование, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтавкуТНДляВыделенныхСтрок(Команда)
	
	Если Элементы.Товары.ВыделенныеСтроки <> Неопределено  Тогда
		СтрокиТабличнойЧасти = Новый Массив();
		Для Каждого ТекСтрока Из Элементы.Товары.ВыделенныеСтроки Цикл
			НайденнаяСтрока = Объект.Товары.НайтиПоИдентификатору(ТекСтрока);
			СтрокиТабличнойЧасти.Добавить(НайденнаяСтрока);
		КонецЦикла;
		
		Если СтрокиТабличнойЧасти.Количество() = 0 Тогда
			ТекстПредупреждения = НСтр("ru='Торговая надбавка не может быть назначена.'");
			Предупреждение(ТекстПредупреждения);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	РозничныеПродажиКлиент_Локализация.ОткрытьФормуФормаСтавкиВРознице(ЭтаФорма, Истина, Истина);	
	
КонецПроцедуры


&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	Если НЕ ЭтоГруппаСкладов(Объект.Склад) Тогда
		Для каждого Строка Из Объект.Товары Цикл
			Строка.Склад = Объект.Склад; 	
		КонецЦикла; 	
	КонецЕсли; 
		
КонецПроцедуры


&НаСервереБезКонтекста
Функция ЭтоГруппаСкладов(Склад)

	Возврат Склад.ЭтоГруппа;	

КонецФункции // ()

&НаСервере
Процедура НазначитьСтавкуТорговойНадбавкиНаСервере(СтавкаТорговойНадбавки, Знач ВыделенныеСтроки = Неопределено) 

	РозничныеПродажиВызовСервера_Локализация.НазначитьРозничныеСтавки(Объект, "Товары", СтавкаТорговойНадбавки, "СтавкаТННовый", "РегистрацияТорговыхНадбавок", ЭтаФорма["РозничныйВидЦен"], ВыделенныеСтроки);
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти
