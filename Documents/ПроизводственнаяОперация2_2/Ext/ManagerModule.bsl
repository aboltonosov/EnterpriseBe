#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Команды

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти

#Область СтатусДокумента

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
//	МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
//	НовыйСтатус - Строка - Имя нового статуса
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Запрос - Запрос проверки перед сменой статуса
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыПроизводственныхОпераций[НовыйСтатус];
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка                КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
		|	ТаблицаДокументов.Статус                КАК ТекущийСтатус,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
		|	&Статус                                 КАК НовыйСтатус,
		|	ПРЕДСТАВЛЕНИЕ(&Статус)                  КАК ПредставлениеНовогоСтатуса,
		|	ВЫБОР
		|		КОГДА ТаблицаДокументов.Статус = &Статус
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                                   КАК СтатусСовпадает,
		|	ТаблицаДокументов.Проведен              КАК Проведен,
		|	ТаблицаДокументов.ПометкаУдаления       КАК ПометкаУдаления,
		|	ИСТИНА                                  КАК ЗаписьПроведением
		|ИЗ
		|	Документ.ПроизводственнаяОперация2_2 КАК ТаблицаДокументов
		|ГДЕ
		|	ТаблицаДокументов.Ссылка В(&МассивДокументов)");
		
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
//	ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	НовыйСтатус - Перечисление - Новый статус
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Булево - Истина, в случае успешного завершения проверки
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Возврат Истина; // Для документа "ПроизводственнаяОперация2_2" дополнительные проверки отсутствуют
	
КонецФункции

// Выполняет действия необходимые при установки нового статуса документа
//
// Параметры:
//  Объект - ДанныеФормыСтруктура или ДокументОбъект - объект, в котором изменяется статус.
//
Процедура ЗаполнитьРеквизитыПриУстановкиСтатуса(Объект) Экспорт
	
	ОперацияЗавершена = ОперацияЗавершена(Объект.Статус);
	УправлениеПроизводством.УстановитьДатуПоОтметке(ОперацияЗавершена, Объект.ДатаВыполнения, , ОперацияЗавершена);
	
	ЗаполнитьБригадуВТрудозатратахПоИсполнителю(Объект);
	
	ЗаполнитьСтатусыУказанияСерий(Объект);
	
КонецПроцедуры

// Процедура заполняет статусы указания серий в строках табличных частей
// 
Процедура ЗаполнитьСтатусыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = Документы.ПроизводственнаяОперация2_2.ПараметрыУказанияСерий(Объект);
	
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий.ВыходныеИзделия);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Объект, ПараметрыУказанияСерий.МатериалыИРаботы);
	
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Включает/отключает использование свойств документа.
//
Процедура УстановитьИспользованиеСвойств() Экспорт
	
	ПараметрыНабора = УправлениеСвойствами.СтруктураПараметровНабораСвойств();
	ПараметрыНабора.Используется = Константы.ИспользоватьПооперационноеУправление.Получить();
	
	УправлениеСвойствами.УстановитьПараметрыНабораСвойств(
		"Документ_ПроизводственнаяОперация2_2", ПараметрыНабора);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область Серии

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	
	ИменаРеквизитов = "Дата, Статус, Этап";
	
	Возврат ИменаРеквизитов;
	
КонецФункции

// Возвращает параметры указания серий для товаров, указанных в документе
//
// Параметры:
//  Объект	 - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
// 
// Возвращаемое значение:
//  Структура - Состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий.
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = Новый Структура;
	
	Спецификация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Этап, "Спецификация");
	
	#Область ВыходныеИзделия
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Документ.ПроизводственнаяОперация2_2";
	
	ПараметрыУказанияСерийТЧ.ПараметрыЗапроса.Вставить("Спецификация", Спецификация);
	
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад = "Подразделение";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары = "ВыходныеИзделия";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии = "ВыходныеИзделияСерии";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад", Новый Структура());
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры  = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатурыСклад", Новый Структура());
	
	ПараметрыУказанияСерийТЧ.СерииПриПланированииОтгрузкиУказываютсяВТЧСерии = Истина;
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтражениеВыходныхИзделийВМаршрутныхЛистах);
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерийТЧ.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	
	ПараметрыУказанияСерийТЧ.ФактОтбора = ОперацияЗавершена(Объект.Статус);
	
	ПараметрыУказанияСерийТЧ.Дата = Объект.Дата;
	
	ПараметрыУказанияСерийТЧ.ИменаПолейДляОпределенияРаспоряжения.Добавить("Ссылка");
	
	ПараметрыУказанияСерий.Вставить("ВыходныеИзделия", ПараметрыУказанияСерийТЧ);
	
	#КонецОбласти
	
	#Область МатериалыИРаботы
	ПараметрыУказанияСерийТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерийТЧ.ПолноеИмяОбъекта = "Документ.ПроизводственнаяОперация2_2";
	
	ПараметрыУказанияСерийТЧ.ПараметрыЗапроса.Вставить("Спецификация", Спецификация);
	
	ПараметрыУказанияСерийТЧ.ИмяПоляСклад = "Подразделение";
	ПараметрыУказанияСерийТЧ.ИмяТЧТовары = "МатериалыИРаботы";
	ПараметрыУказанияСерийТЧ.ИмяТЧСерии  = "МатериалыИРаботы";
	
	ПараметрыУказанияСерийТЧ.УчитыватьСебестоимостьПоСериям = Ложь;
	
	ПараметрыУказанияСерийТЧ.ИспользоватьСерииНоменклатуры =
		НоменклатураСервер.ИспользуетсяСправочноеУказаниеСерийВМаршуртныхЛистах(
			Спецификация, Перечисления.ВидыСтрокДереваСпецификаций.Материал);
	
	ПараметрыУказанияСерийТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПередачаВПроизводствоОтгрузка);
	
	ПараметрыУказанияСерийТЧ.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерийТЧ.РегистрироватьСерии = Истина; // всегда используется форма регистрации серий (в ней можно также выбрать из остатков)
	ПараметрыУказанияСерийТЧ.ПланированиеОтгрузки = Ложь;
	ПараметрыУказанияСерийТЧ.ПланированиеОтбора = Ложь;
	
	ПараметрыУказанияСерийТЧ.ФактОтбора = ОперацияЗавершена(Объект.Статус);
	
	ПараметрыУказанияСерийТЧ.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.Вставить("МатериалыИРаботы", ПараметрыУказанияСерийТЧ);
	#КонецОбласти
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает значение распоряжения на поступление или отгрузку.
//
// Параметры:
//  ЗначенияПолейДляОпределенияРаспоряжения	 - Структура - состав полей определяется значением
//  поля ИменаПолейДляОпределенияРаспоряжения параметров указания серий этого документа
// 
// Возвращаемое значение:
//  ДокументСсылка.ЭтапПроизводства2_2 - Ссылка на распоряжение.
//
Функция РаспоряжениеНаВыполнениеСкладскойОперации(ЗначенияПолейДляОпределенияРаспоряжения) Экспорт
	Возврат ЗначенияПолейДляОпределенияРаспоряжения.Ссылка;
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.ИмяТЧТовары = "ВыходныеИзделия" Тогда
		
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийВыходныеИзделия();
		
	ИначеЕсли ПараметрыУказанияСерий.ИмяТЧТовары = "МатериалыИРаботы" Тогда
		
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийМатериалыИРаботы();
		
	КонецЕсли;                                                        
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область Прочее

// Назначает рабочий центр выбранным операциям операциям
//
// Параметры:
//  Операция	 - ДокументСсылка.ПроизводственнаяОперация2_2, Массив	 - документ или массив документов "Производственная операция"
//  РабочийЦентр - СправочникСсылка.РабочиеЦентры						 - назначаемый рабочий центр
//
Процедура НазначитьРабочийЦентрОперациям(Операция, РабочийЦентр) Экспорт
	
	МассивСсылок = УправлениеПроизводствомКлиентСервер.МассивЗначений(Операция);
	
	Если Не РабочийЦентр.Пустая() Тогда
		ВидРабочегоЦентра = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РабочийЦентр, "ВидРабочегоЦентра");
	Иначе
		ВидРабочегоЦентра = Неопределено;
	КонецЕсли;
	
	Для каждого Операция Из МассивСсылок Цикл
		
		ДокументОбъект = Операция.ПолучитьОбъект();
		
		Попытка
			ДокументОбъект.Заблокировать();
		Исключение
			ТекстИсключения = СтрШаблон(
				НСтр("ru = 'Не удалось изменить документ %1. Возможно, документ в настоящий момент редактируется.'"),
				Операция);
			ВызватьИсключение ТекстИсключения;
		КонецПопытки;
		
		ДокументОбъект.РабочийЦентр = РабочийЦентр;
		
		Если ВидРабочегоЦентра <> Неопределено Тогда
			ДокументОбъект.ВидРабочегоЦентра = ВидРабочегоЦентра;
		КонецЕсли;
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		ДокументОбъект.Разблокировать();
		
	КонецЦикла;
	
КонецПроцедуры

// Получает данные выполненных документов.
//
// Параметры:
//  Этап - ДокументСсылка.ЭтапПроизводства2_2 - этап для отбора операций.
// 
// Возвращаемое значение:
//  Структура - содержит свернутые данные табличных частей выполненных операций.
//
Функция ДанныеЗавершенныхОпераций(Этап) Экспорт
	
	ТекстЗапроса = ТекстЗапросаДанныеЗавершенныхОпераций();
	
	ТекстОтборДокументов = 
		"Таблица.Ссылка.Этап = &Этап
		|И Таблица.Ссылка.Статус В (&Статусы)
		|И Таблица.Ссылка.Проведен";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборДокументов", ТекстОтборДокументов);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Этап", Этап);
	Запрос.УстановитьПараметр("Статусы", СтатусыЗавершенныхОпераций());
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Результат = Новый Структура;
	
	Результат.Вставить("ВыходныеИзделия", МассивРезультатов[0].Выгрузить());
	Результат.Вставить("ВыходныеИзделияСерии", МассивРезультатов[1].Выгрузить());
	Результат.Вставить("МатериалыИРаботы", МассивРезультатов[2].Выгрузить());
	Результат.Вставить("Трудозатраты", МассивРезультатов[3].Выгрузить());
	
	Возврат Результат;
	
КонецФункции

// Возвращает настройки использования опциональных табличных частей в операциях.
//
// Параметры:
//  Подразделение - СправочникСсылка.СтруктураПредприятия - подразделение документа.
//  МаршрутнаяКарта	- СправочникСсылка.МаршрутныеКарты - маршрутная карта документа.
// 
// Возвращаемое значение:
//  Структура - настройки.
//
Функция НастройкиУчета(Подразделение, МаршрутнаяКарта) Экспорт
	
	ПараметрыПодразделения = ПроизводствоСервер.ПараметрыПроизводственногоПодразделения(Подразделение);
	
	ПараметрыМаршрутнойКарты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		МаршрутнаяКарта, "ИспользоватьМатериалы, ИспользоватьВыходныеИзделия");
	
	Результат = Новый Структура;
	
	Результат.Вставить("ИспользоватьМатериалы",
		ПараметрыПодразделения.ИспользоватьМатериалыВОперациях
		И ПараметрыМаршрутнойКарты.ИспользоватьМатериалы);
	
	Результат.Вставить("ИспользоватьВыходныеИзделия",
		ПараметрыПодразделения.ИспользоватьВыходныеИзделияВОперациях
		И ПараметрыМаршрутнойКарты.ИспользоватьВыходныеИзделия);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСерверУТ.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос();
	ТекстыЗапроса = Новый СписокЗначений;
	ПереопределениеРасчетаПараметров = Новый Структура;
	
	ПолноеИмяДокумента = "Документ.ПроизводственнаяОперация2_2";
	
	Если ИмяРегистра = "ДвиженияСерийТоваров" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТабличнаяЧасть";
		
	Иначе
		
		ШаблонИсключения = НСтр("ru = 'В документе %1 не реализована адаптация текста запроса формирования движений по регистру %2.'");
		ТекстИсключения = СтрШаблон(ШаблонИсключения, ПолноеИмяДокумента, ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	
	Результат.ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(
		ТекстЗапроса,
		ПолноеИмяДокумента,
		СинонимТаблицыДокумента,
		ПереопределениеРасчетаПараметров);
	
	Возврат Результат;
	
КонецФункции

// Используется в механизмах обновления ИБ
//
// Параметры:
//  ИмяРегистра	 - Строка	 - имя регистра
// 
// Возвращаемое значение:
//  Соответствие - 
//
Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Дата, Подразделение");
	
	Запрос.УстановитьПараметр("Период", Реквизиты.Дата);
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	ТабличнаяЧасть.Количество КАК Количество,
	|	&Подразделение КАК Отправитель,
	|	&Подразделение КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПотреблениеМатериаловПриПроизводстве) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	ЛОЖЬ КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПроизводственнаяОперация2_2.МатериалыИРаботы КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка),
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество,
	|	&Подразделение,
	|	&Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтражениеВыходныхИзделийВМаршрутныхЛистах),
	|	&Ссылка,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ПроизводственнаяОперация2_2.ВыходныеИзделия КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка),
	|	ТабличнаяЧасть.Серия,
	|	ТабличнаяЧасть.Количество,
	|	&Подразделение,
	|	&Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтражениеВыходныхИзделийВМаршрутныхЛистах),
	|	&Ссылка,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.ПроизводственнаяОперация2_2.ВыходныеИзделияСерии КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Серии

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийВыходныеИзделия()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Количество КАК Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	ВЫБОР
	|		КОГДА ТребуетсяСправочноеУказаниеСерий.Спецификация ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|				И ТоварыДляЗапроса.Количество > 0
	|			ТОГДА 2
	|		КОГДА НЕ &ФактОтбора
	|				И ЕСТЬNULL(СерииДляЗапроса.Количество, 0) = 0
	|			ТОГДА 21
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТребуетсяСправочноеУказаниеСерий КАК ТребуетсяСправочноеУказаниеСерий
	|		ПО ТребуетсяСправочноеУказаниеСерий.Спецификация = &Спецификация
	|			И ТребуетсяСправочноеУказаниеСерий.Номенклатура = Товары.Номенклатура
	|			И ТребуетсяСправочноеУказаниеСерий.ВидСтрокиСпецификации = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокДереваСпецификаций.ВыходноеИзделие)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтатусУказанияСерийСтарый
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийМатериалыИРаботы()

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Товары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтатусУказанияСерийСтарый,
	|	ВЫБОР
	|		КОГДА ТребуетсяСправочноеУказаниеСерий.Спецификация ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА Товары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) И НЕ &ФактОтбора
	|			ТОГДА 21
	|		КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|				И Товары.Количество > 0
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТребуетсяСправочноеУказаниеСерий КАК ТребуетсяСправочноеУказаниеСерий
	|		ПО ТребуетсяСправочноеУказаниеСерий.Спецификация = &Спецификация
	|			И ТребуетсяСправочноеУказаниеСерий.Номенклатура = Товары.Номенклатура
	|			И ТребуетсяСправочноеУказаниеСерий.ВидСтрокиСпецификации = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокДереваСпецификаций.Материал)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтатусУказанияСерийСтарый
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ЗаполнитьБригадуВТрудозатратахПоИсполнителю(Объект)
	
	Если ЗначениеЗаполнено(Объект.Исполнитель) Тогда
		
		Для каждого Строка Из Объект.Трудозатраты Цикл
			
			Если НЕ ЗначениеЗаполнено(Строка.Бригада) Тогда
				
				Строка.Бригада = Объект.Исполнитель;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаДанныеЗавершенныхОпераций()
	
	Возврат 
	"ВЫБРАТЬ
	|	Таблица.Ссылка.ДатаВыполнения КАК ДатаВыполнения,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	СУММА(Таблица.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(Таблица.Количество) КАК Количество,
	|	Таблица.Упаковка КАК Упаковка,
	|	Таблица.Серия КАК Серия
	|ИЗ
	|	Документ.ПроизводственнаяОперация2_2.ВыходныеИзделия КАК Таблица
	|ГДЕ
	|	&ОтборДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Упаковка,
	|	Таблица.Серия,
	|	Таблица.Ссылка.ДатаВыполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка.ДатаВыполнения КАК ДатаВыполнения,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Серия КАК Серия,
	|	СУММА(Таблица.Количество) КАК Количество
	|ИЗ
	|	Документ.ПроизводственнаяОперация2_2.ВыходныеИзделияСерии КАК Таблица
	|ГДЕ
	|	&ОтборДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка.ДатаВыполнения,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка.ДатаВыполнения КАК ДатаВыполнения,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Упаковка КАК Упаковка,
	|	Таблица.Серия КАК Серия,
	|	СУММА(Таблица.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(Таблица.Количество) КАК Количество
	|ИЗ
	|	Документ.ПроизводственнаяОперация2_2.МатериалыИРаботы КАК Таблица
	|ГДЕ
	|	&ОтборДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Упаковка,
	|	Таблица.Серия,
	|	Таблица.Ссылка.ДатаВыполнения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка.ДатаВыполнения КАК ДатаВыполнения,
	|	Таблица.ВидРабот КАК ВидРабот,
	|	Таблица.Бригада КАК Бригада,
	|	Таблица.НазначениеРабот КАК НазначениеРабот,
	|	СУММА(Таблица.Количество) КАК Количество
	|ИЗ
	|	Документ.ПроизводственнаяОперация2_2.Трудозатраты КАК Таблица
	|ГДЕ
	|	&ОтборДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка.ДатаВыполнения,
	|	Таблица.ВидРабот,
	|	Таблица.Бригада,
	|	Таблица.НазначениеРабот";
	
КонецФункции

Функция СтатусыЗавершенныхОпераций() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить(Перечисления.СтатусыПроизводственныхОпераций.Выполнена);
	Результат.Добавить(Перечисления.СтатусыПроизводственныхОпераций.НеВыполнена);
	
	Возврат Результат;
	
КонецФункции

Функция ОперацияЗавершена(Статус) Экспорт
	
	Статусы = СтатусыЗавершенныхОпераций();
	
	Возврат НЕ Статусы.Найти(Статус) = Неопределено;
	
КонецФункции

Функция ПредставлениеДатыВыполнения(Статус) Экспорт
	
	Если Статус = Перечисления.СтатусыПроизводственныхОпераций.Выполнена Тогда
		
		Результат = НСтр("ru = 'Дата выполнения'");
		
	Иначе
		
		Результат = НСтр("ru = 'Дата завершения'");
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ОбновлениеИнформационнойБазыУТ.ЗаполнитьПустойРеквизитЗначениемПоУмолчаниюЗарегистрироватьДанныеКОбработке(
		Параметры,
		"Документ.ПроизводственнаяОперация2_2",
		"ИдентификаторОперации");
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ПроизводственнаяОперация2_2";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
		Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Параметры.ОбработкаЗавершена = НЕ Результат.ЕстьДанныеДляОбработки;
	Если Параметры.ОбработкаЗавершена Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	// МК заполняется пользователем
	// МК нельзя сменить в этапе, после создания операций
	Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОбъектыДляОбработки.Ссылка                      КАК Ссылка,
		|	ОбъектыДляОбработки.Ссылка.ВерсияДанных         КАК ВерсияДанных,
		|	ОбъектыДляОбработки.Ссылка.Операция             КАК Операция,
		|	ОбъектыДляОбработки.Ссылка.Этап.МаршрутнаяКарта КАК МаршрутнаяКарта
		|ИЗ
		|	" + Результат.ИмяВременнойТаблицы + " КАК ОбъектыДляОбработки");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	КешированныеЗначения = Новый Соответствие;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектИзменен = Ложь;
		
		НачатьТранзакцию();
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(Выборка.Ссылка, Выборка.ВерсияДанных, Параметры.Очередь);
			Если ДокументОбъект <> Неопределено Тогда
				
				Если Не ЗначениеЗаполнено(ДокументОбъект.ИдентификаторОперации) Тогда
				
					ДанныеМаршрутнойКарты = КешированныеЗначения[Выборка.МаршрутнаяКарта];
					Если ДанныеМаршрутнойКарты = Неопределено Тогда
						
						ДанныеМаршрутнойКарты = Справочники.МаршрутныеКарты.ДанныеМаршрутнойКарты(
							Выборка.МаршрутнаяКарта, 
							1,
							,
							,
							"Операции");
							
						КешированныеЗначения.Вставить(Выборка.МаршрутнаяКарта, ДанныеМаршрутнойКарты);
						
					КонецЕсли;
					
					Если ДанныеМаршрутнойКарты <> Неопределено Тогда
						
						ОтборОперация = Новый Структура("Операция", Выборка.Операция);
						Операции = ДанныеМаршрутнойКарты.Операции;
						НайденныеСтроки = Операции.НайтиСтроки(ОтборОперация);
						Если НайденныеСтроки.ВГраница() <> -1 Тогда
							ДокументОбъект.ИдентификаторОперации = НайденныеСтроки[0].ИдентификаторОперации;
							ОбъектИзменен = Истина;
						КонецЕсли;
						
					КонецЕсли;
				
				КонецЕсли;
				
				Если Не ДокументОбъект.ПометкаУдаления И Не ДокументОбъект.Проведен Тогда
					
					ДокументОбъект.Проведен = Истина;
					ОбъектИзменен = Истина;
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект,,, РежимЗаписиДокумента.Запись);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			СобытиеЖурналаРегистрации = ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации();
			
			ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации, УровеньЖурналаРегистрации.Предупреждение,
				Выборка.Ссылка.Метаданные(), Выборка.Ссылка, ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
