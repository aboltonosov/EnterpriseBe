#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.Печать
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	СписокКодов = КонтролируемыеСделкиПовтИсп.ПолучитьСписокКодовНаименованийСделки();
	Элементы.КодНаименованияСделки.СписокВыбора.Очистить();
	Для Каждого Код Из СписокКодов Цикл
		НовыйКод = Элементы.КодНаименованияСделки.СписокВыбора.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйКод, Код);
	КонецЦикла;
	
	УстановитьСписокВыбораДляКодаСтороныСделки();
	
	ЗаполнитьПолеНаименованияКода("ТНВЭД");
	ЗаполнитьПолеНаименованияКода("ОКВЭД");
	ЗаполнитьПолеНаименованияКода("ОКП");
	
	УправлениеФормой(ЭтаФорма);
	
	// ВводНаОсновании
	ВводНаОсновании.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюСоздатьНаОсновании);
	// Конец ВводНаОсновании

	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("КонтролируемаяСделкаИзменена", Объект.УведомлениеОКонтролируемойСделке);
	Если ПараметрыЗаписи.Свойство("НомерКонтролируемойСделкиИзменился") Тогда
		Оповестить("НомерКонтролируемойСделкиИзменился", Объект.УведомлениеОКонтролируемойСделке);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.Номер) И НЕ ТекущийОбъект.ПометкаУдаления Тогда
		ТекущийОбъект.Номер = КонтролируемыеСделки.ПолучитьСледующийНомерКонтролируемойСделкиУведомления(ТекущийОбъект.УведомлениеОКонтролируемойСделке);
	КонецЕсли;
	
	Если ТекущийОбъект.Номер <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийОбъект.Ссылка, "Номер") Тогда
		ПараметрыЗаписи.Вставить("НомерКонтролируемойСделкиИзменился", Истина);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриИзмененииУведмомленияОКонтролируемойСделкеНаСервере()

	ПараметрыУведомления = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.УведомлениеОКонтролируемойСделке,"Организация, Дата");
	
	Объект.Организация = ПараметрыУведомления.Организация;
	Объект.Дата        = ПараметрыУведомления.Дата;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура УведомлениеОКонтролируемойСделкеПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.УведомлениеОКонтролируемойСделке) Тогда 
		ПриИзмененииУведмомленияОКонтролируемойСделкеНаСервере();
	Иначе
		Объект.Организация = Неопределено;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КодНаименованияСделкиПриИзменении(Элемент)
	
	ИзменениеКодаНаименованияСделкиНаСервере();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметСделкиПриИзменении(Элемент)

	Если ЗначениеЗаполнено(Объект.ПредметСделки) Тогда
		
		ПараметрыПредметаСделки = ПолучитьПараметрыПредметаСделки(Объект.ПредметСделки);
		
		Если ЗначениеЗаполнено(ПараметрыПредметаСделки.ТипПредметаСделки) Тогда
			Объект.ТипПредметаСделки = ПараметрыПредметаСделки.ТипПредметаСделки;
		КонецЕсли;
		Объект.НаименованиеПредметаСделки = ПараметрыПредметаСделки.НаименованиеПредметаСделки;
		Если ЗначениеЗаполнено(ПараметрыПредметаСделки.СтранаПроисхожденияПредметаСделки) Тогда
			Объект.СтранаПроисхожденияПредметаСделки = ПараметрыПредметаСделки.СтранаПроисхожденияПредметаСделки;
		КонецЕсли;
		Объект.КодТНВЭД = ПараметрыПредметаСделки.КодТНВЭД;
		Объект.КодОКП   = ПараметрыПредметаСделки.КодОКП;
		Объект.КодОКВЭД = ПараметрыПредметаСделки.КодОКВЭД;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПредметаСделкиНажатие(Элемент)
	
	ПараметрыОткрытияФормы = Новый Структура("ПредметСделки", Объект.ПредметСделки);
	Если ТипЗнч(Объект.ПредметСделки) = Тип("СправочникСсылка.Номенклатура") И ЗначениеЗаполнено(Объект.ПредметСделки) Тогда
		ОткрытьФорму("Отчет.ПредметыКонтролируемыхСделок.Форма.ФормаИзмененияДанныхПоПредметуСделки", ПараметрыОткрытияФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСделкиПриИзменении(Элемент)
	
	УстановитьКодСтороныСделки(ЭтаФорма);
	ПересчитатьСуммыДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСуммыСделокПриИзменении(Элемент)
	
	ПересчитатьСуммыДокумента();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ТНВЭДКодПриИзменении(Элемент)
	
	ЗаполнитьПолеНаименованияКода("ТНВЭД")
	
КонецПроцедуры

&НаКлиенте
Процедура ОКПКодПриИзменении(Элемент)
	
	ЗаполнитьПолеНаименованияКода("ОКП");
	
КонецПроцедуры

&НаКлиенте
Процедура ОКВЭДКодПриИзменении(Элемент)
	
	ЗаполнитьПолеНаименованияКода("ОКВЭД");
	
КонецПроцедуры

&НаКлиенте
Процедура СделкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИзменениеСтрокиСделки();

КонецПроцедуры

&НаКлиенте
Процедура СделкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ИзменениеСтрокиСделки(Истина, Копирование);
КонецПроцедуры

&НаКлиенте
Процедура СделкиПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	ИзменениеСтрокиСделки();
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеСтрокиСделки(ЭтоНовый = Ложь, Копирование = Ложь)
	
	ДанныеЗаполнения	= ?(Не ЭтоНовый ИЛИ Копирование, ПолучитьСтруктуруТабличнойЧастиСделки(), Новый Структура);
	СтруктураПараметров	= Новый Структура;
	СтруктураПараметров.Вставить("ЭтоНовый",			ЭтоНовый);
	СтруктураПараметров.Вставить("Копирование",			Копирование);
	СтруктураПараметров.Вставить("ДанныеЗаполнения",	ДанныеЗаполнения);
		
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СтруктураПараметров", СтруктураПараметров);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ИзменениеСтрокиСделкиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Документ.КонтролируемаяСделка.Форма.Лист1Б",
		СтруктураПараметров, ЭтаФорма,,,, ОповещениеОЗакрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеСтрокиСделкиЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	СтруктураДанныхСтроки = РезультатЗакрытия;
	
	Если СтруктураДанныхСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ЭтоНовый = ДополнительныеПараметры.СтруктураПараметров.ЭтоНовый;
	
	Если ЭтоНовый Тогда
		СтрокаТаблицы = Объект.Сделки.Добавить();
	Иначе
		СтрокаТаблицы = Объект.Сделки.НайтиПоИдентификатору(Элементы.Сделки.ТекущаяСтрока);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтруктураДанныхСтроки);
	ПересчитатьСуммыДокумента();
	
	Модифицированность	= Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОбщегоНазначенияУТКлиент.Записать(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ЗаписатьИЗакрыть(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Форма.Элементы.КодСтороныСделки.Доступность = Форма.Объект.КодНаименованияСделки <> "";
	
	Форма.Элементы.СуммаДоходов.ТолькоПросмотр  = НЕ Форма.Объект.РедактироватьСуммыСделок;
	Форма.Элементы.СуммаРасходов.ТолькоПросмотр = НЕ Форма.Объект.РедактироватьСуммыСделок;
	
	ВыборАналитики = НЕ Форма.Объект.Контрагент = Неопределено И ТипЗнч(Форма.Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты");
	Форма.Элементы.ДоговорКонтрагента.Доступность = ВыборАналитики;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПараметрыПредметаСделки(ПредметСделки);
	
	ПараметрыПредмета = Новый Структура("НаименованиеПредметаСделки, СтранаПроисхожденияПредметаСделки, ТипПредметаСделки,
											|КодТНВЭД, КодОКП, КодОКВЭД");
	Если ТипЗнч(ПредметСделки)=Тип("СправочникСсылка.Номенклатура") Тогда
		Предмет = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПредметСделки, "НаименованиеПолное, ТипНоменклатуры, КодТНВЭД, КодОКП, КодОКВЭД");
		ПараметрыПредмета.НаименованиеПредметаСделки = Предмет.НаименованиеПолное;
		ПараметрыПредмета.СтранаПроисхожденияПредметаСделки = Справочники.СтраныМира.Россия;
		Если Предмет.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Работа ИЛИ Предмет.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
			ПараметрыПредмета.ТипПредметаСделки = Перечисления.ТипыПредметовКонтролируемыхСделок.РаботаУслуга;
			ПараметрыПредмета.КодОКВЭД = Предмет.КодОКВЭД;
		Иначе
			ПараметрыПредмета.ТипПредметаСделки = Перечисления.ТипыПредметовКонтролируемыхСделок.Товар;
			ПараметрыПредмета.КодТНВЭД = Предмет.КодТНВЭД;
			ПараметрыПредмета.КодОКП   = Предмет.КодОКП;
		КонецЕсли;
	Иначе
		Предмет = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПредметСделки, "Наименование");
		ПараметрыПредмета.НаименованиеПредметаСделки = Предмет.Наименование;
		ПараметрыПредмета.ТипПредметаСделки          = Перечисления.ТипыПредметовКонтролируемыхСделок.ИнойОбъектГражданскихПрав;
		
	КонецЕсли;
	
	Возврат(ПараметрыПредмета);
	
КонецФункции

&НаКлиенте
Функция ПолучитьСтруктуруТабличнойЧастиСделки()

	СтрокаТаблицы	= Элементы.Сделки.ТекущиеДанные;
	Если СтрокаТаблицы = Неопределено Тогда
		Возврат Новый Структура;
	КонецЕсли;

	СтруктураТабличнойЧастиСделки = Новый Структура(
		"СтранаОтправкиТовара,
		|КодРегионаОтправкиТовара,
		|ГородОтправкиТовара,
		|НаселенныйПунктОтправкиТовара,
		|СтранаСовершенияСделки,
		|КодРегионаСовершенияСделки,
		|ГородСовершенияСделки,
		|НаселенныйПунктСовершенияСделки,
		|КодУсловийПоставки,
		|ЕдиницаИзмерения,
		|Количество,
		|Цена,
		|Стоимость,
		|ДатаСовершенияСделки");

	ЗаполнитьЗначенияСвойств(СтруктураТабличнойЧастиСделки, СтрокаТаблицы);
		
	Возврат СтруктураТабличнойЧастиСделки;

КонецФункции

&НаКлиенте
Процедура ПересчитатьСуммыДокумента()
	
	Если Объект.РедактироватьСуммыСделок Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДоход = 0;
	СуммаРасход = 0;
	Если Объект.ТипСделки = ПредопределенноеЗначение("Перечисление.ТипыКонтролируемыхСделок.ОсуществленРасход") Тогда 
		СуммаРасход = Объект.Сделки.Итог("Стоимость");
	ИначеЕсли Объект.ТипСделки = ПредопределенноеЗначение("Перечисление.ТипыКонтролируемыхСделок.ПолученДоход") Тогда 
		СуммаДоход = Объект.Сделки.Итог("Стоимость");
	КонецЕсли;
	
	Если Объект.СуммаДоходов <> СуммаДоход Тогда 
		Объект.СуммаДоходов = СуммаДоход;
	КонецЕсли;
	
	Если Объект.СуммаРасходов <> СуммаРасход Тогда 
		Объект.СуммаРасходов = СуммаРасход;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСписокВыбораДляКодаСтороныСделки()
	
	СоответствиеКодов = КонтролируемыеСделкиПовтИсп.ПолучитьСоответствиеКодовСтороныСделки();
	Элементы.КодСтороныСделки.СписокВыбора.Очистить();
	
	СписокКодов = СоответствиеКодов.Получить(Объект.КодНаименованияСделки);
	Если СписокКодов<>Неопределено Тогда
		Для Каждого Код Из СписокКодов Цикл
			НовыйКод = Элементы.КодСтороныСделки.СписокВыбора.Добавить();
			ЗаполнитьЗначенияСвойств(НовыйКод, Код);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьКодСтороныСделки(Форма)
	
	СписокКодовСтороныСделки = Форма.Элементы.КодСтороныСделки.СписокВыбора;
	Если СписокКодовСтороныСделки.Количество()>1 Тогда
		Форма.Объект.КодСтороныСделки = ?(Форма.Объект.ТипСделки = ПредопределенноеЗначение("Перечисление.ТипыКонтролируемыхСделок.ПолученДоход"),
			СписокКодовСтороныСделки[0].Значение, СписокКодовСтороныСделки[1].Значение);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ИзменениеКодаНаименованияСделкиНаСервере()
	
	УстановитьСписокВыбораДляКодаСтороныСделки();
	Если Объект.КодНаименованияСделки = "" Тогда
		Объект.КодСтороныСделки = "";
	ИначеЕсли Объект.КодСтороныСделки <> "" Тогда
		Если Элементы.КодСтороныСделки.СписокВыбора.НайтиПоЗначению(Объект.КодСтороныСделки) = Неопределено Тогда
			Объект.КодСтороныСделки = "";
		КонецЕсли;
	КонецЕсли;
	
	УстановитьКодСтороныСделки(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПолеНаименованияКода(ИмяКлассификатора)

	Классификатор = Объект["Код" + ИмяКлассификатора];
	ЭтаФорма[ИмяКлассификатора+"Наименование"] = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Классификатор, "Наименование");

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБСП

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// ВводНаОсновании
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ВводНаОсновании

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец МенюОтчеты

#КонецОбласти