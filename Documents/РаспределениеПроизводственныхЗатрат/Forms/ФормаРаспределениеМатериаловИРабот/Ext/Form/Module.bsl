
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Состояние",         ОтборСостояние);
	Параметры.Свойство("ПериодРегистрации", Период);
	Параметры.Свойство("Организация",       ОтборОрганизация);
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Период = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если Параметры.Свойство("ОформитьПроизводствоБезЗаказов") Тогда
		Элементы.ГруппаПроизводствоБезЗаказов.Видимость = Параметры.ОформитьПроизводствоБезЗаказов;
	Иначе
		Элементы.ГруппаПроизводствоБезЗаказов.Видимость = Ложь;
	КонецЕсли;
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МесяцСтрока = ОбщегоНазначенияУТКлиент.ПолучитьПредставлениеПериодаРегистрации(Период);
	ОбновитьСостояние();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_РаспределениеПроизводственныхЗатрат" Тогда
		
		ТекущиеДанные = Элементы.Материалы.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда
			Возврат
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, Параметр, "Наличие, Распределить, Распределено");
		ТекущиеДанные.Ссылка = Параметр.Ссылка;
		
		//++ НЕ УТКА
		Расшифровка = УправлениеПроизводствомКлиентСервер.РасшифровкаВходящегоОстатка(ТекущиеДанные);
		//-- НЕ УТКА
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Если Параметры.Свойство("Подразделение") Тогда
		Настройки["ОтборПодразделение"] = Параметры.Подразделение;
	КонецЕсли;
	Если Параметры.Свойство("Организация") Тогда
		Настройки["ОтборОрганизация"] = Параметры.Организация;
	КонецЕсли;
	Если Параметры.Свойство("ПериодРегистрации") Тогда
		Настройки["Период"] = Параметры.ПериодРегистрации;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ЗаполнитьМатериалы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МесяцСтрокаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("МесяцСтрокаНачалоВыбораЗавершение", ЭтотОбъект);
	ОбщегоНазначенияУТКлиент.НачалоВыбораПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, Период, ЭтаФорма, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаНачалоВыбораЗавершение(ВыбранныйПериод, ДополнительныеПараметры) Экспорт 
	
	Если ВыбранныйПериод <> Неопределено Тогда
		Период = ВыбранныйПериод;
		МесяцСтрока = ОбщегоНазначенияУТКлиент.ПолучитьПредставлениеПериодаРегистрации(Период);
	КонецЕсли;
	
	ЗаполнитьМатериалы();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Период = ДобавитьМесяц(Период, Направление);
	МесяцСтрока = ОбщегоНазначенияУТКлиент.ПолучитьПредставлениеПериодаРегистрации(Период);
	
	ЗаполнитьМатериалы();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцСтрокаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	ЗаполнитьМатериалы();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ЗаполнитьМатериалы();
КонецПроцедуры

&НаКлиенте
Процедура ОтборТипНоменклатурыПриИзменении(Элемент)
	ЗаполнитьМатериалы();
КонецПроцедуры

&НаКлиенте
Процедура СостояниеПриИзменении(Элемент)
	ОбновитьСостояние();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояние()
	
	Если ОтборСостояние = "Распределено" Тогда
		Элементы.Материалы.ОтборСтрок = Новый ФиксированнаяСтруктура("ТребуетсяРаспределить", Ложь);
	ИначеЕсли ОтборСостояние = "ТребуетсяРаспределить" Тогда
		Элементы.Материалы.ОтборСтрок = Новый ФиксированнаяСтруктура("ТребуетсяРаспределить", Истина);
	Иначе
		Элементы.Материалы.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыМатериалы

&НаКлиенте
Процедура ЗатратыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	РасшифроватьПоле(Поле.Имя, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элементы.Материалы.ТекущиеДанные;
	//++ НЕ УТКА
	Расшифровка = УправлениеПроизводствомКлиентСервер.РасшифровкаВходящегоОстатка(ТекущиеДанные);
	//-- НЕ УТКА
КонецПроцедуры

&НаКлиенте
Процедура МатериалыНаличиеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Материалы.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если ТекущиеДанные.Наличие > ТекущиеДанные.ВходящийОстаток Тогда
		ТекущиеДанные.Наличие = ТекущиеДанные.ВходящийОстаток;
		ТекстСообщения = НСтр("ru = 'Фактическое наличие материала в кладовой не может превышать входящий остаток.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	ТекущиеДанные.Распределить = ТекущиеДанные.ВходящийОстаток - ТекущиеДанные.Наличие - ТекущиеДанные.Распределено;
	
	СтруктураДанных = СтруктураДокумента();
	ЗаполнитьЗначенияСвойств(СтруктураДанных, ТекущиеДанные);
	СтруктураДанных.Дата = КонецМесяца(Период);
	
	ДокументСсылка = ЗаписатьКРаспределениюВДокумент(СтруктураДанных);
	
	Если ДокументСсылка <> Неопределено Тогда
		ТекущиеДанные.Ссылка = ДокументСсылка;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОткрытьДокументРаспределения(Команда)
	
	ОткрытьДокументРаспределения();

КонецПроцедуры

&НаКлиенте
Процедура КомандаРасшифроватьПоле(Команда)
	
	ТекущийЭлементЗатраты = Элементы.Материалы.ТекущийЭлемент;
	Если ТекущийЭлементЗатраты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ РасшифроватьПоле(ТекущийЭлементЗатраты.Имя) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Расшифровка выбранного поля не предусмотрена.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтчетДвижениеМатериаловВПроизводстве(Команда)
	
	ПараметрОрганизация = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
	Если Элементы.Материалы.ТекущиеДанные <> Неопределено Тогда
		ПараметрОрганизация = Элементы.Материалы.ТекущиеДанные.Организация;
	ИначеЕсли ЗначениеЗаполнено(ОтборОрганизация) Тогда
		ПараметрОрганизация = ОтборОрганизация;
	КонецЕсли;
	
	НастройкиОтчета = НастройкиОтчетаДвижениеМатериаловПолуфабрикатовРаботВПроизводстве(Период, ПараметрОрганизация, ОтборПодразделение);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыФормы.Вставить("ПользовательскиеНастройки", НастройкиОтчета);
	ПараметрыФормы.Вставить("КлючВарианта", "ДвижениеМатериаловПолуфабрикатовРаботВПроизводстве");
	
	ОткрытьФорму("Отчет.ДвижениеМатериаловПолуфабрикатовРаботВПроизводстве.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПечатьАктИнвентаризации(Команда)
	
	ПараметрОрганизация = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
	Если Элементы.Материалы.ТекущиеДанные <> Неопределено Тогда
		ПараметрОрганизация = Элементы.Материалы.ТекущиеДанные.Организация;
	ИначеЕсли ЗначениеЗаполнено(ОтборОрганизация) Тогда
		ПараметрОрганизация = ОтборОрганизация;
	КонецЕсли;
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("Организация",       ПараметрОрганизация);
	ПараметрыПечати.Вставить("Подразделение",     ОтборПодразделение);
	ПараметрыПечати.Вставить("Период",            Период);
	ПараметрыПечати.Вставить("Затраты",           Материалы);
	ПараметрыПечати.Вставить("НовоеПроизводство", Истина);
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Документ.РаспределениеПроизводственныхЗатрат", 
		"АктИнвентаризацииМатериаловИПолуфабрикатов", 
		ПараметрОрганизация, 
		Неопределено, 
		ПараметрыПечати);
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьМатериалы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОформитьПроизводствоБезЗаказов(Команда)
	
	//++ НЕ УТКА
	ПараметрыФормы = Новый Структура("ПериодРегистрации, Организация", Период, ОтборОрганизация);
	ОткрытьФорму("Обработка.ОформлениеПроизводстваБезЗаказов.Форма.ФормаРабочееМесто", ПараметрыФормы, ЭтаФорма);
	//-- НЕ УТКА
	
	Возврат; // в УТ, КА пустой
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Элементы.Материалы);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеФормы

&НаСервере
Процедура ЗаполнитьМатериалы()
	
	//++ НЕ УТКА
	ГраницаДатаОкончания = Новый Граница(КонецМесяца(Период), ВидГраницы.Включая);
	Запрос = Новый Запрос(Документы.РаспределениеПроизводственныхЗатрат.ТекстЗапросаМатериаловИРаботВКладовых());
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачалоПериода",            НачалоМесяца(Период));
	Запрос.УстановитьПараметр("ГраницаОкончаниеПериода",  ГраницаДатаОкончания);
	Запрос.УстановитьПараметр("ОкончаниеПериода",         КонецМесяца(Период));
	Запрос.УстановитьПараметр("ВсеПодразделения",         Не ЗначениеЗаполнено(ОтборПодразделение));
	Запрос.УстановитьПараметр("Подразделения",            ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ОтборПодразделение));
	Запрос.УстановитьПараметр("ВсеТипыНоменклатуры",      Не ЗначениеЗаполнено(ОтборТипНоменклатуры));
	Запрос.УстановитьПараметр("ТипНоменклатуры",          ОтборТипНоменклатуры);
	Запрос.УстановитьПараметр("Организации",              ДоступныеОрганизации(ОтборОрганизация));
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаЗатрат = Запрос.Выполнить().Выгрузить();
	ТаблицаЗатрат.Сортировать("Организация, Подразделение, Склад, Номенклатура, Характеристика, Серия");
	
	Материалы.Загрузить(ТаблицаЗатрат);
	//-- НЕ УТКА
	
	Возврат; // в УТ, КА пустой
	
КонецПроцедуры

//++ НЕ УТКА
&НаСервере
Функция ДоступныеОрганизации(Организация = Неопределено)
	
	СписокОрганизаций = Новый СписокЗначений;
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДанныеСправочника.Ссылка КАК Организация
		|ИЗ
		|	Справочник.Организации КАК ДанныеСправочника
		|ГДЕ
		|	(ДанныеСправочника.Ссылка = &Организация
		|	ИЛИ &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ИЛИ &Организация = НЕОПРЕДЕЛЕНО)
		|	И
		|	(ДанныеСправочника.Ссылка <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация))
		|");
		Запрос.УстановитьПараметр("Организация", Организация);
		МассивОрганизаций = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация");
		СписокОрганизаций.ЗагрузитьЗначения(МассивОрганизаций);
	Иначе
		СписокОрганизаций.Добавить(Организация);
	КонецЕсли;
	Возврат СписокОрганизаций;
	
КонецФункции
//-- НЕ УТКА
#КонецОбласти

#Область Прочее

&НаКлиентеНаСервереБезКонтекста
Функция СтруктураДокумента()
	
	СтруктураДокумента = Новый Структура("НовоеПроизводство, Дата, Организация, Подразделение, АналитикаУчетаНоменклатуры,
	|Склад, Номенклатура, Характеристика, Серия, СтатусУказанияСерий, Назначение, Ссылка, Распределить");
	
	СтруктураДокумента.НовоеПроизводство = Истина;
	
	Возврат СтруктураДокумента;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьДокументРаспределения()
	
	ТекущиеДанные = Элементы.Материалы.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Ссылка.Пустая() Тогда
		СтруктураОснования = СтруктураДокумента();
		СтруктураОснования.Дата = КонецМесяца(Период);
		ЗаполнитьЗначенияСвойств(СтруктураОснования, ТекущиеДанные);
		ПараметрыФормы = Новый Структура("Основание", СтруктураОснования);
	ИначеЕсли Не ТекущиеДанные.НовоеПроизводство Тогда
		Текст = НСтр("ru = 'Распределение выполнено документом для производства версии 2.1. Для работы с документом требуется перейти в рабочее место распределения 2.1.
			|Для распределения на производство версии 2.2 существующий документ распределения следует пометить на удаление.'");
		ПоказатьПредупреждение(, Текст);
		Возврат;
	Иначе
		ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.Ссылка);
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ВходящийОстаток",  ТекущиеДанные.ВходящийОстаток);
	ПараметрыФормы.Вставить("НачальныйОстаток", ТекущиеДанные.НачальныйОстаток);
	ПараметрыФормы.Вставить("Поступило",        ТекущиеДанные.Поступило);
	ПараметрыФормы.Вставить("Передано",         ТекущиеДанные.Передано);
	
	ОткрытьФорму("Документ.РаспределениеПроизводственныхЗатрат.ФормаОбъекта", ПараметрыФормы, Элементы.Материалы);
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьКРаспределениюВДокумент(СтруктураДанных)
	
	Если ЗначениеЗаполнено(СтруктураДанных.Ссылка) Тогда
		
		ДокументОбъект = СтруктураДанных.Ссылка.ПолучитьОбъект();
		ДокументОбъект.Распределить = СтруктураДанных.Распределить;
		
	Иначе
		
		ДокументОбъект = Документы.РаспределениеПроизводственныхЗатрат.СоздатьДокумент();
		ДокументОбъект.Заполнить(СтруктураДанных);
		
	КонецЕсли;
	
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Возврат ДокументОбъект.Ссылка;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//
	
	НоменклатураСервер.УстановитьУсловноеОформлениеСерийНоменклатуры(ЭтаФорма, Ложь, "МатериалыСерия", "Материалы.СтатусУказанияСерий", "Материалы.ТипНоменклатуры");

	// организация не отображается, если включен отбор

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.МатериалыОрганизация.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОтборОрганизация");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Справочники.Организации.ПустаяСсылка();

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	// подразделение не отображается, если включен отбор

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.МатериалыПодразделение.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОтборПодразделение");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Справочники.СтруктураПредприятия.ПустаяСсылка();

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// кладовая не отображается, если включен отбор по работам

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.МатериалыСклад.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОтборТипНоменклатуры");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ТипыНоменклатуры.Работа;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	// количество к распределению выделяется красным

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.МатериалыРаспределить.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Материалы.Распределить");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = 0;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветОтрицательногоЧисла);

	// если распределение не требуется

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.МатериалыРаспределить.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Материалы.Распределить");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;

	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Нстр("ru = '<не требуется>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);

	//

	НоменклатураСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтаФорма, 
																			 "МатериалыХарактеристика",
																		     "Материалы.ХарактеристикиИспользуются");

	// без назначения, если назначение не заполнено.

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.МатериалыНазначение.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Материалы.Назначение");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Нстр("ru = '<без назначения>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	// кладовая не указывается для работ

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.МатериалыСклад.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Материалы.ТипНоменклатуры");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ТипыНоменклатуры.Работа;

	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Нстр("ru = '<для товаров>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);

	// наличие для работ указать нельзя

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.МатериалыНаличие.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Материалы.ТипНоменклатуры");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ТипыНоменклатуры.Работа;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", Нстр("ru = '<для товаров>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);

КонецПроцедуры

&НаКлиенте
Функция РасшифроватьПоле(ИмяПоля, СтандартнаяОбработка = Ложь)
	
	Если ИмяПоля = "МатериалыРаспределить" Или ИмяПоля = "МатериалыРаспределено" Тогда
		
		СтандартнаяОбработка = Ложь;
		РасшифровкаМатериалыРаспределить();
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура РасшифровкаМатериалыРаспределить()

	ОткрытьДокументРаспределения();

КонецПроцедуры

&НаСервереБезКонтекста
Функция НастройкиОтчетаДвижениеМатериаловПолуфабрикатовРаботВПроизводстве(Знач Период, Знач Организация, Знач Подразделение)

	ОтчетОбъект = Отчеты.ДвижениеМатериаловПолуфабрикатовРаботВПроизводстве.Создать();
	
	ПользовательскиеНастройки = ОтчетОбъект.КомпоновщикНастроек.ПользовательскиеНастройки;
	
	УстанавливаемыеПараметры = Новый Соответствие;
	УстанавливаемыеПараметры.Вставить("Организация", Организация);
	УстанавливаемыеПараметры.Вставить("Период", Новый СтандартныйПериод(НачалоМесяца(Период), КонецМесяца(Период)));
	
	КомпоновкаДанныхКлиентСервер.УстановитьКоллекциюПараметров(ПользовательскиеНастройки, УстанавливаемыеПараметры);

	Если ЗначениеЗаполнено(Подразделение) Тогда
		Для каждого ЭлементОтбора Из ОтчетОбъект.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
			Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") 
				И ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение") Тогда
				
				ПользовательскаяНастройка = ОтчетыКлиентСервер.НайтиПользовательскуюНастройку(
													ПользовательскиеНастройки, 
													ЭлементОтбора.ИдентификаторПользовательскойНастройки);
													
				Если ПользовательскаяНастройка <> Неопределено Тогда
					Если ТипЗнч(ПользовательскаяНастройка.ПравоеЗначение) = Тип("СписокЗначений") Тогда
						ПользовательскаяНастройка.ПравоеЗначение.Добавить(Подразделение);
					Иначе
						ПользовательскаяНастройка.ПравоеЗначение = Подразделение;
					КонецЕсли; 
					ПользовательскаяНастройка.Использование = Истина;
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
			
	Возврат ПользовательскиеНастройки;

КонецФункции

#КонецОбласти

#КонецОбласти
