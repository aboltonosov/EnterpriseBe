
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		ПриСозданииЧтенииНаСервере();
	КонецЕсли;
	
	// МенюОтчеты
	ГосударственныеИнформационныеСистемыПереопределяемый.ЗаполнитьПодменюОтчеты(ЭтотОбъект);
	// Конец МенюОтчеты
	
	// ВводНаОсновании
	ГосударственныеИнформационныеСистемыПереопределяемый.ЗаполнитьПодменюСоздатьНаОсновании(ЭтотОбъект);
	// Конец ВводНаОсновании
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ВерсионированиеОбъектов") Тогда
		МодульВерсионированиеОбъектов = ОбщегоНазначения.ОбщийМодуль("ВерсионированиеОбъектов");
		МодульВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	СобытияФормЕГАИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеСостоянияЕГАИС"
		И Параметр.Ссылка = Объект.Ссылка Тогда
		
		Прочитать();
		ОбновитьСтатусЕГАИС();
		
	КонецЕсли;
	
	Если ИмяСобытия = "ВыполненОбменЕГАИС"
		И (Параметр = Неопределено
		Или (ТипЗнч(Параметр) = Тип("Структура") И Параметр.ОбновлятьСтатусЕГАИСВФормахДокументов)) Тогда
		
		Прочитать();
		ОбновитьСтатусЕГАИС();
		
	КонецЕсли;
	
	СобытияФормЕГАИСКлиентПереопределяемый.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииЧтенииНаСервере();
	
	СобытияФормЕГАИСПереопределяемый.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СобытияФормЕГАИСКлиентПереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьСтатусЕГАИС();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("Основание", Неопределено);
	Оповестить("Запись_ОстаткиЕГАИС", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОрганизацияЕГАИСПриИзменении(Элемент)
	
	Элементы.СтраницаКорректировкаОстатков.Видимость = ВидимостьКорректировкиОстатков(Объект.ОрганизацияЕГАИС, Объект.ВидДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействиеТребующееПроведения(ОповещениеПриЗавершении) Экспорт
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВыполнитьДействиеТребующееПроведенияПриЗакрытииВопроса",
		ЭтотОбъект,
		ДополнительныеПараметры);
	
	Если (Не ЗначениеЗаполнено(Объект.Ссылка)) Или (Не Объект.Проведен) Тогда
		
		ТекстВопроса = НСтр("ru = 'Остатки ЕГАИС не проведен. Провести?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	ИначеЕсли Модифицированность Тогда
		
		ТекстВопроса = НСтр("ru = 'Остатки ЕГАИС был изменен. Провести?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
	Иначе
		
		ВыполнитьОбработкуОповещения(ОповещениеПриЗавершении, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбработкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОчиститьСообщения();
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВыполнитьКомандуОбработатьНажатиеНавигационнойСсылкиПослеПроведения",
		ЭтотОбъект,
		НавигационнаяСсылкаФорматированнойСтроки);
	ВыполнитьДействиеТребующееПроведения(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	
	Элементы.СтраницаКорректировкаОстатков.Видимость = ВидимостьКорректировкиОстатков(Объект.ОрганизацияЕГАИС, Объект.ВидДокумента);
	
	ВидимостьСправки2 = Объект.ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросОстатковВРегистре1");
	
	Элементы.ОстаткиПоДаннымЕГАИССправка2.Видимость = ВидимостьСправки2;
	Элементы.КорректировкаОстатковСправка2.Видимость = ВидимостьСправки2;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
		"Документ.ОстаткиЕГАИС.Форма.ФормаДокумента.Записать");
	
	ОчиститьСообщения();
	Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоРасхождениям(Команда)
	
	ОчиститьСообщения();
	
	ЗаполнитьПоРасхождениямНаСервере();
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	ГосударственныеИнформационныеСистемыКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец МенюОтчеты

// ВводНаОсновании
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ГосударственныеИнформационныеСистемыКлиентПереопределяемый.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ВводНаОсновании

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормЕГАИСКлиентПереопределяемый.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если Не ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтотОбъект, Команда.Имя) Тогда
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
		"Документ.ОстаткиЕГАИС.Форма.ФормаДокумента.Провести");
	
	ОчиститьСообщения();
	ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение);
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина,
		"Документ.ОстаткиЕГАИС.Форма.ФормаДокумента.ПровестиИЗакрыть");
	
	ОчиститьСообщения();
	ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение);
	
	Если Записать(ПараметрыЗаписи) Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	ОбновитьСтатусЕГАИС();
	
	ДоступностьЭлементовФормы();
	
КонецПроцедуры

#Область Статус

&НаСервере
Процедура ОбновитьСтатусЕГАИС()

	ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.НеТребуется;
	ЦветТекста         = Неопределено;
	
	Если Объект.СтатусОбработки = Перечисления.СтатусыОбработкиОстатковЕГАИС.Новый
		Или Объект.СтатусОбработки = Перечисления.СтатусыОбработкиОстатковЕГАИС.ОшибкаПолученияОстатков Тогда 
		
		ДальнейшееДействие = Перечисления.ДальнейшиеДействияПоВзаимодействиюЕГАИС.ЗапроситеОстатки;
		
	КонецЕсли;
	
	Если Объект.СтатусОбработки = Перечисления.СтатусыОбработкиОстатковЕГАИС.ОшибкаПолученияОстатков Тогда
		
		ЦветТекста = ЦветаСтиля.ЕГАИССтатусОбработкиОшибкаПередачи;
		
	КонецЕсли;
	
	ТекстПредставление = Новый ФорматированнаяСтрока(Строка(Объект.СтатусОбработки),,ЦветТекста);
	
	СтатусЕГАИСПредставление = ИнтеграцияЕГАИС.ПредставлениеСтатусаЕГАИС(ТекстПредставление, ДальнейшееДействие);

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ЗапроситьОстатки" Тогда
		ЗапроситьОстатки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействиеТребующееПроведенияПриЗакрытииВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если Не РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	КонецЕсли;
	
	Если Не Модифицированность И Объект.Проведен Тогда
		
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКомандуОбработатьНажатиеНавигационнойСсылкиПослеПроведения(РезультатВопроса, НавигационнаяСсылкаФорматированнойСтроки) Экспорт
	
	ОбработатьНажатиеНавигационнойСсылки(НавигационнаяСсылкаФорматированнойСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьОстатки()
	
	ПараметрыЗапроса = ИнтеграцияЕГАИСКлиентСервер.ПараметрыИсходящегоЗапроса(Объект.ВидДокумента);
	ПараметрыЗапроса.ДокументСсылка = Объект.Ссылка;
	
	ИнтеграцияЕГАИСКлиент.НачатьФормированиеИсходящегоЗапроса(
		Новый ОписаниеОповещения("ПослеПередачиДанныхЕГАИС", ИнтеграцияЕГАИСКлиент),
		Объект.ВидДокумента,
		ПараметрыЗапроса);
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеЭлементамиФормы

&НаСервере
Процедура ДоступностьЭлементовФормы()
	
	РедактированиеФормыНеДоступно = (Объект.СтатусОбработки = Перечисления.СтатусыОбработкиОстатковЕГАИС.ПереданЗапрос);
	ПолученыОстатки = (Объект.СтатусОбработки = Перечисления.СтатусыОбработкиОстатковЕГАИС.ПолученыОстатки);
	
	Элементы.КорректировкаОстатковЗаполнитьРасхождения.Доступность = ПолученыОстатки;
	Элементы.ГруппаНередактируемыеПослеОтправкиРеквизитыОсновное.ТолькоПросмотр = РедактированиеФормыНеДоступно;
	Элементы.СтраницаОстаткиПоДаннымЕГАИС.ТолькоПросмотр                        = РедактированиеФормыНеДоступно;
	
	Элементы.СтраницаКорректировкаОстатков.Видимость = ВидимостьКорректировкиОстатков(Объект.ОрганизацияЕГАИС, Объект.ВидДокумента);
	
	ВидимостьСправки2 = Объект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.ЗапросОстатковВРегистре1;
	
	Элементы.ОстаткиПоДаннымЕГАИССправка2.Видимость = ВидимостьСправки2;
	Элементы.КорректировкаОстатковСправка2.Видимость = ВидимостьСправки2;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ЗаполнитьПоРасхождениямНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	ТекущийОбъект.ЗаполнитьПоРасхождениям();
	
	ЗначениеВРеквизитФормы(ТекущийОбъект, "Объект");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВидимостьКорректировкиОстатков(ОрганизацияЕГАИС, ВидДокумента)
	
	Если НЕ ЗначениеЗаполнено(ОрганизацияЕГАИС) ИЛИ НЕ ЗначениеЗаполнено(ВидДокумента) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ВидДокумента = Перечисления.ВидыДокументовЕГАИС.ЗапросОстатковВРегистре1;
	
КонецФункции

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтотОбъект, ИмяЭлемента);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

#КонецОбласти

#КонецОбласти