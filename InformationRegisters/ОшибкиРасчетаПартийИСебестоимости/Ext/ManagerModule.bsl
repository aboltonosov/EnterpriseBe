#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Возвращает массив идентификаторов протоколов расчета указанных организаций.
//
Функция ПолучитьПротоколыРасчета(ПериодРасчета, МассивОрганизаций, РасчетСебестоимости) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВариантыРасчета = ОтборПоВариантамРасчета(ПериодРасчета, РасчетСебестоимости);
	
	Если НЕ ЗначениеЗаполнено(ВариантыРасчета) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИдентификаторыПротоколов = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.ИдентификаторПротокола КАК ИдентификаторПротокола,
	|	Т.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.ОшибкиРасчетаПартийИСебестоимости КАК Т
	|ГДЕ
	|	Т.Период = &Период
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.ВариантРасчета В (&ВариантыРасчета)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИдентификаторПротокола,
	|	Организация
	|ИТОГИ ПО
	|	ИдентификаторПротокола";
	
	Запрос.УстановитьПараметр("Период", 		   НачалоМесяца(ПериодРасчета));
	Запрос.УстановитьПараметр("МассивОрганизаций", ОбщегоНазначенияУТКлиентСервер.Массив(МассивОрганизаций));
	Запрос.УстановитьПараметр("ВариантыРасчета",   ВариантыРасчета);
	
	ВыборкаИдентификаторов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаИдентификаторов.Следующий() Цикл
		
		ИдентификаторыПротоколов.Вставить(ВыборкаИдентификаторов.ИдентификаторПротокола, Новый Массив);
		
		Выборка = ВыборкаИдентификаторов.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИдентификаторыПротоколов[Выборка.ИдентификаторПротокола].Добавить(Выборка.Организация);
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ИдентификаторыПротоколов;
	
КонецФункции

// Проверяет наличие ошибок при прошлом запуске расчета.
//
Функция БылиОшибкиПриРасчете(ПериодРасчета, МассивОрганизаций, РасчетСебестоимости) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВариантыРасчета = ОтборПоВариантамРасчета(ПериодРасчета, РасчетСебестоимости);
	
	Если НЕ ЗначениеЗаполнено(ВариантыРасчета) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Ошибки в остатках после расчета относятся только к этапу расчета себестоимости.
	// Ошибки этапа распределения НДС не являются признаком необходимости пересчета партий/себестоимости,
	// т.к. данные, сформированные при распределения НДС, не всегда используются на следующих этапах расчета.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьЗаписи
	|ИЗ
	|	РегистрСведений.ОшибкиРасчетаПартийИСебестоимости КАК Т
	|ГДЕ
	|	Т.Период = &Период
	|	И Т.Организация В(&МассивОрганизаций)
	|	И Т.ВариантРасчета В (&ВариантыРасчета)
	|	И (&РасчетСебестоимости
	|		ИЛИ Т.ТипОшибки <> ЗНАЧЕНИЕ(Перечисление.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаВОстаткахПослеРасчета))
	|	И Т.ТипОшибки <> ЗНАЧЕНИЕ(Перечисление.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаРаспределенияНДС)
	|";
	
	Запрос.УстановитьПараметр("Период", 		     НачалоМесяца(ПериодРасчета));
	Запрос.УстановитьПараметр("МассивОрганизаций",   ОбщегоНазначенияУТКлиентСервер.Массив(МассивОрганизаций));
	Запрос.УстановитьПараметр("ВариантыРасчета",     ВариантыРасчета);
	Запрос.УстановитьПараметр("РасчетСебестоимости", РасчетСебестоимости);
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();
	
КонецФункции

// Получает массив вариантов расчета для отбора.
//
Функция ОтборПоВариантамРасчета(ПериодРасчета, РасчетСебестоимости)
	
	ВариантыРасчета = Новый Массив;
	
	Если УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВерсии22(НачалоМесяца(ПериодРасчета)) Тогда
		ВариантыРасчета.Добавить(Перечисления.ВариантыРасчетаПартийИСебестоимости.ПартииИСебестоимость);
		Если РасчетСебестоимости Тогда
			ВариантыРасчета.Добавить(Перечисления.ВариантыРасчетаПартийИСебестоимости.ФактическаяСебестоимость);
		КонецЕсли;
	Иначе
		Если НЕ РасчетСебестоимости Тогда
			// В партионном учете версии 2.1 информация об ошибках расчета не сохраняется
		Иначе
			ВариантыРасчета.Добавить(Перечисления.ВариантыРасчетаПартийИСебестоимости.ФактическаяСебестоимость);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВариантыРасчета;
	
КонецФункции

#КонецОбласти

#КонецЕсли
