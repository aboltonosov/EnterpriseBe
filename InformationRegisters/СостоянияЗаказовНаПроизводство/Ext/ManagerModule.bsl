#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Рассчитывает и записывает состояния заказов на производство.
//
// Параметры:
//  Заказы - ДокументСсылка.ЗаказНаПроизводство2_2, Массив - набор заказов.
//
Процедура ОтразитьСостояние(Заказы) Экспорт
	
	МассивСсылок = УправлениеПроизводствомКлиентСервер.МассивЗначений(Заказы);
	Если МассивСсылок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = ВыборкаИзменений(МассивСсылок);
	ЗаписатьСостояния(Выборка);
	
КонецПроцедуры

// Очищает состояния заказов на производство.
//
// Параметры:
//  Заказы - ДокументСсылка.ЗаказНаПроизводство2_2, Массив - набор заказов.
//
Процедура ОчиститьСостояние(Заказы) Экспорт
	
	МассивСсылок = УправлениеПроизводствомКлиентСервер.МассивЗначений(Заказы);
	Если МассивСсылок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого Ссылка Из МассивСсылок Цикл
		Набор = РегистрыСведений.СостоянияЗаказовНаПроизводство.СоздатьНаборЗаписей();
		Набор.Отбор.Заказ.Установить(Ссылка);
		Набор.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаВТСостоянияЭтапов()
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Таблица.Ссылка             КАК Ссылка,
		|	ВЫБОР
		|		КОГДА Таблица.КодСостояния = 1
		|			ТОГДА &ЭтапыТребуютУточнения
		|		КОГДА Таблица.КодСостояния = 2
		|			ТОГДА &ЭтапыГотовыКВыполнению
		|	КОНЕЦ                      КАК СостояниеНаМежцеховомУровне,
		|	Таблица.ТребуетОбеспечения КАК ТребуетОбеспечения
		|ПОМЕСТИТЬ ВТСостоянияЭтапов
		|ИЗ
		|	(ВЫБРАТЬ
		|		Таблица.Распоряжение КАК Ссылка,
		|		МИНИМУМ(ВЫБОР
		|				КОГДА Таблица.СостояниеНаМежцеховомУровне = &ЭтапыТребуютУточнения
		|					ТОГДА 1
		|				КОГДА Таблица.СостояниеНаМежцеховомУровне = &ЭтапыГотовыКВыполнению
		|					ТОГДА 2
		|				ИНАЧЕ 3
		|			КОНЕЦ) КАК КодСостояния,
		|		МАКСИМУМ(Таблица.ТребуетОбеспечения) КАК ТребуетОбеспечения
		|	ИЗ
		|		РегистрСведений.СостоянияЭтаповПроизводства КАК Таблица
		|	ГДЕ
		|		Таблица.Распоряжение В(&МассивСсылок)
		|		И (Таблица.СостояниеНаМежцеховомУровне В (&ЭтапыТребуютУточнения, &ЭтапыГотовыКВыполнению)
		|				ИЛИ Таблица.ТребуетОбеспечения)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Таблица.Распоряжение) КАК Таблица";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТТребуетсяСформироватьЭтапы()
	
	ТекстЗапроса = РегистрыНакопления.ПродукцияИПолуфабрикатыВПроизводстве.ТекстЗапросаВТТребуетсяСформироватьЭтапы();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТНезавершенныеЗаказы()
	
	ТекстЗапроса = РегистрыНакопления.ПродукцияИПолуфабрикатыВПроизводстве.ТекстЗапросаВТНезавершенныеЗаказы();
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаИзмененныеСостояния()

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	РеквизитыДокумента.Ссылка             КАК Заказ,
		|
		|	ВЫБОР
		|		КОГДА НЕ ВТСостоянияЭтапов.Ссылка ЕСТЬ NULL И ВТСостоянияЭтапов.СостояниеНаМежцеховомУровне = &ЭтапыТребуютУточнения
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовНаПроизводствоВОчереди.ТребуетсяПроверитьЭтапы)
		|	
		|		КОГДА НЕ ВТТребуетсяСформироватьЭтапы.Ссылка ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовНаПроизводствоВОчереди.ТребуетсяСформироватьЭтапы)
		|	
		|		КОГДА НЕ ВТСостоянияЭтапов.Ссылка ЕСТЬ NULL И ВТСостоянияЭтапов.СостояниеНаМежцеховомУровне = &ЭтапыГотовыКВыполнению
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовНаПроизводствоВОчереди.ТребуетсяПередатьЭтапыКВыполнению)
		|	
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовНаПроизводствоВОчереди.ПустаяСсылка)
		|
		|	КОНЕЦ                                 КАК СостояниеЭтапов,
		|
		|	ВЫБОР
		|		КОГДА НЕ ВТСостоянияЭтапов.Ссылка ЕСТЬ NULL И ВТСостоянияЭтапов.ТребуетОбеспечения
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовНаПроизводствоВОчереди.ТребуетсяОбеспечение)
		|		
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовНаПроизводствоВОчереди.ПустаяСсылка)
		|
		|	КОНЕЦ                                 КАК СостояниеОбеспечения,
		|
		|	ВЫБОР
		|		КОГДА ВТНезавершенныеЗаказы.Ссылка ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовНаПроизводствоВОчереди.Выполнен)
		|
		|		КОГДА &ИспользуетсяГрафикПроизводства
		|				И ИСТИНА В
		|					(ВЫБРАТЬ ПЕРВЫЕ 1
		|						ИСТИНА
		|					ИЗ
		|						РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК График
		|					ГДЕ
		|						График.ОкончаниеЭтапа  > РеквизитыДокумента.ДатаПотребности
		|						И График.Распоряжение  = РеквизитыДокумента.Ссылка
		|						И График.СтатусГрафика = &СтатусРабочийГрафик)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовНаПроизводствоВОчереди.НарушенаДатаПотребности)
		|
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовНаПроизводствоВОчереди.ПустаяСсылка)
		|
		|	КОНЕЦ                                 КАК СостояниеВыпуска,
		|
		|	ВЫБОР
		|		КОГДА РеквизитыДокумента.Проведен
		|				И РеквизитыДокумента.Статус = &СтатусКПроизводству
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ                                 КАК АктивныйСтатус
		|
		|ИЗ
		|	Документ.ЗаказНаПроизводство2_2 КАК РеквизитыДокумента
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСостоянияЭтапов КАК ВТСостоянияЭтапов
		|		ПО ВТСостоянияЭтапов.Ссылка = РеквизитыДокумента.Ссылка
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТребуетсяСформироватьЭтапы КАК ВТТребуетсяСформироватьЭтапы
		|		ПО ВТТребуетсяСформироватьЭтапы.Ссылка = РеквизитыДокумента.Ссылка
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНезавершенныеЗаказы КАК ВТНезавершенныеЗаказы
		|		ПО ВТНезавершенныеЗаказы.Ссылка = РеквизитыДокумента.Ссылка
		|
		|ГДЕ 
		|	РеквизитыДокумента.Ссылка В (&МассивСсылок)";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВыборкаИзменений(МассивСсылок)
	
	ТекстыЗапроса = Новый Массив;
	
	ТекстЗапроса = ТекстЗапросаВТСостоянияЭтапов();
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = ТекстЗапросаВТТребуетсяСформироватьЭтапы();
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = ТекстЗапросаВТНезавершенныеЗаказы();
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = ТекстЗапросаИзмененныеСостояния();
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("СтатусКПроизводству", Перечисления.СтатусыЗаказовНаПроизводство2_2.КПроизводству);
	Запрос.УстановитьПараметр("ИспользуетсяГрафикПроизводства", УправлениеПроизводствомПовтИсп.ИспользуетсяГрафикПроизводства());
	Запрос.УстановитьПараметр("СтатусРабочийГрафик", РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	Запрос.УстановитьПараметр("ПустаяСсылкаСостояние", Перечисления.СостоянияЗаказовНаПроизводствоВОчереди.ПустаяСсылка());
	Запрос.УстановитьПараметр("ЭтапыТребуютУточнения", Перечисления.СостоянияЭтаповНаМежцеховомУровне.ТребуетУточнения);
	Запрос.УстановитьПараметр("ЭтапыГотовыКВыполнению", Перечисления.СостоянияЭтаповНаМежцеховомУровне.ГотовКВыполнению);
	Запрос.УстановитьПараметр("ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров",
		Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить());
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос.Текст = УправлениеПроизводством.ОбъединитьТекстыЗапросаВПакет(ТекстыЗапроса);
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ЗаписатьСостояния(Выборка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Пока Выборка.Следующий() Цикл
		
		Набор = РегистрыСведений.СостоянияЗаказовНаПроизводство.СоздатьНаборЗаписей();
		Набор.Отбор.Заказ.Установить(Выборка.Заказ);
		
		ДобавитьЗаписьВНабор(Выборка, Набор);
	
		Попытка
			
			Набор.Записать(Истина);
			
		Исключение
			
			ТекстСообщения = НСтр("ru = 'Не удалось отразить состояние заказа: %Ссылка% по причине: %Причина%'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%",  Выборка.Заказ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			СобытиеЖурналаРегистрации = СобытиеЖурналаРегистрации();
			
			ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации, УровеньЖурналаРегистрации.Предупреждение,
				Выборка.Заказ.Метаданные(), Выборка.Заказ, ТекстСообщения);
				
		КонецПопытки;
		
	КонецЦикла;
	
КонецФункции

Процедура ДобавитьЗаписьВНабор(Выборка, Набор)
	
	Если Выборка.АктивныйСтатус
		И (Не Выборка.СостояниеЭтапов.Пустая()
			ИЛИ Не Выборка.СостояниеОбеспечения.Пустая()
			ИЛИ Не Выборка.СостояниеВыпуска.Пустая()
		) Тогда
		ЗаполнитьЗначенияСвойств(Набор.Добавить(), Выборка);
	КонецЕсли;

КонецПроцедуры

Функция СобытиеЖурналаРегистрации()
	
	Возврат НСтр("ru = 'Межцеховое управление.Ошибка отражения состояния заказов в очереди'",
					ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	
КонецФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Состояния.Заказ КАК Заказ
		|ИЗ
		|	РегистрСведений.СостоянияЗаказовНаПроизводство КАК Состояния
		|ГДЕ
		|	Состояния.СостояниеВыпуска = ЗНАЧЕНИЕ(Перечисление.СостоянияЗаказовНаПроизводствоВОчереди.Выполнен)");
	
	МассивСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку(0);
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	ТекстыЗапроса = Новый Массив;
	
	ТекстЗапроса = ТекстЗапросаВТНезавершенныеЗаказы();
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЗаказНаПроизводство.Ссылка КАК Заказ
		|ИЗ
		|	Документ.ЗаказНаПроизводство2_2 КАК ЗаказНаПроизводство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияЗаказовНаПроизводство КАК СостоянияЗаказовНаПроизводство
		|		ПО ЗаказНаПроизводство.Ссылка = СостоянияЗаказовНаПроизводство.Заказ
		|ГДЕ
		|	ЗаказНаПроизводство.Проведен
		|	И ЗаказНаПроизводство.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовНаПроизводство2_2.КПроизводству)
		|	И СостоянияЗаказовНаПроизводство.Заказ ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЗаказНаПроизводство.Ссылка
		|ИЗ
		|	Документ.ЗаказНаПроизводство2_2 КАК ЗаказНаПроизводство
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНезавершенныеЗаказы КАК ВТНезавершенныеЗаказы
		|		ПО ЗаказНаПроизводство.Ссылка = ВТНезавершенныеЗаказы.Ссылка
		|ГДЕ
		|	ЗаказНаПроизводство.Ссылка В (&МассивСсылок)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Запрос.Текст     = УправлениеПроизводством.ОбъединитьТекстыЗапросаВПакет(ТекстыЗапроса);
	ДанныеКОбработке = Запрос.Выполнить().Выгрузить();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	
	ДополнительныеПараметры.ПолноеИмяРегистра             = "РегистрСведений.СостоянияЗаказовНаПроизводство";
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
				Параметры,
				ДанныеКОбработке,
				ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "РегистрСведений.СостоянияЗаказовНаПроизводство";
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СостоянияЗаказовНаПроизводство");
			ЭлементБлокировки.УстановитьЗначение("Заказ", Выборка.Заказ);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			ЭлементБлокировки = Блокировка.Добавить("Документ.ЗаказНаПроизводство2_2");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Заказ);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПродукцияИПолуфабрикатыВПроизводстве");
			ЭлементБлокировки.УстановитьЗначение("Распоряжение", Выборка.Заказ);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СостоянияЭтаповПроизводства");
			ЭлементБлокировки.УстановитьЗначение("Распоряжение", Выборка.Заказ);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			Блокировка.Заблокировать();
		
			МассивСсылок = Новый Массив;
			МассивСсылок.Добавить(Выборка.Заказ);
			
			ВыборкаИзменений = ВыборкаИзменений(МассивСсылок);
			
			Если ВыборкаИзменений.Следующий() Тогда
				
				Набор = РегистрыСведений.СостоянияЗаказовНаПроизводство.СоздатьНаборЗаписей();
				Набор.Отбор.Заказ.Установить(Выборка.Заказ);
				
				ДобавитьЗаписьВНабор(ВыборкаИзменений, Набор);
				
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
				
			Иначе
				
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Заказ);
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось отразить состояние заказа: %Ссылка% по причине: %Причина%'");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%",  Выборка.Заказ);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			СобытиеЖурналаРегистрации = ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации();
			
			ЗаписьЖурналаРегистрации(СобытиеЖурналаРегистрации, УровеньЖурналаРегистрации.Предупреждение,
				Выборка.Заказ.Метаданные(), Выборка.Заказ, ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
