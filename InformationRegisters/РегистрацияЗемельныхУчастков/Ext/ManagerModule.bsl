#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает параметры выбора кода
//
// Параметры:
// 		НазваниеМакета - Строка - Наименование макета данного объекта метаданных
// 		ТекущийПериод - Дата - Дата ограничения выбора кодов
//
// Возвращаемое значение:
// 		Структура - структура параметров формы выбора кода
//
Функция ПолучитьПараметрыФормыВыбораДляКода(НазваниеМакета, ТекущийПериод) Экспорт
	
	КодыЛьгот = Новый ТаблицаЗначений;
	
	КодыЛьгот.Колонки.Добавить("Код");
	КодыЛьгот.Колонки.Добавить("Наименование");
	КодыЛьгот.Колонки.Добавить("КодЕдиницыИзмерения");
	
	Макет	= ПолучитьМакет(НазваниеМакета);
	
	НазваниеОбласти = "";
	СписокОбластей = Новый СписокЗначений;
	ОпределитьПараметрыСпискаКодов(Макет, ТекущийПериод, НазваниеОбласти, СписокОбластей);
	
	ТекущаяОбласть = Макет.Области.Найти("Область" + НазваниеОбласти);
	
	Если НЕ (ТекущаяОбласть = Неопределено) Тогда	
		
		Для НомерСтр = ТекущаяОбласть.Верх По ТекущаяОбласть.Низ Цикл
			
			// Перебираем строки макета.
			КодПоказателя       = СокрП(Макет.Область(НомерСтр, 1).Текст);
			Название            = СокрП(Макет.Область(НомерСтр, 2).Текст);
			КодЕдиницыИзмерения = СокрП(Макет.Область(НомерСтр, 3).Текст);
			
			Если КодПоказателя = "###" Тогда
				Прервать;
			ИначеЕсли ПустаяСтрока(КодПоказателя) Тогда
				Продолжить;
			Иначе
				НоваяСтрока = КодыЛьгот.Добавить();
				НоваяСтрока.Код                 = КодПоказателя;
				НоваяСтрока.Наименование        = Название;
				НоваяСтрока.КодЕдиницыИзмерения = КодЕдиницыИзмерения;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Параметры = Новый Структура;
	Параметры.Вставить("СписокКодов"           , КодыЛьгот);
	Параметры.Вставить("СписокПериодовДействия", СписокОбластей);
	Параметры.Вставить("ТекущийПериод"         , НазваниеОбласти);
	
	Возврат Параметры;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОпределитьПараметрыСпискаКодов(Макет, ТекущийПериод, НазваниеОбласти, СписокОбластей)
	
	Области = Макет.Области;
	Если Области.Количество() = 0 Тогда
		НазваниеОбласти = "";
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекОбласть Из Области Цикл
		СписокОбластей.Добавить(Прав(ТекОбласть.Имя,4));
	КонецЦикла;
	
	ТекущаяОбласть = СписокОбластей[0].Значение;
	Для Каждого ТекОбласть Из СписокОбластей Цикл
		Если Год(ТекущийПериод) < Число(ТекОбласть.Значение) Тогда
			Прервать;
		КонецЕсли;
		
		ТекущаяОбласть = ТекОбласть.Значение;
	КонецЦикла;
	
	НазваниеОбласти = ТекущаяОбласть;
	
КонецПроцедуры

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УдаляемыйРегистр.Период КАК Период,
	|	УдаляемыйРегистр.Организация КАК Организация,
	|	УдаляемыйРегистр.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	РегистрСведений.УдалитьРегистрацияЗемельныхУчастков КАК УдаляемыйРегистр
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияЗемельныхУчастков КАК НовыйРегистр
	|		ПО УдаляемыйРегистр.Организация = НовыйРегистр.Организация
	|			И (НАЧАЛОПЕРИОДА(УдаляемыйРегистр.Период, ДЕНЬ) = НАЧАЛОПЕРИОДА(НовыйРегистр.Период, ДЕНЬ))
	|			И УдаляемыйРегистр.ОсновноеСредство = НовыйРегистр.ОсновноеСредство
	|ГДЕ
	|	НовыйРегистр.ОсновноеСредство ЕСТЬ NULL ";
	Таблица = Запрос.Выполнить().Выгрузить();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.УдалитьРегистрацияЗемельныхУчастков";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Таблица, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "РегистрСведений.УдалитьРегистрацияЗемельныхУчастков";
	МетаданныеОбъекта = Метаданные.РегистрыСведений.УдалитьРегистрацияЗемельныхУчастков;
	
	ДополнительныеПараметрыВыборкиДанныхДляОбработки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	#Область ТекстЗапроса
	Запрос.Текст=
	"ВЫБРАТЬ
	|	УдаляемыйРегистр.Период КАК Период,
	|	УдаляемыйРегистр.Период КАК Дата,
	|	УдаляемыйРегистр.Организация,
	|	УдаляемыйРегистр.ОсновноеСредство КАК ОсновноеСредство,
	|	УдаляемыйРегистр.ВключатьВНалоговуюБазу,
	|	УдаляемыйРегистр.КодКатегорииЗемель,
	|	УдаляемыйРегистр.КадастровыйНомер,
	|	УдаляемыйРегистр.КадастроваяСтоимость,
	|	УдаляемыйРегистр.ОбщаяСобственность,
	|	УдаляемыйРегистр.ДоляВПравеОбщейСобственностиЧислитель,
	|	УдаляемыйРегистр.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	УдаляемыйРегистр.ЖилищноеСтроительство,
	|	УдаляемыйРегистр.ДатаНачалаПроектирования,
	|	УдаляемыйРегистр.ДатаРегистрацииПравНаОбъектНедвижимости,
	|	УдаляемыйРегистр.ПостановкаНаУчетВНалоговомОргане,
	|	УдаляемыйРегистр.НалоговыйОрган,
	|	УдаляемыйРегистр.КодПоОКТМО,
	|	УдаляемыйРегистр.КодПоОКАТО,
	|	УдаляемыйРегистр.КБК,
	|	УдаляемыйРегистр.НалоговаяСтавка,
	|	УдаляемыйРегистр.НалоговаяЛьготаПоНалоговойБазе,
	|	УдаляемыйРегистр.КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|	УдаляемыйРегистр.КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|	УдаляемыйРегистр.УменьшениеНалоговойБазыПоСтатье391,
	|	УдаляемыйРегистр.УменьшениеНалоговойБазыНаСумму,
	|	УдаляемыйРегистр.ДоляНеОблагаемойНалогомПлощадиЧислитель,
	|	УдаляемыйРегистр.ДоляНеОблагаемойНалогомПлощадиЗнаменатель,
	|	УдаляемыйРегистр.НеОблагаемаяНалогомСумма,
	|	УдаляемыйРегистр.СниженнаяНалоговаяСтавка,
	|	УдаляемыйРегистр.ПроцентУменьшенияСуммыНалога,
	|	УдаляемыйРегистр.СуммаУменьшенияСуммыНалога,
	|	УдаляемыйРегистр.Комментарий,
	|	УдаляемыйРегистр.ВидЗаписи = ЗНАЧЕНИЕ(Перечисление.ВидЗаписиОРегистрации.Регистрация) КАК ЭтоРегистрация
	|ИЗ
	|	РегистрСведений.УдалитьРегистрацияЗемельныхУчастков КАК УдаляемыйРегистр
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТИзмеренийРегистра КАК ВТИзмеренийРегистра
	|		ПО УдаляемыйРегистр.Организация = ВТИзмеренийРегистра.Организация
	|			И УдаляемыйРегистр.ОсновноеСредство = ВТИзмеренийРегистра.ОсновноеСредство
	|			И УдаляемыйРегистр.Период = ВТИзмеренийРегистра.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	#КонецОбласти
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуИзмеренийНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь, ПолноеИмяОбъекта, Запрос.МенеджерВременныхТаблиц, ДополнительныеПараметрыВыборкиДанныхДляОбработки);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТИзмеренийРегистра", Результат.ИмяВременнойТаблицы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	ДополнительныеПараметрыОтметкиОбработки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметрыОтметкиОбработки.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметрыОтметкиОбработки.ПолноеИмяРегистра = ПолноеИмяОбъекта;
	
	ТаблицаЗначенийОтметкиОбработки = Новый ТаблицаЗначений;
	ТаблицаЗначенийОтметкиОбработки.Колонки.Добавить("Период");
	ТаблицаЗначенийОтметкиОбработки.Колонки.Добавить("Организация");
	ТаблицаЗначенийОтметкиОбработки.Колонки.Добавить("ОсновноеСредство");
	
	ТаблицаЗначенийОтметкиОбработки.Добавить();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			ЭлементБлокировки.УстановитьЗначение("Период", Выборка.Период);
			ЭлементБлокировки.УстановитьЗначение("Организация", Выборка.Организация);
			ЭлементБлокировки.УстановитьЗначение("ОсновноеСредство", Выборка.ОсновноеСредство);
			
			Блокировка.Заблокировать();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать записи регистраций земельного участка ""%1""; по причине: %2'");
			ТекстСообщения = СтрШаблон(
				ТекстСообщения,
				Выборка.ОсновноеСредство,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта,,
				ТекстСообщения);
			Продолжить;
		КонецПопытки;
		
		ДокументОбъект = ?(
			Выборка.ЭтоРегистрация,
			Документы.РегистрацияЗемельныхУчастков.СоздатьДокумент(),
			Документы.ОтменаРегистрацииЗемельныхУчастков.СоздатьДокумент());
		
		ДокументОбъект.Движения.РегистрацияЗемельныхУчастков.ДополнительныеСвойства.Вставить("РассчитыватьИзменения", Ложь);
		Если Выборка.ЭтоРегистрация Тогда
			ДокументОбъект.Движения.СпособыОтраженияРасходовПоИмущественнымНалогам.ДополнительныеСвойства.Вставить("РассчитыватьИзменения", Ложь);
		КонецЕсли;
		
		ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Выборка);
		ЗаполнитьЗначенияСвойств(ДокументОбъект.ОС.Добавить(), Выборка);
		
		ОбработаноОбъектов = ОбработаноОбъектов + 1;
		
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			
			ЗаполнитьЗначенияСвойств(ТаблицаЗначенийОтметкиОбработки[0], Выборка);
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ТаблицаЗначенийОтметкиОбработки, ДополнительныеПараметрыОтметкиОбработки, Параметры.Очередь);
			ЗафиксироватьТранзакцию();
		Исключение
			
			ОбработаноОбъектов = ОбработаноОбъектов - 1;
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = НСтр("ru = 'Не удалось создать документ регистрации земельного участка от ""%1"" в организации ""%2"" для объекта ""%3"" по причине: %4'");
			ТекстСообщения = СтрШаблон(
				ТекстСообщения,
				Выборка.Период,
				Выборка.Организация,
				Выборка.ОсновноеСредство,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта,,
				ТекстСообщения);
			ОтменитьТранзакцию();
			Прервать;
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		
		ТекстСообщения = НСтр("ru = 'Не выполнено создание документов регистрации земельных участков для некоторых записей удаляемого регистра (пропущены): %1'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли