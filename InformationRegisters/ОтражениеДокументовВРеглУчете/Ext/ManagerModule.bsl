#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура создает в указанном менеджере временных таблиц новую с именем "ТаблицаДокументов". При этом данные в таблицу попадают на основании
//	параметров, указанных при вызове процедуры.
//
//	Параметры:
//		ВременныеТаблицы - МенеджерВременныхТаблиц - менеджер ВТ, где необходимо создать новую временную таблицу "ТаблицаДокументов".
//		ОтборОрганизаций - Массив - СправочникСсылка.Организации - содержит отбор по организациям при подборе документов во временную таблицу.
//			если параметр не указан - не используется;
//		ОтборСтатусов - Массив - ПеречислениеСсылка.СтатусыОтраженияДокументовВРеглУчете - содержит отбор по статусам при подборе документов во временную таблицу.
//			если параметр не указан - не используется; 
//
Процедура ДобавитьВременнуюТаблицуДокументовСОтборомПоСтатусуОтражения(ВременныеТаблицы, ОтборОрганизаций = Неопределено, ОтборСтатусов = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтражениеДокументовВРеглУчете.Регистратор КАК Документ,
	|	ОтражениеДокументовВРеглУчете.Организация КАК Организация
	|ПОМЕСТИТЬ ТаблицаДокументов
	|ИЗ
	|	РегистрСведений.ОтражениеДокументовВРеглУчете КАК ОтражениеДокументовВРеглУчете
	|ГДЕ
	|	&УсловиеОтбораПоСтатусам
	|	И &УсловиеОтбораПоОрганизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Документ";
	
	Если ОтборОрганизаций = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораПоОрганизации", "ИСТИНА");
	Иначе
		Запрос.УстановитьПараметр("Организации", ОтборОрганизаций);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораПоОрганизации", "ОтражениеДокументовВРеглУчете.Организация В (&Организации)");
	КонецЕсли;
	Если ОтборСтатусов = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораПоСтатусам", "ИСТИНА");
	Иначе
		Запрос.УстановитьПараметр("Статусы", ОтборСтатусов);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОтбораПоСтатусам", "ОтражениеДокументовВРеглУчете.Статус В (&Статусы)");
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура регистрируют к отражению все документы за указанный период
//
//	Параметры:
//		НачалоПериода - Дата - Дата, с которой документы будут регистрироваться к отражению;
//		КонецПериода - Дата - Дата, по которую документы будут регистрироваться к отражению;
//		Организация - СправочникСсылка.Организации, Массив с типом СправочникСсылка.Организации 
//						- Организации, для которых документы будут регистрироваться к отражению;
//		ТипыДокументов - Массив с элементами типа "Тип" - список типов документов, которые необходимо вернуть к отражению
//					- если не задано - будут возвращаться к отражению все документы.
//
Процедура ЗарегистрироватьДокументыКОтражению(НачалоПериода, КонецПериода, Организация = Неопределено, ТипыДокументов = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтражениеДокументовВРеглУчете.Регистратор КАК Документ,
	|	ОтражениеДокументовВРеглУчете.Организация,
	|	ОтражениеДокументовВРеглУчете.ДатаОтражения
	|ПОМЕСТИТЬ ДокументыКОтражению
	|ИЗ
	|	РегистрСведений.ОтражениеДокументовВРеглУчете КАК ОтражениеДокументовВРеглУчете
	|ГДЕ
	|	ОтражениеДокументовВРеглУчете.ДатаОтражения МЕЖДУ &НачалоПериода И &КонецПериода
	|	И (&Организация = НЕОПРЕДЕЛЕНО
	|			ИЛИ ОтражениеДокументовВРеглУчете.Организация В (&Организация))
	|	И (&ВсеДокументы
	|			ИЛИ ТИПЗНАЧЕНИЯ(ОтражениеДокументовВРеглУчете.Регистратор) В (&ТипыДокументов))";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТипыДокументов", ТипыДокументов);
	Запрос.УстановитьПараметр("ВсеДокументы", ТипыДокументов = Неопределено);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	РеглУчетПроведениеСервер.ВернутьДокументыКОтражению(Запрос.МенеджерВременныхТаблиц);
	
КонецПроцедуры

#КонецОбласти
	
#Область ОбновлениеИнформационнойБазы

// Регистрирует к последующей обработке документы "ОперацияБух", отраженные в регл. учете для заполнения даты отражения или очистки движений, в случае неактивных движений.
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтражениеДокументовВРеглУчете.Регистратор
	|ИЗ
	|	РегистрСведений.ОтражениеДокументовВРеглУчете КАК ОтражениеДокументовВРеглУчете
	|ГДЕ
	|	(ОтражениеДокументовВРеглУчете.ДатаОтражения = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ НЕ ОтражениеДокументовВРеглУчете.Активность)";
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.ОтражениеДокументовВРеглУчете";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
		Параметры, 
		Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор"), 
		ДополнительныеПараметры);
	
КонецПроцедуры

// Заполняется дату отражения в РС "ОтражениеДокументовВРеглУчете" документов "ОперацияБух" или очищает движения (если текущие движения не активны)
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.ОтражениеДокументовВРеглУчете";
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(
					Параметры.Очередь, 
					Неопределено,
					ПолноеИмяРегистра, 
					МенеджерВТ);
		
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СсылкиДляОбработки.Регистратор КАК Регистратор
	|ИЗ
	|	ВТДляОбработки КАК СсылкиДляОбработки";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТДляОбработки", Результат.ИмяВременнойТаблицы);
	
	ТаблицаРегистраторов = Запрос.Выполнить().Выгрузить();
	
	Попытка
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
		ЭлементБлокировки.ИсточникДанных = ТаблицаРегистраторов;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстСообщения = НСтр("ru = 'Не удалось заблокировать данные регистра для последующей записи движений по причине: %Причина%'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
			Метаданные.РегистрыСведений.ОтражениеДокументовВРеглУчете, , ТекстСообщения);
			
		ВызватьИсключение;
		
	КонецПопытки;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СсылкиДляОбработки.Регистратор КАК Регистратор,
	|	ОтражениеДокументовВРеглУчете.Период,
	|	ОтражениеДокументовВРеглУчете.Активность,
	|	ОтражениеДокументовВРеглУчете.Организация,
	|	ОтражениеДокументовВРеглУчете.Статус,
	|	ВЫРАЗИТЬ(ОтражениеДокументовВРеглУчете.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
	|	ВЫБОР
	|		КОГДА ОтражениеДокументовВРеглУчете.ДатаОтражения = ДАТАВРЕМЯ(1, 1, 1)
	|		ТОГДА ОтражениеДокументовВРеглУчете.Период
	|		ИНАЧЕ ОтражениеДокументовВРеглУчете.ДатаОтражения
	|	КОНЕЦ КАК ДатаОтражения
	|ИЗ
	|	ВТДляОбработки КАК СсылкиДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтражениеДокументовВРеглУчете КАК ОтражениеДокументовВРеглУчете
	|		ПО СсылкиДляОбработки.Регистратор = ОтражениеДокументовВРеглУчете.Регистратор";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Попытка
			
			НаборЗаписей = РегистрыСведений.ОтражениеДокументовВРеглУчете.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
						
			Если Выборка.Активность Тогда
				НоваяЗапись = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать движения по документу %Ссылка% по причине: %Причина%'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.РегистрыСведений.ОтражениеДокументовВРеглУчете, Выборка.Регистратор, ТекстСообщения);
				
		КонецПопытки;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	Параметры.ОбработкаЗавершена = НЕ ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли