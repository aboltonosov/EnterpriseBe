#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбновлениеИнформационнойБазы

Функция ПолноеИмяРегистра()
	
	Возврат "РегистрСведений.АналитикаВидовЗапасов";
	
КонецФункции

// Обработчик обновления УТ 11.3.1
// В движениях регистра Аналитика учета видов запасов перезаполняет
// измерения Поставщик и ГруппаФинансовогоУчета по данным справочника ВидыЗапасов.
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Аналитика.Организация,
	|	Аналитика.ТипЗапасов,
	|	Аналитика.НалогообложениеНДС,
	|	Аналитика.Соглашение,
	|	Аналитика.Валюта,
	|	Аналитика.АналитикаПредназначения,
	|	Аналитика.Контрагент,
	|	Аналитика.Договор,
	|	Аналитика.ГруппаПродукции
	|ИЗ
	|	РегистрСведений.АналитикаВидовЗапасов КАК Аналитика
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	ПО Аналитика.КлючАналитики = ВидыЗапасов.Ссылка
	|ГДЕ
	|	(ВидыЗапасов.Комитент <> НЕОПРЕДЕЛЕНО
	|		И Аналитика.Поставщик <> ВидыЗапасов.Комитент)
	|	ИЛИ (Аналитика.ГруппаФинансовогоУчета <> ВидыЗапасов.ГруппаФинансовогоУчета
	|			И ВидыЗапасов.РеализацияЗапасовДругойОрганизации) 
	|");
	
	Данные = Запрос.Выполнить().Выгрузить();
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные, ДополнительныеПараметры);
	
КонецПроцедуры

// Обработчик обновления УТ 11.3.1
// В движениях регистра Аналитика учета видов запасов перезаполняет
// измерения Поставщик и ГруппаФинансовогоУчета по данным справочника ВидыЗапасов.
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ВыбиратьПорциями = Ложь;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДанныеКОбработке = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(Параметры.Очередь, ПолноеИмяРегистра(),ДополнительныеПараметры);
	
	ТаблицаЗаблокированныхДанных = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
		"Справочник.ВидыЗапасов",
		МенеджерВременныхТаблиц);
		
	ТаблицаЗаблокированныхТоваров = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
		"РегистрНакопления.ТоварыОрганизаций",
		МенеджерВременныхТаблиц);
		
	ТекстЗапросаДанныеКОбновлению = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.ВидЗапасов КАК Ссылка
	|ПОМЕСТИТЬ ЗаблокированныеВидыЗапасов
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ #ЗаблокированныеТовары КАК ЗаблокированныеТовары
	|		ПО Товары.Регистратор = ЗаблокированныеТовары.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Аналитика.Организация КАК Организация,
	|	Аналитика.ТипЗапасов КАК ТипЗапасов,
	|	Аналитика.НалогообложениеНДС КАК НалогообложениеНДС,
	|	СпрВидыЗапасов.Комитент КАК Поставщик,
	|	Аналитика.Соглашение КАК Соглашение,
	|	Аналитика.Валюта КАК Валюта,
	|	Аналитика.АналитикаПредназначения КАК АналитикаПредназначения,
	|	ВЫБОР
	|		КОГДА Аналитика.ГруппаФинансовогоУчета <> СпрВидыЗапасов.ГруппаФинансовогоУчета
	|				И СпрВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА СпрВидыЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ Аналитика.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	Аналитика.Контрагент КАК Контрагент,
	|	Аналитика.Договор КАК Договор,
	|	Аналитика.ГруппаПродукции КАК ГруппаПродукции,
	|	Аналитика.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВтЗаписиКОбновлению
	|ИЗ
	|	РегистрСведений.АналитикаВидовЗапасов КАК Аналитика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|		ПО Аналитика.КлючАналитики = СпрВидыЗапасов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ЗаблокированныеОбъекты КАК ЗаблокированныеОбъекты
	|		ПО (СпрВидыЗапасов.Ссылка = ЗаблокированныеОбъекты.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаблокированныеВидыЗапасов КАК ЗаблокированныеВидыЗапасов
	|		ПО (СпрВидыЗапасов.Ссылка = ЗаблокированныеВидыЗапасов.Ссылка)
	|ГДЕ
	|	ЗаблокированныеОбъекты.Ссылка ЕСТЬ NULL
	|	И ЗаблокированныеВидыЗапасов.Ссылка ЕСТЬ NULL
	|	И Аналитика.Организация = &Организация
	|	И Аналитика.ТипЗапасов = &ТипЗапасов
	|	И Аналитика.НалогообложениеНДС = &НалогообложениеНДС
	|	И Аналитика.Соглашение = &Соглашение
	|	И Аналитика.Валюта = &Валюта
	|	И Аналитика.АналитикаПредназначения = &АналитикаПредназначения
	|	И Аналитика.Контрагент = &Контрагент
	|	И Аналитика.Договор = &Договор
	|	И Аналитика.ГруппаПродукции = &ГруппаПродукции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.КлючАналитики КАК Ссылка
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	ВтЗаписиКОбновлению КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ КоличествоВидовЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК Товары
	|		ПО (Товары.ВидЗапасов = ВидыЗапасов.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВидыЗапасов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Записи.Организация КАК Организация,
	|	Записи.ТипЗапасов КАК ТипЗапасов,
	|	Записи.НалогообложениеНДС КАК НалогообложениеНДС,
	|	Записи.Поставщик КАК Поставщик,
	|	Записи.Соглашение КАК Соглашение,
	|	Записи.Валюта КАК Валюта,
	|	Записи.АналитикаПредназначения КАК АналитикаПредназначения,
	|	Записи.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	Записи.Контрагент КАК Контрагент,
	|	Записи.Договор КАК Договор,
	|	Записи.ГруппаПродукции КАК ГруппаПродукции,
	|	Записи.КлючАналитики КАК КлючАналитики,
	|	Таблица.Количество
	|ИЗ
	|	ВтЗаписиКОбновлению КАК Записи
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоВидовЗапасов КАК Таблица
	|		ПО (Таблица.Ссылка = Записи.КлючАналитики)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Таблица.Количество УБЫВ
	|ИТОГИ ПО
	|	Организация,
	|	ТипЗапасов,
	|	НалогообложениеНДС,
	|	Поставщик,
	|	Соглашение,
	|	Валюта,
	|	АналитикаПредназначения,
	|	ГруппаФинансовогоУчета,
	|	Контрагент,
	|	Договор,
	|	ГруппаПродукции
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЗаблокированныеВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтЗаписиКОбновлению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КоличествоВидовЗапасов
	|";
	
	ТекстЗапросаДанныеКОбновлению = СтрЗаменить(ТекстЗапросаДанныеКОбновлению, "#ЗаблокированныеОбъекты", ТаблицаЗаблокированныхДанных.ИмяВременнойТаблицы);
	ТекстЗапросаДанныеКОбновлению = СтрЗаменить(ТекстЗапросаДанныеКОбновлению, "#ЗаблокированныеТовары", ТаблицаЗаблокированныхТоваров.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДанныеКОбновлению;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Пока ДанныеКОбработке.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра());
			ЭлементБлокировки.УстановитьЗначение("Организация", ДанныеКОбработке.Организация);
			ЭлементБлокировки.УстановитьЗначение("ТипЗапасов", ДанныеКОбработке.ТипЗапасов);
			ЭлементБлокировки.УстановитьЗначение("НалогообложениеНДС", ДанныеКОбработке.НалогообложениеНДС);
			ЭлементБлокировки.УстановитьЗначение("Поставщик", ДанныеКОбработке.Поставщик);
			ЭлементБлокировки.УстановитьЗначение("Соглашение", ДанныеКОбработке.Соглашение);
			ЭлементБлокировки.УстановитьЗначение("Валюта", ДанныеКОбработке.Валюта);
			ЭлементБлокировки.УстановитьЗначение("АналитикаПредназначения", ДанныеКОбработке.АналитикаПредназначения);
			ЭлементБлокировки.УстановитьЗначение("ГруппаФинансовогоУчета", ДанныеКОбработке.ГруппаФинансовогоУчета);
			ЭлементБлокировки.УстановитьЗначение("Контрагент", ДанныеКОбработке.Контрагент);
			ЭлементБлокировки.УстановитьЗначение("Договор", ДанныеКОбработке.Договор);
			ЭлементБлокировки.УстановитьЗначение("ГруппаПродукции", ДанныеКОбработке.ГруппаПродукции);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.АналитикаВидовЗапасов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Организация.Установить(ДанныеКОбработке.Организация);
			НаборЗаписей.Отбор.ТипЗапасов.Установить(ДанныеКОбработке.ТипЗапасов);
			НаборЗаписей.Отбор.НалогообложениеНДС.Установить(ДанныеКОбработке.НалогообложениеНДС);
			НаборЗаписей.Отбор.Соглашение.Установить(ДанныеКОбработке.Соглашение);
			НаборЗаписей.Отбор.Валюта.Установить(ДанныеКОбработке.Валюта);
			НаборЗаписей.Отбор.АналитикаПредназначения.Установить(ДанныеКОбработке.АналитикаПредназначения);
			НаборЗаписей.Отбор.Контрагент.Установить(ДанныеКОбработке.Контрагент);
			НаборЗаписей.Отбор.Договор.Установить(ДанныеКОбработке.Договор);
			НаборЗаписей.Отбор.ГруппаПродукции.Установить(ДанныеКОбработке.ГруппаПродукции);
			
			Запрос.УстановитьПараметр("Организация", ДанныеКОбработке.Организация);
			Запрос.УстановитьПараметр("ТипЗапасов", ДанныеКОбработке.ТипЗапасов);
			Запрос.УстановитьПараметр("НалогообложениеНДС", ДанныеКОбработке.НалогообложениеНДС);
			Запрос.УстановитьПараметр("Соглашение", ДанныеКОбработке.Соглашение);
			Запрос.УстановитьПараметр("Валюта", ДанныеКОбработке.Валюта);
			Запрос.УстановитьПараметр("АналитикаПредназначения", ДанныеКОбработке.АналитикаПредназначения);
			Запрос.УстановитьПараметр("Контрагент", ДанныеКОбработке.Контрагент);
			Запрос.УстановитьПараметр("Договор", ДанныеКОбработке.Договор);
			Запрос.УстановитьПараметр("ГруппаПродукции", ДанныеКОбработке.ГруппаПродукции);
			
			Результат = Запрос.Выполнить();
			ВыборкаПоОрганизации = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоОрганизации.Следующий() Цикл
				ВыборкаПоТипуЗапасов = ВыборкаПоОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоТипуЗапасов.Следующий() Цикл
					ВыборкаПоНалогообложениеНДС = ВыборкаПоТипуЗапасов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоНалогообложениеНДС.Следующий() Цикл
						ВыборкаПоПоставщику = ВыборкаПоНалогообложениеНДС.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаПоПоставщику.Следующий() Цикл
							ВыборкаПоСоглашению = ВыборкаПоПоставщику.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаПоСоглашению.Следующий() Цикл
								ВыборкаПоВалюте = ВыборкаПоСоглашению.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаПоВалюте.Следующий() Цикл
									ВыборкаАналитикаПредназначения = ВыборкаПоВалюте.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Пока ВыборкаАналитикаПредназначения.Следующий() Цикл
										ВыборкаГруппаФинансовогоУчета = ВыборкаАналитикаПредназначения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
										Пока ВыборкаГруппаФинансовогоУчета.Следующий() Цикл
											ВыборкаКонтрагент = ВыборкаГруппаФинансовогоУчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
											Пока ВыборкаКонтрагент.Следующий() Цикл
												ВыборкаДоговор = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
												Пока ВыборкаДоговор.Следующий() Цикл
													ВыборкаГруппаПродукции = ВыборкаДоговор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
													Пока ВыборкаГруппаПродукции.Следующий() Цикл
														ВыборкаПоКлючамАналитики = ВыборкаГруппаПродукции.Выбрать();
														
														ВыборкаПоКлючамАналитики.Следующий();
														
														СтрокаНабора = НаборЗаписей.Добавить();
														ЗаполнитьЗначенияСвойств(СтрокаНабора, ВыборкаПоКлючамАналитики);
															
													КонецЦикла;
												КонецЦикла;
											КонецЦикла;
										КонецЦикла;
									КонецЦикла;
								КонецЦикла;
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			ЗафиксироватьТранзакцию();
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать данные в регистре %ИмяРегистра% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистра%", "РегистрыСведений.АналитикаВидовЗапасов");
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Ошибка,
				Метаданные.РегистрыСведений.АналитикаВидовЗапасов,
				Неопределено,
				ТекстСообщения);
			
			ВызватьИсключение;
		КонецПопытки;
	КонецЦикла;
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра());
КонецПроцедуры

#КонецОбласти
	
#КонецЕсли
