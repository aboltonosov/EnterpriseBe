#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Переформировывает распоряжения на регистрацию счетов-фактур от комитентов.
//
// Параметры:
// 	 СчетаФактурыВыданные - Массив - Счета-фактуры, выданные покупателям комиссионого товара, 
// 										по которым необходимо выполнить формирование распоряжений.
//
Процедура ОбновитьСостояние(Знач СчетаФактурыВыданные) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(СчетаФактурыВыданные, Неопределено);
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(СчетаФактурыВыданные, Документы.СчетФактураВыданный.ПустаяСсылка());
	ОбщегоНазначенияКлиентСервер.УдалитьВсеВхожденияЗначенияИзМассива(СчетаФактурыВыданные, Документы.СчетФактураКомиссионеру.ПустаяСсылка());
	СчетаФактурыВыданные = ОбщегоНазначенияКлиентСервер.СвернутьМассив(СчетаФактурыВыданные);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	// 4D:ERP для Беларуси, ВалентинМ, 31.07.2017 16:26:24 
	// Ставки таблицей
	// {
	"ВЫБРАТЬ
	|	вт.СтавкаНДС,
	|	вт.ЗначениеСтавкиНДС
	|ПОМЕСТИТЬ втЗначенийСтавокНДС
	|ИЗ
	|	&тзЗначенийСтавокНДС КАК вт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// }
	// 4D 
	|ВЫБРАТЬ
	|	ВложеннаяТаблица.Организация,
	|	ВложеннаяТаблица.Комитент,
	|	ВложеннаяТаблица.Дата,
	|	ВложеннаяТаблица.Покупатель,
	|	ВложеннаяТаблица.СчетФактураВыданный,
	|	ВложеннаяТаблица.Валюта,
	|	СУММА(ВложеннаяТаблица.СуммаСНДС) КАК СуммаСНДС,
	|	СУММА(ВложеннаяТаблица.СуммаНДС) КАК СуммаНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОтчетКомитенту.Организация КАК Организация,
	|		ОтчетКомитенту.Контрагент КАК Комитент,
	|		НАЧАЛОПЕРИОДА(ЕСТЬNULL(СчетФактураВыданный.Дата, ЕСТЬNULL(СчетФактураКомиссионеру.Ссылка.Дата, ОтчетКомитенту.Дата)), ДЕНЬ) КАК Дата,
	|		ЕСТЬNULL(СчетФактураВыданный.Контрагент, ЕСТЬNULL(СчетФактураКомиссионеру.Покупатель, НЕОПРЕДЕЛЕНО)) КАК Покупатель,
	|		ТаблицаТовары.СчетФактураВыставленный КАК СчетФактураВыданный,
	|		ОтчетКомитенту.Валюта КАК Валюта,
	|		ТаблицаТовары.СуммаПродажи КАК СуммаСНДС,
	// 4D:ERP для Беларуси, ВалентинМ, 31.07.2017 20:41:02 
	// 
	// {
	|		ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА втЗначенийСтавокНДС.ЗначениеСтавкиНДС ЕСТЬ NULL
	|					ТОГДА 0
	|				ИНАЧЕ ТаблицаТовары.СуммаПродажи * втЗначенийСтавокНДС.ЗначениеСтавкиНДС / (1 + втЗначенийСтавокНДС.ЗначениеСтавкиНДС)
	|			КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СуммаНДС
	// }
	// 4D 
	|	ИЗ
	|		Документ.ОтчетКомитенту.Товары КАК ТаблицаТовары
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Документ.ОтчетКомитенту КАК ОтчетКомитенту
	|		ПО
	|			ТаблицаТовары.Ссылка = ОтчетКомитенту.Ссылка
	|			И ОтчетКомитенту.Проведен
	|			
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ПО
	|			ТаблицаТовары.СчетФактураВыставленный = СчетФактураВыданный.Ссылка
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			Документ.СчетФактураКомиссионеру.Покупатели КАК СчетФактураКомиссионеру
	|		ПО
	|			ТаблицаТовары.СчетФактураВыставленный = СчетФактураКомиссионеру.Ссылка
	|			И ТаблицаТовары.Покупатель = СчетФактураКомиссионеру.Покупатель
	// 4D:ERP для Беларуси, ВалентинМ, 31.07.2017 16:36:03 
	// 
	// {
	|			
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			втЗначенийСтавокНДС КАК втЗначенийСтавокНДС
	|		ПО
	|			ТаблицаТовары.СтавкаНДС = втЗначенийСтавокНДС.СтавкаНДС
	// }
	// 4D 
	|	
	|	ГДЕ
	|		ТаблицаТовары.СчетФактураВыставленный В (&СчетаФактурыВыданные)
	|		И ОтчетКомитенту.Проведен
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СчетФактураКомитента.Организация КАК Организация,
	|		СчетФактураКомитента.Комитент КАК Комитент,
	|		НАЧАЛОПЕРИОДА(СчетФактураКомитента.ДатаСоставления, ДЕНЬ) КАК Дата,
	|		ТаблицаПокупатели.Покупатель КАК Покупатель,
	|		ТаблицаПокупатели.СчетФактураВыданный КАК СчетФактураВыданный,
	|		СчетФактураКомитента.Валюта КАК Валюта,
	|		-ТаблицаПокупатели.СуммаСНДС КАК СуммаСНДС,
	|		-ТаблицаПокупатели.СуммаНДС  КАК СуммаНДС
	|	ИЗ
	|		Документ.СчетФактураКомитента.Покупатели КАК ТаблицаПокупатели
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Документ.СчетФактураКомитента КАК СчетФактураКомитента
	|		ПО
	|			ТаблицаПокупатели.Ссылка = СчетФактураКомитента.Ссылка
	|	ГДЕ
	|		ТаблицаПокупатели.СчетФактураВыданный В (&СчетаФактурыВыданные)
	|		И СчетФактураКомитента.Проведен) ВложеннаяТаблица
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВложеннаяТаблица.Организация,
	|	ВложеннаяТаблица.Комитент,
	|	ВложеннаяТаблица.Дата,
	|	ВложеннаяТаблица.Покупатель,
	|	ВложеннаяТаблица.СчетФактураВыданный,
	|	ВложеннаяТаблица.Валюта
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложеннаяТаблица.СуммаСНДС) > 0
	|	И СУММА(ВложеннаяТаблица.СуммаНДС) > 0
	|";
	
	// 4D:ERP для Беларуси, ВалентинМ, 31.07.2017 16:53:22 
	// Ставки таблицей
	// {
	Запрос.УстановитьПараметр("СчетаФактурыВыданные", СчетаФактурыВыданные);
	Запрос.УстановитьПараметр("тзЗначенийСтавокНДС", Перечисления.СтавкиНДС.ПолучитьТаблицуЗначенийСтавокНДС());
	// }
	// 4D 
	
	СчетаФактурыКомитентовКРегистрации = Запрос.Выполнить().Выгрузить();
	СчетаФактурыКомитентовКРегистрации.Индексы.Добавить("СчетФактураВыданный");
	
	Для каждого СчетФактураВыданный Из СчетаФактурыВыданные Цикл
		
		НаборЗаписей = РегистрыСведений.СчетаФактурыКомитентовКРегистрации.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.СчетФактураВыданный.Установить(СчетФактураВыданный);
		
		Отбор = Новый Структура("СчетФактураВыданный", СчетФактураВыданный);
		Строки = СчетаФактурыКомитентовКРегистрации.НайтиСтроки(Отбор);
		Для каждого Строка Из Строки Цикл
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Строка);
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Регистрирует данные для обработчика обновления УТ 11.3.2:
// переносит данные из удаляемого реквизита "УдалитьКомитент" в новое измерение "Комитент".
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.СчетаФактурыКомитентовКРегистрации";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СчетаФактурыКомитентовКРегистрации.СчетФактураВыданный
	|ИЗ
	|	РегистрСведений.СчетаФактурыКомитентовКРегистрации КАК СчетаФактурыКомитентовКРегистрации
	|ГДЕ
	|	СчетаФактурыКомитентовКРегистрации.Комитент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	И СчетаФактурыКомитентовКРегистрации.УдалитьКомитент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)";
	
	Данные = Запрос.Выполнить().Выгрузить();
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные, ДополнительныеПараметры);
	
КонецПроцедуры

// Переносит данные из удаляемого реквизита "УдалитьКомитент" в новое измерение "Комитент".
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.СчетаФактурыКомитентовКРегистрации";
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ВыбиратьПорциями = Ложь;
	
	ДанныеКОбработке = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(Параметры.Очередь, ПолноеИмяРегистра, ДополнительныеПараметры);
	Пока ДанныеКОбработке.Следующий() Цикл
		
		НачатьТранзакцию();
			
		Попытка
						
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
			ЭлементБлокировки.УстановитьЗначение("СчетФактураВыданный", ДанныеКОбработке.СчетФактураВыданный);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			Запрос = Новый Запрос("
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Данные.СчетФактураВыданный,
			|	ВЫБОР КОГДА Данные.Комитент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) ТОГДА
			|		Данные.УдалитьКомитент
			|	ИНАЧЕ Данные.Комитент КОНЕЦ КАК Комитент,
			|	Данные.СуммаСНДС,
			|	Данные.СуммаНДС,
			|	Данные.Валюта,
			|	Данные.Организация,
			|	Данные.УдалитьКомитент,
			|	Данные.Дата,
			|	Данные.Покупатель,
			|	Данные.Субкомиссионер
			|ИЗ
			|	РегистрСведений.СчетаФактурыКомитентовКРегистрации КАК Данные
			|ГДЕ
			|	Данные.СчетФактураВыданный = &СчетФактураВыданный
			|");
			
			НаборЗаписей = РегистрыСведений.СчетаФактурыКомитентовКРегистрации.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.СчетФактураВыданный.Установить(ДанныеКОбработке.СчетФактураВыданный);
			
			Запрос.УстановитьПараметр("СчетФактураВыданный", ДанныеКОбработке.СчетФактураВыданный);
			
			НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		
			ЗафиксироватьТранзакцию();
		
		Исключение
		
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
			
			ТекстСообщения = НСтр("ru = 'Не удалось записать данные в регистр %ИмяРегистра% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистра%", ПолноеИмяРегистра);
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.РегистрыСведений.СчетаФактурыКомитентовКРегистрации, Неопределено, ТекстСообщения);
			
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли