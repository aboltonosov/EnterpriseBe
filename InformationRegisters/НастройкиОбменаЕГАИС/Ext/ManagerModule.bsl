
#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	ИнтеграцияЕГАИСВызовСервера.ПриПолученииФормыРегистраСведений(
		"НастройкиОбменаЕГАИС",
		ВидФормы,
		Параметры,
		ВыбраннаяФорма,
		ДополнительнаяИнформация,
		СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получает список доступных транспортных модулей ЕГАИС.
//
// Параметры:
//  Отбор - Структура, Массив - структура с ключами: Поле, Значение. Или массив таких структур.
//
// Возвращаемое значение:
//   Массив - список транспортных модулей ЕГАИС.
//
Функция ДоступныеТранспортныеМодули(Отбор = Неопределено) Экспорт

	Результат = Новый Массив;
	
	РабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущееРабочееМесто", РабочееМесто);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)) КАК ОрганизацияЕГАИС,
	|	
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.ИНН, """") КАК ИНН,
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.КПП, """") КАК КПП,
	|	
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.Представление, """")                                        КАК Представление,
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.ПредставлениеАдреса, """")                                  КАК Адрес,
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.ФорматОбмена, ЗНАЧЕНИЕ(Перечисление.ФорматыОбменаЕГАИС.V1)) КАК ФорматОбмена,
	|	
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.Контрагент, НЕОПРЕДЕЛЕНО)     КАК Контрагент,
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.ТорговыйОбъект, НЕОПРЕДЕЛЕНО) КАК ТорговыйОбъект,
	|	ЕСТЬNULL(КлассификаторОрганизацийЕГАИС.НаходитсяВСельскойМестности, ЛОЖЬ) КАК НаходитсяВСельскойМестности,
	|	
	|	ВЫБОР
	|		КОГДА НастройкиОбменаЕГАИС.РабочееМесто = &ТекущееРабочееМесто
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Порядок
	|ИЗ
	|	РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|		ПО НастройкиОбменаЕГАИС.ИдентификаторФСРАР = КлассификаторОрганизацийЕГАИС.Код
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок";
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	
	ЗапросВыбора = СхемаЗапроса.ПакетЗапросов[0];
	ОператорВыбрать = ЗапросВыбора.Операторы[0];
	
	Для Каждого Измерение Из Метаданные.РегистрыСведений.НастройкиОбменаЕГАИС.Измерения Цикл
		ОператорВыбрать.ВыбираемыеПоля.Добавить("НастройкиОбменаЕГАИС." + Измерение.Имя);
	КонецЦикла;
	
	Для Каждого Ресурс Из Метаданные.РегистрыСведений.НастройкиОбменаЕГАИС.Ресурсы Цикл
		ОператорВыбрать.ВыбираемыеПоля.Добавить("НастройкиОбменаЕГАИС." + Ресурс.Имя);
	КонецЦикла;
	
	Для Каждого Реквизит Из Метаданные.РегистрыСведений.НастройкиОбменаЕГАИС.Реквизиты Цикл
		ОператорВыбрать.ВыбираемыеПоля.Добавить("НастройкиОбменаЕГАИС." + Реквизит.Имя);
	КонецЦикла;
	
	Если ТипЗнч(Отбор) = Тип("Массив") Тогда
		МассивОтборов = Отбор;
	Иначе
		МассивОтборов = Новый Массив;
	КонецЕсли;
	
	Если ТипЗнч(Отбор) = Тип("Структура") Тогда
		МассивОтборов.Добавить(Отбор);
	КонецЕсли;
	
	ЕстьОтборПоРабочемуМесту = Ложь;
	
	Сч = 0;
	Для Каждого СтруктураОтбора Из МассивОтборов Цикл
		
		Если ВРег(СтруктураОтбора.Поле) = ВРег("РабочееМесто") Тогда
			ЕстьОтборПоРабочемуМесту = Истина;
		КонецЕсли;
		
		Если    ВРег(СтруктураОтбора.Поле) = ВРег("Контрагент")
			Или ВРег(СтруктураОтбора.Поле) = ВРег("ТорговыйОбъект") Тогда
			ОператорВыбрать.Отбор.Добавить("КлассификаторОрганизацийЕГАИС." + СтруктураОтбора.Поле + " = &Параметр_" + Сч);
		Иначе
			ОператорВыбрать.Отбор.Добавить("НастройкиОбменаЕГАИС." + СтруктураОтбора.Поле + " = &Параметр_" + Сч);
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Параметр_" + Сч, СтруктураОтбора.Значение);
		
		Сч = Сч + 1;
		
	КонецЦикла;
	
	Если НЕ ЕстьОтборПоРабочемуМесту Тогда
		ОператорВыбрать.Отбор.Добавить(
		"НастройкиОбменаЕГАИС.РабочееМесто = &РабочееМесто
		|	ИЛИ НастройкиОбменаЕГАИС.РабочееМесто = ЗНАЧЕНИЕ(Справочник.РабочиеМеста.ПустаяСсылка)");
		
		Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
	КонецЕсли;
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДанныеМодуля = СтруктураНастроекОбмена();
		
		ЗаполнитьЗначенияСвойств(ДанныеМодуля, Выборка);
		
		Если ПустаяСтрока(ДанныеМодуля.Представление) Тогда
			ДанныеМодуля.Представление = Выборка.ИдентификаторФСРАР;
		КонецЕсли;
		
		ДанныеМодуля.Представление = СокрЛП(ДанныеМодуля.Представление) + ?(Выборка.ОбменНаСервере, " " + НСтр("ru = '(на сервере 1С:Предприятия)'"), "");
		
		ИнтеграцияЕГАИСПереопределяемый.ПриПолученииНастроекУТМ(ДанныеМодуля);
		
		Результат.Добавить(ДанныеМодуля);
		
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает пустую структуру данных настроек обмена.
//
Функция СтруктураНастроекОбмена()
	
	Результат = Новый Структура;
	
	Результат.Вставить("ОрганизацияЕГАИС");
	Результат.Вставить("ИНН");
	Результат.Вставить("КПП");
	Результат.Вставить("Представление");
	Результат.Вставить("Адрес");
	Результат.Вставить("ФорматОбмена");
	Результат.Вставить("Контрагент");
	Результат.Вставить("ТорговыйОбъект");
	Результат.Вставить("НаходитсяВСельскойМестности");
	Результат.Вставить("ИдентификаторФСРАР");
	Результат.Вставить("РабочееМесто");
	Результат.Вставить("АдресУТМ");
	Результат.Вставить("ПортУТМ");
	Результат.Вставить("ОбменНаСервере");
	Результат.Вставить("ЗагружатьВходящиеДокументы");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли