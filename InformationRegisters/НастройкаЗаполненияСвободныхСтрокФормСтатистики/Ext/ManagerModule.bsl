#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Проверяет есть ли записи в регистре, по заданному отбору.
// Параметры:
//	Отбор - Структура - Отбор по которому нужно искать записи.
//	 * Организация - СправочникСсылка.Организации - Организация для которой нужно определить наличие настройки.
//	 * ОбъектНаблюдения - СправочникСсылка.ОбъектыСтатистическогоНаблюдения - 
//		Объект наблюдения для которого нужно определить наличие настройки.
// Возвращаемое значение:
//	Булево - истина - записи есть, Ложь - Записей нет.
//
Функция ЕстьЗаписи(Отбор) Экспорт
	
	Запрос = Новый ПостроительЗапроса;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	НастройкаЗаполненияСвободныхСтрокФормСтатистики.Организация
	|ИЗ
	|	РегистрСведений.НастройкаЗаполненияСвободныхСтрокФормСтатистики КАК НастройкаЗаполненияСвободныхСтрокФормСтатистики
	|{ГДЕ
	|	НастройкаЗаполненияСвободныхСтрокФормСтатистики.Организация КАК Организация,
	|	НастройкаЗаполненияСвободныхСтрокФормСтатистики.ОбъектНаблюдения КАК ОбъектНаблюдения,
	|	НастройкаЗаполненияСвободныхСтрокФормСтатистики.ДетализацияОбъектаНаблюдения КАК ДетализацияОбъектаНаблюдения}";
	
	Для Каждого КлючИЗначение Из Отбор Цикл
		ЭлементОтбора = Запрос.Отбор.Добавить(КлючИЗначение.Ключ);
		ЭлементОтбора.Установить(КлючИЗначение.Значение);
	КонецЦикла;
	
	Запрос.Выполнить();
	Возврат Не Запрос.Результат.Пустой();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = Метаданные.РегистрыСведений.НастройкаЗаполненияСвободныхСтрокФормСтатистики.ПолноеИмя();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Данные.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.НастройкаЗаполненияСвободныхСтрокФормСтатистики КАК Данные
	|ГДЕ
	|	Данные.ОбъектНаблюдения ССЫЛКА Справочник.УдалитьОбъектыСтатистическогоНаблюдения
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить(), ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.НастройкаЗаполненияСвободныхСтрокФормСтатистики;
	ПолноеИмяРегистра = МетаданныеРегистра.ПолноеИмя();
	ДополнительныеПараметрыВыборкиДанныхДляОбработки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь, 
		ПолноеИмяРегистра, 
		ДополнительныеПараметрыВыборкиДанныхДляОбработки);
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Организация", Выборка.Организация);
			
			ЭлементБлокировки = Блокировка.Добавить(Метаданные.Справочники.ОбъектыСтатистическогоНаблюдения.ПолноеИмя());
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			ЭлементБлокировки = Блокировка.Добавить(Метаданные.Справочники.УдалитьОбъектыСтатистическогоНаблюдения.ПолноеИмя());
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.НастройкаЗаполненияСвободныхСтрокФормСтатистики.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда
				
				ТаблицаОтметки = НаборЗаписей.ВыгрузитьКолонки("Организация");
				НоваяСтрока = ТаблицаОтметки.Добавить();
				НоваяСтрока.Организация = Выборка.Организация;
				
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(
					ТаблицаОтметки, 
					ДополнительныеПараметрыВыборкиДанныхДляОбработки, 
					Параметры.Очередь);
					
			Иначе
			
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Данные.ОбъектНаблюдения КАК УдалитьОбъектНаблюдения,
				|	ОбъектыСтатистическогоНаблюдения.Ссылка КАК ОбъектНаблюдения
				|ИЗ
				|	РегистрСведений.НастройкаЗаполненияСвободныхСтрокФормСтатистики КАК Данные
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
				|		Справочник.УдалитьОбъектыСтатистическогоНаблюдения КАК УдалитьОбъектыСтатистическогоНаблюдения
				|	ПО
				|		Данные.ОбъектНаблюдения = УдалитьОбъектыСтатистическогоНаблюдения.Ссылка
				|	
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
				|		Справочник.ОбъектыСтатистическогоНаблюдения КАК ОбъектыСтатистическогоНаблюдения
				|	ПО
				|		ОбъектыСтатистическогоНаблюдения.Код = УдалитьОбъектыСтатистическогоНаблюдения.Код
				|ГДЕ
				|	Данные.Организация = &Организация
				|";
				
				Запрос.УстановитьПараметр("Организация", Выборка.Организация);
				ТаблицаСоотвествия = Запрос.Выполнить().Выгрузить();
				ТаблицаСоотвествия.Индексы.Добавить("УдалитьОбъектНаблюдения");
				
				Для каждого Запись Из НаборЗаписей Цикл
					
					СтруктураПоиска = Новый Структура("УдалитьОбъектНаблюдения", Запись.ОбъектНаблюдения);
					РезультатПоиска = ТаблицаСоотвествия.НайтиСтроки(СтруктураПоиска);
					Если РезультатПоиска.Количество() <> 0 И ЗначениеЗаполнено(РезультатПоиска[0].ОбъектНаблюдения) Тогда
						Запись.ОбъектНаблюдения = РезультатПоиска[0].ОбъектНаблюдения;
					КонецЕсли;
				КонецЦикла;
				
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			Шаблон = НСтр("ru = 'Не удалось записать данные в регистр %1 по Организации ""%2"" по причине: %4'");
			ТекстСообщения = 
				СтрШаблон(Шаблон, 
					ПолноеИмяРегистра, 
					Выборка.Организация, 
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеРегистра, 
				, 
				ТекстСообщения);
			
		КонецПопытки;
			
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли