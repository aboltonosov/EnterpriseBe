#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбновлениеИнформационнойБазы

Функция ПолноеИмяРегистра()
	
	Возврат "РегистрСведений.ДатыПоступленияТоваровОрганизаций";
	
КонецФункции

// Обработчик обновления УТ 11.3.2
// В движениях регистра заполняет новый реквизит Назначение
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Даты.ВидЗапасов,
	|	Даты.Номенклатура,
	|	Даты.Характеристика,
	|	Даты.Серия,
	|	Даты.НомерГТД
	|ИЗ
	|	РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК Даты
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО Даты.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|ГДЕ
	|	Даты.Назначение <> СпрВидыЗапасов.УдалитьНазначение
	|	И СпрВидыЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И Даты.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|");
	
	Данные = Запрос.Выполнить().Выгрузить();
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные, ДополнительныеПараметры);
	
КонецПроцедуры

// Обработчик обновления УТ 11.3.2
// В движениях регистра заполняет новый реквизит Назначение
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ВыбиратьПорциями = Ложь;
	
	ДанныеКОбработке = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(Параметры.Очередь, ПолноеИмяРегистра(),ДополнительныеПараметры);
	Пока ДанныеКОбработке.Следующий() Цикл
		
		Попытка
			
			НачатьТранзакцию();
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра());
			ЭлементБлокировки.УстановитьЗначение("ВидЗапасов", ДанныеКОбработке.ВидЗапасов);
			ЭлементБлокировки.УстановитьЗначение("Номенклатура", ДанныеКОбработке.Номенклатура);
			ЭлементБлокировки.УстановитьЗначение("Характеристика", ДанныеКОбработке.Характеристика);
			ЭлементБлокировки.УстановитьЗначение("Серия", ДанныеКОбработке.Серия);
			ЭлементБлокировки.УстановитьЗначение("НомерГТД", ДанныеКОбработке.НомерГТД);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			Запрос = Новый Запрос("
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Даты.ВидЗапасов,
			|	Даты.Номенклатура,
			|	Даты.Характеристика,
			|	Даты.Серия,
			|	ВЫБОР КОГДА Даты.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
			|		И Даты.Назначение <> Даты.ВидЗапасов.УдалитьНазначение
			|		И Даты.ВидЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
			|		И Даты.ВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
			|		ТОГДА Даты.ВидЗапасов.УдалитьНазначение
			|		ИНАЧЕ Даты.Назначение
			|	КОНЕЦ КАК Назначение,
			|	Даты.НомерГТД,
			|	МАКСИМУМ(Даты.ДатаПоступления) КАК ДатаПоступления
			|ИЗ
			|	РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК Даты
			|ГДЕ
			|	Даты.ВидЗапасов = &ВидЗапасов
			|	И Даты.Номенклатура = &Номенклатура
			|	И Даты.Характеристика = &Характеристика
			|	И Даты.Серия = &Серия
			|	И Даты.НомерГТД = &НомерГТД
			|
			|СГРУППИРОВАТЬ ПО
			|	Даты.ВидЗапасов,
			|	Даты.Номенклатура,
			|	Даты.Характеристика,
			|	Даты.Серия,
			|	ВЫБОР КОГДА Даты.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
			|		И Даты.Назначение <> Даты.ВидЗапасов.УдалитьНазначение
			|		И Даты.ВидЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
			|		И Даты.ВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
			|		ТОГДА Даты.ВидЗапасов.УдалитьНазначение
			|		ИНАЧЕ Даты.Назначение
			|	КОНЕЦ,
			|	Даты.НомерГТД
			|");
			
			НаборЗаписей = РегистрыСведений.ДатыПоступленияТоваровОрганизаций.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ВидЗапасов.Установить(ДанныеКОбработке.ВидЗапасов);
			НаборЗаписей.Отбор.Номенклатура.Установить(ДанныеКОбработке.Номенклатура);
			НаборЗаписей.Отбор.Характеристика.Установить(ДанныеКОбработке.Характеристика);
			НаборЗаписей.Отбор.Серия.Установить(ДанныеКОбработке.Серия);
			НаборЗаписей.Отбор.НомерГТД.Установить(ДанныеКОбработке.НомерГТД);
			
			Запрос.УстановитьПараметр("ВидЗапасов", ДанныеКОбработке.ВидЗапасов);
			Запрос.УстановитьПараметр("Номенклатура", ДанныеКОбработке.Номенклатура);
			Запрос.УстановитьПараметр("Характеристика", ДанныеКОбработке.Характеристика);
			Запрос.УстановитьПараметр("Серия", ДанныеКОбработке.Серия);
			Запрос.УстановитьПараметр("НомерГТД", ДанныеКОбработке.НомерГТД);
			
			НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		
			ЗафиксироватьТранзакцию();
		
		Исключение
		
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
			
			ТекстСообщения = НСтр("ru = 'Не удалось записать данные в регистр %ИмяРегистра% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистра%", "РегистрыСведений.ДатыПоступленияТоваровОрганизаций");
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.РегистрыСведений.ДатыПоступленияТоваровОрганизаций, Неопределено, ТекстСообщения);
			
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра());
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
