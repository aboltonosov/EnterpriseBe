#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Проверяет что для формы статистики уже выполнялась настройка.
// Параметры:
//	ФормаСтатистики - СправочникСсылка.ФормыСтатистики - Форма для которой нужно выполнить проверку.
//	Организация - СправочникСсылка.Организации - Организация для которой нужно определить наличие настроек.
// Возвращаемое значение:
// Булево - Истина - Настройки для этой формы уже выполнялись, в противном случае Ложь.
//
Функция ВыполнялисьНастройкиФормы(ФормаСтатистики, Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",     Организация);
	Запрос.УстановитьПараметр("ФормаСтатистики", ФормаСтатистики);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИСТИНА КАК Выполнялись
	|ИЗ
	|	РегистрСведений.СостояниеНастройкиЗаполненияФормСтатистики КАК Настройки
	|ГДЕ
	|	Настройки.Организация = &Организация
	|	И Настройки.ФормаСтатистики = &ФормаСтатистики
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.НастройкаЗаполненияФормСтатистики КАК Настройки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПоляФормСтатистики КАК ПоляФормСтатистики
	|		ПО Настройки.ОбъектНаблюдения = ПоляФормСтатистики.СтатистическийПоказатель.Владелец
	|ГДЕ
	|	Настройки.Организация = &Организация
	|	И ПоляФормСтатистики.Владелец = &ФормаСтатистики
	|	И НЕ ПоляФормСтатистики.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.НастройкаЗаполненияСвободныхСтрокФормСтатистики КАК Настройки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПоляФормСтатистики КАК ПоляФормСтатистики
	|		ПО Настройки.ОбъектНаблюдения = ПоляФормСтатистики.СтатистическийПоказатель.Владелец
	|ГДЕ
	|	Настройки.Организация = &Организация
	|	И ПоляФормСтатистики.Владелец = &ФормаСтатистики
	|	И НЕ ПоляФормСтатистики.ПометкаУдаления";
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

// Устанавливает признак того что для формы статистики выполнялась настройка.
// Параметры:
//	ФормаСтатистики - СправочникСсылка.ФормыСтатистики - Форма для которой нужно записать признак.
//	Организация - СправочникСсылка.Организации - Организация для которой нужно записать признак.
//
Процедура ЗаписатьНастройкиВыполнены(ФормаСтатистики, Организация) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запись = РегистрыСведений.СостояниеНастройкиЗаполненияФормСтатистики.СоздатьМенеджерЗаписи();
	Запись.Организация     = Организация;
	Запись.ФормаСтатистики = ФормаСтатистики;
	Запись.Прочитать();
	
	Если Не Запись.Выбран() Тогда
		Запись.Организация     = Организация;
		Запись.ФормаСтатистики = ФормаСтатистики;
		Запись.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = Метаданные.РегистрыСведений.СостояниеНастройкиЗаполненияФормСтатистики.ПолноеИмя();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Данные.Организация КАК Организация
	|ИЗ
	|	РегистрСведений.СостояниеНастройкиЗаполненияФормСтатистики КАК Данные
	|ГДЕ
	|	Данные.ФормаСтатистики ССЫЛКА Справочник.УдалитьФормыСтатистики
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить(), ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.СостояниеНастройкиЗаполненияФормСтатистики;
	ПолноеИмяРегистра = МетаданныеРегистра.ПолноеИмя();
	ДополнительныеПараметрыВыборкиДанныхДляОбработки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь, 
		ПолноеИмяРегистра, 
		ДополнительныеПараметрыВыборкиДанныхДляОбработки);
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.УстановитьЗначение("Организация", Выборка.Организация);
			
			ЭлементБлокировки = Блокировка.Добавить(Метаданные.Справочники.УдалитьФормыСтатистики.ПолноеИмя());
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			ЭлементБлокировки = Блокировка.Добавить(Метаданные.Справочники.ФормыСтатистики.ПолноеИмя());
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.СостояниеНастройкиЗаполненияФормСтатистики.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Организация.Установить(Выборка.Организация);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда
				
				ТаблицаОтметки = НаборЗаписей.ВыгрузитьКолонки("Организация");
				НоваяСтрока = ТаблицаОтметки.Добавить();
				НоваяСтрока.Организация = Выборка.Организация;
				
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(
					ТаблицаОтметки, 
					ДополнительныеПараметрыВыборкиДанныхДляОбработки, 
					Параметры.Очередь);
					
				
			Иначе
			
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Данные.ФормаСтатистики КАК УдалитьФормаСтатистики,
				|	ФормыСтатистики.Ссылка КАК ФормаСтатистики
				|ИЗ
				|	РегистрСведений.СостояниеНастройкиЗаполненияФормСтатистики КАК Данные
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
				|		Справочник.УдалитьФормыСтатистики КАК УдалитьФормыСтатистики
				|	ПО
				|		Данные.ФормаСтатистики = УдалитьФормыСтатистики.Ссылка
				|	
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
				|		Справочник.ФормыСтатистики КАК ФормыСтатистики
				|	ПО
				|		ФормыСтатистики.Владелец = УдалитьФормыСтатистики.Владелец
				|		И ФормыСтатистики.Код = УдалитьФормыСтатистики.Код
				|ГДЕ
				|	Данные.Организация = &Организация
				|";
				Запрос.УстановитьПараметр("Организация", Выборка.Организация);
				ТаблицаСоотвествия = Запрос.Выполнить().Выгрузить();
				ТаблицаСоотвествия.Индексы.Добавить("УдалитьФормаСтатистики");
				
				Для каждого Запись Из НаборЗаписей Цикл
					
					СтруктураПоиска = Новый Структура("УдалитьФормаСтатистики", Запись.ФормаСтатистики);
					РезультатПоиска = ТаблицаСоотвествия.НайтиСтроки(СтруктураПоиска);
					Если РезультатПоиска.Количество() <> 0 И ЗначениеЗаполнено(РезультатПоиска[0].ФормаСтатистики) Тогда
						Запись.ФормаСтатистики = РезультатПоиска[0].ФормаСтатистики;
					КонецЕсли;
				КонецЦикла;
				
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
				
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			Шаблон = НСтр("ru = 'Не удалось записать данные в регистр %1 по Организации ""%2"" по причине: %4'");
			ТекстСообщения = 
				СтрШаблон(Шаблон, 
					ПолноеИмяРегистра, 
					Выборка.Организация, 
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеРегистра, 
				, 
				ТекстСообщения);
			
		КонецПопытки;
			
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти


#КонецЕсли