
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ПервоначальногоЗаполненияИОбновленияИБ

Процедура ДобавитьЗаписи(ПараметрыОбновления = НеОпределено) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОтчетностьМониторингаРаботниковСоциальнойСферы") Тогда
		Возврат;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Должности.Ссылка КАК Должность,
	|	СтрокиОтчетностиМониторингаРаботниковСоциальнойСферы.СтрокаОтчетностиМониторингаРаботниковСоциальнойСферы КАК СтрокаОтчетностиМониторингаРаботниковСоциальнойСферы
	|ПОМЕСТИТЬ ВТКатегорииПерсонала
	|ИЗ
	|	Справочник.Должности КАК Должности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтрокиОтчетностиМониторингаРаботниковСоциальнойСферы КАК СтрокиОтчетностиМониторингаРаботниковСоциальнойСферы
	|		ПО Должности.Ссылка = СтрокиОтчетностиМониторингаРаботниковСоциальнойСферы.Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1000
	|	ШтатноеРасписание.Ссылка КАК Должность,
	|	КатегорииПерсонала.СтрокаОтчетностиМониторингаРаботниковСоциальнойСферы
	|ИЗ
	|	Справочник.ШтатноеРасписание КАК ШтатноеРасписание
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКатегорииПерсонала КАК КатегорииПерсонала
	|		ПО ШтатноеРасписание.Должность = КатегорииПерсонала.Должность
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтрокиОтчетностиМониторингаРаботниковСоциальнойСферы КАК СтрокиОтчетностиМониторингаРаботниковСоциальнойСферы
	|		ПО (СтрокиОтчетностиМониторингаРаботниковСоциальнойСферы.Должность = ШтатноеРасписание.Ссылка)
	|ГДЕ
	|	СтрокиОтчетностиМониторингаРаботниковСоциальнойСферы.СтрокаОтчетностиМониторингаРаботниковСоциальнойСферы ЕСТЬ NULL";
	
	Если ПараметрыОбновления = НеОпределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, " ПЕРВЫЕ 1000", "");
	КонецЕсли;

	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда 
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	Иначе
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
		
		ТаблицаСтрокОтчетности = РезультатЗапроса.Выгрузить();
		
		ПространствоБлокировки = "РегистрСведений.СтрокиОтчетностиМониторингаРаботниковСоциальнойСферы";
		
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить(ПространствоБлокировки);
		ЭлементБлокировки.ИсточникДанных = ТаблицаСтрокОтчетности;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Должность", "Должность");
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка.Заблокировать();
			
			Набор = РегистрыСведений.СтрокиОтчетностиМониторингаРаботниковСоциальнойСферы.СоздатьНаборЗаписей();
			Для каждого СтрокаОтчетности Из ТаблицаСтрокОтчетности Цикл
				ЗаполнитьЗначенияСвойств(Набор.Добавить(), СтрокаОтчетности);
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(Набор, Ложь);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Обновление информационной базы.Ошибка блокировки'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Предупреждение, Метаданные.РегистрыСведений.СтрокиОтчетностиМониторингаРаботниковСоциальнойСферы, , ПространствоБлокировки);
			
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли




