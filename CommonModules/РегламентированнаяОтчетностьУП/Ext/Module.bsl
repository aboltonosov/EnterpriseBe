////////////////////////////////////////////////////////////////////////////////
// Заполнение регламентированной отчетности
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область Имущество

#Область Имущество2011Кв3

Процедура ПолучитьСведенияОПоказателяхОтчетаАвансыИмуществоФормаОтчета2011Кв3(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001000", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Ложь);

	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетАвансыИмуществоФормаОтчета2011Кв3(ПараметрыОтчета, Контейнер) Экспорт
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = УправлениеВнеоборотнымиАктивами.ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, Организация = &Организация) КАК СтавкиНалогаНаИмуществоСрезПоследних";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ПроцентУменьшенияСуммыНалога = РезультатЗапроса.Выгрузить()[0].ПроцентУменьшения;
	Иначе
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
			
		Возврат;
		
	КонецЕсли;
	
	Период  = НачалоМесяца(ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Счетчик = 1;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Признак применения ЕНВД.
	ПрименениеЕНВД = УчетнаяПолитика.ПлательщикЕНВД(ПараметрыОтчета.Организация, ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	
	// Выборка коэффициентов распределения ЕНВД.
	Если ПрименениеЕНВД Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат)), ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)) КАК ОтношениеКЕНВД,
		|	СУММА(СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент) КАК Коэффициент
		|ПОМЕСТИТЬ ВТ_ВыборкаКоэффициентов
		|ИЗ
		|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат)), ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)),
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|;
		|	
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка,
		|	СУММА(СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент) КАК СуммаКоэффициентов
		|ПОМЕСТИТЬ ВыборкаСуммыКоэффициентов
		|ИЗ
		|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
		|СГРУППИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВыборкаКоэффициентов.Ссылка КАК Ссылка,
		|	СУММА(ВЫБОР
		|	      	КОГДА ВыборкаКоэффициентов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
		|	      		ТОГДА ВыборкаКоэффициентов.Коэффициент / ВыборкаСуммыКоэффициентов.СуммаКоэффициентов
		|		  	ИНАЧЕ 0
		|	      КОНЕЦ) КАК НеЕНВД,
		|	СУММА(ВЫБОР
		|			КОГДА ВыборкаКоэффициентов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
		|				ТОГДА ВыборкаКоэффициентов.Коэффициент / ВыборкаСуммыКоэффициентов.СуммаКоэффициентов
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Распределение
		|
		|ПОМЕСТИТЬ
		|	КоэффициентыЕНВД
		|
		|ИЗ
		|	ВТ_ВыборкаКоэффициентов КАК ВыборкаКоэффициентов
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВыборкаСуммыКоэффициентов КАК ВыборкаСуммыКоэффициентов
		|	ПО ВыборкаСуммыКоэффициентов.Ссылка = ВыборкаКоэффициентов.Ссылка
		|ГДЕ
		|	ВыборкаКоэффициентов.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
		|	
		|СГРУППИРОВАТЬ ПО
		|	ВыборкаКоэффициентов.Ссылка
		|";
		Запрос.Выполнить();
	КонецЕсли;
	
	ГоловнаяОрганизация = ПараметрыОтчета.Организация.ГоловнаяОрганизация;
	Если Не ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		ГоловнаяОрганизация = ПараметрыОтчета.Организация;
	КонецЕсли;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("КонецПериодаОтчета", КонецГода(Период));
	Запрос.УстановитьПараметр("НалоговыйОрган", ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()));
	
	Если Метаданные.Документы.Найти("АвизоОСВходящее") <> Неопределено Тогда 
		ДопУсловие = " И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.АвизоОСВходящее";
	Иначе
		ДопУсловие = "";
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОС,
	|	МИНИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)" + ДопУсловие + "
	|	И СостоянияОСОрганизаций.Организация В
	|			(ВЫБРАТЬ
	|				Организации.Ссылка КАК Ссылка
	|			ИЗ
	|				Справочник.Организации КАК Организации
	|			ГДЕ
	|				(Организации.Ссылка = &ГоловнаяОрганизация
	|					ИЛИ Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация))
	|	И СостоянияОСОрганизаций.Период <= &КонецПериодаОтчета
	|	И НЕ СостоянияОСОрганизаций.ОсновноеСредство.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Здания), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Сооружения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МноголетниеНасаждения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования))
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний.ОС
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013
	|ИЗ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний
	|ГДЕ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний.ДатаСостояния >= ДАТАВРЕМЯ(2013, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний";
	Запрос.Выполнить();
	
	ТекстОбъединяющегоЗапроса = "";
	
	Пока Период <= НачалоМесяца(ДобавитьМесяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета, 1)) Цикл
		
		ПрименениеУСН = УчетнаяПолитика.ПрименяетсяУСН( ПараметрыОтчета.Организация, КонецКвартала(Период));
		
		Если НЕ ПрименениеУСН Тогда
			
			Запрос.УстановитьПараметр("Период",          Период);
			
			// Срез последних записей по основному средству в регистре "Ставки налога на имущество по отдельным основным средствам".
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
			|	МАКСИМУМ(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период) КАК ПериодСреза
			|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
			|ГДЕ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период <= &Период
			|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация = &Организация
			|
			|СГРУППИРОВАТЬ ПО
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговыйОрган,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПорядокНалогообложения
			|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|ИЗ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
			|		ПО СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство
			|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов.ПериодСреза = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период
			|";
			Запрос.Выполнить();
			
			Если НЕ ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
				
				// Выборка объектов по основному налоговому органу организации (его нет в справочнике Регистрация в налоговом органе).
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ОС.Ссылка КАК ОсновноеСредство
				|ПОМЕСТИТЬ
				|	СписокРазрешенныхОС
				|ИЗ
				|	Справочник.ОбъектыЭксплуатации КАК ОС
				|ГДЕ
				|	(НЕ ОС.Ссылка В 
				|		(ВЫБРАТЬ
				|			СостоянияОСОрганизаций.ОсновноеСредство
				|		ИЗ
				|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
				|		ГДЕ
				|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
				|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
				|			И СостоянияОСОрганизаций.Организация = &Организация))
				|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
				|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
				|	И (НЕ ОС.Ссылка В
				|		(ВЫБРАТЬ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
				|		ИЗ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ГДЕ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
				|			ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению)))
				|ИНДЕКСИРОВАТЬ ПО
				|	ОС.Ссылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
				|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
				|
				|ПОМЕСТИТЬ
				|	СписокОС
				|
				|ИЗ
				|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
				|			&Период,
				|			Организация = &Организация
				|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
				|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
				|ИНДЕКСИРОВАТЬ ПО
				|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
				
			Иначе
				
				Если КодНалоговогоОргана = РеквизитыОрганизации.КодНалоговогоОргана Тогда
					
					// Выборка объектов по основному налоговому органу организации (он есть в справочнике Регистрация налоговом органе).
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ОС.Ссылка КАК ОсновноеСредство
					|ПОМЕСТИТЬ
					|	СписокРазрешенныхОС
					|ИЗ
					|	Справочник.ОбъектыЭксплуатации КАК ОС
					|ГДЕ
					|	(НЕ ОС.Ссылка В 
					|		(ВЫБРАТЬ
					|			СостоянияОСОрганизаций.ОсновноеСредство
					|		ИЗ
					|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
					|		ГДЕ
					|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
					|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
					|			И СостоянияОСОрганизаций.Организация = &Организация))
					|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
					|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
					|	И (НЕ ОС.Ссылка В
					|		(ВЫБРАТЬ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
					|		ИЗ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
					|		ГДЕ
					|			(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
					|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> &НалоговыйОрган)
					|			ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению)))
					|ИНДЕКСИРОВАТЬ ПО
					|	ОС.Ссылка
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
					|
					|ПОМЕСТИТЬ
					|	СписокОС
					|
					|ИЗ
					|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
					|			&Период,
					|			Организация = &Организация
					|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
					|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
					|ИНДЕКСИРОВАТЬ ПО
					|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
					
				Иначе
					
					// Выборка объектов по указанному пользователем налоговому органу.
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ОС.Ссылка КАК ОсновноеСредство
					|ПОМЕСТИТЬ
					|	СписокРазрешенныхОС
					|ИЗ
					|	Справочник.ОбъектыЭксплуатации КАК ОС
					|ГДЕ
					|	(НЕ ОС.Ссылка В 
					|		(ВЫБРАТЬ
					|			СостоянияОСОрганизаций.ОсновноеСредство
					|		ИЗ
					|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
					|		ГДЕ
					|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
					|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
					|			И СостоянияОСОрганизаций.Организация = &Организация))
					|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
					|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
					|	И (ОС.Ссылка В
					|		(ВЫБРАТЬ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
					|		ИЗ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
					|		ГДЕ
					|			(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган = &НалоговыйОрган
					|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения <> ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению))))
					|ИНДЕКСИРОВАТЬ ПО
					|	ОС.Ссылка
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
					|
					|ПОМЕСТИТЬ
					|	СписокОС
					|
					|ИЗ
					|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
					|			&Период,
					|			Организация = &Организация
					|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
					|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
					|ИНДЕКСИРОВАТЬ ПО
					|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
					
				КонецЕсли;
				
			КонецЕсли;
			
			Запрос.Выполнить();
			
			// Выборка счетов учета ОС
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета,
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации
			|
			|ПОМЕСТИТЬ
			|	СчетаУчетаОС
			|
			|ИЗ
			|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС),
			|	NULL
			|";
			Запрос.Выполнить();
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	МАКСИМУМ(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Период) КАК Период,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство
			|ПОМЕСТИТЬ ВТ_СрезПоследних
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|СГРУППИРОВАТЬ ПО
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство,Период
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СрезПоследних.ОсновноеСредство,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Организация,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство1,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодВидаИмущества,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель
			|ПОМЕСТИТЬ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|ИЗ
			|	ВТ_СрезПоследних КАК СрезПоследних
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|	ПО СрезПоследних.Период = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Период
			|	И СрезПоследних.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.*
			|ПОМЕСТИТЬ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних
			|ИЗ
			|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
			|ИНДЕКСИРОВАТЬ ПО
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПервоначальнаяСтоимостьОС.СуммаОстатокДт,
			|	ПервоначальнаяСтоимостьОС.Субконто1,
			|	ПервоначальнаяСтоимостьОС.Счет
			|ПОМЕСТИТЬ ВТ_ПервоначальнаяСтоимостьОС
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (ВЫБРАТЬ РАЗЛИЧНЫЕ СчетУчета ИЗ СчетаУчетаОС ГДЕ СчетУчета ЕСТЬ НЕ NULL), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Организация = &Организация) КАК ПервоначальнаяСтоимостьОС
			|ИНДЕКСИРОВАТЬ ПО
			|	ПервоначальнаяСтоимостьОС.Субконто1
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СтавкиНалогаНаИмуществоСрезПоследних.*
			|ПОМЕСТИТЬ ВТ_СтавкиНалогаНаИмуществоСрезПоследних
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, Организация = &Организация) КАК СтавкиНалогаНаИмуществоСрезПоследних
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	АмортизацияОС.СуммаОстатокДт,
			|	АмортизацияОС.СуммаОстатокКт,
			|	АмортизацияОС.Субконто1,
			|	АмортизацияОС.Счет
			|ПОМЕСТИТЬ ВТ_АмортизацияОС
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (ВЫБРАТЬ РАЗЛИЧНЫЕ СчетНачисленияАмортизации ИЗ СчетаУчетаОС ГДЕ СчетНачисленияАмортизации ЕСТЬ НЕ NULL), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Организация = &Организация) КАК АмортизацияОС
			|ИНДЕКСИРОВАТЬ ПО
			|	АмортизацияОС.Субконто1
			|;
			|";
			
			Запрос.УстановитьПараметр("ДатаПодписи", ПараметрыОтчета.ДатаПодписи);
			
			Если ПрименениеЕНВД Тогда
				
				Запрос.УстановитьПараметр("КоэффициентРаспределенияЕНВД", 1);
				
				Запрос.Текст = Запрос.Текст + 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СписокОС.ОсновноеСредство,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
				|		  ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|		ТОГДА 
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО
				|		ИНАЧЕ 
				|			ЕстьNULL(СтавкиНалогаНаИмуществоСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
				|	КОНЕЦ КАК КодПоОКАТО,
				|	ЕСТЬNULL(ВЫБОР
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка
				|			ИНАЧЕ ВЫБОР
				|			      КОГДА СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки
				|			      	ТОГДА СтавкиНалогаНаИмуществоСрезПоследних.СниженнаяНалоговаяСтавка
				|			      ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка
				|			      КОНЕЦ
				|			КОНЕЦ, СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка) КАК НалоговаяСтавка,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки, ЛОЖЬ)
				|	КОНЕЦ КАК СнижениеНалоговойСтавки,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ОсвобождениеОтНалогообложения, ЛОЖЬ)
				|	КОНЕЦ КАК ОсвобождениеОтНалогообложения,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|		ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
				|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодВидаИмущества, ""03"") КАК КодВидаИмущества,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
				|	" + Счетчик + " КАК Период,
				|	ВЫРАЗИТЬ((ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0)) * КоэффициентыЕНВД.НеЕНВД
				|	       + (ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0)) * КоэффициентыЕНВД.Распределение * &КоэффициентРаспределенияЕНВД КАК ЧИСЛО(15, 2)) КАК ОстаточнаяСтоимость
				|ПОМЕСТИТЬ
				|	Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
				|ИЗ
				|	СписокОС
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
				|			ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = ПервоначальнаяСтоимостьОС.Счет ИЛИ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС) = ПервоначальнаяСтоимостьОС.Счет)
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = ПервоначальнаяСтоимостьОС.Субконто1
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
				|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = АмортизацияОС.Субконто1
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.Счет
				|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ПО СписокОС.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство,
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыЕНВД
				|			ПО СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации = КоэффициентыЕНВД.Ссылка
				|		ПО СписокОС.ОсновноеСредство = СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство,
				|	ВТ_СтавкиНалогаНаИмуществоСрезПоследних КАК СтавкиНалогаНаИмуществоСрезПоследних
				|";
				Запрос.Выполнить();
				
			Иначе
				
				Запрос.Текст = Запрос.Текст + 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СписокОС.ОсновноеСредство,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
				|		  ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|		ТОГДА 
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО
				|		ИНАЧЕ 
				|			ЕстьNULL(СтавкиНалогаНаИмуществоСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
				|	КОНЕЦ КАК КодПоОКАТО,
				|	ЕСТЬNULL(ВЫБОР
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка
				|			ИНАЧЕ ВЫБОР
				|			      КОГДА СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки
				|			      	ТОГДА СтавкиНалогаНаИмуществоСрезПоследних.СниженнаяНалоговаяСтавка
				|			      ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка
				|			      КОНЕЦ
				|			КОНЕЦ, СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка) КАК НалоговаяСтавка,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки, ЛОЖЬ)
				|	КОНЕЦ КАК СнижениеНалоговойСтавки,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ОсвобождениеОтНалогообложения, ЛОЖЬ)
				|	КОНЕЦ КАК ОсвобождениеОтНалогообложения,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|		ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
				|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодВидаИмущества, ""03"") КАК КодВидаИмущества,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
				|	" + Счетчик + " КАК Период,
				|	ВЫРАЗИТЬ(ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0) КАК ЧИСЛО(15, 2)) КАК ОстаточнаяСтоимость
				|ПОМЕСТИТЬ
				|	Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
				|ИЗ
				|	СписокОС
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
				|			ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = ПервоначальнаяСтоимостьОС.Счет ИЛИ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС) = ПервоначальнаяСтоимостьОС.Счет)
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = ПервоначальнаяСтоимостьОС.Субконто1
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
				|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = АмортизацияОС.Субконто1
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.Счет
				|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ПО СписокОС.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство,
				|	ВТ_СтавкиНалогаНаИмуществоСрезПоследних КАК СтавкиНалогаНаИмуществоСрезПоследних
				|";
				Запрос.Выполнить();
				
			КонецЕсли;
			
			Запрос.Текст = 
			"УНИЧТОЖИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов;
			|УНИЧТОЖИТЬ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних;
			|УНИЧТОЖИТЬ ВТ_СрезПоследних;
			|УНИЧТОЖИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних;
			|УНИЧТОЖИТЬ СписокОС;
			|УНИЧТОЖИТЬ СчетаУчетаОС;
			|УНИЧТОЖИТЬ СписокРазрешенныхОС;
			|УНИЧТОЖИТЬ ВТ_ПервоначальнаяСтоимостьОС;
			|УНИЧТОЖИТЬ ВТ_СтавкиНалогаНаИмуществоСрезПоследних;
			|УНИЧТОЖИТЬ ВТ_АмортизацияОС;
			|УНИЧТОЖИТЬ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних";
			Запрос.Выполнить();
			
			ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
									  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
										  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
										  |",
										  "ОБЪЕДИНИТЬ ВСЕ
										  |ВЫБРАТЬ *
										  |")
									  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
										  "ПОМЕСТИТЬ НалоговаяБазаПоНалогуНаИмущество
										  |",
										  "")
									  + "ИЗ Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
										|ГДЕ
										|	ОстаточнаяСтоимость > 0
										|";
									
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		Период  = ?(Счетчик = 13, КонецМесяца(Период), ДобавитьМесяц(Период, 1));
		
	КонецЦикла;
	
	Если ПустаяСтрока(ТекстОбъединяющегоЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	Запрос.Выполнить();
	
	///////////////////////////////////////////////////////////////////////
	// РАЗДЕЛ 2
	
	// Заполнение раздела 2 по коду вида имущества 1,2,3,4,5 (прочее имущество).
	Раздел2 = Контейнер.Раздел2;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКАТО КАК КодПоОКАТО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.СнижениеНалоговойСтавки КАК СнижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.Период КАК Период,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимость) КАК ОстаточнаяСтоимость,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьЛьготируемогоИмущества) КАК ОстаточнаяСтоимостьЛьготируемогоИмущества
	|ИЗ
	|(ВЫБРАТЬ
	|	ЕСТЬNULL(КодВидаИмущества, ""03"") КАК КодВидаИмущества,
	|	ЕСТЬNULL(ДоляСтоимостиЧислитель, 0) КАК ДоляСтоимостиЧислитель,
	|	ЕСТЬNULL(ДоляСтоимостиЗнаменатель, 0) КАК ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	ЕСТЬNULL(НалоговаяСтавка, 0) КАК НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	Период,
	|	ОстаточнаяСтоимость КАК ОстаточнаяСтоимость,
	|	ВЫБОР КОГДА ОсвобождениеОтНалогообложения = ИСТИНА ТОГДА ОстаточнаяСтоимость ИНАЧЕ 0 КОНЕЦ КАК ОстаточнаяСтоимостьЛьготируемогоИмущества
	|ИЗ
	|	НалоговаяБазаПоНалогуНаИмущество) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	КодВидаИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	Период 
	|
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимость),
	|	СУММА(ОстаточнаяСтоимостьЛьготируемогоИмущества)
	|ПО
	|	КодВидаИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	Период
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				// Создаем дополнительную страницу в декларации
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из СтраницаРаздел2 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				Раздел2[Раздел2.Количество()-1].Данные.Добавить(СтруктураНовойТаблицы); 
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			СтраницаРаздел2 = Раздел2[Раздел2.Количество()-1].Данные[0].Значение;
			
			СтраницаРаздел2.П000020000100           = ?(Лев(Выборка.КодВидаИмущества, 1) = "0", Прав(Выборка.КодВидаИмущества, 1), Выборка.КодВидаИмущества); 
			СтраницаРаздел2.П000020001000           = Выборка.КодПоОКАТО;
			СтраницаРаздел2.П000020013003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020016003_КодЛьготы = ?(Выборка.СнижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020017003           = Выборка.НалоговаяСтавка;
			
			Если Выборка.КодВидаИмущества = "02" Тогда
				ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
				ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
				
				СтраницаРаздел2.П000020015003_Числ = ДоляСтоимостиЧислитель;
				СтраницаРаздел2.П000020015003_Знам = ДоляСтоимостиЗнаменатель;
			КонецЕсли;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
		
			Если Выборка.Период = 1 Тогда
				
				СтраницаРаздел2.П000020002003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020002004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 2 Тогда

				СтраницаРаздел2.П000020003003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020003004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 3 Тогда

				СтраницаРаздел2.П000020004003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020004004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 4 Тогда

				СтраницаРаздел2.П000020005003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020005004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;
			
			ИначеЕсли Выборка.Период = 5 Тогда
		
				СтраницаРаздел2.П000020006003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020006004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 6 Тогда
				
				СтраницаРаздел2.П000020007003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020007004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 7 Тогда
				
				СтраницаРаздел2.П000020008003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020008004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 8 Тогда
		
				СтраницаРаздел2.П000020009003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020009004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 9 Тогда

				СтраницаРаздел2.П000020010003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020010004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 10 Тогда
				
				СтраницаРаздел2.П000020011003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020011004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(РегистрацияВНалоговомОргане) 
			 ИЛИ (КодНалоговогоОргана = РеквизитыОрганизации.КодНалоговогоОргана) Тогда
			
				СуммаНалога = СтраницаРаздел2.П000020018003;
				
				СуммаЛьготы = СуммаНалога * (ПроцентУменьшенияСуммыНалога / 100);
				
				СтраницаРаздел2.П000020019003_КодЛьготы = ?(СуммаЛьготы = 0, "", "2012500");
				СтраницаРаздел2.П000020020003 = Мин(СуммаНалога, СуммаЛьготы);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаИмуществоФормаОтчета2011Кв3(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000100", Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетИмуществоФормаОтчета2011Кв3(ПараметрыОтчета, Контейнер) Экспорт

	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = УправлениеВнеоборотнымиАктивами.ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период) КАК СтавкиНалогаНаИмуществоСрезПоследних
	|ГДЕ
	|	СтавкиНалогаНаИмуществоСрезПоследних.Организация = &Организация";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ПроцентУменьшенияСуммыНалога = РезультатЗапроса.Выгрузить()[0].ПроцентУменьшения;
	Иначе
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
			
		Возврат;
		
	КонецЕсли;

	Период  = НачалоМесяца(ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Счетчик = 1;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Признак применения ЕНВД.
	ПрименениеЕНВД = УчетнаяПолитика.ПлательщикЕНВД(ПараметрыОтчета.Организация, ПараметрыОтчета.мДатаКонцаПериодаОтчета);

	Если ПрименениеЕНВД Тогда 
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат)), ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)) КАК ОтношениеКЕНВД,
		|	СУММА(СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент) КАК Коэффициент
		|ПОМЕСТИТЬ ВТ_ВыборкаКоэффициентов
		|ИЗ
		|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто1 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ЕСТЬNULL(ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто2 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат, ВЫРАЗИТЬ(СпособыОтраженияРасходовПоАмортизацииСпособы.Субконто3 КАК Справочник.СтатьиЗатрат).ВидДеятельностиДляНалоговогоУчетаЗатрат)), ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)),
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка КАК Ссылка,
		|	СУММА(СпособыОтраженияРасходовПоАмортизацииСпособы.Коэффициент) КАК СуммаКоэффициентов
		|ПОМЕСТИТЬ ВТ_ВыборкаСуммыКоэффициентов
		|ИЗ
		|	Справочник.СпособыОтраженияРасходовПоАмортизации.Способы КАК СпособыОтраженияРасходовПоАмортизацииСпособы
		|СГРУППИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|ИНДЕКСИРОВАТЬ ПО
		|	СпособыОтраженияРасходовПоАмортизацииСпособы.Ссылка
		|;
		|
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВыборкаКоэффициентов.Ссылка КАК Ссылка,
		|	СУММА(ВЫБОР
		|	      	КОГДА ВыборкаКоэффициентов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
		|	      		ТОГДА ВыборкаКоэффициентов.Коэффициент / ВыборкаСуммыКоэффициентов.СуммаКоэффициентов
		|		  	ИНАЧЕ 0
		|	      КОНЕЦ) КАК НеЕНВД,
		|	СУММА(ВЫБОР
		|			КОГДА ВыборкаКоэффициентов.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
		|				ТОГДА ВыборкаКоэффициентов.Коэффициент / ВыборкаСуммыКоэффициентов.СуммаКоэффициентов
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Распределение
		|
		|ПОМЕСТИТЬ
		|	КоэффициентыЕНВД
		|
		|ИЗ
		|	ВТ_ВыборкаКоэффициентов КАК ВыборкаКоэффициентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыборкаСуммыКоэффициентов КАК ВыборкаСуммыКоэффициентов
		|		ПО ВыборкаСуммыКоэффициентов.Ссылка = ВыборкаКоэффициентов.Ссылка
		|ГДЕ
		|	ВыборкаКоэффициентов.ОтношениеКЕНВД <> ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
		|	
		|СГРУППИРОВАТЬ ПО
		|	ВыборкаКоэффициентов.Ссылка
		|";
		Запрос.Выполнить();
	КонецЕсли;

	ГоловнаяОрганизация = ПараметрыОтчета.Организация.ГоловнаяОрганизация;
	Если Не ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		ГоловнаяОрганизация = ПараметрыОтчета.Организация;
	КонецЕсли;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("КонецПериодаОтчета", КонецГода(Период));
	Запрос.УстановитьПараметр("НалоговыйОрган", ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()));
	
	Если Метаданные.Документы.Найти("АвизоОСВходящее") <> Неопределено Тогда 
		ДопУсловие = " И НЕ СостоянияОСОрганизаций.Регистратор ССЫЛКА Документ.АвизоОСВходящее";
	Иначе
		ДопУсловие = "";
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОС,
	|	МИНИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)" + ДопУсловие + "
	|	И СостоянияОСОрганизаций.Организация В
	|			(ВЫБРАТЬ
	|				Организации.Ссылка КАК Ссылка
	|			ИЗ
	|				Справочник.Организации КАК Организации
	|			ГДЕ
	|				(Организации.Ссылка = &ГоловнаяОрганизация
	|					ИЛИ Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация))
	|	И СостоянияОСОрганизаций.Период <= &КонецПериодаОтчета
	|	И НЕ СостоянияОСОрганизаций.ОсновноеСредство.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Здания), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Сооружения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МноголетниеНасаждения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования))
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний.ОС
	|ПОМЕСТИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013
	|ИЗ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний
	|ГДЕ
	|	ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний.ДатаСостояния >= ДАТАВРЕМЯ(2013, 1, 1)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013_ДатыСостояний";
	Запрос.Выполнить();
	
	ТекстОбъединяющегоЗапроса = "";
	
	Пока Период <= НачалоМесяца(ДобавитьМесяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета, 1)) Цикл
		
		ПрименениеУСН = УчетнаяПолитика.ПрименяетсяУСН(ПараметрыОтчета.Организация,
			?(Год(Период) = Год(мДатаКонцаПериодаОтчета), КонецКвартала(Период), мДатаКонцаПериодаОтчета));
		
		Если НЕ ПрименениеУСН Тогда
			//КоэффициентРаспределенияЕНВД = КоэффициентРаспределенияВыручкиПоВидамДеятельности(ПараметрыОтчета.Организация, НачалоКвартала(ПериодПолученияКоэффициентаЕНВД), КонецКвартала(ПериодПолученияКоэффициентаЕНВД));
			Запрос.УстановитьПараметр("Период",          Период);
			Запрос.УстановитьПараметр("ПериодБухИтогов", ?(Счетчик = 13, Новый Граница(Период), Период));
			
			// Срез последних записей по основному средству в регистре "Ставки налога на имущество по отдельным основным средствам".
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
			|	МАКСИМУМ(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период) КАК ПериодСреза
			|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
			|ГДЕ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период <= &Период
			|	И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Организация = &Организация
            |
			|СГРУППИРОВАТЬ ПО
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство
			|;
            |
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.НалоговыйОрган,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ПорядокНалогообложения
			|ПОМЕСТИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|ИЗ
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам
			|		ПО СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.ОсновноеСредство
			|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов.ПериодСреза = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.Период
			|";
			Запрос.Выполнить();
			
			
			Если НЕ ЗначениеЗаполнено(КодНалоговогоОргана) Тогда
				
				// Выборка объектов по основному налоговому органу организации (его нет в справочнике Регистрация в налоговом органе).
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ОС.Ссылка КАК ОсновноеСредство
				|ПОМЕСТИТЬ
				|	СписокРазрешенныхОС
				|ИЗ
				|	Справочник.ОбъектыЭксплуатации КАК ОС
				|ГДЕ
				|	(НЕ ОС.Ссылка В 
				|		(ВЫБРАТЬ
				|			СостоянияОСОрганизаций.ОсновноеСредство
				|		ИЗ
				|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
				|		ГДЕ
				|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
				|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
				|			И СостоянияОСОрганизаций.Организация = &Организация))
				|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
				|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
				|	И (НЕ ОС.Ссылка В
				|		(ВЫБРАТЬ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
				|		ИЗ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ГДЕ
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
				|			ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению)))
				|ИНДЕКСИРОВАТЬ ПО
				|	ОС.Ссылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
				|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
				|
				|ПОМЕСТИТЬ
				|	СписокОС
				|
				|ИЗ
				|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
				|			&Период,
				|			Организация = &Организация
				|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
				|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
				|ИНДЕКСИРОВАТЬ ПО
				|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
				
			Иначе
				
				Если КодНалоговогоОргана = РеквизитыОрганизации.КодНалоговогоОргана Тогда
					
					// Выборка объектов по основному налоговому органу организации (он есть в справочнике Регистрация налоговом органе).
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ОС.Ссылка КАК ОсновноеСредство
					|ПОМЕСТИТЬ
					|	СписокРазрешенныхОС
					|ИЗ
					|	Справочник.ОбъектыЭксплуатации КАК ОС
					|ГДЕ
					|	(НЕ ОС.Ссылка В 
					|		(ВЫБРАТЬ
					|			СостоянияОСОрганизаций.ОсновноеСредство
					|		ИЗ
					|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
					|		ГДЕ
					|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
					|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
					|			И СостоянияОСОрганизаций.Организация = &Организация))
					|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
					|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
					|	И (НЕ ОС.Ссылка В
					|		(ВЫБРАТЬ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
					|		ИЗ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
					|		ГДЕ
					|			(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
					|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган <> &НалоговыйОрган)
					|			ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению)))
					|ИНДЕКСИРОВАТЬ ПО
					|	ОС.Ссылка
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
					|
					|ПОМЕСТИТЬ
					|	СписокОС
					|
					|ИЗ
					|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
					|			&Период,
					|			Организация = &Организация
					|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
					|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
					|ИНДЕКСИРОВАТЬ ПО
					|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
					
				Иначе
					
					// Выборка объектов по указанному пользователем налоговому органу.
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ОС.Ссылка КАК ОсновноеСредство
					|ПОМЕСТИТЬ
					|	СписокРазрешенныхОС
					|ИЗ
					|	Справочник.ОбъектыЭксплуатации КАК ОС
					|ГДЕ
					|	(НЕ ОС.Ссылка В 
					|		(ВЫБРАТЬ
					|			СостоянияОСОрганизаций.ОсновноеСредство
					|		ИЗ
					|			РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
					|		ГДЕ
					|			СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
					|			И СостоянияОСОрганизаций.ДатаСостояния < &Период
					|			И СостоянияОСОрганизаций.Организация = &Организация))
					|	И (НЕ ОС.Ссылка В (ВЫБРАТЬ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013.ОС ИЗ ВТДвижимоеИмуществоПринятоеКУчетуПосле2013 КАК ВТДвижимоеИмуществоПринятоеКУчетуПосле2013))
					|	И (НЕ ОС.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ОбъектыПриродопользования)))
					|	И (ОС.Ссылка В
					|		(ВЫБРАТЬ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
					|		ИЗ
					|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
					|		ГДЕ
					|			(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган = &НалоговыйОрган
					|			И СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения <> ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.НеПодлежитНалогообложению))))
					|ИНДЕКСИРОВАТЬ ПО
					|	ОС.Ссылка
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
					|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
					|
					|ПОМЕСТИТЬ
					|	СписокОС
					|
					|ИЗ
					|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
					|			&Период,
					|			Организация = &Организация
					|			И (ОсновноеСредство В (ВЫБРАТЬ РАЗЛИЧНЫЕ СписокРазрешенныхОС.ОсновноеСредство ИЗ СписокРазрешенныхОС КАК СписокРазрешенныхОС))
					|	) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
					|ИНДЕКСИРОВАТЬ ПО
					|	 ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
					
				КонецЕсли;
				
			КонецЕсли;
			
			Запрос.Выполнить();
			
			// Выборка счетов учета ОС
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета,
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации
			|
			|ПОМЕСТИТЬ
			|	СчетаУчетаОС
			|
			|ИЗ
			|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС),
			|	NULL
			|";
			Запрос.Выполнить();
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	МАКСИМУМ(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Период) КАК Период,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство
			|ПОМЕСТИТЬ ВТ_СрезПоследних
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|СГРУППИРОВАТЬ ПО
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
			|ИНДЕКСИРОВАТЬ ПО
			|	ОсновноеСредство,Период
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СрезПоследних.ОсновноеСредство,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Организация,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство КАК ОсновноеСредство1,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговыйОрган,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодВидаИмущества,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель,
			|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель
			|ПОМЕСТИТЬ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|ИЗ
			|	ВТ_СрезПоследних КАК СрезПоследних
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
			|	ПО СрезПоследних.Период = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.Период
			|	И СрезПоследних.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.*
			|ПОМЕСТИТЬ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних
			|ИЗ
			|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СчетаБухгалтерскогоУчетаОССрезПоследних
			|ИНДЕКСИРОВАТЬ ПО
			|	СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПервоначальнаяСтоимостьОС.СуммаОстатокДт,
			|	ПервоначальнаяСтоимостьОС.Субконто1,
			|	ПервоначальнаяСтоимостьОС.Счет
			|ПОМЕСТИТЬ ВТ_ПервоначальнаяСтоимостьОС
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (ВЫБРАТЬ РАЗЛИЧНЫЕ СчетУчета ИЗ СчетаУчетаОС ГДЕ СчетУчета ЕСТЬ НЕ NULL), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Организация = &Организация) КАК ПервоначальнаяСтоимостьОС
			|ИНДЕКСИРОВАТЬ ПО
			|	ПервоначальнаяСтоимостьОС.Субконто1
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СтавкиНалогаНаИмуществоСрезПоследних.*
			|ПОМЕСТИТЬ ВТ_СтавкиНалогаНаИмуществоСрезПоследних
			|ИЗ
			|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, Организация = &Организация) КАК СтавкиНалогаНаИмуществоСрезПоследних
			|;
			|
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	АмортизацияОС.СуммаОстатокДт,
			|	АмортизацияОС.СуммаОстатокКт,
			|	АмортизацияОС.Субконто1,
			|	АмортизацияОС.Счет
			|ПОМЕСТИТЬ ВТ_АмортизацияОС
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Период, Счет В (ВЫБРАТЬ РАЗЛИЧНЫЕ СчетНачисленияАмортизации ИЗ СчетаУчетаОС ГДЕ СчетНачисленияАмортизации ЕСТЬ НЕ NULL), ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), Организация = &Организация) КАК АмортизацияОС
			|ИНДЕКСИРОВАТЬ ПО
			|	АмортизацияОС.Субконто1
			|;
			|";
			
			Запрос.УстановитьПараметр("ДатаПодписи", ПараметрыОтчета.ДатаПодписи);
			
			Если ПрименениеЕНВД Тогда
				
				Запрос.УстановитьПараметр("КоэффициентРаспределенияЕНВД", 1);
				
				Запрос.Текст = Запрос.Текст +
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СписокОС.ОсновноеСредство,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
				|		  ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|		ТОГДА 
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО
				|		ИНАЧЕ 
				|			ЕстьNULL(СтавкиНалогаНаИмуществоСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
				|	КОНЕЦ КАК КодПоОКАТО,
				|	ЕСТЬNULL(ВЫБОР
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка
				|			ИНАЧЕ ВЫБОР
				|			      КОГДА СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки
				|			      	ТОГДА СтавкиНалогаНаИмуществоСрезПоследних.СниженнаяНалоговаяСтавка
				|			      ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка
				|			      КОНЕЦ
				|			КОНЕЦ, СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка) КАК НалоговаяСтавка,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки, ЛОЖЬ)
				|	КОНЕЦ КАК СнижениеНалоговойСтавки,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ОсвобождениеОтНалогообложения, ЛОЖЬ)
				|	КОНЕЦ КАК ОсвобождениеОтНалогообложения,
				|	ВЫБОР
				|		КОГДА СписокОС.ОсновноеСредство.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Здания), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Сооружения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МноголетниеНасаждения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации))
				|			ТОГДА ИСТИНА
				|		ИНАЧЕ ЛОЖЬ
				|	КОНЕЦ КАК ЭтоНедвижимость,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|		ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
				|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодВидаИмущества, ""03"") КАК КодВидаИмущества,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
				|	" + Счетчик + " КАК Период,
				|	ВЫРАЗИТЬ((ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0)) * КоэффициентыЕНВД.НеЕНВД
				|		+ (ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0)) * КоэффициентыЕНВД.Распределение * &КоэффициентРаспределенияЕНВД КАК ЧИСЛО(15, 2)) КАК ОстаточнаяСтоимость
				|ПОМЕСТИТЬ
				|	Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
				|ИЗ
				|	СписокОС
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
				|			ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = ПервоначальнаяСтоимостьОС.Счет ИЛИ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС) = ПервоначальнаяСтоимостьОС.Счет)
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = ПервоначальнаяСтоимостьОС.Субконто1
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
				|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = АмортизацияОС.Субконто1
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.Счет
				|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ПО СписокОС.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство,
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(&Период, Организация = &Организация И ОсновноеСредство В (ВЫБРАТЬ ОсновноеСредство ИЗ СписокОС)) КАК СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыЕНВД
				|			ПО СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации = КоэффициентыЕНВД.Ссылка
				|		ПО СписокОС.ОсновноеСредство = СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство,
				|	ВТ_СтавкиНалогаНаИмуществоСрезПоследних КАК СтавкиНалогаНаИмуществоСрезПоследних
				|";
				Запрос.Выполнить();
				
			Иначе
				
				Запрос.Текст = Запрос.Текст +
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СписокОС.ОсновноеСредство,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.СДругимКодомПоОКАТО)
				|		  ИЛИ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|		ТОГДА 
				|			СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодПоОКАТО
				|		ИНАЧЕ 
				|			ЕстьNULL(СтавкиНалогаНаИмуществоСрезПоследних.Организация.РегистрацияВНалоговомОргане.КодПоОКАТО, """")
				|	КОНЕЦ КАК КодПоОКАТО,
				|	ЕСТЬNULL(ВЫБОР
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.СниженнаяНалоговаяСтавка
				|			КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|				ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.НалоговаяСтавка
				|			ИНАЧЕ ВЫБОР
				|			      КОГДА СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки
				|			      	ТОГДА СтавкиНалогаНаИмуществоСрезПоследних.СниженнаяНалоговаяСтавка
				|			      ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка
				|			      КОНЕЦ
				|			КОНЕЦ, СтавкиНалогаНаИмуществоСрезПоследних.НалоговаяСтавка) КАК НалоговаяСтавка,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОблагаетсяПоСниженнойСтавке)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.СнижениеНалоговойСтавки, ЛОЖЬ)
				|	КОНЕЦ КАК СнижениеНалоговойСтавки,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА ИСТИНА
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПостановкаНаУчетВНалоговомОргане = ЗНАЧЕНИЕ(Перечисление.ПостановкаНаУчетВНалоговомОргане.ВДругомНалоговомОргане)
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ОсвобождениеОтНалогообложения, ЛОЖЬ)
				|	КОНЕЦ КАК ОсвобождениеОтНалогообложения,
				|	ВЫБОР
				|		КОГДА СписокОС.ОсновноеСредство.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Здания), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Сооружения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.МноголетниеНасаждения), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации))
				|			ТОГДА ИСТИНА
				|		ИНАЧЕ ЛОЖЬ
				|	КОНЕЦ КАК ЭтоНедвижимость,
				|	ВЫБОР
				|		КОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ПорядокНалогообложения = ЗНАЧЕНИЕ(Перечисление.ПорядокНалогообложенияИмущества.ОсвобождаетсяОтНалогообложения)
				|			ТОГДА СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|		ИНАЧЕ СтавкиНалогаНаИмуществоСрезПоследних.КодНалоговойЛьготыОсвобождениеОтНалогообложения
				|	КОНЕЦ КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
				|	ЕСТЬNULL(СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.КодВидаИмущества, ""03"") КАК КодВидаИмущества,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
				|	СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
				|	" + Счетчик + " КАК Период,
				|	ВЫРАЗИТЬ(ЕСТЬNULL(ПервоначальнаяСтоимостьОС.СуммаОстатокДт, 0) - ЕСТЬNULL(ВЫБОР КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса) ИЛИ СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) ТОГДА АмортизацияОС.СуммаОстатокДт ИНАЧЕ АмортизацияОС.СуммаОстатокКт КОНЕЦ, 0) КАК ЧИСЛО(15, 2)) КАК ОстаточнаяСтоимость
				|ПОМЕСТИТЬ
				|	Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
				|ИЗ
				|	СписокОС
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПервоначальнаяСтоимостьОС КАК ПервоначальнаяСтоимостьОС
				|			ПО (СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = ПервоначальнаяСтоимостьОС.Счет ИЛИ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС) = ПервоначальнаяСтоимостьОС.Счет)
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = ПервоначальнаяСтоимостьОС.Субконто1
				|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияОС КАК АмортизацияОС
				|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = АмортизацияОС.Субконто1
				|			 И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.Счет
				|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
				|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних КАК СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних
				|		ПО СписокОС.ОсновноеСредство = СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних.ОсновноеСредство,
				|	ВТ_СтавкиНалогаНаИмуществоСрезПоследних КАК СтавкиНалогаНаИмуществоСрезПоследних
				|";
				Запрос.Выполнить();
				
			КонецЕсли;
			
			Запрос.Текст = 
			"УНИЧТОЖИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследнихПериодов;
			|УНИЧТОЖИТЬ ВТ_СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних;
			|УНИЧТОЖИТЬ ВТ_СрезПоследних;
			|УНИЧТОЖИТЬ СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствамСрезПоследних;
			|УНИЧТОЖИТЬ СписокОС;
			|УНИЧТОЖИТЬ СчетаУчетаОС;
			|УНИЧТОЖИТЬ ВТ_ПервоначальнаяСтоимостьОС;
			|УНИЧТОЖИТЬ ВТ_СчетаБухгалтерскогоУчетаОССрезПоследних;
			|УНИЧТОЖИТЬ ВТ_СтавкиНалогаНаИмуществоСрезПоследних;
			|УНИЧТОЖИТЬ ВТ_АмортизацияОС;
			|УНИЧТОЖИТЬ СписокРазрешенныхОС";
			Запрос.Выполнить();
			
			ТекстОбъединяющегоЗапроса = ТекстОбъединяющегоЗапроса
									  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
										  "ВЫБРАТЬ РАЗРЕШЕННЫЕ *
			                              |",
										  "ОБЪЕДИНИТЬ ВСЕ
										  |ВЫБРАТЬ *
			                              |")
									  + ?(ПустаяСтрока(ТекстОбъединяющегоЗапроса), 
										  "ПОМЕСТИТЬ НалоговаяБазаПоНалогуНаИмущество
										  |",
										  "")
									  + "ИЗ Выборка" + Формат(Счетчик, "ЧЦ=2; ЧВН=") + "
			                            |ГДЕ
			                            |	ОстаточнаяСтоимость > 0
										|";
			
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		Период  = ДобавитьМесяц(Период, 1);
	КонецЦикла;
	
	Если ПустаяСтрока(ТекстОбъединяющегоЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = ТекстОбъединяющегоЗапроса;
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКАТО КАК КодПоОКАТО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.СнижениеНалоговойСтавки КАК СнижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.Период КАК Период,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимость) КАК ОстаточнаяСтоимость,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьЛьготируемогоИмущества) КАК ОстаточнаяСтоимостьЛьготируемогоИмущества,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНедвижимости) КАК ОстаточнаяСтоимостьНедвижимости,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНедвижимостиЛьготируемогоИмущества) КАК ОстаточнаяСтоимостьНедвижимостиЛьготируемогоИмущества
	|ИЗ
	|(ВЫБРАТЬ
	|	ЕСТЬNULL(КодВидаИмущества, ""03"") КАК КодВидаИмущества,
	|	ЕСТЬNULL(ДоляСтоимостиЧислитель, 0) КАК ДоляСтоимостиЧислитель,
	|	ЕСТЬNULL(ДоляСтоимостиЗнаменатель, 0) КАК ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	ЕСТЬNULL(НалоговаяСтавка, 0) КАК НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	Период,
	|	ОстаточнаяСтоимость КАК ОстаточнаяСтоимость,
	|	ВЫБОР КОГДА ОсвобождениеОтНалогообложения = ИСТИНА ТОГДА ОстаточнаяСтоимость ИНАЧЕ 0 КОНЕЦ КАК ОстаточнаяСтоимостьЛьготируемогоИмущества,
	|	ВЫБОР КОГДА ЭтоНедвижимость = ИСТИНА ТОГДА ОстаточнаяСтоимость ИНАЧЕ 0 КОНЕЦ КАК ОстаточнаяСтоимостьНедвижимости,
	|	ВЫБОР КОГДА ЭтоНедвижимость = ИСТИНА И ОсвобождениеОтНалогообложения = ИСТИНА ТОГДА ОстаточнаяСтоимость ИНАЧЕ 0 КОНЕЦ КАК ОстаточнаяСтоимостьНедвижимостиЛьготируемогоИмущества
    |ИЗ
	|	НалоговаяБазаПоНалогуНаИмущество ) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	КодВидаИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	Период
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимость),
	|	СУММА(ОстаточнаяСтоимостьЛьготируемогоИмущества),
	|	СУММА(ОстаточнаяСтоимостьНедвижимости),
	|	СУММА(ОстаточнаяСтоимостьНедвижимостиЛьготируемогоИмущества)
	|ПО
	|	КодВидаИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКАТО,
	|	НалоговаяСтавка,
	|	СнижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				// Создаем дополнительную страницу в декларации
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из СтраницаРаздел2 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				Раздел2[Раздел2.Количество()-1].Данные.Добавить(СтруктураНовойТаблицы); 
				СтраницаРаздел2 =  Раздел2[Раздел2.Количество()-1].Данные[0].Значение;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020000100 = ?(Лев(Выборка.КодВидаИмущества, 1) = "0", Прав(Выборка.КодВидаИмущества, 1), Выборка.КодВидаИмущества);
			СтраницаРаздел2.П000020001000 = Выборка.КодПоОКАТО;
			СтраницаРаздел2.П000020016003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020020003_КодЛьготы = ?(Выборка.СнижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020021003 = Выборка.НалоговаяСтавка;
			
			Если Выборка.КодВидаИмущества = "02" Тогда
				ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
				ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
				
				СтраницаРаздел2.П000020018003_Числ = ДоляСтоимостиЧислитель;
				СтраницаРаздел2.П000020018003_Знам = ДоляСтоимостиЗнаменатель;
			КонецЕсли;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
		
			Если Выборка.Период = 1 Тогда
				
				СтраницаРаздел2.П000020002003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020002004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 2 Тогда

				СтраницаРаздел2.П000020003003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020003004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 3 Тогда

				СтраницаРаздел2.П000020004003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020004004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 4 Тогда

				СтраницаРаздел2.П000020005003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020005004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;
			
			ИначеЕсли Выборка.Период = 5 Тогда
		
				СтраницаРаздел2.П000020006003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020006004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 6 Тогда
				
				СтраницаРаздел2.П000020007003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020007004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 7 Тогда
				
				СтраницаРаздел2.П000020008003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020008004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 8 Тогда
		
				СтраницаРаздел2.П000020009003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020009004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 9 Тогда

				СтраницаРаздел2.П000020010003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020010004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 10 Тогда
				
				СтраницаРаздел2.П000020011003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020011004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 11 Тогда
				
				СтраницаРаздел2.П000020012003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020012004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 12 Тогда
				
				СтраницаРаздел2.П000020013003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020013004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;

			ИначеЕсли Выборка.Период = 13 Тогда
				
				СтраницаРаздел2.П000020014003 = Выборка.ОстаточнаяСтоимость;
				СтраницаРаздел2.П000020014004 = Выборка.ОстаточнаяСтоимостьЛьготируемогоИмущества;
				СтраницаРаздел2.П000020014103 = Выборка.ОстаточнаяСтоимостьНедвижимости;
				СтраницаРаздел2.П000020014104 = Выборка.ОстаточнаяСтоимостьНедвижимостиЛьготируемогоИмущества;

			КонецЕсли;
			
			
			Если НЕ ЗначениеЗаполнено(РегистрацияВНалоговомОргане) 
			 ИЛИ (КодНалоговогоОргана = ПараметрыОтчета.Организация.КодНалоговогоОргана) Тогда
			
				СуммаНалога = СтраницаРаздел2.П000020022003;
								
				СуммаЛьготы = СуммаНалога * (ПроцентУменьшенияСуммыНалога / 100);
							  
				СтраницаРаздел2.П000020024003_КодЛьготы = ?(СуммаЛьготы = 0, "", "2012500");
				СтраницаРаздел2.П000020025003 = Мин(СуммаНалога, СуммаЛьготы);
				
			КонецЕсли;

		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Имущество2013Кв4

Процедура ПолучитьСведенияОПоказателяхОтчетаАвансыИмуществоФормаОтчета2013Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003_1", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010003003_1", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000101", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001401", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001501", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030004003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030006003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030010003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030011003", Истина, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетАвансыИмуществоФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Перем ТаблицаРасшифровки;
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = УправлениеВнеоборотнымиАктивами.ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	УплачиваютсяАвансы = РасчетИмущественныхНалогов.УплачиваютсяАвансыПоНалогуНаИмущество(Организация, мДатаКонцаПериодаОтчета);
	
	Если Не УплачиваютсяАвансы Тогда 
		
		ПутьКРегистру = НСтр("ru='(раздел ""Нормативно-справочная информация"" - ""Организация"" - ""Учетная политика и налоги"")'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не настроена уплата авансов по налогу на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета),"ФП = Истина")
			,Организация, ПутьКРегистру));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;	
		
	КонецЕсли;

	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период) КАК СтавкиНалогаНаИмуществоСрезПоследних
	|ГДЕ
	|	СтавкиНалогаНаИмуществоСрезПоследних.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтавкиНалогаПоОССрезПоследних.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазапоНалогуНаИмущество.КадастроваяСтоимость)) КАК СтавкиНалогаПоОССрезПоследних
	|ГДЕ
	|	СтавкиНалогаПоОССрезПоследних.Организация = &Организация";

	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ Результат[0].Пустой() Тогда
		ПроцентУменьшенияСуммыНалога = Результат[0].Выгрузить()[0].ПроцентУменьшения;
	ИначеЕсли Результат[1].Пустой() Тогда 
		
		ПутьКРегистру = НСтр("ru='(раздел ""Нормативно-справочная информация"" - ""Организация"" - ""Учетная политика и налоги"")'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета),"ФП = Истина")
			,Организация, ПутьКРегистру));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
		
	КонецЕсли;
	
	///////////////////////////////////////////////////////////////////////
	// РАЗДЕЛ 2
	
	// Заполнение раздела 2 по коду вида имущества 1,2,3,4,5 (прочее имущество).
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Раздел2 = Контейнер.Раздел2;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.ИФНС,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0101 КАК ОстаточнаяСтоимостьНа0101,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0102 КАК ОстаточнаяСтоимостьНа0102,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0103 КАК ОстаточнаяСтоимостьНа0103,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0104 КАК ОстаточнаяСтоимостьНа0104,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0105 КАК ОстаточнаяСтоимостьНа0105,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0106 КАК ОстаточнаяСтоимостьНа0106,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0107 КАК ОстаточнаяСтоимостьНа0107,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0108 КАК ОстаточнаяСтоимостьНа0108,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0109 КАК ОстаточнаяСтоимостьНа0109,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0110 КАК ОстаточнаяСтоимостьНа0110,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьОсновныхСредств КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	РасчетНалогаНаИмущество.КадастровыйНомер,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.КадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.НеоблагаемаяКадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.СуммаУменьшенияСуммыНалога,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевВладения,
	|	РасчетНалогаНаИмущество.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.Организация = &Организация
	|	И РасчетНалогаНаИмущество.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоНалогуНаИмущество = Новый ТаблицаЗначений;
	РегламентныеОперацииВыполнены = Ложь;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоНалогуНаИмущество = Выборка.Выгрузить();
		РегламентныеОперацииВыполнены = Истина;
	Иначе
		ТаблицаРасчетовПоНалогуНаИмущество = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;	
	
	Отбор = Новый Структура("ИФНС, ВидНалоговойБазы, КоличествоМесяцевВладения",
		?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()),
		Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость,
		0);
		
	НайденныеСтроки = ТаблицаРасчетовПоНалогуНаИмущество.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		ПутьКРегистру = НСтр("ru='(раздел ""Нормативно-справочная информация"" - ""Организация"" - ""Учетная политика и налоги"")'");
		
		Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл
		
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			    НСтр("ru = 'Не заполнена дата регистрации права собственности для объекта %1
				|%2'"),	СтрокаТаблицы.ОсновноеСредство, ПутьКРегистру));
				
		КонецЦикла;
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоНалогуНаИмущество", ТаблицаРасчетовПоНалогуНаИмущество);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	Поместить ВТ_ТаблицаРасчетовПоНалогуНаИмущество
	|	Из &ТаблицаРасчетовПоНалогуНаИмущество КАК ТаблицаРасчетовПоНалогуНаИмущество";
	Запрос.Выполнить();
		
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0101) КАК ОстаточнаяСтоимостьНа0101,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0102) КАК ОстаточнаяСтоимостьНа0102,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0103) КАК ОстаточнаяСтоимостьНа0103,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0104) КАК ОстаточнаяСтоимостьНа0104,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0105) КАК ОстаточнаяСтоимостьНа0105,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0106) КАК ОстаточнаяСтоимостьНа0106,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0107) КАК ОстаточнаяСтоимостьНа0107,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0108) КАК ОстаточнаяСтоимостьНа0108,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0109) КАК ОстаточнаяСтоимостьНа0109,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0110) КАК ОстаточнаяСтоимостьНа0110,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьОсновныхСредств) КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения <> """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЛьготируемаяСтоимость,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	СУММА(ВложенныйЗапрос.СуммаУменьшенияСуммыНалога) КАК СуммаУменьшенияСуммыНалога
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ВидНалоговойБазы
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимостьНа0101),
	|	СУММА(ОстаточнаяСтоимостьНа0102),
	|	СУММА(ОстаточнаяСтоимостьНа0103),
	|	СУММА(ОстаточнаяСтоимостьНа0104),
	|	СУММА(ОстаточнаяСтоимостьНа0105),
	|	СУММА(ОстаточнаяСтоимостьНа0106),
	|	СУММА(ОстаточнаяСтоимостьНа0107),
	|	СУММА(ОстаточнаяСтоимостьНа0108),
	|	СУММА(ОстаточнаяСтоимостьНа0109),
	|	СУММА(ОстаточнаяСтоимостьНа0110),
	|	СУММА(ОстаточнаяСтоимостьОсновныхСредств),
	|	МАКСИМУМ(ЛьготируемаяСтоимость),
	|	СУММА(СуммаУменьшенияСуммыНалога)
	|ПО
	|	КодВидаИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКТМО,
	|	НалоговаяСтавка,
	|	ПонижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВидНалоговойБазы";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				// Создаем дополнительную страницу в декларации
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из СтраницаРаздел2 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				Раздел2[Раздел2.Количество()-1].Данные.Добавить(СтруктураНовойТаблицы); 
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			СтраницаРаздел2 = Раздел2[Раздел2.Количество()-1].Данные[0].Значение;
			
			СтраницаРаздел2.П000020000101           = ?(Лев(Выборка.КодВидаИмущества, 1) = "0", Прав(Выборка.КодВидаИмущества, 1), Выборка.КодВидаИмущества); 
			СтраницаРаздел2.П000020001001           = Выборка.КодПоОКТМО;
			СтраницаРаздел2.П000020013003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020016003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020017003           = Выборка.НалоговаяСтавка;
			
			Если Выборка.КодВидаИмущества = "02" Тогда
				ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
				ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
				
				СтраницаРаздел2.П000020015003_Числ = ДоляСтоимостиЧислитель;
				СтраницаРаздел2.П000020015003_Знам = ДоляСтоимостиЗнаменатель;
			КонецЕсли;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КодВидаИмущества = Новый ПолеКомпоновкиДанных("КодВидаИмущества");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодВидаИмущества , ВидСравненияКомпоновкиДанных.Равно, Выборка.КодВидаИмущества);
			
			ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
			
			СтраницаРаздел2.П000020002003 = Выборка.ОстаточнаяСтоимостьНа0101;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020002003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020002004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0101, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020002004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003003 = Выборка.ОстаточнаяСтоимостьНа0102;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020003003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0102, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020003004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004003 = Выборка.ОстаточнаяСтоимостьНа0103;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020004003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0103, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020004004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005003 = Выборка.ОстаточнаяСтоимостьНа0104;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020005003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0104, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020005004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006003 = Выборка.ОстаточнаяСтоимостьНа0105;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020006003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0105, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020006004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007003 = Выборка.ОстаточнаяСтоимостьНа0106;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020007003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0106, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020007004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008003 = Выборка.ОстаточнаяСтоимостьНа0107;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020008003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0107, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020008004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009003 = Выборка.ОстаточнаяСтоимостьНа0108;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020009003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0108, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020009004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010003 = Выборка.ОстаточнаяСтоимостьНа0109;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020010003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0109, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020010004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011003 = Выборка.ОстаточнаяСтоимостьНа0110;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020011003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0110, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020011004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020021003 = Выборка.ОстаточнаяСтоимостьОсновныхСредств;
						
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020012003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020018003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020018003, "", ДополнительныеПараметры);
						
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда 
				
				СтраницаРаздел2.П000020019003_КодЛьготы = "2012500";
				СтраницаРаздел2.П000020020003 = Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020020003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020020003, "", ДополнительныеПараметры);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Заполнение раздела 3
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.КадастровыйНомер КАК КадастровыйНомерЗдания,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	ВложенныйЗапрос.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ВидНалоговойБазы,
	|	ВложенныйЗапрос.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)";
	
	Раздел3 = Контейнер.Раздел3;
	СтраницаРаздел3 =  Раздел3[0].Данные[0].Значение;
	Для Каждого Показатель Из СтраницаРаздел3 Цикл
		СтраницаРаздел3[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел3.Количество()>1 Цикл
		Раздел3.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если Не ПерваяСтраница Тогда
			// Создаем дополнительную страницу в декларации
			СтруктураНовойТаблицы = Новый Структура();
			Для Каждого Показатель Из СтраницаРаздел3 Цикл
				СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			
			Раздел3.Добавить().Данные = Новый СписокЗначений();
			Раздел3[Раздел3.Количество()-1].Данные.Добавить(СтруктураНовойТаблицы); 
			СтраницаРаздел3 =  Раздел3[Раздел3.Количество()-1].Данные[0].Значение;
			
		Иначе
			// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
			ПерваяСтраница = Ложь;
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		
		ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
		Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
		Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
		
		ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
		
		ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
		
		ПолеКомпоновкиДанных_КадастровыйНомер = Новый ПолеКомпоновкиДанных("КадастровыйНомер");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомер , ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерЗдания);
		
		ПолеКомпоновкиДанных_КадастровыйНомерПомещения = Новый ПолеКомпоновкиДанных("КадастровыйНомерПомещения");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомерПомещения, ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерПомещения);
		
		ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
		
		ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
		
		ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
		
		ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
		ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
		
		СтраницаРаздел3.П000030001001 = Выборка.КодПоОКТМО;
		СтраницаРаздел3.П000030001401 = Выборка.КадастровыйНомерЗдания;
		СтраницаРаздел3.П000030001501 = Выборка.КадастровыйНомерПомещения;
		СтраницаРаздел3.П000030002003 = Выборка.КадастроваяСтоимость;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030002003, "", ДополнительныеПараметры);
		СтраницаРаздел3.П000030003003 = Выборка.НеоблагаемаяКадастроваяСтоимость;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030003003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030003003, "", ДополнительныеПараметры);
		
		СтраницаРаздел3.П000030004003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
		СтраницаРаздел3.П000030006003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
		
		СтраницаРаздел3.П000030005003_Числ = Выборка.ДоляСтоимостиЧислитель;
		СтраницаРаздел3.П000030005003_Знам = Выборка.ДоляСтоимостиЗнаменатель;
		
		СтраницаРаздел3.П000030007003 = Выборка.НалоговаяСтавка;
		
		КоличествоМесяцевВПериоде = ?(Год(мДатаКонцаПериодаОтчета) < 2016, Месяц(мДатаКонцаПериодаОтчета), 3);
		Если Выборка.КоличествоМесяцевВладения > 0 И Выборка.КоличествоМесяцевВладения < КоличествоМесяцевВПериоде Тогда 
			СтраницаРаздел3.П000030008003_Числ = Строка(Выборка.КоличествоМесяцевВладения);
			СтраницаРаздел3.П000030008003_Знам = Строка(КоличествоМесяцевВПериоде);
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030009003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030009003, "", ДополнительныеПараметры);
		
		Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
		     
			СтраницаРаздел3.П000030010003_КодЛьготы = "2012500";
			СтраницаРаздел3.П000030011003 = Выборка.СуммаУменьшенияСуммыНалога;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030011003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030011003, "", ДополнительныеПараметры);
			
		КонецЕсли;
			
	КонецЦикла;
	
	ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
	
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаИмуществоФормаОтчета2013Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003_1", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010003003_1", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010004003_1", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000101", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014104", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020027003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020025003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001401", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001501", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030004003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030007003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030009003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030009003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030012003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030011003", Истина, Истина);

КонецПроцедуры

Процедура ЗаполнитьОтчетИмуществоФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Перем ТаблицаРасшифровки; // Таблица для сбора сведений о расшифровке
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	
	Если Организация.ОбособленноеПодразделение = Истина Тогда
		КодыРегистрацииГоловнойОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация.ГоловнаяОрганизация, "КодНалоговогоОргана, КПП");
		РегистрацияВНалоговомОргане = 
			УправлениеВнеоборотнымиАктивами.ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(
																Организация.ГоловнаяОрганизация, 
																КодыРегистрацииГоловнойОрганизации.КодНалоговогоОргана, 
																КодыРегистрацииГоловнойОрганизации.КПП);
	Иначе
		РегистрацияВНалоговомОргане = УправлениеВнеоборотнымиАктивами.ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	КонецЕсли;
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, ) КАК СтавкиНалогаНаИмуществоСрезПоследних
	|ГДЕ
	|	СтавкиНалогаНаИмуществоСрезПоследних.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтавкиНалогаПоОССрезПоследних.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазапоНалогуНаИмущество.КадастроваяСтоимость)) КАК СтавкиНалогаПоОССрезПоследних
	|ГДЕ
	|	СтавкиНалогаПоОССрезПоследних.Организация = &Организация";

	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ Результат[0].Пустой() Тогда
		ПроцентУменьшенияСуммыНалога = Результат[0].Выгрузить()[0].ПроцентУменьшения;
	ИначеЕсли Результат[1].Пустой() Тогда
		
		ПутьКРегистру = НСтр("ru='(меню ""Учет, налоги, отчетность"" - ""Ставки налога на имущество"")'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,Организация, ПутьКРегистру));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ИФНС,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0101 КАК ОстаточнаяСтоимостьНа0101,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0102 КАК ОстаточнаяСтоимостьНа0102,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0103 КАК ОстаточнаяСтоимостьНа0103,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0104 КАК ОстаточнаяСтоимостьНа0104,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0105 КАК ОстаточнаяСтоимостьНа0105,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0106 КАК ОстаточнаяСтоимостьНа0106,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0107 КАК ОстаточнаяСтоимостьНа0107,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0108 КАК ОстаточнаяСтоимостьНа0108,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0109 КАК ОстаточнаяСтоимостьНа0109,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0110 КАК ОстаточнаяСтоимостьНа0110,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0111 КАК ОстаточнаяСтоимостьНа0111,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0112 КАК ОстаточнаяСтоимостьНа0112,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа3112 КАК ОстаточнаяСтоимостьНа3112,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНедвижимости КАК ОстаточнаяСтоимостьНедвижимости,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьОсновныхСредств КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	РасчетНалогаНаИмущество.КадастровыйНомер,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.КадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.НеоблагаемаяКадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.СуммаАвансовыхПлатежей,
	|	РасчетНалогаНаИмущество.СуммаУменьшенияСуммыНалога,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевВладения,
	|	РасчетНалогаНаИмущество.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.Организация = &Организация
	|	И РасчетНалогаНаИмущество.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоНалогуНаИмущество = Новый ТаблицаЗначений;
	РегламентныеОперацииВыполнены = Ложь;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоНалогуНаИмущество = Выборка.Выгрузить();
		РегламентныеОперацииВыполнены = Истина;
	Иначе
		ТаблицаРасчетовПоНалогуНаИмущество = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;
	
	Отбор = Новый Структура("ИФНС, ВидНалоговойБазы, КоличествоМесяцевВладения",
		?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()),
		Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость,
		0);
		
	НайденныеСтроки = ТаблицаРасчетовПоНалогуНаИмущество.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		ПутьКРегистру = НСтр("ru='(раздел ""Нормативно-справочная информация"" - ""Организация"" - ""Учетная политика и налоги"")'");
		
		Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл
		
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			    НСтр("ru = 'Не заполнена дата регистрации права собственности для объекта %1
				|%2'"),	СтрокаТаблицы.ОсновноеСредство, ПутьКРегистру));
				
		КонецЦикла;
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоНалогуНаИмущество", ТаблицаРасчетовПоНалогуНаИмущество);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	Поместить ВТ_ТаблицаРасчетовПоНалогуНаИмущество
	|	Из &ТаблицаРасчетовПоНалогуНаИмущество как ТаблицаРасчетовПоНалогуНаИмущество";
	Запрос.Выполнить();
	
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0101) КАК ОстаточнаяСтоимостьНа0101,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0102) КАК ОстаточнаяСтоимостьНа0102,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0103) КАК ОстаточнаяСтоимостьНа0103,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0104) КАК ОстаточнаяСтоимостьНа0104,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0105) КАК ОстаточнаяСтоимостьНа0105,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0106) КАК ОстаточнаяСтоимостьНа0106,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0107) КАК ОстаточнаяСтоимостьНа0107,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0108) КАК ОстаточнаяСтоимостьНа0108,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0109) КАК ОстаточнаяСтоимостьНа0109,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0110) КАК ОстаточнаяСтоимостьНа0110,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0111) КАК ОстаточнаяСтоимостьНа0111,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0112) КАК ОстаточнаяСтоимостьНа0112,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа3112) КАК ОстаточнаяСтоимостьНа3112,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНедвижимости) КАК ОстаточнаяСтоимостьНедвижимости,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьОсновныхСредств) КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	СУММА(ВложенныйЗапрос.СуммаАвансовыхПлатежей) КАК СуммаАвансовыхПлатежей,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения <> """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЛьготируемаяСтоимость,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	СУММА(ВложенныйЗапрос.СуммаУменьшенияСуммыНалога) КАК СуммаУменьшенияСуммыНалога
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ВидНалоговойБазы
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимостьНа0101),
	|	СУММА(ОстаточнаяСтоимостьНа0102),
	|	СУММА(ОстаточнаяСтоимостьНа0103),
	|	СУММА(ОстаточнаяСтоимостьНа0104),
	|	СУММА(ОстаточнаяСтоимостьНа0105),
	|	СУММА(ОстаточнаяСтоимостьНа0106),
	|	СУММА(ОстаточнаяСтоимостьНа0107),
	|	СУММА(ОстаточнаяСтоимостьНа0108),
	|	СУММА(ОстаточнаяСтоимостьНа0109),
	|	СУММА(ОстаточнаяСтоимостьНа0110),
	|	СУММА(ОстаточнаяСтоимостьНа0111),
	|	СУММА(ОстаточнаяСтоимостьНа0112),
	|	СУММА(ОстаточнаяСтоимостьНа3112),
	|	СУММА(ОстаточнаяСтоимостьНедвижимости),
	|	СУММА(ОстаточнаяСтоимостьОсновныхСредств),
	|	СУММА(СуммаАвансовыхПлатежей),
	|	МАКСИМУМ(ЛьготируемаяСтоимость),
	|	СУММА(СуммаУменьшенияСуммыНалога)
	|ПО
	|	КодВидаИмущества,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКТМО,
	|	НалоговаяСтавка,
	|	ПонижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВидНалоговойБазы";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПерваяСтраница = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				// Создаем дополнительную страницу в декларации
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из СтраницаРаздел2 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Раздел2.Добавить().Данные = Новый СписокЗначений();
				Раздел2[Раздел2.Количество()-1].Данные.Добавить(СтруктураНовойТаблицы); 
				СтраницаРаздел2 =  Раздел2[Раздел2.Количество()-1].Данные[0].Значение;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			СтраницаРаздел2.П000020000101 = ?(Лев(Выборка.КодВидаИмущества, 1) = "0", Прав(Выборка.КодВидаИмущества, 1), Выборка.КодВидаИмущества);
			СтраницаРаздел2.П000020001001 = Выборка.КодПоОКТМО;
			СтраницаРаздел2.П000020016003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020020003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020021003 = Выборка.НалоговаяСтавка;
			
			Если Выборка.КодВидаИмущества = "02" Тогда
				ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
				ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
				
				СтраницаРаздел2.П000020018003_Числ = ДоляСтоимостиЧислитель;
				СтраницаРаздел2.П000020018003_Знам = ДоляСтоимостиЗнаменатель;
			КонецЕсли;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КодВидаИмущества = Новый ПолеКомпоновкиДанных("КодВидаИмущества");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодВидаИмущества , ВидСравненияКомпоновкиДанных.Равно, Выборка.КодВидаИмущества);
			
			ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
					
			СтраницаРаздел2.П000020002003 = Выборка.ОстаточнаяСтоимостьНа0101;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020002003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020002004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0101, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020002004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003003 = Выборка.ОстаточнаяСтоимостьНа0102;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020003003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0102, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020003004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004003 = Выборка.ОстаточнаяСтоимостьНа0103;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020004003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0103, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020004004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005003 = Выборка.ОстаточнаяСтоимостьНа0104;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020005003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0104, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020005004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006003 = Выборка.ОстаточнаяСтоимостьНа0105;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020006003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0105, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020006004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007003 = Выборка.ОстаточнаяСтоимостьНа0106;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020007003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0106, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020007004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008003 = Выборка.ОстаточнаяСтоимостьНа0107;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020008003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0107, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020008004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009003 = Выборка.ОстаточнаяСтоимостьНа0108;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020009003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0108, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020009004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010003 = Выборка.ОстаточнаяСтоимостьНа0109;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020010003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0109, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020010004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011003 = Выборка.ОстаточнаяСтоимостьНа0110;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020011003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0110, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020011004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020012003 = Выборка.ОстаточнаяСтоимостьНа0111;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020012003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020012004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0111, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020012004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020013003 = Выборка.ОстаточнаяСтоимостьНа0112;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020013003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020013003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020013004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0112, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020013004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020013004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014003 = Выборка.ОстаточнаяСтоимостьНа3112;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014004 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа3112, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014004_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014103 = Выборка.ОстаточнаяСтоимостьНедвижимости;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014103_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014103, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014104 = ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНедвижимости, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014104_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014104, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020023003 = Выборка.СуммаАвансовыхПлатежей;
						
			СтраницаРаздел2.П000020027003 = Выборка.ОстаточнаяСтоимостьОсновныхСредств;
						
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014103_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014103, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014104_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020014104, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020015003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020015003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020017003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020017003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020019003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020019003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020022003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020022003, "", ДополнительныеПараметры);
									
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
			
				СтраницаРаздел2.П000020024003_КодЛьготы = "2012500";
				СтраницаРаздел2.П000020025003 = Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020025003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020025003, "", ДополнительныеПараметры);
				
			КонецЕсли;

		КонецЕсли;
		
	КонецЦикла;
	
	// Заполнение раздела 3
		
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.КадастровыйНомер КАК КадастровыйНомерЗдания,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	ВложенныйЗапрос.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей КАК СуммаАвансовыхПлатежей,
	|	ВложенныйЗапрос.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)";
	
	Раздел3 = Контейнер.Раздел3;
	СтраницаРаздел3 =  Раздел3[0].Данные[0].Значение;
	Для Каждого Показатель Из СтраницаРаздел3 Цикл
		СтраницаРаздел3[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел3.Количество()>1 Цикл
		Раздел3.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
			Если Не ПерваяСтраница Тогда
				// Создаем дополнительную страницу в декларации
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из СтраницаРаздел3 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				Раздел3.Добавить().Данные = Новый СписокЗначений();
				Раздел3[Раздел3.Количество()-1].Данные.Добавить(СтруктураНовойТаблицы); 
				СтраницаРаздел3 =  Раздел3[Раздел3.Количество()-1].Данные[0].Значение;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КадастровыйНомер = Новый ПолеКомпоновкиДанных("КадастровыйНомер");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомер , ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерЗдания);
			
			ПолеКомпоновкиДанных_КадастровыйНомерПомещения = Новый ПолеКомпоновкиДанных("КадастровыйНомерПомещения");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомерПомещения, ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерПомещения);
			
			ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);

			
			СтраницаРаздел3.П000030001001 = Выборка.КодПоОКТМО;
			СтраницаРаздел3.П000030001401 = Выборка.КадастровыйНомерЗдания;
			СтраницаРаздел3.П000030001501 = Выборка.КадастровыйНомерПомещения;
			СтраницаРаздел3.П000030002003 = Выборка.КадастроваяСтоимость;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030002003, "", ДополнительныеПараметры);
			СтраницаРаздел3.П000030002503 = Выборка.НеоблагаемаяКадастроваяСтоимость;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002503_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030002503, "", ДополнительныеПараметры);
			
			СтраницаРаздел3.П000030011003 = Выборка.СуммаАвансовыхПлатежей;
									
			СтраницаРаздел3.П000030004003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел3.П000030007003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			
			СтраницаРаздел3.П000030005003_Числ = Выборка.ДоляСтоимостиЧислитель;
			СтраницаРаздел3.П000030005003_Знам = Выборка.ДоляСтоимостиЗнаменатель;
			
			СтраницаРаздел3.П000030008003 = Выборка.НалоговаяСтавка;
			
			Если Выборка.КоличествоМесяцевВладения > 0 И Выборка.КоличествоМесяцевВладения < 12 Тогда
				СтраницаРаздел3.П000030009003_Числ = Выборка.КоличествоМесяцевВладения;
				СтраницаРаздел3.П000030009003_Знам = 12;
			КонецЕсли;
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030010003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030010003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030006003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030006003, "", ДополнительныеПараметры);
						                                   
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда        
			    
				СтраницаРаздел3.П000030012003_КодЛьготы = "2012500";
				СтраницаРаздел3.П000030013003 = Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030013003_" + Раздел3.Количество(), "", "", "", СтраницаРаздел3.П000030013003, "", ДополнительныеПараметры);
				
			КонецЕсли;             
			
	КонецЦикла;
	
	ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
	
КонецПроцедуры

#КонецОбласти

#Область Имущество2017Кв1

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаАвансыИмуществоФормаОтчета2017Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000101", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001100", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020015003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020017503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020019003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001000", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001100", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210002001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210005003", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030000101", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001100", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001401", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001501", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003503_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003503_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030004003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030006003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030010003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030011003", Истина, Истина);
	
КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетАвансыИмуществоФормаОтчета2017Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Перем ТаблицаРасшифровки;
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = УправлениеВнеоборотнымиАктивами.ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	УплачиваютсяАвансы = РасчетИмущественныхНалогов.УплачиваютсяАвансыПоНалогуНаИмущество(Организация, мДатаКонцаПериодаОтчета);
	Если НЕ УплачиваютсяАвансы Тогда 
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКПорядкуУплатыНалоговНаМестах();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не настроена уплата авансов по налогу на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(мДатаНачалаПериодаОтчета), КонецДня(мДатаКонцаПериодаОтчета),"ФП = Истина")
			,Организация, ПутьКРегистру));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;	
		
	КонецЕсли;

	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения,
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2, ЛОЖЬ) КАК ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, ) КАК СтавкиНалогаНаИмуществоСрезПоследних
	|ГДЕ
	|	СтавкиНалогаНаИмуществоСрезПоследних.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтавкиНалогаПоОССрезПоследних.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазапоНалогуНаИмущество.КадастроваяСтоимость)) КАК СтавкиНалогаПоОССрезПоследних
	|ГДЕ
	|	СтавкиНалогаПоОССрезПоследних.Организация = &Организация";

	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ Результат[0].Пустой() Тогда
		ДопПараметрыОтчета = Результат[0].Выгрузить()[0];
		ПроцентУменьшенияСуммыНалога = ДопПараметрыОтчета.ПроцентУменьшения;
		ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2 = ДопПараметрыОтчета.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2;
	ИначеЕсли Результат[1].Пустой() Тогда 
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
		
	КонецЕсли;
	
	///////////////////////////////////////////////////////////////////////
	// РАЗДЕЛ 2
	
	// Заполнение раздела 2 по коду вида имущества 1,2,3,4,5 (прочее имущество).
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Раздел2 = Контейнер.Раздел2;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.ИФНС,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0101 КАК ОстаточнаяСтоимостьНа0101,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0102 КАК ОстаточнаяСтоимостьНа0102,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0103 КАК ОстаточнаяСтоимостьНа0103,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0104 КАК ОстаточнаяСтоимостьНа0104,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0105 КАК ОстаточнаяСтоимостьНа0105,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0106 КАК ОстаточнаяСтоимостьНа0106,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0107 КАК ОстаточнаяСтоимостьНа0107,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0108 КАК ОстаточнаяСтоимостьНа0108,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0109 КАК ОстаточнаяСтоимостьНа0109,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0110 КАК ОстаточнаяСтоимостьНа0110,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьОсновныхСредств КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	РасчетНалогаНаИмущество.КадастровыйНомер,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.КадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.НеоблагаемаяКадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.СуммаУменьшенияСуммыНалога,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевВладения,
	|	РасчетНалогаНаИмущество.ОсновноеСредство,
	|	РасчетНалогаНаИмущество.КБК,
	|	РасчетНалогаНаИмущество.ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетНалогаНаИмущество.УсловныйНомер,
	|	РасчетНалогаНаИмущество.ДоляПлощадиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляПлощадиЗнаменатель
	|ИЗ
	|	РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.Организация = &Организация
	|	И РасчетНалогаНаИмущество.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоНалогуНаИмущество = Новый ТаблицаЗначений;
	РегламентныеОперацииВыполнены = Ложь;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоНалогуНаИмущество = Выборка.Выгрузить();
		РегламентныеОперацииВыполнены = Истина;
	Иначе
		ТаблицаРасчетовПоНалогуНаИмущество = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;	
	
	Отбор = Новый Структура("ИФНС, ВидНалоговойБазы, КоличествоМесяцевВладения",
		?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()),
		Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость,
		0);
		
	НайденныеСтроки = ТаблицаРасчетовПоНалогуНаИмущество.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл
		
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			    НСтр("ru = 'Не заполнена дата регистрации права собственности для объекта %1
				|%2'"),	СтрокаТаблицы.ОсновноеСредство, ПутьКРегистру));
				
		КонецЦикла;
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоНалогуНаИмущество", ТаблицаРасчетовПоНалогуНаИмущество);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовПоНалогуНаИмущество
	|	ИЗ &ТаблицаРасчетовПоНалогуНаИмущество КАК ТаблицаРасчетовПоНалогуНаИмущество";
	Запрос.Выполнить();
		
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения) КАК КоличествоРазличныхЛьгот,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения = """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьОблагаемоеИмущество
	|ПОМЕСТИТЬ Льготы
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.КБК,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодВидаИмущества
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0101) КАК ОстаточнаяСтоимостьНа0101,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0102) КАК ОстаточнаяСтоимостьНа0102,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0103) КАК ОстаточнаяСтоимостьНа0103,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0104) КАК ОстаточнаяСтоимостьНа0104,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0105) КАК ОстаточнаяСтоимостьНа0105,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0106) КАК ОстаточнаяСтоимостьНа0106,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0107) КАК ОстаточнаяСтоимостьНа0107,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0108) КАК ОстаточнаяСтоимостьНа0108,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0109) КАК ОстаточнаяСтоимостьНа0109,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0110) КАК ОстаточнаяСтоимостьНа0110,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьОсновныхСредств) КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения <> """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЛьготируемаяСтоимость,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	СУММА(ВложенныйЗапрос.СуммаУменьшенияСуммыНалога) КАК СуммаУменьшенияСуммыНалога,
	|	Льготы.КоличествоРазличныхЛьгот КАК КоличествоРазличныхЛьгот,
	|	Льготы.ЕстьОблагаемоеИмущество КАК ЕстьОблагаемоеИмущество
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Льготы КАК Льготы
	|		ПО ВложенныйЗапрос.КодВидаИмущества = Льготы.КодВидаИмущества
	|			И ВложенныйЗапрос.КБК = Льготы.КБК
	|			И ВложенныйЗапрос.ДоляСтоимостиЧислитель = Льготы.ДоляСтоимостиЧислитель
	|			И ВложенныйЗапрос.ДоляСтоимостиЗнаменатель = Льготы.ДоляСтоимостиЗнаменатель
	|			И ВложенныйЗапрос.КодПоОКТМО = Льготы.КодПоОКТМО
	|			И ВложенныйЗапрос.НалоговаяСтавка = Льготы.НалоговаяСтавка
	|			И ВложенныйЗапрос.ПонижениеНалоговойСтавки = Льготы.ПонижениеНалоговойСтавки
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.КБК,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ВидНалоговойБазы,
	|	Льготы.КоличествоРазличныхЛьгот,
	|	Льготы.ЕстьОблагаемоеИмущество
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодВидаИмущества,
	|	КодПоОКТМО,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимостьНа0101),
	|	СУММА(ОстаточнаяСтоимостьНа0102),
	|	СУММА(ОстаточнаяСтоимостьНа0103),
	|	СУММА(ОстаточнаяСтоимостьНа0104),
	|	СУММА(ОстаточнаяСтоимостьНа0105),
	|	СУММА(ОстаточнаяСтоимостьНа0106),
	|	СУММА(ОстаточнаяСтоимостьНа0107),
	|	СУММА(ОстаточнаяСтоимостьНа0108),
	|	СУММА(ОстаточнаяСтоимостьНа0109),
	|	СУММА(ОстаточнаяСтоимостьНа0110),
	|	СУММА(ОстаточнаяСтоимостьОсновныхСредств),
	|	МАКСИМУМ(ЛьготируемаяСтоимость),
	|	СУММА(СуммаУменьшенияСуммыНалога),
	|	МАКСИМУМ(КоличествоРазличныхЛьгот),
	|	МАКСИМУМ(ЕстьОблагаемоеИмущество)
	|ПО
	|	ОБЩИЕ,
	|	КодВидаИмущества,
	|	КБК,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКТМО,
	|	НалоговаяСтавка,
	|	ПонижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВидНалоговойБазы";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтраницаРаздел2 = Раздел2.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Строки.Количество()>1 Цикл
		Раздел2.Строки.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Истина;
	
	КодВидаИмущества = "";
	КБК = "";
	КодПоОКТМО = "";
	КодНалоговойЛьготыОсвобождениеОтНалогообложения = "";
	ПонижениеНалоговойСтавки = Ложь;
	НалоговаяСтавка = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0101)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0102)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0103)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0104)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0105)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0106)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0107)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0108)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0109)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0110) Тогда
			
			Продолжить;
		КонецЕсли;
		
		Если Выборка.Группировка() = "ОБЩИЕ" Тогда
			
			ОстаточнаяСтоимостьОсновныхСредств = Выборка.ОстаточнаяСтоимостьОсновныхСредств;
			
		ИначеЕсли Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				
				Если ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2
				   И КодВидаИмущества = Выборка.КодВидаИмущества
				   И ?(КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10", КБК = Выборка.КБК, Истина)
				   И КодПоОКТМО = Выборка.КодПоОКТМО 
				   И ПонижениеНалоговойСтавки = Выборка.ПонижениеНалоговойСтавки
				   И НалоговаяСтавка = Выборка.НалоговаяСтавка 
				   И Выборка.КоличествоРазличныхЛьгот = 2 
				   И Выборка.ЕстьОблагаемоеИмущество Тогда
					
					ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Ложь;
					
				Иначе
					
					ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Истина;
					
					// Создаем дополнительную страницу в декларации
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из СтраницаРаздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					НоваяСтраницаРаздела2 = Раздел2.Строки.Добавить();
					
					НоваяСтраницаРаздела2.Данные = СтруктураНовойТаблицы;
					НоваяСтраницаРаздела2.ДанныеМногострочныхЧастей = Новый Структура;
					
				КонецЕсли;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			СтраницаРаздел2 = Раздел2.Строки[Раздел2.Строки.Количество()-1].Данные;
			
			КодВидаИмущества = Выборка.КодВидаИмущества;
			Если КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10" Тогда
				КБК = Выборка.КБК;
			ИначеЕсли КодВидаИмущества = "01" Тогда
				КБК = "18210602020021000110";
			Иначе
				КБК = "18210602010021000110";
			КонецЕсли;
			
			СтраницаРаздел2.П000020000101           = КодВидаИмущества; 
			СтраницаРаздел2.П000020001001           = Выборка.КодПоОКТМО;
			СтраницаРаздел2.П000020001100           = КБК;
			СтраницаРаздел2.П000020013003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020016003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020017003           = Выборка.НалоговаяСтавка;
			
			Если КодВидаИмущества = "02" Тогда
				ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
				ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
				
				СтраницаРаздел2.П000020015003_Числ = ДоляСтоимостиЧислитель;
				СтраницаРаздел2.П000020015003_Знам = ДоляСтоимостиЗнаменатель;
			КонецЕсли;
			
			КодВидаИмущества           = Выборка.КодВидаИмущества; 
			КодПоОКТМО           = Выборка.КодПоОКТМО;
			КодНалоговойЛьготыОсвобождениеОтНалогообложения = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			ПонижениеНалоговойСтавки = Выборка.ПонижениеНалоговойСтавки;
			НалоговаяСтавка           = Выборка.НалоговаяСтавка;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КодВидаИмущества = Новый ПолеКомпоновкиДанных("КодВидаИмущества");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодВидаИмущества , ВидСравненияКомпоновкиДанных.Равно, Выборка.КодВидаИмущества);
			
			Если ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы Тогда
				ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
				ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			КонецЕсли;
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
			
			СтраницаРаздел2.П000020002003 = Число(СтраницаРаздел2.П000020002003) + Выборка.ОстаточнаяСтоимостьНа0101;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020002003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020002004 = Число(СтраницаРаздел2.П000020002004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0101, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020002004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003003 = Число(СтраницаРаздел2.П000020003003) + Выборка.ОстаточнаяСтоимостьНа0102;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020003003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003004 = Число(СтраницаРаздел2.П000020003004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0102, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020003004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004003 = Число(СтраницаРаздел2.П000020004003) + Выборка.ОстаточнаяСтоимостьНа0103;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020004003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004004 = Число(СтраницаРаздел2.П000020004004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0103, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020004004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005003 = Число(СтраницаРаздел2.П000020005003) + Выборка.ОстаточнаяСтоимостьНа0104;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020005003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005004 = Число(СтраницаРаздел2.П000020005004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0104, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020005004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006003 = Число(СтраницаРаздел2.П000020006003) + Выборка.ОстаточнаяСтоимостьНа0105;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020006003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006004 = Число(СтраницаРаздел2.П000020006004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0105, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020006004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007003 = Число(СтраницаРаздел2.П000020007003) + Выборка.ОстаточнаяСтоимостьНа0106;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020007003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007004 = Число(СтраницаРаздел2.П000020007004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0106, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020007004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008003 = Число(СтраницаРаздел2.П000020008003) + Выборка.ОстаточнаяСтоимостьНа0107;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020008003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008004 = Число(СтраницаРаздел2.П000020008004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0107, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020008004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009003 = Число(СтраницаРаздел2.П000020009003) + Выборка.ОстаточнаяСтоимостьНа0108;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020009003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009004 = Число(СтраницаРаздел2.П000020009004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0108, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020009004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010003 = Число(СтраницаРаздел2.П000020010003) + Выборка.ОстаточнаяСтоимостьНа0109;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020010003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010004 = Число(СтраницаРаздел2.П000020010004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0109, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020010004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011003 = Число(СтраницаРаздел2.П000020011003) + Выборка.ОстаточнаяСтоимостьНа0110;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020011003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011004 = Число(СтраницаРаздел2.П000020011004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0110, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020011004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020021003 = ОстаточнаяСтоимостьОсновныхСредств;
						
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020012003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020018003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020018003, "", ДополнительныеПараметры);
						
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда 
				
				СтраницаРаздел2.П000020019003_КодЛьготы = "2012500";
				СтраницаРаздел2.П000020020003 = Число(СтраницаРаздел2.П000020020003) + Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020020003_" + Раздел2.Количество(), "", "", "", СтраницаРаздел2.П000020020003, "", ДополнительныеПараметры);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Заполнение раздела 2.1
	
	НедвижимоеИмущество = Новый Массив;
	НедвижимоеИмущество.Добавить(Перечисления.ГруппыОС.Здания);
	НедвижимоеИмущество.Добавить(Перечисления.ГруппыОС.Сооружения);
	НедвижимоеИмущество.Добавить(Перечисления.ГруппыОС.МноголетниеНасаждения);
	НедвижимоеИмущество.Добавить(Перечисления.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации);
	
	Запрос.УстановитьПараметр("НедвижимоеИмущество", НедвижимоеИмущество);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_Недвижимость
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|	И ВложенныйЗапрос.ОсновноеСредство.ГруппаОС В(&НедвижимоеИмущество)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация КАК Организация,
	|	МАКСИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.ДатаСостояния < &ДатаОкончанияОтчета
	|	И СостоянияОСОрганизаций.Организация = &Организация
	|	И СостоянияОСОрганизаций.ОсновноеСредство В
	|			(ВЫБРАТЬ
	|				СписокОС.ОсновноеСредство
	|			ИЗ
	|				ВТ_Недвижимость КАК СписокОС)
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ПО ДатыПоследнихСостояний.ОсновноеСредство = СостоянияОСОрганизаций.ОсновноеСредство
	|			И ДатыПоследнихСостояний.Организация = СостоянияОСОрганизаций.Организация
	|			И ДатыПоследнихСостояний.ДатаСостояния = СостоянияОСОрганизаций.ДатаСостояния
	|ГДЕ
	|	СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ИнвентарныйНомер,
	|	ПервоначальныеСведенияОС.КодПоОКОФ КАК КодПоОКОФ
	|ПОМЕСТИТЬ ПервоначальныеСведенияОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&ДатаОкончанияОтчета,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета КАК СписокОС)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НеСнятыеСУчета.ОсновноеСредство КАК ОсновноеСредство,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.КадастровыйНомер КАК КадастровыйНомер,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.УсловныйНомер КАК УсловныйНомер,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ИнвентарныйНомер, """") КАК ИнвентарныйНомер,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0104) КАК ОстаточнаяСтоимостьНа0104,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0107) КАК ОстаточнаяСтоимостьНа0107,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0110) КАК ОстаточнаяСтоимостьНа0110,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.КодПоОКОФ, """") КАК КодПоОКОФ
	|ИЗ
	|	НеСнятыеСУчета КАК НеСнятыеСУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|		ПО НеСнятыеСУчета.ОсновноеСредство = ВложенныйЗапрос.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО НеСнятыеСУчета.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|
	|СГРУППИРОВАТЬ ПО
	|	НеСнятыеСУчета.ОсновноеСредство,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.КБК,
	|	ВложенныйЗапрос.КадастровыйНомер,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.УсловныйНомер,
	|	ВложенныйЗапрос.ВидНалоговойБазы,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ИнвентарныйНомер, """"),
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.КодПоОКОФ, """")
	|";
	
	Раздел21 = Контейнер.Раздел21;
	СтраницаРаздел21 = Раздел21.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел21 Цикл
		СтраницаРаздел21[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел21.Строки.Количество()>1 Цикл
		Раздел21.Строки.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если Не ПерваяСтраница Тогда
			// Создаем дополнительную страницу в декларации
			СтруктураНовойТаблицы = Новый Структура();
			Для Каждого Показатель Из СтраницаРаздел21 Цикл
				СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			
			НоваяСтраницаРаздела21 = Раздел21.Строки.Добавить();
			НоваяСтраницаРаздела21.Данные = СтруктураНовойТаблицы;
			НоваяСтраницаРаздела21.ДанныеМногострочныхЧастей = Новый Структура;
			
			СтраницаРаздел21 = Раздел21.Строки[Раздел21.Строки.Количество()-1].Данные;
			
		Иначе
			// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
			ПерваяСтраница = Ложь;
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		
		ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
		Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
		Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
		
		ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
		
		ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
		
		ПолеКомпоновкиДанных_ОсновноеСредство = Новый ПолеКомпоновкиДанных("ОсновноеСредство");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ОсновноеСредство , ВидСравненияКомпоновкиДанных.Равно, Выборка.ОсновноеСредство);
		
		ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
		
		ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
		ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
		
		СтраницаРаздел21.П000210001000 = Выборка.КодПоОКТМО;
		
		КодВидаИмущества = Выборка.КодВидаИмущества;
		Если КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10" Тогда
			КБК = Выборка.КБК;
		ИначеЕсли КодВидаИмущества = "01" Тогда
			КБК = "18210602020021000110";
		Иначе
			КБК = "18210602010021000110";
		КонецЕсли;

		СтраницаРаздел21.П000210001100 = КБК;
		СтраницаРаздел21.П000210001001 = ?(ЗначениеЗаполнено(Выборка.КадастровыйНомерПомещения),
		                                   Выборка.КадастровыйНомерПомещения, Выборка.КадастровыйНомер);
		СтраницаРаздел21.П000210002001 = Выборка.УсловныйНомер;
		Если Не ЗначениеЗаполнено(СтраницаРаздел21.П000210001001) И Не ЗначениеЗаполнено(СтраницаРаздел21.П000210002001) Тогда
			СтраницаРаздел21.П000210003001 = Выборка.ИнвентарныйНомер;
		КонецЕсли;
		
		КодПоОКОФ = СокрЛП(Выборка.КодПоОКОФ);
		Если СтрДлина(КодПоОКОФ) = 10 И Сред(КодПоОКОФ, 3, 1) = " " Тогда
			КодПоОКОФ = СтрЗаменить(КодПоОКОФ, " ", "");
			КодПоОКОФ = Сред(КодПоОКОФ, 1, 3) + "." + Сред(КодПоОКОФ, 4, 2) + "." + Сред(КодПоОКОФ, 6, 2) + "." + Сред(КодПоОКОФ, 8, 2);
		КонецЕсли;
		СтраницаРаздел21.П000210004003 = КодПоОКОФ;
		
		Если Месяц(мДатаКонцаПериодаОтчета) = 3 Тогда
			СтраницаРаздел21.П000210005003 = Выборка.ОстаточнаяСтоимостьНа0104;
		ИначеЕсли Месяц(мДатаКонцаПериодаОтчета) = 6 Тогда
			СтраницаРаздел21.П000210005003 = Выборка.ОстаточнаяСтоимостьНа0107;
		ИначеЕсли Месяц(мДатаКонцаПериодаОтчета) = 9 Тогда
			СтраницаРаздел21.П000210005003 = Выборка.ОстаточнаяСтоимостьНа0110;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000210005003_" + Раздел21.Строки.Количество(), "", "", "", СтраницаРаздел21.П000210005003, "", ДополнительныеПараметры);
			
	КонецЦикла;
	
	
	// Заполнение раздела 3
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.КадастровыйНомер КАК КадастровыйНомерЗдания,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	ВложенныйЗапрос.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ВидНалоговойБазы,
	|	ВложенныйЗапрос.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ВложенныйЗапрос.ДоляПлощадиЧислитель КАК ДоляПлощадиЧислитель,
	|	ВложенныйЗапрос.ДоляПлощадиЗнаменатель КАК ДоляПлощадиЗнаменатель,
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)";
	
	Раздел3 = Контейнер.Раздел3;
	СтраницаРаздел3 =  Раздел3.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел3 Цикл
		СтраницаРаздел3[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел3.Строки.Количество()>1 Цикл
		Раздел3.Строки.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если Не ПерваяСтраница Тогда
			// Создаем дополнительную страницу в декларации
			СтруктураНовойТаблицы = Новый Структура();
			Для Каждого Показатель Из СтраницаРаздел3 Цикл
				СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			
			НоваяСтраницаРаздела3 = Раздел3.Строки.Добавить();
			НоваяСтраницаРаздела3.Данные = СтруктураНовойТаблицы;
			НоваяСтраницаРаздела3.ДанныеМногострочныхЧастей = Новый Структура;
			
			СтраницаРаздел3 = Раздел3.Строки[Раздел3.Строки.Количество()-1].Данные;
			
		Иначе
			// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
			ПерваяСтраница = Ложь;
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		
		ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
		Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
		Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
		
		ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
		
		ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
		
		ПолеКомпоновкиДанных_КадастровыйНомер = Новый ПолеКомпоновкиДанных("КадастровыйНомер");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомер , ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерЗдания);
		
		ПолеКомпоновкиДанных_КадастровыйНомерПомещения = Новый ПолеКомпоновкиДанных("КадастровыйНомерПомещения");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомерПомещения, ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерПомещения);
		
		ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
		
		ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
		
		ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
		
		ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
		ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
		
		СтраницаРаздел3.П000030000101 = Выборка.КодВидаИмущества;
		СтраницаРаздел3.П000030001001 = Выборка.КодПоОКТМО;
		СтраницаРаздел3.П000030001100 = "18210602010021000110";
		СтраницаРаздел3.П000030001401 = Выборка.КадастровыйНомерЗдания;
		СтраницаРаздел3.П000030001501 = Выборка.КадастровыйНомерПомещения;
		СтраницаРаздел3.П000030002003 = Выборка.КадастроваяСтоимость;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030002003, "", ДополнительныеПараметры);
		СтраницаРаздел3.П000030002503 = Выборка.НеоблагаемаяКадастроваяСтоимость;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002503_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030002503, "", ДополнительныеПараметры);
		
		СтраницаРаздел3.П000030003003_Числ = Выборка.ДоляВПравеОбщейСобственностиЧислитель;
		СтраницаРаздел3.П000030003003_Знам = Выборка.ДоляВПравеОбщейСобственностиЗнаменатель;
		
		СтраницаРаздел3.П000030003503_Числ = Выборка.ДоляПлощадиЧислитель;
		СтраницаРаздел3.П000030003503_Знам = Выборка.ДоляПлощадиЗнаменатель;
		
		СтраницаРаздел3.П000030004003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
		СтраницаРаздел3.П000030006003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
		
		СтраницаРаздел3.П000030005003_Числ = Выборка.ДоляСтоимостиЧислитель;
		СтраницаРаздел3.П000030005003_Знам = Выборка.ДоляСтоимостиЗнаменатель;
		
		СтраницаРаздел3.П000030007003 = Выборка.НалоговаяСтавка;
		
		КоличествоМесяцевВПериоде = ?(Год(мДатаКонцаПериодаОтчета) < 2016, Месяц(мДатаКонцаПериодаОтчета), 3);
		Если Выборка.КоличествоМесяцевВладения > 0 И Выборка.КоличествоМесяцевВладения < КоличествоМесяцевВПериоде Тогда 
			СтраницаРаздел3.П000030008003_Числ = Строка(Выборка.КоличествоМесяцевВладения);
			СтраницаРаздел3.П000030008003_Знам = Строка(КоличествоМесяцевВПериоде);
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030009003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030009003, "", ДополнительныеПараметры);
		
		Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
			
			СтраницаРаздел3.П000030010003_КодЛьготы = "2012500";
			СтраницаРаздел3.П000030011003 = Выборка.СуммаУменьшенияСуммыНалога;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030011003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030011003, "", ДополнительныеПараметры);
			
		КонецЕсли;
			
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.АдресВременногоХранилищаРасшифровки);
	ПоместитьВоВременноеХранилище(Контейнер, ПараметрыОтчета.АдресВоВременномХранилище);
	
КонецПроцедуры

// Формирует список показателей регламентированного отчета.
//
// Параметры:
//  ПоказателиОтчета - Структура - структура, в которую добавляются показатели отчета.
//
Процедура ПолучитьСведенияОПоказателяхОтчетаИмуществоФормаОтчета2017Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010001003_1", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010002003_1", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010003003_1", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010004003_1", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000101", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001001", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020001100", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020016003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020020003_КодЛьготы", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003_Числ", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020018003_Знам", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020002004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020003004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020004004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020005004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020006004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020007004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020008004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020009004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020010004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020011004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020012004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020013004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014004", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020014104", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020027003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020024003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020025003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001000", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001100", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210002001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210003001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210005003", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030000101", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001100", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001401", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030001501", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030002503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003503_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030003503_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030004003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030005003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030007003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030009003_Числ", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030009003_Знам", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030012003_КодЛьготы", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000030013003", Истина, Истина);

КонецПроцедуры

// Заполняет показатели регламентированного отчета.
//
// Параметры:
//  ПараметрыОтчета - Структура - параметры для заполнения отчета.
//  Контейнер - Структура - структура, в которую помещаются заполненные показатели отчета.
//
Процедура ЗаполнитьОтчетИмуществоФормаОтчета2017Кв4(ПараметрыОтчета, Контейнер) Экспорт

	Перем ТаблицаРасшифровки; // Таблица для сбора сведений о расшифровке
	
	Организация = ПараметрыОтчета.Организация;
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "РегистрацияВНалоговомОргане, КодНалоговогоОргана");
	КодНалоговогоОргана  = ?(ЗначениеЗаполнено(ПараметрыОтчета.КодНалоговогоОргана), 
		ПараметрыОтчета.КодНалоговогоОргана, РеквизитыОрганизации.КодНалоговогоОргана);
	КПП                  = ПараметрыОтчета.КПП;
	РегистрацияВНалоговомОргане = УправлениеВнеоборотнымиАктивами.ПолучитьРегистрациюВНалоговомОрганеПоОрганизации(Организация, КодНалоговогоОргана, КПП);
	
	мДатаНачалаПериодаОтчета  	= ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета		= ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	// Сведения о налоговых льготах в виде уменьшения суммы налога.
	ПроцентУменьшенияСуммыНалога = 0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период",      мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПроцентУменьшения, 0) КАК ПроцентУменьшения,
	|	ЕСТЬNULL(СтавкиНалогаНаИмуществоСрезПоследних.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2, ЛОЖЬ) КАК ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмущество.СрезПоследних(&Период, ) КАК СтавкиНалогаНаИмуществоСрезПоследних
	|ГДЕ
	|	СтавкиНалогаНаИмуществоСрезПоследних.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтавкиНалогаПоОССрезПоследних.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаИмуществоПоОтдельнымОсновнымСредствам.СрезПоследних(&Период, НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазапоНалогуНаИмущество.КадастроваяСтоимость)) КАК СтавкиНалогаПоОССрезПоследних
	|ГДЕ
	|	СтавкиНалогаПоОССрезПоследних.Организация = &Организация";

	Результат = Запрос.ВыполнитьПакет();
	
	Если НЕ Результат[0].Пустой() Тогда
		ДопПараметрыОтчета = Результат[0].Выгрузить()[0];
		ПроцентУменьшенияСуммыНалога = ДопПараметрыОтчета.ПроцентУменьшения;
		ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2 = ДопПараметрыОтчета.ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2;
	ИначеЕсли Результат[1].Пустой() Тогда
		
		ПутьКРегистру = НСтр("ru='(раздел ""Нормативно-справочная информация"" - ""Организация"" - ""Учетная политика и налоги"")'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не обнаружена ставка налога на имущество на %1 для %2
			|%3'"), 
			ПредставлениеПериода(НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета),"ФП = Истина")
			,ПараметрыОтчета.Организация, ПутьКРегистру));
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 = Раздел2.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел2 Цикл
		СтраницаРаздел2[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел2.Строки.Количество()>1 Цикл
		Раздел2.Строки.Удалить(1);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Организация", 			ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДатаОкончанияОтчета",	НачалоДня(мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетНалогаНаИмущество.КодВидаИмущества КАК КодВидаИмущества,
	|	РасчетНалогаНаИмущество.ВидНалоговойБазы,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	РасчетНалогаНаИмущество.ИФНС,
	|	РасчетНалогаНаИмущество.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	РасчетНалогаНаИмущество.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетНалогаНаИмущество.НалоговаяСтавка КАК НалоговаяСтавка,
	|	РасчетНалогаНаИмущество.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	РасчетНалогаНаИмущество.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0101 КАК ОстаточнаяСтоимостьНа0101,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0102 КАК ОстаточнаяСтоимостьНа0102,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0103 КАК ОстаточнаяСтоимостьНа0103,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0104 КАК ОстаточнаяСтоимостьНа0104,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0105 КАК ОстаточнаяСтоимостьНа0105,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0106 КАК ОстаточнаяСтоимостьНа0106,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0107 КАК ОстаточнаяСтоимостьНа0107,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0108 КАК ОстаточнаяСтоимостьНа0108,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0109 КАК ОстаточнаяСтоимостьНа0109,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0110 КАК ОстаточнаяСтоимостьНа0110,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0111 КАК ОстаточнаяСтоимостьНа0111,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа0112 КАК ОстаточнаяСтоимостьНа0112,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНа3112 КАК ОстаточнаяСтоимостьНа3112,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьНедвижимости КАК ОстаточнаяСтоимостьНедвижимости,
	|	РасчетНалогаНаИмущество.ОстаточнаяСтоимостьОсновныхСредств КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	РасчетНалогаНаИмущество.КадастровыйНомер,
	|	РасчетНалогаНаИмущество.КадастровыйНомерПомещения,
	|	РасчетНалогаНаИмущество.КадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.НеоблагаемаяКадастроваяСтоимость,
	|	РасчетНалогаНаИмущество.СуммаАвансовыхПлатежей,
	|	РасчетНалогаНаИмущество.СуммаУменьшенияСуммыНалога,
	|	РасчетНалогаНаИмущество.КоличествоМесяцевВладения,
	|	РасчетНалогаНаИмущество.ОсновноеСредство,
	|	РасчетНалогаНаИмущество.КБК,
	|	РасчетНалогаНаИмущество.ДоляВПравеОбщейСобственностиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляВПравеОбщейСобственностиЗнаменатель,
	|	РасчетНалогаНаИмущество.УсловныйНомер,
	|	РасчетНалогаНаИмущество.ДоляПлощадиЧислитель,
	|	РасчетНалогаНаИмущество.ДоляПлощадиЗнаменатель
	|ИЗ
	|	РегистрСведений.РасчетНалогаНаИмущество КАК РасчетНалогаНаИмущество
	|ГДЕ
	|	РасчетНалогаНаИмущество.Организация = &Организация
	|	И РасчетНалогаНаИмущество.ПериодРасчета = &ДатаОкончанияОтчета";
	
	Выборка = Запрос.Выполнить();
	
	ТаблицаРасчетовПоНалогуНаИмущество = Новый ТаблицаЗначений;
	РегламентныеОперацииВыполнены = Ложь;
	Если Не Выборка.Пустой() Тогда
		ТаблицаРасчетовПоНалогуНаИмущество = Выборка.Выгрузить();
		РегламентныеОперацииВыполнены = Истина;
	Иначе
		ТаблицаРасчетовПоНалогуНаИмущество = РасчетИмущественныхНалогов.ПолучитьРасчетПоНалогуНаИмущество(Организация, мДатаКонцаПериодаОтчета);
	КонецЕсли;
	
	Отбор = Новый Структура("ИФНС, ВидНалоговойБазы, КоличествоМесяцевВладения",
		?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка()),
		Перечисления.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость,
		0);
		
	НайденныеСтроки = ТаблицаРасчетовПоНалогуНаИмущество.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		ПутьКРегистру = ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество();
		
		Для Каждого СтрокаТаблицы Из НайденныеСтроки Цикл
		
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			    НСтр("ru = 'Не заполнена дата регистрации права собственности для объекта %1
				|%2'"),	СтрокаТаблицы.ОсновноеСредство, ПутьКРегистру));
				
		КонецЦикла;
			
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
		
		Возврат;
	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаРасчетовПоНалогуНаИмущество", ТаблицаРасчетовПоНалогуНаИмущество);
	Запрос.Текст = 
	"ВЫБРАТЬ *
	|	ПОМЕСТИТЬ ВТ_ТаблицаРасчетовПоНалогуНаИмущество
	|	ИЗ &ТаблицаРасчетовПоНалогуНаИмущество как ТаблицаРасчетовПоНалогуНаИмущество";
	Запрос.Выполнить();
	
	НалоговыйОрган = ?(ЗначениеЗаполнено(РегистрацияВНалоговомОргане), РегистрацияВНалоговомОргане, Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговыйОрган", НалоговыйОрган);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения) КАК КоличествоРазличныхЛьгот,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения = """"
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьОблагаемоеИмущество
	|ПОМЕСТИТЬ Льготы
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.КБК,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодВидаИмущества
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0101) КАК ОстаточнаяСтоимостьНа0101,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0102) КАК ОстаточнаяСтоимостьНа0102,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0103) КАК ОстаточнаяСтоимостьНа0103,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0104) КАК ОстаточнаяСтоимостьНа0104,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0105) КАК ОстаточнаяСтоимостьНа0105,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0106) КАК ОстаточнаяСтоимостьНа0106,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0107) КАК ОстаточнаяСтоимостьНа0107,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0108) КАК ОстаточнаяСтоимостьНа0108,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0109) КАК ОстаточнаяСтоимостьНа0109,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0110) КАК ОстаточнаяСтоимостьНа0110,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0111) КАК ОстаточнаяСтоимостьНа0111,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа0112) КАК ОстаточнаяСтоимостьНа0112,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа3112) КАК ОстаточнаяСтоимостьНа3112,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНедвижимости) КАК ОстаточнаяСтоимостьНедвижимости,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьОсновныхСредств) КАК ОстаточнаяСтоимостьОсновныхСредств,
	|	СУММА(ВложенныйЗапрос.СуммаАвансовыхПлатежей) КАК СуммаАвансовыхПлатежей,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения <> """"
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЛьготируемаяСтоимость,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	СУММА(ВложенныйЗапрос.СуммаУменьшенияСуммыНалога) КАК СуммаУменьшенияСуммыНалога,
	|	Льготы.КоличествоРазличныхЛьгот КАК КоличествоРазличныхЛьгот,
	|	Льготы.ЕстьОблагаемоеИмущество КАК ЕстьОблагаемоеИмущество
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Льготы КАК Льготы
	|		ПО ВложенныйЗапрос.КодВидаИмущества = Льготы.КодВидаИмущества
	|			И ВложенныйЗапрос.КБК = Льготы.КБК
	|			И ВложенныйЗапрос.ДоляСтоимостиЧислитель = Льготы.ДоляСтоимостиЧислитель
	|			И ВложенныйЗапрос.ДоляСтоимостиЗнаменатель = Льготы.ДоляСтоимостиЗнаменатель
	|			И ВложенныйЗапрос.КодПоОКТМО = Льготы.КодПоОКТМО
	|			И ВложенныйЗапрос.НалоговаяСтавка = Льготы.НалоговаяСтавка
	|			И ВложенныйЗапрос.ПонижениеНалоговойСтавки = Льготы.ПонижениеНалоговойСтавки
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.КБК,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.НалоговаяСтавка,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ВидНалоговойБазы,
	|	Льготы.КоличествоРазличныхЛьгот,
	|	Льготы.ЕстьОблагаемоеИмущество
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодВидаИмущества,
	|	КодПоОКТМО,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения
	|ИТОГИ
	|	СУММА(ОстаточнаяСтоимостьНа0101),
	|	СУММА(ОстаточнаяСтоимостьНа0102),
	|	СУММА(ОстаточнаяСтоимостьНа0103),
	|	СУММА(ОстаточнаяСтоимостьНа0104),
	|	СУММА(ОстаточнаяСтоимостьНа0105),
	|	СУММА(ОстаточнаяСтоимостьНа0106),
	|	СУММА(ОстаточнаяСтоимостьНа0107),
	|	СУММА(ОстаточнаяСтоимостьНа0108),
	|	СУММА(ОстаточнаяСтоимостьНа0109),
	|	СУММА(ОстаточнаяСтоимостьНа0110),
	|	СУММА(ОстаточнаяСтоимостьНа0111),
	|	СУММА(ОстаточнаяСтоимостьНа0112),
	|	СУММА(ОстаточнаяСтоимостьНа3112),
	|	СУММА(ОстаточнаяСтоимостьНедвижимости),
	|	СУММА(ОстаточнаяСтоимостьОсновныхСредств),
	|	СУММА(СуммаАвансовыхПлатежей),
	|	МАКСИМУМ(ЛьготируемаяСтоимость),
	|	СУММА(СуммаУменьшенияСуммыНалога),
	|	МАКСИМУМ(КоличествоРазличныхЛьгот),
	|	МАКСИМУМ(ЕстьОблагаемоеИмущество)
	|ПО
	|	ОБЩИЕ,
	|	КодВидаИмущества,
	|	КБК,
	|	ДоляСтоимостиЧислитель,
	|	ДоляСтоимостиЗнаменатель,
	|	КодПоОКТМО,
	|	НалоговаяСтавка,
	|	ПонижениеНалоговойСтавки,
	|	КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВидНалоговойБазы";
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	ПерваяСтраница = Истина;
	ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Истина;
	
	КодВидаИмущества = "";
	КБК = "";
	КодПоОКТМО = "";
	КодНалоговойЛьготыОсвобождениеОтНалогообложения = "";
	ПонижениеНалоговойСтавки = Ложь;
	НалоговаяСтавка = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0101)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0102)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0103)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0104)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0105)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0106)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0107)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0108)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0109)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0110)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0111)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа0112)
		   И НЕ ЗначениеЗаполнено(Выборка.ОстаточнаяСтоимостьНа3112) Тогда
			
			Продолжить;
		КонецЕсли;
		
		Если Выборка.Группировка() = "ОБЩИЕ" Тогда
			
			ОстаточнаяСтоимостьОсновныхСредств = Выборка.ОстаточнаяСтоимостьОсновныхСредств;
		
		ИначеЕсли Выборка.Группировка() = "КодНалоговойЛьготыОсвобождениеОтНалогообложения" Тогда
			
			Если Не ПерваяСтраница Тогда
				
				Если ПриНаличии1ЛьготыЗаполнять1ЛистРаздела2
				   И КодВидаИмущества = Выборка.КодВидаИмущества
				   И ?(КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10", КБК = Выборка.КБК, Истина)
				   И КодПоОКТМО = Выборка.КодПоОКТМО 
				   И ПонижениеНалоговойСтавки = Выборка.ПонижениеНалоговойСтавки
				   И НалоговаяСтавка = Выборка.НалоговаяСтавка 
				   И Выборка.КоличествоРазличныхЛьгот = 2 
				   И Выборка.ЕстьОблагаемоеИмущество Тогда
				
					ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Ложь;
				
				Иначе
					
					ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы = Истина;
					
					// Создаем дополнительную страницу в декларации
					СтруктураНовойТаблицы = Новый Структура();
					Для Каждого Показатель Из СтраницаРаздел2 Цикл
						СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
					КонецЦикла;
					
					НоваяСтраницаРаздела2 = Раздел2.Строки.Добавить();
					
					НоваяСтраницаРаздела2.Данные = СтруктураНовойТаблицы;
					НоваяСтраницаРаздела2.ДанныеМногострочныхЧастей = Новый Структура;
					
				КонецЕсли;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			СтраницаРаздел2 = Раздел2.Строки[Раздел2.Строки.Количество()-1].Данные;
			
			
			КодВидаИмущества = Выборка.КодВидаИмущества;
			Если КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10" Тогда
				КБК = Выборка.КБК;
			ИначеЕсли КодВидаИмущества = "01" Тогда
				КБК = "18210602020021000110";
			Иначе
				КБК = "18210602010021000110";
			КонецЕсли;
			
			СтраницаРаздел2.П000020000101 = КодВидаИмущества;
			СтраницаРаздел2.П000020001001 = Выборка.КодПоОКТМО;
			СтраницаРаздел2.П000020001100 = КБК;
			СтраницаРаздел2.П000020016003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел2.П000020020003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			СтраницаРаздел2.П000020021003 = Выборка.НалоговаяСтавка;
			
			Если КодВидаИмущества = "02" Тогда
				ДоляСтоимостиЧислитель =   ?(Выборка.ДоляСтоимостиЧислитель = 0, 1, Выборка.ДоляСтоимостиЧислитель);
				ДоляСтоимостиЗнаменатель = ?(Выборка.ДоляСтоимостиЗнаменатель = 0, 1, Выборка.ДоляСтоимостиЗнаменатель);
				
				СтраницаРаздел2.П000020018003_Числ = ДоляСтоимостиЧислитель;
				СтраницаРаздел2.П000020018003_Знам = ДоляСтоимостиЗнаменатель;
			КонецЕсли;
			
			КодВидаИмущества           = Выборка.КодВидаИмущества; 
			КодПоОКТМО           = Выборка.КодПоОКТМО;
			КодНалоговойЛьготыОсвобождениеОтНалогообложения = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			ПонижениеНалоговойСтавки = Выборка.ПонижениеНалоговойСтавки;
			НалоговаяСтавка           = Выборка.НалоговаяСтавка;
			
		ИначеЕсли Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КодВидаИмущества = Новый ПолеКомпоновкиДанных("КодВидаИмущества");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодВидаИмущества , ВидСравненияКомпоновкиДанных.Равно, Выборка.КодВидаИмущества);
			
			Если ИспользоватьВРасшифорвкеОтборКодНалоговойЛьготы Тогда
				ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
				ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			КонецЕсли;
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
					
			СтраницаРаздел2.П000020002003 = Число(СтраницаРаздел2.П000020002003) + Выборка.ОстаточнаяСтоимостьНа0101;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020002003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020002004 = Число(СтраницаРаздел2.П000020002004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0101, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020002004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020002004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003003 = Число(СтраницаРаздел2.П000020003003) + Выборка.ОстаточнаяСтоимостьНа0102;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020003003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020003004 = Число(СтраницаРаздел2.П000020003004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0102, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020003004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020003004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004003 = Число(СтраницаРаздел2.П000020004003) + Выборка.ОстаточнаяСтоимостьНа0103;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020004003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020004004 = Число(СтраницаРаздел2.П000020004004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0103, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020004004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020004004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005003 = Число(СтраницаРаздел2.П000020005003) + Выборка.ОстаточнаяСтоимостьНа0104;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020005003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020005004 = Число(СтраницаРаздел2.П000020005004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0104, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020005004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020005004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006003 = Число(СтраницаРаздел2.П000020006003) + Выборка.ОстаточнаяСтоимостьНа0105;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020006003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020006004 = Число(СтраницаРаздел2.П000020006004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0105, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020006004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020006004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007003 = Число(СтраницаРаздел2.П000020007003) + Выборка.ОстаточнаяСтоимостьНа0106;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020007003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020007004 = Число(СтраницаРаздел2.П000020007004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0106, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020007004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020007004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008003 = Число(СтраницаРаздел2.П000020008003) + Выборка.ОстаточнаяСтоимостьНа0107;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020008003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020008004 = Число(СтраницаРаздел2.П000020008004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0107, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020008004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020008004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009003 = Число(СтраницаРаздел2.П000020009003) + Выборка.ОстаточнаяСтоимостьНа0108;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020009003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020009004 = Число(СтраницаРаздел2.П000020009004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0108, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020009004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020009004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010003 = Число(СтраницаРаздел2.П000020010003) + Выборка.ОстаточнаяСтоимостьНа0109;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020010003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020010004 = Число(СтраницаРаздел2.П000020010004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0109, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020010004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020010004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011003 = Число(СтраницаРаздел2.П000020011003) + Выборка.ОстаточнаяСтоимостьНа0110;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020011003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020011004 = Число(СтраницаРаздел2.П000020011004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0110, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020011004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020011004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020012003 = Число(СтраницаРаздел2.П000020012003) + Выборка.ОстаточнаяСтоимостьНа0111;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020012003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020012004 = Число(СтраницаРаздел2.П000020012004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0111, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020012004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020012004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020013003 = Число(СтраницаРаздел2.П000020013003) + Выборка.ОстаточнаяСтоимостьНа0112;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020013003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020013003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020013004 = Число(СтраницаРаздел2.П000020013004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа0112, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020013004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020013004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014003 = Число(СтраницаРаздел2.П000020014003) + Выборка.ОстаточнаяСтоимостьНа3112;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014003, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014004 = Число(СтраницаРаздел2.П000020014004) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНа3112, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014004_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014004, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014103 = Число(СтраницаРаздел2.П000020014103) + Выборка.ОстаточнаяСтоимостьНедвижимости;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014103_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014103, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020014104 = Число(СтраницаРаздел2.П000020014104) + ?(Выборка.ЛьготируемаяСтоимость,Выборка.ОстаточнаяСтоимостьНедвижимости, 0);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014104_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014104, "", ДополнительныеПараметры);
			
			СтраницаРаздел2.П000020023003 = Число(СтраницаРаздел2.П000020023003) + Выборка.СуммаАвансовыхПлатежей;
						
			СтраницаРаздел2.П000020027003 = ОстаточнаяСтоимостьОсновныхСредств;
						
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014103_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014103, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020014104_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020014104, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020015003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020015003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020017003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020017003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020019003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020019003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020022003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020022003, "", ДополнительныеПараметры);
									
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда
			
				СтраницаРаздел2.П000020024003_КодЛьготы = "2012500";
				СтраницаРаздел2.П000020025003 = Число(СтраницаРаздел2.П000020025003) + Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000020025003_" + Раздел2.Строки.Количество(), "", "", "", СтраницаРаздел2.П000020025003, "", ДополнительныеПараметры);
				
			КонецЕсли;

		КонецЕсли;
		
	КонецЦикла;
	
	// Заполнение раздела 2.1
	
	НедвижимоеИмущество = Новый Массив;
	НедвижимоеИмущество.Добавить(Перечисления.ГруппыОС.Здания);
	НедвижимоеИмущество.Добавить(Перечисления.ГруппыОС.Сооружения);
	НедвижимоеИмущество.Добавить(Перечисления.ГруппыОС.МноголетниеНасаждения);
	НедвижимоеИмущество.Добавить(Перечисления.ГруппыОС.ПрочееИмуществоТребующееГосударственнойРегистрации);
	
	Запрос.УстановитьПараметр("НедвижимоеИмущество", НедвижимоеИмущество);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ВТ_Недвижимость
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.СреднегодоваяСтоимость)
	|	И ВложенныйЗапрос.ОсновноеСредство.ГруппаОС В(&НедвижимоеИмущество)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация КАК Организация,
	|	МАКСИМУМ(СостоянияОСОрганизаций.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.ДатаСостояния < &ДатаОкончанияОтчета
	|	И СостоянияОСОрганизаций.Организация = &Организация
	|	И СостоянияОСОрганизаций.ОсновноеСредство В
	|			(ВЫБРАТЬ
	|				СписокОС.ОсновноеСредство
	|			ИЗ
	|				ВТ_Недвижимость КАК СписокОС)
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОСОрганизаций.ОсновноеСредство,
	|	СостоянияОСОрганизаций.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ПО ДатыПоследнихСостояний.ОсновноеСредство = СостоянияОСОрганизаций.ОсновноеСредство
	|			И ДатыПоследнихСостояний.Организация = СостоянияОСОрганизаций.Организация
	|			И ДатыПоследнихСостояний.ДатаСостояния = СостоянияОСОрганизаций.ДатаСостояния
	|ГДЕ
	|	СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ИнвентарныйНомер,
	|	ПервоначальныеСведенияОС.КодПоОКОФ
	|ПОМЕСТИТЬ ПервоначальныеСведенияОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&ДатаОкончанияОтчета,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета КАК СписокОС)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НеСнятыеСУчета.ОсновноеСредство КАК ОсновноеСредство,
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества,
	|	ВложенныйЗапрос.КБК КАК КБК,
	|	ВложенныйЗапрос.КадастровыйНомер КАК КадастровыйНомер,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.УсловныйНомер КАК УсловныйНомер,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ИнвентарныйНомер, """") КАК ИнвентарныйНомер,
	|	СУММА(ВложенныйЗапрос.ОстаточнаяСтоимостьНа3112) КАК ОстаточнаяСтоимостьНа3112,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.КодПоОКОФ, """") КАК КодПоОКОФ
	|ИЗ
	|	НеСнятыеСУчета КАК НеСнятыеСУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|		ПО НеСнятыеСУчета.ОсновноеСредство = ВложенныйЗапрос.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО НеСнятыеСУчета.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|
	|СГРУППИРОВАТЬ ПО
	|	НеСнятыеСУчета.ОсновноеСредство,
	|	ВложенныйЗапрос.КодПоОКТМО,
	|	ВложенныйЗапрос.КодВидаИмущества,
	|	ВложенныйЗапрос.КБК,
	|	ВложенныйЗапрос.КадастровыйНомер,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.УсловныйНомер,
	|	ВложенныйЗапрос.ВидНалоговойБазы,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ИнвентарныйНомер, """"),
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.КодПоОКОФ, """")
	|";
	
	Раздел21 = Контейнер.Раздел21;
	СтраницаРаздел21 = Раздел21.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел21 Цикл
		СтраницаРаздел21[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел21.Строки.Количество()>1 Цикл
		Раздел21.Строки.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если Не ПерваяСтраница Тогда
			// Создаем дополнительную страницу в декларации
			СтруктураНовойТаблицы = Новый Структура();
			Для Каждого Показатель Из СтраницаРаздел21 Цикл
				СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
			КонецЦикла;
			
			НоваяСтраницаРаздела21 = Раздел21.Строки.Добавить();
			НоваяСтраницаРаздела21.Данные = СтруктураНовойТаблицы;
			НоваяСтраницаРаздела21.ДанныеМногострочныхЧастей = Новый Структура;
			
			СтраницаРаздел21 = Раздел21.Строки[Раздел21.Строки.Количество()-1].Данные;
			
		Иначе
			// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
			ПерваяСтраница = Ложь;
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		
		ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
		Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
		Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
		
		ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
		
		ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
		
		ПолеКомпоновкиДанных_ОсновноеСредство = Новый ПолеКомпоновкиДанных("ОсновноеСредство");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ОсновноеСредство , ВидСравненияКомпоновкиДанных.Равно, Выборка.ОсновноеСредство);
		
		ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
		ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
		
		ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
		ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);
		
		СтраницаРаздел21.П000210001000 = Выборка.КодПоОКТМО;
		
		КодВидаИмущества = Выборка.КодВидаИмущества;
		Если КодВидаИмущества = "06" ИЛИ КодВидаИмущества = "08" ИЛИ КодВидаИмущества = "10" Тогда
			КБК = Выборка.КБК;
		ИначеЕсли КодВидаИмущества = "01" Тогда
			КБК = "18210602020021000110";
		Иначе
			КБК = "18210602010021000110";
		КонецЕсли;

		СтраницаРаздел21.П000210001100 = КБК;
		СтраницаРаздел21.П000210001001 = ?(ЗначениеЗаполнено(Выборка.КадастровыйНомерПомещения),
		                                   Выборка.КадастровыйНомерПомещения, Выборка.КадастровыйНомер);
		СтраницаРаздел21.П000210002001 = Выборка.УсловныйНомер;
		Если Не ЗначениеЗаполнено(СтраницаРаздел21.П000210001001) И Не ЗначениеЗаполнено(СтраницаРаздел21.П000210002001) Тогда
			СтраницаРаздел21.П000210003001 = Выборка.ИнвентарныйНомер;
		КонецЕсли;
		
		КодПоОКОФ = СокрЛП(Выборка.КодПоОКОФ);
		Если СтрДлина(КодПоОКОФ) = 10 И Сред(КодПоОКОФ, 3, 1) = " " Тогда
			КодПоОКОФ = СтрЗаменить(КодПоОКОФ, " ", "");
			КодПоОКОФ = Сред(КодПоОКОФ, 1, 3) + "." + Сред(КодПоОКОФ, 4, 2) + "." + Сред(КодПоОКОФ, 6, 2) + "." + Сред(КодПоОКОФ, 8, 2);
		КонецЕсли;
		СтраницаРаздел21.П000210004003 = КодПоОКОФ;
		
		СтраницаРаздел21.П000210005003 = Выборка.ОстаточнаяСтоимостьНа3112;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000210005003_" + Раздел21.Строки.Количество(), "", "", "", СтраницаРаздел21.П000210005003, "", ДополнительныеПараметры);
			
	КонецЦикла;
	
	// Заполнение раздела 3
		
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.КодПоОКТМО КАК КодПоОКТМО,
	|	ВложенныйЗапрос.КадастровыйНомер КАК КадастровыйНомерЗдания,
	|	ВложенныйЗапрос.КадастровыйНомерПомещения КАК КадастровыйНомерПомещения,
	|	ВложенныйЗапрос.КадастроваяСтоимость КАК КадастроваяСтоимость,
	|	ВложенныйЗапрос.НеоблагаемаяКадастроваяСтоимость КАК НеоблагаемаяКадастроваяСтоимость,
	|	ВложенныйЗапрос.КодНалоговойЛьготыОсвобождениеОтНалогообложения КАК КодНалоговойЛьготыОсвобождениеОтНалогообложения,
	|	ВложенныйЗапрос.ПонижениеНалоговойСтавки КАК ПонижениеНалоговойСтавки,
	|	ВложенныйЗапрос.ДоляСтоимостиЧислитель КАК ДоляСтоимостиЧислитель,
	|	ВложенныйЗапрос.ДоляСтоимостиЗнаменатель КАК ДоляСтоимостиЗнаменатель,
	|	ВложенныйЗапрос.НалоговаяСтавка КАК НалоговаяСтавка,
	|	ВложенныйЗапрос.ВидНалоговойБазы КАК ВидНалоговойБазы,
	|	ВложенныйЗапрос.СуммаАвансовыхПлатежей КАК СуммаАвансовыхПлатежей,
	|	ВложенныйЗапрос.СуммаУменьшенияСуммыНалога КАК СуммаУменьшенияСуммыНалога,
	|	ВложенныйЗапрос.КоличествоМесяцевВладения КАК КоличествоМесяцевВладения,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЧислитель КАК ДоляВПравеОбщейСобственностиЧислитель,
	|	ВложенныйЗапрос.ДоляВПравеОбщейСобственностиЗнаменатель КАК ДоляВПравеОбщейСобственностиЗнаменатель,
	|	ВложенныйЗапрос.ДоляПлощадиЧислитель КАК ДоляПлощадиЧислитель,
	|	ВложенныйЗапрос.ДоляПлощадиЗнаменатель КАК ДоляПлощадиЗнаменатель,
	|	ВложенныйЗапрос.КодВидаИмущества КАК КодВидаИмущества
	|ИЗ
	|	ВТ_ТаблицаРасчетовПоНалогуНаИмущество КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.ИФНС = &НалоговыйОрган
	|	И ВложенныйЗапрос.ВидНалоговойБазы = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)";
	
	Раздел3 = Контейнер.Раздел3;
	СтраницаРаздел3 = Раздел3.Строки[0].Данные;
	Для Каждого Показатель Из СтраницаРаздел3 Цикл
		СтраницаРаздел3[Показатель.Ключ] = ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение));
	КонецЦикла;
	
	Пока Раздел3.Строки.Количество()>1 Цикл
		Раздел3.Строки.Удалить(1);
	КонецЦикла;
	
	ПерваяСтраница = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
			Если Не ПерваяСтраница Тогда
				// Создаем дополнительную страницу в декларации
				СтруктураНовойТаблицы = Новый Структура();
				Для Каждого Показатель Из СтраницаРаздел3 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЦикла;
				
				НоваяСтраницаРаздела3 = Раздел3.Строки.Добавить();
				НоваяСтраницаРаздела3.Данные = СтруктураНовойТаблицы;
				НоваяСтраницаРаздела3.ДанныеМногострочныхЧастей = Новый Структура;
				
				СтраницаРаздел3 = Раздел3.Строки[Раздел3.Строки.Количество()-1].Данные;
				
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			ДополнительныеПараметры = Новый Структура;
			
			ПараметрыРасшифровки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
			Отбор = ПараметрыРасшифровки.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
			Отбор.ИдентификаторПользовательскойНастройки = "Отбор";
			
			ПолеКомпоновкиДанных_ИФНС = Новый ПолеКомпоновкиДанных("ИФНС");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ИФНС, ВидСравненияКомпоновкиДанных.Равно, НалоговыйОрган);
			
			ПолеКомпоновкиДанных_КодПоОКТМО = Новый ПолеКомпоновкиДанных("КодПоОКТМО");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодПоОКТМО, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодПоОКТМО);
			
			ПолеКомпоновкиДанных_КадастровыйНомер = Новый ПолеКомпоновкиДанных("КадастровыйНомер");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомер , ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерЗдания);
			
			ПолеКомпоновкиДанных_КадастровыйНомерПомещения = Новый ПолеКомпоновкиДанных("КадастровыйНомерПомещения");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КадастровыйНомерПомещения, ВидСравненияКомпоновкиДанных.Равно, Выборка.КадастровыйНомерПомещения);
			
			ПолеКомпоновкиДанных_КодНалоговойЛьготы = Новый ПолеКомпоновкиДанных("КодНалоговойЛьготыОсвобождениеОтНалогообложения");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_КодНалоговойЛьготы, ВидСравненияКомпоновкиДанных.Равно, Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения);
			
			ПолеКомпоновкиДанных_НалоговаяСтавка = Новый ПолеКомпоновкиДанных("НалоговаяСтавка");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_НалоговаяСтавка, ВидСравненияКомпоновкиДанных.Равно, Выборка.НалоговаяСтавка);
			
			ПолеКомпоновкиДанных_ВидНалоговойБазы = Новый ПолеКомпоновкиДанных("ВидНалоговойБазы");
			ДобавитьЗначениеВОтбор(Отбор, ПолеКомпоновкиДанных_ВидНалоговойБазы, ВидСравненияКомпоновкиДанных.Равно, Выборка.ВидНалоговойБазы);
			
			ДополнительныеПараметры.Вставить("ПараметрыРасшифровки", ПараметрыРасшифровки);
			ДополнительныеПараметры.Вставить("РегламентныеОперацииВыполнены", РегламентныеОперацииВыполнены);

			СтраницаРаздел3.П000030000101 = Выборка.КодВидаИмущества;
			СтраницаРаздел3.П000030001001 = Выборка.КодПоОКТМО;
			СтраницаРаздел3.П000030001100 = "18210602010021000110";
			СтраницаРаздел3.П000030001401 = Выборка.КадастровыйНомерЗдания;
			СтраницаРаздел3.П000030001501 = Выборка.КадастровыйНомерПомещения;
			СтраницаРаздел3.П000030002003 = Выборка.КадастроваяСтоимость;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030002003, "", ДополнительныеПараметры);
			СтраницаРаздел3.П000030002503 = Выборка.НеоблагаемаяКадастроваяСтоимость;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030002503_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030002503, "", ДополнительныеПараметры);
			
			СтраницаРаздел3.П000030003003_Числ = Выборка.ДоляВПравеОбщейСобственностиЧислитель;
			СтраницаРаздел3.П000030003003_Знам = Выборка.ДоляВПравеОбщейСобственностиЗнаменатель;
			
			СтраницаРаздел3.П000030003503_Числ = Выборка.ДоляПлощадиЧислитель;
			СтраницаРаздел3.П000030003503_Знам = Выборка.ДоляПлощадиЗнаменатель;
			
			СтраницаРаздел3.П000030011003 = Выборка.СуммаАвансовыхПлатежей;
									
			СтраницаРаздел3.П000030004003_КодЛьготы = Выборка.КодНалоговойЛьготыОсвобождениеОтНалогообложения;
			СтраницаРаздел3.П000030007003_КодЛьготы = ?(Выборка.ПонижениеНалоговойСтавки, "2012400", "");
			
			СтраницаРаздел3.П000030005003_Числ = Выборка.ДоляСтоимостиЧислитель;
			СтраницаРаздел3.П000030005003_Знам = Выборка.ДоляСтоимостиЗнаменатель;
			
			СтраницаРаздел3.П000030008003 = Выборка.НалоговаяСтавка;
			
			Если Выборка.КоличествоМесяцевВладения > 0 И Выборка.КоличествоМесяцевВладения < 12 Тогда
				СтраницаРаздел3.П000030009003_Числ = Строка(Выборка.КоличествоМесяцевВладения);
				СтраницаРаздел3.П000030009003_Знам = "12";
			КонецЕсли;
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030010003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030010003, "", ДополнительныеПараметры);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030006003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030006003, "", ДополнительныеПараметры);
			
			Если Выборка.СуммаУменьшенияСуммыНалога > 0 Тогда        
				
				СтраницаРаздел3.П000030012003_КодЛьготы = "2012500";
				СтраницаРаздел3.П000030013003 = Выборка.СуммаУменьшенияСуммыНалога;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000030013003_" + Раздел3.Строки.Количество(), "", "", "", СтраницаРаздел3.П000030013003, "", ДополнительныеПараметры);
				
			КонецЕсли;
			
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.АдресВременногоХранилищаРасшифровки);
	ПоместитьВоВременноеХранилище(Контейнер, ПараметрыОтчета.АдресВоВременномХранилище);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ДекларацииОРозничныхПродажахАлкоголя

Процедура ПолучитьСведенияОПоказателяхОтчетаРегламентированныйОтчетАлкоПриложение11ФормаОтчета2012Кв3(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000101", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000102", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000104", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000105", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000106", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000107", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000108", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000109", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000110", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000111", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000112", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000115", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000116", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000117", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000120", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000301", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000302", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000303", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000304", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000305", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000306", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000307", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000308", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000309", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000310", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000311", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000312", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000313", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000315", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000316", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000317", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000318", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000320", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000101", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000102", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000104", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000105", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000106", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000107", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000108", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000192", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000110", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000111", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000112", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000113", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000114", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000115", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000116", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000301", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000302", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000303", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000304", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000305", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000306", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000307", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000308", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000391", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000392", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000310", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000311", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000312", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000313", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000314", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000315", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000316", Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьРегламентированныйОтчетАлкоПриложение11ФормаОтчета2012Кв3(ПараметрыОтчета, Контейнер) Экспорт
	
	Если ЕстьОбособленныеПодразделения(ПараметрыОтчета) Тогда
		ЗаполнитьРегламентированныйОтчетАлкоПриложение11ФормаОтчета2012Кв3ПоПодразделениям(ПараметрыОтчета, Контейнер);
	Иначе
		ЗаполнитьРегламентированныйОтчетАлкоПриложение11ФормаОтчета2012Кв3ПоОрганизации(ПараметрыОтчета, Контейнер);	
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьРегламентированныйОтчетАлкоПриложение11ФормаОтчета2012Кв3ПоОрганизации(ПараметрыОтчета, Контейнер) Экспорт
	
	СписокОрганизаций = Новый СписокЗначений();
	СписокОрганизаций.Добавить(ПараметрыОтчета.Организация);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Счет60", ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	Запрос.УстановитьПараметр("Счет79", ПланыСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты);
	Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Хозрасчетный.Товары);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = &Счет41
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = &Счет60
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = &Счет79
	|;";
	
	Результат = Запрос.ВыполнитьПакет();
	МассивСчетов41 = Результат[0].Выгрузить().ВыгрузитьКолонку("Счет");
	МассивСчетов60 = Результат[1].Выгрузить().ВыгрузитьКолонку("Счет");
	МассивСчетов79 = Результат[2].Выгрузить().ВыгрузитьКолонку("Счет");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Счет60", 		МассивСчетов60);
	Запрос.УстановитьПараметр("Счет41", 		МассивСчетов41);
	Запрос.УстановитьПараметр("Счет79", 		МассивСчетов79);
	Запрос.УстановитьПараметр("ВидСубконто", 	ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("СписокОрганизаций", 	СписокОрганизаций);
	Запрос.УстановитьПараметр("ДатаНач", 		НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("ДатаКон", 		Новый Граница(КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета), ВидГраницы.Включая));
	ТекстШаблон =
	"ВЫБРАТЬ
	|	АлкоНоменклатура.Ссылка КАК Номенклатура,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко КАК Производитель,
	|	АлкоНоменклатура.ОбъемДАЛ КАК КоэффПересчетаДал,
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.Наименование КАК П000010000101,
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.Код КАК П000010000102,
	|	ВЫРАЗИТЬ(АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.НаименованиеПолное КАК СТРОКА(200)) КАК П000010000103,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.ИНН КАК П000010000104,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.КПП КАК П000010000105
	|ПОМЕСТИТЬ АлкогольнаяПродукция
	|ИЗ
	|	Справочник.Номенклатура КАК АлкоНоменклатура
	|ГДЕ
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.ВидЛицензии <> ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийАлкогольнойПродукции.Пиво)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000010000101 КАК П000010000101,
	|	АлкогольнаяПродукция.П000010000102 КАК П000010000102,
	|	АлкогольнаяПродукция.П000010000103 КАК П000010000103,
	|	АлкогольнаяПродукция.П000010000104 КАК П000010000104,
	|	АлкогольнаяПродукция.П000010000105 КАК П000010000105,
	|	0 КАК П000010000106,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет60)
	|					И ХозрасчетныйОбороты.КорСубконто1 = АлкогольнаяПродукция.Производитель
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000107,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет60)
	|					И ХозрасчетныйОбороты.КорСубконто1 <> АлкогольнаяПродукция.Производитель
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000108,
	|	0 КАК П000010000109,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|				ТОГДА (ХозрасчетныйОбороты.КоличествоОборотДт - ХозрасчетныйОбороты.КоличествоОборотКт) * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000111,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ХозрасчетныйОбороты.КорСчет В (&Счет60)
	|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента)
	|					ИЛИ (ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров)
	|					ИЛИ (ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров)
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000112,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000115,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000117,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента)
	|					ИЛИ (ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров)
	|					ИЛИ (ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров)
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000116,
	|	0 КАК П000010000120
	|ПОМЕСТИТЬ ТаблицаРаздела1
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет В (&Счет41), &ВидСубконто, Организация В (&СписокОрганизаций), , ) КАК ХозрасчетныйОбороты
	|		ПО АлкогольнаяПродукция.Номенклатура = ХозрасчетныйОбороты.Субконто1
	|ГДЕ
	|	(НЕ ХозрасчетныйОбороты.КорСчет В (&Счет41)
	|			ИЛИ ХозрасчетныйОбороты.КорСчет ЕСТЬ NULL 
	|			ИЛИ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров
	|			ИЛИ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров)
	|	И НЕ ХозрасчетныйОбороты.КорСчет ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105,
	|	СУММА(ХозрасчетныйОстаткиНач.КоличествоОстатокДт * АлкогольнаяПродукция.КоэффПересчетаДал),
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаНач, Счет В (&Счет41), , Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОстаткиНач
	|		ПО АлкогольнаяПродукция.Номенклатура = ХозрасчетныйОстаткиНач.Субконто1
	|ГДЕ
	|	НЕ ХозрасчетныйОстаткиНач.Счет ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	СУММА(ХозрасчетныйОстаткиКон.КоличествоОстатокДт * АлкогольнаяПродукция.КоэффПересчетаДал)
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаКон, Счет В (&Счет41), , Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОстаткиКон
	|		ПО АлкогольнаяПродукция.Номенклатура = ХозрасчетныйОстаткиКон.Субконто1
	|ГДЕ
	|	НЕ ХозрасчетныйОстаткиКон.Счет ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000010000101 КАК П000010000101,
	|	АлкогольнаяПродукция.П000010000102 КАК П000010000102,
	|	АлкогольнаяПродукция.П000010000103 КАК П000010000103,
	|	АлкогольнаяПродукция.П000010000104 КАК П000010000104,
	|	АлкогольнаяПродукция.П000010000105 КАК П000010000105,
	|	СУММА(АлкогольнаяПродукция.П000010000106) КАК П000010000106,
	|	СУММА(АлкогольнаяПродукция.П000010000107) КАК П000010000107,
	|	СУММА(АлкогольнаяПродукция.П000010000108) КАК П000010000108,
	|	СУММА(АлкогольнаяПродукция.П000010000109) КАК П000010000109,
	|	СУММА(АлкогольнаяПродукция.П000010000111) КАК П000010000111,
	|	СУММА(АлкогольнаяПродукция.П000010000112) КАК П000010000112,
	|	СУММА(АлкогольнаяПродукция.П000010000115) КАК П000010000115,
	|	СУММА(АлкогольнаяПродукция.П000010000116) КАК П000010000116,
	|	СУММА(АлкогольнаяПродукция.П000010000117) КАК П000010000117,
	|	СУММА(АлкогольнаяПродукция.П000010000120) КАК П000010000120
	|ИЗ
	|	ТаблицаРаздела1 КАК АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105
	|
	|УПОРЯДОЧИТЬ ПО
	|	П000010000101,
	|	П000010000102,
	|	П000010000103,
	|	П000010000104,
	|	П000010000105";
	Запрос.Текст = ТекстШаблон;
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Раздел1 = Контейнер.Раздел1;
	СтраницаРаздел1 =  Раздел1[0].Данные[0].Значение;
	
	Пока Раздел1.Количество()>1 Цикл
		Контейнер.Раздел1.Удалить(1);
	КонецЦикла;
	
	Пока Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100001.Количество()>1 Цикл
		Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100001.Удалить(1);
	КонецЦикла;
	
	НС = 1;
	Раздел1Текущий = Раздел1[0];
	
	Для Каждого СтрокаЗапроса Из ТаблицаЗапроса Цикл
		
		Если НС > 1 Тогда 
			Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100001.Добавить();
		КонецЕсли;
		Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100001[НС - 1].П000010000100 = НС;
	 	ЗаполнитьЗначенияСвойств(Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100001[НС - 1], СтрокаЗапроса);
		НС = НС + 1;
		
	КонецЦикла;
	
	ПредставлениеПодразделения = СведенияОПодразделении(ПараметрыОтчета.Организация, ПараметрыОтчета.Организация.ИНН);
	СтраницаРаздел1.ОбособленноеПодразделение = ОписаниеПодразделения(ПредставлениеПодразделения);
		
	Если Раздел1[0].ДополнительныеДанные.Количество() = 0 Тогда
		Раздел1[0].ДополнительныеДанные.Добавить(Новый Структура);
	КонецЕсли;
		
	Раздел1[0].ДополнительныеДанные[0].Значение.Вставить("СведенияОбОП", ПредставлениеПодразделения);
	
	Пока Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100003.Количество()>1 Цикл
		Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100003.Удалить(1);
	КонецЦикла;
	
	ТаблицаПодразделения = ТаблицаЗапроса.Скопировать();
	
	Для Каждого Колонка Из ТаблицаПодразделения.Колонки Цикл
		Колонка.Имя = СтрЗаменить(Колонка.Имя, "П0000100001", "П0000100003");
	КонецЦикла;

	НС = 1;
	Для Каждого СтрокаПодразделения Из ТаблицаПодразделения Цикл
		
		Если НС > 1 Тогда 
			Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100003.Добавить();
		КонецЕсли;
		Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100003[НС - 1].П000010000300 = НС;
		ЗаполнитьЗначенияСвойств(Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100003[НС - 1], СтрокаПодразделения);
		НС = НС + 1;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Счет60", 		МассивСчетов60);
	Запрос.УстановитьПараметр("Счет41", 		МассивСчетов41);
	Запрос.УстановитьПараметр("СчетГТД", 		ПланыСчетов.Хозрасчетный.ГТД);
	Запрос.УстановитьПараметр("ВидСубконто", 	ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("ВидКорСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	Запрос.УстановитьПараметр("СписокОрганизаций", 	СписокОрганизаций);
	Запрос.УстановитьПараметр("ДатаНач", 		НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("ДатаКон", 		КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	ТекстШаблон =
	"ВЫБРАТЬ
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.Наименование КАК П000020000101,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.Код КАК П000020000102,
	|	ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.НаименованиеПолное КАК СТРОКА(200)) КАК П000020000103,
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.ИНН
	|		ИНАЧЕ СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.РегистрационныйНомер
	|	КОНЕЦ КАК П000020000104,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.КПП КАК П000020000105,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1.НаименованиеПолное КАК СТРОКА(200)) КАК П000020000106,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).ИНН
	|		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).РегистрационныйНомер, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК П000020000107,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).КПП, НЕОПРЕДЕЛЕНО) КАК П000020000108,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).ДатаВходящегоДокумента, ХозрасчетныйОбороты.Период) КАК П000020000113,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).НомерВходящегоДокумента, НЕОПРЕДЕЛЕНО) КАК П000020000114,
	|	ХозрасчетныйОбороты.Организация КАК Организация,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.ВидЛицензии КАК ВидЛицензии,
	|	ХозрасчетныйГТД.СубконтоДт2 КАК П000020000115,
	|	ХозрасчетныйОбороты.СубконтоКт1,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ХозрасчетныйГТД.СубконтоДт2 ЕСТЬ NULL 
	|				ТОГДА ХозрасчетныйГТД.КоличествоОборотДт
	|			ИНАЧЕ ХозрасчетныйОбороты.КоличествоОборотДт
	|		КОНЕЦ * СведенияОбАлкогольнойПродукции.ОбъемДАЛ) КАК П000020000116
	|ПОМЕСТИТЬ АлкогольнаяПродукция
	|ИЗ
	|	Справочник.Номенклатура КАК СведенияОбАлкогольнойПродукции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Регистратор, СчетДт В (&Счет41), &ВидСубконто, СчетКт В (&Счет60), &ВидКорСубконто, Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОбороты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Регистратор, СчетДт = &СчетГТД, , , , Организация В (&СписокОрганизаций)) КАК ХозрасчетныйГТД
	|			ПО ХозрасчетныйОбороты.СубконтоДт1 = ХозрасчетныйГТД.СубконтоДт1
	|				И ХозрасчетныйОбороты.Регистратор = ХозрасчетныйГТД.Регистратор
	|		ПО СведенияОбАлкогольнойПродукции.Ссылка = ХозрасчетныйОбороты.СубконтоДт1
	|ГДЕ
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.ВидЛицензии <> ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийАлкогольнойПродукции.Пиво)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.Наименование,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.Код,
	|	ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.НаименованиеПолное КАК СТРОКА(200)),
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.ИНН
	|		ИНАЧЕ СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.РегистрационныйНомер
	|	КОНЕЦ,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.КПП,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1.НаименованиеПолное КАК СТРОКА(200)),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).НомерВходящегоДокумента, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).ДатаВходящегоДокумента, ХозрасчетныйОбороты.Период),
	|	ХозрасчетныйОбороты.Организация,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.ВидЛицензии,
	|	ХозрасчетныйОбороты.СубконтоКт1,
	|	ХозрасчетныйГТД.СубконтоДт2,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).ИНН
	|		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).РегистрационныйНомер, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).КПП, НЕОПРЕДЕЛЕНО)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000020000101 КАК П000020000101,
	|	АлкогольнаяПродукция.П000020000102 КАК П000020000102,
	|	АлкогольнаяПродукция.П000020000103 КАК П000020000103,
	|	АлкогольнаяПродукция.П000020000104 КАК П000020000104,
	|	АлкогольнаяПродукция.П000020000105 КАК П000020000105,
	|	АлкогольнаяПродукция.П000020000106 КАК П000020000106,
	|	АлкогольнаяПродукция.П000020000107 КАК П000020000107,
	|	АлкогольнаяПродукция.П000020000108 КАК П000020000108,
	|	ЛицензииПоставщиковАлкогольнойПродукции.Наименование КАК П000020000192,
	|	ЛицензииПоставщиковАлкогольнойПродукции.ДатаНачала КАК П000020000110,
	|	ЛицензииПоставщиковАлкогольнойПродукции.ДатаОкончания КАК П000020000111,
	|	ЛицензииПоставщиковАлкогольнойПродукции.КемВыдана КАК П000020000112,
	|	АлкогольнаяПродукция.П000020000113 КАК П000020000113,
	|	АлкогольнаяПродукция.П000020000114 КАК П000020000114,
	|	АлкогольнаяПродукция.П000020000115 КАК П000020000115,
	|	АлкогольнаяПродукция.Организация КАК Организация,
	|	СУММА(АлкогольнаяПродукция.П000020000116) КАК П000020000116
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЛицензииПоставщиковАлкогольнойПродукции КАК ЛицензииПоставщиковАлкогольнойПродукции
	|		ПО АлкогольнаяПродукция.СубконтоКт1 = ЛицензииПоставщиковАлкогольнойПродукции.Владелец
	|			И АлкогольнаяПродукция.ВидЛицензии = ЛицензииПоставщиковАлкогольнойПродукции.ВидЛицензии
	|			И (ЛицензииПоставщиковАлкогольнойПродукции.ДатаНачала В
	|				(ВЫБРАТЬ
	|					МАКСИМУМ(ЛицензииПоставщиковАлкогольнойПродукции.ДатаНачала) КАК Период
	|				ИЗ
	|					Справочник.ЛицензииПоставщиковАлкогольнойПродукции КАК ЛицензииПоставщиковАлкогольнойПродукции
	|				ГДЕ
	|					ЕСТЬNULL(АлкогольнаяПродукция.П000020000113, &ДатаКон) >= ЛицензииПоставщиковАлкогольнойПродукции.ДатаНачала
	|					И АлкогольнаяПродукция.ВидЛицензии = ЛицензииПоставщиковАлкогольнойПродукции.ВидЛицензии
	|					И АлкогольнаяПродукция.СубконтоКт1 = ЛицензииПоставщиковАлкогольнойПродукции.Владелец))
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000020000101,
	|	АлкогольнаяПродукция.П000020000102,
	|	АлкогольнаяПродукция.П000020000103,
	|	АлкогольнаяПродукция.П000020000104,
	|	АлкогольнаяПродукция.П000020000105,
	|	АлкогольнаяПродукция.П000020000106,
	|	АлкогольнаяПродукция.П000020000107,
	|	АлкогольнаяПродукция.П000020000108,
	|	ЛицензииПоставщиковАлкогольнойПродукции.Наименование,
	|	ЛицензииПоставщиковАлкогольнойПродукции.ДатаНачала,
	|	ЛицензииПоставщиковАлкогольнойПродукции.ДатаОкончания,
	|	ЛицензииПоставщиковАлкогольнойПродукции.КемВыдана,
	|	АлкогольнаяПродукция.П000020000113,
	|	АлкогольнаяПродукция.П000020000114,
	|	АлкогольнаяПродукция.П000020000115,
	|	АлкогольнаяПродукция.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	П000020000101,
	|	П000020000102,
	|	П000020000103,
	|	П000020000113,
	|	П000020000115,
	|	П000020000106";
	
	Запрос.Текст = ТекстШаблон;
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Пока Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200001.Количество()>1 Цикл
		Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200001.Удалить(1);
	КонецЦикла;
	Пока Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200003.Количество()>1 Цикл
		Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200003.Удалить(1);
	КонецЦикла;
	
	НС = 1;
	Раздел2Текущий = Раздел2[0];
	ТаблицаЗапроса.Колонки.Добавить("П000020000191");
	
	Для Каждого СтрокаЗапроса Из ТаблицаЗапроса Цикл
		
		СерияНомер = СокрЛП(СтрокаЗапроса.П000020000192);
		ПозицияРазделителя = СтрНайти(СерияНомер, ",");
		Если ПозицияРазделителя = 0 Тогда
			ПозицияРазделителя = СтрНайти(СерияНомер, " ");
		КонецЕсли;
		Если ПозицияРазделителя <> 0 Тогда
			СтрокаЗапроса.П000020000191 = СокрЛП(Лев(СерияНомер, ПозицияРазделителя - 1));
			СтрокаЗапроса.П000020000192 = СокрЛП(Сред(СерияНомер, ПозицияРазделителя + 1));
		КонецЕсли;
		
		Если НС > 1 Тогда 
			Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200001.Добавить();
		КонецЕсли;
		Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200001[НС - 1].П000020000100 = НС;
	 	ЗаполнитьЗначенияСвойств(Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200001[НС - 1], СтрокаЗапроса);
		НС = НС + 1;
		
	КонецЦикла;
	
	
	ПредставлениеПодразделения = СведенияОПодразделении(ПараметрыОтчета.Организация, ПараметрыОтчета.Организация.ИНН);
	СтраницаРаздел2.ОбособленноеПодразделение = ОписаниеПодразделения(ПредставлениеПодразделения);
	
	Если Раздел2[0].ДополнительныеДанные.Количество() = 0 Тогда
			Раздел2[0].ДополнительныеДанные.Добавить(Новый Структура);
	КонецЕсли;
		
	Раздел2[0].ДополнительныеДанные[0].Значение.Вставить("СведенияОбОП", ПредставлениеПодразделения);

	ТаблицаПодразделения = ТаблицаЗапроса.Скопировать();
	
	Для Каждого Колонка Из ТаблицаПодразделения.Колонки Цикл
		Колонка.Имя = СтрЗаменить(Колонка.Имя, "П0000200001", "П0000200003");
	КонецЦикла;
	
	НС = 1;
	Для Каждого СтрокаПодразделения Из ТаблицаПодразделения Цикл
		
		Если НС > 1 Тогда 
			Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200003.Добавить();
		КонецЕсли;
		Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200003[НС - 1].П000020000300 = НС;
		ЗаполнитьЗначенияСвойств(Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200003[НС - 1], СтрокаПодразделения);
		НС = НС + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРегламентированныйОтчетАлкоПриложение11ФормаОтчета2012Кв3ПоПодразделениям(ПараметрыОтчета, Контейнер) Экспорт
	
	СписокОрганизаций = БухгалтерскийУчетПереопределяемый.ВсяОрганизация(ПараметрыОтчета.Организация);
	
	//Заполнение Раздел 1
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Счет60", ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	Запрос.УстановитьПараметр("Счет79", ПланыСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты);
	Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Хозрасчетный.Товары);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = &Счет41
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = &Счет60
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = &Счет79";
	
	Результат = Запрос.ВыполнитьПакет();
	МассивСчетов41 = Результат[0].Выгрузить().ВыгрузитьКолонку("Счет");
	МассивСчетов60 = Результат[1].Выгрузить().ВыгрузитьКолонку("Счет");
	МассивСчетов79 = Результат[2].Выгрузить().ВыгрузитьКолонку("Счет");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Счет60", 		МассивСчетов60);
	Запрос.УстановитьПараметр("Счет41", 		МассивСчетов41);
	Запрос.УстановитьПараметр("Счет79", 		МассивСчетов79);
	Запрос.УстановитьПараметр("ВидСубконто", 	ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("СписокОрганизаций", 	СписокОрганизаций);
	Запрос.УстановитьПараметр("ДатаНач", 		НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("ДатаКон", 		Новый Граница(КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета), ВидГраницы.Включая));
	ТекстШаблон =
	"ВЫБРАТЬ
	|	АлкоНоменклатура.Ссылка КАК Номенклатура,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко КАК Производитель,
	|	АлкоНоменклатура.ОбъемДАЛ КАК КоэффПересчетаДал,
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.Наименование КАК П000010000101,
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.Код КАК П000010000102,
	|	ВЫРАЗИТЬ(АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.НаименованиеПолное КАК СТРОКА(200)) КАК П000010000103,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.ИНН КАК П000010000104,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.КПП КАК П000010000105
	|ПОМЕСТИТЬ АлкогольнаяПродукция
	|ИЗ
	|	Справочник.Номенклатура КАК АлкоНоменклатура
	|ГДЕ
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.ВидЛицензии <> ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийАлкогольнойПродукции.Пиво)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000010000101 КАК П000010000101,
	|	АлкогольнаяПродукция.П000010000102 КАК П000010000102,
	|	АлкогольнаяПродукция.П000010000103 КАК П000010000103,
	|	АлкогольнаяПродукция.П000010000104 КАК П000010000104,
	|	АлкогольнаяПродукция.П000010000105 КАК П000010000105,
	|	ХозрасчетныйОбороты.Подразделение КАК Подразделение,
	|	ХозрасчетныйОбороты.ПодразделениеКор КАК КорПодразделение,
	|	ХозрасчетныйОбороты.Организация КАК Организация,
	|	ХозрасчетныйОбороты.КорСчет КАК КорСчет,
	|	0 КАК П000010000106,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет60)
	|					И ХозрасчетныйОбороты.КорСубконто1 = АлкогольнаяПродукция.Производитель
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000107,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет60)
	|					И ХозрасчетныйОбороты.КорСубконто1 <> АлкогольнаяПродукция.Производитель
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000108,
	|	0 КАК П000010000109,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|				ТОГДА (ХозрасчетныйОбороты.КоличествоОборотДт - ХозрасчетныйОбороты.КоличествоОборотКт) * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000111,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ХозрасчетныйОбороты.КорСчет В (&Счет60)
	|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|					И НЕ ХозрасчетныйОбороты.КорСчет В (&Счет41)
	|					И НЕ ХозрасчетныйОбороты.КорСчет В (&Счет79))
	|					ИЛИ (ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров)
	|					ИЛИ (ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров)
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000112,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет41)
	|					ИЛИ ХозрасчетныйОбороты.КорСчет В (&Счет79)
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000113,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000115,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000117,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|					И НЕ ХозрасчетныйОбороты.КорСчет В (&Счет41)
	|					И НЕ ХозрасчетныйОбороты.КорСчет В (&Счет79))
	|					ИЛИ (ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров)
	|					ИЛИ (ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров)
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000116,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет41)
	|					ИЛИ ХозрасчетныйОбороты.КорСчет В (&Счет79)
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000118,
	|	0 КАК П000010000120
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет В (&Счет41), &ВидСубконто, Организация В (&СписокОрганизаций), , ) КАК ХозрасчетныйОбороты
	|		ПО АлкогольнаяПродукция.Номенклатура = ХозрасчетныйОбороты.Субконто1
	|ГДЕ
	|	(НЕ ХозрасчетныйОбороты.КорСчет В (&Счет41)
	|			ИЛИ ХозрасчетныйОбороты.КорСчет ЕСТЬ NULL 
	|			ИЛИ ХозрасчетныйОбороты.Подразделение <> ХозрасчетныйОбороты.ПодразделениеКор
	|			ИЛИ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров
	|			ИЛИ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров)
	|	И НЕ ХозрасчетныйОбороты.КорСчет ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105,
	|	ХозрасчетныйОбороты.Подразделение,
	|	ХозрасчетныйОбороты.ПодразделениеКор,
	|	ХозрасчетныйОбороты.Организация,
	|	ХозрасчетныйОбороты.КорСчет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105,
	|	ХозрасчетныйОстаткиНач.Подразделение,
	|	NULL,
	|	ХозрасчетныйОстаткиНач.Организация,
	|	NULL,
	|	СУММА(ХозрасчетныйОстаткиНач.КоличествоОстатокДт * АлкогольнаяПродукция.КоэффПересчетаДал),
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаНач, Счет В (&Счет41), , Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОстаткиНач
	|		ПО АлкогольнаяПродукция.Номенклатура = ХозрасчетныйОстаткиНач.Субконто1
	|ГДЕ
	|	НЕ ХозрасчетныйОстаткиНач.Счет ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105,
	|	ХозрасчетныйОстаткиНач.Подразделение,
	|	ХозрасчетныйОстаткиНач.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105,
	|	ХозрасчетныйОстаткиКон.Подразделение,
	|	NULL,
	|	ХозрасчетныйОстаткиКон.Организация,
	|	NULL,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	СУММА(ХозрасчетныйОстаткиКон.КоличествоОстатокДт * АлкогольнаяПродукция.КоэффПересчетаДал)
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаКон, Счет В (&Счет41), , Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОстаткиКон
	|		ПО АлкогольнаяПродукция.Номенклатура = ХозрасчетныйОстаткиКон.Субконто1
	|ГДЕ
	|	НЕ ХозрасчетныйОстаткиКон.Счет ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105,
	|	ХозрасчетныйОстаткиКон.Подразделение,
	|	ХозрасчетныйОстаткиКон.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	П000010000101,
	|	П000010000102,
	|	П000010000103,
	|	П000010000104,
	|	П000010000105";
	
	Запрос.Текст = ТекстШаблон;
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	ТаблицаЗапроса.Колонки.Добавить("СсылкаПодразделение");
	Для Каждого СтрокаЗапроса Из ТаблицаЗапроса Цикл
		Если ЗначениеЗаполнено(СтрокаЗапроса.Подразделение) Тогда
			СтрокаЗапроса.СсылкаПодразделение = ПолучитьОбособленноеПодразделение(СтрокаЗапроса.Подразделение);
		Иначе
			СтрокаЗапроса.СсылкаПодразделение = ?(ЗначениеЗаполнено(СтрокаЗапроса.Организация), СтрокаЗапроса.Организация, ПараметрыОтчета.Организация);
		КонецЕсли;
		Если СтрокаЗапроса.П000010000113 > 0 Тогда
			Если СтрокаЗапроса.КорСчет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты) Тогда
				Продолжить;
			КонецЕсли;
			Если СтрокаЗапроса.Подразделение = СтрокаЗапроса.КорПодразделение Тогда
				СтрокаЗапроса.П000010000113 = 0;
			Иначе
				СсылкаКорПодразделение = ?(ЗначениеЗаполнено(СтрокаЗапроса.КорПодразделение), ПолучитьОбособленноеПодразделение(СтрокаЗапроса.КорПодразделение), СтрокаЗапроса.Организация);
				Если СтрокаЗапроса.СсылкаПодразделение = СсылкаКорПодразделение Тогда
					СтрокаЗапроса.П000010000113 = 0;
				КонецЕсли;
			КонецЕсли;
		Иначе
			СтрокаЗапроса.П000010000113 = 0;
		КонецЕсли;
		Если СтрокаЗапроса.П000010000118 > 0 Тогда
			Если СтрокаЗапроса.КорСчет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты) Тогда
				Продолжить;
			КонецЕсли;
			Если СтрокаЗапроса.Подразделение = СтрокаЗапроса.КорПодразделение Тогда
				СтрокаЗапроса.П000010000118 = 0;
			Иначе
				СсылкаКорПодразделение = ?(ЗначениеЗаполнено(СтрокаЗапроса.КорПодразделение), ПолучитьОбособленноеПодразделение(СтрокаЗапроса.КорПодразделение), СтрокаЗапроса.Организация);
				Если СтрокаЗапроса.СсылкаПодразделение = СсылкаКорПодразделение Тогда
					СтрокаЗапроса.П000010000118 = 0;
				КонецЕсли;
			КонецЕсли;
		Иначе
			СтрокаЗапроса.П000010000118 = 0;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаЗапроса.Свернуть("П000010000101, П000010000102, П000010000103, П000010000104, П000010000105, СсылкаПодразделение",
							"П000010000106, П000010000107, П000010000108, П000010000111, П000010000112, П000010000113, П000010000115, П000010000116, П000010000117, П000010000118");
	ТаблицаЗапроса.Сортировать("СсылкаПодразделение, П000010000101, П000010000102, П000010000103, П000010000104, П000010000105");
		
	ТаблицаПоОрганизации = ТаблицаЗапроса.Скопировать();
	ТаблицаПоОрганизации.Свернуть("П000010000101, П000010000102, П000010000103, П000010000104, П000010000105",
								"П000010000106, П000010000107, П000010000108, П000010000111, П000010000112, П000010000113, П000010000115, П000010000116, П000010000117, П000010000118");
	ТаблицаПоОрганизации.Сортировать("П000010000101, П000010000102, П000010000103, П000010000104, П000010000105");
	
	Для Каждого Колонка Из ТаблицаЗапроса.Колонки Цикл
		Колонка.Имя = СтрЗаменить(Колонка.Имя, "П0000100001", "П0000100003");
	КонецЦикла;
	
	ДеревоПоПодразделениям = ТаблицуЗначенийВДеревоСГруппировкой(ТаблицаЗапроса, "СсылкаПодразделение");
	
	Раздел1 = Контейнер.Раздел1;
	СтраницаРаздел1 =  Раздел1[0].Данные[0].Значение;
	
	СтраницаРаздел1.ОбособленноеПодразделение = "";
	
	Пока Раздел1.Количество()>1 Цикл
		Контейнер.Раздел1.Удалить(Контейнер.Раздел1.Индекс(Контейнер.Раздел1[1]));
	КонецЦикла;
	
	Пока Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100001.Количество()>0 Цикл
		Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100001.Удалить(
		Контейнер.Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100001.Индекс(
		Контейнер.Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100001[0]));
	КонецЦикла;
	
	Пока Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100003.Количество()>0 Цикл
		Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100003.Удалить(
		Контейнер.Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100003.Индекс(
		Контейнер.Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100003[0]));
	КонецЦикла;
	
	Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100001.Добавить();
	Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100003.Добавить();
	
	НС = 1;
	Раздел1Текущий = Раздел1[0];
	
	Для Каждого СтрокаЗапроса Из ТаблицаПоОрганизации Цикл
		
		Если НС > 1 Тогда 
			Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100001.Добавить();
		КонецЕсли;
		Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100001[НС - 1].П000010000100 = НС;
	 	ЗаполнитьЗначенияСвойств(Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100001[НС - 1], СтрокаЗапроса);
		НС = НС + 1;
		
	КонецЦикла;
	
	НомерПодразделения = 0;
	
	Для Каждого Подразделение Из ДеревоПоПодразделениям.Строки Цикл
		
		НомерТекущейСтраницы = Раздел1.Количество();
		
		Если НомерПодразделения > 0 Тогда	
			
			Раздел1.Добавить().Данные = Новый СписокЗначений();
					
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел1[0].Данные[0].Значение Цикл
				Если Неопределено = Показатель.Значение Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел1[НомерТекущейСтраницы].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел1Текущий = Раздел1[НомерТекущейСтраницы];
			СтраницаРаздел1 =  Раздел1Текущий.Данные[0].Значение;

			Контейнер.Раздел1_ДанныеДопСтрок1.Очистить();
			Контейнер.Раздел1_ХранилищеДанныхДопСтрок1.Добавить();
			
			Контейнер.Раздел1_ДанныеДопСтрок2.Очистить();
			Контейнер.Раздел1_ХранилищеДанныхДопСтрок2.Добавить();
			
			ИндексПоследнего1 = НомерПодразделения; 
			ИндексПоследнего2 = НомерПодразделения; 
			
			СписокДопСтрокРаздел1  = Новый Структура();
			СписокДопСтрокРаздел1.Вставить("П0000100001", Контейнер.Раздел1_ХранилищеДанныхДопСтрок1[ИндексПоследнего1].Таблица);
			СписокДопСтрокРаздел1.Вставить("П0000100003", Контейнер.Раздел1_ХранилищеДанныхДопСтрок2[ИндексПоследнего2].Таблица);
		
			Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок = Новый СписокЗначений();
			Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок.Вставить(0, СписокДопСтрокРаздел1, "ДанныеФормыКоллекцияТаблицаДопСтрокРаздела");
			
			Пока Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100001.Количество()>0 Цикл
				Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100001.Удалить(
				Контейнер.Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100001.Индекс(
				Контейнер.Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100001[0]));
			КонецЦикла;
			
			Пока Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100003.Количество()>0 Цикл
				Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100003.Удалить(
				Контейнер.Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100003.Индекс(
				Контейнер.Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100003[0]));
			КонецЦикла;
			
			Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100001.Добавить();
			Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100003.Добавить();
						
		КонецЕсли;
		
		Раздел1 = Контейнер.Раздел1;
		СтраницаРаздел1 =  Раздел1[НомерПодразделения].Данные[0].Значение;
						
		Пока Раздел1[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000100003.Количество()>1 Цикл
			Раздел1[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000100003.Удалить(
			Контейнер.Раздел1[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000100003.Индекс(
			Контейнер.Раздел1[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000100003[1]));
		КонецЦикла;
		
		ПредставлениеПодразделения = СведенияОПодразделении(Подразделение.СсылкаПодразделение, ПараметрыОтчета.Организация.ИНН, СписокОрганизаций);
		СтраницаРаздел1.ОбособленноеПодразделение = ОписаниеПодразделения(ПредставлениеПодразделения);
		
		Если Раздел1[НомерПодразделения].ДополнительныеДанные.Количество() = 0 Тогда
			Раздел1[НомерПодразделения].ДополнительныеДанные.Добавить(Новый Структура);
		КонецЕсли;
		
		Раздел1[НомерПодразделения].ДополнительныеДанные[0].Значение.Вставить("СведенияОбОП", ПредставлениеПодразделения);
		
		Пока Раздел1[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000100003.Количество()>1 Цикл
			Раздел1[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000100003.Удалить(1);
		КонецЦикла;
		
		НС = 1;
		Раздел1Текущий = Раздел1[НомерПодразделения];
		
		Для Каждого СтрокаПодразделения Из Подразделение.Строки Цикл
			
			Если НС > 1 Тогда 
				Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100003.Добавить();
			КонецЕсли;
			Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100003[НС - 1].П000010000300 = НС;
			ЗаполнитьЗначенияСвойств(Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100003[НС - 1], СтрокаПодразделения);
			НС = НС + 1;
			
		КонецЦикла;
		
		НомерПодразделения = НомерПодразделения + 1;
		
	КонецЦикла;
	
	//Заполнение Раздел 2
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Счет60", 		МассивСчетов60);
	Запрос.УстановитьПараметр("Счет41", 		МассивСчетов41);
	Запрос.УстановитьПараметр("СчетГТД", 		ПланыСчетов.Хозрасчетный.ГТД);
	Запрос.УстановитьПараметр("ВидСубконто", 	ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("ВидКорСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	Запрос.УстановитьПараметр("СписокОрганизаций", 	СписокОрганизаций);
	Запрос.УстановитьПараметр("ДатаНач", 		НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("ДатаКон", 		КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	ТекстШаблон =
	"ВЫБРАТЬ
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.Наименование КАК П000020000101,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.Код КАК П000020000102,
	|	ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.НаименованиеПолное КАК СТРОКА(200)) КАК П000020000103,
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.ИНН
	|		ИНАЧЕ СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.РегистрационныйНомер
	|	КОНЕЦ КАК П000020000104,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.КПП КАК П000020000105,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1.НаименованиеПолное КАК СТРОКА(200)) КАК П000020000106,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).ИНН
	|		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).РегистрационныйНомер, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК П000020000107,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).КПП, НЕОПРЕДЕЛЕНО) КАК П000020000108,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).ДатаВходящегоДокумента, ХозрасчетныйОбороты.Период) КАК П000020000113,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).НомерВходящегоДокумента, НЕОПРЕДЕЛЕНО) КАК П000020000114,
	|	ХозрасчетныйОбороты.ПодразделениеДт КАК Подразделение,
	|	ХозрасчетныйОбороты.Организация КАК Организация,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.ВидЛицензии КАК ВидЛицензии,
	|	ХозрасчетныйГТД.СубконтоДт2 КАК П000020000115,
	|	ХозрасчетныйОбороты.СубконтоКт1,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ХозрасчетныйГТД.СубконтоДт2 ЕСТЬ NULL 
	|				ТОГДА ХозрасчетныйГТД.КоличествоОборотДт
	|			ИНАЧЕ ХозрасчетныйОбороты.КоличествоОборотДт
	|		КОНЕЦ * СведенияОбАлкогольнойПродукции.ОбъемДАЛ) КАК П000020000116
	|ПОМЕСТИТЬ АлкогольнаяПродукция
	|ИЗ
	|	Справочник.Номенклатура КАК СведенияОбАлкогольнойПродукции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Регистратор, СчетДт В (&Счет41), &ВидСубконто, СчетКт В (&Счет60), &ВидКорСубконто, Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОбороты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Регистратор, СчетДт = &СчетГТД, , , , Организация В (&СписокОрганизаций)) КАК ХозрасчетныйГТД
	|			ПО ХозрасчетныйОбороты.СубконтоДт1 = ХозрасчетныйГТД.СубконтоДт1
	|				И ХозрасчетныйОбороты.Регистратор = ХозрасчетныйГТД.Регистратор
	|		ПО СведенияОбАлкогольнойПродукции.Ссылка = ХозрасчетныйОбороты.СубконтоДт1
	|ГДЕ
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.ВидЛицензии <> ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийАлкогольнойПродукции.Пиво)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.Наименование,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.Код,
	|	ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.НаименованиеПолное КАК СТРОКА(200)),
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.ИНН
	|		ИНАЧЕ СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.РегистрационныйНомер
	|	КОНЕЦ,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.КПП,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1.НаименованиеПолное КАК СТРОКА(200)),
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).ИНН
	|		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).РегистрационныйНомер, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).КПП, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).ДатаВходящегоДокумента, ХозрасчетныйОбороты.Период),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).НомерВходящегоДокумента, НЕОПРЕДЕЛЕНО),
	|	ХозрасчетныйОбороты.ПодразделениеДт,
	|	ХозрасчетныйОбороты.Организация,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.ВидЛицензии,
	|	ХозрасчетныйГТД.СубконтоДт2,
	|	ХозрасчетныйОбороты.СубконтоКт1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000020000101 КАК П000020000101,
	|	АлкогольнаяПродукция.П000020000102 КАК П000020000102,
	|	АлкогольнаяПродукция.П000020000103 КАК П000020000103,
	|	АлкогольнаяПродукция.П000020000104 КАК П000020000104,
	|	АлкогольнаяПродукция.П000020000105 КАК П000020000105,
	|	АлкогольнаяПродукция.П000020000106 КАК П000020000106,
	|	АлкогольнаяПродукция.П000020000107 КАК П000020000107,
	|	АлкогольнаяПродукция.П000020000108 КАК П000020000108,
	|	ЛицензииПоставщиковАлкогольнойПродукции.Наименование КАК П000020000192,
	|	ЛицензииПоставщиковАлкогольнойПродукции.ДатаНачала КАК П000020000110,
	|	ЛицензииПоставщиковАлкогольнойПродукции.ДатаОкончания КАК П000020000111,
	|	ЛицензииПоставщиковАлкогольнойПродукции.КемВыдана КАК П000020000112,
	|	АлкогольнаяПродукция.П000020000113 КАК П000020000113,
	|	АлкогольнаяПродукция.П000020000114 КАК П000020000114,
	|	АлкогольнаяПродукция.П000020000115 КАК П000020000115,
	|	АлкогольнаяПродукция.Подразделение КАК Подразделение,
	|	АлкогольнаяПродукция.Организация КАК Организация,
	|	СУММА(АлкогольнаяПродукция.П000020000116) КАК П000020000116
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЛицензииПоставщиковАлкогольнойПродукции КАК ЛицензииПоставщиковАлкогольнойПродукции
	|		ПО АлкогольнаяПродукция.СубконтоКт1 = ЛицензииПоставщиковАлкогольнойПродукции.Владелец
	|			И АлкогольнаяПродукция.ВидЛицензии = ЛицензииПоставщиковАлкогольнойПродукции.ВидЛицензии
	|			И (ЛицензииПоставщиковАлкогольнойПродукции.ДатаНачала В
	|				(ВЫБРАТЬ
	|					МАКСИМУМ(ЛицензииПоставщиковАлкогольнойПродукции.ДатаНачала) КАК Период
	|				ИЗ
	|					Справочник.ЛицензииПоставщиковАлкогольнойПродукции КАК ЛицензииПоставщиковАлкогольнойПродукции
	|				ГДЕ
	|					ЕСТЬNULL(АлкогольнаяПродукция.П000020000113, &ДатаКон) >= ЛицензииПоставщиковАлкогольнойПродукции.ДатаНачала
	|					И АлкогольнаяПродукция.ВидЛицензии = ЛицензииПоставщиковАлкогольнойПродукции.ВидЛицензии
	|					И АлкогольнаяПродукция.СубконтоКт1 = ЛицензииПоставщиковАлкогольнойПродукции.Владелец))
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000020000101,
	|	АлкогольнаяПродукция.П000020000102,
	|	АлкогольнаяПродукция.П000020000103,
	|	АлкогольнаяПродукция.П000020000104,
	|	АлкогольнаяПродукция.П000020000105,
	|	АлкогольнаяПродукция.П000020000106,
	|	АлкогольнаяПродукция.П000020000107,
	|	АлкогольнаяПродукция.П000020000108,
	|	ЛицензииПоставщиковАлкогольнойПродукции.Наименование,
	|	ЛицензииПоставщиковАлкогольнойПродукции.ДатаНачала,
	|	ЛицензииПоставщиковАлкогольнойПродукции.ДатаОкончания,
	|	ЛицензииПоставщиковАлкогольнойПродукции.КемВыдана,
	|	АлкогольнаяПродукция.П000020000113,
	|	АлкогольнаяПродукция.П000020000114,
	|	АлкогольнаяПродукция.П000020000115,
	|	АлкогольнаяПродукция.Подразделение,
	|	АлкогольнаяПродукция.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	П000020000101,
	|	П000020000102,
	|	П000020000103,
	|	П000020000113,
	|	П000020000115,
	|	П000020000106";
	
	Запрос.Текст = ТекстШаблон;
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	ТаблицаЗапроса.Колонки.Добавить("СсылкаПодразделение");
	Для Каждого СтрокаЗапроса Из ТаблицаЗапроса Цикл
		Если ЗначениеЗаполнено(СтрокаЗапроса.Подразделение) Тогда
			СтрокаЗапроса.СсылкаПодразделение = ПолучитьОбособленноеПодразделение(СтрокаЗапроса.Подразделение);
		Иначе
			СтрокаЗапроса.СсылкаПодразделение = ?(ЗначениеЗаполнено(СтрокаЗапроса.Организация), СтрокаЗапроса.Организация, ПараметрыОтчета.Организация);
		КонецЕсли;
	КонецЦикла;
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	СтраницаРаздел2.ОбособленноеПодразделение = "";
	
	Пока Раздел2.Количество()>1 Цикл
		Контейнер.Раздел2.Удалить(Контейнер.Раздел2.Индекс(Контейнер.Раздел2[1]));
	КонецЦикла;
	
	Пока Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200001.Количество()>0 Цикл
		Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200001.Удалить(
		Контейнер.Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200001.Индекс(
		Контейнер.Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200001[0]));
	КонецЦикла;
	
	Пока Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200003.Количество()>0 Цикл
		Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200003.Удалить(
		Контейнер.Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200003.Индекс(
		Контейнер.Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200003[0]));
	КонецЦикла;
	
	Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200001.Добавить();
	Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200003.Добавить();
		
	НС = 1;
	Раздел2Текущий = Раздел2[0];

	ТаблицаЗапроса.Колонки.Добавить("П000020000191");
	
	Для Каждого СтрокаЗапроса Из ТаблицаЗапроса Цикл
		
		СерияНомер = СокрЛП(СтрокаЗапроса.П000020000192);
		ПозицияРазделителя = СтрНайти(СерияНомер, ",");
		Если ПозицияРазделителя = 0 Тогда
			ПозицияРазделителя = СтрНайти(СерияНомер, " ");
		КонецЕсли;
		Если ПозицияРазделителя <> 0 Тогда
			СтрокаЗапроса.П000020000191 = СокрЛП(Лев(СерияНомер, ПозицияРазделителя - 1));
			СтрокаЗапроса.П000020000192 = СокрЛП(Сред(СерияНомер, ПозицияРазделителя + 1));
		КонецЕсли;
		
		Если НС > 1 Тогда 
			Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200001.Добавить();
		КонецЕсли;
		Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200001[НС - 1].П000020000100 = НС;
	 	ЗаполнитьЗначенияСвойств(Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200001[НС - 1], СтрокаЗапроса);
		НС = НС + 1;
		
	КонецЦикла;
	
	//Заполнение информации о подразделениях в Раздел2
	
	Для Каждого Колонка Из ТаблицаЗапроса.Колонки Цикл
		Колонка.Имя = СтрЗаменить(Колонка.Имя, "П0000200001", "П0000200003");
	КонецЦикла;
	
	ДеревоПоПодразделениям = ТаблицуЗначенийВДеревоСГруппировкой(ТаблицаЗапроса, "СсылкаПодразделение");
	
	НомерПодразделения = 0;
	
	Для Каждого Подразделение Из ДеревоПоПодразделениям.Строки Цикл 
		
		НомерТекущейСтраницы = Раздел2.Количество();
		
		Если НомерПодразделения > 0 Тогда	
			
			Раздел2.Добавить().Данные = Новый СписокЗначений();
					
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
				Если Неопределено = Показатель.Значение Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел2[НомерТекущейСтраницы].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел2Текущий = Раздел2[НомерТекущейСтраницы];
			СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;

			Контейнер.Раздел2_ДанныеДопСтрок1.Очистить();
			Контейнер.Раздел2_ХранилищеДанныхДопСтрок1.Добавить();
			
			Контейнер.Раздел2_ДанныеДопСтрок2.Очистить();
			Контейнер.Раздел2_ХранилищеДанныхДопСтрок2.Добавить();
			
			ИндексПоследнего1 = НомерПодразделения; 
			ИндексПоследнего2 = НомерПодразделения; 
			
			СписокДопСтрокРаздел2  = Новый Структура();
			СписокДопСтрокРаздел2.Вставить("П0000200001", Контейнер.Раздел2_ХранилищеДанныхДопСтрок1[ИндексПоследнего1].Таблица);
			СписокДопСтрокРаздел2.Вставить("П0000200003", Контейнер.Раздел2_ХранилищеДанныхДопСтрок2[ИндексПоследнего2].Таблица);
		
			Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок = Новый СписокЗначений();
			Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок.Вставить(0, СписокДопСтрокРаздел2, "ДанныеФормыКоллекцияТаблицаДопСтрокРаздела");
						 			
			Пока Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200001.Количество()>0 Цикл
				Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200001.Удалить(
				Контейнер.Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200001.Индекс(
				Контейнер.Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200001[0]));
			КонецЦикла;
			
			Пока Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200003.Количество()>0 Цикл
				Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200003.Удалить(
				Контейнер.Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200003.Индекс(
				Контейнер.Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200003[0]));
			КонецЦикла;
			
			Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200001.Добавить();
			Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200003.Добавить();
			
		КонецЕсли;
		
		Раздел2 = Контейнер.Раздел2;
		СтраницаРаздел2 =  Раздел2[НомерПодразделения].Данные[0].Значение;
						
		Пока Раздел2[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000200003.Количество()>1 Цикл
			Раздел2[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000200003.Удалить(
			Контейнер.Раздел2[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000200003.Индекс(
			Контейнер.Раздел2[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000200003[1]));
		КонецЦикла;
		
		Раздел2Текущий = Раздел2[НомерПодразделения];
		
		Если Подразделение.Строки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
	
		ПредставлениеПодразделения = СведенияОПодразделении(Подразделение.СсылкаПодразделение, ПараметрыОтчета.Организация.ИНН, СписокОрганизаций);
		СтраницаРаздел2.ОбособленноеПодразделение = ОписаниеПодразделения(ПредставлениеПодразделения);
		
		Если Раздел2[НомерПодразделения].ДополнительныеДанные.Количество() = 0 Тогда
			Раздел2[НомерПодразделения].ДополнительныеДанные.Добавить(Новый Структура);
		КонецЕсли;
		
		Раздел2[НомерПодразделения].ДополнительныеДанные[0].Значение.Вставить("СведенияОбОП", ПредставлениеПодразделения);
		
		НС = 1;
		Для Каждого СтрокаПодразделения Из Подразделение.Строки Цикл
			
			Если НС > 1 Тогда 
				Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200003.Добавить();
			КонецЕсли;
			Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200003[НС - 1].П000020000300 = НС;
			ЗаполнитьЗначенияСвойств(Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200003[НС - 1], СтрокаПодразделения);
			НС = НС + 1;
			
		КонецЦикла;
		
		НомерПодразделения = НомерПодразделения + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ЕстьОбособленныеПодразделения(ПараметрыОтчета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Организация
	|ПОМЕСТИТЬ ВТОрганизации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ГоловнаяОрганизация = &Организация
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	&Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Подразделения.Ссылка
	|ИЗ
	|	Справочник.СтруктураПредприятия КАК Подразделения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОрганизации КАК Организации
	|			ПО РегистрацииВНалоговомОргане.Организация = Организации.Организация
	|		ПО Подразделения.Ссылка = РегистрацииВНалоговомОргане.Подразделение";
	
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

// Создает временную таблицу, содержащую соответствия между подразделениями и обособленными подразделениями, в структуру
// которого они входят.
//
// Параметры:
//  МенеджерВТ   - МенеджерВременныхТаблиц - это менеджер временных таблиц, содержащий таблицы:
//                 * Подразделения = таблица-источник подразделений для сопоставления. Содержит колонку Подразделение.
//                 * ОбособленныеПодразделения = таблица, создаваемая процедурой. Содержит колонки Подразделение и ОбособленноеПодразделение.
//  Организация  - СправочникСсылка.Организации - организация по-умолчанию для пустых подразделений.
//
Процедура ДобавитьТаблицуОбособленныхПодразделений(МенеджерВТ, Организация)

	ТекстСопоставления =
	"ВЫБРАТЬ
	|	Подразделения.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА НЕ РегистрацииВНалоговомОргане.Подразделение ЕСТЬ NULL
	|			ТОГДА Подразделения.Подразделение
	|		КОГДА Подразделения.Подразделение.Родитель <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА Подразделения.Подразделение.Родитель
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК ОбособленноеПодразделение,
	|	ВЫБОР
	|		КОГДА НЕ РегистрацииВНалоговомОргане.Подразделение ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		КОГДА Подразделения.Подразделение.Родитель <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СопоставлениеПроизведено
	|ПОМЕСТИТЬ РезультатСоспоставления
	|ИЗ
	|	Подразделения КАК Подразделения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|		ПО Подразделения.Подразделение = РегистрацииВНалоговомОргане.Подразделение
	|		И Подразделения.Организация = РегистрацииВНалоговомОргане.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Подразделения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбособленныеПодразделения.Подразделение КАК Подразделение,
	|	ОбособленныеПодразделения.ОбособленноеПодразделение КАК ОбособленноеПодразделение
	|ПОМЕСТИТЬ ОбособленныеПодразделенияВременная
	|ИЗ
	|	ОбособленныеПодразделения КАК ОбособленныеПодразделения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РезультатСоспоставления.Подразделение,
	|	РезультатСоспоставления.ОбособленноеПодразделение
	|ИЗ
	|	РезультатСоспоставления КАК РезультатСоспоставления
	|ГДЕ
	|	РезультатСоспоставления.СопоставлениеПроизведено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОбособленныеПодразделения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбособленныеПодразделенияВременная.Подразделение КАК Подразделение,
	|	ОбособленныеПодразделенияВременная.ОбособленноеПодразделение
	|ПОМЕСТИТЬ ОбособленныеПодразделения
	|ИЗ
	|	ОбособленныеПодразделенияВременная КАК ОбособленныеПодразделенияВременная
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОбособленныеПодразделенияВременная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезультатСоспоставления.Подразделение КАК Подразделение
	|ПОМЕСТИТЬ Подразделения
	|ИЗ
	|	РезультатСоспоставления КАК РезультатСоспоставления
	|ГДЕ
	|	НЕ РезультатСоспоставления.СопоставлениеПроизведено
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РезультатСоспоставления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Подразделения.Подразделение
	|ИЗ
	|	Подразделения КАК Подразделения";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	// Инициализируем целевую таблицу.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	&Организация КАК ОбособленноеПодразделение
	|ПОМЕСТИТЬ ОбособленныеПодразделения";
	Запрос.Выполнить();
	
	Запрос.Текст = ТекстСопоставления;
	Для инд = 1 По 128 Цикл // фиксируем максимальное количество уровней, чтобы не было зацикливания
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Запрос.Текст = "УНИЧТОЖИТЬ Подразделения";
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаРегламентированныйОтчетАлкоПриложение12ФормаОтчета2012Кв3(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000101", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000102", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000104", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000105", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000106", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000107", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000108", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000109", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000111", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000112", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000114", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000115", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000116", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000301", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000302", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000303", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000304", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000305", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000306", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000307", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000308", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000309", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000311", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000312", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000314", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000315", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000316", Истина, Ложь);
		
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000101", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000102", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000104", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000105", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000106", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000107", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000108", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000109", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000110", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000111", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000112", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000301", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000302", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000303", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000304", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000305", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000306", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000307", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000308", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000309", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000310", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000311", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000312", Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьРегламентированныйОтчетАлкоПриложение12ФормаОтчета2012Кв3(ПараметрыОтчета, Контейнер) Экспорт
	
	ВестиУчетПоПодразделениям = ЕстьОбособленныеПодразделения(ПараметрыОтчета);
	Если ВестиУчетПоПодразделениям Тогда
		СписокОрганизаций = БухгалтерскийУчетПереопределяемый.ВсяОрганизация(ПараметрыОтчета.Организация);
	Иначе
		СписокОрганизаций = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыОтчета.Организация);
	КонецЕсли;
	
	ДокументСсылкаАлкоОтчет	= ПараметрыОтчета.ДокументСсылка;
	ВспомогательныйАдрес 	= ПараметрыОтчета.ВспомогательныйАдрес;
	
	// индикация начала работы фоновой операции
	РегламентированнаяОтчетностьАЛКО.СообщитьПроцентВыполнения( , 0, 100);
	
	СтруктураИдГруппИменРегистровСведений = ПараметрыОтчета.СтруктураИдГруппИменРегистровСведений;
	
	// Определим объект Отчета
	ИмяФормыОбъекта	= ПараметрыОтчета.ИмяФормыОбъекта;
	ОбъектОтчета = РегламентированнаяОтчетностьВызовСервера.ОбъектОтчета(ИмяФормыОбъекта);
	
	СтруктураИдГруппБуферИтогов = ПараметрыОтчета.СтруктураИдГруппБуферИтогов;
	СтруктураИтогов = Новый Структура;
	КолВБлокеЗаписей = 3000;
	
	МаксИндексСтраницы = Контейнер.МаксИндексСтраницы;
	МаксИндексСтраницы = МаксИндексСтраницы + 1;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Товары)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками)";

	
	Результат = Запрос.ВыполнитьПакет();
	МассивСчетов41 = Результат[0].Выгрузить().ВыгрузитьКолонку("Счет");
	МассивСчетов79 = Результат[1].Выгрузить().ВыгрузитьКолонку("Счет");
	МассивСчетов60 = Результат[2].Выгрузить().ВыгрузитьКолонку("Счет");
	
	ВидыСубконтоНоменклатураГТД = Новый Массив;
	ВидыСубконтоНоменклатураГТД.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконтоНоменклатураГТД.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НомераГТД);

	
	Запрос.УстановитьПараметр("ДатаНач", 		             НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("ДатаКон", 		             КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Организация",                 ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("СписокОрганизаций",           СписокОрганизаций); // включая обособленные подразделения
	Запрос.УстановитьПараметр("Субсчета41",                  МассивСчетов41);
	Запрос.УстановитьПараметр("Субсчета79",                  МассивСчетов79);
	Запрос.УстановитьПараметр("Субсчета60",                  МассивСчетов60);
	Запрос.УстановитьПараметр("ВидСубконтоНоменклатура",     ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("ВидыСубконтоНоменклатураГТД", ВидыСубконтоНоменклатураГТД);
	Запрос.УстановитьПараметр("ПустоеПодразделение",         Справочники.СтруктураПредприятия.ПустаяСсылка());
		
	//Заполнение Раздел 1
	
	// Получаем данные по алкогольной продукции.
	Запрос.Текст = ТекстЗапросаАлкоПриложение12ФормаОтчета2012Кв3Раздел1_ИсточникиДанных(ВестиУчетПоПодразделениям);
	
	Если ВестиУчетПоПодразделениям Тогда

	
		Запрос.Текст = Запрос.Текст + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокПодразделений.Подразделение КАК Подразделение,
		|	СписокПодразделений.Организация КАК Организация
		|ПОМЕСТИТЬ Подразделения
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОборотыЗаПериод.Подразделение КАК Подразделение,
		|		ОборотыЗаПериод.Организация КАК Организация
		|	ИЗ
		|		ОборотыЗаПериод КАК ОборотыЗаПериод
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОборотыЗаПериод.КорПодразделение,
		|		ОборотыЗаПериод.Организация
		|	ИЗ
		|		ОборотыЗаПериод КАК ОборотыЗаПериод
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НачальныеОстатки.Подразделение,
		|		НачальныеОстатки.Организация
		|	ИЗ
		|		НачальныеОстатки КАК НачальныеОстатки) КАК СписокПодразделений
		|ГДЕ
		|	СписокПодразделений.Подразделение <> &ПустоеПодразделение
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подразделение,
		|	Организация";
		
		Запрос.Выполнить();
	
		// Получаем соответствие подразделений, по которым имеются данные для отчета, и обособленных подразделений,
		// в которые они входят.
		ДобавитьТаблицуОбособленныхПодразделений(Запрос.МенеджерВременныхТаблиц, ПараметрыОтчета.Организация);
		
	Иначе
		
		Запрос.Текст = Запрос.Текст + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
		"ВЫБРАТЬ
		|	&ПустоеПодразделение КАК Подразделение,
		|	&Организация КАК ОбособленноеПодразделение
		|ПОМЕСТИТЬ ОбособленныеПодразделения";
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапросаАлкоПриложение12ФормаОтчета2012Кв3Раздел1_Результат();
	Результат = Запрос.Выполнить();
	ВыборкаПоПодразделениям = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Запрос.МенеджерВременныхТаблиц.Закрыть();
	
	Раздел_ИмяРабочегоРегистра 	= СтруктураИдГруппИменРегистровСведений["Раздел1"];
	
	Раздел                          = Контейнер.Раздел1;
	Раздел_ТЗ_Хранилище             = Контейнер.Раздел1_ТЗ_Хранилище;
	Раздел_СервисРегистров          = Контейнер.Раздел1_СервисРегистров;
	Раздел_СервисРегистровУдаленные = Контейнер.Раздел1_СервисРегистровУдаленные;
	
	// Удаляем все страницы текущего отчета
	Для Каждого СтрокаСервисРегистровГруппы Из Раздел_СервисРегистров Цикл
		
		НоваяСтрокаСервисРегистровГруппыУдаленные = Раздел_СервисРегистровУдаленные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСервисРегистровГруппыУдаленные, СтрокаСервисРегистровГруппы);
		
		Ресурсы = Новый Структура;
		Ресурсы.Вставить("КоличествоСтрок", НоваяСтрокаСервисРегистровГруппыУдаленные.КоличествоСтрок);		
		// Индекс строки 0 используем для обозначения операций над страницами в целом.
		// В норме индекс строки не меньше 1.	
		РегламентированнаяОтчетностьАЛКО.ДобавитьВРегистрЖурнала(ДокументСсылкаАлкоОтчет, Раздел_ИмяРабочегоРегистра,
					НоваяСтрокаСервисРегистровГруппыУдаленные.ИндексСтраницыРегистра, 0, "УдалениеСтраницы", Ресурсы);
									
	КонецЦикла;
				
	Раздел_СервисРегистров.Очистить();
	ИндексСтраницы = -1;
	ИдГруппы = "П0000100003";
	
	СписокБуфферИтоговГруппы = СтруктураИдГруппБуферИтогов[ИдГруппы];
	МассивРезультатов = Новый Массив;
	
	Пока ВыборкаПоПодразделениям.Следующий() Цикл
		
		ИндексСтраницы = ИндексСтраницы + 1;
		
		РазделТекущий = Раздел.Добавить();
		Раздел_СервисРегистровТекущий = Раздел_СервисРегистров.Добавить();
		
		МаксИндексСтраницы = МаксИндексСтраницы + 1;
		
		Если РазделТекущий.Данные.Количество() = 0 Тогда
			РазделТекущий.Данные.Добавить(Новый Структура);
		КонецЕсли;
		СтраницаРаздел = РазделТекущий.Данные[0].Значение;

		ПредставлениеПодразделения = СведенияОПодразделении(ВыборкаПоПодразделениям.СсылкаПодразделение, ПараметрыОтчета.Организация.ИНН, СписокОрганизаций);
		Если РазделТекущий.ДополнительныеДанные.Количество() = 0 Тогда
			РазделТекущий.ДополнительныеДанные.Добавить(Новый Структура); 
		КонецЕсли;
		РазделТекущий.ДополнительныеДанные[0].Значение.Вставить("СведенияОбОП", ПредставлениеПодразделения);

		Раздел_ДанныеДопСтрокТекущий = Раздел_ТЗ_Хранилище.Скопировать();

		МассивРезультатов.Добавить(Новый СписокЗначений);
		Для Каждого ЭлементСписка Из СписокБуфферИтоговГруппы Цикл
		    // в массиве будут храниться итоги по страницам по данному полю - представлению
			МассивРезультатов[ИндексСтраницы].Добавить(0, ЭлементСписка.Представление);	
		КонецЦикла;
	
		КоличествоТекСтрок = 0;

		КоличествоВТекущемБлокеЗаписей = 0; // Номер строки
		Выборка = ВыборкаПоПодразделениям.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			КоличествоВТекущемБлокеЗаписей = КоличествоВТекущемБлокеЗаписей + 1;
			
			НоваяСтрокаДопСтрок = Раздел_ДанныеДопСтрокТекущий.Добавить();		
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДопСтрок, Выборка);
			ОбъектОтчета.Расчет(ИдГруппы, НоваяСтрокаДопСтрок); // расчет по строке
			
			// Суммируем итоги.
			Для Каждого КонтролируемоеПоле Из МассивРезультатов[ИндексСтраницы] Цикл
				
				ИмяКонтролируемогоПоля = КонтролируемоеПоле.Представление;
				
				НоваяСтрокаДопСтрок[ИмяКонтролируемогоПоля] = ?(НоваяСтрокаДопСтрок[ИмяКонтролируемогоПоля] = Неопределено, 
																0, НоваяСтрокаДопСтрок[ИмяКонтролируемогоПоля]);
				
				КонтролируемоеПоле.Значение = КонтролируемоеПоле.Значение + НоваяСтрокаДопСтрок[ИмяКонтролируемогоПоля];

			КонецЦикла;
		
			// Каждые 3000 строк пишем в регистр.
			Если КоличествоВТекущемБлокеЗаписей >= КолВБлокеЗаписей Тогда
				
				КоличествоВТекущемБлокеЗаписей = 0;
				РегламентированнаяОтчетностьАЛКО.ДобавитьТаблицуЗначенийВРегистрСведенийАлко(ДокументСсылкаАлкоОтчет, ИмяФормыОбъекта, Раздел_ИмяРабочегоРегистра, 
											МаксИндексСтраницы, Раздел_ДанныеДопСтрокТекущий, КоличествоТекСтрок);
			    			
			    Раздел_ДанныеДопСтрокТекущий.Очистить();

			КонецЕсли;
			
		КонецЦикла;
		
		// Заносим в регистр сведений, если остались незаписанные строки
		Если Раздел_ДанныеДопСтрокТекущий.Количество() > 0 Тогда
		    			
			РегламентированнаяОтчетностьАЛКО.ДобавитьТаблицуЗначенийВРегистрСведенийАлко(ДокументСсылкаАлкоОтчет, ИмяФормыОбъекта, Раздел_ИмяРабочегоРегистра, 
											МаксИндексСтраницы, Раздел_ДанныеДопСтрокТекущий, КоличествоТекСтрок);
						
		    Раздел_ДанныеДопСтрокТекущий.Очистить();
		
		КонецЕсли; 
				
		// Занесем в регистр Журнал	
		Ресурсы = Новый Структура;
		Ресурсы.Вставить("КоличествоСтрок", КоличествоТекСтрок);	
		Ресурсы.Вставить("МаксИндексСтраницы", МаксИндексСтраницы);
		
		РегламентированнаяОтчетностьАЛКО.ДобавитьВРегистрЖурнала(ДокументСсылкаАлкоОтчет, Раздел_ИмяРабочегоРегистра,	
												МаксИндексСтраницы, 0, "Автозаполнение", Ресурсы);
										
		// занесем в СервисРегистров данные по количеству строк и номеру страницы регистра
		Раздел_СервисРегистровТекущий.КоличествоСтрок = КоличествоТекСтрок;
		Раздел_СервисРегистровТекущий.ИндексСтраницыРегистра = МаксИндексСтраницы;
		Раздел_СервисРегистровТекущий.КолвоСтрокПомНаУдаление = 0;
	    		
	КонецЦикла;
	СтруктураИтогов.Вставить(ИдГруппы, МассивРезультатов);

	
	//Заполнение Раздел 2
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапросаАлкоПриложение12ФормаОтчета2012Кв3Раздел2_ИсточникиДанных();
	
	Если ВестиУчетПоПодразделениям Тогда
	
		Запрос.Текст = Запрос.Текст + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОборотыЗаПериод.Подразделение КАК Подразделение,
		|	ОборотыЗаПериод.Организация КАК Организация
		|ПОМЕСТИТЬ Подразделения
		|ИЗ
		|	ОборотыЗаПериод КАК ОборотыЗаПериод
		|ГДЕ
		|	ОборотыЗаПериод.Подразделение <> &ПустоеПодразделение
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подразделение,
		|	Организация";
		
		Запрос.Выполнить();
	
		// Получаем соответствие подразделений, по которым имеются данные для отчета, и обособленных подразделений,
		// в которые они входят.
		ДобавитьТаблицуОбособленныхПодразделений(Запрос.МенеджерВременныхТаблиц, ПараметрыОтчета.Организация);
		
	Иначе
		
		Запрос.Текст = Запрос.Текст + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
		"ВЫБРАТЬ
		|	&ПустоеПодразделение КАК Подразделение,
		|	&Организация КАК ОбособленноеПодразделение
		|ПОМЕСТИТЬ ОбособленныеПодразделения";
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапросаАлкоПриложение12ФормаОтчета2012Кв3Раздел2_Результат();
	Результат = Запрос.Выполнить();
	ВыборкаПоПодразделениям = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Запрос.МенеджерВременныхТаблиц.Закрыть();
	
	Раздел_ИмяРабочегоРегистра 	= СтруктураИдГруппИменРегистровСведений["Раздел2"];
		
	Раздел	 							= Контейнер.Раздел2;
	Раздел_ТЗ_Хранилище     			= Контейнер.Раздел2_ТЗ_Хранилище;
	Раздел_СервисРегистров        		= Контейнер.Раздел2_СервисРегистров;
	Раздел_СервисРегистровУдаленные  	= Контейнер.Раздел2_СервисРегистровУдаленные;
	
	// Удаляем все страницы текущего отчета
	Для Каждого СтрокаСервисРегистровГруппы Из Раздел_СервисРегистров Цикл

		НоваяСтрокаСервисРегистровГруппыУдаленные = Раздел_СервисРегистровУдаленные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСервисРегистровГруппыУдаленные, СтрокаСервисРегистровГруппы);
		
		Ресурсы = Новый Структура;
		Ресурсы.Вставить("КоличествоСтрок", НоваяСтрокаСервисРегистровГруппыУдаленные.КоличествоСтрок);		
		// Индекс строки 0 используем для обозначения операций над страницами в целом.
		// В норме индекс строки не меньше 1.	
		РегламентированнаяОтчетностьАЛКО.ДобавитьВРегистрЖурнала(ДокументСсылкаАлкоОтчет, Раздел_ИмяРабочегоРегистра,
					НоваяСтрокаСервисРегистровГруппыУдаленные.ИндексСтраницыРегистра, 0, "УдалениеСтраницы", Ресурсы);
									
	КонецЦикла;
	
	Раздел_СервисРегистров.Очистить();
	
	ИндексСтраницы = -1;
	ИдГруппы = "П0000200003";

	
	СписокБуфферИтоговГруппы = СтруктураИдГруппБуферИтогов[ИдГруппы];
	
	МассивРезультатов = Новый Массив;
	
	Пока ВыборкаПоПодразделениям.Следующий() Цикл
		
		ИндексСтраницы = ИндексСтраницы + 1;
		
		РазделТекущий = Раздел.Добавить();
		Раздел_СервисРегистровТекущий = Раздел_СервисРегистров.Добавить();
		
		МаксИндексСтраницы = МаксИндексСтраницы + 1;
		
		Если РазделТекущий.Данные.Количество() = 0 Тогда
			РазделТекущий.Данные.Добавить(Новый Структура);
		КонецЕсли;
		СтраницаРаздел = РазделТекущий.Данные[0].Значение;

		ПредставлениеПодразделения = СведенияОПодразделении(ВыборкаПоПодразделениям.СсылкаПодразделение, ПараметрыОтчета.Организация.ИНН, СписокОрганизаций);
		Если РазделТекущий.ДополнительныеДанные.Количество() = 0 Тогда
			РазделТекущий.ДополнительныеДанные.Добавить(Новый Структура); 
		КонецЕсли;
		РазделТекущий.ДополнительныеДанные[0].Значение.Вставить("СведенияОбОП", ПредставлениеПодразделения);
		
		Раздел_ДанныеДопСтрокТекущий = Раздел_ТЗ_Хранилище.Скопировать();

		МассивРезультатов.Добавить(Новый СписокЗначений);
		Для Каждого ЭлементСписка Из СписокБуфферИтоговГруппы Цикл
		    // в массиве будут храниться итоги по страницам по данному полю - представлению
			МассивРезультатов[ИндексСтраницы].Добавить(0, ЭлементСписка.Представление);	

		КонецЦикла;
		
		КоличествоТекСтрок = 0;
				
		КоличествоВТекущемБлокеЗаписей = 0; // Номер строки
		Выборка = ВыборкаПоПодразделениям.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			КоличествоВТекущемБлокеЗаписей = КоличествоВТекущемБлокеЗаписей + 1;
		    
			НоваяСтрокаДопСтрок = Раздел_ДанныеДопСтрокТекущий.Добавить();	
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДопСтрок, Выборка);
			
			// Расчета по строке в разделе 2 нет.
			// Суммируем итоги.
			Для Каждого КонтролируемоеПоле Из МассивРезультатов[ИндексСтраницы] Цикл
																				
				ИмяКонтролируемогоПоля = КонтролируемоеПоле.Представление;
				
				НоваяСтрокаДопСтрок[ИмяКонтролируемогоПоля] = ?(НоваяСтрокаДопСтрок[ИмяКонтролируемогоПоля] = Неопределено, 
																0, НоваяСтрокаДопСтрок[ИмяКонтролируемогоПоля]);
				
				КонтролируемоеПоле.Значение = КонтролируемоеПоле.Значение + НоваяСтрокаДопСтрок[ИмяКонтролируемогоПоля];
				
			КонецЦикла;		

			// Каждые 3000 строк пишем в регистр.
			Если КоличествоВТекущемБлокеЗаписей >= КолВБлокеЗаписей Тогда
							    
				КоличествоВТекущемБлокеЗаписей = 0;
				РегламентированнаяОтчетностьАЛКО.ДобавитьТаблицуЗначенийВРегистрСведенийАлко(ДокументСсылкаАлкоОтчет, ИмяФормыОбъекта, Раздел_ИмяРабочегоРегистра, 
											МаксИндексСтраницы, Раздел_ДанныеДопСтрокТекущий, КоличествоТекСтрок);
							
			    Раздел_ДанныеДопСтрокТекущий.Очистить();
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Заносим в регистр сведений, если остались незаписанные строки
		Если Раздел_ДанныеДопСтрокТекущий.Количество() > 0 Тогда
		    			
			РегламентированнаяОтчетностьАЛКО.ДобавитьТаблицуЗначенийВРегистрСведенийАлко(ДокументСсылкаАлкоОтчет, ИмяФормыОбъекта, Раздел_ИмяРабочегоРегистра, 
											МаксИндексСтраницы, Раздел_ДанныеДопСтрокТекущий, КоличествоТекСтрок);
						
		    Раздел_ДанныеДопСтрокТекущий.Очистить();
		
		КонецЕсли; 
		
		// Занесем в регистр Журнал	
		Ресурсы = Новый Структура;
		Ресурсы.Вставить("КоличествоСтрок", КоличествоТекСтрок);	
		Ресурсы.Вставить("МаксИндексСтраницы", МаксИндексСтраницы);
		
		РегламентированнаяОтчетностьАЛКО.ДобавитьВРегистрЖурнала(ДокументСсылкаАлкоОтчет, Раздел_ИмяРабочегоРегистра,	
												МаксИндексСтраницы, 0, "Автозаполнение", Ресурсы);
										
		// занесем в СервисРегистров данные по количеству строк и номеру страницы регистра
		Раздел_СервисРегистровТекущий.КоличествоСтрок = КоличествоТекСтрок;
		Раздел_СервисРегистровТекущий.ИндексСтраницыРегистра = МаксИндексСтраницы;
		Раздел_СервисРегистровТекущий.КолвоСтрокПомНаУдаление = 0;
		
	КонецЦикла;
	СтруктураИтогов.Вставить(ИдГруппы, МассивРезультатов);
	
	Контейнер.МаксИндексСтраницы = МаксИндексСтраницы;
	Контейнер.Вставить("СтруктураИтогов", СтруктураИтогов);
	
	// Помещаем во временное хранилище Контейнер для механизма длительных операций.
	АдресХранилища = Неопределено;
	Если ПараметрыОтчета.Свойство("АдресХранилища", АдресХранилища) Тогда	
		ПоместитьВоВременноеХранилище(Контейнер, АдресХранилища);	
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаАлкоПриложение12ФормаОтчета2012Кв3Раздел1_ИсточникиДанных(ВестиУчетПоПодразделениям)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СведенияОбАлкогольнойПродукции.Ссылка КАК Номенклатура,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко КАК Производитель,
	|	СведенияОбАлкогольнойПродукции.ОбъемДАЛ КАК КоэффПересчетаДал,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.Наименование КАК П000010000301,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.Код КАК П000010000302,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко КАК ПроизводительИмпортер,
	|	ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.НаименованиеПолное КАК СТРОКА(200)) КАК П000010000303,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.ИНН КАК П000010000304,
	|	ВЫБОР
	|		КОГДА СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.КПП
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК П000010000305
	|ПОМЕСТИТЬ АлкогольнаяПродукция
	|ИЗ
	|	Справочник.Номенклатура КАК СведенияОбАлкогольнойПродукции
	|ГДЕ
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.ВидЛицензии = ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийАлкогольнойПродукции.Пиво)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&Субсчета60)
	|			ТОГДА ХозрасчетныйОбороты.КорСубконто1
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Контрагент,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Подразделение, &ПустоеПодразделение) КАК Подразделение,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.ПодразделениеКор, &ПустоеПодразделение) КАК КорПодразделение,
	|	ХозрасчетныйОбороты.Организация КАК Организация,
	|	СУММА(ХозрасчетныйОбороты.КоличествоОборотДт) КАК КоличествоОборотДт,
	|	СУММА(ХозрасчетныйОбороты.КоличествоОборотКт) КАК КоличествоОборотКт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&Субсчета60)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками)
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&Субсчета41)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Товары)
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&Субсчета79)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	КОНЕЦ КАК КорСчет,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|			ТОГДА 1
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|			ТОГДА 2
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА 3
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров
	|			ТОГДА 4
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров
	|			ТОГДА 5
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КлассификацияРегистратора
	|ПОМЕСТИТЬ ОборотыЗаПериод
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Счет В (&Субсчета41),
	|			&ВидСубконтоНоменклатура,
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						АлкогольнаяПродукция.Номенклатура
	|					ИЗ
	|						АлкогольнаяПродукция КАК АлкогольнаяПродукция),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	&УсловиеКорСчетаВиртуальнойТаблицы
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Организация,
	|	ХозрасчетныйОбороты.Субконто1,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&Субсчета60)
	|			ТОГДА ХозрасчетныйОбороты.КорСубконто1
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&Субсчета60)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками)
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&Субсчета41)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Товары)
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&Субсчета79)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|			ТОГДА 1
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|			ТОГДА 2
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА 3
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров
	|			ТОГДА 4
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров
	|			ТОГДА 5
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Подразделение, &ПустоеПодразделение),
	|	ЕСТЬNULL(ХозрасчетныйОбороты.ПодразделениеКор, &ПустоеПодразделение)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Подразделение, &ПустоеПодразделение) КАК Подразделение,
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	СУММА(ХозрасчетныйОстатки.КоличествоОстатокДт) КАК КоличествоНачальныйОстатокДт
	|ПОМЕСТИТЬ НачальныеОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаНач,
	|			Счет В (&Субсчета41),
	|			&ВидСубконтоНоменклатура,
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						АлкогольнаяПродукция.Номенклатура
	|					ИЗ
	|						АлкогольнаяПродукция КАК АлкогольнаяПродукция)) КАК ХозрасчетныйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Субконто1,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Подразделение, &ПустоеПодразделение),
	|	ХозрасчетныйОстатки.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура";
	
	Если ВестиУчетПоПодразделениям Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеКорСчетаВиртуальнойТаблицы", "ИСТИНА");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеКорСчетаВиртуальнойТаблицы", "НЕ ХозрасчетныйОбороты.КорСчет В (&Субсчета41)
		|	ИЛИ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров
		|	ИЛИ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров");
	КонецЕсли;	
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаАлкоПриложение12ФормаОтчета2012Кв3Раздел1_Результат()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Сводный.СсылкаПодразделение КАК СсылкаПодразделение,
	|	Сводный.П000010000301 КАК П000010000301,
	|	Сводный.П000010000302 КАК П000010000302,
	|	Сводный.П000010000303 КАК П000010000303,
	|	Сводный.П000010000304 КАК П000010000304,
	|	Сводный.П000010000305 КАК П000010000305,
	|	МАКСИМУМ(Сводный.ПроизводительИмпортер) КАК ПроизводительИмпортер,
	|	СУММА(Сводный.П000010000306) КАК П000010000306,
	|	СУММА(Сводный.П000010000307) КАК П000010000307,
	|	СУММА(Сводный.П000010000308) КАК П000010000308,
	|	СУММА(Сводный.П000010000311) КАК П000010000311,
	|	СУММА(Сводный.П000010000312) КАК П000010000312,
	|	СУММА(Сводный.П000010000314) КАК П000010000314,
	|	СУММА(Сводный.П000010000315) КАК П000010000315,
	|	СУММА(Сводный.П000010000316) КАК П000010000316,
	|	СУММА(Сводный.П000010000312ПоОрганизации) КАК П000010000312ПоОрганизации,
	|	СУММА(Сводный.П000010000315ПоОрганизации) КАК П000010000315ПоОрганизации
	|ПОМЕСТИТЬ ДанныеОтчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		АлкогольнаяПродукция.П000010000301 КАК П000010000301,
	|		АлкогольнаяПродукция.П000010000302 КАК П000010000302,
	|		АлкогольнаяПродукция.П000010000303 КАК П000010000303,
	|		АлкогольнаяПродукция.П000010000304 КАК П000010000304,
	|		АлкогольнаяПродукция.П000010000305 КАК П000010000305,
	|		АлкогольнаяПродукция.ПроизводительИмпортер КАК ПроизводительИмпортер,
	|		0 КАК П000010000306,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками)
	|					И ОборотыЗаПериод.Контрагент = АлкогольнаяПродукция.Производитель
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК П000010000307,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками)
	|					И ОборотыЗаПериод.Контрагент <> АлкогольнаяПродукция.Производитель
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК П000010000308,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КлассификацияРегистратора = 1
	|				ТОГДА (ОборотыЗаПериод.КоличествоОборотДт - ОборотыЗаПериод.КоличествоОборотКт) * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК П000010000311,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КлассификацияРегистратора > 3
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			КОГДА (ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками)
	|					ИЛИ ОборотыЗаПериод.КлассификацияРегистратора = 1)
	|				ТОГДА 0
	|			КОГДА ОборотыЗаПериод.КоличествоОборотДт <= 0
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			КОГДА ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты)
	|					ИЛИ ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Товары)
	|				ТОГДА 0
	|			ИНАЧЕ ОборотыЗаПериод.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|		КОНЕЦ КАК П000010000312ПоОрганизации,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КлассификацияРегистратора > 3
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			КОГДА ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками)
	|					ИЛИ ОборотыЗаПериод.КлассификацияРегистратора = 1
	|					ИЛИ ОборотыЗаПериод.КоличествоОборотДт <= 0
	|				ТОГДА 0
	|			КОГДА ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты)
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			КОГДА ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Товары)
	|					И ОбособленныеПодразделения.ОбособленноеПодразделение = ОбособленныеКорПодразделения.ОбособленноеПодразделение
	|				ТОГДА 0
	|			ИНАЧЕ ОборотыЗаПериод.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|		КОНЕЦ КАК П000010000312,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КлассификацияРегистратора = 2
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК П000010000314,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КлассификацияРегистратора > 3
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			КОГДА ОборотыЗаПериод.КлассификацияРегистратора <> 0
	|				ТОГДА 0
	|			КОГДА ОборотыЗаПериод.КоличествоОборотКт <= 0
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			КОГДА ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты)
	|					ИЛИ ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Товары)
	|				ТОГДА 0
	|			ИНАЧЕ ОборотыЗаПериод.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|		КОНЕЦ КАК П000010000315ПоОрганизации,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КлассификацияРегистратора > 3
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			КОГДА ОборотыЗаПериод.КлассификацияРегистратора <> 0
	|					ИЛИ ОборотыЗаПериод.КоличествоОборотКт <= 0
	|				ТОГДА 0
	|			КОГДА ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты)
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			КОГДА ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Товары)
	|					И ОбособленныеПодразделения.ОбособленноеПодразделение = ОбособленныеКорПодразделения.ОбособленноеПодразделение
	|				ТОГДА 0
	|			ИНАЧЕ ОборотыЗаПериод.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|		КОНЕЦ КАК П000010000315,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КлассификацияРегистратора = 3
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК П000010000316,
	|		ОбособленныеПодразделения.ОбособленноеПодразделение КАК СсылкаПодразделение
	|	ИЗ
	|		АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|			ЛЕВОЕ СОЕДИНЕНИЕ ОборотыЗаПериод КАК ОборотыЗаПериод
	|				ЛЕВОЕ СОЕДИНЕНИЕ ОбособленныеПодразделения КАК ОбособленныеПодразделения
	|				ПО ОборотыЗаПериод.Подразделение = ОбособленныеПодразделения.Подразделение
	|				ЛЕВОЕ СОЕДИНЕНИЕ ОбособленныеПодразделения КАК ОбособленныеКорПодразделения
	|				ПО ОборотыЗаПериод.КорПодразделение = ОбособленныеКорПодразделения.Подразделение
	|			ПО АлкогольнаяПродукция.Номенклатура = ОборотыЗаПериод.Номенклатура
	|	ГДЕ
	|		ОборотыЗаПериод.Номенклатура ЕСТЬ НЕ NULL 
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АлкогольнаяПродукция.П000010000301,
	|		АлкогольнаяПродукция.П000010000302,
	|		АлкогольнаяПродукция.П000010000303,
	|		АлкогольнаяПродукция.П000010000304,
	|		АлкогольнаяПродукция.П000010000305,
	|		АлкогольнаяПродукция.ПроизводительИмпортер,
	|		НачальныеОстатки.КоличествоНачальныйОстатокДт * АлкогольнаяПродукция.КоэффПересчетаДал,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		ОбособленныеПодразделения.ОбособленноеПодразделение
	|	ИЗ
	|		АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|			ЛЕВОЕ СОЕДИНЕНИЕ НачальныеОстатки КАК НачальныеОстатки
	|				ЛЕВОЕ СОЕДИНЕНИЕ ОбособленныеПодразделения КАК ОбособленныеПодразделения
	|				ПО НачальныеОстатки.Подразделение = ОбособленныеПодразделения.Подразделение
	|			ПО АлкогольнаяПродукция.Номенклатура = НачальныеОстатки.Номенклатура
	|	ГДЕ
	|		НачальныеОстатки.Номенклатура ЕСТЬ НЕ NULL ) КАК Сводный
	|
	|СГРУППИРОВАТЬ ПО
	|	Сводный.СсылкаПодразделение,
	|	Сводный.П000010000301,
	|	Сводный.П000010000302,
	|	Сводный.П000010000303,
	|	Сводный.П000010000304,
	|	Сводный.П000010000305
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОтчета.СсылкаПодразделение КАК СсылкаПодразделение,
	|	ДанныеОтчета.П000010000301 КАК П000010000301,
	|	ДанныеОтчета.П000010000302 КАК П000010000302,
	|	ДанныеОтчета.П000010000303 КАК П000010000303,
	|	ДанныеОтчета.П000010000304 КАК П000010000304,
	|	ДанныеОтчета.П000010000305 КАК П000010000305,
	|	ДанныеОтчета.ПроизводительИмпортер КАК ПроизводительИмпортер,
	|	ДанныеОтчета.П000010000306 КАК П000010000306,
	|	ДанныеОтчета.П000010000307 КАК П000010000307,
	|	ДанныеОтчета.П000010000308 КАК П000010000308,
	|	ДанныеОтчета.П000010000311 КАК П000010000311,
	|	ДанныеОтчета.П000010000312 КАК П000010000312,
	|	ДанныеОтчета.П000010000314 КАК П000010000314,
	|	ДанныеОтчета.П000010000315 КАК П000010000315,
	|	ДанныеОтчета.П000010000316 КАК П000010000316
	|ИЗ
	|	ДанныеОтчета КАК ДанныеОтчета
	|ИТОГИ ПО
	|	СсылкаПодразделение";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаАлкоПриложение12ФормаОтчета2012Кв3Раздел2_ИсточникиДанных()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СведенияОбАлкогольнойПродукции.Ссылка КАК Номенклатура,
	|	СведенияОбАлкогольнойПродукции.ОбъемДАЛ КАК КоэффПересчетаДал,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.Наименование КАК П000020000301,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.Код КАК П000020000302,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко КАК ПроизводительИмпортер,
	|	ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.НаименованиеПолное КАК СТРОКА(200)) КАК П000020000303,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.ИНН КАК П000020000304,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.КПП КАК П000020000305
	|ПОМЕСТИТЬ АлкогольнаяПродукция
	|ИЗ
	|	Справочник.Номенклатура КАК СведенияОбАлкогольнойПродукции
	|ГДЕ
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.ВидЛицензии = ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийАлкогольнойПродукции.Пиво)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК Номенклатура,
	|	ХозрасчетныйОбороты.Регистратор КАК Регистратор,
	|	ХозрасчетныйОбороты.Субконто2 КАК НомерГТД,
	|	ХозрасчетныйОбороты.КоличествоОборотДт КАК КоличествоОборотДт
	|ПОМЕСТИТЬ КоличествоИзГТД
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ГТД),
	|			&ВидыСубконтоНоменклатураГТД,
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						АлкогольнаяПродукция.Номенклатура
	|					ИЗ
	|						АлкогольнаяПродукция КАК АлкогольнаяПродукция),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Номенклатура,
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, ДЕНЬ) КАК Период,
	|	ХозрасчетныйОборотыДтКт.Регистратор КАК Регистратор,
	|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.Контрагенты) КАК Поставщик,
	|	ХозрасчетныйОборотыДтКт.Организация КАК Организация,
	|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.ПодразделениеДт, &ПустоеПодразделение) КАК Подразделение,
	|	ХозрасчетныйОборотыДтКт.КоличествоОборотДт КАК КоличествоОборотДт
	|ПОМЕСТИТЬ ОборотыЗаПериод
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			СчетДт В (&Субсчета41),
	|			&ВидСубконтоНоменклатура,
	|			СчетКт В (&Субсчета60),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты),
	|			Организация В (&СписокОрганизаций)
	|				И СубконтоДт1 В
	|					(ВЫБРАТЬ
	|						АлкогольнаяПродукция.Номенклатура
	|					ИЗ
	|						АлкогольнаяПродукция КАК АлкогольнаяПродукция)) КАК ХозрасчетныйОборотыДтКт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Регистратор";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаАлкоПриложение12ФормаОтчета2012Кв3Раздел2_Результат()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000020000301 КАК П000020000301,
	|	АлкогольнаяПродукция.П000020000302 КАК П000020000302,
	|	АлкогольнаяПродукция.П000020000303 КАК П000020000303,
	|	АлкогольнаяПродукция.П000020000304 КАК П000020000304,
	|	АлкогольнаяПродукция.П000020000305 КАК П000020000305,
	|	ПОДСТРОКА(ОборотыЗаПериод.Поставщик.НаименованиеПолное, 1, 200) КАК П000020000306,
	|	ВЫБОР
	|		КОГДА ОборотыЗаПериод.Поставщик.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ОборотыЗаПериод.Поставщик.ИНН
	|		ИНАЧЕ ОборотыЗаПериод.Поставщик.РегистрационныйНомер
	|	КОНЕЦ КАК П000020000307,
	|	ОборотыЗаПериод.Поставщик.КПП КАК П000020000308,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ДатаВходящегоДокумента, ОборотыЗаПериод.Период) КАК П000020000309,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.НомерВходящегоДокумента, НЕОПРЕДЕЛЕНО) КАК П000020000310,
	|	КоличествоИзГТД.НомерГТД КАК П000020000311,
	|	СУММА(ВЫБОР
	|			КОГДА КоличествоИзГТД.НомерГТД ЕСТЬ NULL
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотДт
	|			ИНАЧЕ КоличествоИзГТД.КоличествоОборотДт
	|		КОНЕЦ * АлкогольнаяПродукция.КоэффПересчетаДал) КАК П000020000312,
	|	ОборотыЗаПериод.Подразделение КАК Подразделение,
	|	ОборотыЗаПериод.Организация КАК Организация,
	|	АлкогольнаяПродукция.ПроизводительИмпортер КАК ПроизводительИмпортер,
	|	ОборотыЗаПериод.Регистратор КАК ДокументПоступления,
	|	ОборотыЗаПериод.Поставщик КАК Поставщик,
	|	ОбособленныеПодразделения.ОбособленноеПодразделение КАК СсылкаПодразделение
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОборотыЗаПериод КАК ОборотыЗаПериод
	|			ЛЕВОЕ СОЕДИНЕНИЕ КоличествоИзГТД КАК КоличествоИзГТД
	|			ПО ОборотыЗаПериод.Номенклатура = КоличествоИзГТД.Номенклатура
	|				И ОборотыЗаПериод.Регистратор = КоличествоИзГТД.Регистратор
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|			ПО ОборотыЗаПериод.Регистратор = ПоступлениеТоваровУслуг.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ ОбособленныеПодразделения КАК ОбособленныеПодразделения
	|			ПО ОборотыЗаПериод.Подразделение = ОбособленныеПодразделения.Подразделение
	|		ПО АлкогольнаяПродукция.Номенклатура = ОборотыЗаПериод.Номенклатура
	|ГДЕ
	|	ОборотыЗаПериод.Номенклатура ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000020000301,
	|	АлкогольнаяПродукция.П000020000302,
	|	АлкогольнаяПродукция.П000020000303,
	|	АлкогольнаяПродукция.П000020000304,
	|	АлкогольнаяПродукция.П000020000305,
	|	ПОДСТРОКА(ОборотыЗаПериод.Поставщик.НаименованиеПолное, 1, 200),
	|	ВЫБОР
	|		КОГДА ОборотыЗаПериод.Поставщик.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ОборотыЗаПериод.Поставщик.ИНН
	|		ИНАЧЕ ОборотыЗаПериод.Поставщик.РегистрационныйНомер
	|	КОНЕЦ,
	|	ОборотыЗаПериод.Поставщик.КПП,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ДатаВходящегоДокумента, ОборотыЗаПериод.Период),
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.НомерВходящегоДокумента, НЕОПРЕДЕЛЕНО),
	|	КоличествоИзГТД.НомерГТД,
	|	ОборотыЗаПериод.Подразделение,
	|	ОборотыЗаПериод.Организация,
	|	АлкогольнаяПродукция.ПроизводительИмпортер,
	|	ОборотыЗаПериод.Регистратор,
	|	ОборотыЗаПериод.Поставщик,
	|	ОбособленныеПодразделения.ОбособленноеПодразделение
	|ИТОГИ ПО
	|	СсылкаПодразделение";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ЗаполнитьРегламентированныйОтчетАлкоПриложение12ФормаОтчета2012Кв3ПоОрганизации(ПараметрыОтчета, Контейнер) Экспорт
	
	СписокОрганизаций = Новый СписокЗначений();
	СписокОрганизаций.Добавить(ПараметрыОтчета.Организация);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Счет60", ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	Запрос.УстановитьПараметр("Счет79", ПланыСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты);
	Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Хозрасчетный.Товары);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = &Счет41
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = &Счет60
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = &Счет79
	|;";
	
	Результат = Запрос.ВыполнитьПакет();
	МассивСчетов41 = Результат[0].Выгрузить().ВыгрузитьКолонку("Счет");
	МассивСчетов60 = Результат[1].Выгрузить().ВыгрузитьКолонку("Счет");
	МассивСчетов79 = Результат[2].Выгрузить().ВыгрузитьКолонку("Счет");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Счет60", 		МассивСчетов60);
	Запрос.УстановитьПараметр("Счет41", 		МассивСчетов41);
	Запрос.УстановитьПараметр("Счет79", 		МассивСчетов79);
	Запрос.УстановитьПараметр("ВидСубконто", 	ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("СписокОрганизаций", 	СписокОрганизаций);
	Запрос.УстановитьПараметр("ДатаНач", 		НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("ДатаКон", 		Новый Граница(КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета), ВидГраницы.Включая));
	ТекстШаблон =
	"ВЫБРАТЬ
	|	АлкоНоменклатура.Ссылка КАК Номенклатура,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко КАК Производитель,
	|	АлкоНоменклатура.ОбъемДАЛ КАК КоэффПересчетаДал,
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.Наименование КАК П000010000101,
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.Код КАК П000010000102,
	|	ВЫРАЗИТЬ(АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.НаименованиеПолное КАК СТРОКА(200)) КАК П000010000103,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.ИНН КАК П000010000104,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.КПП КАК П000010000105
	|ПОМЕСТИТЬ АлкогольнаяПродукция
	|ИЗ
	|	Справочник.Номенклатура КАК АлкоНоменклатура
	|ГДЕ
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.ВидЛицензии = ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийАлкогольнойПродукции.Пиво)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000010000101 КАК П000010000101,
	|	АлкогольнаяПродукция.П000010000102 КАК П000010000102,
	|	АлкогольнаяПродукция.П000010000103 КАК П000010000103,
	|	АлкогольнаяПродукция.П000010000104 КАК П000010000104,
	|	АлкогольнаяПродукция.П000010000105 КАК П000010000105,
	|	0 КАК П000010000106,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет60)
	|					И ХозрасчетныйОбороты.КорСубконто1 = АлкогольнаяПродукция.Производитель
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000107,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет60)
	|					И ХозрасчетныйОбороты.КорСубконто1 <> АлкогольнаяПродукция.Производитель
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000108,
	|	0 КАК П000010000109,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|				ТОГДА (ХозрасчетныйОбороты.КоличествоОборотДт - ХозрасчетныйОбороты.КоличествоОборотКт) * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000111,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ХозрасчетныйОбороты.КорСчет В (&Счет60)
	|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента)
	|					ИЛИ (ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров)
	|					ИЛИ (ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров)
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000112,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000114,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000116,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента)
|					ИЛИ (ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров)
	|				ИЛИ (ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров)
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000115,
	|	0 КАК П000010000118
	|ПОМЕСТИТЬ ТаблицаРаздела1
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет В (&Счет41), &ВидСубконто, Организация В (&СписокОрганизаций), , ) КАК ХозрасчетныйОбороты
	|		ПО АлкогольнаяПродукция.Номенклатура = ХозрасчетныйОбороты.Субконто1
	|ГДЕ
	|	(НЕ ХозрасчетныйОбороты.КорСчет В (&Счет41) 
	|		ИЛИ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров
	|		ИЛИ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров)
	|	И НЕ ХозрасчетныйОбороты.КорСчет ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000010000101 КАК П000010000101,
	|	АлкогольнаяПродукция.П000010000102 КАК П000010000102,
	|	АлкогольнаяПродукция.П000010000103 КАК П000010000103,
	|	АлкогольнаяПродукция.П000010000104 КАК П000010000104,
	|	АлкогольнаяПродукция.П000010000105 КАК П000010000105,
	|	СУММА(ХозрасчетныйОстаткиНач.КоличествоОстатокДт * АлкогольнаяПродукция.КоэффПересчетаДал) КАК П000010000106,
	|	0 КАК П000010000107,
	|	0 КАК П000010000108,
	|	0 КАК П000010000109,
	|	0 КАК П000010000111,
	|	0 КАК П000010000112,
	|	0 КАК П000010000114,
	|	0 КАК П000010000115,
	|	0 КАК П000010000116,
	|	0 КАК П000010000118
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаНач, Счет В (&Счет41), ,Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОстаткиНач
	|		ПО АлкогольнаяПродукция.Номенклатура = ХозрасчетныйОстаткиНач.Субконто1
	|ГДЕ
	|	НЕ ХозрасчетныйОстаткиНач.Счет ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000010000101 КАК П000010000101,
	|	АлкогольнаяПродукция.П000010000102 КАК П000010000102,
	|	АлкогольнаяПродукция.П000010000103 КАК П000010000103,
	|	АлкогольнаяПродукция.П000010000104 КАК П000010000104,
	|	АлкогольнаяПродукция.П000010000105 КАК П000010000105,
	|	0 КАК П000010000106,
	|	0 КАК П000010000107,
	|	0 КАК П000010000108,
	|	0 КАК П000010000109,
	|	0 КАК П000010000111,
	|	0 КАК П000010000112,
	|	0 КАК П000010000114,
	|	0 КАК П000010000115,
	|	0 КАК П000010000116,
	|	СУММА(ХозрасчетныйОстаткиКон.КоличествоОстатокДт * АлкогольнаяПродукция.КоэффПересчетаДал) КАК П000010000118
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаКон, Счет В (&Счет41), ,Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОстаткиКон
	|		ПО АлкогольнаяПродукция.Номенклатура = ХозрасчетныйОстаткиКон.Субконто1
	|ГДЕ
	|	НЕ ХозрасчетныйОстаткиКон.Счет ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРаздела1.П000010000101 КАК П000010000101,
	|	ТаблицаРаздела1.П000010000102 КАК П000010000102,
	|	ТаблицаРаздела1.П000010000103 КАК П000010000103,
	|	ТаблицаРаздела1.П000010000104 КАК П000010000104,
	|	ТаблицаРаздела1.П000010000105 КАК П000010000105,
	|	СУММА(ТаблицаРаздела1.П000010000106) КАК П000010000106,
	|	СУММА(ТаблицаРаздела1.П000010000107) КАК П000010000107,
	|	СУММА(ТаблицаРаздела1.П000010000108) КАК П000010000108,
	|	0 КАК П000010000109,
	|	СУММА(ТаблицаРаздела1.П000010000111) КАК П000010000111,
	|	СУММА(ТаблицаРаздела1.П000010000112) КАК П000010000112,
	|	СУММА(ТаблицаРаздела1.П000010000114) КАК П000010000114,
	|	СУММА(ТаблицаРаздела1.П000010000115) КАК П000010000115,
	|	СУММА(ТаблицаРаздела1.П000010000116) КАК П000010000116,
	|	СУММА(ТаблицаРаздела1.П000010000118) КАК П000010000118
	|ИЗ
	|	ТаблицаРаздела1 КАК ТаблицаРаздела1
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРаздела1.П000010000101,
	|	ТаблицаРаздела1.П000010000102,
	|	ТаблицаРаздела1.П000010000103,
	|	ТаблицаРаздела1.П000010000104,
	|	ТаблицаРаздела1.П000010000105
	|
	|УПОРЯДОЧИТЬ ПО
	|	П000010000101,
	|	П000010000102,
	|	П000010000103,
	|	П000010000104,
	|	П000010000105";
	
	Запрос.Текст = ТекстШаблон;
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Раздел1 = Контейнер.Раздел1;
	СтраницаРаздел1 =  Раздел1[0].Данные[0].Значение;
	
	Пока Раздел1.Количество()>1 Цикл
		Контейнер.Раздел1.Удалить(1);
	КонецЦикла;
	
	Пока Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100001.Количество()>1 Цикл
		Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100001.Удалить(1);
	КонецЦикла;
	
	НС = 1;
	Раздел1Текущий = Раздел1[0];
	
	Для Каждого СтрокаЗапроса Из ТаблицаЗапроса Цикл
		
		Если НС > 1 Тогда 
			Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100001.Добавить();
		КонецЕсли;
		Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100001[НС - 1].П000010000100 = НС;
	 	ЗаполнитьЗначенияСвойств(Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100001[НС - 1], СтрокаЗапроса);
		НС = НС + 1;
		
	КонецЦикла;
	
	
	ПредставлениеПодразделения = СведенияОПодразделении(ПараметрыОтчета.Организация, ПараметрыОтчета.Организация.ИНН);
	СтраницаРаздел1.ОбособленноеПодразделение = ОписаниеПодразделения(ПредставлениеПодразделения);
	
	Если Раздел1[0].ДополнительныеДанные.Количество() = 0 Тогда
		Раздел1[0].ДополнительныеДанные.Добавить(Новый Структура);
	КонецЕсли;
	
	Раздел1[0].ДополнительныеДанные[0].Значение.Вставить("СведенияОбОП", ПредставлениеПодразделения);
	
	Пока Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100003.Количество()>1 Цикл
		Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100003.Удалить(1);
	КонецЦикла;
	
	ТаблицаПодразделения = ТаблицаЗапроса.Скопировать();
	
	Для Каждого Колонка Из ТаблицаПодразделения.Колонки Цикл
		Колонка.Имя = СтрЗаменить(Колонка.Имя, "П0000100001", "П0000100003");
	КонецЦикла;

	НС = 1;
	Для Каждого СтрокаПодразделения Из ТаблицаПодразделения Цикл
		
		Если НС > 1 Тогда 
			Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100003.Добавить();
		КонецЕсли;
		Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100003[НС - 1].П000010000300 = НС;
		ЗаполнитьЗначенияСвойств(Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100003[НС - 1], СтрокаПодразделения);
		НС = НС + 1;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Счет60", 		МассивСчетов60);
	Запрос.УстановитьПараметр("Счет41", 		МассивСчетов41);
	Запрос.УстановитьПараметр("СчетГТД", 		ПланыСчетов.Хозрасчетный.ГТД);
	Запрос.УстановитьПараметр("ВидСубконто", 	ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("ВидКорСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	Запрос.УстановитьПараметр("СписокОрганизаций", 	СписокОрганизаций);
	Запрос.УстановитьПараметр("ДатаНач", 		НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("ДатаКон", 		КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	ТекстШаблон =
	"ВЫБРАТЬ
	|	АлкоНоменклатура.Ссылка КАК Номенклатура,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко КАК Производитель,
	|	АлкоНоменклатура.ОбъемДАЛ КАК КоэффПересчетаДал,
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.Наименование КАК П000010000101,
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.Код КАК П000010000102,
	|	ВЫРАЗИТЬ(АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.НаименованиеПолное КАК СТРОКА(200)) КАК П000010000103,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.ИНН КАК П000010000104,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.КПП КАК П000010000105
	|ПОМЕСТИТЬ АлкогольнаяПродукция
	|ИЗ
	|	Справочник.Номенклатура КАК АлкоНоменклатура
	|ГДЕ
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.ВидЛицензии = ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийАлкогольнойПродукции.Пиво)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|///////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОбАлкогольнойПродукции.П000010000101 КАК П000020000101,
	|	СведенияОбАлкогольнойПродукции.П000010000102 КАК П000020000102,
	|	СведенияОбАлкогольнойПродукции.П000010000103 КАК П000020000103,
	|	СведенияОбАлкогольнойПродукции.П000010000104 КАК П000020000104,
	|	СведенияОбАлкогольнойПродукции.П000010000105 КАК П000020000105,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1.НаименованиеПолное КАК СТРОКА(200)) КАК П000020000106,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).ИНН
	|		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).РегистрационныйНомер, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК П000020000107,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).КПП, НЕОПРЕДЕЛЕНО) КАК П000020000108,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).ДатаВходящегоДокумента, ХозрасчетныйОбороты.Период) КАК П000020000109,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).НомерВходящегоДокумента, НЕОПРЕДЕЛЕНО) КАК П000020000110,
	|	ХозрасчетныйГТД.СубконтоДт2 КАК П000020000111,
	|	СУММА(ВЫБОР 
	|			КОГДА (НЕ ХозрасчетныйГТД.СубконтоДт2 ЕСТЬ NULL) 
	|				ТОГДА ХозрасчетныйГТД.КоличествоОборотДт 
	|			ИНАЧЕ ХозрасчетныйОбороты.КоличествоОборотДт 
	|		КОНЕЦ * СведенияОбАлкогольнойПродукции.КоэффПересчетаДал) КАК П000020000112
	|ИЗ
	|	АлкогольнаяПродукция КАК СведенияОбАлкогольнойПродукции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Регистратор, СчетДт В (&Счет41), &ВидСубконто, СчетКт В (&Счет60), &ВидКорСубконто, Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОбороты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Регистратор, СчетДт = &СчетГТД, , , , Организация В (&СписокОрганизаций)) КАК ХозрасчетныйГТД
	|			ПО ХозрасчетныйОбороты.СубконтоДт1 = ХозрасчетныйГТД.СубконтоДт1
	|				И ХозрасчетныйОбороты.Регистратор = ХозрасчетныйГТД.Регистратор
	|		ПО СведенияОбАлкогольнойПродукции.Номенклатура = ХозрасчетныйОбороты.СубконтоДт1
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОбАлкогольнойПродукции.П000010000101,
	|	СведенияОбАлкогольнойПродукции.П000010000102,
	|	СведенияОбАлкогольнойПродукции.П000010000103,
	|	СведенияОбАлкогольнойПродукции.П000010000104,
	|	СведенияОбАлкогольнойПродукции.П000010000105,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1.НаименованиеПолное КАК СТРОКА(200)),
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).ИНН
	|		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).РегистрационныйНомер, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).КПП, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).ДатаВходящегоДокумента, ХозрасчетныйОбороты.Период),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).НомерВходящегоДокумента, НЕОПРЕДЕЛЕНО),
	|	ХозрасчетныйГТД.СубконтоДт2
	|
	|УПОРЯДОЧИТЬ ПО
	|	П000020000101,
	|	П000020000102,
	|	П000020000103,
	|	П000020000109,
	|	П000020000110,
	|	П000020000106";
	
	Запрос.Текст = ТекстШаблон;
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	Пока Раздел2.Количество()>1 Цикл
		Раздел2.Удалить(1);
	КонецЦикла;
	
	Пока Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200001.Количество()>1 Цикл
		Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200001.Удалить(1);
	КонецЦикла;
	Пока Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200003.Количество()>1 Цикл
		Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200003.Удалить(1);
	КонецЦикла;
	
	НС = 1;
	Раздел2Текущий = Раздел2[0];
	
	Для Каждого СтрокаЗапроса Из ТаблицаЗапроса Цикл
		
		Если НС > 1 Тогда 
			Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200001.Добавить();
		КонецЕсли;
		Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200001[НС - 1].П000020000100 = НС;
	 	ЗаполнитьЗначенияСвойств(Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200001[НС - 1], СтрокаЗапроса);
		НС = НС + 1;
		
	КонецЦикла;
	
	ПредставлениеПодразделения = СведенияОПодразделении(ПараметрыОтчета.Организация, ПараметрыОтчета.Организация.ИНН);
	СтраницаРаздел2.ОбособленноеПодразделение = ОписаниеПодразделения(ПредставлениеПодразделения);
	
	Если Раздел2[0].ДополнительныеДанные.Количество() = 0 Тогда
		Раздел2[0].ДополнительныеДанные.Добавить(Новый Структура);
	КонецЕсли;
	
	Раздел2[0].ДополнительныеДанные[0].Значение.Вставить("СведенияОбОП", ПредставлениеПодразделения);
	
	ТаблицаПодразделения = ТаблицаЗапроса.Скопировать();
	
	Для Каждого Колонка Из ТаблицаПодразделения.Колонки Цикл
		Колонка.Имя = СтрЗаменить(Колонка.Имя, "П0000200001", "П0000200003");
	КонецЦикла;
	
	НС = 1;
	Для Каждого СтрокаПодразделения Из ТаблицаПодразделения Цикл
		
		Если НС > 1 Тогда 
			Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200003.Добавить();
		КонецЕсли;
		Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200003[НС - 1].П000020000300 = НС;
		ЗаполнитьЗначенияСвойств(Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200003[НС - 1], СтрокаПодразделения);
		НС = НС + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРегламентированныйОтчетАлкоПриложение12ФормаОтчета2012Кв3ПоПодразделениям(ПараметрыОтчета, Контейнер) Экспорт
	
	СписокОрганизаций = БухгалтерскийУчетПереопределяемый.ВсяОрганизация(ПараметрыОтчета.Организация);
	
	//Заполнение Раздел 1
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Счет60", ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	Запрос.УстановитьПараметр("Счет41", ПланыСчетов.Хозрасчетный.Товары);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = &Счет41
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = &Счет60";
	
	Результат = Запрос.ВыполнитьПакет();
	МассивСчетов41 = Результат[0].Выгрузить().ВыгрузитьКолонку("Счет");
	МассивСчетов60 = Результат[1].Выгрузить().ВыгрузитьКолонку("Счет");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Счет60", 		МассивСчетов60);
	Запрос.УстановитьПараметр("Счет41", 		МассивСчетов41);
	Запрос.УстановитьПараметр("Счет79", ПланыСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты);
	Запрос.УстановитьПараметр("ВидСубконто", 	ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("СписокОрганизаций", 	СписокОрганизаций);
	Запрос.УстановитьПараметр("ДатаНач", 		НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("ДатаКон", 		Новый Граница(КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета), ВидГраницы.Включая));
	ТекстШаблон =
	"ВЫБРАТЬ
	|	АлкоНоменклатура.Ссылка КАК Номенклатура,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко КАК Производитель,
	|	АлкоНоменклатура.ОбъемДАЛ КАК КоэффПересчетаДал,
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.Наименование КАК П000010000101,
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.Код КАК П000010000102,
	|	ВЫРАЗИТЬ(АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.НаименованиеПолное КАК СТРОКА(200)) КАК П000010000103,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.ИНН КАК П000010000104,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.КПП КАК П000010000105
	|ПОМЕСТИТЬ АлкогольнаяПродукция
	|ИЗ
	|	Справочник.Номенклатура КАК АлкоНоменклатура
	|ГДЕ
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.ВидЛицензии = ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийАлкогольнойПродукции.Пиво)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000010000101 КАК П000010000101,
	|	АлкогольнаяПродукция.П000010000102 КАК П000010000102,
	|	АлкогольнаяПродукция.П000010000103 КАК П000010000103,
	|	АлкогольнаяПродукция.П000010000104 КАК П000010000104,
	|	АлкогольнаяПродукция.П000010000105 КАК П000010000105,
	|	ХозрасчетныйОбороты.Подразделение КАК Подразделение,
	|	ХозрасчетныйОбороты.ПодразделениеКор КАК КорПодразделение,
	|	ХозрасчетныйОбороты.Организация КАК Организация,
	|	ХозрасчетныйОбороты.КорСчет КАК КорСчет,
	|	0 КАК П000010000106,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет60)
	|					И ХозрасчетныйОбороты.КорСубконто1 = АлкогольнаяПродукция.Производитель
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000107,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.КорСчет В (&Счет60)
	|					И ХозрасчетныйОбороты.КорСубконто1 <> АлкогольнаяПродукция.Производитель
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000108,
	|	0 КАК П000010000109,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|				ТОГДА (ХозрасчетныйОбороты.КоличествоОборотДт - ХозрасчетныйОбороты.КоличествоОборотКт) * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000111,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ХозрасчетныйОбороты.КорСчет В (&Счет60)
	|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|					И НЕ ХозрасчетныйОбороты.КорСчет В (&Счет41)
	|					И НЕ ХозрасчетныйОбороты.КорСчет В (&Счет79))
	|					ИЛИ (ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров)
	|					ИЛИ (ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров)
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000112,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000114,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000116,
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|					И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|					И НЕ ХозрасчетныйОбороты.КорСчет В (&Счет41)
	|					И НЕ ХозрасчетныйОбороты.КорСчет В (&Счет79))
	|					ИЛИ (ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров)
	|					ИЛИ (ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров)
	|				ТОГДА ХозрасчетныйОбороты.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П000010000115,
	|	0 КАК П000010000118
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет В (&Счет41), &ВидСубконто, Организация В (&СписокОрганизаций), , ) КАК ХозрасчетныйОбороты
	|		ПО АлкогольнаяПродукция.Номенклатура = ХозрасчетныйОбороты.Субконто1
	|ГДЕ
	|	(НЕ ХозрасчетныйОбороты.КорСчет В (&Счет41)
	|			ИЛИ ХозрасчетныйОбороты.КорСчет ЕСТЬ NULL 
	|			ИЛИ ХозрасчетныйОбороты.Подразделение <> ХозрасчетныйОбороты.ПодразделениеКор
	|			ИЛИ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров
	|			ИЛИ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров)
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105,
	|	ХозрасчетныйОбороты.Подразделение,
	|	ХозрасчетныйОбороты.ПодразделениеКор,
	|	ХозрасчетныйОбороты.Организация,
	|	ХозрасчетныйОбороты.КорСчет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105,
	|	ХозрасчетныйОстаткиНач.Подразделение,
	|	NULL,
	|	ХозрасчетныйОстаткиНач.Организация,
	|	NULL,
	|	СУММА(ХозрасчетныйОстаткиНач.КоличествоОстатокДт * АлкогольнаяПродукция.КоэффПересчетаДал),
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаНач, Счет В (&Счет41), , Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОстаткиНач
	|		ПО АлкогольнаяПродукция.Номенклатура = ХозрасчетныйОстаткиНач.Субконто1
	|ГДЕ
	|	НЕ ХозрасчетныйОстаткиНач.Счет ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105,
	|	ХозрасчетныйОстаткиНач.Подразделение,
	|	ХозрасчетныйОстаткиНач.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105,
	|	ХозрасчетныйОстаткиКон.Подразделение,
	|	NULL,
	|	ХозрасчетныйОстаткиКон.Организация,
	|	NULL,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	СУММА(ХозрасчетныйОстаткиКон.КоличествоОстатокДт * АлкогольнаяПродукция.КоэффПересчетаДал)
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаКон, Счет В (&Счет41), , Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОстаткиКон
	|		ПО АлкогольнаяПродукция.Номенклатура = ХозрасчетныйОстаткиКон.Субконто1
	|ГДЕ
	|	НЕ ХозрасчетныйОстаткиКон.Счет ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000010000101,
	|	АлкогольнаяПродукция.П000010000102,
	|	АлкогольнаяПродукция.П000010000103,
	|	АлкогольнаяПродукция.П000010000104,
	|	АлкогольнаяПродукция.П000010000105,
	|	ХозрасчетныйОстаткиКон.Подразделение,
	|	ХозрасчетныйОстаткиКон.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	П000010000101,
	|	П000010000102,
	|	П000010000103,
	|	П000010000104,
	|	П000010000105";
	
	Запрос.Текст = ТекстШаблон;
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	ТаблицаЗапроса.Колонки.Добавить("СсылкаПодразделение");
	ТаблицаЗапроса.Колонки.Добавить("П000010000112ПоПодразделениям", Новый ОписаниеТипов("Число"));
	ТаблицаЗапроса.Колонки.Добавить("П000010000115ПоПодразделениям", Новый ОписаниеТипов("Число"));
	Для Каждого СтрокаЗапроса Из ТаблицаЗапроса Цикл
		
		Если ЗначениеЗаполнено(СтрокаЗапроса.Подразделение) Тогда
			СтрокаЗапроса.СсылкаПодразделение = ПолучитьОбособленноеПодразделение(СтрокаЗапроса.Подразделение);
		Иначе
			СтрокаЗапроса.СсылкаПодразделение = ?(ЗначениеЗаполнено(СтрокаЗапроса.Организация), СтрокаЗапроса.Организация, ПараметрыОтчета.Организация);
		КонецЕсли;
		
		Если СтрокаЗапроса.П000010000112 > 0  Тогда
			СтрокаЗапроса.П000010000112ПоПодразделениям = СтрокаЗапроса.П000010000112;
		КонецЕсли;
		
		Если СтрокаЗапроса.П000010000115 > 0 Тогда 
			СтрокаЗапроса.П000010000115ПоПодразделениям = СтрокаЗапроса.П000010000115;
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаПоОрганизации = ТаблицаЗапроса.Скопировать();
	ТаблицаПоОрганизации.Свернуть("П000010000101, П000010000102, П000010000103, П000010000104, П000010000105",
								"П000010000106, П000010000107, П000010000108, П000010000111, П000010000112, П000010000114, П000010000115, П000010000116, П000010000118");
	ТаблицаПоОрганизации.Сортировать("П000010000101, П000010000102, П000010000103, П000010000104, П000010000105");
	
	ТаблицаЗапроса.Свернуть("П000010000101, П000010000102, П000010000103, П000010000104, П000010000105, СсылкаПодразделение",
							"П000010000106, П000010000107, П000010000108, П000010000111, П000010000112ПоПодразделениям, П000010000114, П000010000115ПоПодразделениям, П000010000116, П000010000118");
	ТаблицаЗапроса.Сортировать("СсылкаПодразделение, П000010000101, П000010000102, П000010000103, П000010000104, П000010000105");
	
	Для Каждого Колонка Из ТаблицаЗапроса.Колонки Цикл
		Колонка.Имя = СтрЗаменить(Колонка.Имя, "П0000100001", "П0000100003");
		Колонка.Имя = СтрЗаменить(Колонка.Имя, "ПоПодразделениям", "");
	КонецЦикла;
	
	ДеревоПоПодразделениям = ТаблицуЗначенийВДеревоСГруппировкой(ТаблицаЗапроса, "СсылкаПодразделение");
	
	Раздел1 = Контейнер.Раздел1;
	СтраницаРаздел1 =  Раздел1[0].Данные[0].Значение;
	
	СтраницаРаздел1.ОбособленноеПодразделение = "";
	
	Пока Раздел1.Количество()>1 Цикл
		Контейнер.Раздел1.Удалить(Контейнер.Раздел1.Индекс(Контейнер.Раздел1[1]));
	КонецЦикла;
	
	Пока Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100001.Количество()>0 Цикл
		Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100001.Удалить(
		Контейнер.Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100001.Индекс(
		Контейнер.Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100001[0]));
	КонецЦикла;
	
	Пока Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100003.Количество()>0 Цикл
		Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100003.Удалить(
		Контейнер.Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100003.Индекс(
		Контейнер.Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100003[0]));
	КонецЦикла;
	
	Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100001.Добавить();
	Раздел1[0].ДанныеДопСтрок[0].Значение.П0000100003.Добавить();
	
	НС = 1;
	Раздел1Текущий = Раздел1[0];
	
	Для Каждого СтрокаЗапроса Из ТаблицаПоОрганизации Цикл
		
		Если НС > 1 Тогда 
			Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100001.Добавить();
		КонецЕсли;
		Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100001[НС - 1].П000010000100 = НС;
	 	ЗаполнитьЗначенияСвойств(Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100001[НС - 1], СтрокаЗапроса);
		НС = НС + 1;
		
	КонецЦикла;
	
	НомерПодразделения = 0;
	
	Для Каждого Подразделение Из ДеревоПоПодразделениям.Строки Цикл
		
		НомерТекущейСтраницы = Раздел1.Количество();
		
		Если НомерПодразделения > 0 Тогда	
			
			Раздел1.Добавить().Данные = Новый СписокЗначений();
					
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел1[0].Данные[0].Значение Цикл
				Если Неопределено = Показатель.Значение Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел1[НомерТекущейСтраницы].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел1Текущий = Раздел1[НомерТекущейСтраницы];
			СтраницаРаздел1 =  Раздел1Текущий.Данные[0].Значение;

			Контейнер.Раздел1_ДанныеДопСтрок1.Очистить();
			Контейнер.Раздел1_ХранилищеДанныхДопСтрок1.Добавить();
			
			Контейнер.Раздел1_ДанныеДопСтрок2.Очистить();
			Контейнер.Раздел1_ХранилищеДанныхДопСтрок2.Добавить();
			
			ИндексПоследнего1 = НомерПодразделения; 
			ИндексПоследнего2 = НомерПодразделения; 
			
			СписокДопСтрокРаздел1  = Новый Структура();
			СписокДопСтрокРаздел1.Вставить("П0000100001", Контейнер.Раздел1_ХранилищеДанныхДопСтрок1[ИндексПоследнего1].Таблица);
			СписокДопСтрокРаздел1.Вставить("П0000100003", Контейнер.Раздел1_ХранилищеДанныхДопСтрок2[ИндексПоследнего2].Таблица);
		
			Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок = Новый СписокЗначений();
			Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок.Вставить(0, СписокДопСтрокРаздел1, "ДанныеФормыКоллекцияТаблицаДопСтрокРаздела");
			
			Пока Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100001.Количество()>0 Цикл
				Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100001.Удалить(
				Контейнер.Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100001.Индекс(
				Контейнер.Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100001[0]));
			КонецЦикла;
			
			Пока Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100003.Количество()>0 Цикл
				Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100003.Удалить(
				Контейнер.Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100003.Индекс(
				Контейнер.Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100003[0]));
			КонецЦикла;
			
			Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100001.Добавить();
			Раздел1[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000100003.Добавить();
						
		КонецЕсли;
		
		Раздел1 = Контейнер.Раздел1;
		СтраницаРаздел1 =  Раздел1[НомерПодразделения].Данные[0].Значение;
						
		Пока Раздел1[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000100003.Количество()>1 Цикл
			Раздел1[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000100003.Удалить(
			Контейнер.Раздел1[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000100003.Индекс(
			Контейнер.Раздел1[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000100003[1]));
		КонецЦикла;
		
		ПредставлениеПодразделения = СведенияОПодразделении(Подразделение.СсылкаПодразделение, ПараметрыОтчета.Организация.ИНН, СписокОрганизаций);
		СтраницаРаздел1.ОбособленноеПодразделение = ОписаниеПодразделения(ПредставлениеПодразделения);
		
		Если Раздел1[НомерПодразделения].ДополнительныеДанные.Количество() = 0 Тогда
			Раздел1[НомерПодразделения].ДополнительныеДанные.Добавить(Новый Структура);
		КонецЕсли;
		
		Раздел1[НомерПодразделения].ДополнительныеДанные[0].Значение.Вставить("СведенияОбОП", ПредставлениеПодразделения);
		
		Пока Раздел1[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000100003.Количество()>1 Цикл
			Раздел1[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000100003.Удалить(1);
		КонецЦикла;
		
		НС = 1;
		Раздел1Текущий = Раздел1[НомерПодразделения];
		
		Для Каждого СтрокаПодразделения Из Подразделение.Строки Цикл
			
			Если НС > 1 Тогда 
				Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100003.Добавить();
			КонецЕсли;
			Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100003[НС - 1].П000010000300 = НС;
			ЗаполнитьЗначенияСвойств(Раздел1Текущий.ДанныеДопСтрок[0].Значение.П0000100003[НС - 1], СтрокаПодразделения);
			НС = НС + 1;
			
		КонецЦикла;
		
		НомерПодразделения = НомерПодразделения + 1;
		
	КонецЦикла;
	
	//Заполнение Раздел 2
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Счет60", 		МассивСчетов60);
	Запрос.УстановитьПараметр("Счет41", 		МассивСчетов41);
	Запрос.УстановитьПараметр("СчетГТД", 		ПланыСчетов.Хозрасчетный.ГТД);
	Запрос.УстановитьПараметр("ВидСубконто", 	ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("ВидКорСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	Запрос.УстановитьПараметр("СписокОрганизаций", 	СписокОрганизаций);
	Запрос.УстановитьПараметр("ДатаНач", 		НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("ДатаКон", 		КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	ТекстШаблон =
	"ВЫБРАТЬ
	|	АлкоНоменклатура.Ссылка КАК Номенклатура,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко КАК Производитель,
	|	АлкоНоменклатура.ОбъемДАЛ КАК КоэффПересчетаДал,
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.Наименование КАК П000010000101,
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.Код КАК П000010000102,
	|	ВЫРАЗИТЬ(АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.НаименованиеПолное КАК СТРОКА(200)) КАК П000010000103,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.ИНН КАК П000010000104,
	|	АлкоНоменклатура.ПроизводительИмпортерДляДекларацийАлко.КПП КАК П000010000105
	|ПОМЕСТИТЬ АлкогольнаяПродукция
	|ИЗ
	|	Справочник.Номенклатура КАК АлкоНоменклатура
	|ГДЕ
	|	АлкоНоменклатура.ВидАлкогольнойПродукции.ВидЛицензии = ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийАлкогольнойПродукции.Пиво)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОбАлкогольнойПродукции.П000010000101 КАК П000020000101,
	|	СведенияОбАлкогольнойПродукции.П000010000102 КАК П000020000102,
	|	СведенияОбАлкогольнойПродукции.П000010000103 КАК П000020000103,
	|	СведенияОбАлкогольнойПродукции.П000010000104 КАК П000020000104,
	|	СведенияОбАлкогольнойПродукции.П000010000105 КАК П000020000105,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1.НаименованиеПолное КАК СТРОКА(200)) КАК П000020000106,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).ИНН
	|		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).РегистрационныйНомер, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК П000020000107,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).КПП, НЕОПРЕДЕЛЕНО) КАК П000020000108,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).ДатаВходящегоДокумента, ХозрасчетныйОбороты.Период) КАК П000020000109,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).НомерВходящегоДокумента, НЕОПРЕДЕЛЕНО) КАК П000020000110,
	|	ХозрасчетныйГТД.СубконтоДт2 КАК П000020000111,
	|	ХозрасчетныйОбороты.ПодразделениеДт КАК Подразделение,
	|	ХозрасчетныйОбороты.Организация КАК Организация,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ХозрасчетныйГТД.СубконтоДт2 ЕСТЬ NULL 
	|				ТОГДА ХозрасчетныйГТД.КоличествоОборотДт
	|			ИНАЧЕ ХозрасчетныйОбороты.КоличествоОборотДт
	|		КОНЕЦ * СведенияОбАлкогольнойПродукции.КоэффПересчетаДал) КАК П000020000112
	|ИЗ
	|	АлкогольнаяПродукция КАК СведенияОбАлкогольнойПродукции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Регистратор, СчетДт В (&Счет41), &ВидСубконто, СчетКт В (&Счет60), &ВидКорСубконто, Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОбороты
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаНач, &ДатаКон, Регистратор, СчетДт = &СчетГТД, , , , Организация В (&СписокОрганизаций)) КАК ХозрасчетныйГТД
	|			ПО ХозрасчетныйОбороты.СубконтоДт1 = ХозрасчетныйГТД.СубконтоДт1
	|				И ХозрасчетныйОбороты.Регистратор = ХозрасчетныйГТД.Регистратор
	|		ПО СведенияОбАлкогольнойПродукции.Номенклатура = ХозрасчетныйОбороты.СубконтоДт1
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОбАлкогольнойПродукции.П000010000101,
	|	СведенияОбАлкогольнойПродукции.П000010000102,
	|	СведенияОбАлкогольнойПродукции.П000010000103,
	|	СведенияОбАлкогольнойПродукции.П000010000104,
	|	СведенияОбАлкогольнойПродукции.П000010000105,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1.НаименованиеПолное КАК СТРОКА(200)),
	|	ХозрасчетныйГТД.СубконтоДт2,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).НомерВходящегоДокумента, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).ДатаВходящегоДокумента, ХозрасчетныйОбороты.Период),
	|	ХозрасчетныйОбороты.ПодразделениеДт,
	|	ХозрасчетныйОбороты.Организация,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).СтранаРегистрации, ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).ИНН
	|		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).РегистрационныйНомер, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ХозрасчетныйОбороты.СубконтоКт1 КАК Справочник.Контрагенты).КПП, НЕОПРЕДЕЛЕНО)
	|
	|УПОРЯДОЧИТЬ ПО
	|	П000020000101,
	|	П000020000102,
	|	П000020000103,
	|	П000020000109,
	|	П000020000110,
	|	П000020000106";
	
	Запрос.Текст = ТекстШаблон;
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	ТаблицаЗапроса.Колонки.Добавить("СсылкаПодразделение");
	Для Каждого СтрокаЗапроса Из ТаблицаЗапроса Цикл
		Если ЗначениеЗаполнено(СтрокаЗапроса.Подразделение) Тогда
			СтрокаЗапроса.СсылкаПодразделение = ПолучитьОбособленноеПодразделение(СтрокаЗапроса.Подразделение);
		Иначе
			СтрокаЗапроса.СсылкаПодразделение = ?(ЗначениеЗаполнено(СтрокаЗапроса.Организация), СтрокаЗапроса.Организация, ПараметрыОтчета.Организация);
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаЗапроса.Сортировать("СсылкаПодразделение, П000020000101, П000020000102, П000020000103, П000020000109, П000020000110, П000020000106");
	
	Раздел2 = Контейнер.Раздел2;
	СтраницаРаздел2 =  Раздел2[0].Данные[0].Значение;
	
	СтраницаРаздел2.ОбособленноеПодразделение = "";
	
	Пока Раздел2.Количество()>1 Цикл
		Контейнер.Раздел2.Удалить(Контейнер.Раздел2.Индекс(Контейнер.Раздел2[1]));
	КонецЦикла;
	
	Пока Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200001.Количество()>0 Цикл
		Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200001.Удалить(
		Контейнер.Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200001.Индекс(
		Контейнер.Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200001[0]));
	КонецЦикла;
	
	Пока Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200003.Количество()>0 Цикл
		Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200003.Удалить(
		Контейнер.Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200003.Индекс(
		Контейнер.Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200003[0]));
	КонецЦикла;
	
	Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200001.Добавить();
	Раздел2[0].ДанныеДопСтрок[0].Значение.П0000200003.Добавить();
		
	НС = 1;
	Раздел2Текущий = Раздел2[0];

	Для Каждого СтрокаЗапроса Из ТаблицаЗапроса Цикл
		
		Если НС > 1 Тогда 
			Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200001.Добавить();
		КонецЕсли;
		Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200001[НС - 1].П000020000100 = НС;
	 	ЗаполнитьЗначенияСвойств(Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200001[НС - 1], СтрокаЗапроса);
		НС = НС + 1;
		
	КонецЦикла;
	
	//Заполнение информации о подразделениях в Раздел2
	
	Для Каждого Колонка Из ТаблицаЗапроса.Колонки Цикл
		Колонка.Имя = СтрЗаменить(Колонка.Имя, "П0000200001", "П0000200003");
	КонецЦикла;
	
	ДеревоПоПодразделениям = ТаблицуЗначенийВДеревоСГруппировкой(ТаблицаЗапроса, "СсылкаПодразделение");
	
	НомерПодразделения = 0;
	
	Для Каждого Подразделение Из ДеревоПоПодразделениям.Строки Цикл 
		
		НомерТекущейСтраницы = Раздел2.Количество();
		
		Если НомерПодразделения > 0 Тогда	
			
			Раздел2.Добавить().Данные = Новый СписокЗначений();
					
			СтруктураНовойТаблицыМногостраничныхРазделов = Новый Структура();
			Для Каждого Показатель Из Раздел2[0].Данные[0].Значение Цикл
				Если Неопределено = Показатель.Значение Тогда 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ);
				Иначе 
					СтруктураНовойТаблицыМногостраничныхРазделов.Вставить(Показатель.Ключ, ОбщегоНазначенияБПКлиентСервер.ПустоеЗначениеТипа(ТипЗнч(Показатель.Значение)));
				КонецЕсли;
			КонецЦикла;
			
			Раздел2[НомерТекущейСтраницы].Данные.Добавить(СтруктураНовойТаблицыМногостраничныхРазделов); 
			Раздел2Текущий = Раздел2[НомерТекущейСтраницы];
			СтраницаРаздел2 =  Раздел2Текущий.Данные[0].Значение;

			Контейнер.Раздел2_ДанныеДопСтрок1.Очистить();
			Контейнер.Раздел2_ХранилищеДанныхДопСтрок1.Добавить();
			
			Контейнер.Раздел2_ДанныеДопСтрок2.Очистить();
			Контейнер.Раздел2_ХранилищеДанныхДопСтрок2.Добавить();
			
			ИндексПоследнего1 = НомерПодразделения; 
			ИндексПоследнего2 = НомерПодразделения; 
			
			СписокДопСтрокРаздел2  = Новый Структура();
			СписокДопСтрокРаздел2.Вставить("П0000200001", Контейнер.Раздел2_ХранилищеДанныхДопСтрок1[ИндексПоследнего1].Таблица);
			СписокДопСтрокРаздел2.Вставить("П0000200003", Контейнер.Раздел2_ХранилищеДанныхДопСтрок2[ИндексПоследнего2].Таблица);
		
			Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок = Новый СписокЗначений();
			Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок.Вставить(0, СписокДопСтрокРаздел2, "ДанныеФормыКоллекцияТаблицаДопСтрокРаздела");
						 			
			Пока Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200001.Количество()>0 Цикл
				Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200001.Удалить(
				Контейнер.Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200001.Индекс(
				Контейнер.Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200001[0]));
			КонецЦикла;
			
			Пока Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200003.Количество()>0 Цикл
				Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200003.Удалить(
				Контейнер.Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200003.Индекс(
				Контейнер.Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200003[0]));
			КонецЦикла;
			
			Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200001.Добавить();
			Раздел2[НомерТекущейСтраницы].ДанныеДопСтрок[0].Значение.П0000200003.Добавить();
			
		КонецЕсли;
		
		Раздел2 = Контейнер.Раздел2;
		СтраницаРаздел2 =  Раздел2[НомерПодразделения].Данные[0].Значение;
						
		Пока Раздел2[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000200003.Количество()>1 Цикл
			Раздел2[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000200003.Удалить(
			Контейнер.Раздел2[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000200003.Индекс(
			Контейнер.Раздел2[НомерПодразделения].ДанныеДопСтрок[0].Значение.П0000200003[1]));
		КонецЦикла;
		
		Раздел2Текущий = Раздел2[НомерПодразделения];
		
		Если Подразделение.Строки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
	
		ПредставлениеПодразделения = СведенияОПодразделении(Подразделение.СсылкаПодразделение, ПараметрыОтчета.Организация.ИНН, СписокОрганизаций);
		СтраницаРаздел2.ОбособленноеПодразделение = ОписаниеПодразделения(ПредставлениеПодразделения);
		
		Если Раздел2[НомерПодразделения].ДополнительныеДанные.Количество() = 0 Тогда
			Раздел2[НомерПодразделения].ДополнительныеДанные.Добавить(Новый Структура);
		КонецЕсли;
		
		Раздел2[НомерПодразделения].ДополнительныеДанные[0].Значение.Вставить("СведенияОбОП", ПредставлениеПодразделения);
		
		НС = 1;
		Для Каждого СтрокаПодразделения Из Подразделение.Строки Цикл
			
			Если НС > 1 Тогда 
				Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200003.Добавить();
			КонецЕсли;
			Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200003[НС - 1].П000020000300 = НС;
			ЗаполнитьЗначенияСвойств(Раздел2Текущий.ДанныеДопСтрок[0].Значение.П0000200003[НС - 1], СтрокаПодразделения);
			НС = НС + 1;
			
		КонецЦикла;
		
		НомерПодразделения = НомерПодразделения + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаРегламентированныйОтчетАлкоПриложение11ФормаОтчета2014Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000101", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000102", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000104", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000105", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000106", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000107", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000108", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000109", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000111", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000112", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000115", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000116", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000117", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000301", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000302", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000303", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000304", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000305", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000306", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000307", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000308", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000309", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000311", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000312", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000313", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000315", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000316", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000317", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010000318", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000101", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000102", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000104", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000105", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000106", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000107", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000108", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000191", Истина, Ложь);	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000192", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000110", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000111", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000112", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000113", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000114", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000115", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000116", Истина, Ложь);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000301", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000302", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000303", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000304", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000305", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000306", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000307", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000308", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000391", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000392", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000310", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000311", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000312", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000313", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000314", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000315", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020000316", Истина, Ложь);
	
КонецПроцедуры

Функция ТекстЗапросаАлкоПриложение11ФормаОтчета2014Кв1Раздел1_ИсточникиДанных(ВестиУчетПоПодразделениям)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СведенияОбАлкогольнойПродукции.Ссылка КАК Номенклатура,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко КАК Производитель,
	|	СведенияОбАлкогольнойПродукции.ОбъемДАЛ КАК КоэффПересчетаДал,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.Наименование КАК П000010000301,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.Код КАК П000010000302,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко КАК ПроизводительИмпортер,
	|	ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.НаименованиеПолное КАК СТРОКА(200)) КАК П000010000303,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.ИНН КАК П000010000304,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.КПП КАК П000010000305
	|ПОМЕСТИТЬ АлкогольнаяПродукция
	|ИЗ
	|	Справочник.Номенклатура КАК СведенияОбАлкогольнойПродукции
	|ГДЕ
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.ВидЛицензии <> ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийАлкогольнойПродукции.Пиво)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&Субсчета60)
	|			ТОГДА ХозрасчетныйОбороты.КорСубконто1
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Контрагент,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Подразделение, &ПустоеПодразделение) КАК Подразделение,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.ПодразделениеКор, &ПустоеПодразделение) КАК КорПодразделение,
	|	ХозрасчетныйОбороты.Организация КАК Организация,
	|	СУММА(ХозрасчетныйОбороты.КоличествоОборотДт) КАК КоличествоОборотДт,
	|	СУММА(ХозрасчетныйОбороты.КоличествоОборотКт) КАК КоличествоОборотКт,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&Субсчета60)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками)
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&Субсчета41)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Товары)
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&Субсчета79)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	КОНЕЦ КАК КорСчет,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|			ТОГДА 1
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|			ТОГДА 2
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА 3
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров
	|			ТОГДА 4
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров
	|			ТОГДА 5
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КлассификацияРегистратора
	|ПОМЕСТИТЬ ОборотыЗаПериод
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Счет В (&Субсчета41),
	|			&ВидСубконтоНоменклатура,
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						АлкогольнаяПродукция.Номенклатура
	|					ИЗ
	|						АлкогольнаяПродукция КАК АлкогольнаяПродукция),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	&УсловиеКорСчетаГДЕ
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Организация,
	|	ХозрасчетныйОбороты.Субконто1,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&Субсчета60)
	|			ТОГДА ХозрасчетныйОбороты.КорСубконто1
	|		ИНАЧЕ NULL
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&Субсчета60)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками)
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&Субсчета41)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Товары)
	|		КОГДА ХозрасчетныйОбороты.КорСчет В (&Субсчета79)
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|			ТОГДА 1
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|			ТОГДА 2
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА 3
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров
	|			ТОГДА 4
	|		КОГДА ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров
	|			ТОГДА 5
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ЕСТЬNULL(ХозрасчетныйОбороты.Подразделение, &ПустоеПодразделение),
	|	ЕСТЬNULL(ХозрасчетныйОбороты.ПодразделениеКор, &ПустоеПодразделение)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Подразделение, &ПустоеПодразделение) КАК Подразделение,
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	СУММА(ХозрасчетныйОстатки.КоличествоОстатокДт) КАК КоличествоНачальныйОстатокДт
	|ПОМЕСТИТЬ НачальныеОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаНач,
	|			Счет В (&Субсчета41),
	|			&ВидСубконтоНоменклатура,
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						АлкогольнаяПродукция.Номенклатура
	|					ИЗ
	|						АлкогольнаяПродукция КАК АлкогольнаяПродукция)) КАК ХозрасчетныйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.Субконто1,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Подразделение, &ПустоеПодразделение),
	|	ХозрасчетныйОстатки.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура";

	Если ВестиУчетПоПодразделениям Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеКорСчетаГДЕ",
			"(НЕ ХозрасчетныйОбороты.КорСчет В (&Субсчета41)
	|			ИЛИ ЕСТЬNULL(ХозрасчетныйОбороты.Подразделение, &ПустоеПодразделение) <> ЕСТЬNULL(ХозрасчетныйОбороты.ПодразделениеКор, &ПустоеПодразделение))
	|			ИЛИ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПересортицаТоваров
	|			ИЛИ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПорчаТоваров");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеКорСчетаГДЕ", "ИСТИНА");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаАлкоПриложение11ФормаОтчета2014Кв1Раздел1_Результат()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Сводный.СсылкаПодразделение КАК СсылкаПодразделение,
	|	Сводный.П000010000301 КАК П000010000301,
	|	Сводный.П000010000302 КАК П000010000302,
	|	Сводный.П000010000303 КАК П000010000303,
	|	Сводный.П000010000304 КАК П000010000304,
	|	Сводный.П000010000305 КАК П000010000305,
	|	МАКСИМУМ(Сводный.ПроизводительИмпортер) КАК ПроизводительИмпортер,
	|	СУММА(Сводный.П000010000306) КАК П000010000306,
	|	СУММА(Сводный.П000010000307) КАК П000010000307,
	|	СУММА(Сводный.П000010000308) КАК П000010000308,
	|	СУММА(Сводный.П000010000311) КАК П000010000311,
	|	СУММА(Сводный.П000010000312) КАК П000010000312,
	|	СУММА(Сводный.П000010000313) КАК П000010000313,
	|	СУММА(Сводный.П000010000315) КАК П000010000315,
	|	СУММА(Сводный.П000010000316) КАК П000010000316,
	|	СУММА(Сводный.П000010000317) КАК П000010000317,
	|	СУММА(Сводный.П000010000318) КАК П000010000318
	|ИЗ
	|	(ВЫБРАТЬ
	|		АлкогольнаяПродукция.П000010000301 КАК П000010000301,
	|		АлкогольнаяПродукция.П000010000302 КАК П000010000302,
	|		АлкогольнаяПродукция.П000010000303 КАК П000010000303,
	|		АлкогольнаяПродукция.П000010000304 КАК П000010000304,
	|		АлкогольнаяПродукция.П000010000305 КАК П000010000305,
	|		АлкогольнаяПродукция.ПроизводительИмпортер КАК ПроизводительИмпортер,
	|		0 КАК П000010000306,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками)
	|				ТОГДА ВЫБОР
	|						КОГДА ОборотыЗаПериод.Контрагент = АлкогольнаяПродукция.Производитель
	|							ТОГДА ОборотыЗаПериод.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК П000010000307,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками)
	|				ТОГДА ВЫБОР
	|						КОГДА ОборотыЗаПериод.Контрагент = АлкогольнаяПродукция.Производитель
	|							ТОГДА 0
	|						ИНАЧЕ ОборотыЗаПериод.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК П000010000308,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КлассификацияРегистратора = 1
	|				ТОГДА (ОборотыЗаПериод.КоличествоОборотДт - ОборотыЗаПериод.КоличествоОборотКт) * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК П000010000311,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|					И ОборотыЗаПериод.КлассификацияРегистратора <> 1
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК П000010000312,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КоличествоОборотДт <= 0
	|				ТОГДА 0
	|			КОГДА ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты)
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			КОГДА ОбособленныеПодразделения.ОбособленноеПодразделение = ОбособленныеКорПодразделения.ОбособленноеПодразделение
	|				ТОГДА 0
	|			КОГДА ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Товары)
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотДт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК П000010000313,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КлассификацияРегистратора = 2
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК П000010000315,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КорСчет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Товары)
	|					И ОборотыЗаПериод.КорСчет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты)
	|					И ОборотыЗаПериод.КлассификацияРегистратора = 0
	|					ИЛИ ОборотыЗаПериод.КлассификацияРегистратора > 3
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК П000010000316,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КлассификацияРегистратора = 3
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК П000010000317,
	|		ВЫБОР
	|			КОГДА ОборотыЗаПериод.КоличествоОборотКт <= 0
	|				ТОГДА 0
	|			КОГДА ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты)
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			КОГДА ОбособленныеПодразделения.ОбособленноеПодразделение = ОбособленныеКорПодразделения.ОбособленноеПодразделение
	|				ТОГДА 0
	|			КОГДА ОборотыЗаПериод.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Товары)
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотКт * АлкогольнаяПродукция.КоэффПересчетаДал
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК П000010000318,
	|		ОбособленныеПодразделения.ОбособленноеПодразделение КАК СсылкаПодразделение
	|	ИЗ
	|		АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|			ЛЕВОЕ СОЕДИНЕНИЕ ОборотыЗаПериод КАК ОборотыЗаПериод
	|				ЛЕВОЕ СОЕДИНЕНИЕ ОбособленныеПодразделения КАК ОбособленныеПодразделения
	|				ПО ОборотыЗаПериод.Подразделение = ОбособленныеПодразделения.Подразделение
	|				ЛЕВОЕ СОЕДИНЕНИЕ ОбособленныеПодразделения КАК ОбособленныеКорПодразделения
	|				ПО ОборотыЗаПериод.КорПодразделение = ОбособленныеКорПодразделения.Подразделение
	|			ПО АлкогольнаяПродукция.Номенклатура = ОборотыЗаПериод.Номенклатура
	|	ГДЕ
	|		ОборотыЗаПериод.Номенклатура ЕСТЬ НЕ NULL 
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АлкогольнаяПродукция.П000010000301,
	|		АлкогольнаяПродукция.П000010000302,
	|		АлкогольнаяПродукция.П000010000303,
	|		АлкогольнаяПродукция.П000010000304,
	|		АлкогольнаяПродукция.П000010000305,
	|		АлкогольнаяПродукция.ПроизводительИмпортер,
	|		НачальныеОстатки.КоличествоНачальныйОстатокДт * АлкогольнаяПродукция.КоэффПересчетаДал,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		ОбособленныеПодразделения.ОбособленноеПодразделение
	|	ИЗ
	|		АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|			ЛЕВОЕ СОЕДИНЕНИЕ НачальныеОстатки КАК НачальныеОстатки
	|				ЛЕВОЕ СОЕДИНЕНИЕ ОбособленныеПодразделения КАК ОбособленныеПодразделения
	|				ПО НачальныеОстатки.Подразделение = ОбособленныеПодразделения.Подразделение
	|			ПО АлкогольнаяПродукция.Номенклатура = НачальныеОстатки.Номенклатура
	|	ГДЕ
	|		НачальныеОстатки.Номенклатура ЕСТЬ НЕ NULL ) КАК Сводный
	|
	|СГРУППИРОВАТЬ ПО
	|	Сводный.СсылкаПодразделение,
	|	Сводный.П000010000301,
	|	Сводный.П000010000302,
	|	Сводный.П000010000303,
	|	Сводный.П000010000304,
	|	Сводный.П000010000305
	|ИТОГИ ПО
	|	СсылкаПодразделение";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаАлкоПриложение11ФормаОтчета2014Кв1Раздел2_ИсточникиДанных()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СведенияОбАлкогольнойПродукции.Ссылка КАК Номенклатура,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.ВидЛицензии КАК ВидЛицензии,
	|	СведенияОбАлкогольнойПродукции.ОбъемДАЛ КАК КоэффПересчетаДал,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.Наименование КАК П000020000301,
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.Код КАК П000020000302,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко КАК ПроизводительИмпортер,
	|	ВЫРАЗИТЬ(СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.НаименованиеПолное КАК СТРОКА(200)) КАК П000020000303,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.ИНН КАК П000020000304,
	|	СведенияОбАлкогольнойПродукции.ПроизводительИмпортерДляДекларацийАлко.КПП КАК П000020000305
	|ПОМЕСТИТЬ АлкогольнаяПродукция
	|ИЗ
	|	Справочник.Номенклатура КАК СведенияОбАлкогольнойПродукции
	|ГДЕ
	|	СведенияОбАлкогольнойПродукции.ВидАлкогольнойПродукции.ВидЛицензии <> ЗНАЧЕНИЕ(Перечисление.ВидыЛицензийАлкогольнойПродукции.Пиво)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК Номенклатура,
	|	ХозрасчетныйОбороты.Регистратор КАК Регистратор,
	|	ХозрасчетныйОбороты.Субконто2 КАК НомерГТД,
	|	ХозрасчетныйОбороты.КоличествоОборотДт КАК КоличествоОборотДт
	|ПОМЕСТИТЬ КоличествоИзГТД
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ГТД),
	|			&ВидыСубконтоНоменклатураГТД,
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						АлкогольнаяПродукция.Номенклатура
	|					ИЗ
	|						АлкогольнаяПродукция КАК АлкогольнаяПродукция),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Номенклатура,
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, ДЕНЬ) КАК Период,
	|	ХозрасчетныйОборотыДтКт.Регистратор КАК Регистратор,
	|	ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.Контрагенты) КАК Поставщик,
	|	ХозрасчетныйОборотыДтКт.Организация КАК Организация,
	|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.ПодразделениеДт, &ПустоеПодразделение) КАК Подразделение,
	|	ХозрасчетныйОборотыДтКт.КоличествоОборотДт КАК КоличествоОборотДт
	|ПОМЕСТИТЬ ОборотыЗаПериод
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			СчетДт В (&Субсчета41),
	|			&ВидСубконтоНоменклатура,
	|			СчетКт В (&Субсчета60),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты),
	|			Организация В (&СписокОрганизаций)
	|				И СубконтоДт1 В
	|					(ВЫБРАТЬ
	|						АлкогольнаяПродукция.Номенклатура
	|					ИЗ
	|						АлкогольнаяПродукция КАК АлкогольнаяПродукция)) КАК ХозрасчетныйОборотыДтКт
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.П000020000301 КАК П000020000301,
	|	АлкогольнаяПродукция.П000020000302 КАК П000020000302,
	|	АлкогольнаяПродукция.П000020000303 КАК П000020000303,
	|	АлкогольнаяПродукция.П000020000304 КАК П000020000304,
	|	АлкогольнаяПродукция.П000020000305 КАК П000020000305,
	|	ПОДСТРОКА(ОборотыЗаПериод.Поставщик.НаименованиеПолное, 1, 200) КАК П000020000306,
	|	ВЫБОР
	|		КОГДА ОборотыЗаПериод.Поставщик.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ОборотыЗаПериод.Поставщик.ИНН
	|		ИНАЧЕ ОборотыЗаПериод.Поставщик.РегистрационныйНомер
	|	КОНЕЦ КАК П000020000307,
	|	ОборотыЗаПериод.Поставщик.КПП КАК П000020000308,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ДатаВходящегоДокумента, ОборотыЗаПериод.Период) КАК П000020000313,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.НомерВходящегоДокумента, НЕОПРЕДЕЛЕНО) КАК П000020000314,
	|	КоличествоИзГТД.НомерГТД КАК П000020000315,
	|	СУММА(ВЫБОР
	|			КОГДА КоличествоИзГТД.НомерГТД ЕСТЬ NULL
	|				ТОГДА ОборотыЗаПериод.КоличествоОборотДт
	|			ИНАЧЕ КоличествоИзГТД.КоличествоОборотДт
	|		КОНЕЦ * АлкогольнаяПродукция.КоэффПересчетаДал) КАК П000020000316,
	|	ОборотыЗаПериод.Подразделение КАК Подразделение,
	|	ОборотыЗаПериод.Организация КАК Организация,
	|	АлкогольнаяПродукция.ВидЛицензии КАК ВидЛицензии,
	|	ОборотыЗаПериод.Поставщик КАК Поставщик,
	|	АлкогольнаяПродукция.ПроизводительИмпортер КАК ПроизводительИмпортер,
	|	ОборотыЗаПериод.Регистратор КАК ДокументПоступления
	|ПОМЕСТИТЬ ДанныеОтчета
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОборотыЗаПериод КАК ОборотыЗаПериод
	|			ЛЕВОЕ СОЕДИНЕНИЕ КоличествоИзГТД КАК КоличествоИзГТД
	|			ПО ОборотыЗаПериод.Номенклатура = КоличествоИзГТД.Номенклатура
	|				И ОборотыЗаПериод.Регистратор = КоличествоИзГТД.Регистратор
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|			ПО ОборотыЗаПериод.Регистратор = ПоступлениеТоваровУслуг.Ссылка
	|		ПО АлкогольнаяПродукция.Номенклатура = ОборотыЗаПериод.Номенклатура
	|ГДЕ
	|	ОборотыЗаПериод.Номенклатура ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукция.П000020000301,
	|	АлкогольнаяПродукция.П000020000302,
	|	АлкогольнаяПродукция.П000020000303,
	|	АлкогольнаяПродукция.П000020000304,
	|	АлкогольнаяПродукция.П000020000305,
	|	ПОДСТРОКА(ОборотыЗаПериод.Поставщик.НаименованиеПолное, 1, 200),
	|	ВЫБОР
	|		КОГДА ОборотыЗаПериод.Поставщик.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА ОборотыЗаПериод.Поставщик.ИНН
	|		ИНАЧЕ ОборотыЗаПериод.Поставщик.РегистрационныйНомер
	|	КОНЕЦ,
	|	ОборотыЗаПериод.Поставщик.КПП,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ДатаВходящегоДокумента, ОборотыЗаПериод.Период),
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.НомерВходящегоДокумента, НЕОПРЕДЕЛЕНО),
	|	КоличествоИзГТД.НомерГТД,
	|	ОборотыЗаПериод.Подразделение,
	|	ОборотыЗаПериод.Организация,
	|	АлкогольнаяПродукция.ВидЛицензии,
	|	ОборотыЗаПериод.Поставщик,
	|	АлкогольнаяПродукция.ПроизводительИмпортер,
	|	ОборотыЗаПериод.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Поставщик,
	|	ВидЛицензии,
	|	П000020000313
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОборотыЗаПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КоличествоИзГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ АлкогольнаяПродукция";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаАлкоПриложение11ФормаОтчета2014Кв1Раздел2_Результат()
	
	ТекстЗапроса =

	"ВЫБРАТЬ
	|	ДанныеОтчета.Поставщик КАК Поставщик,
	|	ДанныеОтчета.ВидЛицензии КАК ВидЛицензии,
	|	ДанныеОтчета.П000020000313 КАК П000020000313,
	|	МАКСИМУМ(ЛицензииПоставщиковАлкогольнойПродукции.ДатаНачала) КАК ДатаПоследнейЛицензии
	|ПОМЕСТИТЬ ДатыПоследнихЛицензий
	|ИЗ
	|	ДанныеОтчета КАК ДанныеОтчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЛицензииПоставщиковАлкогольнойПродукции КАК ЛицензииПоставщиковАлкогольнойПродукции
	|		ПО ДанныеОтчета.Поставщик = ЛицензииПоставщиковАлкогольнойПродукции.Владелец
	|			И ДанныеОтчета.ВидЛицензии = ЛицензииПоставщиковАлкогольнойПродукции.ВидЛицензии
	|			И ДанныеОтчета.П000020000313 >= ЛицензииПоставщиковАлкогольнойПродукции.ДатаНачала
	|ГДЕ
	|	ЛицензииПоставщиковАлкогольнойПродукции.Владелец ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОтчета.Поставщик,
	|	ДанныеОтчета.ВидЛицензии,
	|	ДанныеОтчета.П000020000313
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Поставщик,
	|	ВидЛицензии,
	|	П000020000313
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОтчета.П000020000301 КАК П000020000301,
	|	ДанныеОтчета.П000020000302 КАК П000020000302,
	|	ДанныеОтчета.П000020000303 КАК П000020000303,
	|	ДанныеОтчета.П000020000304 КАК П000020000304,
	|	ДанныеОтчета.П000020000305 КАК П000020000305,
	|	ДанныеОтчета.П000020000306 КАК П000020000306,
	|	ДанныеОтчета.П000020000307 КАК П000020000307,
	|	ДанныеОтчета.П000020000308 КАК П000020000308,
	|	ЛицензииПоставщиковАлкогольнойПродукции.Наименование КАК П000020000392,
	|	ЛицензииПоставщиковАлкогольнойПродукции.ДатаНачала КАК П000020000310,
	|	ЛицензииПоставщиковАлкогольнойПродукции.ДатаОкончания КАК П000020000311,
	|	ЛицензииПоставщиковАлкогольнойПродукции.КемВыдана КАК П000020000312,
	|	ДанныеОтчета.П000020000313 КАК П000020000313,
	|	ДанныеОтчета.П000020000314 КАК П000020000314,
	|	ДанныеОтчета.П000020000315 КАК П000020000315,
	|	ДанныеОтчета.П000020000316 КАК П000020000316,
	|	ДанныеОтчета.Подразделение КАК Подразделение,
	|	ДанныеОтчета.Организация КАК Организация,
	|	ДанныеОтчета.ПроизводительИмпортер КАК ПроизводительИмпортер,
	|	ДанныеОтчета.ДокументПоступления КАК ДокументПоступления,
	|	ДанныеОтчета.Поставщик КАК Поставщик,
	|	ОбособленныеПодразделения.ОбособленноеПодразделение КАК СсылкаПодразделение
	|ИЗ
	|	ДанныеОтчета КАК ДанныеОтчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыПоследнихЛицензий КАК ДатыПоследнихЛицензий
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЛицензииПоставщиковАлкогольнойПродукции КАК ЛицензииПоставщиковАлкогольнойПродукции
	|			ПО ДатыПоследнихЛицензий.Поставщик = ЛицензииПоставщиковАлкогольнойПродукции.Владелец
	|				И ДатыПоследнихЛицензий.ВидЛицензии = ЛицензииПоставщиковАлкогольнойПродукции.ВидЛицензии
	|				И ДатыПоследнихЛицензий.ДатаПоследнейЛицензии = ЛицензииПоставщиковАлкогольнойПродукции.ДатаНачала
	|		ПО ДанныеОтчета.Поставщик = ДатыПоследнихЛицензий.Поставщик
	|			И ДанныеОтчета.ВидЛицензии = ДатыПоследнихЛицензий.ВидЛицензии
	|			И ДанныеОтчета.П000020000313 = ДатыПоследнихЛицензий.П000020000313
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбособленныеПодразделения КАК ОбособленныеПодразделения
	|		ПО ДанныеОтчета.Подразделение = ОбособленныеПодразделения.Подразделение
	|ИТОГИ ПО
	|	СсылкаПодразделение";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ЗаполнитьРегламентированныйОтчетАлкоПриложение11ФормаОтчета2014Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	ВестиУчетПоПодразделениям = ЕстьОбособленныеПодразделения(ПараметрыОтчета);
	Если ВестиУчетПоПодразделениям Тогда
		СписокОрганизаций = БухгалтерскийУчетПереопределяемый.ВсяОрганизация(ПараметрыОтчета.Организация);
	Иначе
		СписокОрганизаций = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрыОтчета.Организация);
	КонецЕсли;
		
	ДокументСсылкаАлкоОтчет					= ПараметрыОтчета.ДокументСсылка;
	ВспомогательныйАдрес 					= ПараметрыОтчета.ВспомогательныйАдрес;
	
	// индикация начала работы фоновой операции
	РегламентированнаяОтчетностьАЛКО.СообщитьПроцентВыполнения( , 0, 100);

	СтруктураИдГруппИменРегистровСведений 	= ПараметрыОтчета.СтруктураИдГруппИменРегистровСведений;
	
	// Определим объект Отчета
	ИмяФормыОбъекта							= ПараметрыОтчета.ИмяФормыОбъекта;
	ОбъектОтчета = РегламентированнаяОтчетностьВызовСервера.ОбъектОтчета(ИмяФормыОбъекта);
	
	СтруктураИдГруппБуферИтогов 			= ПараметрыОтчета.СтруктураИдГруппБуферИтогов;
	СтруктураИтогов = Новый Структура;
	КолВБлокеЗаписей = 3000;
	
	МаксИндексСтраницы						= Контейнер.МаксИндексСтраницы;
	МаксИндексСтраницы = МаксИндексСтраницы + 1;	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Товары)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками)";
	
	Результат = Запрос.ВыполнитьПакет();
	МассивСчетов41 = Результат[0].Выгрузить().ВыгрузитьКолонку("Счет");
	МассивСчетов79 = Результат[1].Выгрузить().ВыгрузитьКолонку("Счет");
	МассивСчетов60 = Результат[2].Выгрузить().ВыгрузитьКолонку("Счет");
	
	ВидыСубконтоНоменклатураГТД = Новый Массив;
	ВидыСубконтоНоменклатураГТД.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	ВидыСубконтоНоменклатураГТД.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НомераГТД);
	
	Запрос.УстановитьПараметр("ДатаНач", 		             НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("ДатаКон", 		             КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("Организация",                 ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("СписокОрганизаций",           СписокОрганизаций); // включая обособленные подразделения
	Запрос.УстановитьПараметр("Субсчета41",                  МассивСчетов41);
	Запрос.УстановитьПараметр("Субсчета79",                  МассивСчетов79);
	Запрос.УстановитьПараметр("Субсчета60",                  МассивСчетов60);
	Запрос.УстановитьПараметр("ВидСубконтоНоменклатура",     ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("ВидыСубконтоНоменклатураГТД", ВидыСубконтоНоменклатураГТД);
	Запрос.УстановитьПараметр("ПустоеПодразделение",         Справочники.СтруктураПредприятия.ПустаяСсылка());
	
	//Заполнение Раздел 1
	// Получаем данные по алкогольной продукции.
	Запрос.Текст = ТекстЗапросаАлкоПриложение11ФормаОтчета2014Кв1Раздел1_ИсточникиДанных(ВестиУчетПоПодразделениям);

	Если ВестиУчетПоПодразделениям Тогда
	
		Запрос.Текст = Запрос.Текст + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СписокПодразделений.Подразделение КАК Подразделение,
		|	СписокПодразделений.Организация КАК Организация
		|ПОМЕСТИТЬ Подразделения
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОборотыЗаПериод.Подразделение КАК Подразделение,
		|		ОборотыЗаПериод.Организация КАК Организация
		|	ИЗ
		|		ОборотыЗаПериод КАК ОборотыЗаПериод
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОборотыЗаПериод.КорПодразделение,
		|		ОборотыЗаПериод.Организация
		|	ИЗ
		|		ОборотыЗаПериод КАК ОборотыЗаПериод
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НачальныеОстатки.Подразделение,
		|		НачальныеОстатки.Организация
		|	ИЗ
		|		НачальныеОстатки КАК НачальныеОстатки) КАК СписокПодразделений
		|ГДЕ
		|	СписокПодразделений.Подразделение <> &ПустоеПодразделение
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подразделение,
		|	Организация";
		
		Запрос.Выполнить();
	
		// Получаем соответствие подразделений, по которым имеются данные для отчета, и обособленных подразделений,
		// в которые они входят.
		ДобавитьТаблицуОбособленныхПодразделений(Запрос.МенеджерВременныхТаблиц, ПараметрыОтчета.Организация);
		
	Иначе
		
		Запрос.Текст = Запрос.Текст + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
		"ВЫБРАТЬ
		|	&ПустоеПодразделение КАК Подразделение,
		|	&Организация КАК ОбособленноеПодразделение
		|ПОМЕСТИТЬ ОбособленныеПодразделения";
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапросаАлкоПриложение11ФормаОтчета2014Кв1Раздел1_Результат();
	Результат = Запрос.Выполнить();
	ВыборкаПоПодразделениям = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Запрос.МенеджерВременныхТаблиц.Закрыть();
	
	Раздел_ИмяРабочегоРегистра 	= СтруктураИдГруппИменРегистровСведений["Раздел1"];

	
	Раздел                          = Контейнер.Раздел1;
	Раздел_ТЗ_Хранилище             = Контейнер.Раздел1_ТЗ_Хранилище;
	Раздел_СервисРегистров          = Контейнер.Раздел1_СервисРегистров;
	Раздел_СервисРегистровУдаленные = Контейнер.Раздел1_СервисРегистровУдаленные;
		
	// Удаляем все страницы текущего отчета
	Для Каждого СтрокаСервисРегистровГруппы Из Раздел_СервисРегистров Цикл
		
		НоваяСтрокаСервисРегистровГруппыУдаленные = Раздел_СервисРегистровУдаленные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСервисРегистровГруппыУдаленные, СтрокаСервисРегистровГруппы);
		
		Ресурсы = Новый Структура;
		Ресурсы.Вставить("КоличествоСтрок", НоваяСтрокаСервисРегистровГруппыУдаленные.КоличествоСтрок);		
		// Индекс строки 0 используем для обозначения операций над страницами в целом.
		// В норме индекс строки не меньше 1.	
		РегламентированнаяОтчетностьАЛКО.ДобавитьВРегистрЖурнала(ДокументСсылкаАлкоОтчет, Раздел_ИмяРабочегоРегистра,
					НоваяСтрокаСервисРегистровГруппыУдаленные.ИндексСтраницыРегистра, 0, "УдалениеСтраницы", Ресурсы);
									
	КонецЦикла;
				
	Раздел_СервисРегистров.Очистить();
	ИндексСтраницы = -1;
	ИдГруппы = "П0000100003";
	
	СписокБуфферИтоговГруппы = СтруктураИдГруппБуферИтогов[ИдГруппы];
	МассивРезультатов = Новый Массив;
	
	Пока ВыборкаПоПодразделениям.Следующий() Цикл
		
		ИндексСтраницы = ИндексСтраницы + 1;
		
		РазделТекущий = Раздел.Добавить();
		Раздел_СервисРегистровТекущий = Раздел_СервисРегистров.Добавить();
		
		МаксИндексСтраницы = МаксИндексСтраницы + 1;
		
		Если РазделТекущий.Данные.Количество() = 0 Тогда
			РазделТекущий.Данные.Добавить(Новый Структура);
		КонецЕсли;
		СтраницаРаздел = РазделТекущий.Данные[0].Значение;

		ПредставлениеПодразделения = СведенияОПодразделении(ВыборкаПоПодразделениям.СсылкаПодразделение, ПараметрыОтчета.Организация.ИНН, СписокОрганизаций);
		Если РазделТекущий.ДополнительныеДанные.Количество() = 0 Тогда
			РазделТекущий.ДополнительныеДанные.Добавить(Новый Структура); 
		КонецЕсли;
		РазделТекущий.ДополнительныеДанные[0].Значение.Вставить("СведенияОбОП", ПредставлениеПодразделения);

		Раздел_ДанныеДопСтрокТекущий = Раздел_ТЗ_Хранилище.Скопировать();

		МассивРезультатов.Добавить(Новый СписокЗначений);
		Для Каждого ЭлементСписка Из СписокБуфферИтоговГруппы Цикл
		    // в массиве будут храниться итоги по страницам по данному полю - представлению
			МассивРезультатов[ИндексСтраницы].Добавить(0, ЭлементСписка.Представление);	
		КонецЦикла;
	
		КоличествоТекСтрок = 0;

		КоличествоВТекущемБлокеЗаписей = 0; // Номер строки
		Выборка = ВыборкаПоПодразделениям.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			КоличествоВТекущемБлокеЗаписей = КоличествоВТекущемБлокеЗаписей + 1;
			
			НоваяСтрокаДопСтрок = Раздел_ДанныеДопСтрокТекущий.Добавить();		
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДопСтрок, Выборка);
			ОбъектОтчета.Расчет(ИдГруппы, НоваяСтрокаДопСтрок); // расчет по строке
			
			// Суммируем итоги.
			Для Каждого КонтролируемоеПоле Из МассивРезультатов[ИндексСтраницы] Цикл
				
				ИмяКонтролируемогоПоля = КонтролируемоеПоле.Представление;
				
				НоваяСтрокаДопСтрок[ИмяКонтролируемогоПоля] = ?(НоваяСтрокаДопСтрок[ИмяКонтролируемогоПоля] = Неопределено, 
																0, НоваяСтрокаДопСтрок[ИмяКонтролируемогоПоля]);
				
				КонтролируемоеПоле.Значение = КонтролируемоеПоле.Значение + НоваяСтрокаДопСтрок[ИмяКонтролируемогоПоля];

			КонецЦикла;
		
			// Каждые 3000 строк пишем в регистр.
			Если КоличествоВТекущемБлокеЗаписей >= КолВБлокеЗаписей Тогда
				
				КоличествоВТекущемБлокеЗаписей = 0;
				РегламентированнаяОтчетностьАЛКО.ДобавитьТаблицуЗначенийВРегистрСведенийАлко(ДокументСсылкаАлкоОтчет, ИмяФормыОбъекта, Раздел_ИмяРабочегоРегистра, 
											МаксИндексСтраницы, Раздел_ДанныеДопСтрокТекущий, КоличествоТекСтрок);
			    			
			    Раздел_ДанныеДопСтрокТекущий.Очистить();

			КонецЕсли;
			
		КонецЦикла;
		
		// Заносим в регистр сведений, если остались незаписанные строки
		Если Раздел_ДанныеДопСтрокТекущий.Количество() > 0 Тогда
		    			
			РегламентированнаяОтчетностьАЛКО.ДобавитьТаблицуЗначенийВРегистрСведенийАлко(ДокументСсылкаАлкоОтчет, ИмяФормыОбъекта, Раздел_ИмяРабочегоРегистра, 
											МаксИндексСтраницы, Раздел_ДанныеДопСтрокТекущий, КоличествоТекСтрок);
						
		    Раздел_ДанныеДопСтрокТекущий.Очистить();
		
		КонецЕсли; 
				
		// Занесем в регистр Журнал	
		Ресурсы = Новый Структура;
		Ресурсы.Вставить("КоличествоСтрок", КоличествоТекСтрок);	
		Ресурсы.Вставить("МаксИндексСтраницы", МаксИндексСтраницы);
		
		РегламентированнаяОтчетностьАЛКО.ДобавитьВРегистрЖурнала(ДокументСсылкаАлкоОтчет, Раздел_ИмяРабочегоРегистра,	
												МаксИндексСтраницы, 0, "Автозаполнение", Ресурсы);
										
		// занесем в СервисРегистров данные по количеству строк и номеру страницы регистра
		Раздел_СервисРегистровТекущий.КоличествоСтрок = КоличествоТекСтрок;
		Раздел_СервисРегистровТекущий.ИндексСтраницыРегистра = МаксИндексСтраницы;
		Раздел_СервисРегистровТекущий.КолвоСтрокПомНаУдаление = 0;
	    		
	КонецЦикла;
	СтруктураИтогов.Вставить(ИдГруппы, МассивРезультатов);

	
	// Заполнение Раздел 2.
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	// Получаем данные по алкогольной продукции.
	Запрос.Текст = ТекстЗапросаАлкоПриложение11ФормаОтчета2014Кв1Раздел2_ИсточникиДанных();
	
 	Если ВестиУчетПоПодразделениям Тогда
	
		Запрос.Текст = Запрос.Текст + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеОтчета.Подразделение КАК Подразделение,
		|	ДанныеОтчета.Организация КАК Организация
		|ПОМЕСТИТЬ Подразделения
		|ИЗ
		|	ДанныеОтчета КАК ДанныеОтчета
		|ГДЕ
		|	ДанныеОтчета.Подразделение <> &ПустоеПодразделение
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подразделение,
		|	Организация";
		
		Запрос.Выполнить();
	
		// Получаем соответствие подразделений, по которым имеются данные для отчета, и обособленных подразделений,
		// в которые они входят.
		ДобавитьТаблицуОбособленныхПодразделений(Запрос.МенеджерВременныхТаблиц, ПараметрыОтчета.Организация);
		
	Иначе
		
		Запрос.Текст = Запрос.Текст + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() +
		"ВЫБРАТЬ
		|	&ПустоеПодразделение КАК Подразделение,
		|	&Организация КАК ОбособленноеПодразделение
		|ПОМЕСТИТЬ ОбособленныеПодразделения";
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапросаАлкоПриложение11ФормаОтчета2014Кв1Раздел2_Результат();
	Результат = Запрос.Выполнить();
	ВыборкаПоПодразделениям = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Запрос.МенеджерВременныхТаблиц.Закрыть();
	
	Раздел_ИмяРабочегоРегистра 	= СтруктураИдГруппИменРегистровСведений["Раздел2"];
		
	Раздел	 							= Контейнер.Раздел2;
	Раздел_ТЗ_Хранилище     			= Контейнер.Раздел2_ТЗ_Хранилище;
	Раздел_СервисРегистров        		= Контейнер.Раздел2_СервисРегистров;
	Раздел_СервисРегистровУдаленные  	= Контейнер.Раздел2_СервисРегистровУдаленные;
		
	// Удаляем все страницы текущего отчета
	Для Каждого СтрокаСервисРегистровГруппы Из Раздел_СервисРегистров Цикл

		НоваяСтрокаСервисРегистровГруппыУдаленные = Раздел_СервисРегистровУдаленные.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСервисРегистровГруппыУдаленные, СтрокаСервисРегистровГруппы);
		
		Ресурсы = Новый Структура;
		Ресурсы.Вставить("КоличествоСтрок", НоваяСтрокаСервисРегистровГруппыУдаленные.КоличествоСтрок);		
		// Индекс строки 0 используем для обозначения операций над страницами в целом.
		// В норме индекс строки не меньше 1.	
		РегламентированнаяОтчетностьАЛКО.ДобавитьВРегистрЖурнала(ДокументСсылкаАлкоОтчет, Раздел_ИмяРабочегоРегистра,
					НоваяСтрокаСервисРегистровГруппыУдаленные.ИндексСтраницыРегистра, 0, "УдалениеСтраницы", Ресурсы);
									
	КонецЦикла;
	
	Раздел_СервисРегистров.Очистить();
	
	ИндексСтраницы = -1;
	ИдГруппы = "П0000200003";

	
	СписокБуфферИтоговГруппы = СтруктураИдГруппБуферИтогов[ИдГруппы];
	
	МассивРезультатов = Новый Массив;
	
	Пока ВыборкаПоПодразделениям.Следующий() Цикл
		
		ИндексСтраницы = ИндексСтраницы + 1;
		
		РазделТекущий = Раздел.Добавить();
		Раздел_СервисРегистровТекущий = Раздел_СервисРегистров.Добавить();
		
		МаксИндексСтраницы = МаксИндексСтраницы + 1;
		
		Если РазделТекущий.Данные.Количество() = 0 Тогда
			РазделТекущий.Данные.Добавить(Новый Структура);
		КонецЕсли;
		СтраницаРаздел = РазделТекущий.Данные[0].Значение;

		ПредставлениеПодразделения = СведенияОПодразделении(ВыборкаПоПодразделениям.СсылкаПодразделение, ПараметрыОтчета.Организация.ИНН, СписокОрганизаций);
		Если РазделТекущий.ДополнительныеДанные.Количество() = 0 Тогда
			РазделТекущий.ДополнительныеДанные.Добавить(Новый Структура); 
		КонецЕсли;
		РазделТекущий.ДополнительныеДанные[0].Значение.Вставить("СведенияОбОП", ПредставлениеПодразделения);
		
		Раздел_ДанныеДопСтрокТекущий = Раздел_ТЗ_Хранилище.Скопировать();

		МассивРезультатов.Добавить(Новый СписокЗначений);
		Для Каждого ЭлементСписка Из СписокБуфферИтоговГруппы Цикл
		    // в массиве будут храниться итоги по страницам по данному полю - представлению
			МассивРезультатов[ИндексСтраницы].Добавить(0, ЭлементСписка.Представление);	

		КонецЦикла;
		
		КоличествоТекСтрок = 0;
		
		СерияНомер = Новый Структура("П000020000391,П000020000392");
		КоличествоВТекущемБлокеЗаписей = 0; // Номер строки
		Выборка = ВыборкаПоПодразделениям.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			КоличествоВТекущемБлокеЗаписей = КоличествоВТекущемБлокеЗаписей + 1;
		
			СерияНомерТекст = СокрЛП(Выборка.П000020000392);
			ПозицияРазделителя = Найти(СерияНомерТекст, ",");
			Если ПозицияРазделителя = 0 Тогда
				ПозицияРазделителя = Найти(СерияНомерТекст, " ");
			КонецЕсли;
			Если ПозицияРазделителя <> 0 Тогда
				СерияНомер.П000020000391 = СокрЛП(Лев(СерияНомерТекст, ПозицияРазделителя - 1));
				СерияНомер.П000020000392 = СокрЛП(Сред(СерияНомерТекст, ПозицияРазделителя + 1));
			Иначе
				СерияНомер.П000020000391 = Неопределено;
				СерияНомер.П000020000392 = СерияНомерТекст;		
			КонецЕсли;

			НоваяСтрокаДопСтрок = Раздел_ДанныеДопСтрокТекущий.Добавить();	
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДопСтрок, Выборка);
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДопСтрок, СерияНомер);
			
			// Расчета по строке в разделе 2 нет.
			// Суммируем итоги.
			Для Каждого КонтролируемоеПоле Из МассивРезультатов[ИндексСтраницы] Цикл
																				
				ИмяКонтролируемогоПоля = КонтролируемоеПоле.Представление;
				
				НоваяСтрокаДопСтрок[ИмяКонтролируемогоПоля] = ?(НоваяСтрокаДопСтрок[ИмяКонтролируемогоПоля] = Неопределено, 
																0, НоваяСтрокаДопСтрок[ИмяКонтролируемогоПоля]);
				
				КонтролируемоеПоле.Значение = КонтролируемоеПоле.Значение + НоваяСтрокаДопСтрок[ИмяКонтролируемогоПоля];
				
			КонецЦикла;		

			// Каждые 3000 строк пишем в регистр.
			Если КоличествоВТекущемБлокеЗаписей >= КолВБлокеЗаписей Тогда
							    
				КоличествоВТекущемБлокеЗаписей = 0;
				РегламентированнаяОтчетностьАЛКО.ДобавитьТаблицуЗначенийВРегистрСведенийАлко(ДокументСсылкаАлкоОтчет, ИмяФормыОбъекта, Раздел_ИмяРабочегоРегистра, 
											МаксИндексСтраницы, Раздел_ДанныеДопСтрокТекущий, КоличествоТекСтрок);
							
			    Раздел_ДанныеДопСтрокТекущий.Очистить();
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Заносим в регистр сведений, если остались незаписанные строки
		Если Раздел_ДанныеДопСтрокТекущий.Количество() > 0 Тогда
		    			
			РегламентированнаяОтчетностьАЛКО.ДобавитьТаблицуЗначенийВРегистрСведенийАлко(ДокументСсылкаАлкоОтчет, ИмяФормыОбъекта, Раздел_ИмяРабочегоРегистра, 
											МаксИндексСтраницы, Раздел_ДанныеДопСтрокТекущий, КоличествоТекСтрок);
						
		    Раздел_ДанныеДопСтрокТекущий.Очистить();
		
		КонецЕсли; 
		
		// Занесем в регистр Журнал	
		Ресурсы = Новый Структура;
		Ресурсы.Вставить("КоличествоСтрок", КоличествоТекСтрок);	
		Ресурсы.Вставить("МаксИндексСтраницы", МаксИндексСтраницы);
		
		РегламентированнаяОтчетностьАЛКО.ДобавитьВРегистрЖурнала(ДокументСсылкаАлкоОтчет, Раздел_ИмяРабочегоРегистра,	
												МаксИндексСтраницы, 0, "Автозаполнение", Ресурсы);
										
		// занесем в СервисРегистров данные по количеству строк и номеру страницы регистра
		Раздел_СервисРегистровТекущий.КоличествоСтрок = КоличествоТекСтрок;
		Раздел_СервисРегистровТекущий.ИндексСтраницыРегистра = МаксИндексСтраницы;
		Раздел_СервисРегистровТекущий.КолвоСтрокПомНаУдаление = 0;
		
	КонецЦикла;
	СтруктураИтогов.Вставить(ИдГруппы, МассивРезультатов);
	
	Контейнер.МаксИндексСтраницы = МаксИндексСтраницы;
	Контейнер.Вставить("СтруктураИтогов", СтруктураИтогов);
	
	// Помещаем во временное хранилище Контейнер для механизма длительных операций.
	АдресХранилища = Неопределено;
	Если ПараметрыОтчета.Свойство("АдресХранилища", АдресХранилища) Тогда	
		ПоместитьВоВременноеХранилище(Контейнер, АдресХранилища);	
	КонецЕсли;
	
КонецПроцедуры

Функция СведенияОПодразделении(Подразделение, ИНН, СписокОрганизаций = Неопределено)
	
	СведенияОбОП = РегламентированнаяОтчетностьАЛКО.ПолучитьПустуюСтруктуруСведенийОбОП();
	
	СведенияОбОП.Вставить("ИНН",         "");
	СведенияОбОП.Вставить("ТипДома",     "");
	СведенияОбОП.Вставить("ТипКорпуса",  "");
	СведенияОбОП.Вставить("ТипКвартиры", "");
	
	Если Не ЗначениеЗаполнено(Подразделение) Тогда
		
		Возврат СведенияОбОП;
		
	ИначеЕсли ТипЗнч(Подразделение) = Тип("СправочникСсылка.Организации") Тогда
		
		СведенияОбОП.Наименование = Подразделение.Наименование;
		СведенияОбОП.КПП = Подразделение.КПП;
		СведенияОбОП.ИНН = ИНН;
		
		Данные = Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
		Результат = Подразделение.КонтактнаяИнформация.НайтиСтроки(Данные);
		
		Если Результат.Количество() > 0 Тогда
			Значение = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(Результат[0].ЗначенияПолей, Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
			ЗаполнитьЗначенияСвойств(СведенияОбОП, Значение);
			СведенияОбОП.ПредставлениеАдреса = Результат[0].Представление;
		КонецЕсли;
		
		Возврат СведенияОбОП;
		
	ИначеЕсли ТипЗнч(Подразделение) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СправочникРегистрацииВНалоговомОргане.Ссылка КАК РегистрацияПодразделения
		|ИЗ
		|	РегистрСведений.РегистрацииВНалоговомОргане КАК РегистрРегистрацииВНалоговомОргане
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК СправочникРегистрацииВНалоговомОргане
		|		ПО РегистрРегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане = СправочникРегистрацииВНалоговомОргане.Ссылка
		|ГДЕ
		|	РегистрРегистрацииВНалоговомОргане.Подразделение = &Подразделение
		|	И РегистрРегистрацииВНалоговомОргане.Организация В (&Организация)";
		
		Запрос.УстановитьПараметр("Подразделение", Подразделение);
		Запрос.УстановитьПараметр("Организация", СписокОрганизаций);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
		
			РегистрацияПодразделения = Выборка.РегистрацияПодразделения;
			
			Данные = Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.ФактАдресОбособленногоПодразделения);
			Результат = РегистрацияПодразделения.КонтактнаяИнформация.НайтиСтроки(Данные);
			
			Если Результат.Количество() > 0 Тогда
				Значение = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(Результат[0].ЗначенияПолей, Справочники.ВидыКонтактнойИнформации.ФактАдресОбособленногоПодразделения);
				ЗаполнитьЗначенияСвойств(СведенияОбОП, Значение);
				СведенияОбОП.ПредставлениеАдреса = Результат[0].Представление;
			КонецЕсли;
			
			СведенияОбОП.Наименование = Подразделение.Наименование;
			СведенияОбОП.КПП = РегистрацияПодразделения.КПП;
			СведенияОбОП.ИНН = ИНН;
			
		КонецЕсли;
		
		Возврат СведенияОбОП;
		
	Иначе
		
		Возврат СведенияОбОП;
		
	КонецЕсли;
	
КонецФункции

Функция ОписаниеПодразделения(Подразделение)
	
	НаименованиеОП = "";
	Если НЕ ПустаяСтрока(Подразделение.Наименование) Тогда
		НаименованиеОП = Подразделение.Наименование;
	КонецЕсли;
	Если НЕ ПустаяСтрока(Подразделение.ИНН) Тогда
		НаименованиеОП = НаименованиеОП + ?(ПустаяСтрока(НаименованиеОП), "", ", ") + "ИНН " + Подразделение.ИНН;
	КонецЕсли;
	Если НЕ ПустаяСтрока(Подразделение.КПП) Тогда
		НаименованиеОП = НаименованиеОП + ?(ПустаяСтрока(НаименованиеОП), "", ", ") + "КПП " + Подразделение.КПП;
	КонецЕсли;
	Если НЕ ПустаяСтрока(Подразделение.ПредставлениеАдреса) Тогда
		НаименованиеОП = НаименованиеОП + ?(ПустаяСтрока(НаименованиеОП), "", Символы.ПС) + Подразделение.ПредставлениеАдреса;
	КонецЕсли;
	
	Возврат НаименованиеОП;
	
КонецФункции

Функция ТаблицуЗначенийВДеревоСГруппировкой(ТаблицаРезультатов, знач ГруппировочныеКолонки= "",знач КолонкиИтогов = "")
	
	ДеревоРезультатов  = Новый ДеревоЗначений();
	Для каждого Колонка из ТаблицаРезультатов.Колонки Цикл
		ДеревоРезультатов.Колонки.Добавить(Колонка.Имя,Колонка.ТипЗначения,Колонка.Заголовок,Колонка.Ширина);
	КонецЦикла; 
	
	Если ПустаяСтрока(ГруппировочныеКолонки) Тогда
		Для каждого СтрокаТаблицы Из ТаблицаРезультатов Цикл
			СтрокаДерева = ДеревоРезультатов.Строки.Добавить();

			ЗаполнитьЗначенияСвойств(СтрокаДерева, СтрокаТаблицы);

		КонецЦикла; 
		
		Возврат ДеревоРезультатов;
	КонецЕсли;
	
	ТаблицаГруппировок = ТаблицаРезультатов.Скопировать();
	ТаблицаГруппировок.Свернуть(ГруппировочныеКолонки,КолонкиИтогов);

	Для каждого СтрокаТаблицы Из ТаблицаГруппировок Цикл
		СтрокаДерева = ДеревоРезультатов.Строки.Добавить();
		
		ЗаполнитьЗначенияСвойств(СтрокаДерева, СтрокаТаблицы);
		
	КонецЦикла; 
	
	ЗначенияОтбора = Новый Структура(ГруппировочныеКолонки);
	Для каждого СтрокаДерева из  ДеревоРезультатов.Строки Цикл
		//Формирование структуры отбора
		Для каждого ПараметрОтбора Из ЗначенияОтбора Цикл
			ЗначенияОтбора.Вставить(ПараметрОтбора.Ключ, СтрокаДерева[ПараметрОтбора.Ключ]);
		КонецЦикла; 
		
		//Поиск и заполнение подчиненными колонками
		МассивПодчиненныхСтрок = ТаблицаРезультатов.НайтиСтроки(ЗначенияОтбора);
		Для каждого СтрокаТаблицы Из МассивПодчиненныхСтрок Цикл
			ПодчиненнаяСтрокаДерева = СтрокаДерева.Строки.Добавить();
			
			ЗаполнитьЗначенияСвойств(ПодчиненнаяСтрокаДерева, СтрокаТаблицы);
			
		КонецЦикла; 
	КонецЦикла;
		
	Возврат ДеревоРезультатов;
	
КонецФункции

Функция ПолучитьОбособленноеПодразделение(Подразделение)
	
	Возврат Подразделение;
	
КонецФункции

#КонецОбласти

#Область СтатистическаяОтчетность

// Процедура заполняет сведения о показателях регламентированного отчета
//
// Параметры:
// 		ПоказателиОтчета - Структура - Структура показателей отчета
//
Процедура ПолучитьСведенияОПоказателяхОтчетаРегламентированныйОтчетСтатистикаФорма1ДМФормаОтчета2012Кв1(ПоказателиОтчета) Экспорт
	
	ШаблонПоляОтчета = "П01%1%2";
	Для Строка = 2 По 16 Цикл
		Для Графа = 4 По 7 Цикл
			ИмяПоказателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонПоляОтчета, Формат(Строка, "ЧЦ=2; ЧВН="), Формат(Графа, "ЧЦ=2; ЧВН="));
			РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, ИмяПоказателя, Истина, Ложь);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполняет переданную в виде контейнера структуру данных отчета.
//
// Параметры:
// 		ПараметрыОтчета - Структура - Структура параметров отчета
// 		Контейнер - Структура - Контейнер отображаемого отчета
//
Процедура ЗаполнитьРегламентированныйОтчетСтатистикаФорма1ДМФормаОтчета2012Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	ШаблонПоляОтчета = "П01%1%2";
	СтруктураОтчета = Новый Структура;
	Для Строка = 2 По 16 Цикл
		Для Графа = 4 По 7 Цикл
			СтруктураОтчета.Вставить(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонПоляОтчета, Формат(Строка, "ЧЦ=2; ЧВН="), Формат(Графа, "ЧЦ=2; ЧВН=")),
				0);
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ОбъектыЭксплуатацииДрагоценныеМатериалы.Ссылка КАК ОС,
		|	ОбъектыЭксплуатацииДрагоценныеМатериалы.Расположение КАК Расположение,
		|	ОбъектыЭксплуатацииДрагоценныеМатериалы.Количество КАК КоличествоАлмазов
		|ПОМЕСТИТЬ ОССодержаниеАлмазов
		|ИЗ
		|	Справочник.ОбъектыЭксплуатации.ДрагоценныеМатериалы КАК ОбъектыЭксплуатацииДрагоценныеМатериалы
		|ГДЕ
		|	ОбъектыЭксплуатацииДрагоценныеМатериалы.ДрагоценныйМатериал = ЗНАЧЕНИЕ(Справочник.ДрагоценныеМатериалы.Алмазы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ОСНачалоГода.ОсновноеСредство, ОСКонецГода.ОсновноеСредство) КАК ОС,
		|	ВЫБОР
		|		КОГДА ОСНачалоГода.ОсновноеСредство ЕСТЬ NULL 
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК КоличествоНачальныйОстаток,
		|	ВЫБОР
		|		КОГДА ОСНачалоГода.ОсновноеСредство ЕСТЬ NULL 
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоПоступило,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОСКонецГода.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоИзрасходовано,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОСКонецГода.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоКонечныйОстаток
		|ПОМЕСТИТЬ ОсновныеСредства
		|ИЗ
		|	РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
		|			&НачалоГодаГраница,
		|			Организация = &Организация
		|				И Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ОССодержаниеАлмазов.ОС
		|					ИЗ
		|						ОССодержаниеАлмазов КАК ОССодержаниеАлмазов)) КАК ОСНачалоГода
		|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
		|				&КонецГода,
		|				Организация = &Организация
		|				И Период >= &НачалоГода
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							ОССодержаниеАлмазов.ОС
		|						ИЗ
		|							ОССодержаниеАлмазов КАК ОССодержаниеАлмазов)) КАК ОСКонецГода
		|		ПО ОСНачалоГода.ОсновноеСредство = ОСКонецГода.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НоменклатураДрагоценныеМатериалы.Ссылка КАК Номенклатура,
		|	НоменклатураДрагоценныеМатериалы.Количество КАК КоличествоАлмазов,
		|	НоменклатураДрагоценныеМатериалы.Расположение КАК РасположениеАлмазов
		|ПОМЕСТИТЬ НоменклатураСодержаниеАлмазов
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДрагоценныеМатериалы КАК НоменклатураДрагоценныеМатериалы
		|		ПО ВидыНоменклатуры.Ссылка = НоменклатураДрагоценныеМатериалы.Ссылка.ВидНоменклатуры
		|ГДЕ
		|	ВидыНоменклатуры.СодержитДрагоценныеМатериалы
		|	И НоменклатураДрагоценныеМатериалы.ДрагоценныйМатериал = ЗНАЧЕНИЕ(Справочник.ДрагоценныеМатериалы.Алмазы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СодержаниеАлмазов.РасположениеАлмазов КАК Расположение,
		|	ЕСТЬNULL(СодержаниеАлмазов.КоличествоАлмазов, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоНачальныйОстаток, 0) КАК КоличествоНачальныйОстаток,
		|	ЕСТЬNULL(СодержаниеАлмазов.КоличествоАлмазов, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборотДт, 0) КАК КоличествоПоступило,
		|	ЕСТЬNULL(СодержаниеАлмазов.КоличествоАлмазов, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборотКт, 0) КАК КоличествоИзрасходовано,
		|	ЕСТЬNULL(СодержаниеАлмазов.КоличествоАлмазов, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток, 0) КАК КоличествоКонечныйОстаток
		|ПОМЕСТИТЬ Алмазы
		|ИЗ
		|	НоменклатураСодержаниеАлмазов КАК СодержаниеАлмазов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|				&НачалоГодаГраница,
		|				&КонецГода,
		|				,
		|				,
		|				Счет В (&Счета),
		|				,
		|				Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ
		|						НоменклатураСодержаниеАлмазов.Номенклатура
		|					ИЗ
		|						НоменклатураСодержаниеАлмазов КАК НоменклатураСодержаниеАлмазов)) КАК ХозрасчетныйОстаткиИОбороты
		|		ПО СодержаниеАлмазов.Номенклатура = ХозрасчетныйОстаткиИОбороты.Субконто1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОССодержаниеАлмазов.Расположение,
		|	ЕСТЬNULL(ОССодержаниеАлмазов.КоличествоАлмазов, 0) * ЕСТЬNULL(ОсновныеСредства.КоличествоНачальныйОстаток, 0),
		|	ЕСТЬNULL(ОССодержаниеАлмазов.КоличествоАлмазов, 0) * ЕСТЬNULL(ОсновныеСредства.КоличествоПоступило, 0),
		|	ЕСТЬNULL(ОССодержаниеАлмазов.КоличествоАлмазов, 0) * ЕСТЬNULL(ОсновныеСредства.КоличествоИзрасходовано, 0),
		|	ЕСТЬNULL(ОССодержаниеАлмазов.КоличествоАлмазов, 0) * ЕСТЬNULL(ОсновныеСредства.КоличествоКонечныйОстаток, 0)
		|ИЗ
		|	ОсновныеСредства КАК ОсновныеСредства
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОССодержаниеАлмазов КАК ОССодержаниеАлмазов
		|		ПО ОсновныеСредства.ОС = ОССодержаниеАлмазов.ОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Алмазы.Расположение,
		|	СУММА(Алмазы.КоличествоНачальныйОстаток) КАК КоличествоНачальныйОстаток,
		|	СУММА(Алмазы.КоличествоПоступило) КАК КоличествоПоступило,
		|	СУММА(Алмазы.КоличествоИзрасходовано) КАК КоличествоИзрасходовано,
		|	СУММА(Алмазы.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток
		|ИЗ
		|	Алмазы КАК Алмазы
		|
		|СГРУППИРОВАТЬ ПО
		|	Алмазы.Расположение"
	);
	
	Счета = Новый Массив;
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.КомпонентыОсновныхСредств);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.СырьеИМатериалы);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПокупныеПолуфабрикатыИКомплектующие);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ЗапасныеЧасти);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеМатериалы);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.СтроительныеМатериалы);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежности);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.СпецоснасткаИСпецодеждаНаСкладе);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.Полуфабрикаты);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ТоварыНаСкладах);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПокупныеИзделия);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ГотоваяПродукция);
	
	Запрос.УстановитьПараметр("Счета", Счета);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("НачалоГодаГраница", Новый Граница(НачалоГода(ПараметрыОтчета.мДатаНачалаПериодаОтчета), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("КонецГода", КонецГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		Расположения = Новый Соответствие;
		Расположения.Вставить(Перечисления.РасположениеДрагоценныхКамней.ВНаконечниках, "П0102");
		Расположения.Вставить(Перечисления.РасположениеДрагоценныхКамней.ВВолоках, "П0103");
		Расположения.Вставить(Перечисления.РасположениеДрагоценныхКамней.ВРезцах, "П0104");
		Расположения.Вставить(Перечисления.РасположениеДрагоценныхКамней.ВСверлах, "П0105");
		Расположения.Вставить(Перечисления.РасположениеДрагоценныхКамней.ВСтеклорезах, "П0106");
		Расположения.Вставить(Перечисления.РасположениеДрагоценныхКамней.ВИглах, "П0107");
		Расположения.Вставить(Перечисления.РасположениеДрагоценныхКамней.ВОправах, "П0108");
		Расположения.Вставить(Перечисления.РасположениеДрагоценныхКамней.ВДолотах, "П0109");
		Расположения.Вставить(Перечисления.РасположениеДрагоценныхКамней.ВКоронках, "П0110");
		Расположения.Вставить(Перечисления.РасположениеДрагоценныхКамней.ВРоликах, "П0111");
		Расположения.Вставить(Перечисления.РасположениеДрагоценныхКамней.ВКарандашах, "П0112");
		Расположения.Вставить(Перечисления.РасположениеДрагоценныхКамней.ВПластинах, "П0113");
		Расположения.Вставить(Перечисления.РасположениеДрагоценныхКамней.ВБрусках, "П0114");
		Расположения.Вставить(Перечисления.РасположениеДрагоценныхКамней.ВАбразивномИнструменте, "П0115");
		Расположения.Вставить(Перечисления.РасположениеДрагоценныхКамней.ВОтрезныхКругахИШтрипсовыхПлитах, "П0116");
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Строка = Расположения.Получить(Выборка.Расположение);
			Если Строка=Неопределено Тогда
				Строка = "П0102";
			КонецЕсли;
			
			СтруктураОтчета[Строка+"04"] = СтруктураОтчета[Строка+"04"] + Выборка.КоличествоНачальныйОстаток;
			СтруктураОтчета[Строка+"05"] = СтруктураОтчета[Строка+"05"] + Выборка.КоличествоПоступило;
			СтруктураОтчета[Строка+"06"] = СтруктураОтчета[Строка+"06"] + Выборка.КоличествоИзрасходовано;
			
			
			Если Выборка.Расположение = Перечисления.РасположениеДрагоценныхКамней.ВОтрезныхКругахИШтрипсовыхПлитах Тогда
				// Увеличить показатели строки №15, т.к. показатели строки отрезных кругов и штрипсовых плит входят в абразивный инструмент
				Строка = "П0115";
				СтруктураОтчета[Строка+"04"] = СтруктураОтчета[Строка+"04"] + Выборка.КоличествоНачальныйОстаток;
				СтруктураОтчета[Строка+"05"] = СтруктураОтчета[Строка+"05"] + Выборка.КоличествоПоступило;
				СтруктураОтчета[Строка+"06"] = СтруктураОтчета[Строка+"06"] + Выборка.КоличествоИзрасходовано;
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Контейнер.ПолеТабличногоДокументаФормаОтчета, СтруктураОтчета);
	
КонецПроцедуры

// Процедура заполняет сведения о показателях регламентированного отчета
//
// Параметры:
// 		ПоказателиОтчета - Структура - Структура показателей отчета
//
Процедура ПолучитьСведенияОПоказателяхОтчетаРегламентированныйОтчетСтатистикаФорма2ДМДавальческоеСырьеФормаОтчета2012Кв1(ПоказателиОтчета) Экспорт
	
	ШаблонПоляОтчета = "П01%1%2";
	Для Строка = 1 По 16 Цикл
		Для Графа = 4 По 6 Цикл
			ИмяПоказателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонПоляОтчета, Формат(Строка, "ЧЦ=2; ЧВН="), Формат(Графа, "ЧЦ=2; ЧВН="));
			РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, ИмяПоказателя, Истина, Ложь);
		КонецЦикла;
		Строка = Строка + 1;
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполняет переданную в виде контейнера структуру данных отчета.
//
// Параметры:
// 		ПараметрыОтчета - Структура - Структура параметров отчета
// 		Контейнер - Структура - Контейнер отображаемого отчета
//
Процедура ЗаполнитьРегламентированныйОтчетСтатистикаФорма2ДМДавальческоеСырьеФормаОтчета2012Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	ШаблонПоляОтчета = "П01%1%2";
	СтруктураОтчета = Новый Структура;
	Для Строка = 1 По 16 Цикл
		Для Графа = 4 По 8 Цикл
			СтруктураОтчета.Вставить(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонПоляОтчета, Формат(Строка, "ЧЦ=2; ЧВН="), Формат(Графа, "ЧЦ=2; ЧВН=")),
				0);
		КонецЦикла;
		Строка = Строка + 1;
	КонецЦикла;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	НоменклатураДрагоценныеМатериалы.Ссылка КАК Номенклатура,
		|	НоменклатураДрагоценныеМатериалы.ДрагоценныйМатериал КАК ДрагоценныйМатериал,
		|	НоменклатураДрагоценныеМатериалы.Количество КАК Количество
		|ПОМЕСТИТЬ НоменклатураСодержаниеМеталлов
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДрагоценныеМатериалы КАК НоменклатураДрагоценныеМатериалы
		|		ПО ВидыНоменклатуры.Ссылка = НоменклатураДрагоценныеМатериалы.Ссылка.ВидНоменклатуры
		|ГДЕ
		|	ВидыНоменклатуры.СодержитДрагоценныеМатериалы
		|	И НоменклатураДрагоценныеМатериалы.ДрагоценныйМатериал <> ЗНАЧЕНИЕ(Справочник.ДрагоценныеМатериалы.Алмазы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СодержаниеМеталлов.ДрагоценныйМатериал КАК ДрагоценныйМатериал,
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоНачальныйОстаток, 0) КАК КоличествоНачальныйОстаток,
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборотДт, 0) КАК КоличествоПоступило,
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборотКт, 0) КАК КоличествоИзрасходовано,
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток, 0) КАК КоличествоКонечныйОстаток
		|ПОМЕСТИТЬ ИтоговыеДанные
		|ИЗ
		|	НоменклатураСодержаниеМеталлов КАК СодержаниеМеталлов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|				&НачалоГодаГраница,
		|				&КонецГода,
		|				,
		|				,
		|				Счет В (&Счета),
		|				,
		|				Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ
		|						НоменклатураСодержаниеМеталлов.Номенклатура
		|					ИЗ
		|						НоменклатураСодержаниеМеталлов КАК НоменклатураСодержаниеМеталлов)) КАК ХозрасчетныйОстаткиИОбороты
		|		ПО СодержаниеМеталлов.Номенклатура = ХозрасчетныйОстаткиИОбороты.Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИтоговыеДанные.ДрагоценныйМатериал,
		|	СУММА(ИтоговыеДанные.КоличествоНачальныйОстаток) КАК КоличествоНачальныйОстаток,
		|	СУММА(ИтоговыеДанные.КоличествоПоступило) КАК КоличествоПоступило,
		|	СУММА(ИтоговыеДанные.КоличествоИзрасходовано) КАК КоличествоИзрасходовано,
		|	СУММА(ИтоговыеДанные.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток
		|ИЗ
		|	ИтоговыеДанные КАК ИтоговыеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ИтоговыеДанные.ДрагоценныйМатериал"
	);
	
	Счета = Новый Массив;
	Счета.Добавить(ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработку);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.МатериалыПринятыеВПереработкуВПроизводстве);
	
	Запрос.УстановитьПараметр("Счета", Счета);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("НачалоГодаГраница", Новый Граница(НачалоГода(ПараметрыОтчета.мДатаНачалаПериодаОтчета), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("КонецГода", КонецГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		Металлы = Новый Соответствие;
		Металлы.Вставить(Справочники.ДрагоценныеМатериалы.Золото, "П0101");
		Металлы.Вставить(Справочники.ДрагоценныеМатериалы.Серебро, "П0103");
		Металлы.Вставить(Справочники.ДрагоценныеМатериалы.Платина, "П0105");
		Металлы.Вставить(Справочники.ДрагоценныеМатериалы.Иридий, "П0107");
		Металлы.Вставить(Справочники.ДрагоценныеМатериалы.Родий, "П0109");
		Металлы.Вставить(Справочники.ДрагоценныеМатериалы.Палладий, "П0111");
		Металлы.Вставить(Справочники.ДрагоценныеМатериалы.Рутений, "П0113");
		Металлы.Вставить(Справочники.ДрагоценныеМатериалы.Осмий, "П0115");
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Строка = Металлы.Получить(Выборка.ДрагоценныйМатериал);
			Если Строка=Неопределено Тогда
				Строка = "П0101";
			КонецЕсли;
			
			СтруктураОтчета[Строка+"04"] = СтруктураОтчета[Строка+"04"] + Выборка.КоличествоНачальныйОстаток;
			СтруктураОтчета[Строка+"05"] = СтруктураОтчета[Строка+"05"] + Выборка.КоличествоПоступило;
			СтруктураОтчета[Строка+"06"] = СтруктураОтчета[Строка+"06"] + Выборка.КоличествоИзрасходовано;
			СтруктураОтчета[Строка+"08"] = СтруктураОтчета[Строка+"08"] + Выборка.КоличествоКонечныйОстаток;
			
		КонецЦикла;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Контейнер.ПолеТабличногоДокументаФормаОтчета, СтруктураОтчета);
	
КонецПроцедуры

// Процедура заполняет сведения о показателях регламентированного отчета
//
// Параметры:
// 		ПоказателиОтчета - Структура - Структура показателей отчета
//
Процедура ПолучитьСведенияОПоказателяхОтчетаРегламентированныйОтчетСтатистикаФорма4ДМФормаОтчета2012Кв1(ПоказателиОтчета) Экспорт
	
	МассивНаборовПолей = Новый Массив;
	МассивНаборовПолей.Добавить("П0100, П0105, П0106, П0110, П0115, П0120, П0125, П0130"); // Коды строк золота
	МассивНаборовПолей.Добавить("П0200, П0205, П0206, П0210, П0230, П0235, П0240, П0245"); // 		серебра
	МассивНаборовПолей.Добавить("П0300, П0305, П0306, П0315, П0320, П0325, П0330, П0335"); // 		платины
	МассивНаборовПолей.Добавить("П0400, П0405, П0406, П0415, П0420, П0425, П0430, П0435"); // 		металлов платиновой группы
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("4"); // Остаток на начало года
	МассивКолонок.Добавить("5"); // Поступило
	МассивКолонок.Добавить("7"); // Истрачено
	МассивКолонок.Добавить("9"); // Остаток на начало года
	
	Для Каждого НаборПолей Из МассивНаборовПолей Цикл
		СтруктураПолей = Новый Структура(НаборПолей);
		Для Каждого КлючИЗначение Из СтруктураПолей Цикл
			Строка = КлючИЗначение.Ключ;
			Для Каждого Колонка Из МассивКолонок Цикл
				РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, Строка+Колонка, Истина, Ложь);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполняет переданную в виде контейнера структуру данных отчета.
//
// Параметры:
// 		ПараметрыОтчета - Структура - Структура параметров отчета
// 		Контейнер - Структура - Контейнер отображаемого отчета
//
Процедура ЗаполнитьРегламентированныйОтчетСтатистикаФорма4ДМФормаОтчета2012Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	СтруктураОтчета = Новый Структура;
	
	МассивНаборовПолей = Новый Массив;
	МассивНаборовПолей.Добавить("П0100, П0105, П0106, П0110, П0115, П0120, П0125, П0130"); // Коды строк золота
	МассивНаборовПолей.Добавить("П0200, П0205, П0206, П0210, П0230, П0235, П0240, П0245"); // 		серебра
	МассивНаборовПолей.Добавить("П0300, П0305, П0306, П0315, П0320, П0325, П0330, П0335"); // 		платины
	МассивНаборовПолей.Добавить("П0400, П0405, П0406, П0410, П0420, П0415, П0425, П0430"); // 		металлов платиновой группы
	
	МассивКолонок = Новый Массив;
	МассивКолонок.Добавить("4"); // Остаток на начало года
	МассивКолонок.Добавить("5"); // Поступило
	МассивКолонок.Добавить("7"); // Истрачено
	МассивКолонок.Добавить("9"); // Остаток на начало года
	
	Для Каждого НаборПолей Из МассивНаборовПолей Цикл
		СтруктураПолей = Новый Структура(НаборПолей);
		Для Каждого КлючИЗначение Из СтруктураПолей Цикл
			Строка = КлючИЗначение.Ключ;
			Для Каждого Колонка Из МассивКолонок Цикл
				СтруктураОтчета.Вставить(Строка+Колонка, 0);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ОбъектыЭксплуатацииДрагоценныеМатериалы.Ссылка КАК ОС,
		|	ОбъектыЭксплуатацииДрагоценныеМатериалы.ДрагоценныйМатериал КАК Металл,
		|	ОбъектыЭксплуатацииДрагоценныеМатериалы.Количество КАК Количество
		|ПОМЕСТИТЬ ОССодержаниеМеталлов
		|ИЗ
		|	Справочник.ОбъектыЭксплуатации.ДрагоценныеМатериалы КАК ОбъектыЭксплуатацииДрагоценныеМатериалы
		|ГДЕ
		|	ОбъектыЭксплуатацииДрагоценныеМатериалы.ДрагоценныйМатериал <> ЗНАЧЕНИЕ(Справочник.ДрагоценныеМатериалы.Алмазы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ОСНачалоГода.ОсновноеСредство, ОСКонецГода.ОсновноеСредство) КАК ОС,
		|	ВЫБОР
		|		КОГДА ОСНачалоГода.ОсновноеСредство ЕСТЬ NULL 
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК КоличествоНачальныйОстаток,
		|	ВЫБОР
		|		КОГДА ОСНачалоГода.ОсновноеСредство ЕСТЬ NULL 
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоПоступило,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОСКонецГода.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоИзрасходовано,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ОСКонецГода.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)) = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоКонечныйОстаток
		|ПОМЕСТИТЬ ОсновныеСредства
		|ИЗ
		|	РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
		|			&НачалоГодаГраница,
		|			Организация = &Организация
		|				И Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
		|				И ОсновноеСредство В
		|					(ВЫБРАТЬ
		|						ОССодержаниеМеталлов.ОС
		|					ИЗ
		|						ОССодержаниеМеталлов КАК ОССодержаниеМеталлов)) КАК ОСНачалоГода
		|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
		|				&КонецГода,
		|				Организация = &Организация
		|				И Период >= &НачалоГода
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							ОССодержаниеМеталлов.ОС
		|						ИЗ
		|							ОССодержаниеМеталлов КАК ОССодержаниеМеталлов)) КАК ОСКонецГода
		|		ПО ОСНачалоГода.ОсновноеСредство = ОСКонецГода.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НоменклатураДрагоценныеМатериалы.Ссылка КАК Номенклатура,
		|	НоменклатураДрагоценныеМатериалы.Количество КАК Количество,
		|	НоменклатураДрагоценныеМатериалы.ДрагоценныйМатериал КАК Металл
		|ПОМЕСТИТЬ НоменклатураСодержаниеМеталлов
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДрагоценныеМатериалы КАК НоменклатураДрагоценныеМатериалы
		|		ПО ВидыНоменклатуры.Ссылка = НоменклатураДрагоценныеМатериалы.Ссылка.ВидНоменклатуры
		|ГДЕ
		|	ВидыНоменклатуры.СодержитДрагоценныеМатериалы
		|	И НоменклатураДрагоценныеМатериалы.ДрагоценныйМатериал <> ЗНАЧЕНИЕ(Справочник.ДрагоценныеМатериалы.Алмазы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОССодержаниеМеталлов.Металл КАК Металл,
		|	ЕСТЬNULL(ОССодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ОсновныеСредства.КоличествоНачальныйОстаток, 0) КАК ОСНачальныйОстаток,
		|	ЕСТЬNULL(ОССодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ОсновныеСредства.КоличествоПоступило, 0) КАК ОСПоступило,
		|	ЕСТЬNULL(ОССодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ОсновныеСредства.КоличествоИзрасходовано, 0) КАК ОСИзрасходовано,
		|	ЕСТЬNULL(ОССодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ОсновныеСредства.КоличествоКонечныйОстаток, 0) КАК ОСКонечныйОстаток,
		|	ВЫБОР
		|		КОГДА ОсновныеСредства.ОС.ОбъектБытовогоНазначения
		|			ТОГДА ЕСТЬNULL(ОССодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ОсновныеСредства.КоличествоНачальныйОстаток, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОСБытНачальныйОстаток,
		|	ВЫБОР
		|		КОГДА ОсновныеСредства.ОС.ОбъектБытовогоНазначения
		|			ТОГДА ЕСТЬNULL(ОССодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ОсновныеСредства.КоличествоПоступило, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОСБытПоступило,
		|	ВЫБОР
		|		КОГДА ОсновныеСредства.ОС.ОбъектБытовогоНазначения
		|			ТОГДА ЕСТЬNULL(ОССодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ОсновныеСредства.КоличествоИзрасходовано, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОСБытИзрасходовано,
		|	ВЫБОР
		|		КОГДА ОсновныеСредства.ОС.ОбъектБытовогоНазначения
		|			ТОГДА ЕСТЬNULL(ОССодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ОсновныеСредства.КоличествоКонечныйОстаток, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОСБытКонечныйОстаток,
		|	0 КАК ПолуфабрикатыНачальныйОстаток,
		|	0 КАК ПолуфабрикатыПоступило,
		|	0 КАК ПолуфабрикатыИзрасходовано,
		|	0 КАК ПолуфабрикатыКонечныйОстаток,
		|	0 КАК ОборудованиеНачальныйОстаток,
		|	0 КАК ОборудованиеПоступило,
		|	0 КАК ОборудованиеИзрасходовано,
		|	0 КАК ОборудованиеКонечныйОстаток,
		|	0 КАК ЗапасныеЧастиНачальныйОстаток,
		|	0 КАК ЗапасныеЧастиПоступило,
		|	0 КАК ЗапасныеЧастиИзрасходовано,
		|	0 КАК ЗапасныеЧастиКонечныйОстаток,
		|	0 КАК МатериалыНачальныйОстаток,
		|	0 КАК МатериалыПоступило,
		|	0 КАК МатериалыИзрасходовано,
		|	0 КАК МатериалыКонечныйОстаток,
		|	0 КАК ГотоваяПродукцияНачальныйОстаток,
		|	0 КАК ГотоваяПродукцияПоступило,
		|	0 КАК ГотоваяПродукцияИзрасходовано,
		|	0 КАК ГотоваяПродукцияКонечныйОстаток
		|ПОМЕСТИТЬ ИтоговыеДанные
		|ИЗ
		|	ОсновныеСредства КАК ОсновныеСредства
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОССодержаниеМеталлов КАК ОССодержаниеМеталлов
		|		ПО ОсновныеСредства.ОС = ОССодержаниеМеталлов.ОС
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СодержаниеМеталлов.Металл,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоНачальныйОстаток, 0),
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборотДт, 0),
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборотКт, 0),
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток, 0),
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	НоменклатураСодержаниеМеталлов КАК СодержаниеМеталлов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|				&НачалоГодаГраница,
		|				&КонецГода,
		|				,
		|				,
		|				Счет В (&Счета_Полуфабрикаты),
		|				,
		|				Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ
		|						НоменклатураСодержаниеМеталлов.Номенклатура
		|					ИЗ
		|						НоменклатураСодержаниеМеталлов КАК НоменклатураСодержаниеМеталлов)) КАК ХозрасчетныйОстаткиИОбороты
		|		ПО СодержаниеМеталлов.Номенклатура = ХозрасчетныйОстаткиИОбороты.Субконто1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СодержаниеМеталлов.Металл,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоНачальныйОстаток, 0),
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборотДт, 0),
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборотКт, 0),
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток, 0),
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	НоменклатураСодержаниеМеталлов КАК СодержаниеМеталлов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|				&НачалоГодаГраница,
		|				&КонецГода,
		|				,
		|				,
		|				Счет В (&Счета_Оборудование),
		|				,
		|				Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ
		|						НоменклатураСодержаниеМеталлов.Номенклатура
		|					ИЗ
		|						НоменклатураСодержаниеМеталлов КАК НоменклатураСодержаниеМеталлов)) КАК ХозрасчетныйОстаткиИОбороты
		|		ПО СодержаниеМеталлов.Номенклатура = ХозрасчетныйОстаткиИОбороты.Субконто1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СодержаниеМеталлов.Металл,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоНачальныйОстаток, 0),
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборотДт, 0),
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборотКт, 0),
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток, 0),
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	НоменклатураСодержаниеМеталлов КАК СодержаниеМеталлов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|				&НачалоГодаГраница,
		|				&КонецГода,
		|				,
		|				,
		|				Счет В (&Счета_ЗапасныеЧасти),
		|				,
		|				Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ
		|						НоменклатураСодержаниеМеталлов.Номенклатура
		|					ИЗ
		|						НоменклатураСодержаниеМеталлов КАК НоменклатураСодержаниеМеталлов)) КАК ХозрасчетныйОстаткиИОбороты
		|		ПО СодержаниеМеталлов.Номенклатура = ХозрасчетныйОстаткиИОбороты.Субконто1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СодержаниеМеталлов.Металл,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоНачальныйОстаток, 0),
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборотДт, 0),
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборотКт, 0),
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток, 0),
		|	0,
		|	0,
		|	0,
		|	0
		|ИЗ
		|	НоменклатураСодержаниеМеталлов КАК СодержаниеМеталлов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|				&НачалоГодаГраница,
		|				&КонецГода,
		|				,
		|				,
		|				Счет В (&Счета_Материалы),
		|				,
		|				Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ
		|						НоменклатураСодержаниеМеталлов.Номенклатура
		|					ИЗ
		|						НоменклатураСодержаниеМеталлов КАК НоменклатураСодержаниеМеталлов)) КАК ХозрасчетныйОстаткиИОбороты
		|		ПО СодержаниеМеталлов.Номенклатура = ХозрасчетныйОстаткиИОбороты.Субконто1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СодержаниеМеталлов.Металл,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоНачальныйОстаток, 0),
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборотДт, 0),
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоОборотКт, 0),
		|	ЕСТЬNULL(СодержаниеМеталлов.Количество, 0) * ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстаток, 0)
		|ИЗ
		|	НоменклатураСодержаниеМеталлов КАК СодержаниеМеталлов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|				&НачалоГодаГраница,
		|				&КонецГода,
		|				,
		|				,
		|				Счет В (&Счета_ГотоваяПродукция),
		|				,
		|				Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ
		|						НоменклатураСодержаниеМеталлов.Номенклатура
		|					ИЗ
		|						НоменклатураСодержаниеМеталлов КАК НоменклатураСодержаниеМеталлов)) КАК ХозрасчетныйОстаткиИОбороты
		|		ПО СодержаниеМеталлов.Номенклатура = ХозрасчетныйОстаткиИОбороты.Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИтоговыеДанные.Металл,
		|	СУММА(ИтоговыеДанные.ОСНачальныйОстаток) КАК ОСНачальныйОстаток,
		|	СУММА(ИтоговыеДанные.ОСПоступило) КАК ОСПоступило,
		|	СУММА(ИтоговыеДанные.ОСИзрасходовано) КАК ОСИзрасходовано,
		|	СУММА(ИтоговыеДанные.ОСКонечныйОстаток) КАК ОСКонечныйОстаток,
		|	СУММА(ИтоговыеДанные.ОСБытНачальныйОстаток) КАК ОСБытНачальныйОстаток,
		|	СУММА(ИтоговыеДанные.ОСБытПоступило) КАК ОСБытПоступило,
		|	СУММА(ИтоговыеДанные.ОСБытИзрасходовано) КАК ОСБытИзрасходовано,
		|	СУММА(ИтоговыеДанные.ОСБытКонечныйОстаток) КАК ОСБытКонечныйОстаток,
		|	СУММА(ИтоговыеДанные.ПолуфабрикатыНачальныйОстаток) КАК ПолуфабрикатыНачальныйОстаток,
		|	СУММА(ИтоговыеДанные.ПолуфабрикатыПоступило) КАК ПолуфабрикатыПоступило,
		|	СУММА(ИтоговыеДанные.ПолуфабрикатыИзрасходовано) КАК ПолуфабрикатыИзрасходовано,
		|	СУММА(ИтоговыеДанные.ПолуфабрикатыКонечныйОстаток) КАК ПолуфабрикатыКонечныйОстаток,
		|	СУММА(ИтоговыеДанные.ОборудованиеНачальныйОстаток) КАК ОборудованиеНачальныйОстаток,
		|	СУММА(ИтоговыеДанные.ОборудованиеПоступило) КАК ОборудованиеПоступило,
		|	СУММА(ИтоговыеДанные.ОборудованиеИзрасходовано) КАК ОборудованиеИзрасходовано,
		|	СУММА(ИтоговыеДанные.ОборудованиеКонечныйОстаток) КАК ОборудованиеКонечныйОстаток,
		|	СУММА(ИтоговыеДанные.ЗапасныеЧастиНачальныйОстаток) КАК ЗапасныеЧастиНачальныйОстаток,
		|	СУММА(ИтоговыеДанные.ЗапасныеЧастиПоступило) КАК ЗапасныеЧастиПоступило,
		|	СУММА(ИтоговыеДанные.ЗапасныеЧастиИзрасходовано) КАК ЗапасныеЧастиИзрасходовано,
		|	СУММА(ИтоговыеДанные.ЗапасныеЧастиКонечныйОстаток) КАК ЗапасныеЧастиКонечныйОстаток,
		|	СУММА(ИтоговыеДанные.МатериалыНачальныйОстаток) КАК МатериалыНачальныйОстаток,
		|	СУММА(ИтоговыеДанные.МатериалыПоступило) КАК МатериалыПоступило,
		|	СУММА(ИтоговыеДанные.МатериалыИзрасходовано) КАК МатериалыИзрасходовано,
		|	СУММА(ИтоговыеДанные.МатериалыКонечныйОстаток) КАК МатериалыКонечныйОстаток,
		|	СУММА(ИтоговыеДанные.ГотоваяПродукцияНачальныйОстаток) КАК ГотоваяПродукцияНачальныйОстаток,
		|	СУММА(ИтоговыеДанные.ГотоваяПродукцияПоступило) КАК ГотоваяПродукцияПоступило,
		|	СУММА(ИтоговыеДанные.ГотоваяПродукцияИзрасходовано) КАК ГотоваяПродукцияИзрасходовано,
		|	СУММА(ИтоговыеДанные.ГотоваяПродукцияКонечныйОстаток) КАК ГотоваяПродукцияКонечныйОстаток,
		|	СУММА(ИтоговыеДанные.ОСНачальныйОстаток + ИтоговыеДанные.ПолуфабрикатыНачальныйОстаток + ИтоговыеДанные.ОборудованиеНачальныйОстаток + ИтоговыеДанные.ЗапасныеЧастиНачальныйОстаток + ИтоговыеДанные.МатериалыНачальныйОстаток + ИтоговыеДанные.ГотоваяПродукцияНачальныйОстаток) КАК ВсегоНачальныйОстаток,
		|	СУММА(ИтоговыеДанные.ОСПоступило + ИтоговыеДанные.ПолуфабрикатыПоступило + ИтоговыеДанные.ОборудованиеПоступило + ИтоговыеДанные.ЗапасныеЧастиПоступило + ИтоговыеДанные.МатериалыПоступило + ИтоговыеДанные.ГотоваяПродукцияПоступило) КАК ВсегоПоступило,
		|	СУММА(ИтоговыеДанные.ОСИзрасходовано + ИтоговыеДанные.ПолуфабрикатыИзрасходовано + ИтоговыеДанные.ОборудованиеИзрасходовано + ИтоговыеДанные.ЗапасныеЧастиИзрасходовано + ИтоговыеДанные.МатериалыИзрасходовано + ИтоговыеДанные.ГотоваяПродукцияИзрасходовано) КАК ВсегоИзрасходовано,
		|	СУММА(ИтоговыеДанные.ОСКонечныйОстаток + ИтоговыеДанные.ПолуфабрикатыКонечныйОстаток + ИтоговыеДанные.ОборудованиеКонечныйОстаток + ИтоговыеДанные.ЗапасныеЧастиКонечныйОстаток + ИтоговыеДанные.МатериалыКонечныйОстаток + ИтоговыеДанные.ГотоваяПродукцияКонечныйОстаток) КАК ВсегоКонечныйОстаток
		|ИЗ
		|	ИтоговыеДанные КАК ИтоговыеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ИтоговыеДанные.Металл"
	);
	
	Счета = Новый Массив;
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПокупныеПолуфабрикатыИКомплектующие);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.Полуфабрикаты);
	Запрос.УстановитьПараметр("Счета_Полуфабрикаты", Счета);
	
	Счета = Новый Массив;
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке);
	Запрос.УстановитьПараметр("Счета_Оборудование", Счета);
	
	Счета = Новый Массив;
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ЗапасныеЧасти);
	Запрос.УстановитьПараметр("Счета_ЗапасныеЧасти", Счета);
	
	Счета = Новый Массив;
	Счета.Добавить(ПланыСчетов.Хозрасчетный.СырьеИМатериалы);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеМатериалы);
	Счета.Добавить(ПланыСчетов.Хозрасчетный.СтроительныеМатериалы);
	Запрос.УстановитьПараметр("Счета_Материалы", Счета);
	
	Счета = Новый Массив;
	Счета.Добавить(ПланыСчетов.Хозрасчетный.ГотоваяПродукция);
	Запрос.УстановитьПараметр("Счета_ГотоваяПродукция", Счета);
	
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("НачалоГодаГраница", Новый Граница(НачалоГода(ПараметрыОтчета.мДатаНачалаПериодаОтчета), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("КонецГода", КонецГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		ПоляВыборки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(
			"Всего, ОС, ОСБыт, Полуфабрикаты, Оборудование, ЗапасныеЧасти, Материалы, ГотоваяПродукция");
		
		ПоляМеталловПлатиновойГруппы = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(
			"П0400, П0405, П0406, П0410, П0420, П0415, П0425, П0430");
		
		Металлы = Новый Соответствие;
		Металлы.Вставить(Справочники.ДрагоценныеМатериалы.Золото,
			СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(
				"П0100, П0105, П0106, П0110, П0115, П0120, П0125, П0130"));
		Металлы.Вставить(Справочники.ДрагоценныеМатериалы.Серебро,
			СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(
				"П0200, П0205, П0206, П0210, П0235, П0230, П0240, П0245"));
		Металлы.Вставить(Справочники.ДрагоценныеМатериалы.Платина,
			СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(
				"П0300, П0305, П0306, П0315, П0325, П0320, П0330, П0335"));
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Поля = Металлы.Получить(Выборка.Металл);
			Если Поля=Неопределено Тогда
				Поля = ПоляМеталловПлатиновойГруппы;
			КонецЕсли;
			
			Для нПоля=0 По ПоляВыборки.Количество()-1 Цикл
				Строка = Поля[нПоля];
				ПолеВыборки = ПоляВыборки[нПоля];
				СтруктураОтчета[Строка+"4"] = СтруктураОтчета[Строка+"4"] + Выборка[ПолеВыборки + "НачальныйОстаток"];
				СтруктураОтчета[Строка+"5"] = СтруктураОтчета[Строка+"5"] + Выборка[ПолеВыборки + "Поступило"];
				СтруктураОтчета[Строка+"7"] = СтруктураОтчета[Строка+"7"] + Выборка[ПолеВыборки + "Израсходовано"];
				СтруктураОтчета[Строка+"9"] = СтруктураОтчета[Строка+"9"] + Выборка[ПолеВыборки + "КонечныйОстаток"];
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Контейнер.ПолеТабличногоДокументаФормаОтчета, СтруктураОтчета);
	
КонецПроцедуры


// Заполняет список полей формы, заполняемых автоматически.
// 
// Параметры:
// 	ЗаполняемыеПоля  - коллекция полей в формате БРО (дополняется элементами)
//	ИмяОтчета        - имя отчета в метаданных
//
Процедура ЗаполнитьСписокАвтозаполняемыхПолей(ЗаполняемыеПоля, Знач ИмяОтчета, ИмяРедакцииОтчета, Период) Экспорт
	
	Если ИмяОтчета <> "РегламентированныйОтчетСтатистикаФормаП3" Тогда
		// Пока умеем заполнять только одну форму - "П-3". 3 - это цифра
		Возврат;
	КонецЕсли;
	
	НеЗаполняемыеПоля = ИнтерфейсыВзаимодействияБРО.ПоляКоторыеНеВсегдаТребуетсяЗаполнять(ИмяОтчета, ИмяРедакцииОтчета, Период);
	
	НеЗаполняемыеПоляПоиск = Новый Соответствие; // Используем соответствие в качестве индекса для ускорения поиска
	Для каждого ИмяПоля Из НеЗаполняемыеПоля Цикл
		НеЗаполняемыеПоляПоиск.Вставить(ИмяПоля, Истина);
	КонецЦикла;
	
	Для каждого ПравилоЗаполнения Из ПравилаЗаполнения(ИмяОтчета) Цикл
		ПолеЗаполняется = НеЗаполняемыеПоляПоиск[ПравилоЗаполнения.ИмяПоля] = Неопределено;
		РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ЗаполняемыеПоля, ПравилоЗаполнения.ИмяПоля, ПолеЗаполняется, Ложь); // Расшифровки пока нет
	КонецЦикла;
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаРегламентированныйОтчетСтатистикаФормаП3ФормаОтчета2013Кв1(ПоказателиОтчета, Знач Период) Экспорт
	ЗаполнитьСписокАвтозаполняемыхПолей(ПоказателиОтчета, "РегламентированныйОтчетСтатистикаФормаП3", "ФормаОтчета2013Кв1", Период);
КонецПроцедуры

// Процедура заполняет переданную в виде контейнера структуру данных отчета
//
// Параметры:
//	- Контейнер         - Структура - модифицируемый параметр; данные отчета которые нужно заполнить
//	- ИмяОтчета         - Строка    - идентификатор отчета (имя отчета в метаданных)
//	- ИмяРедакцииОтчета - Строка    - идентификатор редакции отчета (имя формы в метаданных)
// 	- ПараметрыОтчета   - Структура - структура параметров отчета, должна содержать ключи:
//		- Организация 						  - СправочникСсылка.Организации
//		- мДатаНачалаПериодаОтчета 			  - Дата
//		- мДатаКонцаПериодаОтчета 			  - Дата
//		- Периодичность			 			  - ПеречислениеСсылка.Периодичность
// 
Процедура ЗаполнитьФормуСтатистики(Контейнер, Знач ИмяОтчета, Знач ИмяРедакцииОтчета, ПараметрыОтчета) Экспорт
	
	Если ИмяОтчета <> "РегламентированныйОтчетСтатистикаФормаП3" Тогда
		// Пока умеем заполнять только одну форму - "П-3". 3 - это цифра
		Возврат;
	КонецЕсли;
	
	Показатели = ПоказателиФормыП3(
		ИмяРедакцииОтчета,
		ПараметрыОтчета.Организация,
		ПараметрыОтчета.мДатаНачалаПериодаОтчета,
		ПараметрыОтчета.мДатаКонцаПериодаОтчета,
		ПараметрыОтчета.Периодичность);
	
	РассчитатьЗначенияПоказателей(Показатели, Отчеты[ИмяОтчета]);
	
	ЗаполнитьКонтейнерФормыП3(Контейнер, Показатели);
	
КонецПроцедуры

// Инициализирует коллекцию с описаниями показателей
//
Функция НовыйОписаниеПоказателей() Экспорт
	
	Показатели = Новый ТаблицаЗначений;
	Показатели.Колонки.Добавить("ИмяПоля",          Новый ОписаниеТипов("Строка")); 
	// Как правило, начинается с символа "П" и содержит 13 знаков. 
	// Но в отдельных случаях может быть и строкой другого вида.
	Показатели.Колонки.Добавить("ОбъектНаблюдения", Новый ОписаниеТипов("Строка"));
	Показатели.Колонки.Добавить("Характеристика",   Новый ОписаниеТипов("Строка"));    
	// Характеристика объекта наблюдения
	Показатели.Колонки.Добавить("Аналитика",        Новый ОписаниеТипов("Строка")); 
	// Некоторые объекты могут характеризоваться списком показателей, 
	// например, задолженность в разрезе стран мира, откуда должники
	Показатели.Колонки.Добавить("Организация",      Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Показатели.Колонки.Добавить("НачалоПериода",    
									Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	Показатели.Колонки.Добавить("КонецПериода",     
									Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	Показатели.Колонки.Добавить("Значение",         Новый ОписаниеТипов("Число"));
	
	Возврат Показатели;
	
КонецФункции

// Расчитывает значения статистических показателей - заполняет колонку Значение в переданной таблице
//
// Параметры:
//	- Показатели - ТаблицаЗначений - данные, которые нужно рассчитать.
//              Структура таблицы описана в НовыйОписаниеПоказателей()
//
Процедура РассчитатьЗначенияПоказателей(Показатели, МеханизмРасчета) Экспорт
	
	// Рассчитываем не каждый показатель отдельно, а группируем их с точки зрения эффективности расчета - 
	// одним запросом рассчитаем все характеристики объекта наблюдения за конкретный период
	ИзмеренияДляРасчета = "ОбъектНаблюдения, Аналитика, Организация, НачалоПериода, КонецПериода";
	ИндексОтбораХарактеристик = Показатели.Индексы.Добавить(ИзмеренияДляРасчета); // Индекс удалим в конце процедуры
	
	ЗапросыДляВыполнения = Показатели.Скопировать();
	ЗапросыДляВыполнения.Свернуть(ИзмеренияДляРасчета);
	
	ПараметрыЗапроса = Новый Структура(ИзмеренияДляРасчета);
	
	Для каждого ОписаниеЗапроса Из ЗапросыДляВыполнения Цикл
		
		ЗаполнитьЗначенияСвойств(ПараметрыЗапроса, ОписаниеЗапроса);
		Характеристики = Показатели.НайтиСтроки(ПараметрыЗапроса); // Каждый запрос позволяет получить набор характеристики
		
		// Инициализируем компоновщик данных
		СхемаКомпоновки = МеханизмРасчета.ПолучитьМакет(ОписаниеЗапроса.ОбъектНаблюдения);
		
		КомпоновщикНастроекСКД = Новый КомпоновщикНастроекКомпоновкиДанных;
		КомпоновщикНастроекСКД.ЗагрузитьНастройки(СхемаКомпоновки.НастройкиПоУмолчанию);
		КомпоновщикНастроекСКД.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновки));
		
		НастройкиДляКомпоновкиМакета = КомпоновщикНастроекСКД.ПолучитьНастройки();
		
		// Передадим значения параметров
		Для каждого КлючИЗначение Из ПараметрыЗапроса Цикл
			БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(НастройкиДляКомпоновкиМакета, КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла;
		
		// Для получения дополнительной аналитики зачастую требуется обращаться к связанным таблицам.
		Если ЗначениеЗаполнено(ОписаниеЗапроса.Аналитика) Тогда
			// Для того, чтобы дать понять СКД, что нужно обратиться к таким таблицам, добавим соответствующие поле и отбор
			БухгалтерскиеОтчетыКлиентСервер.ДобавитьВыбранноеПоле(НастройкиДляКомпоновкиМакета, "Аналитика");
			БухгалтерскиеОтчетыКлиентСервер.ДобавитьОтбор(НастройкиДляКомпоновкиМакета,
				"Аналитика",
				ОписаниеЗапроса.Аналитика,
				ВидСравненияКомпоновкиДанных.Равно);
		Иначе
			// Если не требуется отбор по аналитике, то удалим соответствующие наборы из схемы
			НаборАналитика = СхемаКомпоновки.НаборыДанных.Найти("Аналитика");
			Если НаборАналитика <> Неопределено Тогда
				Для каждого Связь Из СписокСвязейНабораДанных("Аналитика", СхемаКомпоновки) Цикл
					СхемаКомпоновки.СвязиНаборовДанных.Удалить(Связь);
				КонецЦикла;	
				СхемаКомпоновки.НаборыДанных.Удалить(НаборАналитика);
			КонецЕсли;
			
		КонецЕсли;
		
		// Добавим поля для получения только тех характеристик, которые требуется указать в форме статистики
		Для каждого Характеристика Из Характеристики Цикл
			БухгалтерскиеОтчетыКлиентСервер.ДобавитьВыбранноеПоле(НастройкиДляКомпоновкиМакета, Характеристика.Характеристика);
		КонецЦикла;
		
		// Получим данные
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		МакетКомпоновки   = КомпоновщикМакета.Выполнить(
			СхемаКомпоновки,
			НастройкиДляКомпоновкиМакета
			, // НастройкиКомпоновкиДанных
			, // ДанныеРасшифровки
			, // МакетОформления
			Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
		
		УдалитьНеиспользуемыеНаборыИзМакетаКомпоновки(МакетКомпоновки.НаборыДанных);
		
		ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
		РезультатЗапроса = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
		
		Если РезультатЗапроса.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого Характеристика Из Характеристики Цикл
			Характеристика.Значение = РезультатЗапроса[0][Характеристика.Характеристика]; // Результат содержит не более одной строки
		КонецЦикла;
		
	КонецЦикла;
	
	Показатели.Индексы.Удалить(ИндексОтбораХарактеристик);
	
КонецПроцедуры

Процедура УдалитьНеиспользуемыеНаборыИзМакетаКомпоновки(НаборыДанных)
	
	НаборыКУдалению = Новый Массив;
	
	Для каждого Набор Из НаборыДанных Цикл
		
		Если ТипЗнч(Набор) = Тип("НаборДанныхОбъединениеМакетаКомпоновкиДанных")  Тогда
			
			УдалитьНеиспользуемыеНаборыИзМакетаКомпоновки(Набор.Элементы);
			
		ИначеЕсли ТипЗнч(Набор) = Тип("НаборДанныхЗапросМакетаКомпоновкиДанных") Тогда
			
			Если СтрНайти(Прав(Набор.Запрос, 2), "/") <> 0 Тогда
				
				НаборыКУдалению.Добавить(Набор);
				
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	Для каждого НаборКУдалению Из НаборыКУдалению Цикл
		
		НаборыДанных.Удалить(НаборКУдалению);
		
	КонецЦикла;	
	
КонецПроцедуры

Функция НайтиЭлементОтбора(Отбор, Элемент)
	
	НайденныйЭлемент = Неопределено;
	
	Для каждого ЭлементОтбора Из Отбор Цикл
		
		Если ТипЗнч(ЭлементОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
			
			НайденныйЭлемент = НайтиЭлементОтбора(ЭлементОтбора.Элементы, Элемент);
			
			Если НайденныйЭлемент <> Неопределено Тогда
				
				Прервать;
				
			КонецЕсли;
			
		ИначеЕсли ЭлементОтбора.РежимОтображения <> РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный И 
			(ЭлементОтбора.ЛевоеЗначение = Элемент ИЛИ Строка(ЭлементОтбора.ЛевоеЗначение) = Элемент) Тогда 
			
			НайденныйЭлемент = ЭлементОтбора;
			
			Прервать;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Возврат НайденныйЭлемент;
	
КонецФункции

Функция СписокСвязейНабораДанных(НаборИмя, СхемаКомпоновки) 
	
	СписокСвязей = Новый Массив;
	
	Для каждого Связь из СхемаКомпоновки.СвязиНаборовДанных Цикл 
		
		Если Связь.НаборДанныхИсточник = НаборИмя ИЛИ Связь.НаборДанныхПриемник = НаборИмя Тогда
			
			СписокСвязей.Добавить(Связь);
			
		КонецЕсли;	
		
	КонецЦикла;
	
	Возврат СписокСвязей;
	
КонецФункции

Процедура ЗаполнитьПериодПоказателя(ОписаниеПоказателя, ПравилоЗаполнения, Знач НачалоПериода, Знач КонецПериода, Знач Периодичность)
	
	// Так как в месяцах разное количество дней, то вместо даты окончания периода используем дату начала следующего месяца.
	// А в конце функции сделаем обратное преобразование.
	КонецПериода = КонецМесяца(КонецПериода) + 1;
	
	Если ПравилоЗаполнения.Период = "ПредыдущийПериод" Тогда
			
		// Учтем периодичность отчета
		Если Периодичность = Перечисления.Периодичность.Год Тогда
			ДлинаПериода = 12;
		ИначеЕсли Периодичность = Перечисления.Периодичность.Полугодие Тогда
			ДлинаПериода = 6;
		ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
			ДлинаПериода = 3;
		Иначе
			//Декада, день, неделя - периоды не кратные месяцу, не поддерживаются
			ДлинаПериода = 1;
		КонецЕсли;
		
		НачалоПериода = ДобавитьМесяц(НачалоПериода, -ДлинаПериода);
		КонецПериода  = ДобавитьМесяц(КонецПериода,  -ДлинаПериода);
			
	ИначеЕсли ПравилоЗаполнения.Период = "АналогичныйПериодПредыдущегоГода" Тогда
			
		НачалоПериода = ДобавитьМесяц(НачалоПериода, -12);
		КонецПериода  = ДобавитьМесяц(КонецПериода,  -12);
			
	КонецЕсли;
	
	Если ПравилоЗаполнения.СНачалаГода = "Истина" Тогда
		НачалоПериода = НачалоГода(НачалоПериода);
	КонецЕсли;
	
	ОписаниеПоказателя.НачалоПериода = НачалоПериода;
	ОписаниеПоказателя.КонецПериода  = КонецПериода - 1;
	
КонецПроцедуры

Функция ПравилаЗаполнения(ИмяОтчета)
	
	// Решение по размещению макетов заполнения - временное. 
	// Пока заполнямая форма статистики одна, то макеты с правилами заполнения размещены в самом отчете. 
	// Когда форм будет много, то такие поставляемые данные будут храниться вне БРО
	
	ПравилаЗаполненияМакет = Отчеты[ИмяОтчета].ПолучитьМакет("ПравилаЗаполнения"); 
	РезультатЧтения        = ОбщегоНазначения.ПрочитатьXMLВТаблицу(ПравилаЗаполненияМакет.ПолучитьТекст());
	Возврат РезультатЧтения.Данные;
	
КонецФункции

Функция ЧисловоеЗначениеПоля(ИмяПоля, Показатели)
	
	Отбор = Новый Структура("ИмяПоля", ИмяПоля);
	НайденныеСтроки = Показатели.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	СуммаЗначений = 0;
	Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		
		Значение = НайденнаяСтрока.Значение;
		
		Попытка
			Значение = Число(Значение);
		Исключение
			Значение = 0;
		КонецПопытки;
		
		СуммаЗначений = СуммаЗначений + Значение;
		
	КонецЦикла;
	
	Возврат СуммаЗначений;
	
КонецФункции

Процедура ДобавитьПоле(ИмяПоля, Значение, Показатели)
	
	НоваяСтрока = Показатели.Добавить();
	НоваяСтрока.ИмяПоля  = ИмяПоля;
	НоваяСтрока.Значение = Значение;
	
КонецПроцедуры

Процедура ЗаполнитьКонтейнерФормыП3(Контейнер, Показатели)
	
	// Показатели должно содержать колонки ИмяПоля и Значение.
	// Важно: форма может содержать многострочные поля.
	// В этом случае в коллекции Показатели может быть несколько значений с одинаковым именем поля.
	
	// Рассчитаем показатель "Отгружено в другие страны"
	ИмяПоляОтгруженоВРоссию = "П040004901";
	
	ИменаПолейОтгруженоВСНГ = Новый Массив; // По числу стран СНГ
	ШаблонИмениПоля     = "П04000##01";
	Для НомерЯчейки = 51 По 60 Цикл
		ИменаПолейОтгруженоВСНГ.Добавить(СтрЗаменить(ШаблонИмениПоля, "##", НомерЯчейки));
	КонецЦикла;
	
	ИмяПоляОтгруженоВДругиеСтраны = "П040006101";
	
	ОтгруженоВСНГ = 0;
	Для каждого ИмяПоля Из ИменаПолейОтгруженоВСНГ Цикл
		ОтгруженоВСНГ = ОтгруженоВСНГ + ЧисловоеЗначениеПоля(ИмяПоля, Показатели);
	КонецЦикла;
	
	ОтгруженоВДругиеСтраны = ЧисловоеЗначениеПоля("ОтгруженоТоваровВсего", Показатели) 
		- ЧисловоеЗначениеПоля(ИмяПоляОтгруженоВРоссию, Показатели)
		- ОтгруженоВСНГ;
		
	ДобавитьПоле(ИмяПоляОтгруженоВДругиеСтраны, ОтгруженоВДругиеСтраны, Показатели);
	
	// Заполним контейнер
	Для каждого ОписаниеПоказателя Из Показатели Цикл
		
		// Поищем это поле в контейнере. Для поиска используем ИмяПоля. Найденное - заполним.
		
		Для каждого Раздел Из Контейнер Цикл // Структура контейнера в разных отчетах может быть разной
			
			ДанныеРаздела = Раздел.Значение;
			
			Если ТипЗнч(ДанныеРаздела) <> Тип("Структура")
				Или Не ДанныеРаздела.Свойство(ОписаниеПоказателя.ИмяПоля) Тогда
				Продолжить;
			КонецЕсли;
			
			ДанныеРаздела.Вставить(ОписаниеПоказателя.ИмяПоля, ОписаниеПоказателя.Значение);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПоказателиФормыП3(ИмяРедакцииОтчета, Организация, НачалоПериода, КонецПериода, Периодичность)
	
	ИмяОтчета = "РегламентированныйОтчетСтатистикаФормаП3";
	
	ПравилаЗаполнения = ПравилаЗаполнения(ИмяОтчета);
	УдалитьСтраныОтсутствующиеВАдресах(ПравилаЗаполнения);
	УдалитьПоказателиКоторыеНеТребуетсяЗаполнять(ПравилаЗаполнения, ИмяОтчета, ИмяРедакцииОтчета, КонецПериода);
	
	Показатели = НовыйОписаниеПоказателей();
	
	Для каждого ПравилоЗаполнения Из ПравилаЗаполнения Цикл
		
		Если НЕ ЗначениеЗаполнено(ПравилоЗаполнения.ОбъектНаблюдения) Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеПоказателя = Показатели.Добавить();
		
		ЗаполнитьЗначенияСвойств(ОписаниеПоказателя, ПравилоЗаполнения, "ИмяПоля, ОбъектНаблюдения, Характеристика");
		ОписаниеПоказателя.Аналитика = ВРег(ПравилоЗаполнения.Аналитика);
		// В форме П-3 это название страны; При записи в контактную информацию оно приводится к верхнему регистру
		
		ЗаполнитьПериодПоказателя(ОписаниеПоказателя, ПравилоЗаполнения, НачалоПериода, КонецПериода, Периодичность);
		
	КонецЦикла;
	
	Показатели.ЗаполнитьЗначения(Организация, "Организация");
	
	Возврат Показатели;
	
КонецФункции

Процедура УдалитьСтраныОтсутствующиеВАдресах(ПравилаЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КонтрагентыКонтактнаяИнформация.Страна КАК Страна
	|ИЗ
	|	Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	|ГДЕ
	|	КонтрагентыКонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента)
	|	И КонтрагентыКонтактнаяИнформация.Страна <> """"
	|	И КонтрагентыКонтактнаяИнформация.Страна <> ""РОССИЯ""";
	
	СтраныВАдресах = Новый Соответствие;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтраныВАдресах.Вставить(ВРег(Выборка.Страна), Истина);
	КонецЦикла;
	
	КоличествоСтрок = ПравилаЗаполнения.Количество();
	Для ОбратныйИндекс = 1 По КоличествоСтрок Цикл
		
		Правило = ПравилаЗаполнения[КоличествоСтрок - ОбратныйИндекс];
		
		ИмяСтраны = ВРег(Правило.Аналитика);
		
		Если ПустаяСтрока(ИмяСтраны) ИЛИ ИмяСтраны = "РОССИЯ" Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтраныВАдресах[ИмяСтраны] = Неопределено Тогда
			// В этой стране нет ни одного нашего контрагента. Поэтому и правило для этой страны не нужно.
			ПравилаЗаполнения.Удалить(Правило);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьПоказателиКоторыеНеТребуетсяЗаполнять(ПравилаЗаполнения, ИмяОтчета, ИмяРедакцииОтчета, Период)
	
	// В данном случае можно удалять все показатели, которые не требуются получателю отчета.
	// Но в других отчетах может оказаться, что часть таких показателей следует оставить, 
	// потому что через них рассчитываются и требуемые показатели.
	
	ПоляКУдалению = ИнтерфейсыВзаимодействияБРО.ПоляКоторыеНеВсегдаТребуетсяЗаполнять(ИмяОтчета, ИмяРедакцииОтчета, Период);
	Если ПоляКУдалению.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПоляКУдалениюПоиск = Новый Соответствие; // Используем соответствие в качестве индекса для ускорения поиска
	Для каждого ИмяПоля Из ПоляКУдалению Цикл
		ПоляКУдалениюПоиск.Вставить(ИмяПоля, Истина);
	КонецЦикла;
	
	// Для заполнения поля "Отгружено в другие страны" нужен специальный "виртуальный" показатель
	ИмяПоляОтгруженоВДругиеСтраны = "П040006101";
	Если ПоляКУдалениюПоиск[ИмяПоляОтгруженоВДругиеСтраны] <> Неопределено Тогда
		ПоляКУдалениюПоиск.Вставить("ОтгруженоТоваровВсего", Истина);
	КонецЕсли;
	
	КоличествоСтрок = ПравилаЗаполнения.Количество();
	Для ОбратныйИндекс = 1 По КоличествоСтрок Цикл
		
		Правило = ПравилаЗаполнения[КоличествоСтрок - ОбратныйИндекс];
		
		Если ПоляКУдалениюПоиск[Правило.ИмяПоля] = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		// Этот показатель в данном периоде заполнять не требуется
		ПравилаЗаполнения.Удалить(Правило);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Прочие

Процедура ДобавитьСтрокуРасшифровки(ТаблицаРасшифровок, ИмяПоказателя, НаименованиеПоказателя, ЗнакОперации, НаименованиеСлагаемого, Сумма, ИмяРаздела, ДополнительныеПараметры = Неопределено)
	ЗаполнениеРасшифровкаРегламентированнойОтчетности.ДобавитьСтрокуРасшифровки(ТаблицаРасшифровок, ИмяПоказателя, НаименованиеПоказателя, ЗнакОперации, НаименованиеСлагаемого, Сумма, ИмяРаздела, ДополнительныеПараметры);
КонецПроцедуры

Процедура ДобавитьЗначениеВОтбор(Отбор, ЛевоеЗначение, ВидСравнения, ПравоеЗначение)
		  
	ЭлементОтбора = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ЭлементОтбора.ЛевоеЗначение 	= ЛевоеЗначение;
	ЭлементОтбора.ВидСравнения 		= ВидСравнения;
	ЭлементОтбора.ПравоеЗначение 	= ПравоеЗначение;
	ЭлементОтбора.Использование 	= Истина;
	ЭлементОтбора.РежимОтображения 	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ;
	
КонецПроцедуры

Функция ПолучитьСотрудникаПоФизЛицу(ФизическоеЛицо, Организация) Экспорт
	Перем Сотрудник;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	Сотрудники.Ссылка
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.ФизическоеЛицо = &ФизическоеЛицо
	|	И Сотрудники.ГоловнаяОрганизация = &Организация
	|	И НЕ Сотрудники.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	Запрос.УстановитьПараметр("Организация",    Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Сотрудник = Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Сотрудник;
	
КонецФункции

// Функция возвращает строку с описание для пользователя ссылки в интерфейсе, 
// где расположена форма регистров сведений "Ставки налога на имущество" и "Ставки налога на имущество по отдельным основным средствам".
// 
// Возвращаемое значение:
//	 Строка 
//
Функция ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество()
	
	Результат = НСтр("ru='(раздел ""Нормативно-справочная информация"" - ""Организация"" - ""Учетная политика и налоги"")'");
	
	Возврат Результат;
	
КонецФункции // ОписаниеПутиВИнтерфейсеКСтавкамНалогаНаИмущество()

// Функция возвращает строку с описание для пользователя ссылки в интерфейсе, 
// где расположена регистр сведений "Порядок уплаты налогов на местах".
// 
// Возвращаемое значение:
//	 Строка 
//
Функция ОписаниеПутиВИнтерфейсеКПорядкуУплатыНалоговНаМестах()
	
	Результат = НСтр("ru='(раздел ""Нормативно-справочная информация"" - ""Организация"" - ""Учетная политика и налоги"")'");
	
	Возврат Результат;
	
КонецФункции // ОписаниеПутиВИнтерфейсеКПорядкуУплатыНалоговНаМестах()

#КонецОбласти

#КонецОбласти



