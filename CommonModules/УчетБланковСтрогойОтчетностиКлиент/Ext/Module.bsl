////////////////////////////////////////////////////////////////////////////////
// Подсистема "БланкиСтрогойОтчетности".
//
////////////////////////////////////////////////////////////////////////////////

#Область СобытияДействияФормДокументовБСО

Процедура ОткрытьПодборБланковСтрогойОтчетности(Объект, ФормаВладелец) Экспорт
	Имя = ФормаВладелец.ИмяФормы;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("Дата", Объект.Дата);
	ПараметрыФормы.Вставить("ТекущийРегистратор", Объект.Ссылка);
	
	Если Имя = "Документ.ВнутреннееПотреблениеТоваров.Форма.ФормаДокумента" Тогда
		ПараметрыФормы.Вставить("Склад", Объект.Склад);
		ПараметрыФормы.Вставить("ИспользоватьСклад", Истина);
		ПараметрыФормы.Вставить("ИспользоватьФизическоеЛицо", Ложь);
		ПараметрыФормы.Вставить("ИспользоватьПустойСклад", Ложь);
	ИначеЕсли Имя = "Документ.ВозвратТоваровПоставщику.Форма.ФормаДокумента" Тогда
		ПараметрыФормы.Вставить("Склад", Объект.Склад);
		ПараметрыФормы.Вставить("ИспользоватьСклад", Истина);
		ПараметрыФормы.Вставить("ИспользоватьФизическоеЛицо", Ложь);
		ПараметрыФормы.Вставить("ИспользоватьПустойСклад", Ложь);
	ИначеЕсли Имя = "Документ.ПеремещениеТоваров.Форма.ФормаДокумента" Тогда
		ПараметрыФормы.Вставить("Склад", Объект.СкладОтправитель);
		ПараметрыФормы.Вставить("ИспользоватьСклад", Истина);
		ПараметрыФормы.Вставить("ИспользоватьФизическоеЛицо", Ложь);
		ПараметрыФормы.Вставить("ИспользоватьПустойСклад", Ложь);
	ИначеЕсли Имя = "Документ.СписаниеИзЭксплуатации.Форма.ФормаДокумента" Тогда
		ПараметрыФормы.Вставить("ИспользоватьСклад", Ложь);
		ПараметрыФормы.Вставить("ИспользоватьФизическоеЛицо", Истина);
		ПараметрыФормы.Вставить("ИспользоватьПустоеФизическоеЛицо", Ложь);
	ИначеЕсли Имя = "Документ.ПеремещениеВЭксплуатации.Форма.ФормаДокумента" Тогда
		ПараметрыФормы.Вставить("ИспользоватьСклад", Ложь);
		ПараметрыФормы.Вставить("ИспользоватьФизическоеЛицо", Истина);
		ПараметрыФормы.Вставить("ИспользоватьПустоеФизическоеЛицо", Ложь);
	КонецЕсли;
	
	ОткрытьФорму("Обработка.ПодборБСО.Форма.ФормаПодбора", ПараметрыФормы, ФормаВладелец);
КонецПроцедуры

Функция ПустоеЗначениеРеквизитовБСО(Объект, ИмяТЧ = "Товары") Экспорт
	ПустоеЗначениеБСО = Ложь;
	
	Для каждого Стр Из Объект[ИмяТЧ] Цикл
		НачальныйНомер = ?(ПустаяСтрока(Стр.НачальныйНомерБСО), 0, Число(Стр.НачальныйНомерБСО));
		КонечныйНомер = ?(ПустаяСтрока(Стр.КонечныйНомерБСО), 0, Число(Стр.КонечныйНомерБСО));
		
		Если Не ЗначениеЗаполнено(Стр.ТипБСО) Тогда
			ИмяРеквизитаБСО = "ТипБСО";
			НомерСтр = Стр.НомерСтроки - 1;
			ПустоеЗначениеБСО = Истина;
			Прервать;
		ИначеЕсли ПустаяСтрока(Стр.СерияБСО) Тогда
			ИмяРеквизитаБСО = "СерияБСО";
			НомерСтр = Стр.НомерСтроки - 1;
			ПустоеЗначениеБСО = Истина;
			Прервать;
		ИначеЕсли ПустаяСтрока(Стр.НачальныйНомерБСО) Тогда
			ИмяРеквизитаБСО = "НачальныйНомерБСО";
			НомерСтр = Стр.НомерСтроки - 1;
			ПустоеЗначениеБСО = Истина;
			Прервать;
		ИначеЕсли ПустаяСтрока(Стр.КонечныйНомерБСО) Тогда
			ИмяРеквизитаБСО = "КонечныйНомерБСО";
			НомерСтр = Стр.НомерСтроки - 1;
			ПустоеЗначениеБСО = Истина;
			Прервать;
		ИначеЕсли Стр.Количество <> (КонечныйНомер - НачальныйНомер + 1) Тогда
			ИмяРеквизитаБСО = "НачальныйНомерБСО";
			НомерСтр = Стр.НомерСтроки - 1;
			ПустоеЗначениеБСО = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ПустоеЗначениеБСО Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.УстановитьДанные(Объект.Ссылка);
		Сообщение.Текст = "Не корректно заполнены в строке " + (НомерСтр + 1) + " реквизиты БСО";
		Сообщение.Поле = "Объект." + ИмяТЧ + "[" + НомерСтр + "]." + ИмяРеквизитаБСО;
		Сообщение.Сообщить();
		
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

Процедура ВывестиСообщениеПользователю(СтруктураВозврата) Экспорт
	Если СтруктураВозврата.Свойство("ПараметрыОбработки") Тогда
		Для каждого ЭлементСоответствие Из СтруктураВозврата.ПараметрыОбработки Цикл
			Для каждого ЭлементМассива Из ЭлементСоответствие.Значение Цикл
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = ЭлементМассива;
				Сообщение.Сообщить();
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПересчитатьНачальныйКонечныйНомерПриИзменении(Элементы, ИмяТЧ = "Товары", ИмяНачальныйНомерБСО = "НачальныйНомерБСО", ИмяКонечныйНомерБСО = "КонечныйНомерБСО", ИмяКоличество = "Количество",
		Действие = "НачальныйНомерБСОПриИзменении", ПересчитыватьКоличество = Истина) Экспорт
		
	ТекущиеДанные = Элементы[ИмяТЧ].ТекущиеДанные;
	ДлинаСтр = Макс(СтрДлина(ТекущиеДанные[ИмяНачальныйНомерБСО]), СтрДлина(ТекущиеДанные[ИмяКонечныйНомерБСО]));
	
	НачальныйНомер = ?(ПустаяСтрока(ТекущиеДанные[ИмяНачальныйНомерБСО]), 0, Число(ТекущиеДанные[ИмяНачальныйНомерБСО]));
	КонечныйНомер = ?(ПустаяСтрока(ТекущиеДанные[ИмяКонечныйНомерБСО]), 0, Число(ТекущиеДанные[ИмяКонечныйНомерБСО]));
	
	Если Не ПересчитыватьКоличество И ТекущиеДанные[ИмяКоличество] > 0 И Действие = "НачальныйНомерБСОПриИзменении" И НачальныйНомер > 0 Тогда
		КонечныйНомер = НачальныйНомер + ТекущиеДанные[ИмяКоличество] - 1;
	ИначеЕсли Не ПересчитыватьКоличество И ТекущиеДанные[ИмяКоличество] > 0 И Действие = "КонечныйНомерБСОПриИзменении" И КонечныйНомер > 0 Тогда
		НачальныйНомер = КонечныйНомер - ТекущиеДанные[ИмяКоличество] + 1;
	ИначеЕсли ПересчитыватьКоличество И НачальныйНомер > 0 И КонечныйНомер > 0 Тогда
		Количество = КонечныйНомер - НачальныйНомер + 1;
		
		Если Количество <= 0 Тогда
			Если Действие = "НачальныйНомерБСОПриИзменении" Тогда
				ТекущиеДанные[ИмяКонечныйНомерБСО] = ТекущиеДанные[ИмяНачальныйНомерБСО];
			Иначе
				ТекущиеДанные[ИмяНачальныйНомерБСО] = ТекущиеДанные[ИмяКонечныйНомерБСО];
			КонецЕсли;
			
			НачальныйНомер = ?(ПустаяСтрока(ТекущиеДанные[ИмяНачальныйНомерБСО]), 1, Число(ТекущиеДанные[ИмяНачальныйНомерБСО]));
			КонечныйНомер = ?(ПустаяСтрока(ТекущиеДанные[ИмяКонечныйНомерБСО]), 1, Число(ТекущиеДанные[ИмяКонечныйНомерБСО]));
			
			Количество = КонечныйНомер - НачальныйНомер + 1;
		КонецЕсли;
		
		ТекущиеДанные[ИмяКоличество] = Количество;
	КонецЕсли;
	
	Если НачальныйНомер > 0 Тогда
		ТекущиеДанные[ИмяНачальныйНомерБСО] = УчетБланковСтрогойОтчетностиКлиентСервер.ОтформатироватьНомерБланка(НачальныйНомер, ДлинаСтр);
	Иначе
		ТекущиеДанные[ИмяНачальныйНомерБСО] = "";
	КонецЕсли;
	
	Если КонечныйНомер > 0 Тогда
		ТекущиеДанные[ИмяКонечныйНомерБСО] = УчетБланковСтрогойОтчетностиКлиентСервер.ОтформатироватьНомерБланка(КонечныйНомер, ДлинаСтр);
	Иначе
		ТекущиеДанные[ИмяКонечныйНомерБСО] = "";
	КонецЕсли;
КонецПроцедуры

Процедура ХозяйственнаяОперацияПриИзменении(Элементы, Объект, ИмяФормы) Экспорт
	//Если Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика")
	//	Или Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо")
	//	Или Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию") Тогда
	//	
	//	Элементы.РежимИспользованияБСО.Видимость = Истина;
	//Иначе
	//	Объект.РежимИспользованияБСО = Ложь;
	//	Элементы.РежимИспользованияБСО.Видимость = Ложь;
	//КонецЕсли;
	
КонецПроцедуры

// 4D:ERP для Беларуси, ВладимирР, 02.03.2016 20:05:21 
// Серия и номер БСО в накладных, №11113, Учет испорченных БСО, №11114
// {
Процедура ПеречитатьДанныеОткрытойФормы(ДокументОснование) Экспорт
	ПараметрыФормы = Новый Структура("Ключ", ДокументОснование);
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		Форма = ПолучитьФорму("Документ.РеализацияТоваровУслуг.Форма.ФормаДокумента", ПараметрыФормы);
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		Форма = ПолучитьФорму("Документ.ВозвратТоваровПоставщику.Форма.ФормаДокумента", ПараметрыФормы);
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		Форма = ПолучитьФорму("Документ.ПеремещениеТоваров.Форма.ФормаДокумента", ПараметрыФормы);
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ТранспортнаяНакладная") Тогда
		Форма = ПолучитьФорму("Документ.ТранспортнаяНакладная.Форма.ФормаДокумента", ПараметрыФормы);
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Форма.Открыта() Тогда
		Оповестить("БСО_ОтобразитьИзменениеДанных",, Форма);
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьВидимостьИДоступностьТЧИспорченныеНомераБСО(ДокументОбъект, Форма) Экспорт
	Форма.Элементы.ИспорченныеНомераБСО.Видимость = ДокументОбъект.ВидимостьТЧИспорченныеНомераБСО;
	Форма.Элементы.ИспорченныеНомераБСОКоманднаяПанель.Видимость = ДокументОбъект.ВидимостьТЧИспорченныеНомераБСО;
КонецПроцедуры

Процедура ПометитьБланкКакИспорченный(Объект) Экспорт
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("ТипБланка", Объект.ТипБСО);
	СтруктураПоиска.Вставить("Серия", Объект.СерияИсходящегоДокумента);
	СтруктураПоиска.Вставить("Номер", Объект.НомерИсходящегоДокумента);
	
	НайденныеСтроки = Объект.ИспорченныеНомераБСО.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСтроки.Количество() = 0 Тогда
		НоваяСтрока = Объект.ИспорченныеНомераБСО.Добавить();
		НоваяСтрока.ТипБланка = Объект.ТипБСО;
		НоваяСтрока.Серия = Объект.СерияИсходящегоДокумента;
		НоваяСтрока.Номер = Объект.НомерИсходящегоДокумента;
	КонецЕсли;
	
	Объект.ТипБСО = ПредопределенноеЗначение("Справочник.БланкиСтрогойОтчетности.ПустаяСсылка");
	Объект.СерияИсходящегоДокумента = "";
	Объект.НомерИсходящегоДокумента = "";
КонецПроцедуры

// }
// 4D

#КонецОбласти