
#Область ПрограммныйИнтерфейс

// Возвращает направлние деятельности по заданной ссылке
//
// Параметры:
// 		Ссылка - СправочникСсылка - Ссылка на справочник, по которой необходимо получить направление деятельности
//
// Возвращаемое значение:
// 		СправочникСсылка.НаправленияДеятельности - Ссылка на элемент справочника направлений деятельности
//
Функция НаправлениеДеятельности(Ссылка) Экспорт
	
	ВозвращаемоеЗначение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "НаправлениеДеятельности");
	Возврат ?(ЗначениеЗаполнено(ВозвращаемоеЗначение), ВозвращаемоеЗначение, Справочники.НаправленияДеятельности.ПустаяСсылка());
	
КонецФункции

#Область ОтборыПоДаннымУчета

// Возвращает массив элементов справочника по заданному в параметрах отбору
//
// Параметры:
// 		Параметры - Структура - Структура в формате одноименного параметра процедуры "ОбработкаПолученияДанныхВыбора" модуля менеджера справочника
//
// Возвращаемое значение:
// 		Массив - Массив ссылок
//
Функция ЭлементыНМАПоОтборуБУ(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Активы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК Активы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(&ДатаСведений, Регистратор <> &ТекущийРегистратор) КАК ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних
	|		ПО Активы.Ссылка = ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций.СрезПоследних(&ДатаСведений, Регистратор <> &ТекущийРегистратор) КАК СостоянияНМАОрганизацийСрезПоследних
	|		ПО Активы.Ссылка = СостоянияНМАОрганизацийСрезПоследних.НематериальныйАктив
	|ГДЕ
	|	ИСТИНА
	|	И (НЕ &ТребуетсяБУОрганизация
	|			ИЛИ ЕСТЬNULL(ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) В (&БУОрганизация))
	|	И (НЕ &ТребуетсяБУСостояние
	|			ИЛИ ЕСТЬNULL(СостоянияНМАОрганизацийСрезПоследних.Состояние, ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.НеПринятКУчету)) В (&БУСостояние))";
	
	ПоляОтбора = Новый Структура("БУОрганизация, БУСостояние, ТекущийРегистратор, ДатаСведений");
	ПоляОтбора.ДатаСведений = ТекущаяДатаСеанса();
	ЗаполнитьЗначенияСвойств(ПоляОтбора, Параметры);
	Если Параметры.Свойство("Отбор") Тогда
		ЗаполнитьЗначенияСвойств(ПоляОтбора, Параметры.Отбор);
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из ПоляОтбора Цикл
		Запрос.УстановитьПараметр("Требуется"+КлючИЗначение.Ключ, ЗначениеЗаполнено(КлючИЗначение.Значение));
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.НематериальныеАктивы.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

// Возвращает массив элементов справочника по заданному в параметрах отбору
//
// Параметры:
// 		Параметры - Структура - Структура в формате одноименного параметра процедуры "ОбработкаПолученияДанныхВыбора" модуля менеджера справочника
//
// Возвращаемое значение:
// 		Массив - Массив ссылок
//
Функция ЭлементыОСПоОтборуБУ(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Активы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК Активы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ДатаСведений, Регистратор <> &ТекущийРегистратор) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|		ПО Активы.Ссылка = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(&ДатаСведений, Регистратор <> &ТекущийРегистратор) КАК СостоянияОСОрганизацийСрезПоследних
	|		ПО Активы.Ссылка = СостоянияОСОрганизацийСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&ДатаСведений, Регистратор <> &ТекущийРегистратор) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|		ПО Активы.Ссылка = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|ГДЕ
	|	ИСТИНА
	|	И (НЕ &ТребуетсяБУОрганизация
	|			ИЛИ ЕСТЬNULL(ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) В (&БУОрганизация))
	|	И (НЕ &ТребуетсяБУПодразделение
	|			ИЛИ ЕСТЬNULL(МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) В (&БУПодразделение))
	|	И (НЕ &ТребуетсяБУСостояние
	|			ИЛИ ЕСТЬNULL(СостоянияОСОрганизацийСрезПоследних.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&БУСостояние))
	|	И (НЕ &ТребуетсяБУГруппаОС
	|			ИЛИ ЕСТЬNULL(ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ГруппаОС, Активы.ГруппаОС) В (&БУГруппаОС)
	|			ИЛИ Активы.ГруппаОС В (&БУГруппаОС))
	|	И (НЕ &ТребуетсяБУАмортизационнаяГруппа
	|			ИЛИ ЕСТЬNULL(ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.АмортизационнаяГруппа, ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка)) В (&БУАмортизационнаяГруппа))";
	
	ПоляОтбора = Новый Структура("БУОрганизация, БУПодразделение, БУСостояние, БУГруппаОС, БУАмортизационнаяГруппа, ТекущийРегистратор, ДатаСведений");
	ПоляОтбора.ДатаСведений = ТекущаяДатаСеанса();
	ЗаполнитьЗначенияСвойств(ПоляОтбора, Параметры);
	Если Параметры.Свойство("Отбор") Тогда
		ЗаполнитьЗначенияСвойств(ПоляОтбора, Параметры.Отбор);
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из ПоляОтбора Цикл
		Запрос.УстановитьПараметр("Требуется"+КлючИЗначение.Ключ, ЗначениеЗаполнено(КлючИЗначение.Значение));
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.ОбъектыЭксплуатации.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Новый ФиксированныйМассив(Результат.Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецФункции

//++ НЕ УТКА

// Возвращает массив элементов справочника по заданному в параметрах отбору
//
// Параметры:
// 		Параметры - Структура - Структура в формате одноименного параметра процедуры "ОбработкаПолученияДанныхВыбора" модуля менеджера справочника
//
// Возвращаемое значение:
// 		Массив - Массив ссылок
//
Функция ЭлементыНМАПоОтборуМФУ(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Активы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК Активы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НематериальныеАктивыМеждународныйУчет.СрезПоследних(&ДатаСведений, Регистратор <> &ТекущийРегистратор) КАК ДанныеУчета
	|		ПО Активы.Ссылка = ДанныеУчета.НематериальныйАктив
	|ГДЕ
	|	ИСТИНА
	|	И (НЕ &ТребуетсяМФУОрганизация
	|			ИЛИ ЕСТЬNULL(ДанныеУчета.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) В (&МФУОрганизация))
	|	И (НЕ &ТребуетсяМФУПодразделение
	|			ИЛИ ЕСТЬNULL(ДанныеУчета.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) В (&МФУПодразделение))
	|	И (НЕ &ТребуетсяМФУСостояние
	|			ИЛИ ЕСТЬNULL(ДанныеУчета.Состояние, ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.НеПринятКУчету)) В (&МФУСостояние))";
	
	ПоляОтбора = Новый Структура("МФУОрганизация, МФУПодразделение, МФУСостояние, ТекущийРегистратор, ДатаСведений");
	ПоляОтбора.ДатаСведений = ТекущаяДатаСеанса();
	ЗаполнитьЗначенияСвойств(ПоляОтбора, Параметры);
	Если Параметры.Свойство("Отбор") Тогда
		ЗаполнитьЗначенияСвойств(ПоляОтбора, Параметры.Отбор);
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из ПоляОтбора Цикл
		Запрос.УстановитьПараметр("Требуется"+КлючИЗначение.Ключ, ЗначениеЗаполнено(КлючИЗначение.Значение));
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.НематериальныеАктивы.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

// Возвращает массив элементов справочника по заданному в параметрах отбору
//
// Параметры:
// 		Параметры - Структура - Структура в формате одноименного параметра процедуры "ОбработкаПолученияДанныхВыбора" модуля менеджера справочника
//
// Возвращаемое значение:
// 		Массив - Массив ссылок
//
Функция ЭлементыОСПоОтборуМФУ(Параметры) Экспорт
	
	ЗаполнитьОтборыОСМФУ(Параметры);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Активы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК Активы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСредстваМеждународныйУчет.СрезПоследних(&ДатаСведений, Регистратор <> &ТекущийРегистратор) КАК ДанныеУчета
	|		ПО Активы.Ссылка = ДанныеУчета.ОсновноеСредство
	|ГДЕ
	|	ИСТИНА
	|	И (НЕ &ТребуетсяМФУОрганизация
	|			ИЛИ ЕСТЬNULL(ДанныеУчета.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) В (&МФУОрганизация))
	|	И (НЕ &ТребуетсяМФУПодразделение
	|			ИЛИ ЕСТЬNULL(ДанныеУчета.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) В (&МФУПодразделение))
	|	И (НЕ &ТребуетсяМФУСостояние
	|			ИЛИ ЕСТЬNULL(ДанныеУчета.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) В (&МФУСостояние))
	|	И (НЕ &ТребуетсяМФУВидАктива
	|			ИЛИ ЕСТЬNULL(ДанныеУчета.ВидАктива, ЗНАЧЕНИЕ(Перечисление.ВидыВнеоборотныхАктивов.ПустаяСсылка)) В (&МФУВидАктива))";
	
	ПоляОтбора = Новый Структура("МФУОрганизация, МФУПодразделение, МФУСостояние, МФУВидАктива, ТекущийРегистратор, ДатаСведений");
	ПоляОтбора.ДатаСведений = ТекущаяДатаСеанса();
	ЗаполнитьЗначенияСвойств(ПоляОтбора, Параметры);
	Если Параметры.Свойство("Отбор") Тогда
		ЗаполнитьЗначенияСвойств(ПоляОтбора, Параметры.Отбор);
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из ПоляОтбора Цикл
		Запрос.УстановитьПараметр("Требуется"+КлючИЗначение.Ключ, ЗначениеЗаполнено(КлючИЗначение.Значение));
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.ОбъектыЭксплуатации.ПустаяСсылка();
	КонецЕсли;
	
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

// Инициализирует параметры обработчика получения данных выбора
//
// Параметры:
// 		Параметры - Структура - Структура в формате одноименного параметра процедуры "ОбработкаПолученияДанныхВыбора" модуля менеджера справочника
//
Процедура ЗаполнитьОтборыОСМФУ(Параметры) Экспорт
	
	Если Не Параметры.Свойство("Отбор") Тогда
		Параметры.Вставить("Отбор", Новый Структура)
	КонецЕсли;
	
	ВидОС = Перечисления.ВидыВнеоборотныхАктивов.ОсновноеСредство;
	ВидИИ = Перечисления.ВидыВнеоборотныхАктивов.ИнвестиционноеИмущество;
	
	Если Параметры.Свойство("МФУНаправлениеПеревода") Тогда
		Если Параметры.МФУНаправлениеПеревода = ВидОС Тогда
			Параметры.Отбор.Вставить("МФУВидАктива", ВидИИ);
		Иначе
			Параметры.Отбор.Вставить("МФУВидАктива", ВидОС);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//-- НЕ УТКА

// Возвращает список значений показателями наработок, принадлежащих классу объектов эксплуатации
//
// Параметры:
// 		ОбъектОтбора - СправочникСсылка.ОбъектыЭксплуатации, СправочникСсылка.УзлыОбъектаЭксплуатации, СправочникСсылка.КлассыОбъектовЭксплуатации - Объект отбора
// 		ПолучатьИсточникиНаработки - Булево - Признак необходимости получать показатели регистрируемые от источника
// 		ПоказательАмортизации - СправочникСсылка.ПоказателиНаработки - Текущее значение
//
// Возвращаемое значение:
// 		СписокЗначений - Список данных выбора
//
Функция ДанныеВыбораПоказателейНаработкиПоОтбору(Знач ОбъектОтбора, ПолучатьИсточникиНаработки, ПоказательАмортизации) Экспорт
	
	ДанныеВыбора = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"
	//++ НЕ УТКА
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	&ОбъектОтбора КАК Класс
	|ПОМЕСТИТЬ Классы
	|ГДЕ
	|	&ИспользоватьУправлениеРемонтами
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Объекты.Класс
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК Объекты
	|ГДЕ
	|	Объекты.Ссылка = &ОбъектОтбора
	|	И &ИспользоватьУправлениеРемонтами
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Узлы.Класс
	|ИЗ
	|	Справочник.УзлыОбъектовЭксплуатации КАК Узлы
	|ГДЕ
	|	Узлы.Ссылка = &ОбъектОтбора
	|	И &ИспользоватьУправлениеРемонтами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ПоказателиНаработки.ПоказательНаработки КАК ПоказательНаработки,
	|	ПоказателиНаработки.РегистрироватьОтИсточника КАК РегистрироватьОтИсточника
	|ПОМЕСТИТЬ Показатели
	|ИЗ
	|	Справочник.КлассыОбъектовЭксплуатации.ПоказателиНаработки КАК ПоказателиНаработки
	|ГДЕ
	|	ПоказателиНаработки.Ссылка В
	|			(ВЫБРАТЬ
	|				Классы.Класс
	|			ИЗ
	|				Классы)
	|	И ВЫБОР
	|			КОГДА &ПолучатьИсточникиНаработки
	|				ТОГДА НЕ ПоказателиНаработки.РегистрироватьОтИсточника
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	//-- НЕ УТКА
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПервоначальныеСведенияОС.ПоказательНаработки КАК Значение,
	|	ПервоначальныеСведенияОС.ПоказательНаработки.ПометкаУдаления КАК ПометкаУдаления
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			,
	|			ОсновноеСредство = &ОбъектОтбора
	//++ НЕ УТКА
	|				И НЕ ПоказательНаработки В
	|						(ВЫБРАТЬ
	|							Показатели.ПоказательНаработки
	|						ИЗ
	|							Показатели КАК Показатели)
	//-- НЕ УТКА
	|	) КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	НЕ &ПоказательАмортизации
	//++ НЕ УТКА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Показатели.ПоказательНаработки,
	|	Показатели.ПоказательНаработки.ПометкаУдаления
	|ИЗ
	|	Показатели КАК Показатели
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ПолучатьИсточникиНаработки
	|				ТОГДА НЕ Показатели.РегистрироватьОтИсточника
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	//-- НЕ УТКА
	|";
	
	Запрос.УстановитьПараметр("ОбъектОтбора", ОбъектОтбора);
	Запрос.УстановитьПараметр("ПолучатьИсточникиНаработки", ПолучатьИсточникиНаработки);
	Запрос.УстановитьПараметр("ПоказательАмортизации", ПоказательАмортизации);
	Запрос.УстановитьПараметр("ИспользоватьУправлениеРемонтами", ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеРемонтами"));
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат ДанныеВыбора;
	КонецЕсли;
	
	ШаблонПолейСтруктуры = "Значение, ПометкаУдаления";
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтруктураЭлемента = Новый Структура(ШаблонПолейСтруктуры);
		ЗаполнитьЗначенияСвойств(СтруктураЭлемента, Выборка);
		ДанныеВыбора.Добавить(СтруктураЭлемента);
		
	КонецЦикла;
	
	Возврат ДанныеВыбора;
	
КонецФункции

#КонецОбласти

#КонецОбласти