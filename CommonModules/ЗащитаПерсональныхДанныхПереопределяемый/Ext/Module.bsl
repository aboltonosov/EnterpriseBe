////////////////////////////////////////////////////////////////////////////////
// Подсистема "Защита персональных данных".
// Модуль предназначен для размещения переопределяемых процедур подсистемы.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура обеспечивает сбор сведений о хранении данных, 
// относящихся к персональным
//
// Параметры:
//		ТаблицаСведений - таблица значений с полями:
//			Объект 			- строка, содержащая полное имя объекта метаданных,
//			ПоляРегистрации - строка, в которой перечислены имена полей регистрации, 
//								отдельные поля регистрации отделяются запятой,
//								альтернативные - символом "|",
//			ПоляДоступа		- строка, в которой перечислены через запятую имена полей доступа.
//			ОбластьДанных	- строка с идентификатором области данных, необязательно для заполнения.
//
Процедура ЗаполнитьСведенияОПерсональныхДанных(ТаблицаСведений) Экспорт
	
	//++ НЕ УТ
	ЗарплатаКадры.ЗаполнитьСведенияОПерсональныхДанных(ТаблицаСведений);
	
	ТаблицаСведенийСтрока = ТаблицаСведений.Найти("Документ.ОтражениеЗарплатыВФинансовомУчете", "Объект");
	Пока ТаблицаСведенийСтрока <> Неопределено Цикл
		
		ТаблицаСведений.Удалить(ТаблицаСведенийСтрока);
		ТаблицаСведенийСтрока = ТаблицаСведений.Найти("Документ.ОтражениеЗарплатыВФинансовомУчете", "Объект")
		
	КонецЦикла;
	
	НовыеСведения = ТаблицаСведений.Добавить();
	НовыеСведения.Объект			= "Документ.ОтражениеЗарплатыВФинансовомУчете";
	НовыеСведения.ПоляРегистрации	= "НачисленнаяЗарплатаИВзносыПоФизлицам.ФизическоеЛицо,УдержаннаяЗарплата.ФизическоеЛицо";
	НовыеСведения.ПоляДоступа		= "НачисленнаяЗарплатаИВзносыПоФизлицам.Сумма,УдержаннаяЗарплата.Сумма";
	НовыеСведения.ОбластьДанных		= "Доходы";
	
	//-- НЕ УТ
	
	// СтандартныеПодсистемы.ФизическиеЛица
	Если ТаблицаСведений.Найти("Справочник.ФизическиеЛица", "Объект") = Неопределено Тогда
		НовыеСведения = ТаблицаСведений.Добавить();
		НовыеСведения.Объект			= "Справочник.ФизическиеЛица";
		НовыеСведения.ПоляРегистрации	= "Ссылка";
		НовыеСведения.ПоляДоступа		= "ДатаРождения,Пол,ИНН";
		НовыеСведения.ОбластьДанных		= "ЛичныеДанные";
		
		НовыеСведения = ТаблицаСведений.Добавить();
		НовыеСведения.Объект			= "Справочник.ФизическиеЛица";
		НовыеСведения.ПоляРегистрации	= "Ссылка";
		НовыеСведения.ПоляДоступа		= "КонтактнаяИнформация.ЗначенияПолей,КонтактнаяИнформация.Представление,КонтактнаяИнформация.Регион,КонтактнаяИнформация.Город,КонтактнаяИнформация.АдресЭП,КонтактнаяИнформация.НомерТелефона,КонтактнаяИнформация.НомерТелефонаБезКодов";
		НовыеСведения.ОбластьДанных		= "КонтактнаяИнформация";
	КонецЕсли;
	
	Если ТаблицаСведений.Найти("РегистрСведений.ДокументыФизическихЛиц", "Объект") = Неопределено Тогда
		НовыеСведения = ТаблицаСведений.Добавить();
		НовыеСведения.Объект			= "РегистрСведений.ДокументыФизическихЛиц";
		НовыеСведения.ПоляРегистрации	= "Физлицо";
		НовыеСведения.ПоляДоступа		= "ВидДокумента,Серия,Номер,ДатаВыдачи,СрокДействия,КемВыдан,КодПодразделения,Представление";
		НовыеСведения.ОбластьДанных		= "ПаспортныеДанные";
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ФизическиеЛица
	
КонецПроцедуры

// Процедура обеспечивает составление коллекции областей персональных данных.
//
// Параметры:
//		ОбластиПерсональныхДанных - таблица значений с полями:
//			Имя - идентификатор области данных.
//			Представление - пользовательское представление области данных.
//			Родитель - идентификатор родительской области данных.
//
Процедура ЗаполнитьОбластиПерсональныхДанных(ОбластиПерсональныхДанных) Экспорт
	
	//++ НЕ УТ 
	ЗарплатаКадры.ЗаполнитьОбластиПерсональныхДанных(ОбластиПерсональныхДанных);
	//-- НЕ УТ
	
	// СтандартныеПодсистемы.ФизическиеЛица
	Если ОбластиПерсональныхДанных.Найти("ЛичныеДанные", "Имя") = Неопределено Тогда
		НоваяОбласть = ОбластиПерсональныхДанных.Добавить();
		НоваяОбласть.Имя = "ЛичныеДанные";
		НоваяОбласть.Представление = НСтр("ru = 'Личные данные'");
	КонецЕсли;
	
	Если ОбластиПерсональныхДанных.Найти("ПаспортныеДанные", "Имя") = Неопределено Тогда
		НоваяОбласть = ОбластиПерсональныхДанных.Добавить();
		НоваяОбласть.Имя = "ПаспортныеДанные";
		НоваяОбласть.Представление = НСтр("ru = 'Паспортные данные'");
		НоваяОбласть.Родитель = "ЛичныеДанные";
	КонецЕсли;
	
	Если ОбластиПерсональныхДанных.Найти("КонтактнаяИнформация", "Имя") = Неопределено Тогда
		НоваяОбласть = ОбластиПерсональныхДанных.Добавить();
		НоваяОбласть.Имя = "КонтактнаяИнформация";
		НоваяОбласть.Представление = НСтр("ru = 'Адреса и телефоны'");
		НоваяОбласть.Родитель = "ЛичныеДанные";
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ФизическиеЛица
	
КонецПроцедуры

// Процедура вызывается при заполнении формы "Согласие на обработку персональных данных"
//  данными, переданных в качестве параметров, субъектов.
//
// Параметры:
//		СубъектыПерсональныхДанных 	- данные формы коллекция, содержащая сведения о субъектах.
//		ДатаАктуальности			- дата, на которую нужно заполнить сведения.
//
Процедура ДополнитьДанныеСубъектовПерсональныхДанных(СубъектыПерсональныхДанных, ДатаАктуальности) Экспорт
	
	Для Каждого СтрокаСубъект Из СубъектыПерсональныхДанных Цикл
		Если ТипЗнч(СтрокаСубъект.Субъект) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			СтрокаСубъект.ФИО 			   = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаСубъект.Субъект, "Наименование");
			СтрокаСубъект.ПаспортныеДанные = РегистрыСведений.ДокументыФизическихЛиц.ДокументУдостоверяющийЛичностьФизлица(СтрокаСубъект.Субъект, ДатаАктуальности);
			СтрокаСубъект.Адрес 		   = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(СтрокаСубъект.Субъект, Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура вызывается при заполнении формы "Согласие на обработку персональных данных"
//  данными организации.
//
// Параметры:
//		Организация					- организация - оператор персональных данных.
//		ДанныеОрганизации			- структура с данными об организации (адрес, ФИО ответственного и т.д.).
//		ДатаАктуальности			- дата, на которую нужно заполнить сведения.
//
Процедура ДополнитьДанныеОрганизацииОператораПерсональныхДанных(Организация, ДанныеОрганизации, ДатаАктуальности) Экспорт
	
	ДанныеОрганизации.Вставить(
		"АдресОрганизации",
		УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(
			Организация,
			Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации, ДатаАктуальности));
	ДанныеОрганизации.Вставить(
		"ОтветственныйЗаОбработкуПерсональныхДанных",
		ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(
			ОтветственныеЛицаСервер.ПолучитьДанныеОтветственногоЛица(
				Организация,
				ДатаАктуальности,
				Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы
			).ФизическоеЛицо,
			ДатаАктуальности));
	
КонецПроцедуры

#КонецОбласти
