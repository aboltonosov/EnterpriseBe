////////////////////////////////////////////////////////////////////////////////
// <Заголовок модуля: краткое описание и условия применения модуля.>
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Функция Счет(УсловныйКодСчета) Экспорт
	
	ПС = ПланыСчетов.Хозрасчетный;
	Результат = ПС.ПустаяСсылка();
	// 4D:ERP для Беларуси, Екатерина, 07.05.2015 11:21:05 
	// Локализация плана счетов, №8969
	// {
	Если УсловныйКодСчета = "01" Тогда
		Результат = ПС.ОсновныеСредства;
	ИначеЕсли УсловныйКодСчета = "01.01" Тогда
		Результат = ПС.ОСвОрганизации;
	ИначеЕсли УсловныйКодСчета = "01.02" Тогда
		Результат = ПС.ОСБезГосРегистрации;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "01.03" Тогда
		Результат = ПС.АрендованноеИмущество;
	ИначеЕсли УсловныйКодСчета = "01.09" Тогда
		Результат = ПС.ВыбытиеОС;
	// }
	// 4D
	ИначеЕсли УсловныйКодСчета = "02" Тогда
		Результат = ПС.АмортизацияОсновныхСредств;
	ИначеЕсли УсловныйКодСчета = "02.01" Тогда
		Результат = ПС.АмортизацияОС_01;
	ИначеЕсли УсловныйКодСчета = "02.02" Тогда
		Результат = ПС.АмортизацияОС_03;
	ИначеЕсли УсловныйКодСчета = "02.03" Тогда
		Результат = ПС.АмортизацияАрендованногоИмущества;
	ИначеЕсли УсловныйКодСчета = "03" Тогда
		Результат = ПС.ДоходныеВложенияВ_МЦ;
	ИначеЕсли УсловныйКодСчета = "03.01" Тогда
		Результат = ПС.ИнвестиционнаяНедвижимость;
	ИначеЕсли УсловныйКодСчета = "03.02" Тогда
		Результат = ПС.ПредметыФинансовойАренды;
	ИначеЕсли УсловныйКодСчета = "03.03" Тогда
		Результат = ПС.ПрочиеДоходныеВложения;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "03.04" Тогда
		Результат = ПС.МЦ_ПредоставленныеВоВременноеВладение;
	ИначеЕсли УсловныйКодСчета = "03.09" Тогда
		Результат = ПС.ВыбытиеМЦ;
	//}
	// 4D
	ИначеЕсли УсловныйКодСчета = "04" Тогда
		Результат = ПС.НематериальныеАктивы;
	ИначеЕсли УсловныйКодСчета = "04.01" Тогда
		Результат = ПС.НематериальныеАктивыОрганизации;
	ИначеЕсли УсловныйКодСчета = "04.02" Тогда
		Результат = ПС.РасходыНаНИОКР;
	ИначеЕсли УсловныйКодСчета = "05" Тогда
		Результат = ПС.АмортизацияНематериальныхАктивов;
	ИначеЕсли УсловныйКодСчета = "06" Тогда
		Результат = ПС.ДолгосрочныеФинансовыеВложения;
	ИначеЕсли УсловныйКодСчета = "06.01" Тогда
		Результат = ПС.ДолгосрочныеФинансовыеВложенияВЦенныеБумаги;
	ИначеЕсли УсловныйКодСчета = "06.02" Тогда
		Результат = ПС.ПредоставленныеДолгосрочныеЗаймы;
	ИначеЕсли УсловныйКодСчета = "06.03" Тогда
		Результат = ПС.ВкладыПоДоговоруОСовместнойДеятельности;
	ИначеЕсли УсловныйКодСчета = "07" Тогда
		Результат = ПС.ОборудованиеКУстановкеИСтроительныеМатериалы;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "07.01" Тогда
		Результат = ПС.ОборудованиеКУстановке;
	ИначеЕсли УсловныйКодСчета = "07.02" Тогда
		Результат = ПС.ОборудованиеКУстановкеПереданноеВМонтаж;
	ИначеЕсли УсловныйКодСчета = "07.03" Тогда
		Результат = ПС.СтроительныеМатериалы;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "08" Тогда
		Результат = ПС.ВложенияВоВнеоборотныеАктивы;
	ИначеЕсли УсловныйКодСчета = "08.01" Тогда
		Результат = ПС.ПриобретениеИСозданиеОсновныхСредств;
	ИначеЕсли УсловныйКодСчета = "08.01.1" Тогда	
		Результат = ПС.ПриобретениеОбъектовОсновныхСредств;
	ИначеЕсли УсловныйКодСчета = "08.01.2" Тогда	
		Результат = ПС.СтроительствоОбъектовОсновныхСредств;
	ИначеЕсли УсловныйКодСчета = "08.02" Тогда
		Результат = ПС.ПриобретениеИСозданиеИнвестиционнойНедвижимости;
	ИначеЕсли УсловныйКодСчета = "08.02.1" Тогда	
		Результат = ПС.ПриобретениеИнвестиционнойНедвижимости;
	ИначеЕсли УсловныйКодСчета = "08.02.2" Тогда	
		Результат = ПС.СозданиеИнвестиционнойНедвижимости;
	ИначеЕсли УсловныйКодСчета = "08.03" Тогда
		Результат = ПС.ПриобретениеПредметовФинансовойАренды;	
	ИначеЕсли УсловныйКодСчета = "08.04" Тогда
		Результат = ПС.ПриобретениеНематериальныхАктивов;	
	ИначеЕсли УсловныйКодСчета = "08.05" Тогда
		Результат = ПС.ПриобретениеИСозданиеИныхДолгосрочныхАктивов;
	ИначеЕсли УсловныйКодСчета = "08.05.1" Тогда	
		Результат = ПС.ПриобретениеИныхДолгосрочныхАктивов;
	ИначеЕсли УсловныйКодСчета = "08.05.2" Тогда	
		Результат = ПС.СозданиеИныхДолгосрочныхАктивов;
	ИначеЕсли УсловныйКодСчета = "09" Тогда
		Результат = ПС.ОтложенныеНалоговыеАктивы;
	ИначеЕсли УсловныйКодСчета = "10" Тогда
		Результат = ПС.Материалы;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "10.01" Тогда
		Результат = ПС.СырьеИМатериалы;
	ИначеЕсли УсловныйКодСчета = "10.02" Тогда
		Результат = ПС.ПокупныеПолуфабрикатыИКомплектующие;
	ИначеЕсли УсловныйКодСчета = "10.03" Тогда
		Результат = ПС.Топливо;
	ИначеЕсли УсловныйКодСчета = "10.04" Тогда
		Результат = ПС.Тара;
	ИначеЕсли УсловныйКодСчета = "10.05" Тогда
		Результат = ПС.ЗапасныеЧасти;
	ИначеЕсли УсловныйКодСчета = "10.06" Тогда
		Результат = ПС.ПрочиеМатериалы;
	ИначеЕсли УсловныйКодСчета = "10.07" Тогда
		Результат = ПС.МатериалыПереданныеВПереработку;
	ИначеЕсли УсловныйКодСчета = "10.08" Тогда
		Результат = ПС.ВременныеСооружения;
	ИначеЕсли УсловныйКодСчета = "10.09" Тогда
		Результат = ПС.ИнвентарьИХозяйственныеПринадлежности;
	ИначеЕсли УсловныйКодСчета = "10.10" Тогда
		Результат = ПС.СпецоснасткаИСпецодеждаНаСкладе;
	ИначеЕсли УсловныйКодСчета = "10.11" Тогда
		Результат = ПС.СпецоснасткаИСпецодеждаВЭксплуатации;
	ИначеЕсли УсловныйКодСчета = "10.11.1" Тогда
		Результат = ПС.СпецодеждаВЭксплуатации;
	ИначеЕсли УсловныйКодСчета = "10.11.2" Тогда
		Результат = ПС.СпецоснасткаВЭксплуатации;
	ИначеЕсли УсловныйКодСчета = "10.11.3" Тогда
		Результат = ПС.ИнвентарьВЭксплуатации;
	ИначеЕсли УсловныйКодСчета = "10.13" Тогда
		Результат = ПС.ЛомИОтходыСодержащиеДрагоценныеМеталлы;
	ИначеЕсли УсловныйКодСчета = "10.14" Тогда
		Результат = ПС.ДенежныеДокументы;
	ИначеЕсли УсловныйКодСчета = "10.ДР" Тогда
		Результат = ПС.ДопРасходыМатериалы;
	//} 
	// 4D
	ИначеЕсли УсловныйКодСчета = "11" Тогда
		Результат = ПС.ЖивотныеНаВыращиванииИОткорме;
	ИначеЕсли УсловныйКодСчета = "14" Тогда
		Результат = ПС.РезервыПодСнижениеСтоимостиМЦ;
	ИначеЕсли УсловныйКодСчета = "14.01" Тогда
		Результат = ПС.РезервыПодСнижениеСтоимостиМатериалов;
	ИначеЕсли УсловныйКодСчета = "14.02" Тогда
		Результат = ПС.РезервыПодСнижениеСтоимостиТоваров;
	ИначеЕсли УсловныйКодСчета = "14.03" Тогда
		Результат = ПС.РезервыПодСнижениеСтоимостиГотовойПродукции;
	ИначеЕсли УсловныйКодСчета = "14.04" Тогда
		Результат = ПС.РезервыПодСнижениеСтоимостиНезавершенногоПроизводства;
	ИначеЕсли УсловныйКодСчета = "15" Тогда
		Результат = ПС.ЗаготовлениеИПриобретениеМЦ;
	ИначеЕсли УсловныйКодСчета = "15.01" Тогда
		Результат = ПС.ЗаготовлениеИПриобретениеМатериалов;
	ИначеЕсли УсловныйКодСчета = "15.02" Тогда
		Результат = ПС.ПриобретениеТоваров;
	ИначеЕсли УсловныйКодСчета = "16" Тогда
		Результат = ПС.ОтклонениеВСтоимостиМЦ;
	ИначеЕсли УсловныйКодСчета = "16.01" Тогда
		Результат = ПС.ОтклонениеВСтоимостиМатериалов;
	ИначеЕсли УсловныйКодСчета = "16.02" Тогда
		Результат = ПС.ОтклонениеВСтоимостиТоваров;
	ИначеЕсли УсловныйКодСчета = "18" Тогда
		Результат = ПС.НДСпоПриобретеннымЦенностям;
	ИначеЕсли УсловныйКодСчета = "18.01" Тогда
		Результат = ПС.НДСприПриобретенииОсновныхСредств;
	ИначеЕсли УсловныйКодСчета = "18.02" Тогда
		Результат = ПС.НДСпоПриобретеннымНематериальнымАктивам;
	ИначеЕсли УсловныйКодСчета = "18.03" Тогда
		Результат = ПС.НДСпоПриобретеннымМПЗ;
	ИначеЕсли УсловныйКодСчета = "18.04" Тогда
		Результат = ПС.НДСпоПриобретеннымУслугам;
	ИначеЕсли УсловныйКодСчета = "18.05" Тогда
		Результат = ПС.НДСуплачиваемыйТаможеннымОрганам;
	ИначеЕсли УсловныйКодСчета = "18.06" Тогда
		Результат = ПС.НДСПоТоварамРеализованнымПоСтавке0;
	ИначеЕсли УсловныйКодСчета = "18.07" Тогда
		Результат = ПС.НДСприСтроительствеОсновныхСредств;
	ИначеЕсли УсловныйКодСчета = "18.08" Тогда
		Результат = ПС.НДСУплачиваемыйНалоговымАгентом;
	ИначеЕсли УсловныйКодСчета = "18.09" Тогда
		Результат = ПС.НДСУплачиваемыйПриИмпортеИзТаможенногоСоюза;
	ИначеЕсли УсловныйКодСчета = "20" Тогда
		Результат = ПС.ОсновноеПроизводство;
	ИначеЕсли УсловныйКодСчета = "21" Тогда
		Результат = ПС.Полуфабрикаты;
	ИначеЕсли УсловныйКодСчета = "22" Тогда
		Результат = ПС.СтраховыеВыплаты;
	ИначеЕсли УсловныйКодСчета = "22.01" Тогда
		Результат = ПС.СтраховыеВыплатыПоПрямомуСтрахованию;
	ИначеЕсли УсловныйКодСчета = "22.02" Тогда
		Результат = ПС.СтраховыеВыплатыПоДосрочноПрекращенным;
	ИначеЕсли УсловныйКодСчета = "22.03" Тогда
		Результат = ПС.ВозмещениДолиУбытковПоРискамПринятым;
	ИначеЕсли УсловныйКодСчета = "22.04" Тогда
		Результат = ПС.ВозмещениеДолиУбытковПоРискамПереданным;
	ИначеЕсли УсловныйКодСчета = "23" Тогда
		Результат = ПС.ВспомогательныеПроизводства;
	ИначеЕсли УсловныйКодСчета = "25" Тогда
		Результат = ПС.ОбщепроизводственныеРасходы;
	ИначеЕсли УсловныйКодСчета = "26" Тогда
		Результат = ПС.ОбщехозяйственныеРасходы;
	ИначеЕсли УсловныйКодСчета = "28" Тогда
		Результат = ПС.БракВПроизводстве;
	ИначеЕсли УсловныйКодСчета = "29" Тогда
		Результат = ПС.ОбслуживающиеПроизводства;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "40" Тогда
		Результат = ПС.ВыпускПродукции;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "41" Тогда
		Результат = ПС.Товары;
	ИначеЕсли УсловныйКодСчета = "41.01" Тогда
		Результат = ПС.ТоварыНаСкладах;
	ИначеЕсли УсловныйКодСчета = "41.02" Тогда
		Результат = ПС.ТоварыВРозничнойТорговлеГруппа;
	ИначеЕсли УсловныйКодСчета = "41.02.1" Тогда
		Результат = ПС.ТоварыВРозничнойТорговле;
	ИначеЕсли УсловныйКодСчета = "41.02.2" Тогда
		Результат = ПС.ТоварыВРозничнойТорговлеВПродажныхЦенахАТТ;
	ИначеЕсли УсловныйКодСчета = "41.02.3" Тогда
		Результат = ПС.ТоварыВРозничнойТорговлеВПродажныхЦенахНТТ;
	ИначеЕсли УсловныйКодСчета = "41.03" Тогда
		Результат = ПС.ТараПодТоваромИПорожняя;
	ИначеЕсли УсловныйКодСчета = "41.04" Тогда
		Результат = ПС.ПокупныеИзделия;
	ИначеЕсли УсловныйКодСчета = "41.05" Тогда
		Результат = ПС.ТоварыПереданныеДляПодготовкиНаСторону;
	ИначеЕсли УсловныйКодСчета = "41.06" Тогда
		Результат = ПС.ПредметыПроката;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "41.ДР" Тогда
		Результат = ПС.ДопРасходыТовары;
	ИначеЕсли УсловныйКодСчета = "41.К" Тогда
		Результат = ПС.КорректировкаТоваровПрошлогоПериода;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "42" Тогда
		Результат = ПС.ТорговаяНаценка;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "42.01" Тогда
		Результат = ПС.ТорговаяНаценкаАТТ;
	ИначеЕсли УсловныйКодСчета = "42.02" Тогда
		Результат = ПС.ТорговаяНаценкаНТТ;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "43" Тогда
		Результат = ПС.ГотоваяПродукция;
	ИначеЕсли УсловныйКодСчета = "44" Тогда
		Результат = ПС.РасходыНаПродажу;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "44.01" Тогда
		Результат = ПС.ИздержкиОбращения;
	ИначеЕсли УсловныйКодСчета = "44.02" Тогда
		Результат = ПС.КоммерческиеРасходы;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "45" Тогда
		Результат = ПС.ТоварыОтгруженные;
	ИначеЕсли УсловныйКодСчета = "45.01" Тогда
		Результат = ПС.ПокупныеТоварыОтгруженные;
	ИначеЕсли УсловныйКодСчета = "45.02" Тогда
		Результат = ПС.ГотоваяПродукцияОтгруженная;
	ИначеЕсли УсловныйКодСчета = "45.03" Тогда
		Результат = ПС.ПрочиеТоварыОтгруженные;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "45.04" Тогда
		Результат = ПС.ПереданныеОбъектыНедвижимости;
	ИначеЕсли УсловныйКодСчета = "46" Тогда
		Результат = ПС.ВыполненныеЭтапыПоНезавершеннымРаботам;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "47" Тогда
		Результат = ПС.ДолгосрочныеАктивыПредназначенныеДляРеализации;
	ИначеЕсли УсловныйКодСчета = "50" Тогда
		Результат = ПС.Касса;
	ИначеЕсли УсловныйКодСчета = "50.01" Тогда
		Результат = ПС.КассаОрганизации;
	ИначеЕсли УсловныйКодСчета = "50.02" Тогда
		Результат = ПС.ОперационнаяКасса;
	ИначеЕсли УсловныйКодСчета = "50.04" Тогда
		Результат = ПС.КассаФилиала;
	ИначеЕсли УсловныйКодСчета = "50.21" Тогда
		Результат = ПС.КассаОрганизацииВал;
	ИначеЕсли УсловныйКодСчета = "51" Тогда
		Результат = ПС.РасчетныеСчета;
	ИначеЕсли УсловныйКодСчета = "52" Тогда
		Результат = ПС.ВалютныеСчета;
	ИначеЕсли УсловныйКодСчета = "55" Тогда
		Результат = ПС.СпециальныеСчета;
	ИначеЕсли УсловныйКодСчета = "55.01" Тогда
		Результат = ПС.ДепозитныеСчета;
	ИначеЕсли УсловныйКодСчета = "55.02" Тогда
		Результат = ПС.СчетаВДрагоценныхМеталлах;
	ИначеЕсли УсловныйКодСчета = "55.03" Тогда
		Результат = ПС.ПрочиеСпециальныеСчета;
	ИначеЕсли УсловныйКодСчета = "55.21" Тогда
		Результат = ПС.ДепозитныеСчетаВал;
	ИначеЕсли УсловныйКодСчета = "55.23" Тогда
		Результат = ПС.ПрочиеСпециальныеСчетаВал;
	ИначеЕсли УсловныйКодСчета = "57" Тогда
		Результат = ПС.ПереводыВПути_;
	ИначеЕсли УсловныйКодСчета = "57.01" Тогда
		Результат = ПС.ПереводыВПути;
	ИначеЕсли УсловныйКодСчета = "57.02" Тогда
		Результат = ПС.ПриобретениеИностраннойВалюты;
	ИначеЕсли УсловныйКодСчета = "57.03" Тогда
		Результат = ПС.РеализацияИностраннойВалюты;
	ИначеЕсли УсловныйКодСчета = "57.11" Тогда
		Результат = ПС.ПереводыВПутиВал;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "57.99" Тогда
		Результат = ПС.ПродажиПоПлатежнымКартам;
	//}
	// 4D
	ИначеЕсли УсловныйКодСчета = "58" Тогда
		Результат = ПС.ФинансовыеВложения;
	ИначеЕсли УсловныйКодСчета = "58.01" Тогда
		Результат = ПС.КраткосрочныеФинансовыеВложенияВЦенныеБумаги;
	ИначеЕсли УсловныйКодСчета = "58.02" Тогда
		Результат = ПС.ПредоставленныеЗаймы;
	ИначеЕсли УсловныйКодСчета = "59" Тогда
		Результат = ПС.РезервыПодОбесценениеФинансовыхВложений;
	ИначеЕсли УсловныйКодСчета = "60.01" Тогда
		Результат = ПС.РасчетыСПоставщиками;
	ИначеЕсли УсловныйКодСчета = "60.02" Тогда
		Результат = ПС.РасчетыПоАвансамВыданным;
	ИначеЕсли УсловныйКодСчета = "60.03" Тогда
		Результат = ПС.ВекселяВыданные;
	ИначеЕсли УсловныйКодСчета = "60.21" Тогда
		Результат = ПС.РасчетыСПоставщикамиВал;
	ИначеЕсли УсловныйКодСчета = "60.22" Тогда
		Результат = ПС.РасчетыПоАвансамВыданнымВал;
	ИначеЕсли УсловныйКодСчета = "60.31" Тогда
		Результат = ПС.РасчетыСПоставщикамиУЕ;
	ИначеЕсли УсловныйКодСчета = "60.32" Тогда
		Результат = ПС.РасчетыПоАвансамВыданнымУЕ;
	ИначеЕсли УсловныйКодСчета = "60.41" Тогда
		Результат = ПС.Аккредитивы;
	ИначеЕсли УсловныйКодСчета = "60.42" Тогда
		Результат = ПС.АккредитивыВал;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "62" Тогда
		Результат = ПС.РасчетыСПокупателямиИЗаказчиками;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "62.01" Тогда
		Результат = ПС.РасчетыСПокупателями;
	ИначеЕсли УсловныйКодСчета = "62.02" Тогда
		Результат = ПС.РасчетыПоАвансамПолученным;
	ИначеЕсли УсловныйКодСчета = "62.03" Тогда
		Результат = ПС.ВекселяПолученные;
	ИначеЕсли УсловныйКодСчета = "62.21" Тогда
		Результат = ПС.РасчетыСПокупателямиВал;
	ИначеЕсли УсловныйКодСчета = "62.22" Тогда
		Результат = ПС.РасчетыПоАвансамПолученнымВал;
	ИначеЕсли УсловныйКодСчета = "62.31" Тогда
		Результат = ПС.РасчетыСПокупателямиУЕ;
	ИначеЕсли УсловныйКодСчета = "62.32" Тогда
		Результат = ПС.РасчетыПоАвансамПолученнымУЕ;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "62.Р" Тогда
		Результат = ПС.РасчетыСРозничнымиПокупателями;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "63" Тогда
		Результат = ПС.РезервыПоСомнительнымДолгам;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "65" Тогда
		Результат = ПС.ОтложенныеНалоговыеОбязательства;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "66" Тогда
		Результат = ПС.РасчетыПоКраткосрочнымКредитамИЗаймам;
	ИначеЕсли УсловныйКодСчета = "66.01" Тогда
		Результат = ПС.КраткосрочныеКредиты;
	ИначеЕсли УсловныйКодСчета = "66.02" Тогда
		Результат = ПС.КраткосрочныеЗаймы;
	ИначеЕсли УсловныйКодСчета = "66.03" Тогда
		Результат = ПС.РасчетыПоПроцентамПоКраткосрочнымКредитамИЗаймам;
	ИначеЕсли УсловныйКодСчета = "66.21" Тогда
		Результат = ПС.КраткосрочныеКредитыВал;
	ИначеЕсли УсловныйКодСчета = "66.22" Тогда
		Результат = ПС.КраткосрочныеЗаймыВал;
	ИначеЕсли УсловныйКодСчета = "66.23" Тогда
		Результат = ПС.РасчетыПоПроцентамПоКраткосрочнымКредитамИЗаймамВал;
	ИначеЕсли УсловныйКодСчета = "67" Тогда
		Результат = ПС.РасчетыПоДолгосрочнымКредитамИЗаймам;
	ИначеЕсли УсловныйКодСчета = "67.01" Тогда
		Результат = ПС.КраткосрочныеКредиты;
	ИначеЕсли УсловныйКодСчета = "67.02" Тогда
		Результат = ПС.КраткосрочныеЗаймы;
	ИначеЕсли УсловныйКодСчета = "67.03" Тогда
		Результат = ПС.РасчетыПоПроцентамПоКраткосрочнымКредитамИЗаймам;
	ИначеЕсли УсловныйКодСчета = "67.21" Тогда
		Результат = ПС.КраткосрочныеКредитыВал;
	ИначеЕсли УсловныйКодСчета = "67.22" Тогда
		Результат = ПС.КраткосрочныеЗаймыВал;
	ИначеЕсли УсловныйКодСчета = "67.23" Тогда
		Результат = ПС.РасчетыПоПроцентамПоКраткосрочнымКредитамИЗаймамВал;
	ИначеЕсли УсловныйКодСчета = "68" Тогда
		Результат = ПС.РасчетыПоНалогам;
	ИначеЕсли УсловныйКодСчета = "68.01" Тогда
		Результат = ПС.НалогиВклСебестоимость;
	ИначеЕсли УсловныйКодСчета = "68.01.1" Тогда
		Результат = ПС.ЭкологическийНалог;
	ИначеЕсли УсловныйКодСчета = "68.01.2" Тогда
		Результат = ПС.ЗемельныйНалог;
	ИначеЕсли УсловныйКодСчета = "68.01.3" Тогда
		Результат = ПС.НалогНаНедвижимость;
	ИначеЕсли УсловныйКодСчета = "68.02" Тогда
		Результат = ПС.НалогиИзВыручки;
	ИначеЕсли УсловныйКодСчета = "68.02.1" Тогда
		Результат = ПС.НДС;
	ИначеЕсли УсловныйКодСчета = "68.02.2" Тогда
		Результат = ПС.Акцизы;
	ИначеЕсли УсловныйКодСчета = "68.02.3" Тогда
		Результат = ПС.МестныеЦелевыеСборы;
	ИначеЕсли УсловныйКодСчета = "68.03" Тогда
		Результат = ПС.НалогиИзПрибыли;
	ИначеЕсли УсловныйКодСчета = "68.03.1" Тогда
		Результат = ПС.НалогНаПрибыль;
	ИначеЕсли УсловныйКодСчета = "68.03.2" Тогда
		Результат = ПС.НалогНаДоходы;
	ИначеЕсли УсловныйКодСчета = "68.04" Тогда
		Результат = ПС.НДФЛ;
	ИначеЕсли УсловныйКодСчета = "68.05" Тогда
		Результат = ПС.ПрочиеНалогиИСборы_;
	ИначеЕсли УсловныйКодСчета = "68.05.1" Тогда
		Результат = ПС.ПрочиеНалогиИСборы;
	ИначеЕсли УсловныйКодСчета = "68.05.2" Тогда
		Результат = ПС.ЕНприУСН;
	ИначеЕсли УсловныйКодСчета = "68.06" Тогда
		Результат = ПС.НДСпоЭкспортуКВозмещению;
	ИначеЕсли УсловныйКодСчета = "68.07" Тогда
		Результат = ПС.НДСНалоговогоАгента;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "68.08" Тогда
		Результат = ПС.НДСТаможенныйСоюзКУплате;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "69" Тогда
		Результат = ПС.РасчетыПоСоциальномуСтрахованию;
	ИначеЕсли УсловныйКодСчета = "69.01" Тогда
		Результат = ПС.ФСС;
	ИначеЕсли УсловныйКодСчета = "69.02" Тогда
		Результат = ПС.ПФР;
	ИначеЕсли УсловныйКодСчета = "70" Тогда
		Результат = ПС.РасчетыСПерсоналомПоОплатеТруда;
	ИначеЕсли УсловныйКодСчета = "71" Тогда
		Результат = ПС.РасчетыСПодотчетнымиЛицами_;
	ИначеЕсли УсловныйКодСчета = "71.01" Тогда
		Результат = ПС.РасчетыСПодотчетнымиЛицами;
	ИначеЕсли УсловныйКодСчета = "71.21" Тогда
		Результат = ПС.РасчетыСПодотчетнымиЛицамиВал;
	ИначеЕсли УсловныйКодСчета = "73" Тогда
		Результат = ПС.РасчетыСПерсоналомПоПрочимОперациям;
	ИначеЕсли УсловныйКодСчета = "73.01" Тогда
		Результат = ПС.РасчетыПоПредоставленнымЗаймам;
	ИначеЕсли УсловныйКодСчета = "73.02" Тогда
		Результат = ПС.РасчетыПоВозмещениюМатериальногоУщерба;
	ИначеЕсли УсловныйКодСчета = "73.03" Тогда
		Результат = ПС.РасчетыПоПрочимОперациям;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "75" Тогда
		Результат = ПС.РасчетыСУчредителями;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "75.01" Тогда
		Результат = ПС.РасчетыПоВкладамВУставныйКапитал;
	ИначеЕсли УсловныйКодСчета = "75.02" Тогда
		Результат = ПС.РасчетыПоВыплатеДоходов;
	ИначеЕсли УсловныйКодСчета = "76" Тогда
		Результат = ПС.РасчетыСРазнымиДебиторамиИКредиторами;
	ИначеЕсли УсловныйКодСчета = "76.01" Тогда
		Результат = ПС.РасчетыПоИсполнительнымДокументамРаботников;
	ИначеЕсли УсловныйКодСчета = "76.02" Тогда
		Результат = ПС.РасчетыПоИмущественномуИЛичномуСтрахованию;
	ИначеЕсли УсловныйКодСчета = "76.03" Тогда
		Результат = ПС.РасчетыПоПретензиям;
	ИначеЕсли УсловныйКодСчета = "76.04" Тогда
		Результат = ПС.РасчетыПоПричитающимсяДивидендам;
	ИначеЕсли УсловныйКодСчета = "76.05" Тогда
		Результат = ПС.РасчетыПоДепонированнымСуммам;
	ИначеЕсли УсловныйКодСчета = "76.06" Тогда
		Результат = ПС.РасчетыПоДоговоруДоверительногоУправленияИмуществом;
	ИначеЕсли УсловныйКодСчета = "76.07" Тогда
		Результат = ПС.РасчетыСвязанныеСВыбывающейГруппой;
	ИначеЕсли УсловныйКодСчета = "76.08" Тогда
		Результат = ПС.РасчетыПоОбязательномуСтрахованию;
	ИначеЕсли УсловныйКодСчета = "76.09" Тогда
		Результат = ПС.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами;
	ИначеЕсли УсловныйКодСчета = "76.22" Тогда
		Результат = ПС.РасчетыПоИмущественномуИЛичномуСтрахованиюВал;
	ИначеЕсли УсловныйКодСчета = "76.23" Тогда
		Результат = ПС.РасчетыПоПретензиямВал;
	ИначеЕсли УсловныйКодСчета = "76.29" Тогда
		Результат = ПС.ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиВал;
	ИначеЕсли УсловныйКодСчета = "76.33" Тогда
		Результат = ПС.РасчетыПоПретензиямУЕ;
	ИначеЕсли УсловныйКодСчета = "76.39" Тогда
		Результат = ПС.ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиУЕ;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "76.АВ" Тогда
		Результат = ПС.НДСпоАвансамИПредоплатам;
	ИначеЕсли УсловныйКодСчета = "76.ВА" Тогда
		Результат = ПС.НДСпоАвансамИПредоплатамВыданным;
	ИначеЕсли УсловныйКодСчета = "76.Н" Тогда
		Результат = ПС.РасчетыПоНДСотложенномуДляУплатыВБюджет;
	ИначеЕсли УсловныйКодСчета = "76.НА" Тогда
		Результат = ПС.РасчетыНДСНалоговогоАгента;
	ИначеЕсли УсловныйКодСчета = "76.ОК" Тогда
		Результат = ПС.ТоварыКОформлениюОтчетовКомитенту;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "77" Тогда
		Результат = ПС.ОтложенныеНалоговыеОбязательства;
	ИначеЕсли УсловныйКодСчета = "79" Тогда
		Результат = ПС.ВнутрихозяйственныеРасчеты;
	ИначеЕсли УсловныйКодСчета = "80" Тогда
		Результат = ПС.УставныйКапитал;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "80.01" Тогда
		Результат = ПС.УставныйКапитал_ОбыкновенныеАкции;
	ИначеЕсли УсловныйКодСчета = "80.02" Тогда
		Результат = ПС.УставныйКапитал_ПривилегированныеАкции;
	ИначеЕсли УсловныйКодСчета = "80.03" Тогда
		Результат = ПС.УставныйКапитал_ПрочийКапитал;
	//}
	// 4D
	ИначеЕсли УсловныйКодСчета = "81" Тогда
		Результат = ПС.СобственныеАкции;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "81.01" Тогда
		Результат = ПС.СобственныеАкции_ОбыкновенныеАкции;
	ИначеЕсли УсловныйКодСчета = "81.02" Тогда
		Результат = ПС.СобственныеАкции_ПривилегированныеАкции;
	ИначеЕсли УсловныйКодСчета = "81.03" Тогда
		Результат = ПС.СобственныеАкции_ПрочийКапитал;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "82" Тогда
		Результат = ПС.РезервныйКапитал;
	ИначеЕсли УсловныйКодСчета = "82.01" Тогда
		Результат = ПС.РезервыОбразованныеВСоответствииСЗаконодательством;
	ИначеЕсли УсловныйКодСчета = "82.02" Тогда
		Результат = ПС.РезервыОбразованныеВСоответствииСУчредительнымиДокументами;
	ИначеЕсли УсловныйКодСчета = "83" Тогда
		Результат = ПС.ДобавочныйКапитал;
	ИначеЕсли УсловныйКодСчета = "83.01" Тогда
		Результат = ПС.ПриростСтоимостиПоПереоценке;
	ИначеЕсли УсловныйКодСчета = "83.01.1" Тогда
		Результат = ПС.ПриростСтоимостиИмуществаПоПереоценке;
	ИначеЕсли УсловныйКодСчета = "83.01.2" Тогда
		Результат = ПС.ПриростСтоимостиНМАПоПереоценке;
	ИначеЕсли УсловныйКодСчета = "83.01.3" Тогда
		Результат = ПС.ПриростСтоимостиПрочихВнеоборотныхАктивоПоПереоценке;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "83.02" Тогда
		Результат = ПС.ЭмиссионныйДоходОтВыпускаОбыкновенныхАкций;
	ИначеЕсли УсловныйКодСчета = "83.03" Тогда
		Результат = ПС.ЭмиссионныйДоходОтВыпускаПривилегированныхАкций;
	ИначеЕсли УсловныйКодСчета = "83.04" Тогда
		Результат = ПС.ДругиеИсточники;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "84" Тогда
		Результат = ПС.НераспределеннаяПрибыль;
	ИначеЕсли УсловныйКодСчета = "84.01" Тогда
		Результат = ПС.ПрибыльПодлежащаяРаспределению;
	ИначеЕсли УсловныйКодСчета = "84.02" Тогда
		Результат = ПС.УбытокПодлежащийПокрытию;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "84.03" Тогда
		Результат = ПС.НераспределеннаяПрибыльВОбращении;
	ИначеЕсли УсловныйКодСчета = "84.04" Тогда
		Результат = ПС.НераспределеннаяПрибыльИспользованная;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "86" Тогда
		Результат = ПС.ЦелевоеФинансирование;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "86.01" Тогда
		Результат = ПС.ЦелевоеФинансированиеИзБюджета;
	ИначеЕсли УсловныйКодСчета = "86.02" Тогда
		Результат = ПС.ПрочееЦелевоеФинансированиеИПоступления;
	//}		
	// 4D
	ИначеЕсли УсловныйКодСчета = "90"Тогда
		Результат = ПС.Продажи;
	ИначеЕсли УсловныйКодСчета = "90.01" Тогда
		Результат = ПС.Выручка;
	ИначеЕсли УсловныйКодСчета = "90.01.1" Тогда
		Результат = ПС.ВыручкаНеЕНВД;
	ИначеЕсли УсловныйКодСчета = "90.01.2" Тогда
		Результат = ПС.ВыручкаЕНВД;
	ИначеЕсли УсловныйКодСчета = "90.02" Тогда
		Результат = ПС.Продажи_НДС;
	ИначеЕсли УсловныйКодСчета = "90.03" Тогда
		Результат = ПС.ПрочиеНалогиИСборыИзВыручки;
	ИначеЕсли УсловныйКодСчета = "90.04" Тогда
		Результат = ПС.СебестоимостьПродаж;
	ИначеЕсли УсловныйКодСчета = "90.04.1" Тогда
		Результат = ПС.СебестоимостьПродажНеЕНВД;
	ИначеЕсли УсловныйКодСчета = "90.04.2" Тогда
		Результат = ПС.СебестоимостьПродажЕНВД;
	ИначеЕсли УсловныйКодСчета = "90.05" Тогда
		Результат = ПС.Продажи_УправленческиеРасходы;
	ИначеЕсли УсловныйКодСчета = "90.05.1" Тогда
		Результат = ПС.Продажи_УправленческиеРасходыНеЕНВД;
	ИначеЕсли УсловныйКодСчета = "90.05.2" Тогда
		Результат = ПС.Продажи_УправленческиеРасходыЕНВД;
	ИначеЕсли УсловныйКодСчета = "90.06" Тогда
		Результат = ПС.Продажи_РасходыНаПродажу;
	ИначеЕсли УсловныйКодСчета = "90.06.1" Тогда
		Результат = ПС.Продажи_РасходыНаПродажуНеЕНВД;
	ИначеЕсли УсловныйКодСчета = "90.06.2" Тогда
		Результат = ПС.Продажи_РасходыНаПродажуЕНВД;
	ИначеЕсли УсловныйКодСчета = "90.07" Тогда
		Результат = ПС.Продажи_ПрочиеДоходы;
	ИначеЕсли УсловныйКодСчета = "90.08" Тогда
		Результат = ПС.Продажи_НДС_ПрочиеДоходы;
	ИначеЕсли УсловныйКодСчета = "90.09" Тогда
		Результат = ПС.ПрочиеНалогиИСборыИзПрочихДоходов;
	ИначеЕсли УсловныйКодСчета = "90.10" Тогда
		Результат = ПС.Продажи_ПрочиеРасходы;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "90.11" Тогда
		Результат = ПС.ПрибыльУбытокОтПродаж;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "91" Тогда
		Результат = ПС.ПрочиеДоходыИРасходы;
	ИначеЕсли УсловныйКодСчета = "91.01" Тогда
		Результат = ПС.ПрочиеДоходы;
	ИначеЕсли УсловныйКодСчета = "91.02" Тогда
		Результат = ПС.Операционные_НДС;
	ИначеЕсли УсловныйКодСчета = "91.03" Тогда
		Результат = ПС.Операционные_Прочие;
	ИначеЕсли УсловныйКодСчета = "91.04" Тогда
		Результат = ПС.ПрочиеРасходы;
	ИначеЕсли УсловныйКодСчета = "91.05" Тогда
		Результат = ПС.СальдоПрочихДоходовИРасходов;
	ИначеЕсли УсловныйКодСчета = "93" Тогда
		Результат = ПС.СтраховыеВзносы;
	ИначеЕсли УсловныйКодСчета = "94" Тогда
		Результат = ПС.НедостачиИПотериОтПорчиЦенностей;
	ИначеЕсли УсловныйКодСчета = "95" Тогда
		Результат = ПС.СтраховыеРезервы;
	ИначеЕсли УсловныйКодСчета = "96" Тогда
		Результат = ПС.РезервыПредстоящихРасходов;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "96.01" Тогда
		Результат = ПС.ОценочныеОбязательстваПоВознаграждениямРаботникам;
	ИначеЕсли УсловныйКодСчета = "96.01.1" Тогда
		Результат = ПС.ОценочныеОбязательстваПоВознаграждениям;
	ИначеЕсли УсловныйКодСчета = "96.01.2" Тогда
		Результат = ПС.ОценочныеОбязательстваПостраховымВзносам;
	ИначеЕсли УсловныйКодСчета = "96.09" Тогда
		Результат = ПС.РезервыПредстоящихРасходовПрочие;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "97" Тогда
		Результат = ПС.РасходыБудущихПериодов;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "97.01" Тогда
		Результат = ПС.РасходыНаОплатуТрудаБудущихПериодов;
	ИначеЕсли УсловныйКодСчета = "97.02" Тогда
		Результат = ПС.РасходыБудущихПериодовНаДобровольноеСтрахованиеРаботников;
	ИначеЕсли УсловныйКодСчета = "97.03" Тогда
		Результат = ПС.ПрочиеРасходыБудущихПериодов;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "98" Тогда
		Результат = ПС.ДоходыБудущихПериодов;
	ИначеЕсли УсловныйКодСчета = "98.01" Тогда
		Результат = ПС.ДоходыПолученныеВСчетБудущихПериодов;
	ИначеЕсли УсловныйКодСчета = "98.02" Тогда
		Результат = ПС.БезвозмездныеПоступления;
	ИначеЕсли УсловныйКодСчета = "98.03" Тогда
		Результат = ПС.ПредстоящиеПоступленияПоНедостачамВыявленнымЗаПрошлыеГоды;
	ИначеЕсли УсловныйКодСчета = "98.04" Тогда
		Результат = ПС.РазницаМеждуСуммойПодлежащейВзысканиюСВиновныхЛицИБалансовойСтоимостьюПоНедостачамЦенностей;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "98.05" Тогда
		Результат = ПС.КурсоваяРазницаДБП;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "99" Тогда
		Результат = ПС.ПрибылиИУбытки;
	ИначеЕсли УсловныйКодСчета = "99.01" Тогда
		Результат = ПС.ПрибылиИУбыткиБезНалогаНаПрибыль;
	ИначеЕсли УсловныйКодСчета = "99.01.1" Тогда
		Результат = ПС.ПрибылиИУбыткиНеЕНВД;
	ИначеЕсли УсловныйКодСчета = "99.01.2" Тогда
		Результат = ПС.ПрибылиИУбыткиЕНВД;
	ИначеЕсли УсловныйКодСчета = "99.02" Тогда
		Результат = ПС.ПрибылиИУбытки_НалогНаПрибыль;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "99.02.1" Тогда
		Результат = ПС.УсловныйРасходПоНалогуНаПрибыль;
	ИначеЕсли УсловныйКодСчета = "99.02.2" Тогда
		Результат = ПС.УсловныйДоходПоНалогуНаПрибыль;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "99.02.3" Тогда
		Результат = ПС.ПостоянноеНалоговоеОбязательство;
	ИначеЕсли УсловныйКодСчета = "99.02.4" Тогда
		Результат = ПС.ПрибылиИУбыткиОтПересчетаОНА_ОНО;
	ИначеЕсли УсловныйКодСчета = "99.09" Тогда
		Результат = ПС.ПрочиеПрибылиИУбытки;
	ИначеЕсли УсловныйКодСчета = "001" Тогда
		Результат = ПС.АрендованныеОсновныеСредства;
	ИначеЕсли УсловныйКодСчета = "002" Тогда
		Результат = ПС.ТМЦпринятыеНаОтветственноеХранение;
	ИначеЕсли УсловныйКодСчета = "003" Тогда
		Результат = ПС.МатериалыПринятыеВПереработку_;
	ИначеЕсли УсловныйКодСчета = "003.01" Тогда
		Результат = ПС.МатериалыПринятыеВПереработку;
	ИначеЕсли УсловныйКодСчета = "003.02" Тогда
		Результат = ПС.МатериалыПринятыеВПереработкуВПроизводстве;
	ИначеЕсли УсловныйКодСчета = "004" Тогда
		Результат = ПС.ТоварыПринятыеНаКомиссию;
	ИначеЕсли УсловныйКодСчета = "004.01" Тогда
		Результат = ПС.ТоварыНаСкладе;
	ИначеЕсли УсловныйКодСчета = "004.02" Тогда
		Результат = ПС.ТоварыПереданныеНаКомиссию;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "004.К" Тогда
		Результат = ПС.КорректировкаКомТоваровПрошлогоПериода;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "005" Тогда
		Результат = ПС.ОборудованиеПринятоеДляМонтажа;
	ИначеЕсли УсловныйКодСчета = "006" Тогда
		Результат = ПС.БланкиСтрогойОтчетности;
	// 4D:ERP для Беларуси, АлексейЧ , 08.11.2017 11:09:49 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ИначеЕсли УсловныйКодСчета = "006.01" Тогда
		Результат = ПС.БланкиСтрогойОтчетности_006_01;
	ИначеЕсли УсловныйКодСчета = "006.02" Тогда
		Результат = ПС.БланкиСтрогойОтчетности_006_02;
	//}	
	// 4D
	ИначеЕсли УсловныйКодСчета = "007" Тогда
		Результат = ПС.СписаннаяВУбытокЗадолженностьДебиторов;
	ИначеЕсли УсловныйКодСчета = "008" Тогда
		Результат = ПС.ОбеспеченияОбязательствПолученные;
	ИначеЕсли УсловныйКодСчета = "009" Тогда
		Результат = ПС.ОбеспеченияОбязательствВыданные;
	ИначеЕсли УсловныйКодСчета = "011" Тогда
		Результат = ПС.ОсновныеСредстваСданныеВАренду;
	ИначеЕсли УсловныйКодСчета = "014" Тогда
		Результат = ПС.ПотеряСтоимостиОС;
	ИначеЕсли УсловныйКодСчета = "016" Тогда
		Результат = ПС.ИмуществоНаходящеесяВСовместномВладении;
	ИначеЕсли УсловныйКодСчета = "017" Тогда
		Результат = ПС.ИменныеПриватизационныеЧекиИмущество;
	Иначе
		ВызватьИсключение "Не обнаружен счет с кодом " + УсловныйКодСчета;
	КонецЕсли;
	// }
	// 4D
	
	Возврат Результат;
	
КонецФункции

Функция СальдоИОборотыПоСчетам(ПараметрыИтогов) Экспорт
	
	Организация   = ПараметрыИтогов.Организация;
	НачалоПериода = ПараметрыИтогов.НачалоПериода;
	КонецПериода  = ПараметрыИтогов.КонецПериода;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ХозрасчетныйОстаткиИОбороты.Счет.Вид КАК ВидСчета,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт КАК СуммаНачальныйОстатокКт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокДт КАК СуммаНачальныйРазвернутыйОстатокДт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокКт КАК СуммаНачальныйРазвернутыйОстатокКт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаОборотДт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаОборотКт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокДт КАК СуммаКонечныйРазвернутыйОстатокДт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокКт КАК СуммаКонечныйРазвернутыйОстатокКт
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, ПЕРИОД, , , , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |ИТОГИ
	               |	СУММА(СуммаНачальныйОстатокДт),
	               |	СУММА(СуммаНачальныйОстатокКт),
	               |	СУММА(СуммаНачальныйРазвернутыйОстатокДт),
	               |	СУММА(СуммаНачальныйРазвернутыйОстатокКт),
	               |	СУММА(СуммаОборотДт),
	               |	СУММА(СуммаОборотКт),
	               |	СУММА(СуммаКонечныйОстатокДт),
	               |	СУММА(СуммаКонечныйОстатокКт),
	               |	СУММА(СуммаКонечныйРазвернутыйОстатокДт),
	               |	СУММА(СуммаКонечныйРазвернутыйОстатокКт)
	               |ПО
	               |	Счет ТОЛЬКО ИЕРАРХИЯ";
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	
	Запрос.Текст = ТекстЗапроса;
	
	ИтоговаяТаблица = Запрос.Выполнить().Выгрузить();
	ИтоговаяТаблица.Индексы.Добавить("Счет");
	
	Возврат ИтоговаяТаблица;
	
КонецФункции

Функция СальдоИОборотыПоСчетамИСубконто(ПараметрыИтогов) Экспорт
	
	Организация   = ПараметрыИтогов.Организация;
	НачалоПериода = ПараметрыИтогов.НачалоПериода;
	КонецПериода  = ПараметрыИтогов.КонецПериода;
	
	Если ТипЗнч(ПараметрыИтогов.Счета) <> Тип("Массив") Тогда
		ВидыСубконто = Новый Массив;
		ВидыСубконто.Добавить(ПараметрыИтогов.Счета);
	Иначе
		Счета = ПараметрыИтогов.Счета;
	КонецЕсли;
	
	Если ТипЗнч(ПараметрыИтогов.ВидыСубконто) <> Тип("Массив") Тогда
		ВидыСубконто = Новый Массив;
		ВидыСубконто.Добавить(ПараметрыИтогов.ВидыСубконто);
	Иначе
		ВидыСубконто = ПараметрыИтогов.ВидыСубконто;
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет КАК Счет,
	               |	ХозрасчетныйОстаткиИОбороты.Счет.Вид КАК ВидСчета,
	               |	%1
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт) КАК СуммаНачальныйОстатокДт,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт) КАК СуммаНачальныйОстатокКт,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокДт) КАК СуммаНачальныйРазвернутыйОстатокДт,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйРазвернутыйОстатокКт) КАК СуммаНачальныйРазвернутыйОстатокКт,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт) КАК СуммаКонечныйОстатокДт,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт) КАК СуммаКонечныйОстатокКт,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокДт) КАК СуммаКонечныйРазвернутыйОстатокДт,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйРазвернутыйОстатокКт) КАК СуммаКонечныйРазвернутыйОстатокКт
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, ПЕРИОД, , Счет В (&Счета), &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ХозрасчетныйОстаткиИОбороты.Счет,
	               |	ХозрасчетныйОстаткиИОбороты.Счет.Вид";
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	
	Запрос.УстановитьПараметр("Счета", Счета);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	
	СтрокаЗамены1 = "";
	
	Для Инд = 1 По ВидыСубконто.Количество() Цикл
		СтрокаЗамены1 = СтрокаЗамены1
		              + ?(Инд <> 1, Символы.ПС + Символы.Таб, "")
		              + "КОЛИЧЕСТВО(ХозрасчетныйОстаткиИОбороты.Субконто" + Инд + ") КАК Субконто" + Инд + ",";
	КонецЦикла;
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса, СтрокаЗамены1);
	
	ИтоговаяТаблица = Запрос.Выполнить().Выгрузить();
	ИтоговаяТаблица.Индексы.Добавить("Счет");
	
	Возврат ИтоговаяТаблица;
	
КонецФункции

Функция ОборотыМеждуСчетами(ПараметрыИтогов) Экспорт
	
	Организация   = ПараметрыИтогов.Организация;
	НачалоПериода = ПараметрыИтогов.НачалоПериода;
	КонецПериода  = ПараметрыИтогов.КонецПериода;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОбороты.Счет КАК Счет,
	               |	ХозрасчетныйОбороты.Счет.Вид КАК ВидСчета,
	               |	ХозрасчетныйОбороты.КорСчет КАК КорСчет,
	               |	ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаКорОборотДт
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, ПЕРИОД, , , Организация = &Организация, , ) КАК ХозрасчетныйОбороты";
	
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	
	ИтоговаяТаблица = Запрос.Выполнить().Выгрузить();
	ИтоговаяТаблица.Индексы.Добавить("Счет");
	ИтоговаяТаблица.Индексы.Добавить("КорСчет");
	
	Возврат ИтоговаяТаблица;
	
КонецФункции

Функция ОборотыМеждуСчетамиПоАналитике(ПараметрыИтогов) Экспорт
	
	Организация   = ПараметрыИтогов.Организация;
	НачалоПериода = ПараметрыИтогов.НачалоПериода;
	КонецПериода  = ПараметрыИтогов.КонецПериода;
	
	Счет    = ПараметрыИтогов.Счет;
	Если ТипЗнч(Счет) = Тип("Строка") Тогда
		Счет = Счет(Счет); // Приведение к ссылочному типу
	КонецЕсли;
	
	КорСчет = ПараметрыИтогов.КорСчет;
	Если ТипЗнч(КорСчет) = Тип("Строка") Тогда
		КорСчет = Счет(КорСчет); // Приведение к ссылочному типу
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК СуммаКорОборотДт
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, ПЕРИОД, Счет = &Счет, %1, Организация = &Организация, КорСчет = &КорСчет, %2) КАК ХозрасчетныйОбороты
	               |%3";
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	
	Запрос.УстановитьПараметр("Счет",    Счет);
	Запрос.УстановитьПараметр("КорСчет", КорСчет);
	
	СтрокаЗамены3 = ""; // условие запроса
	
	СтрокаЗамены1 = ""; // виды субконто
	Если ПараметрыИтогов.Свойство("Субконто") Тогда
		ВидыСубконто = Новый Массив;
		Для Инд = 1 По ПараметрыИтогов.Субконто.Количество() Цикл
			ОписаниеСубконто = ПараметрыИтогов.Субконто[Инд - 1];
			ВидыСубконто.Добавить(ОписаниеСубконто.ВидСубконто);
			
			Если ЗначениеЗаполнено(ОписаниеСубконто.Отбор) Тогда
				СтрокаЗамены3 = Символы.Таб + ?(ЗначениеЗаполнено(СтрокаЗамены3), "И ", "")
				              + "ХозрасчетныйОбороты.Субконто" + Инд + " = &Субконто" + Инд;
				Запрос.УстановитьПараметр("Субконто" + Инд, ОписаниеСубконто.Отбор);
			КонецЕсли;
		КонецЦикла;
		
		СтрокаЗамены1 = "&ВидыСубконто";
		Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	КонецЕсли;
	
	СтрокаЗамены2 = ""; // виды корреспондирующих субконто
	Если ПараметрыИтогов.Свойство("КорСубконто") Тогда
		ВидыКорСубконто = Новый Массив;
		Для Инд = 1 По ПараметрыИтогов.КорСубконто.Количество() Цикл
			ОписаниеСубконто = ПараметрыИтогов.КорСубконто[Инд -1];
			ВидыКорСубконто.Добавить(ОписаниеСубконто.ВидСубконто);
			
			Если ЗначениеЗаполнено(ОписаниеСубконто.Отбор) Тогда
				СтрокаЗамены3 = Символы.Таб + ?(ЗначениеЗаполнено(СтрокаЗамены3), "И ", "")
				              + "ХозрасчетныйОбороты.КорСубконто" + Инд + " = &КорСубконто" + Инд;
				Запрос.УстановитьПараметр("КорСубконто" + Инд, ОписаниеСубконто.Отбор);
			КонецЕсли;
		КонецЦикла;
		
		СтрокаЗамены2 = "&ВидыКорСубконто";
		Запрос.УстановитьПараметр("ВидыКорСубконто", ВидыКорСубконто);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтрокаЗамены3) Тогда
		СтрокаЗамены3 = "ГДЕ" + Символы.ПС + СтрокаЗамены3;
	КонецЕсли;
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса, СтрокаЗамены1, СтрокаЗамены2, СтрокаЗамены3);
	
	ИтоговаяТаблица = Запрос.Выполнить().Выгрузить();
	
	Возврат ИтоговаяТаблица.Итог("СуммаКорОборотДт");
	
КонецФункции

Функция ОБ(Знач Счет, Знач КорСчет, ОборотыМеждуСчетами) Экспорт
	
	СчетаДт = Новый Массив;
	СчетаКт = Новый Массив;
	
	Если ТипЗнч(Счет) = Тип("Строка") Тогда
		Если Прав(Счет, 1) = "*" Тогда
			Счет = Лев(Счет, СтрДлина(Счет) - 1);
			Счет = Счет(Счет);
			СубСчета = БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет);
			Для Каждого СубСчет Из СубСчета Цикл
				СчетаДт.Добавить(СубСчет);
			КонецЦикла;
		Иначе
			Счет = Счет(Счет);
			СчетаДт.Добавить(Счет);
		КонецЕсли;
	Иначе
		СчетаДт.Добавить(Счет);
	КонецЕсли;
	
	Если ТипЗнч(КорСчет) = Тип("Строка") Тогда
		Если Прав(КорСчет, 1) = "*" Тогда
			КорСчет = Лев(КорСчет, СтрДлина(КорСчет) - 1);
			КорСчет = Счет(КорСчет);
			СубСчета = БухгалтерскийУчетПовтИсп.СчетаВИерархии(КорСчет);
			Для Каждого СубСчет Из СубСчета Цикл
				СчетаКт.Добавить(СубСчет);
			КонецЦикла;
		Иначе
			КорСчет = Счет(КорСчет);
			СчетаКт.Добавить(КорСчет);
		КонецЕсли;
	Иначе
		СчетаКт.Добавить(КорСчет);
	КонецЕсли;
	
	Оборот = 0;
	
	Для Каждого СчетДт Из СчетаДт Цикл
		Для Каждого СчетКт Из СчетаКт Цикл
			СтрокиПоСчетам = ОборотыМеждуСчетами.НайтиСтроки(Новый Структура("Счет, КорСчет", СчетДт, СчетКт));
			Если СтрокиПоСчетам.Количество() <> 0 Тогда
				Оборот = Оборот + СтрокиПоСчетам[0].СуммаКорОборотДт;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Оборот;
	
КонецФункции

Функция ДО(Счет, СальдоИОбороты) Экспорт
	
	Возврат ОборотПоСчету(Счет, "СуммаОборотДт", СальдоИОбороты);
	
КонецФункции

Функция КО(Счет, СальдоИОбороты) Экспорт
	
	Возврат ОборотПоСчету(Счет, "СуммаОборотКт", СальдоИОбороты);
	
КонецФункции

Функция СКД(Счет, СальдоИОбороты) Экспорт
	
	Возврат СальдоПоСчету(Счет, "СуммаКонечныйОстатокДт", СальдоИОбороты);
	
КонецФункции

Функция СКДР(Счет, СальдоИОбороты) Экспорт
	
	Возврат СальдоПоСчету(Счет, "СуммаКонечныйРазвернутыйОстатокДт", СальдоИОбороты);
	
КонецФункции

Функция СКК(Счет, СальдоИОбороты) Экспорт
	
	Возврат СальдоПоСчету(Счет, "СуммаКонечныйОстатокКт", СальдоИОбороты);
	
КонецФункции

Функция СККР(Счет, СальдоИОбороты) Экспорт
	
	Возврат СальдоПоСчету(Счет, "СуммаКонечныйРазвернутыйОстатокКт", СальдоИОбороты);
	
КонецФункции

Функция РазделенноеСальдоСчета_02_01(НачалоПериода, КонецПериода, Организация) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт
	               |ПОМЕСТИТЬ ВТ_Сальдо_01_01
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, , Счет = &Счет01_01, &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт
	               |ПОМЕСТИТЬ ВТ_Сальдо_01_08
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, , Счет = &Счет01_08, &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
	               |ПОМЕСТИТЬ ВТ_Амортизация
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, , Счет = &Счет02_01, &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА ВТ_Сальдо_01_01.СуммаКонечныйОстатокДт ЕСТЬ NULL 
	               |			ТОГДА 0
	               |		ИНАЧЕ ВТ_Амортизация.СуммаКонечныйОстатокКт
	               |	КОНЕЦ КАК СКК_02_01__01_01,
	               |	ВЫБОР
	               |		КОГДА ВТ_Сальдо_01_01.СуммаКонечныйОстатокДт ЕСТЬ NULL 
	               |				И НЕ ВТ_Сальдо_01_08.СуммаКонечныйОстатокДт ЕСТЬ NULL 
	               |			ТОГДА ВТ_Амортизация.СуммаКонечныйОстатокКт
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СКК_02_01__01_08
	               |ИЗ
	               |	ВТ_Амортизация КАК ВТ_Амортизация
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо_01_01 КАК ВТ_Сальдо_01_01
	               |		ПО ВТ_Амортизация.ОС = ВТ_Сальдо_01_01.ОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо_01_08 КАК ВТ_Сальдо_01_08
	               |		ПО ВТ_Амортизация.ОС = ВТ_Сальдо_01_08.ОС
	               |ИТОГИ
	               |	СУММА(СКК_02_01__01_01),
	               |	СУММА(СКК_02_01__01_08)
	               |ПО
	               |	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("НачПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода", КонецПериода);
	Запрос.УстановитьПараметр("ВидыСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счет01_01", Счет("01.01"));
	
	// 4D:ERP для Беларуси, , 08.11.2017 11:43:28 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	Запрос.УстановитьПараметр("Счет01_08", Счет("01.02"));
	// }
	// 4D
	
	Запрос.УстановитьПараметр("Счет02_01", Счет("02.01"));
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("СКК_02_01__01_01", 0);
	
	// 4D:ERP для Беларуси, , 08.11.2017 11:43:28 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	ВозвращаемоеЗначение.Вставить("СКК_02_01__01_02", 0);
	// }
	// 4D
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, Выборка);
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция РазделенноеСальдоСчета_02_02(НачалоПериода, КонецПериода, Организация) Экспорт
	
	Запрос = Новый Запрос;
	
	// 4D:ERP для Беларуси, , 08.11.2017 11:43:28 
	// Ошибка при формировании отчета Финансовый анализ, №16373
	// {
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт
	               |ПОМЕСТИТЬ ВТ_Сальдо_03_01
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, , Счет = &Счет03_01, &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт
	               |ПОМЕСТИТЬ ВТ_Сальдо_03_02
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, , Счет = &Счет03_02, &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт
	               |ПОМЕСТИТЬ ВТ_Сальдо_03_03
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, , Счет = &Счет03_03, &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК ОС,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт
	               |ПОМЕСТИТЬ ВТ_Амортизация
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, , Счет = &Счет02_02, &ВидыСубконто, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА ВТ_Сальдо_03_01.СуммаКонечныйОстатокДт ЕСТЬ NULL 
	               |			ТОГДА 0
	               |		ИНАЧЕ ВТ_Амортизация.СуммаКонечныйОстатокКт
	               |	КОНЕЦ КАК СКК_02_02__03_01,
	               |	ВЫБОР
	               |		КОГДА ВТ_Сальдо_03_01.СуммаКонечныйОстатокДт ЕСТЬ NULL 
	               |				И НЕ ВТ_Сальдо_03_02.СуммаКонечныйОстатокДт ЕСТЬ NULL 
	               |			ТОГДА ВТ_Амортизация.СуммаКонечныйОстатокКт
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СКК_02_02__03_02,
	               |	ВЫБОР
	               |		КОГДА ВТ_Сальдо_03_01.СуммаКонечныйОстатокДт ЕСТЬ NULL 
	               |				И ВТ_Сальдо_03_02.СуммаКонечныйОстатокДт ЕСТЬ NULL 
	               |				И НЕ ВТ_Сальдо_03_03.СуммаКонечныйОстатокДт ЕСТЬ NULL 
	               |			ТОГДА ВТ_Амортизация.СуммаКонечныйОстатокКт
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК СКК_02_02__03_03
	               |ИЗ
	               |	ВТ_Амортизация КАК ВТ_Амортизация
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо_03_01 КАК ВТ_Сальдо_03_01
	               |		ПО ВТ_Амортизация.ОС = ВТ_Сальдо_03_01.ОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо_03_02 КАК ВТ_Сальдо_03_02
	               |		ПО ВТ_Амортизация.ОС = ВТ_Сальдо_03_02.ОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Сальдо_03_03 КАК ВТ_Сальдо_03_03
	               |		ПО ВТ_Амортизация.ОС = ВТ_Сальдо_03_03.ОС
	               |ИТОГИ
	               |	СУММА(СКК_02_02__03_01),
	               |	СУММА(СКК_02_02__03_02),
	               |	СУММА(СКК_02_02__03_03)
	               |ПО
	               |	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("НачПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода", КонецПериода);
	Запрос.УстановитьПараметр("ВидыСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счет03_01", Счет("03.01"));
	Запрос.УстановитьПараметр("Счет03_02", Счет("03.02"));
	Запрос.УстановитьПараметр("Счет03_03", Счет("03.03"));
	Запрос.УстановитьПараметр("Счет02_02", Счет("02.02"));
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("СКК_02_02__03_01", 0);
	ВозвращаемоеЗначение.Вставить("СКК_02_02__03_02", 0);
	ВозвращаемоеЗначение.Вставить("СКК_02_02__03_03", 0);
	// }
	// 4D
	 
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, Выборка);
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция РазделенноеСальдоСчета_97(НачалоПериода, КонецПериода, Организация) Экспорт
	
	СтруктураСальдо97 = Новый Соответствие;
	Для Каждого ВидАктиваРБП Из Перечисления.ВидыАктивовДляРБП Цикл
		СтруктураСальдо97.Вставить(ВидАктиваРБП, 0);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходыБудущихПериодов.Ссылка КАК РБП,
	|	ВЫБОР
	|		КОГДА РасходыБудущихПериодов.ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы)
	|		ИНАЧЕ РасходыБудущихПериодов.ВидАктива
	|	КОНЕЦ КАК ВидАктива
	|ПОМЕСТИТЬ ВТ_ВидыАктивовРБП
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК РасходыБудущихПериодов
	|ГДЕ
	|	РасходыБудущихПериодов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов)
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	РБП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК РБП,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт
	|ПОМЕСТИТЬ ВТ_Сальдо
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет В (&СчетаРБП), &ВидСубконтоРБП, Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РБП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТ_ВидыАктивовРБП.ВидАктива, ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы)) КАК ВидАктиваРБП,
	|	СУММА(ВТ_Сальдо.СуммаКонечныйОстатокДт) КАК СуммаКонечныйОстатокДт
	|ИЗ
	|	ВТ_Сальдо КАК ВТ_Сальдо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВидыАктивовРБП КАК ВТ_ВидыАктивовРБП
	|		ПО ВТ_Сальдо.РБП = ВТ_ВидыАктивовРБП.РБП
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(ВТ_ВидыАктивовРБП.ВидАктива, ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы))";
	
	Запрос.УстановитьПараметр("НачПериода",     НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",     КонецПериода);
	Запрос.УстановитьПараметр("ВидСубконтоРБП", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("СчетаРБП",       БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("97")));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтруктураСальдо97.Вставить(Выборка.ВидАктиваРБП, Выборка.СуммаКонечныйОстатокДт);
	КонецЦикла;
	
	Возврат СтруктураСальдо97;
	
КонецФункции

Функция РазделенноеСальдоСчета_76(Субсчет, НачалоПериода, КонецПериода, Организация) Экспорт
	
	СтруктураСальдо = Новый Соответствие;
	Для Каждого ВидАктиваРБП Из Перечисления.ВидыАктивовДляРБП Цикл
		СтруктураСальдо.Вставить(ВидАктиваРБП, 0);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	РасходыБудущихПериодов.Ссылка КАК РБП,
	               |	ВЫБОР
	               |		КОГДА РасходыБудущихПериодов.ВидАктива = ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПустаяСсылка)
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы)
	               |		ИНАЧЕ РасходыБудущихПериодов.ВидАктива
	               |	КОНЕЦ КАК ВидАктива
	               |ПОМЕСТИТЬ ВТ_ВидыАктивовРБП
	               |ИЗ
	               |	ПланВидовХарактеристик.СтатьиРасходов КАК РасходыБудущихПериодов
	               |ГДЕ
	               |	РасходыБудущихПериодов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	РБП
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Контрагент,
	               |	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК РБП,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт
	               |ПОМЕСТИТЬ ВТ_Сальдо
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НачПериода, &КонПериода, Период, Движения, Счет = &СчетРБП, , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	РБП
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ВТ_ВидыАктивовРБП.ВидАктива, ЗНАЧЕНИЕ(Перечисление.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы)) КАК ВидАктиваРБП,
	               |	ВТ_Сальдо.Контрагент КАК Контрагент,
	               |	ВТ_Сальдо.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт
	               |ИЗ
	               |	ВТ_Сальдо КАК ВТ_Сальдо
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВидыАктивовРБП КАК ВТ_ВидыАктивовРБП
	               |		ПО ВТ_Сальдо.РБП = ВТ_ВидыАктивовРБП.РБП
	               |ИТОГИ
	               |	СУММА(СуммаКонечныйОстатокДт)
	               |ПО
	               |	ВидАктиваРБП";
	
	Запрос.УстановитьПараметр("НачПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода", КонецПериода);
	Запрос.УстановитьПараметр("ВидСубконтоРБП", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СчетРБП", Субсчет);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		СтруктураСальдо.Вставить(Выборка.ВидАктиваРБП, Выборка.СуммаКонечныйОстатокДт);
	КонецЦикла;
	
	Возврат СтруктураСальдо;
	
КонецФункции

Функция ДанныеСчета97ПоВидуАктива(ВидАктиваРБП, Организация, ДатаНачалаПериодаОтчета, ДатаКонцаПериодаОтчета) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СНД,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК КО,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт) КАК СКД
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	               |			&НачПериода,
	               |			&КонПериода,
	               |			Период,
	               |			Движения,
	               |			Счет В (&СчетаРБП),
	               |			&ВидСубконтоРБП,
	               |			Организация = &Организация
	               |				И Субконто1.ВидАктива = &ВидАктива) КАК ХозрасчетныйОстаткиИОбороты
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт";
	
	Запрос.УстановитьПараметр("НачПериода",     ДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("КонПериода",     ДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("ВидСубконтоРБП", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	Запрос.УстановитьПараметр("ВидАктива",      ВидАктиваРБП);
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("СчетаРБП",       БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("97")));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Результат = Новый Структура;
	Результат.Вставить("СНД", 0);
	Результат.Вставить("ДО",  0);
	Результат.Вставить("КО",  0);
	Результат.Вставить("СКД", 0);
	
	Если Выборка.Следующий() Тогда
		Результат.СНД = Выборка.СНД;
		Результат.ДО  = Выборка.ДО;
		Результат.КО  = Выборка.КО;
		Результат.СКД = Выборка.СКД;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ОборотыСчета99_01ПоАналитике(ПараметрыИтогов) Экспорт
	
	Организация   = ПараметрыИтогов.Организация;
	НачалоПериода = ПараметрыИтогов.НачалоПериода;
	КонецПериода  = ПараметрыИтогов.КонецПериода;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПрибылиИУбытки.Ссылка КАК ВидПрибылиИУбытка
	               |ПОМЕСТИТЬ ВТ_ВидыПрибылейИУбытков
	               |ИЗ
	               |	Перечисление.ПрибылиИУбытки КАК ПрибылиИУбытки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОбороты.Субконто1 КАК ВидПрибылиУбытка,
	               |	ХозрасчетныйОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОбороты.СуммаОборотКт КАК КО
	               |ПОМЕСТИТЬ ВТ_Обороты
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Период, Счет В (&Счета), &ВидСубконто, Организация = &Организация, , ) КАК ХозрасчетныйОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВидыПрибылейИУбытков.ВидПрибылиИУбытка КАК ВидПрибылиИУбытка,
	               |	ЕСТЬNULL(ВТ_Обороты.ДО, 0) КАК ДО,
	               |	ЕСТЬNULL(ВТ_Обороты.КО, 0) КАК КО
	               |ИЗ
	               |	ВТ_ВидыПрибылейИУбытков КАК ВТ_ВидыПрибылейИУбытков
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Обороты КАК ВТ_Обороты
	               |		ПО ВТ_ВидыПрибылейИУбытков.ВидПрибылиИУбытка = ВТ_Обороты.ВидПрибылиУбытка";
	
	Запрос.УстановитьПараметр("НачПериода",  НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счета",       БухгалтерскийУчетПовтИсп.СчетаВИерархии(Счет("99.01")));
	Запрос.УстановитьПараметр("ВидСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрибылиИУбытки);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтруктураОборотов = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		СтруктураОборотов.Вставить(Выборка.ВидПрибылиИУбытка , Новый Структура("ДО, КО", Выборка.ДО, Выборка.КО));
	КонецЦикла;
	
	Возврат СтруктураОборотов;
	
КонецФункции

Функция Обороты91ПоПереоценке(ПараметрыИтогов) Экспорт
	
	Организация   = ПараметрыИтогов.Организация;
	НачалоПериода = ПараметрыИтогов.НачалоПериода;
	КонецПериода  = ПараметрыИтогов.КонецПериода;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Хозрасчетный.Ссылка КАК Счет
	               |ПОМЕСТИТЬ ВТ_Счета
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	               |ГДЕ
	               |	Хозрасчетный.Ссылка В ИЕРАРХИИ(&Счета)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Хозрасчетный.Ссылка КАК Счет
	               |ПОМЕСТИТЬ ВТ_КорСчета1
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	               |ГДЕ
	               |	Хозрасчетный.Ссылка В ИЕРАРХИИ(&КорСчета1)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Хозрасчетный.Ссылка КАК Счет
	               |ПОМЕСТИТЬ ВТ_КорСчета2
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	               |ГДЕ
	               |	Хозрасчетный.Ссылка В ИЕРАРХИИ(&КорСчета2)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СуммированиеДанных.Счет,
	               |	СУММА(СуммированиеДанных.СуммаОборотДт1) КАК СуммаОборотДт1,
	               |	СУММА(СуммированиеДанных.СуммаОборотКт1) КАК СуммаОборотКт1,
	               |	СУММА(СуммированиеДанных.СуммаОборотДт2) КАК СуммаОборотДт2,
	               |	СУММА(СуммированиеДанных.СуммаОборотКт2) КАК СуммаОборотКт2
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ХозрасчетныйОбороты.Счет КАК Счет,
	               |		ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаОборотДт1,
	               |		ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаОборотКт1,
	               |		0 КАК СуммаОборотДт2,
	               |		0 КАК СуммаОборотКт2
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(
	               |				&НачПериода,
	               |				&КонПериода,
	               |				ПЕРИОД,
	               |				Счет В
	               |					(ВЫБРАТЬ
	               |						ВТ_Счета.Счет
	               |					ИЗ
	               |						ВТ_Счета КАК ВТ_Счета),
	               |				&ВидСубконто,
	               |				Организация = &Организация,
	               |				КорСчет В
	               |					(ВЫБРАТЬ
	               |						ВТ_КорСчета1.Счет
	               |					ИЗ
	               |						ВТ_КорСчета1 КАК ВТ_КорСчета1),
	               |				) КАК ХозрасчетныйОбороты
	               |	ГДЕ
	               |		ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов = &ВидПрочихДоходовИРасходов
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ХозрасчетныйОбороты.Счет,
	               |		0,
	               |		0,
	               |		ХозрасчетныйОбороты.СуммаОборотДт,
	               |		ХозрасчетныйОбороты.СуммаОборотКт
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(
	               |				&НачПериода,
	               |				&КонПериода,
	               |				ПЕРИОД,
	               |				Счет В
	               |					(ВЫБРАТЬ
	               |						ВТ_Счета.Счет
	               |					ИЗ
	               |						ВТ_Счета КАК ВТ_Счета),
	               |				&ВидСубконто,
	               |				Организация = &Организация,
	               |				КорСчет В
	               |					(ВЫБРАТЬ
	               |						ВТ_КорСчета2.Счет
	               |					ИЗ
	               |						ВТ_КорСчета2 КАК ВТ_КорСчета2),
	               |				) КАК ХозрасчетныйОбороты
	               |	ГДЕ
	               |		ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов = &ВидПрочихДоходовИРасходов) КАК СуммированиеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СуммированиеДанных.Счет";
	
	Счет_91_01 = Счет("91.01");
	Счет_91_02 = Счет("91.02");
	
	Счета = Новый Массив();
	Счета.Добавить(Счет_91_01);
	Счета.Добавить(Счет_91_02);
	
	КорСчета1 = Новый Массив();
	КорСчета1.Добавить(Счет("01"));
	КорСчета1.Добавить(Счет("03"));
	КорСчета1.Добавить(Счет("04"));
	
	КорСчета2 = Новый Массив();
	КорСчета2.Добавить(Счет("02"));
	КорСчета2.Добавить(Счет("05"));
	
	Запрос.УстановитьПараметр("НачПериода",  НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счета",       Счета);
	Запрос.УстановитьПараметр("КорСчета1",   КорСчета1);
	Запрос.УстановитьПараметр("КорСчета2",   КорСчета2);
	Запрос.УстановитьПараметр("ВидСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ВидПрочихДоходовИРасходов", Перечисления.ВидыПрочихДоходовИРасходов.ПереоценкаВнеоборотныхАктивов);
	
	КО_91_01__010304_ПереоценкаВнеоборотныхАктивов = 0;
	КО_91_01__0205_ПереоценкаВнеоборотныхАктивов   = 0;
	ДО_91_02__010304_ПереоценкаВнеоборотныхАктивов = 0;
	ДО_91_02__0205_ПереоценкаВнеоборотныхАктивов   = 0;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Счет = Счет_91_01 Тогда
			КО_91_01__010304_ПереоценкаВнеоборотныхАктивов = Выборка.СуммаОборотКт1;
			КО_91_01__0205_ПереоценкаВнеоборотныхАктивов   = Выборка.СуммаОборотКт2;
		ИначеЕсли Выборка.Счет = Счет_91_02 Тогда
			ДО_91_02__010304_ПереоценкаВнеоборотныхАктивов = Выборка.СуммаОборотДт1;
			ДО_91_02__0205_ПереоценкаВнеоборотныхАктивов   = Выборка.СуммаОборотДт2;
		КонецЕсли;
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("КО_91_01__010304_ПереоценкаВнеоборотныхАктивов", КО_91_01__010304_ПереоценкаВнеоборотныхАктивов);
	Результат.Вставить("КО_91_01__0205_ПереоценкаВнеоборотныхАктивов",   КО_91_01__0205_ПереоценкаВнеоборотныхАктивов);
	Результат.Вставить("ДО_91_02__010304_ПереоценкаВнеоборотныхАктивов", ДО_91_02__010304_ПереоценкаВнеоборотныхАктивов);
	Результат.Вставить("ДО_91_02__0205_ПереоценкаВнеоборотныхАктивов",   ДО_91_02__0205_ПереоценкаВнеоборотныхАктивов);
	
	Возврат Результат;
	
КонецФункции

Функция Обороты91ПоВПДР(ПараметрыИтогов) Экспорт
	
	Организация   = ПараметрыИтогов.Организация;
	НачалоПериода = ПараметрыИтогов.НачалоПериода;
	КонецПериода  = ПараметрыИтогов.КонецПериода;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыПрочихДоходовИРасходов.Ссылка КАК ВПДР
	               |ПОМЕСТИТЬ ВТ_ВПДР
	               |ИЗ
	               |	Перечисление.ВидыПрочихДоходовИРасходов КАК ВидыПрочихДоходовИРасходов
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ВПДР
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОбъединениеДанных.ВПДР КАК ВПДР,
	               |	СУММА(ОбъединениеДанных.КО_91_01) КАК КО_91_01,
	               |	СУММА(ОбъединениеДанных.ДО_91_02) КАК ДО_91_02,
	               |	СУММА(ОбъединениеДанных.ДО_91_02__68_02) КАК ДО_91_02__68_02
	               |ПОМЕСТИТЬ ВТ_ОборотыПоСчетам
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов КАК ВПДР,
	               |		ХозрасчетныйОбороты.СуммаОборотКт КАК КО_91_01,
	               |		0 КАК ДО_91_02,
	               |		0 КАК ДО_91_02__68_02
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Период, Счет = &Счет91_01, &СубконтроПрочихДоходовИРасходов, Организация = &Организация, , ) КАК ХозрасчетныйОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов,
	               |		0,
	               |		ХозрасчетныйОбороты.СуммаОборотДт,
	               |		0
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Период, Счет = &Счет91_02, &СубконтроПрочихДоходовИРасходов, Организация = &Организация, , ) КАК ХозрасчетныйОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов,
	               |		0,
	               |		0,
	               |		ХозрасчетныйОбороты.СуммаОборотДт
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Период, Счет = &Счет91_02, &СубконтроПрочихДоходовИРасходов, Организация = &Организация, КорСчет = &Счет68_02, ) КАК ХозрасчетныйОбороты) КАК ОбъединениеДанных
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОбъединениеДанных.ВПДР
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	ВПДР
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ВПДР.ВПДР КАК ВПДР,
	               |	ЕСТЬNULL(ВТ_ОборотыПоСчетам.КО_91_01, 0) КАК КО_91_01,
	               |	ЕСТЬNULL(ВТ_ОборотыПоСчетам.ДО_91_02, 0) КАК ДО_91_02,
	               |	ЕСТЬNULL(ВТ_ОборотыПоСчетам.ДО_91_02__68_02, 0) КАК ДО_91_02__68_02
	               |ИЗ
	               |	ВТ_ВПДР КАК ВТ_ВПДР
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыПоСчетам КАК ВТ_ОборотыПоСчетам
	               |		ПО ВТ_ВПДР.ВПДР = ВТ_ОборотыПоСчетам.ВПДР";
	
	Запрос.УстановитьПараметр("НачПериода",  НачалоПериода);
	Запрос.УстановитьПараметр("КонПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счет91_01",   Счет("91.01"));
	Запрос.УстановитьПараметр("Счет91_02",   Счет("91.02"));
	Запрос.УстановитьПараметр("Счет68_02",   Счет("68.02"));
	Запрос.УстановитьПараметр("СубконтроПрочихДоходовИРасходов", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	
	КО_91_01_ВПДР = Новый Структура;
	ДО_91_02_ВПДР = Новый Структура;
	ДО_91_02__68_02_ВПДР = Новый Структура;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ИндексВидаПДР = Перечисления.ВидыПрочихДоходовИРасходов.Индекс(Выборка.ВПДР);
		ИмяВидаПДР = Метаданные.Перечисления.ВидыПрочихДоходовИРасходов.ЗначенияПеречисления[ИндексВидаПДР].Имя;
		КО_91_01_ВПДР.Вставить(ИмяВидаПДР, Выборка.КО_91_01);
		ДО_91_02_ВПДР.Вставить(ИмяВидаПДР, Выборка.ДО_91_02);
		ДО_91_02__68_02_ВПДР.Вставить(ИмяВидаПДР, Выборка.ДО_91_02__68_02);
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("КО_91_01_ВПДР", КО_91_01_ВПДР);
	Результат.Вставить("ДО_91_02_ВПДР", ДО_91_02_ВПДР);
	Результат.Вставить("ДО_91_02__68_02_ВПДР", ДО_91_02__68_02_ВПДР);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СальдоПоСчету(Знач Счет, Знач ВидОстатка, СальдоИОбороты)
	
	Если ТипЗнч(Счет) = Тип("Строка") Тогда
		Счет = Счет(Счет); // Приведение к ссылочному типу
	КонецЕсли;
	
	СтрокиПоСчету = СальдоИОбороты.НайтиСтроки(Новый Структура("Счет", Счет));
	
	Сальдо = 0;
	
	Если СтрокиПоСчету.Количество() <> 0 Тогда
		ТипСальдо = Прав(ВидОстатка, 2);
		
		Если СтрокиПоСчету[0].ВидСчета = ВидСчета.Активный И СтрНайти(ВидОстатка, "Развернутый") = 0 Тогда
			ВидОстаткаДополнительный = СтрЗаменить(ВидОстатка, "Дт", "Кт");
			Сальдо = СтрокиПоСчету[0][ВидОстатка] - СтрокиПоСчету[0][ВидОстаткаДополнительный];
			
			Если ТипСальдо = "Кт" Тогда
				ОписаниеОшибки = "Обращение к кредитовому остатку активного счета с кодом " + Счет.Код;
			КонецЕсли;
			
		ИначеЕсли СтрокиПоСчету[0].ВидСчета = ВидСчета.Пассивный И СтрНайти(ВидОстатка, "Развернутый") = 0 Тогда
			ВидОстаткаДополнительный = СтрЗаменить(ВидОстатка, "Кт", "Дт");
			Сальдо = СтрокиПоСчету[0][ВидОстатка] - СтрокиПоСчету[0][ВидОстаткаДополнительный];
			
			Если ТипСальдо = "Дт" Тогда
				ОписаниеОшибки = "Обращение к дебетовому остатку пассивного счета с кодом " + Счет.Код;
			КонецЕсли;
			
		Иначе
			Сальдо = СтрокиПоСчету[0][ВидОстатка];
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Сальдо;
	
КонецФункции

Функция ОборотПоСчету(Знач Счет, Знач ВидОстатка, СальдоИОбороты)
	
	Если ТипЗнч(Счет) = Тип("Строка") Тогда
		Счет = Счет(Счет); // Приведение к ссылочному типу
	КонецЕсли;
	
	СтрокиПоСчету = СальдоИОбороты.НайтиСтроки(Новый Структура("Счет", Счет));
	
	Сальдо = 0;
	
	Если СтрокиПоСчету.Количество() <> 0 Тогда
		Сальдо = СтрокиПоСчету[0][ВидОстатка];
	КонецЕсли;
	
	Возврат Сальдо;
	
КонецФункции

#КонецОбласти
