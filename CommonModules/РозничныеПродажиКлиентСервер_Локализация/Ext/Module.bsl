
#Область ПрограммныйИнтерфейс

//Условное оформление для функционала, связанного с розницей
// 
// Параметры:
//  Форма - Форма - Содержит данную форму
//  ИмяДокумента  - Строка - имя документа.
//
Процедура УстановитьНастройкиВидимостиРеквизитовКомандДляРозницы(Форма, ИмяДокумента)Экспорт
	
	Если ИмяДокумента = "Поступление" Тогда
		Если  Форма.Элементы.Найти("ТоварыЦенаИзготовителя")  = Неопределено Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Если  Форма.Элементы.Найти("ТоварыЦена")  = Неопределено Тогда
			Возврат;
		КонецЕсли;
	Конецесли;
	
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	Команды = Форма.Команды;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	Если ИмяДокумента = "Поступление" Тогда
		ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы["ТоварыЦенаИзготовителя"].Имя);
	Иначе
		ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы["ТоварыЦена"].Имя);
    КонецЕсли;	
		
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы["ТоварыСтавкаТН"].Имя);
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы["ГруппаСтавки"].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы["ТоварыСуммаТН"].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы["ТоварыРозничнаяЦенаБезНДС"].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы["ТоварыРозничнаяСтавкаНДС"].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы["ТоварыРозничнаяСуммаНДС"].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы["ТоварыРозничнаяЦена"].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы["ТоварыОкругление"].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы["ТоварыРозничнаяЦенаСУчетомОкругления"].Имя);

	ГруппаОтбора1 = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаНе;
	
	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭтоРозничныйСклад");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение =  Истина;
	
	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РассчитыватьРеквизитыРозницы");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение =  Истина;

	Если ИмяДокумента = "Поступление" Тогда
		ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ХозяйственнаяОперация");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение =   ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика");
	КонецЕсли;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыФормированияЗапросовПроверкиТорговаяНадбавка


Процедура ОтразитьТорговыеНадбавки(ДополнительныеСвойства,
	                                         Движения,
	                                         Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТорговыеНадбавки;
	
	Если Отказ Или Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТорговыеНадбавки            = Движения.ТорговыеНадбавки;
	ТорговыеНадбавки.Записывать = Истина;
	ТорговыеНадбавки.Загрузить(Таблица);
	
КонецПроцедуры
#КонецОбласти

#Область ПроцедурыДляВыводаСообщенийОбОшибкахТорговаяНадбавка

Процедура СообщитьПользователюОбОшибкеДляРегистрацияТорговыхНадбавок(ТекстОшибки, ДокументУстановкиЦен, НомерСтроки, Поле, Отказ)
	
	Если Найти(Строка(ДокументУстановкиЦен.Метаданные().ПолноеИмя()), "Обработка.") <> 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			,
			"Объект." + ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", НомерСтроки, Поле),
			,
			Отказ);
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ДокументУстановкиЦен,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", НомерСтроки, Поле),
			,
			Отказ);
		
	КонецЕсли;
	
КонецПроцедуры



#КонецОбласти

#Область ЗаполнениеРозничныхСтавокВТаблице

// Процедура назначает торговые надбавки в табличной части
//
Процедура НазначитьРозничныеСтавки(Объект, ИмяТЧ, СтавкаТН, ИмяКолонкиСтавкаТН, ИмяДокумента, ВидЦен,  ВыделенныеСтроки = Неопределено, ТолькоДляАктивныхСтрок = Ложь) Экспорт
		
	Если ВыделенныеСтроки <> Неопределено Тогда
		СтрокиТабличнойЧасти = Новый Массив();
		
		Для Каждого ТекСтрока Из ВыделенныеСтроки Цикл
			НайденнаяСтрока = Объект[ИмяТЧ].НайтиПоИдентификатору(ТекСтрока);
			СтрокиТабличнойЧасти.Добавить(НайденнаяСтрока);
		КонецЦикла;
		
	Иначе
		Если ТолькоДляАктивныхСтрок Тогда
			СтрокиТабличнойЧасти = Объект[ИмяТЧ].НайтиСтроки(Новый Структура("Активность", Истина));
		Иначе
			СтрокиТабличнойЧасти = Объект[ИмяТЧ];
		КонецЕсли;
	КонецЕсли;
	
	Для каждого ТекущаяСтрока Из СтрокиТабличнойЧасти Цикл
		ТекущаяСтрока[ИмяКолонкиСтавкаТН] =  СтавкаТН;
		
		Если ИмяДокумента = "Поступление" 
			ИЛИ ИмяДокумента = "Перемещение" Тогда
			
			СтруктураПараметров = Новый Структура("ИмяДокумента,ЦенаВключаетНДС, ВидЦен",ИмяДокумента, ?(ИмяДокумента = "Поступление", 
			Объект.ЦенаВключаетНДС, Ложь), ВидЦен);
			СтруктураДействий = Новый Структура;
			СтруктураДействий.Вставить("РассчитатьРозничнуюЦену", СтруктураПараметров);
			РассчитатьРозничнуюЦенуВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий);
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти

#Область РозничныеСтавкиЦеныВСтрокеТЧ


Процедура РассчитатьРозничнуюЦенуВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий)Экспорт
	
	Перем  ЦенаВключаетНДС;
	Перем  Параметры;
	Перем  ВидЦен;
	
	Если СтруктураДействий.Свойство("РассчитатьРозничнуюЦену", Параметры) Тогда
		
		Если Параметры = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		Если НЕ Параметры.Свойство("ЦенаВключаетНДС", ЦенаВключаетНДС)  Тогда
			ЦенаВключаетНДС = Ложь;
		КонецЕсли;
		
		//поступление товаров услуг	
		РасчетнаяЦена = ПолучитьРасчетнуюЦенуДляТорговойНадбавки(ТекущаяСтрока, Параметры.ИмяДокумента, ЦенаВключаетНДС);
		ТекущаяСтрока.СуммаТН =  РасчетнаяЦена * ТекущаяСтрока.СтавкаТН/100;
		СтавкаЧислом = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(ТекущаяСтрока.РозничнаяСтавкаНДС);
		ТекущаяСтрока.РозничнаяСуммаНДС = (РасчетнаяЦена+ТекущаяСтрока.СуммаТН)*СтавкаЧислом;
		ТекущаяСтрока.РозничнаяЦенаБезНДС =  РасчетнаяЦена +ТекущаяСтрока.СуммаТН ; 
		ТекущаяСтрока.РозничнаяЦена =  РасчетнаяЦена + ТекущаяСтрока.СуммаТН + ТекущаяСтрока.РозничнаяСуммаНДС;
		ТекущаяСтрока.РозничнаяЦенаСУчетомОкругления = ТекущаяСтрока.РозничнаяЦена;
		
		Если НЕ Параметры.Свойство("ВидЦен", ВидЦен) ИЛИ Не ЗначениеЗаполнено(ВидЦен) Тогда 
			ТекущаяСтрока.РозничнаяЦенаСУчетомОкругления = Окр(ТекущаяСтрока.РозничнаяЦена, 2);
		Иначе
			ТекущаяСтрока.РозничнаяЦенаСУчетомОкругления = РозничныеПродажиВызовСервера_Локализация.ОкруглитьЦенуПоПравиламЦенообразования(ТекущаяСтрока.РозничнаяЦенаСУчетомОкругления, Параметры.ВидЦен);
		КонецЕсли;

		ТекущаяСтрока.Округление = ТекущаяСтрока.РозничнаяЦенаСУчетомОкругления -  ТекущаяСтрока.РозничнаяЦена;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура РассчитатьСтавкуСуммуТорговойНадбавкиВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий) Экспорт
	
	Перем  ЦенаВключаетНДС;
	Перем  Параметры;
	
	Если СтруктураДействий.Свойство("РассчитатьСтавкуСуммуТорговойНадбавки", Параметры) Тогда
		
		Если Параметры = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		Если НЕ Параметры.Свойство("ЦенаВключаетНДС", ЦенаВключаетНДС)  Тогда
			ЦенаВключаетНДС = Ложь;
		КонецЕсли;

		РасчетнаяЦена = ПолучитьРасчетнуюЦенуДляТорговойНадбавки(ТекущаяСтрока, Параметры.ИмяДокумента, ЦенаВключаетНДС);
		СтавкаЧислом = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(ТекущаяСтрока.РозничнаяСтавкаНДС);
		ТекущаяСтрока.РозничнаяСуммаНДС =  ТекущаяСтрока.РозничнаяЦенаСУчетомОкругления*СтавкаЧислом/(1+СтавкаЧислом);
		ТекущаяСтрока.СуммаТН =  ТекущаяСтрока.РозничнаяЦенаСУчетомОкругления- ТекущаяСтрока.РозничнаяСуммаНДС-РасчетнаяЦена;
		ТекущаяСтрока.СтавкаТН =  ТекущаяСтрока.СуммаТН*100/РасчетнаяЦена;
		
		ТекущаяСтрока.Округление = 0;
		ТекущаяСтрока.РозничнаяЦена = 0;
		ТекущаяСтрока.РозничнаяЦенаБезНДС = ТекущаяСтрока.РозничнаяЦенаСУчетомОкругления - ТекущаяСтрока.РозничнаяСуммаНДС;

	КонецЕсли;

КонецПроцедуры

Функция ПолучитьРасчетнуюЦенуДляТорговойНадбавки(ТекущаяСтрока, ИмяДокумента, ЦенаВключаетНДС)Экспорт
	
	РасчетнаяЦена = 0;	
	
	Если ИмяДокумента = "Поступление" ТОгда 
		Если  ТекущаяСтрока.ЦенаСоСкидкой  = 0 Тогда
			Если  ЦенаВключаетНДС Тогда
				РасчетнаяЦена = (ТекущаяСтрока.Сумма - ТекущаяСтрока.СуммаНДС)/ТекущаяСтрока.КоличествоУпаковок;
			Иначе
				РасчетнаяЦена =  ТекущаяСтрока.Цена;
			КонецЕсли;	
		Иначе
			Если ТекущаяСтрока.ЦенаИзготовителя = 0 ИЛИ ТекущаяСтрока.ЦенаИзготовителя = ТекущаяСтрока.Цена Тогда
				РасчетнаяЦена = ТекущаяСтрока.ЦенаСоСкидкой;
			Иначе
				РасчетнаяЦена = ТекущаяСтрока.ЦенаИзготовителя;
			КонецЕсли;	 
		КонецЕсли;
	Иначе
		РасчетнаяЦена = ТекущаяСтрока.Цена
	КонецЕсли;	
	
	Возврат РасчетнаяЦена;
	
КонецФункции

Процедура ЗаполнитьЦенуИзЦеныИзготовителяВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий) Экспорт
	
	Если  СтруктураДействий.Свойство("ЗаполнитьЦенуИзЦеныИзготовителя")  Тогда
		 ТекущаяСтрока.Цена = ТекущаяСтрока.ЦенаИзготовителя;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти




Процедура ОбработкаВыбораПодборНаСервере(ЭтаФорма, Объект, СтруктураДействий) Экспорт

	Если ЭтаФорма.РассчитыватьРеквизитыРозницы  И ЭтаФорма.ЭтоРозничныйСклад Тогда
		СтруктураДействий.Вставить("ЗаполнитьЦенуПродажи", ПолучитьСтруктуруЗаполненияЦеныРозницаВСтрокеТЧ(Объект));
		СтруктураДействий.Вставить("ЗаполнитьСтавкуТорговойНадбавки", Новый Структура("Склад, Дата",Объект.СкладПолучатель, Объект.Дата));
		СтруктураДействий.Вставить("ЗаполнитьРозничнуюСтавкуНДС");
		СтруктураДействий.Вставить("РассчитатьРозничнуюЦену", Новый Структура("ИмяДокумента,ВидЦен","Перемещение", ЭтаФорма["РозничныйВидЦен"]));
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьСтруктуруЗаполненияЦеныРозницаВСтрокеТЧ(Объект)
		
	СтруктураЗаполненияЦены = Новый Структура;
	СтруктураЗаполненияЦены.Вставить("Дата",    Объект.Дата);
	СтруктураЗаполненияЦены.Вставить("Валюта",  РозничныеПродажиВызовСервера_Локализация.ПолучитьВалютуЦены(Объект.ВидЦены));
	СтруктураЗаполненияЦены.Вставить("ВидЦены", Объект.ВидЦены);
	
	Возврат СтруктураЗаполненияЦены;
	
КонецФункции

#КонецОбласти 