
//++ НЕ УТ
#Область ДвижениеДенежныхДокументов

// Создает поступление денежных документов по списку выбранных ДД
//
// Параметры:
//	ХозОперация - ПеречислениеСсылка.ХозяйственныеОперации - хоз. операция документа
//	Список - ТаблицаФормы - список денежных документов для поступления
//
Процедура СоздатьПоступлениеДенежныхДокументов(ХозОперация, Список) Экспорт
	
	ТекущиеДанные = Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		
		ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта!'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
		
	КонецЕсли;
	
	ПараметрыОснования = Новый Структура();
	
	Если Список.ВыделенныеСтроки.Количество() = 1 Тогда
		
		Если ТипЗнч(Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			
			ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта!'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
			
		КонецЕсли;
		
		МассивДД = Новый Массив;
		МассивДД.Добавить(ТекущиеДанные.ДенежныйДокумент);
		
		ПараметрыОснования.Вставить("ХозяйственнаяОперация",	ХозОперация);
		ПараметрыОснования.Вставить("Организация",				ТекущиеДанные.Организация);
		ПараметрыОснования.Вставить("Подразделение",			ТекущиеДанные.Подразделение);
		ПараметрыОснования.Вставить("МОЛ",						ТекущиеДанные.МОЛ);
		ПараметрыОснования.Вставить("Валюта",					ТекущиеДанные.Валюта);
		ПараметрыОснования.Вставить("ВалютаВзаиморасчетов",		ТекущиеДанные.Валюта);
		ПараметрыОснования.Вставить("ДенежныеДокументы",		МассивДД);
		
		ОткрытьФорму("Документ.ПоступлениеДенежныхДокументов.Форма.ФормаДокумента",
			Новый Структура("Основание", ПараметрыОснования));
		
	Иначе
		
		ОтПоставщика = ХозОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхДокументовОтПоставщика");
		
		НаПроверку = Новый Структура;
		НаПроверку.Вставить("Организация",	 НСтр("ru = 'Организация'"));
		НаПроверку.Вставить("Подразделение", НСтр("ru = 'Подразделение'"));
		НаПроверку.Вставить("МОЛ",			 НСтр("ru = 'МОЛ'"));
		Если ОтПоставщика Тогда
			НаПроверку.Вставить("Валюта", НСтр("ru = 'Валюта'"));
		КонецЕсли;
		
		Проверка = Новый Структура;
		Для Каждого ИмяРекв Из НаПроверку Цикл
			Проверка.Вставить(ИмяРекв.Ключ, Новый Массив);
			Проверка.Вставить(ИмяРекв.Ключ + "Отказ", Ложь);
		КонецЦикла;
		
		МассивДД = Новый Массив;
		Для Каждого ТекСтрока Из Список.ВыделенныеСтроки Цикл
			
			Если ТипЗнч(ТекСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого ИмяРекв Из НаПроверку Цикл
				ПроверитьДублиРеквизитовДляДД(Проверка, ИмяРекв.Ключ, Список.ДанныеСтроки(ТекСтрока)[ИмяРекв.Ключ]);
			КонецЦикла;
			
			МассивДД.Добавить(Список.ДанныеСтроки(ТекСтрока).ДенежныйДокумент);
			
		КонецЦикла;
		
		Если МассивДД.Количество() = 0 Тогда
			
			ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта!'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
			
		КонецЕсли;
		
		ОчиститьСообщения();
		
		ПараметрыОснования.Вставить("ХозяйственнаяОперация",	ХозОперация);
		ПараметрыОснования.Вставить("Организация",				Проверка.Организация[0]);
		ПараметрыОснования.Вставить("Подразделение",			Проверка.Подразделение[0]);
		ПараметрыОснования.Вставить("МОЛ",						Проверка.МОЛ[0]);
		ПараметрыОснования.Вставить("ДенежныеДокументы",		МассивДД);
		Если ОтПоставщика Тогда
			ПараметрыОснования.Вставить("Валюта",				Проверка.Валюта[0]);
			ПараметрыОснования.Вставить("ВалютаВзаиморасчетов",	Проверка.Валюта[0]);
		КонецЕсли;
		
		Если СообщитьОбОшибкахФормированияДанныхЗаполненияДД(НаПроверку, Проверка) Тогда
			
			// В результате проверки обнаружены ошибки
			ТекстСообщдения = НСтр("ru='Поступление денежных документов будет создано с указанием значений %1 из строки, на которой установлен курсор'");
			ТекстРеквизитов = "";
			ВсегоРеквизитов = НаПроверку.Количество();
			ТекущийРеквизит = 1;
			Для Каждого ИмяРекв Из НаПроверку Цикл
				ЗнакПрепинания = ?(ВсегоРеквизитов = ТекущийРеквизит, " " + НСтр("ru = 'и ""'"), ", """); ТекущийРеквизит = ТекущийРеквизит + 1;
				ТекстРеквизитов = ТекстРеквизитов + ?(ПустаяСтрока(ТекстРеквизитов), """", ЗнакПрепинания) + ИмяРекв.Значение + """";
			КонецЦикла;
			ТекстСообщдения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщдения, ТекстРеквизитов);
			
			// Сообщаем о найденных дублях, но документ создаем, т.к. это поступление
			Оповещение = Новый ОписаниеОповещения("СоздатьДокументПоступленияДД", ДенежныеСредстваКлиент, ПараметрыОснования);
			ПоказатьПредупреждение(Оповещение, ТекстСообщдения);
			
		Иначе
			
			СоздатьДокументПоступленияДД(ПараметрыОснования);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Создает выбытие денежных документов по списку выбранных ДД
//
// Параметры:
//	ХозОперация - ПеречислениеСсылка.ХозяйственныеОперации - хоз. операция документа
//	Список - ТаблицаФормы - список денежных документов для выбытия / перемещения
//
Процедура СоздатьВыбытиеДенежныхДокументов(ХозОперация, Список) Экспорт
	
	ТекущиеДанные = Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		
		ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта!'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
		
	КонецЕсли;
	
	ПараметрыОснования = Новый Структура();
	
	Если Список.ВыделенныеСтроки.Количество() = 1 Тогда
		
		Если ТипЗнч(Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			
			ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта!'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
			
		КонецЕсли;
		
		МассивДД = Новый Массив;
		МассивДД.Добавить(ТекущиеДанные.ДенежныйДокумент);
		
		ПараметрыОснования.Вставить("ХозяйственнаяОперация",	ХозОперация);
		ПараметрыОснования.Вставить("Организация",				ТекущиеДанные.Организация);
		ПараметрыОснования.Вставить("Подразделение",			ТекущиеДанные.Подразделение);
		ПараметрыОснования.Вставить("МОЛОтправитель",			ТекущиеДанные.МОЛ);
		ПараметрыОснования.Вставить("МОЛ",						ТекущиеДанные.МОЛ);
		ПараметрыОснования.Вставить("Валюта",					ТекущиеДанные.Валюта);
		ПараметрыОснования.Вставить("ДенежныеДокументы",		МассивДД);
		
		ОткрытьФорму("Документ.ВыбытиеДенежныхДокументов.Форма.ФормаДокумента",
			Новый Структура("Основание", ПараметрыОснования));
		
	Иначе
		
		ВозвратПоставщику = (ХозОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхДокументовПоставщику"));
		
		НаПроверку = Новый Структура;
		НаПроверку.Вставить("Организация",	 НСтр("ru = 'Организация'"));
		НаПроверку.Вставить("Подразделение", НСтр("ru = 'Подразделение'"));
		НаПроверку.Вставить("МОЛ",			 НСтр("ru = 'МОЛ'"));
		Если ВозвратПоставщику Тогда
			НаПроверку.Вставить("Валюта", НСтр("ru = 'Валюта'"));
		КонецЕсли;
		
		Проверка = Новый Структура;
		Для Каждого ИмяРекв Из НаПроверку Цикл
			Проверка.Вставить(ИмяРекв.Ключ, Новый Массив);
			Проверка.Вставить(ИмяРекв.Ключ + "Отказ", Ложь);
		КонецЦикла;
		
		МассивДД = Новый Массив;
		Для Каждого ТекСтрока Из Список.ВыделенныеСтроки Цикл
			
			Если ТипЗнч(ТекСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого ИмяРекв Из НаПроверку Цикл
				ПроверитьДублиРеквизитовДляДД(Проверка, ИмяРекв.Ключ, Список.ДанныеСтроки(ТекСтрока)[ИмяРекв.Ключ]);
			КонецЦикла;
			
			МассивДД.Добавить(Список.ДанныеСтроки(ТекСтрока).ДенежныйДокумент);
			
		КонецЦикла;
		
		Если МассивДД.Количество() = 0 Тогда
			
			ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта!'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Возврат;
			
		КонецЕсли;
		
		ОчиститьСообщения();
		
		Если СообщитьОбОшибкахФормированияДанныхЗаполненияДД(НаПроверку, Проверка) Тогда
			
			// В результате проверки обнаружены ошибки
			ТекстСообщдения = НСтр("ru='Документ не может быть создан'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщдения);
			Возврат;
			
		КонецЕсли;
		
		ПараметрыОснования.Вставить("ХозяйственнаяОперация",	ХозОперация);
		ПараметрыОснования.Вставить("Организация",				Проверка.Организация[0]);
		ПараметрыОснования.Вставить("Подразделение",			Проверка.Подразделение[0]);
		ПараметрыОснования.Вставить("МОЛОтправитель",			Проверка.МОЛ[0]);
		ПараметрыОснования.Вставить("МОЛ",						Проверка.МОЛ[0]);
		ПараметрыОснования.Вставить("Валюта",					Проверка.Валюта[0]);
		ПараметрыОснования.Вставить("ДенежныеДокументы",		МассивДД);
		
		ОткрытьФорму("Документ.ВыбытиеДенежныхДокументов.Форма.ФормаДокумента",
			Новый Структура("Основание", ПараметрыОснования));
		
	КонецЕсли;
	
КонецПроцедуры

// Создает документ поступления денежных документов по подготовленным параметрам
//
// Параметры:
//	ПараметрыОснования - Структура - параметры создания документа
//
Процедура СоздатьДокументПоступленияДД(ПараметрыОснования) Экспорт
	
	ОткрытьФорму("Документ.ПоступлениеДенежныхДокументов.Форма.ФормаДокумента",
		Новый Структура("Основание", ПараметрыОснования));
	
КонецПроцедуры

// Выводит сообщения об ошибках при вводе документов движения денежных документов
//
// Параметры:
// 	Проверка - Структура - Результаты проверки дублей реквизитов
//
// Возвращаемое значение:
// Булево - Истина, если отказ от ввода на основании
//
Функция СообщитьОбОшибкахФормированияДанныхЗаполненияДД(НаПроверку, Проверка) Экспорт
	
	Отказ = Ложь;
	
	ТекстСообщения = НСтр("ru='У выделенных остатков денежных документов отличается поле ""%Поле%""'");
	
	Для Каждого Реквизит Из НаПроверку Цикл
		Если Проверка[Реквизит.Ключ + "Отказ"] = Истина Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрЗаменить(ТекстСообщения, "%Поле%", Реквизит.Значение), , , , Отказ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Отказ;
	
КонецФункции

Процедура ПроверитьДублиРеквизитовДляДД(Проверка, Имя, Значение)
	
	Если Проверка[Имя + "Отказ"] = Истина Тогда
		// Ранее уже были найдены ошибки
	ИначеЕсли Проверка[Имя].Количество() > 0 И Проверка[Имя].Найти(Значение) = Неопределено Тогда
		// Обнаружены дубли реквизитов
		Проверка.Вставить(Имя + "Отказ", Истина);
	ИначеЕсли Проверка[Имя].Найти(Значение) = Неопределено Тогда
		// Сохраним проверенное значение реквизита
		Проверка[Имя].Добавить(Значение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
//-- НЕ УТ

// Создает документ оплаты по одной или нескольким заявкам на расход денежных средств
//
// Параметры:
//	ОписаниеКоманды - Структура - Описание команды, по которой создаются окументы
//	ИмяДокумента - Строка - имя документа в метеданных, который будет создан на основании заявок
//
Процедура СоздатьДокументОплатыНаОснованииЗаявокНаРасходДС(ОписаниеКоманды, ИмяДокумента) Экспорт
	
	МассивСсылок = Новый Массив;
	
	ФормаОплаты = "";
	Если ИмяДокумента = "СписаниеБезналичныхДенежныхСредств" Тогда
		ФормаОплаты = "Безналичная";
	ИначеЕсли ИмяДокумента = "РасходныйКассовыйОрдер" Тогда
		ФормаОплаты = "Наличная";
	КонецЕсли;
	
	Если ОписаниеКоманды.Форма.ИмяФормы = "Документ.ЗаявкаНаРасходованиеДенежныхСредств.Форма.ФормаДокумента" Тогда
		
		МассивСсылок.Добавить(ОписаниеКоманды.Форма.Объект.Ссылка);
		
	Иначе
		
		Список = ОписаниеКоманды.Форма.Элементы.Список;
		
		ТекущиеДанные = Список.ТекущиеДанные;
		
		Если ТекущиеДанные = Неопределено Тогда
			ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта!'");
			ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
			Возврат;
		КонецЕсли;
		
		Если Список.ВыделенныеСтроки.Количество() = 1 Тогда
			
			Если ТипЗнч(Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
				ТекстПредупреждения = НСтр("ru = 'Команда не может быть выполнена для указанного объекта!'");
				ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
				Возврат;
			КонецЕсли;
			
			МассивСсылок.Добавить(ТекущиеДанные.Ссылка);
		Иначе
			
			Для Каждого Заявка Из Список.ВыделенныеСтроки Цикл
				Если ТипЗнч(Заявка) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
					Продолжить;
				КонецЕсли;
				МассивСсылок.Добавить(Список.ДанныеСтроки(Заявка).Ссылка);
			КонецЦикла;
			
			Если МассивСсылок.Количество() = 0 Тогда
				ТекстПредупреждения = НСтр("ru = 'Не выбрано ни одной заявки для ввода на основании!'");
				ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	РаспределениеОплаты = Неопределено;
	Если ДенежныеСредстваВызовСервера.СформироватьДанныеЗаполненияОплаты(МассивСсылок, ФормаОплаты, РаспределениеОплаты) Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ДокументОснование",                     МассивСсылок);
		ДополнительныеПараметры.Вставить("НесколькоЗаявокНаРасходованиеСредств",  МассивСсылок.Количество() > 1);
		ДополнительныеПараметры.Вставить("ИмяДокумента",                          ИмяДокумента);
		ДополнительныеПараметры.Вставить("ФормаОплаты",                           ФормаОплаты);
		
		Оповещение = Новый ОписаниеОповещения("ВыполнитьПослеВыбораБанковскогоСчетаКассы", ЭтотОбъект, ДополнительныеПараметры);
		
		Если РаспределениеОплаты.Количество() > 1 Тогда
			ДополнительныеПараметры.Вставить("ЗакрыватьПриВыборе", Истина);
			ОткрытьФорму("Документ.ЗаявкаНаРасходованиеДенежныхСредств.Форма.РаспределениеОплаты", ДополнительныеПараметры,,,,,
				Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		ИначеЕсли РаспределениеОплаты.Количество() = 1 Тогда
			ВыполнитьОбработкуОповещения(Оповещение,
				Новый Структура("БанковскийСчетКасса, Сумма", РаспределениеОплаты[0].БанковскийСчетКасса, РаспределениеОплаты[0].Сумма));
		Иначе
			ВыполнитьОбработкуОповещения(Оповещение, Новый Структура("БанковскийСчетКасса, Сумма", Неопределено, 0));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьПослеВыбораБанковскогоСчетаКассы(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ИмяФормы = "Документ." + ДополнительныеПараметры.ИмяДокумента + ".ФормаОбъекта";
		ДополнительныеПараметры.Вставить("БанковскийСчетКасса", Результат.БанковскийСчетКасса);
		ДополнительныеПараметры.Вставить("Сумма", Результат.Сумма);
		ОткрытьФорму(ИмяФормы, Новый Структура("Основание", ДополнительныеПараметры));
	КонецЕсли;
	
КонецПроцедуры

// Открывает помощник формирования платежных документов обработки "ПлатежныйКалендарь"
//
// Параметры:
//	Список - ТаблицаФормы - список заявок, по выделенным строкам которого будет сформированы данные помощника
//
Процедура ОткрытьПомощникФормированияДокументовОплаты(Список) Экспорт
	МассивСсылок = Новый Массив();
	
	Для Каждого Заявка Из Список.ВыделенныеСтроки Цикл
		Если ТипЗнч(Заявка) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Продолжить;
		КонецЕсли;
		МассивСсылок.Добавить(Список.ДанныеСтроки(Заявка).Ссылка);
	КонецЦикла;
	
	Если МассивСсылок.Количество() = 0 Тогда
		ТекстПредупреждения = НСтр("ru = 'Не выбрано ни одной заявки для формирования платежных документов!'");
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ДанныеДляПомощника = ДенежныеСредстваВызовСервера.СформироватьДанныеДляПомощникаФормированияПлатежныхДокументов(МассивСсылок);
	
	Если Не ДанныеДляПомощника.ЕстьОшибки Тогда
		ПараметрыПомощника = Новый Структура("АдресДокументовДляФормированияПлатежей, ПланироватьСДаты, ДнейПланирования");
		ЗаполнитьЗначенияСвойств(ПараметрыПомощника, ДанныеДляПомощника);
		
		ОткрытьФорму("Обработка.ПлатежныйКалендарь.Форма.ПомощникФормированияПлатежныхПоручений", ПараметрыПомощника);
	КонецЕсли;
КонецПроцедуры
