////////////////////////////////////////////////////////////////////////////////
// СотрудникиВызовСервера: методы, обслуживающие работу формы сотрудника.
//  
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Функция СообщениеОКонфликтеВидаЗанятостиНовогоСотрудникаССуществующими(Сотрудник, ФизическоеЛицо, Организация, ВидЗанятости, ДатаПриема) Экспорт
	 Возврат СотрудникиФормы.СообщениеОКонфликтеВидаЗанятостиНовогоСотрудникаССуществующими(Сотрудник, ФизическоеЛицо, Организация, ВидЗанятости, ДатаПриема);
КонецФункции

Функция ПолучитьВидЗанятостиДляНовогоСотрудника(Знач Сотрудник, Знач Организация, Знач ФизическоеЛицо = Неопределено) Экспорт
	Возврат СотрудникиФормы.ПолучитьВидЗанятостиДляНовогоСотрудника(Сотрудник, Организация, ФизическоеЛицо);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПодобратьСписокФизЛиц(ФизическоеЛицоСсылка, Фамилия, Имя, Отчество) Экспорт
	Возврат СотрудникиФормы.ПодобратьСписокФизЛиц(ФизическоеЛицоСсылка, Фамилия, Имя, Отчество);
КонецФункции

Функция ПараметрыОткрытияСогласияНаОбработкуПерсональныхДанных(Сотрудник) Экспорт
	
	ПараметрыОткрытия = Новый Структура;
	
	КадровыеДанные = КадровыйУчет.КадровыеДанныеСотрудников(Истина, Сотрудник, "Организация, ФизическоеЛицо");
	Если КадровыеДанные.Количество() > 0 Тогда
		ПараметрыОткрытия.Вставить("Организация", КадровыеДанные[0].Организация);
		ПараметрыОткрытия.Вставить("Субъект", КадровыеДанные[0].ФизическоеЛицо);
	КонецЕсли;
	
	Возврат ПараметрыОткрытия;
	
КонецФункции

Функция ЗаблокироватьФизическоеЛицоПриРедактированииНаСервере(ФизическоеЛицоСсылка, ФизическоеЛицоВерсияДанных, ФормаУникальныйИдентификатор) Экспорт
	Возврат СотрудникиФормы.ЗаблокироватьФизическоеЛицоПриРедактированииНаСервере(ФизическоеЛицоСсылка, ФизическоеЛицоВерсияДанных, ФормаУникальныйИдентификатор);
КонецФункции

Функция ИННИСНИЛСУникальны(ИНН, СНИЛС) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ФизическиеЛица.Ссылка
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.ИНН = &ИНН
		|	И &ИНН <> """"
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ФизическиеЛица.Ссылка
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	ФизическиеЛица.СтраховойНомерПФР = &СНИЛС
		|	И &СНИЛС <> """"";
		
	Запрос.УстановитьПараметр("ИНН", ИНН);
	Запрос.УстановитьПараметр("СНИЛС", СокрЛП(СтрЗаменить(СНИЛС, "-", "")));
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатПроверкиУникальности =  Запрос.Выполнить().Пустой();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат РезультатПроверкиУникальности;
	
КонецФункции

Функция ФизическиеЛицаСотрудников(Знач Сотрудники) Экспорт
	
	Если ТипЗнч(Сотрудники) = Тип("Массив") Тогда
		СписокСотрудников = Сотрудники;
	Иначе
		СписокСотрудников = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудники);
	КонецЕсли;
	
	Возврат КадровыйУчет.ФизическиеЛицаСотрудников(СписокСотрудников);
	
КонецФункции

#Область ОбработчикиМодулейОбъектаИМенеджера

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт
	
	Если Параметры.Свойство("СтрокаПоиска") 
		И НЕ ПустаяСтрока(Параметры.СтрокаПоиска) Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		УстановитьПривилегированныйРежим(Истина);
		ФизическиеЛицаЗарплатаКадры.СоздатьВТПрежниеФИО(Запрос.МенеджерВременныхТаблиц, Ложь, Параметры.СтрокаПоиска);
		УстановитьПривилегированныйРежим(Ложь);
		
		Запрос.УстановитьПараметр("СтрокаПоиска", Параметры.СтрокаПоиска + "%");
		
		Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ПрежниеФИО.ФИО КАК ФИО,
			|	ПрежниеФИО.ФизическоеЛицо.Фамилия КАК Фамилия,
			|	ПрежниеФИО.ФизическоеЛицо.Имя КАК Имя,
			|	ПрежниеФИО.ФизическоеЛицо.Отчество КАК Отчество,
			|	Сотрудники.УточнениеНаименования,
			|	Сотрудники.Ссылка КАК Сотрудник,
			|	МАКСИМУМ(ПрежниеФИО.Период) КАК Период,
			|	Сотрудники.ПометкаУдаления
			|ПОМЕСТИТЬ ВТВсеСовпадения
			|ИЗ
			|	ВТПрежниеФИО КАК ПрежниеФИО
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
			|		ПО ПрежниеФИО.ФизическоеЛицо = Сотрудники.ФизическоеЛицо
			|
			|СГРУППИРОВАТЬ ПО
			|	ПрежниеФИО.ФИО,
			|	ПрежниеФИО.ФизическоеЛицо.Фамилия,
			|	ПрежниеФИО.ФизическоеЛицо.Имя,
			|	ПрежниеФИО.ФизическоеЛицо.Отчество,
			|	Сотрудники.УточнениеНаименования,
			|	Сотрудники.Ссылка,
			|	Сотрудники.ПометкаУдаления
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Сотрудники.ФизическоеЛицо.ФИО,
			|	Сотрудники.ФизическоеЛицо.Фамилия,
			|	Сотрудники.ФизическоеЛицо.Имя,
			|	Сотрудники.ФизическоеЛицо.Отчество,
			|	Сотрудники.УточнениеНаименования,
			|	Сотрудники.Ссылка,
			|	NULL,
			|	Сотрудники.ПометкаУдаления
			|ИЗ
			|	Справочник.Сотрудники КАК Сотрудники
			|ГДЕ
			|	Сотрудники.Наименование ПОДОБНО &СтрокаПоиска
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВсеСовпадения.ФИО КАК ФИО,
			|	ВсеСовпадения.УточнениеНаименования,
			|	ВсеСовпадения.Сотрудник КАК Сотрудник,
			|	ВсеСовпадения.Период КАК Период,
			|	ВсеСовпадения.Сотрудник.Код КАК Код,
			|	ВсеСовпадения.ПометкаУдаления,
			|	ВсеСовпадения.Фамилия,
			|	ВсеСовпадения.Имя,
			|	ВсеСовпадения.Отчество,
			|	ВсеСовпадения.Сотрудник.ФизическоеЛицо.ФИО КАК ФИОТекущее,
			|	ВсеСовпадения.Сотрудник.Наименование КАК Наименование
			|ИЗ
			|	ВТВсеСовпадения КАК ВсеСовпадения
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФИО";
			
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			
			ДанныеВыбора = Новый СписокЗначений;
			СтандартнаяОбработка = Ложь;
			ДлинаСтрокиПоиска = СтрДлина(Параметры.СтрокаПоиска);
			
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Если ЗначениеЗаполнено(Выборка.Период) Тогда
					
					Представление = Новый ФорматированнаяСтрока(
						Новый ФорматированнаяСтрока(
							Лев(Выборка.ФИО, ДлинаСтрокиПоиска),
							Новый Шрифт( , , Истина),
							WebЦвета.Зеленый),
						Сред(Выборка.ФИО, ДлинаСтрокиПоиска + 1),
						?(ПустаяСтрока(Выборка.УточнениеНаименования), "", " " + Выборка.УточнениеНаименования));
					
					Если ЗначениеЗаполнено(Выборка.Фамилия) Тогда
						ФИОТекущее = Новый Структура("Фамилия,Имя,Отчество");
						ЗаполнитьЗначенияСвойств(ФИОТекущее, Выборка);
					Иначе
						ФИОТекущее = Выборка.ФИОТекущее;
					КонецЕсли;
					
					Представление = Новый ФорматированнаяСтрока(
						Представление,
						" (" + ФизическиеЛицаЗарплатаКадрыКлиентСервер.ФамилияИнициалы(ФИОТекущее) + " " 
							+ НСтр("ru='с'") + " " + Формат(Выборка.Период, "ДЛФ=D") + " (" + Выборка.Код + "))");
					
				Иначе
					
					Представление = Новый ФорматированнаяСтрока(
						Новый ФорматированнаяСтрока(
							Лев(Выборка.Наименование, ДлинаСтрокиПоиска),
							Новый Шрифт( , , Истина),
							WebЦвета.Зеленый),
						Сред(Выборка.Наименование, ДлинаСтрокиПоиска + 1));
					
				КонецЕсли;
				
				ДанныеВыбора.Добавить(Выборка.Сотрудник, Представление, Выборка.ПометкаУдаления);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	СотрудникиФормыВнутренний.ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	СотрудникиФормыВнутренний.ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#КонецОбласти
