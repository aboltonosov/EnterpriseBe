
#Область ПрограммныйИнтерфейс

#Область ЭкспортныеФункцииДляИнтерактивнойРаботыТорговымиНадбавками

// Проверяет заполненность реквизитов, необходимых для назначения скидок
//
// Параметры:
//  Документ                    - ДокументОбъект - документ, для которого выполняются проверки
//  ИмяТабличнойЧасти           - Строка - имя табличной части, в которой необходимо осуществить проверку
//  ПредставлениеТабличнойЧасти - Строка - представление табличной части для информирования пользователя.
//
// Возвращаемое значение: Булево
//  Ложь, если необходимые данные не заполнены.
//
Функция ВозможноНазначениеТорговойНадбавки(Документ, ИмяТабличнойЧасти, ПредставлениеТабличнойЧасти) Экспорт

	Если Документ[ИмяТабличнойЧасти].Количество() = 0 Тогда
		
		ТекстПредупреждения = НСтр("ru='В документе не заполнена таблица %ПредставлениеТабличнойЧасти%. Торговая надбавка не может быть назначена'");
		ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
		Предупреждение(ТекстПредупреждения);
		Возврат Ложь;
		
	КонецЕсли;

	Возврат Истина;

КонецФункции

//Показывает оповещение пользователя об окончании назначения торговых надбавок.
//
// Параметры:
//  ТорговаяНадбавка - число.
//
Процедура ОповеститьОбОкончанииНазначенияТорговыхНадбавок(ТорговаяНадбавка = 0) Экспорт

	Если ЗначениеЗаполнено(ТорговаяНадбавка) Тогда
		
		ТекстСообщения = НСтр("ru = 'Назначена торговая надбавка %ТорговаяНадбавка%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТорговаяНадбавка%", ТорговаяНадбавка);
				
	Иначе
		
		ТекстСообщения = НСтр("ru = 'Торговые надбавки отменены'");
		
	КонецЕсли;
		
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Торговые надбавки'"),
		,
		ТекстСообщения,
		БиблиотекаКартинок.Информация32);

КонецПроцедуры // ОповеститьОбОкончанииНазначенияРучныхСкидокНаценок()

//Показывает оповещение пользователя об окончании назначения торговых надбавок.
//
// Параметры:
//  ТорговаяНадбавка - число.
//   
Процедура ОповеститьОбОкончанииНазначенияРозничныхСтавокНДС(РозничнаяСтавкаНДС = 0) Экспорт

	Если ЗначениеЗаполнено(РозничнаяСтавкаНДС)Тогда
		ТекстСообщения = НСтр("ru = 'Назначен процент розничного НДС %Процент%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Процент%", РозничнаяСтавкаНДС);	
	Иначе
		ТекстСообщения = НСтр("ru = 'Ставки розничного НДС отменены'");
	КонецЕсли;
		
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Ставки розничного НДС'"),
		,
		ТекстСообщения,
		БиблиотекаКартинок.Информация32);

КонецПроцедуры // ОповеститьОбОкончанииНазначенияРучныхСкидокНаценок()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти

#КонецОбласти

#Область ТорговыеНадбавкиРозничныйНДС

Процедура ЗаполнитьСтруктуруТорговыеНадбавкиРозничныйНДС(Объект, ЭтаФорма, СтруктураДействий) Экспорт

	Если ЭтаФорма.РассчитыватьРеквизитыРозницы И ЭтаФорма.ЭтоРозничныйСклад Тогда
		СтруктураДействий.Вставить("ЗаполнитьСтавкуТорговойНадбавки", Новый Структура("Склад,Дата",Объект.Склад, Объект.Дата));
		СтруктураДействий.Вставить("ЗаполнитьРозничнуюСтавкуНДС");
		СтруктураДействий.Вставить("РассчитатьРозничнуюЦену", Новый Структура("ИмяДокумента, ЦенаВключаетНДС, ВидЦен","Поступление", Объект.ЦенаВключаетНДС, ЭтаФорма["РозничныйВидЦен"]));
    КонецЕсли;

КонецПроцедуры

Процедура ДобавитьВСтруктуруРассчитатьРозничнуюЦену(Объект, ЭтаФорма, СтруктураДействий) Экспорт

	Если ЭтаФорма.РассчитыватьРеквизитыРозницы И ЭтаФорма.ЭтоРозничныйСклад Тогда
		СтруктураДействий.Вставить("РассчитатьРозничнуюЦену",  Новый Структура("ИмяДокумента,ЦенаВключаетНДС, ВидЦен","Поступление", Объект.ЦенаВключаетНДС, ЭтаФорма["РозничныйВидЦен"]));
	КонецЕсли;	

КонецПроцедуры

Процедура РассчитатьРозничнуюЦену(ИмяДокумента, Элементы, ЭтаФорма, Объект, КэшированныеЗначения, ЦенаВключаетНДС = Ложь) Экспорт  
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	СтруктураДействий = Новый Структура;
    СтруктураДействий.Вставить("РассчитатьРозничнуюЦену", 
		Новый Структура("ИмяДокумента,ЦенаВключаетНДС, ВидЦен", ИмяДокумента, ?(ИмяДокумента = "Перемещение", ЦенаВключаетНДС, Объект.ЦенаВключаетНДС), ЭтаФорма["РозничныйВидЦен"]));
		
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
				
КонецПроцедуры

Процедура ОткрытьФормуФормаСтавкиВРознице(ЭтаФорма, ЭтоТорговаяНадбавка, ВыделенныеСтроки) Экспорт

	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ЭтоТорговаяНадбавка", ЭтоТорговаяНадбавка);
	СтруктураПараметров.Вставить("ВыделенныеСтроки", ВыделенныеСтроки);
	ОткрытьФорму("ОбщаяФорма.ФормаСтавкиВРознице", СтруктураПараметров, ЭтаФорма,,,, Неопределено, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры
 
#КонецОбласти 

#Область ОбработкаПрайсЛист

Процедура ВыполнитьПечать(МассивДокументов, ОбъектыПечати, ЭтотОбъект, ИмяПечатнойФормы) Экспорт

	Если МассивДокументов = Неопределено
		ИЛИ МассивДокументов.Количество() = 0 Тогда
		
		ОбъектыПечати = Новый Массив;
		ОбъектыПечати.Добавить(ПредопределенноеЗначение("Документ.УстановкаЦенНоменклатуры.ПустаяСсылка"));
		
		ОписаниеКоманды = Новый Структура;
		ОписаниеКоманды.Вставить("ОбъектыПечати", ОбъектыПечати);
		ОписаниеКоманды.Вставить("Форма", ЭтотОбъект);
		
		Если ИмяПечатнойФормы = "ПечатьПереоценкаВРознице" Тогда
			//УправлениеПечатьюУТКлиент_Локализация.ПечатьПереоценкаВРознице(ОписаниеКоманды, ОбъектыПечати);
		Иначе
		    //УправлениеПечатьюУТКлиент_Локализация.ПечатьОписьАкт(ОписаниеКоманды, ОбъектыПечати);	
		КонецЕсли; 	
	Иначе		
		ДокументыУстановкиЦенНоменклатуры = Новый Массив;
		Для Каждого СтрокаТЧ Из МассивДокументов Цикл
			ДокументыУстановкиЦенНоменклатуры.Добавить(СтрокаТЧ.УстановкаЦенНоменклатуры);
		КонецЦикла;
		
		ОписаниеКоманды = Новый Структура;
		ОписаниеКоманды.Вставить("ОбъектыПечати", ДокументыУстановкиЦенНоменклатуры);
		ОписаниеКоманды.Вставить("Форма", ЭтотОбъект);
		
		Если ИмяПечатнойФормы = "ПечатьПереоценкаВРознице" Тогда
			//УправлениеПечатьюУТКлиент_Локализация.ПечатьПереоценкаВРознице(ОписаниеКоманды);
		Иначе
		    //УправлениеПечатьюУТКлиент_Локализация.ПечатьОписьАкт(ОписаниеКоманды);	
		КонецЕсли; 
				
	КонецЕсли;
	
КонецПроцедуры
  
#КонецОбласти 