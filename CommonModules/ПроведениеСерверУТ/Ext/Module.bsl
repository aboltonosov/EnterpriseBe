
#Область ПрограммныйИнтерфейс

#Область ПодготовкаИЗаписьДвиженийДокумента

// Процедура инициализирует общие структуры, используемые при проведении документов.
//  Вызывается из модуля документов при проведении.
//
// Параметры:
//  ДокументСсылка			 - ДокументСсылка - ссылка на документ
//  ДополнительныеСвойства	 - Структура - дополнительные свойства документа-объекта
//  РежимПроведения			 - РежимПроведенияДокумента - режим проведения
//
Процедура ИнициализироватьДополнительныеСвойстваДляПроведения(ДокументСсылка, ДополнительныеСвойства, РежимПроведения = Неопределено) Экспорт

	// В структуре "ДополнительныеСвойства" создаются свойства с ключами "ТаблицыДляДвижений", "ДляПроведения".

	// "ТаблицыДляДвижений" - структура, которая будет содержать таблицы значений с данными для выполнения движений.
	ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);

	// "ДляПроведения" - структура, содержащая свойства и реквизиты документа, необходимые для проведения.
	ДополнительныеСвойства.Вставить("ДляПроведения", Новый Структура);
	
	// Структура, содержащая ключ с именем "МенеджерВременныхТаблиц", в значении которого хранится менеджер временных таблиц.
	// Содержит для каждой временной таблицы ключ (имя временной таблицы) и значение (признак наличия записей во временной таблице).
	ДополнительныеСвойства.ДляПроведения.Вставить("СтруктураВременныеТаблицы", Новый Структура("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц));
	ДополнительныеСвойства.ДляПроведения.Вставить("РежимПроведения",           РежимПроведения);
	ДополнительныеСвойства.ДляПроведения.Вставить("МетаданныеДокумента",       ДокументСсылка.Метаданные());
	ДополнительныеСвойства.ДляПроведения.Вставить("Ссылка",                    ДокументСсылка);
	
КонецПроцедуры

// Выполняет закрытие менеджера временных таблиц в структуре дополнительных свойств документа, используемых 
// при проведении.
//
// Параметры:
//	ДополнительныеСвойства - Структура - структура с дополнительными свойствами документа, используемыми
//		при проведении.
//
Процедура ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства) Экспорт
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

// Функция формирует массив имен регистров, по которым документ имеет движения.
//  Вызывается при подготовке записей к регистрации движений.
//
// Параметры:
//  Регистратор					 - ДокументСсылка	 - ссылка на документ, для которого формируется список регистров
//  Движения					 - КоллекцияДвижений - движения документа
//  МассивИсключаемыхРегистров	 - Массив			 - исключаемые регистры
// 
// Возвращаемое значение:
//  Массив - массивимен регистров, по которым документ имеет движения.
//
Функция ПолучитьМассивИспользуемыхРегистров(Регистратор, Движения, МассивИсключаемыхРегистров = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Регистратор);

	Результат = Новый Массив;
	МаксимумТаблицВЗапросе = 256;

	СчетчикТаблиц   = 0;
	СчетчикДвижений = 0;

	ВсегоДвижений = Движения.Количество();
	ТекстЗапроса  = "";
	Для Каждого Движение Из Движения Цикл

		СчетчикДвижений = СчетчикДвижений + 1;

		ПропуститьРегистр = МассивИсключаемыхРегистров <> Неопределено
							И МассивИсключаемыхРегистров.Найти(Движение.Имя) <> Неопределено;

		Если Не ПропуститьРегистр Тогда

			Если СчетчикТаблиц > 0 Тогда

				ТекстЗапроса = ТекстЗапроса + "
				|ОБЪЕДИНИТЬ ВСЕ
				|";

			КонецЕсли;

			СчетчикТаблиц = СчетчикТаблиц + 1;

			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|""" + Движение.Имя + """ КАК ИмяРегистра
			|
			|ИЗ " + Движение.ПолноеИмя() + "
			|
			|ГДЕ Регистратор = &Регистратор
			|";

		КонецЕсли;

		Если СчетчикТаблиц = МаксимумТаблицВЗапросе Или СчетчикДвижений = ВсегоДвижений Тогда

			Запрос.Текст  = ТекстЗапроса;
			ТекстЗапроса  = "";
			СчетчикТаблиц = 0;

			Если Результат.Количество() = 0 Тогда

				Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ИмяРегистра");

			Иначе

				Выборка = Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					Результат.Добавить(Выборка.ИмяРегистра);
				КонецЦикла;

			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;

КонецФункции

// Процедура выполняет пордготовку наборов записей документа к записи движений.
//  1. Очищает наборы записей от "старых записей" (ситуация возможна только в толстом клиенте)
//  2. Взводит флаг записи у наборов, по которым документ имеет движения
//  Вызывается из модуля документов при проведении.
//
// Параметры:
//  Объект	 - ДокументОбъект - наборы записей которого нудно подготовить
//  ЭтоНовый - Булево - признак нового документа
//
Процедура ПодготовитьНаборыЗаписейКРегистрацииДвижений(Объект, ЭтоНовый = Ложь) Экспорт
	Перем ЭтоНовыйДокумент, МетаданныеДвижения;
	
	Для Каждого НаборЗаписей Из Объект.Движения Цикл

		Если НаборЗаписей.Количество() > 0 Тогда
			НаборЗаписей.Очистить();
		КонецЕсли;

	КонецЦикла;
	
	Если НЕ Объект.ДополнительныеСвойства.Свойство("ЭтоНовый", ЭтоНовыйДокумент) Тогда
		ЭтоНовыйДокумент = ЭтоНовый;
	КонецЕсли;
	
	Если НЕ ЭтоНовыйДокумент Тогда

		// Регистры, движения по которым формируются не из модуля менеджера документа.
		ИсключаемыеРегистры = Новый Массив;
		ИсключаемыеРегистры.Добавить("ГрафикПоступленияТоваров");
		//++ НЕ УТ 
		ИсключаемыеРегистры.Добавить("ГрафикЭтаповПроизводства");
		//-- НЕ УТ 
		
		// Регистры, движения по которым формируются не из модуля менеджера документа,
		// но должны удаляться при отмене проведения документа.
		Если Объект.ДополнительныеСвойства.Свойство("РежимЗаписи")
		 И НЕ Объект.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
			Если ТипЗнч(Объект.Ссылка) <> Тип("ДокументСсылка.ПереоценкаВалютныхСредств") Тогда
				ИсключаемыеРегистры.Добавить("РасчетыСКлиентамиПоДокументам");
				ИсключаемыеРегистры.Добавить("РасчетыСПоставщикамиПоДокументам");
			КонецЕсли;
			//++ НЕ УТ
			ИсключаемыеРегистры.Добавить("Хозрасчетный");
			ИсключаемыеРегистры.Добавить("ОтражениеДокументовВРеглУчете");
			ИсключаемыеРегистры.Добавить("ПланыПотребленияМатериалов");
			ИсключаемыеРегистры.Добавить("ПланыЗанятостиТрудовыхРесурсов");
			//-- НЕ УТ
			//++ НЕ УТКА
			ИсключаемыеРегистры.Добавить("Международный");
			ИсключаемыеРегистры.Добавить("ПланыЗанятостиВидовРабочихЦентров");
			ИсключаемыеРегистры.Добавить("ОтражениеДокументовВМеждународномУчете");
			//-- НЕ УТКА
			Если
			//++ НЕ УТКА
			 ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.МаршрутныйЛистПроизводства") Тогда
				Если Объект.Статус = Перечисления.СтатусыМаршрутныхЛистовПроизводства.Выполнен Тогда
					ИсключаемыеРегистры.Добавить("ПартииПроизводственныхЗатрат");  
					ИсключаемыеРегистры.Добавить("ПартииНезавершенногоПроизводства");
				КонецЕсли;
			ИначеЕсли
			//-- НЕ УТКА
			 ТипЗнч(Объект.Ссылка) <> Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями")
			 И ТипЗнч(Объект.Ссылка) <> Тип("ДокументСсылка.ПоступлениеУслугПрочихАктивов")
			 И ТипЗнч(Объект.Ссылка) <> Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров")
			 И ТипЗнч(Объект.Ссылка) <> Тип("ДокументСсылка.ЗаписьКнигиПокупок")
			 И ТипЗнч(Объект.Ссылка) <> Тип("ДокументСсылка.ЗаписьКнигиПродаж")
			 И ТипЗнч(Объект.Ссылка) <> Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
			 И ТипЗнч(Объект.Ссылка) <> Тип("ДокументСсылка.ВозвратТоваровОтКлиента")
			 И ТипЗнч(Объект.Ссылка) <> Тип("ДокументСсылка.КорректировкаРеализации")
			 //++ НЕ УТ
			 И ТипЗнч(Объект.Ссылка) <> Тип("ДокументСсылка.ПередачаМатериаловВПроизводство")
			 И ТипЗнч(Объект.Ссылка) <> Тип("ДокументСсылка.ВыпускПродукции")
			 //-- НЕ УТ
			 //++ НЕ УТКА
			 И ТипЗнч(Объект.Ссылка) <> Тип("ДокументСсылка.ДвижениеПродукцииИМатериалов")
			 //-- НЕ УТКА
			 И ТипЗнч(Объект.Ссылка) <> Тип("ДокументСсылка.КорректировкаПоступления") Тогда
				ИсключаемыеРегистры.Добавить("ПартииПроизводственныхЗатрат");
				//++ НЕ УТ
				ИсключаемыеРегистры.Добавить("ПартииНезавершенногоПроизводства");
				//-- НЕ УТ
				ИсключаемыеРегистры.Добавить("ПартииТоваровОрганизаций");
				ИсключаемыеРегистры.Добавить("ПартииТоваровПереданныеНаКомиссию");
				ИсключаемыеРегистры.Добавить("ПартииРасходовНаСебестоимостьТоваров");
				ИсключаемыеРегистры.Добавить("ПартииЗатратНаВыпуск");
				ИсключаемыеРегистры.Добавить("НДСЗаписиКнигиПокупок");
				ИсключаемыеРегистры.Добавить("НДСЗаписиКнигиПродаж");
			КонецЕсли;
			
		КонецЕсли;
		
		Если Объект.ДополнительныеСвойства.Свойство("ДляПроведения")
		 И Объект.ДополнительныеСвойства.ДляПроведения.Свойство("МетаданныеДокумента") Тогда
			МетаданныеДвижения = Объект.ДополнительныеСвойства.ДляПроведения.МетаданныеДокумента.Движения;
		Иначе
			МетаданныеДвижения = Объект.Метаданные().Движения;
		КонецЕсли;
		
		МассивИменРегистров = ПолучитьМассивИспользуемыхРегистров(
			Объект.Ссылка,
			МетаданныеДвижения,
			ИсключаемыеРегистры);

		Для Каждого ИмяРегистра Из МассивИменРегистров Цикл
			Объект.Движения[ИмяРегистра].Записывать = Истина;
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

// Процедура записывает движения документа. Дополнительно происходит копирование параметров
//  в модули наборов записей для выполнения регистрации изменений в движениях.
//  Процедура вызывается из модуля документов при проведении.
//
// Параметры:
//  Объект	 - ДокументОбъект - объект, для которого нужно записать движения
//
Процедура ЗаписатьНаборыЗаписей(Объект) Экспорт
	Перем РегистрыДляКонтроля, РассчитыватьИзменения, ПараметрыКонтроля;
	
	// Заполним общие дополнительные свойства всех движений
	ПартионныйУчетВключен = УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВключен(НачалоМесяца(Объект.Дата));
	
	Для Каждого Движение Из Объект.Движения Цикл
		
		Движение.ДополнительныеСвойства.Вставить("ЭтоНовый", Объект.ДополнительныеСвойства.ЭтоНовый);
		Движение.ДополнительныеСвойства.Вставить("РежимЗаписи", Объект.ДополнительныеСвойства.РежимЗаписи);
		Движение.ДополнительныеСвойства.Вставить("ДатаРегистратора", Объект.Дата);
		Движение.ДополнительныеСвойства.Вставить("СтруктураОтраженияРеглПроводок", Новый Структура);
		
		Движение.ДополнительныеСвойства.Вставить("ДляПроведения", 
			Новый Структура("СтруктураВременныеТаблицы, ПартионныйУчетВключен",
				// Структура для передачи данных в модули наборов записей.
				Объект.ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы,
				ПартионныйУчетВключен));
				
		РегистрыНакопления.СебестоимостьТоваров.ИнициализироватьСохранениеДвиженийНабораЗаписейЗаПериод(
				Движение,
				Объект.ДополнительныеСвойства);
		
	КонецЦикла;
	
	// Регистры, для которых будут рассчитаны таблицы изменений движений.
	Если Объект.ДополнительныеСвойства.ДляПроведения.Свойство("РегистрыДляКонтроля", РегистрыДляКонтроля) Тогда
		
		// Установка флага регистрации изменений в наборе записей.
		Если НЕ Объект.ДополнительныеСвойства.Свойство("РассчитыватьИзменения", РассчитыватьИзменения) Тогда
			РассчитыватьИзменения = Истина;
		КонецЕсли;
		
		Для Каждого НаборЗаписей Из РегистрыДляКонтроля Цикл
			Если НаборЗаписей.Записывать Тогда
				
				НаборЗаписей.ДополнительныеСвойства.Вставить("РассчитыватьИзменения", РассчитыватьИзменения);
				
				// Необходимость контроля обеспечения устанавливается при выполнении рекомендаций в "Состояние обеспечения заказов".
				КонтролироватьОбеспечение = Неопределено;
				Если Объект.ДополнительныеСвойства.Свойство("КонтролироватьОбеспечение", КонтролироватьОбеспечение) Тогда
					НаборЗаписей.ДополнительныеСвойства.Вставить("КонтролироватьОбеспечение", КонтролироватьОбеспечение);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;

	КонецЕсли;
	
	//Для отработки случаев, когда документ перестает делать движения по регистру (при изменении вида операции). Очистим оффлайновые регистры.
	Если Объект.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение И Не Объект.ДополнительныеСвойства.ЭтоНовый Тогда
		Если Объект.Движения.Найти("РасчетыСКлиентами") <> Неопределено Тогда
			
			СтатусОплачивается = Неопределено;
			
			Если Объект.Движения.РасчетыСКлиентами.Записывать
					И (Объект.Движения.РасчетыСКлиентами.Количество() = 0
					ИЛИ (Объект.ДополнительныеСвойства.Свойство("СтатусОплачивается", СтатусОплачивается) И СтатусОплачивается)) Тогда
				Объект.Движения.РасчетыСКлиентамиПоДокументам.Записывать = Истина;
			КонецЕсли;

		КонецЕсли;

		Если Объект.Движения.Найти("РасчетыСПоставщиками") <> Неопределено Тогда

			СтатусОплачивается = Неопределено;
			
			Если Объект.Движения.РасчетыСПоставщиками.Записывать
					И (Объект.Движения.РасчетыСПоставщиками.Количество() = 0
					ИЛИ (Объект.ДополнительныеСвойства.Свойство("СтатусОплачивается", СтатусОплачивается) И СтатусОплачивается)) Тогда
				Объект.Движения.РасчетыСПоставщикамиПоДокументам.Записывать = Истина;
			КонецЕсли;

		КонецЕсли;
		
		Если Объект.Движения.Найти("МатериалыИРаботыВПроизводстве") <> Неопределено И Объект.Движения.Найти("ПартииПроизводственныхЗатрат") <> Неопределено Тогда
			Если Объект.Движения.МатериалыИРаботыВПроизводстве.Количество() = 0 И Объект.Движения.МатериалыИРаботыВПроизводстве.Записывать Тогда
				Объект.Движения.ПартииПроизводственныхЗатрат.Записывать = Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

//++ НЕ УТКА
	Если Объект.Движения.Найти("ЭтапыПроизводства") <> Неопределено Тогда
		Если Объект.ДополнительныеСвойства.Свойство("ТребуетсяПроверкаГрафика") Тогда
			Объект.Движения.ЭтапыПроизводства.ДополнительныеСвойства.Вставить("ТребуетсяПроверкаГрафика", Объект.ДополнительныеСвойства.ТребуетсяПроверкаГрафика);
		Иначе
			Объект.Движения.ЭтапыПроизводства.ДополнительныеСвойства.Вставить("ТребуетсяПроверкаГрафика", Истина);
		КонецЕсли;
	КонецЕсли;
//-- НЕ УТКА
	
	ДвиженияТоварыОрганизаций = Объект.Движения.Найти("ТоварыОрганизаций");
	ДвиженияПартииТоваровОрганизаций = Объект.Движения.Найти("ПартииТоваровОрганизаций");
	ДвиженияРасчетыСКлиентамиПоДокументам = Объект.Движения.Найти("РасчетыСКлиентамиПоДокументам");
	
	Если ДвиженияТоварыОрганизаций <> Неопределено
		И ДвиженияТоварыОрганизаций.Количество() = 0
		И ДвиженияТоварыОрганизаций.Записывать Тогда
		
		Если ДвиженияПартииТоваровОрганизаций <> Неопределено Тогда
			ДвиженияПартииТоваровОрганизаций.Записывать = Истина;
		КонецЕсли;

		Если ДвиженияРасчетыСКлиентамиПоДокументам <> Неопределено Тогда
			ДвиженияРасчетыСКлиентамиПоДокументам.Записывать = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	ЕстьДвиженияПрочиеАктивыПассивы = Объект.Движения.Найти("ПрочиеАктивыПассивы") <> Неопределено;
	Если Объект.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение
		И ТипЗнч(Объект) <> Тип("ДокументОбъект.РасчетСебестоимостиТоваров")
//++ НЕ УТКА
		И НЕ УправлениеПроизводством.ВыполняетсяПакетноеФормированиеЭтапов(Объект)
//-- НЕ УТКА
		И ЕстьДвиженияПрочиеАктивыПассивы И ПолучитьФункциональнуюОпцию("ФормироватьУправленческийБаланс") Тогда
		УправленческийУчетПроведениеСервер.ДобавитьДвиженияАктивовПассивов(Объект);
	КонецЕсли;
	
	Объект.Движения.Записать();
	
КонецПроцедуры

// Процедура переписывает строки таблицы в указанные движения документа
//
// Параметры:
//	Таблица  - ТаблицаЗначений   - Таблица, строки которой должны быть помещены в движения документа,
//	Движения - КоллекцияДвижений - Элемент коллекции движений документа, набор записей регистра,
//	Отказ    - Булево            - Признак отказа выполнения транзакции.
//
Процедура ОтразитьДвижения(Таблица, Движения, Отказ) Экспорт
	
	Если Отказ Или Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.Записывать = Истина;
	Движения.Загрузить(Таблица);
	
КонецПроцедуры

// Загружает ТаблицыДляДвижений в наборы записей регистров движений документа.
//
// Параметры:
//	ДополнительныеСвойства - Структура - структура с дополнительными свойствами документа, используемыми при проведении.
//		в структуре обязательно должен быть ключ "ТаблицыДляДвижений" содержащий массив таблиц значений 
//		предназначеные для загрузки в наборы записей;
//	Движения - КоллекцияДвижений - коллекция движений документа.
//
Процедура ЗагрузитьТаблицыДвижений(ДополнительныеСвойства, Движения) Экспорт
	
	Если НЕ ДополнительныеСвойства.Свойство("ТаблицыДляДвижений") Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицыДляДвижений = ДополнительныеСвойства.ТаблицыДляДвижений;
	Для Каждого Таблица Из ТаблицыДляДвижений Цикл
		
		ИмяРегистра = Таблица.Ключ;
		Если ВРег(Лев(ИмяРегистра,7))= "ТАБЛИЦА" Тогда
			ИмяРегистра = Прав(ИмяРегистра, СтрДлина(ИмяРегистра)-7);
		КонецЕсли;
		
		//++ НЕ УТ
		Если ИмяРегистра = "ОтражениеДокументовВРеглУчете" Тогда
			// Формирование движений выполняется процедурой РеглУчетПроведениеСервер.ЗарегистрироватьКОтражению().
			Продолжить;
		КонецЕсли;
		//-- НЕ УТ
		
		Если Таблица.Значение.Количество() > 0 И Движения.Найти(ИмяРегистра) <> Неопределено Тогда
			Движения[ИмяРегистра].Записывать = Истина;
			Движения[ИмяРегистра].Загрузить(Таблица.Значение);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура очищает и записывает пустые движения по указанным регистрам
//
// Параметры:
// 		Движения - КоллекцияДвижений - Коллекция наборов записей регистров документа
// 		Регистры - Строка - Строка с именами регистров для очистки, перечисленными через запятую
//
Процедура ОчиститьЗаписатьДвижения(Движения, Регистры) Экспорт
	
	СтруктураРегистров = Новый Структура(Регистры);
	Для Каждого КлючИЗначение Из СтруктураРегистров Цикл
		Движения[КлючИЗначение.Ключ].Очистить();
		Движения[КлючИЗначение.Ключ].Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры

// Процедура компонует текст запроса, выполняет запрос и выгружает результаты запроса в таблицы.
//
// Параметры:
//  Запрос					 - Запрос	 - запрос, параметры которого предварительно установлены.
//  ТекстыЗапроса			 - СписокЗначений	 - в списке перечислены тексты запросов и их имена.
//  Таблицы					 - Структура		 - структура в которую будут помещены полученные таблицы для движений.
//  ДобавитьРазделитель		 - Булево			 - Истина, если нужно добавить разделитель ";" между запросами.
//  ДобавлятьСловоТаблица	 - Булево			 - Истина, если к имени таблицы движений нужно вначало добавить слово "Таблица".
//  ТолькоОтмеченные		 - Булево			 - признак пропуска инициализации таблицы движения.
//
Процедура ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, Таблицы, ДобавитьРазделитель = Ложь, ДобавлятьСловоТаблица = Истина, ТолькоОтмеченные = Ложь) Экспорт
	
	ТаблицыЗапроса = ОбщегоНазначенияУТ.ВыгрузитьРезультатыЗапроса(Запрос, ТекстыЗапроса,, ДобавитьРазделитель);
	
	// Помещение результатов запроса в таблицы
	Для Каждого ТекстЗапроса из ТекстыЗапроса Цикл

		ИмяТаблицы = ТекстЗапроса.Представление;

		Если Не ПустаяСтрока(ИмяТаблицы) И (Не ТолькоОтмеченные Или ТекстЗапроса.Пометка) Тогда

			Если ДобавлятьСловоТаблица Тогда
				// Таблицы для проведения должны начинаться с "Таблица"
				Если НЕ СтрНачинаетсяС(ИмяТаблицы, "Таблица") Тогда
					ИмяТаблицы = "Таблица" + ИмяТаблицы;
				КонецЕсли;
			КонецЕсли;
			
			Таблицы.Вставить(ИмяТаблицы, ТаблицыЗапроса[ТекстЗапроса.Представление]);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

// Проверяет наличие текста запроса для формирования указанной таблицы
//
// Параметры:
//  ИмяТаблицы		 - Строка		 - имя таблицы
//  ТекстыЗапроса	 - СписокЗначений	 - список значений, значениями которого являются блоки запроса,
//  	синонимами - имена таблиц в которые необходимо поместить
//  	результат выполнения каждого отдельного блока запроса.
// 
// Возвращаемое значение:
//  Булево - Истина, если текст запроса есть.
//
Функция ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Экспорт

	Если ТекстыЗапроса = Неопределено Тогда
		Возврат Истина;
	КонецЕсли; 
	
	Для каждого ТекстЗапроса Из ТекстыЗапроса Цикл
		Если НРег(ТекстЗапроса.Представление) = НРег(ИмяТаблицы) Тогда
			Возврат Истина;
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат Ложь;

КонецФункции

// Определяет необходимость подготовить таблицу для формирования движений
//
// Параметры:
//  ИмяРегистра	- Строка - имя регистра. Например "ТоварыНаСкладах"
//  Регистры	- Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров
//													Если неопределено - то всегда возвращается ИСТИНА
// 
// Возвращаемое значение:
//   - Булево - Истина, если требуется инициализировать указанную таблицу
//
Функция ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Экспорт

	Если ЗначениеЗаполнено(Регистры) Тогда
		
		Если ТипЗнч(Регистры) = Тип("Строка") Тогда
			МассивРегистров = Новый Структура(Регистры);
		Иначе
			МассивРегистров = Регистры;
		КонецЕсли;
		
		Если НЕ МассивРегистров.Свойство(ИмяРегистра) Тогда
			Возврат Ложь;
		КонецЕсли; 
		
	КонецЕсли; 
	
	Возврат Истина;

КонецФункции

// Процедура формирует текст исключения и вызывает исключение
//  используется для прерывания проведения в документах для которых запрещено выборочное проведение по регистрам
//
// Параметры:
//  ЗапретныйДокумент	 - ДокументСсылка, ДокументОбъект	 - документ для которого необходимо сформировать и вызвать исключения
//
Процедура ЗапретВыборочногоПроведенияПоРегистрам(ЗапретныйДокумент) Экспорт
	
	ТекстИсключения = СтрШаблон(НСтр("ru = 'Для документа ""%1"" запрещено выборочное проведение по регистрам.'"),
								ЗапретныйДокумент.Метаданные().Синоним);
	ВызватьИсключение ТекстИсключения;
	
КонецПроцедуры

// Процедура формирует движения по регистрам заданий,
// которые используются при актуализиации расчетов, если в 
// доп.свойствах объекта содержится временная таблица, соответствующая
// регистру заданий.
//
// Параметры:
//  Объект	 - ДокументОбъект - документ для котого формируются записи.
//
Процедура СформироватьЗаписиРегистровЗаданий(Объект) Экспорт
	
	ВзаиморасчетыСервер.ОтразитьЗаданияКРаспределениюРасчетовСКлиентами(Объект, Объект.ДополнительныеСвойства);
	ВзаиморасчетыСервер.ОтразитьЗаданияКРаспределениюРасчетовСПоставщиками(Объект, Объект.ДополнительныеСвойства);
	ПартионныйУчетСервер.ОтразитьЗаданияКРасчетуСебестоимости(Объект, Объект.ДополнительныеСвойства);
	ЗакрытиеМесяцаУТВызовСервера.ОтразитьЗаданияКЗакрытиюМесяца(Объект, Объект.ДополнительныеСвойства);
	УчетНДСУТ.ОтразитьЗаданияКФормированиюЗаписейКнигиПокупокПродаж(Объект, Объект.ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область ПодготовкаИЗаписьПодчиненныхДанныхПослеПроведенияДокумента

// Проверяет наличие дополнительного свойства, отвечающего за параметры записи подчиненных данных, осуществляемой
//  после записи документа и его движений.
//
// Параметры:
//  ДополнительныеСвойства	 - Структура - дополнительные свойства регистра
//  ТипПодчиненныхДанных	 - Строка	 - описание типа подчиненных данных
// 
// Возвращаемое значение:
//   - Булево - Истина, если требуется записать.
//
Функция ЗаписыватьПодчиненныеДанные(ДополнительныеСвойства, ТипПодчиненныхДанных) Экспорт
	
	Если Не ДополнительныеСвойства.Свойство("ДляЗаписиПодчиненныхДанных") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ТипПодчиненныхДанных = "СостоянияЗаказов" Тогда
		Возврат ДополнительныеСвойства.ДляЗаписиПодчиненныхДанных.Свойство("СтруктураДляРасчетаСостояний");
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Добавляет в структуру дополнительных свойств регистра накопления параметры записи подчиненных данных, осуществляемой
//  после записи документа и его движений.
//
// Параметры:
//  ДополнительныеСвойства	 - Структура - дополнительные свойства регистра
//  ТипПодчиненныхДанных	 - Строка - описание типа подчиненных данных
//
Процедура ДобавитьСтруктуруЗаписиПодчиненныхДанных(ДополнительныеСвойства, ТипПодчиненныхДанных) Экспорт
	
	Если Не ДополнительныеСвойства.Свойство("ДляЗаписиПодчиненныхДанных") Тогда
		ДополнительныеСвойства.Вставить("ДляЗаписиПодчиненныхДанных", Новый Структура());
	КонецЕсли;
		
	Если ТипПодчиненныхДанных = "СостоянияЗаказов" Тогда
		
		СтруктураДляРасчетаСостояний = Новый Структура("МассивЗаказов", Новый Массив());
		ДополнительныеСвойства.ДляЗаписиПодчиненныхДанных.Вставить("СтруктураДляРасчетаСостояний", СтруктураДляРасчетаСостояний);
		
	КонецЕсли;
	
КонецПроцедуры

// Добавляет в структуру дополнительных свойств объекта параметры записи подчиненных данных, осуществляемой
//  после записи документа и его движений.
//
// Параметры:
//  ДополнительныеСвойства	 - Структура - дополнительные свойства объекта.
//  Ссылка					 - ДокументСсылка - ссылка на заказ
//
Процедура ДобавитьЗаказДляРасчетаСостояний(ДополнительныеСвойства, Ссылка) Экспорт
	
	СтруктураДляРасчетаСостояний = Новый Структура("МассивЗаказов", Новый Массив());
	СтруктураДляРасчетаСостояний.МассивЗаказов.Добавить(Ссылка);
	ДополнительныеСвойства.Вставить("ДляЗаписиПодчиненныхДанных", Новый Структура("СтруктураДляРасчетаСостояний", СтруктураДляРасчетаСостояний));
	
КонецПроцедуры

// Осуществляеет запись подчиненных данных после записи документа и его движений.
//
// Параметры:
//  Объект	 - ДокументОбъект	 - документ для контроля
//  Отказ	 - булево			 - признак отказа от записи
//
Процедура ЗаписатьПодчиненныеНаборамЗаписейДанные(Объект, Отказ) Экспорт
	
	МассивЗаказов = Новый Массив();
	Для Каждого Набор Из Объект.Движения Цикл
		
		Если Не Набор.ДополнительныеСвойства.Свойство("ДляЗаписиПодчиненныхДанных") Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураСвойств = Набор.ДополнительныеСвойства.ДляЗаписиПодчиненныхДанных;
		
		Если СтруктураСвойств.Свойство("СтруктураДляРасчетаСостояний") Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивЗаказов, СтруктураСвойств.СтруктураДляРасчетаСостояний.МассивЗаказов);
		КонецЕсли;
		
	КонецЦикла;
	
	Если Объект.ДополнительныеСвойства.Свойство("ДляЗаписиПодчиненныхДанных") Тогда
		
		СтруктураСвойств = Объект.ДополнительныеСвойства.ДляЗаписиПодчиненныхДанных;
		Если СтруктураСвойств.Свойство("СтруктураДляРасчетаСостояний") Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивЗаказов, СтруктураСвойств.СтруктураДляРасчетаСостояний.МассивЗаказов);
		КонецЕсли;
		
	КонецЕсли;
	
	РегистрыСведений.СостоянияВнутреннихЗаказов.ОтразитьСостояниеЗаказа(МассивЗаказов, Отказ);
	
//++ НЕ УТКА
	УправлениеПроизводством.ПриИзмененииОбособленногоОбеспечения(Объект, МассивЗаказов);
//-- НЕ УТКА
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыКонтроляДвиженийДокументовПоРегистрам

// Процедура выполняет контроль результатов проведения.
//  Процедура вызывается из модуля документов при проведении.
//
// Параметры:
//  Объект	 - ДокументОбъект - документ для контроля
//  Отказ	 - булево - признак отказа от записи
//
Процедура ВыполнитьКонтрольРезультатовПроведения(Объект, Отказ) Экспорт

	Если ЗначениеЗаполнено(ПараметрыСеанса.ПараметрыОбработчикаОбновления.РежимВыполнения) 
		Или Объект.ДополнительныеСвойства.ДляПроведения.РегистрыДляКонтроля.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ДанныеТаблиц    = Объект.ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	ПакетЗапросов   = Новый Запрос;
	МассивКонтролей = Новый Массив;
	ТекстЗапроса    = "";

	// Контроль отрицательных остатков по товарам
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияСвободныеОстаткиИзменение")
		Или ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияГрафикОтгрузкиТоваровИзменение") Тогда

		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаКонтрольОбеспечения(
			ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияСвободныеОстаткиИзменение"),
			ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияГрафикОтгрузкиТоваровИзменение"));

		МассивКонтролей.Добавить(Врег("ОбеспечениеВременнаяТаблица1"));
		МассивКонтролей.Добавить(Врег("ОбеспечениеВременнаяТаблица2"));
		МассивКонтролей.Добавить(Врег("Обеспечение"));

	КонецЕсли;

	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияТоварыКОтгрузкеИзменениеСводно") Тогда

		МассивКонтролей.Добавить(Врег("ДвиженияТоварыКОтгрузкеСводно"));

		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	Остатки.Номенклатура      КАК Номенклатура,
		|	Остатки.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
		|	Остатки.Характеристика    КАК Характеристика,
		|	Остатки.Назначение    	  КАК Назначение,
		|	Остатки.Склад             КАК Склад,
		|	Остатки.Серия             КАК Серия,
		|	СУММА(Остатки.Количество) КАК Количество
		|
		|ИЗ 
		|(ВЫБРАТЬ
		|	Т.Номенклатура       КАК Номенклатура,
		|	Т.Характеристика     КАК Характеристика,
		|	Т.Назначение     	 КАК Назначение,
		|	Т.Склад              КАК Склад,
		|	Т.Серия              КАК Серия,
		|	-Т.ВРезервеОстаток - Т.КОтгрузкеОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Остатки(
		|			,
		|			(Номенклатура, Характеристика, Назначение, Склад, Серия) В
		|				(ВЫБРАТЬ
		|					Т.Номенклатура,
		|					Т.Характеристика,
		|					Т.Назначение,
		|					Т.Склад,
		|					Т.Серия
		|				ИЗ
		|					ДвиженияТоварыКОтгрузкеИзменениеСводно КАК Т)) КАК Т
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Т.Номенклатура    КАК Номенклатура,
		|	Т.Характеристика  КАК Характеристика,
		|	Т.Назначение	  КАК Назначение,
		|	Т.Склад           КАК Склад,
		|	Т.Серия           КАК Серия,
		|	Т.ВНаличииОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			,
		|			(Номенклатура, Характеристика, Назначение, Склад, Серия) В
		|				(ВЫБРАТЬ
		|					Т.Номенклатура,
		|					Т.Характеристика,
		|					Т.Назначение,
		|					Т.Склад,
		|					Т.Серия
		|				ИЗ
		|					ДвиженияТоварыКОтгрузкеИзменениеСводно КАК Т)) КАК Т
		|) КАК Остатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Остатки.Номенклатура,
		|	Остатки.Характеристика,
		|	Остатки.Назначение,
		|	Остатки.Склад,
		|	Остатки.Серия
		|
		|ИМЕЮЩИЕ
		|	СУММА(Остатки.Количество) < 0	
		|;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ОбеспечениеЗаказовИзменение") Тогда

		ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров = 
			Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
		Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров = 0 Тогда
			МассивКонтролей.Добавить(Врег("ОбеспечениеЗаказов"));
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	Таблица.Номенклатура                     КАК Номенклатура,
			|	Таблица.ЕдиницаИзмерения                 КАК ЕдиницаИзмерения,
			|	Таблица.Характеристика                   КАК Характеристика,
			|	Таблица.Склад                            КАК Склад,
			|	Таблица.Назначение                       КАК Назначение,
			|
			|	Таблица.Заказать                         КАК Заказать,
			|	Таблица.Наличие                          КАК Наличие,
			|	Таблица.Потребность                      КАК Потребность,
			|
			|	Таблица.НаличиеИзменение                 КАК НаличиеИзменение,
			|	Таблица.ПотребностьИзменение             КАК ПотребностьИзменение,
			|	Таблица.ЗаказатьИзменение                КАК ЗаказатьИзменение,
			|
			|	Таблица.ОшибкаЗаказатьМеньшеНуля         КАК ОшибкаЗаказатьМеньшеНуля,
			|	Таблица.ВеличинаЗаказатьМеньшеНуля       КАК ВеличинаЗаказатьМеньшеНуля,
			|	Таблица.ОшибкаНаличиеВМинусе             КАК ОшибкаНаличиеВМинусе,
			|	Таблица.ОшибкаНаличиеБольшеПотребности   КАК ОшибкаНаличиеБольшеПотребности,
			|	Таблица.ВеличинаНаличиеБольшеПотребности КАК ВеличинаНаличиеБольшеПотребности
			|
			|ИЗ(
			|	ВЫБРАТЬ
			|		Остатки.Номенклатура                      КАК Номенклатура,
			|		Остатки.Номенклатура.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
			|		Остатки.Характеристика                    КАК Характеристика,
			|		Остатки.Склад                             КАК Склад,
			|		Остатки.Назначение                        КАК Назначение,
			|		Остатки.Заказать                          КАК Заказать,

			|		Остатки.Наличие                           КАК Наличие,
			|		Остатки.Потребность                       КАК Потребность,
			|		// Ресурсы которые изменились
			|		ТаблицаИзменений.НаличиеИзменение         КАК НаличиеИзменение,
			|		ТаблицаИзменений.ПотребностьИзменение     КАК ПотребностьИзменение,
			|		ТаблицаИзменений.ЗаказатьИзменение        КАК ЗаказатьИзменение,
			|
			|		//Ошибка Заказать
			|		ВЫБОР КОГДА ТаблицаИзменений.ЗаказатьИзменение >0 И Остатки.Заказать < 0 ТОГДА
			|					ИСТИНА
			|				ИНАЧЕ
			|					ЛОЖЬ
			|			КОНЕЦ                                 КАК ОшибкаЗаказатьМеньшеНуля,
			|		Остатки.Заказать                          КАК ВеличинаЗаказатьМеньшеНуля,
			|
			|
			|		// Ошибка наличия товара под назначение
			|		ВЫБОР КОГДА ТаблицаИзменений.НаличиеИзменение >0 И Остатки.Наличие < 0 ТОГДА
			|					ИСТИНА
			|				ИНАЧЕ
			|					ЛОЖЬ
			|			КОНЕЦ                                 КАК ОшибкаНаличиеВМинусе,
			|
			|		// Ошибка наличия больше потребности
			|		ВЫБОР КОГДА (ТаблицаИзменений.НаличиеИзменение <0 ИЛИ ТаблицаИзменений.ПотребностьИзменение >0)
			|					И (Остатки.Наличие > Остатки.Потребность И Остатки.Заказать>=0) ТОГДА
			|					ИСТИНА
			|				ИНАЧЕ
			|					ЛОЖЬ
			|			КОНЕЦ                                 КАК ОшибкаНаличиеБольшеПотребности,
			|		Остатки.Наличие - Остатки.Потребность     КАК ВеличинаНаличиеБольшеПотребности
			|
			|	ИЗ(
			|		ВЫБРАТЬ
			|			Остатки.Номенклатура                   КАК Номенклатура,
			|			Остатки.Характеристика                 КАК Характеристика,
			|			Остатки.Склад                          КАК Склад,
			|			Остатки.Назначение                     КАК Назначение,
			|			Остатки.КЗаказуОстаток                 КАК Заказать,
			|			Остатки.НаличиеПодЗаказОстаток         КАК Наличие,
			|			Остатки.ПотребностьОстаток             КАК Потребность
			|		ИЗ
			|			РегистрНакопления.ОбеспечениеЗаказов.Остатки(,
			|				(Номенклатура, Характеристика, Склад, Назначение) В(
			|					ВЫБРАТЬ
			|						Таблица.Номенклатура,
			|						Таблица.Характеристика,
			|						Таблица.Склад,
			|						Таблица.Назначение
			|					ИЗ
			|						ОбеспечениеЗаказовИзменение КАК Таблица)) КАК Остатки
			|
			|	) КАК Остатки
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ОбеспечениеЗаказовИзменение КАК ТаблицаИзменений
			|	ПО
			|		Остатки.Номенклатура     = ТаблицаИзменений.Номенклатура
			|		И Остатки.Характеристика = ТаблицаИзменений.Характеристика
			|		И Остатки.Склад          = ТаблицаИзменений.Склад
			|		И Остатки.Назначение     = ТаблицаИзменений.Назначение
			|
			|) КАК Таблица
			|ГДЕ
			|	Таблица.ОшибкаЗаказатьМеньшеНуля = ИСТИНА
			|	ИЛИ Таблица.ОшибкаНаличиеВМинусе = ИСТИНА
			|	ИЛИ Таблица.ОшибкаНаличиеБольшеПотребности = ИСТИНА";
		
		Иначе
			Если НЕ ПакетЗапросов.Параметры.Свойство("ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров") Тогда
				ПакетЗапросов.УстановитьПараметр("ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров",
					Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить());
			КонецЕсли;
			
			Если НЕ ПакетЗапросов.Параметры.Свойство("МерныеТипыЕдиницИзмерений") Тогда
				ПакетЗапросов.УстановитьПараметр("МерныеТипыЕдиницИзмерений",
					Справочники.УпаковкиЕдиницыИзмерения.МерныеТипыЕдиницИзмерений());
			КонецЕсли;
			
			МассивКонтролей.Добавить(Врег("ДвиженияОбеспечениеЗаказовИзменениеМерныеТовары"));
			МассивКонтролей.Добавить(Врег("ВТДопустимыеОтклоненияОбеспечениеЗаказов"));
			МассивКонтролей.Добавить(Врег("ОбеспечениеЗаказов"));
			
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	Таблица.Номенклатура,
			|	Таблица.Характеристика,
			|	Таблица.Склад,
			|	Таблица.Назначение
			|ПОМЕСТИТЬ ДвиженияОбеспечениеЗаказовИзменениеМерныеТовары
			|ИЗ
			|	ОбеспечениеЗаказовИзменение КАК Таблица
			|ГДЕ 
			|	Таблица.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В (&МерныеТипыЕдиницИзмерений)
			|СГРУППИРОВАТЬ ПО
			|	Таблица.Номенклатура,
			|	Таблица.Характеристика,
			|	Таблица.Склад,
			|	Таблица.Назначение
			|ИНДЕКСИРОВАТЬ ПО
			|	Таблица.Номенклатура,
			|	Таблица.Характеристика,
			|	Таблица.Склад,
			|	Таблица.Назначение
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|";
			
			//Допустимые отклонения
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	ОбеспечениеЗаказов.Номенклатура   КАК Номенклатура,
			|	ОбеспечениеЗаказов.Характеристика КАК Характеристика,
			|	ОбеспечениеЗаказов.Склад          КАК Склад,
			|	ОбеспечениеЗаказов.Назначение     КАК Назначение,
			|	СУММА(ОбеспечениеЗаказов.Потребность
			|		* (&ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100)) КАК ДопустимоеОтклонение
			|ПОМЕСТИТЬ ВТДопустимыеОтклоненияОбеспечениеЗаказов
			|ИЗ
			|	РегистрНакопления.ОбеспечениеЗаказов КАК ОбеспечениеЗаказов
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
			|		ДвиженияОбеспечениеЗаказовИзменениеМерныеТовары КАК Изменения
			|		ПО ОбеспечениеЗаказов.Номенклатура      = Изменения.Номенклатура
			|			И ОбеспечениеЗаказов.Характеристика = Изменения.Характеристика
			|			И ОбеспечениеЗаказов.Склад          = Изменения.Склад
			|			И ОбеспечениеЗаказов.Назначение     = Изменения.Назначение
			|ГДЕ
			|	ОбеспечениеЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|СГРУППИРОВАТЬ ПО
			|	ОбеспечениеЗаказов.Номенклатура,
			|	ОбеспечениеЗаказов.Характеристика,
			|	ОбеспечениеЗаказов.Склад,
			|	ОбеспечениеЗаказов.Назначение
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура,
			|	Характеристика,
			|	Склад,
			|	Назначение
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|";
			
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	Таблица.Номенклатура                     КАК Номенклатура,
			|	Таблица.ЕдиницаИзмерения                 КАК ЕдиницаИзмерения,
			|	Таблица.Характеристика                   КАК Характеристика,
			|	Таблица.Склад                            КАК Склад,
			|	Таблица.Назначение                       КАК Назначение,
			|
			|	Таблица.Заказать                         КАК Заказать,
			|	Таблица.Наличие                          КАК Наличие,
			|	Таблица.Потребность                      КАК Потребность,
			|
			|	Таблица.НаличиеИзменение                 КАК НаличиеИзменение,
			|	Таблица.ПотребностьИзменение             КАК ПотребностьИзменение,
			|	Таблица.ЗаказатьИзменение                КАК ЗаказатьИзменение,
			|
			|	Таблица.ОшибкаЗаказатьМеньшеНуля         КАК ОшибкаЗаказатьМеньшеНуля,
			|	Таблица.ВеличинаЗаказатьМеньшеНуля       КАК ВеличинаЗаказатьМеньшеНуля,
			|	Таблица.ОшибкаНаличиеВМинусе             КАК ОшибкаНаличиеВМинусе,
			|	Таблица.ОшибкаНаличиеБольшеПотребности   КАК ОшибкаНаличиеБольшеПотребности,
			|	Таблица.ВеличинаНаличиеБольшеПотребности КАК ВеличинаНаличиеБольшеПотребности
			|
			|ИЗ(
			|	ВЫБРАТЬ
			|		Остатки.Номенклатура                      КАК Номенклатура,
			|		Остатки.Номенклатура.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
			|		Остатки.Характеристика                    КАК Характеристика,
			|		Остатки.Склад                             КАК Склад,
			|		Остатки.Назначение                        КАК Назначение,
			|		Остатки.Заказать                          КАК Заказать,

			|		Остатки.Наличие                           КАК Наличие,
			|		Остатки.Потребность                       КАК Потребность,
			|		// Ресурсы которые изменились
			|		ТаблицаИзменений.НаличиеИзменение         КАК НаличиеИзменение,
			|		ТаблицаИзменений.ПотребностьИзменение     КАК ПотребностьИзменение,
			|		ТаблицаИзменений.ЗаказатьИзменение        КАК ЗаказатьИзменение,
			|
			|		//Ошибка Заказать
			|		ВЫБОР КОГДА ТаблицаИзменений.ЗаказатьИзменение >0
			|			И (Остатки.Заказать + ЕСТЬNULL(ДопустимыеОтклонения.ДопустимоеОтклонение, 0)) < 0 ТОГДА
			|					ИСТИНА
			|				ИНАЧЕ
			|					ЛОЖЬ
			|			КОНЕЦ                                 КАК ОшибкаЗаказатьМеньшеНуля,
			|		Остатки.Заказать                          КАК ВеличинаЗаказатьМеньшеНуля,
			|
			|
			|		// Ошибка наличия товара под назначение
			|		ВЫБОР КОГДА ТаблицаИзменений.НаличиеИзменение >0 
			|			И (Остатки.Наличие + ЕСТЬNULL(ДопустимыеОтклонения.ДопустимоеОтклонение, 0)) < 0 ТОГДА
			|					ИСТИНА
			|				ИНАЧЕ
			|					ЛОЖЬ
			|			КОНЕЦ                                 КАК ОшибкаНаличиеВМинусе,
			|
			|		// Ошибка наличия больше потребности
			|		ВЫБОР КОГДА (ТаблицаИзменений.НаличиеИзменение <0 ИЛИ ТаблицаИзменений.ПотребностьИзменение >0)
			|					И (Остатки.Наличие > Остатки.Потребность + ЕСТЬNULL(ДопустимыеОтклонения.ДопустимоеОтклонение, 0)
			|						И Остатки.Заказать>=0) ТОГДА
			|					ИСТИНА
			|				ИНАЧЕ
			|					ЛОЖЬ
			|			КОНЕЦ                                 КАК ОшибкаНаличиеБольшеПотребности,
			|		Остатки.Наличие - Остатки.Потребность     КАК ВеличинаНаличиеБольшеПотребности
			|
			|	ИЗ(
			|		ВЫБРАТЬ
			|			Остатки.Номенклатура                   КАК Номенклатура,
			|			Остатки.Характеристика                 КАК Характеристика,
			|			Остатки.Склад                          КАК Склад,
			|			Остатки.Назначение                     КАК Назначение,
			|			Остатки.КЗаказуОстаток                 КАК Заказать,
			|			Остатки.НаличиеПодЗаказОстаток         КАК Наличие,
			|			Остатки.ПотребностьОстаток             КАК Потребность
			|		ИЗ
			|			РегистрНакопления.ОбеспечениеЗаказов.Остатки(,
			|				(Номенклатура, Характеристика, Склад, Назначение) В(
			|					ВЫБРАТЬ
			|						Таблица.Номенклатура,
			|						Таблица.Характеристика,
			|						Таблица.Склад,
			|						Таблица.Назначение
			|					ИЗ
			|						ОбеспечениеЗаказовИзменение КАК Таблица)) КАК Остатки
			|
			|	) КАК Остатки
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ ОбеспечениеЗаказовИзменение КАК ТаблицаИзменений
			|	ПО
			|		Остатки.Номенклатура     = ТаблицаИзменений.Номенклатура
			|		И Остатки.Характеристика = ТаблицаИзменений.Характеристика
			|		И Остатки.Склад          = ТаблицаИзменений.Склад
			|		И Остатки.Назначение     = ТаблицаИзменений.Назначение
			|
			|	ЛЕВОЕ СОЕДИНЕНИЕ
			|		ВТДопустимыеОтклоненияОбеспечениеЗаказов КАК ДопустимыеОтклонения
			|		ПО
			|			Остатки.Номенклатура     = ДопустимыеОтклонения.Номенклатура
			|			И Остатки.Характеристика = ДопустимыеОтклонения.Характеристика
			|			И Остатки.Склад          = ДопустимыеОтклонения.Склад
			|			И Остатки.Назначение     = ДопустимыеОтклонения.Назначение
			|) КАК Таблица
			|ГДЕ
			|	Таблица.ОшибкаЗаказатьМеньшеНуля = ИСТИНА
			|	ИЛИ Таблица.ОшибкаНаличиеВМинусе = ИСТИНА
			|	ИЛИ Таблица.ОшибкаНаличиеБольшеПотребности = ИСТИНА";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + 
		";
		|///////////////////////////////////////////////////////////////////
		|";

	КонецЕсли;
	//++ НЕ УТ 

	//++ НЕ УТКА
	// Контроль отрицательных остатков УслугиДавальцуКОформлению.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияУслугиДавальцуКОформлениюИзменение") Тогда

		МассивКонтролей.Добавить(Врег("УслугиДавальцуКОформлению"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ТаблицаОстатков.ЗаказДавальца                  КАК Заказ,
		|	ТаблицаОстатков.Номенклатура                   КАК Номенклатура,
		|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
		|	ТаблицаОстатков.Характеристика                 КАК Характеристика,
		|	ТаблицаОстатков.КОформлениюОстаток             КАК Количество
		|ИЗ
		|	РегистрНакопления.УслугиДавальцуКОформлению.Остатки(,
		|			(ЗаказДавальца, Номенклатура, Характеристика) В
		|				(ВЫБРАТЬ
		|					Таблица.ЗаказДавальца,
		|					Таблица.Номенклатура,
		|					Таблица.Характеристика
		|				ИЗ
		|					ДвиженияУслугиДавальцуКОформлениюИзменение КАК Таблица)
		|	) КАК ТаблицаОстатков
		|
		|ГДЕ
		|	ТаблицаОстатков.КОформлениюОстаток < 0;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	//-- НЕ УТКА
	
	// Контроль отрицательных остатков денежных документов.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияДенежныеДокументыИзменение") Тогда
		МассивКонтролей.Добавить(Врег("ДенежныеДокументы"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ТаблицаОстатков.Организация				КАК Организация,
		|	ТаблицаОстатков.Подразделение			КАК Подразделение,
		|	ТаблицаОстатков.МОЛ						КАК МОЛ,
		|	ТаблицаОстатков.ДенежныйДокумент		КАК ДенежныйДокумент,
		|	ТаблицаОстатков.ДенежныйДокумент.Валюта	КАК Валюта,
		|	ТаблицаОстатков.СуммаОстаток			КАК Сумма,
		|	ТаблицаОстатков.КоличествоОстаток		КАК Количество
		|ИЗ
		|	РегистрНакопления.ДенежныеДокументы.Остатки(,
		|			(Организация, Подразделение, МОЛ, ДенежныйДокумент) В
		|				(ВЫБРАТЬ
		|					Таблица.Организация,
		|					Таблица.Подразделение,
		|					Таблица.МОЛ,
		|					Таблица.ДенежныйДокумент
		|				ИЗ
		|					ДвиженияДенежныеДокументыИзменение КАК Таблица)
		|	) КАК ТаблицаОстатков
		|
		|ГДЕ
		|	ТаблицаОстатков.КоличествоОстаток < 0
		|	ИЛИ ТаблицаОстатков.СуммаОстаток < 0;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	// Контроль отрицательных остатков ТоварыПереданныеПереработчику.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияТоварыПереданныеПереработчикуИзменение") Тогда

		МассивКонтролей.Добавить(Врег("ТоварыПереданныеПереработчику"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	Аналитика.Номенклатура					КАК Номенклатура,
		|	Аналитика.Номенклатура.ЕдиницаИзмерения	КАК ЕдиницаИзмерения,
		|	Аналитика.Характеристика				КАК Характеристика,
		|	ТаблицаОстатков.КоличествоОстаток		КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеПереработчику.Остатки(,
		|			АналитикаУчетаНоменклатуры В
		|				(ВЫБРАТЬ
		|					Таблица.АналитикаУчетаНоменклатуры
		|				ИЗ
		|					ДвиженияТоварыПереданныеПереработчикуИзменение КАК Таблица)
		|	) КАК ТаблицаОстатков
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|	ПО
		|		ТаблицаОстатков.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
		|
		|ГДЕ
		|	ТаблицаОстатков.КоличествоОстаток < 0;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	//-- НЕ УТ

	// Контроль отрицательных остатков ОбеспечениеЗаказовРаботами.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ОбеспечениеЗаказовРаботамиИзменение") Тогда

		МассивКонтролей.Добавить(Врег("ОбеспечениеЗаказовРаботами"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ТаблицаОстатков.Назначение          КАК Назначение,
		|	ТаблицаОстатков.Номенклатура        КАК Номенклатура,
		|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаОстатков.Характеристика      КАК Характеристика,
		|	ТаблицаОстатков.Подразделение       КАК Подразделение,
		|	ТаблицаОстатков.КОбеспечениюОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказовРаботами.Остатки(,
		|			(Назначение, Номенклатура, Характеристика, Подразделение) В
		|				(ВЫБРАТЬ
		|					Таблица.Назначение,
		|					Таблица.Номенклатура,
		|					Таблица.Характеристика,
		|					Таблица.Подразделение
		|				ИЗ
		|					ОбеспечениеЗаказовРаботамиИзменение КАК Таблица)
		|	) КАК ТаблицаОстатков
		|
		|ГДЕ
		|	ТаблицаОстатков.КОбеспечениюОстаток < 0;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;

	// Контроль отрицательных остатков ЗаказыНаСборку.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияЗаказыНаСборкуИзменение") Тогда

		ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров = 
			Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
		
		МассивКонтролей.Добавить(Врег("ЗаказыНаСборку"));
		
		Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров = 0 Тогда
			
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	ТаблицаОстатков.ЗаказНаСборку      КАК ЗаказНаСборку,
			|	ТаблицаОстатков.Номенклатура       КАК Номенклатура,
			|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ТаблицаОстатков.Характеристика     КАК Характеристика,
			|	ТаблицаОстатков.Серия              КАК Серия,
			|	ТаблицаОстатков.ТипСборки          КАК ТипСборки,
			|	ТаблицаОстатков.КОформлениюОстаток КАК Количество
			|ИЗ
			|	РегистрНакопления.ЗаказыНаСборку.Остатки(,
			|			(ЗаказНаСборку, Номенклатура, Характеристика, Серия, ТипСборки) В
			|				(ВЫБРАТЬ
			|					Таблица.ЗаказНаСборку,
			|					Таблица.Номенклатура,
			|					Таблица.Характеристика,
			|					Таблица.Серия,
			|					Таблица.ТипСборки
			|				ИЗ
			|					ДвиженияЗаказыНаСборкуИзменение КАК Таблица)
			|	) КАК ТаблицаОстатков
			|ГДЕ
			|	ТаблицаОстатков.КОформлениюОстаток < 0";
		
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	ЗаказыОстатки.ЗаказНаСборку                  КАК ЗаказНаСборку,
			|	ЗаказыОстатки.Номенклатура                   КАК Номенклатура,
			|	ЗаказыОстатки.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
			|	ЗаказыОстатки.Характеристика                 КАК Характеристика,
			|	ЗаказыОстатки.Серия                          КАК Серия,
			|	ЗаказыОстатки.ТипСборки                      КАК ТипСборки,
			|	ЗаказыОстатки.КОформлениюОстаток             КАК Количество
			|ИЗ
			|	ВТЗаказыНаСборкуОстатки КАК ЗаказыОстатки
			|	ЛЕВОЕ СОЕДИНЕНИЕ
			|		ВТДопустимыеОтклоненияЗаказыНаСборку КАК ДопустимыеОтклонения
			|		ПО
			|			ЗаказыОстатки.ЗаказНаСборку    = ДопустимыеОтклонения.ЗаказНаСборку
			|			И ЗаказыОстатки.Номенклатура   = ДопустимыеОтклонения.Номенклатура
			|			И ЗаказыОстатки.Характеристика = ДопустимыеОтклонения.Характеристика
			|			И ЗаказыОстатки.ТипСборки      = ДопустимыеОтклонения.ТипСборки
			|			И ЗаказыОстатки.Серия          = ДопустимыеОтклонения.Серия
			|ГДЕ
			|	ЗаказыОстатки.КОформлениюОстаток + ЕСТЬNULL(ДопустимыеОтклонения.ДопустимоеОтклонение,0) < 0";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + 
		";
		|///////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;

	// Контроль отрицательных остатков ЗаказыНаПеремещение.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияЗаказыНаПеремещениеИзменение") Тогда

		ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров = 
			Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
		
		МассивКонтролей.Добавить(Врег("ЗаказыНаПеремещение"));
		
		Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров = 0 Тогда
			
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	ТаблицаОстатков.ЗаказНаПеремещение КАК Заказ,
			|	ТаблицаОстатков.Номенклатура       КАК Номенклатура,
			|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ТаблицаОстатков.Характеристика     КАК Характеристика,
			|	ТаблицаОстатков.Серия              КАК Серия,
			|	НЕОПРЕДЕЛЕНО                       КАК Склад,
			|	НЕОПРЕДЕЛЕНО                       КАК Подразделение,
			|	ТаблицаОстатков.КОформлениюОстаток КАК Количество
			|ИЗ
			|	РегистрНакопления.ЗаказыНаПеремещение.Остатки(,
			|			(ЗаказНаПеремещение, Номенклатура, Характеристика, Серия) В
			|				(ВЫБРАТЬ
			|					Таблица.ЗаказНаПеремещение,
			|					Таблица.Номенклатура,
			|					Таблица.Характеристика,
			|					Таблица.Серия
			|				ИЗ
			|					ДвиженияЗаказыНаПеремещениеИзменение КАК Таблица)
			|	) КАК ТаблицаОстатков
			|ГДЕ
			|	ТаблицаОстатков.КОформлениюОстаток < 0";
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	ЗаказыОстатки.ЗаказНаПеремещение             КАК Заказ,
			|	ЗаказыОстатки.Номенклатура                   КАК Номенклатура,
			|	ЗаказыОстатки.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
			|	ЗаказыОстатки.Характеристика                 КАК Характеристика,
			|	ЗаказыОстатки.Серия                          КАК Серия,
			|	НЕОПРЕДЕЛЕНО                                 КАК Склад,
			|	НЕОПРЕДЕЛЕНО                                 КАК Подразделение,
			|	ЗаказыОстатки.КОформлениюОстаток             КАК Количество
			|ИЗ
			|	ВТЗаказыНаПеремещениеОстатки КАК ЗаказыОстатки
			|	ЛЕВОЕ СОЕДИНЕНИЕ
			|		ВТДопустимыеОтклоненияЗаказыНаПеремещение КАК ДопустимыеОтклонения
			|		ПО
			|			ЗаказыОстатки.ЗаказНаПеремещение = ДопустимыеОтклонения.ЗаказНаПеремещение
			|			И ЗаказыОстатки.Номенклатура     = ДопустимыеОтклонения.Номенклатура
			|			И ЗаказыОстатки.Характеристика   = ДопустимыеОтклонения.Характеристика
			|			И ЗаказыОстатки.Серия            = ДопустимыеОтклонения.Серия
			|ГДЕ
			|	ЗаказыОстатки.КОформлениюОстаток + ЕСТЬNULL(ДопустимыеОтклонения.ДопустимоеОтклонение,0) < 0";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + 
		";
		|///////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;

	// Контроль отрицательных остатков ЗаказыНаВнутреннееПотребление.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияЗаказыНаВнутреннееПотреблениеИзменение") Тогда

		ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров =
			Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
		
		МассивКонтролей.Добавить(Врег("ЗаказыНаВнутреннееПотребление"));
		
		Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров = 0 Тогда
			
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	ТаблицаОстатков.ЗаказНаВнутреннееПотребление  КАК Заказ,
			|	ТаблицаОстатков.Номенклатура                  КАК Номенклатура,
			|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ТаблицаОстатков.Характеристика                КАК Характеристика,
			|	ТаблицаОстатков.Серия                         КАК Серия,
			|	ТаблицаОстатков.Склад                         КАК Склад,
			|	ТаблицаОстатков.КОформлениюОстаток            КАК Количество
			|ИЗ
			|	РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки(,
			|			(ЗаказНаВнутреннееПотребление, Номенклатура, Характеристика, Серия, Склад) В
			|				(ВЫБРАТЬ
			|					Таблица.ЗаказНаВнутреннееПотребление,
			|					Таблица.Номенклатура,
			|					Таблица.Характеристика,
			|					Таблица.Серия,
			|					Таблица.Склад
			|				ИЗ
			|					ДвиженияЗаказыНаВнутреннееПотреблениеИзменение КАК Таблица)
			|	) КАК ТаблицаОстатков
			|ГДЕ
			|	ТаблицаОстатков.КОформлениюОстаток < 0";
		
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	ЗаказыОстатки.ЗаказНаВнутреннееПотребление   КАК Заказ,
			|	ЗаказыОстатки.Номенклатура                   КАК Номенклатура,
			|	ЗаказыОстатки.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
			|	ЗаказыОстатки.Характеристика                 КАК Характеристика,
			|	ЗаказыОстатки.Серия                          КАК Серия,
			|	ЗаказыОстатки.Склад                          КАК Склад,
			|	ЗаказыОстатки.КОформлениюОстаток             КАК Количество
			|ИЗ
			|	ВТЗаказыНаВнутреннееПотреблениеОстатки КАК ЗаказыОстатки
			|	ЛЕВОЕ СОЕДИНЕНИЕ
			|		ВТДопустимыеОтклоненияЗаказыНаВнутреннееПотребление КАК ДопустимыеОтклонения
			|		ПО
			|			ЗаказыОстатки.ЗаказНаВнутреннееПотребление = ДопустимыеОтклонения.ЗаказНаВнутреннееПотребление
			|			И ЗаказыОстатки.Номенклатура               = ДопустимыеОтклонения.Номенклатура
			|			И ЗаказыОстатки.Характеристика             = ДопустимыеОтклонения.Характеристика
			|			И ЗаказыОстатки.Склад                      = ДопустимыеОтклонения.Склад
			|			И ЗаказыОстатки.Серия                      = ДопустимыеОтклонения.Серия
			|ГДЕ
			|	ЗаказыОстатки.КОформлениюОстаток + ЕСТЬNULL(ДопустимыеОтклонения.ДопустимоеОтклонение,0) < 0";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + 
		";
		|///////////////////////////////////////////////////////////////////
		|";

	КонецЕсли;
	
	// Контроль отрицательных оборотов ТМЦВЭксплуатации.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияТМЦВЭксплуатацииИзменение") Тогда
		
		МассивКонтролей.Добавить(ВРег("ТМЦВЭксплуатации"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ТаблицаОборотов.Организация  КАК Организация,
		|	ТаблицаОборотов.Подразделение КАК Подразделение,
		|	ТаблицаОборотов.Номенклатура КАК Номенклатура,
		|	ТаблицаОборотов.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаОборотов.Характеристика КАК Характеристика,
		|	ТаблицаОборотов.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ТаблицаОборотов.Партия КАК Партия,
		|	ТаблицаОборотов.КоличествоОборот КАК Количество
		|ИЗ
		|	РегистрНакопления.ТМЦВЭксплуатации.Обороты(,,,
		|			(Организация, Подразделение, ФизическоеЛицо, Партия) В
		|				(ВЫБРАТЬ
		|					Таблица.Организация,
		|					Таблица.Подразделение,
		|					Таблица.ФизическоеЛицо,
		|					Таблица.Партия
		|				ИЗ
		|					ДвиженияТМЦВЭксплуатацииИзменение КАК Таблица)
		|	) КАК ТаблицаОборотов
		|ГДЕ
		|	ТаблицаОборотов.КоличествоОборот < 0;
		|///////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	// Контроль отрицательных остатков ТоварыКОтгрузке.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияТоварыКОтгрузкеИзменение") Тогда
		
		ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров =
			Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
		
		МассивКонтролей.Добавить(Врег("ТоварыКОтгрузке"));
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаОстатков.ДокументОтгрузки КАК ДокументОтгрузки,
		|	ТаблицаОстатков.Номенклатура КАК Номенклатура,
		|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаОстатков.Характеристика КАК Характеристика,
		|	ТаблицаОстатков.Назначение КАК Назначение,
		|	ТаблицаОстатков.Серия КАК Серия,
		|	ТаблицаОстатков.Получатель                    КАК Получатель,
		|	ТаблицаОстатков.Склад КАК Склад,
		|	ТаблицаОстатков.КОтгрузкеОстаток - ТаблицаОстатков.СобираетсяОстаток - ТаблицаОстатков.СобраноОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Остатки(,
		|			(ДокументОтгрузки, Номенклатура, Характеристика, Назначение, Серия, Получатель, Склад) В
		|				(ВЫБРАТЬ
		|					Таблица.ДокументОтгрузки,
		|					Таблица.Номенклатура,
		|					Таблица.Характеристика,
		|					Таблица.Назначение,
		|					Таблица.Серия,
		|					Таблица.Получатель,
		|					Таблица.Склад
		|				ИЗ
		|					ДвиженияТоварыКОтгрузкеИзменение КАК Таблица)) КАК ТаблицаОстатков";
		
		Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров <> 0 Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Обороты(
			|				,
			|				,
			|				,
			|				(ДокументОтгрузки, Номенклатура, Характеристика, Назначение, Серия, Склад) В
			|					(ВЫБРАТЬ
			|						Таблица.ДокументОтгрузки,
			|						Таблица.Номенклатура,
			|						Таблица.Характеристика,
			|						Таблица.Назначение,
			|						Таблица.Серия,
			|						Таблица.Склад
			|					ИЗ
			|						ДвиженияТоварыКОтгрузкеИзменение КАК Таблица)) КАК ТаблицаОборотов
			|		ПО ТаблицаОстатков.ДокументОтгрузки = ТаблицаОборотов.ДокументОтгрузки
			|			И ТаблицаОстатков.Номенклатура = ТаблицаОборотов.Номенклатура
			|			И ТаблицаОстатков.Характеристика = ТаблицаОборотов.Характеристика
			|			И ТаблицаОстатков.Назначение = ТаблицаОборотов.Назначение
			|			И ТаблицаОстатков.Серия = ТаблицаОборотов.Серия
			|			И ТаблицаОстатков.Склад = ТаблицаОборотов.Склад
			|ГДЕ
			|	ТаблицаОстатков.КОтгрузкеОстаток - ТаблицаОстатков.СобираетсяОстаток - ТаблицаОстатков.СобраноОстаток < ВЫБОР
			|			КОГДА ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В (&МерныеТипыЕдиницИзмерений)
			|				ТОГДА -&ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100 * ТаблицаОборотов.КОтгрузкеПриход
			|			ИНАЧЕ 0
			|		КОНЕЦ";
			ПакетЗапросов.УстановитьПараметр("ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров",
				ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров);
			ПакетЗапросов.УстановитьПараметр("МерныеТипыЕдиницИзмерений",
				Справочники.УпаковкиЕдиницыИзмерения.МерныеТипыЕдиницИзмерений());
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + "
			|ГДЕ
			|	ТаблицаОстатков.КОтгрузкеОстаток - ТаблицаОстатков.СобираетсяОстаток - ТаблицаОстатков.СобраноОстаток < 0";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + 
		";
		|///////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;

	// Контроль отрицательных остатков ЗаказыКлиентов.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияЗаказыКлиентовИзменение") Тогда

		ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров =
			Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
		
		МассивКонтролей.Добавить(Врег("ЗаказыКлиентов"));
		
		Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров = 0 Тогда
			
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	ТаблицаОстатков.ЗаказКлиента                   КАК Заказ,
			|	ТаблицаОстатков.Номенклатура                   КАК Номенклатура,
			|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
			|	ТаблицаОстатков.Характеристика                 КАК Характеристика,
			|	ТаблицаОстатков.Серия                          КАК Серия,
			|	ТаблицаОстатков.Склад                          КАК Склад,
			|	ТаблицаОстатков.КОформлениюОстаток             КАК Количество
			|ИЗ
			|	РегистрНакопления.ЗаказыКлиентов.Остатки(,
			|			(ЗаказКлиента, Номенклатура, Характеристика, Серия, Склад) В
			|				(ВЫБРАТЬ
			|					Таблица.ЗаказКлиента,
			|					Таблица.Номенклатура,
			|					Таблица.Характеристика,
			|					Таблица.Серия,
			|					Таблица.Склад
			|				ИЗ
			|					ДвиженияЗаказыКлиентовИзменение КАК Таблица)
			|	) КАК ТаблицаОстатков
			|ГДЕ
			|	ТаблицаОстатков.КОформлениюОстаток < 0";
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	ЗаказыОстатки.ЗаказКлиента                   КАК Заказ,
			|	ЗаказыОстатки.Номенклатура                   КАК Номенклатура,
			|	ЗаказыОстатки.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
			|	ЗаказыОстатки.Характеристика                 КАК Характеристика,
			|	ЗаказыОстатки.Серия                          КАК Серия,
			|	ЗаказыОстатки.Склад                          КАК Склад,
			|	ЗаказыОстатки.КОформлениюОстаток             КАК Количество
			|ИЗ
			|	ВТЗаказыКлиентовОстатки КАК ЗаказыОстатки
			|	ЛЕВОЕ СОЕДИНЕНИЕ
			|		ВТДопустимыеОтклоненияЗаказыКлиентов КАК ДопустимыеОтклонения
			|		ПО
			|			ЗаказыОстатки.ЗаказКлиента     = ДопустимыеОтклонения.ЗаказКлиента
			|			И ЗаказыОстатки.Номенклатура   = ДопустимыеОтклонения.Номенклатура
			|			И ЗаказыОстатки.Характеристика = ДопустимыеОтклонения.Характеристика
			|			И ЗаказыОстатки.Склад          = ДопустимыеОтклонения.Склад
			|			И ЗаказыОстатки.Серия          = ДопустимыеОтклонения.Серия
			|ГДЕ
			|	ЗаказыОстатки.КОформлениюОстаток + ЕСТЬNULL(ДопустимыеОтклонения.ДопустимоеОтклонение,0) < 0";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + 
		";
		|///////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;

	// Контроль отрицательных остатков ЗаказыПоставщикам.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияЗаказыПоставщикамИзменение") Тогда

		ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров =
			Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
		
		МассивКонтролей.Добавить(Врег("ЗаказыПоставщикам"));
		
		Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров = 0 Тогда
			
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	ТаблицаОстатков.ЗаказПоставщику                КАК Заказ,
			|	ТаблицаОстатков.Номенклатура                   КАК Номенклатура,
			|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
			|	ТаблицаОстатков.Характеристика                 КАК Характеристика,
			|	ТаблицаОстатков.Склад                          КАК Склад,
			|	ТаблицаОстатков.КОформлениюОстаток             КАК Количество
			|ИЗ
			|	РегистрНакопления.ЗаказыПоставщикам.Остатки(,
			|			(ЗаказПоставщику, Номенклатура, Характеристика, Склад) В
			|				(ВЫБРАТЬ
			|					Таблица.ЗаказПоставщику,
			|					Таблица.Номенклатура,
			|					Таблица.Характеристика,
			|					Таблица.Склад
			|				ИЗ
			|					ДвиженияЗаказыПоставщикамИзменение КАК Таблица)
			|	) КАК ТаблицаОстатков
			|ГДЕ
			|	ТаблицаОстатков.КОформлениюОстаток < 0";
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	ЗаказыОстатки.ЗаказПоставщику                КАК Заказ,
			|	ЗаказыОстатки.Номенклатура                   КАК Номенклатура,
			|	ЗаказыОстатки.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
			|	ЗаказыОстатки.Характеристика                 КАК Характеристика,
			|	ЗаказыОстатки.Склад                          КАК Склад,
			|	ЗаказыОстатки.КОформлениюОстаток             КАК Количество
			|ИЗ
			|	ВТЗаказыПоставщикамОстатки КАК ЗаказыОстатки
			|	ЛЕВОЕ СОЕДИНЕНИЕ
			|		ВТДопустимыеОтклоненияЗаказыПоставщикам КАК ДопустимыеОтклонения
			|		ПО
			|			ЗаказыОстатки.ЗаказПоставщику  = ДопустимыеОтклонения.ЗаказПоставщику
			|			И ЗаказыОстатки.Номенклатура   = ДопустимыеОтклонения.Номенклатура
			|			И ЗаказыОстатки.Характеристика = ДопустимыеОтклонения.Характеристика
			|			И ЗаказыОстатки.Склад          = ДопустимыеОтклонения.Склад
			|ГДЕ
			|	ЗаказыОстатки.КОформлениюОстаток + ЕСТЬNULL(ДопустимыеОтклонения.ДопустимоеОтклонение,0) < 0";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|;
		|///////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;

	// Контроль отрицательных остатков ЗаявкиНаВозвратТоваровОтКлиентов.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияЗаявкиНаВозвратТоваровОтКлиентовИзменение") Тогда

		ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров =
			Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
		
		МассивКонтролей.Добавить(Врег("ЗаявкиНаВозвратТоваровОтКлиентов"));
		
		Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров = 0 Тогда
			
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	ТаблицаОстатков.ЗаявкаНаВозвратТоваровОтКлиента КАК Заявка,
			|	ТаблицаОстатков.Номенклатура                    КАК Номенклатура,
			|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения   КАК ЕдиницаИзмерения,
			|	ТаблицаОстатков.Характеристика                  КАК Характеристика,
			|	ТаблицаОстатков.КОформлениюОстаток              КАК Количество
			|ИЗ
			|	РегистрНакопления.ЗаявкиНаВозвратТоваровОтКлиентов.Остатки(,
			|			(ЗаявкаНаВозвратТоваровОтКлиента, Номенклатура, Характеристика) В
			|				(ВЫБРАТЬ
			|					Таблица.ЗаявкаНаВозвратТоваровОтКлиента,
			|					Таблица.Номенклатура,
			|					Таблица.Характеристика
			|				ИЗ
			|					ДвиженияЗаявкиНаВозвратТоваровОтКлиентовИзменение КАК Таблица)
			|	) КАК ТаблицаОстатков
			|ГДЕ
			|	ТаблицаОстатков.КОформлениюОстаток < 0";
		
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	ЗаказыОстатки.ЗаявкаНаВозвратТоваровОтКлиента КАК Заявка,
			|	ЗаказыОстатки.Номенклатура                    КАК Номенклатура,
			|	ЗаказыОстатки.Номенклатура.ЕдиницаИзмерения   КАК ЕдиницаИзмерения,
			|	ЗаказыОстатки.Характеристика                  КАК Характеристика,
			|	ЗаказыОстатки.КОформлениюОстаток              КАК Количество
			|ИЗ
			|	ВТЗаявкиНаВозвратТоваровОтКлиентовОстатки КАК ЗаказыОстатки
			|	ЛЕВОЕ СОЕДИНЕНИЕ
			|		ВТДопустимыеОтклоненияЗаявкиНаВозвратТоваровОтКлиентов КАК ДопустимыеОтклонения
			|		ПО
			|			ЗаказыОстатки.ЗаявкаНаВозвратТоваровОтКлиента = ДопустимыеОтклонения.ЗаявкаНаВозвратТоваровОтКлиента
			|			И ЗаказыОстатки.Номенклатура                  = ДопустимыеОтклонения.Номенклатура
			|			И ЗаказыОстатки.Характеристика                = ДопустимыеОтклонения.Характеристика
			|ГДЕ
			|	ЗаказыОстатки.КОформлениюОстаток + ЕСТЬNULL(ДопустимыеОтклонения.ДопустимоеОтклонение,0) < 0";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|;
		|///////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;

	// Контроль отрицательных остатков по ДенежныеСредстваКВыплате.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц, "ДвиженияДенежныеСредстваКВыплатеИзменение") Тогда
		
		МассивКонтролей.Добавить(Врег("ДенежныеСредстваКВыплате"));
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ТаблицаОстатков.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
		|	ТаблицаОстатков.БанковскийСчетКасса                 КАК БанковскийСчетКасса,
		|	ТаблицаОстатков.Получатель                          КАК Получатель,
		|	ТаблицаОстатков.Организация                         КАК Организация,
		|	ТаблицаОстатков.СуммаОстаток                        КАК Сумма,
		|	
		|	Заявка.Организация                                  КАК ОрганизацияЗаявки,
		|	ВЫБОР КОГДА Заявка.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
		|	) ТОГДА
		|		Заявка.ПодотчетноеЛицо
		|	КОГДА Заявка.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
		|	) ТОГДА
		|		Заявка.ОрганизацияПолучатель
		|	ИНАЧЕ
		|		Заявка.Контрагент
		|	КОНЕЦ                                               КАК ПолучательЗаявки,
		|	Заявка.Валюта                                       КАК Валюта,
		|	Заявка.ХозяйственнаяОперация                        КАК ХозяйственнаяОперация
		|	
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваКВыплате.Остатки(,
		|		(ЗаявкаНаРасходованиеДенежныхСредств, БанковскийСчетКасса, Получатель, Организация) В
		|		(ВЫБРАТЬ
		|			Таблица.ЗаявкаНаРасходованиеДенежныхСредств,
		|			Таблица.БанковскийСчетКасса,
		|			Таблица.Получатель,
		|			Таблица.Организация
		|		ИЗ
		|			ДвиженияДенежныеСредстваКВыплатеИзменение КАК Таблица)
		|		) КАК ТаблицаОстатков
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК Заявка
		|	ПО
		|		ТаблицаОстатков.ЗаявкаНаРасходованиеДенежныхСредств = Заявка.Ссылка
		|
		|ГДЕ
		|	ТаблицаОстатков.СуммаОстаток < 0
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;

	// Контроль предоплаты по РасчетыСКлиентами.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияРасчетыСКлиентамиИзменение") Тогда

		МассивКонтролей.Добавить(Врег("РасчетыСКлиентами"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ТаблицаЗаказы.ЗаказКлиента КАК ЗаказКлиента,
		|	ТаблицаЗаказы.Валюта       КАК Валюта,
		|	СУММА(ВЫБОР
		|			КОГДА ТаблицаЗаказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				И НЕ ТаблицаЗаказы.ИсключатьПриКонтроле ТОГДА
		|				ТаблицаЗаказы.КОплате
		|			ИНАЧЕ 0
		|		КОНЕЦ)                 КАК СуммаЗаказа,
		|	СУММА(ВЫБОР
		|			КОГДА ТаблицаЗаказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА ТаблицаЗаказы.КОплате
		|			ИНАЧЕ 0
		|		КОНЕЦ +
		|		ВЫБОР
		|			КОГДА ТаблицаЗаказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -ТаблицаЗаказы.Оплачивается
		|			ИНАЧЕ ТаблицаЗаказы.Оплачивается
		|		КОНЕЦ)                 КАК СуммаОплаты
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами КАК ТаблицаЗаказы
		|ГДЕ
		|	(ТаблицаЗаказы.ЗаказКлиента, ТаблицаЗаказы.Валюта, ТаблицаЗаказы.Активность) В
		|			(ВЫБРАТЬ
		|				Таблица.ЗаказКлиента,
		|				Таблица.Валюта,
		|				ИСТИНА
		|			ИЗ
		|				ДвиженияРасчетыСКлиентамиИзменение КАК Таблица)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаЗаказы.Валюта,
		|	ТаблицаЗаказы.ЗаказКлиента
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР
		|			КОГДА ТаблицаЗаказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				И НЕ ТаблицаЗаказы.ИсключатьПриКонтроле ТОГДА
		|				ТаблицаЗаказы.КОплате
		|			ИНАЧЕ 0
		|		КОНЕЦ) > 0
		|	И
		|	СУММА(ВЫБОР
		|			КОГДА ТаблицаЗаказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				И НЕ ТаблицаЗаказы.ИсключатьПриКонтроле ТОГДА
		|				ТаблицаЗаказы.КОплате
		|			ИНАЧЕ 0
		|		КОНЕЦ)
		|	> 
		|	СУММА(ВЫБОР
		|			КОГДА ТаблицаЗаказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА ТаблицаЗаказы.КОплате
		|			ИНАЧЕ 0
		|		КОНЕЦ +
		|		ВЫБОР
		|			КОГДА ТаблицаЗаказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|				ТОГДА -ТаблицаЗаказы.Оплачивается
		|			ИНАЧЕ ТаблицаЗаказы.Оплачивается
		|		КОНЕЦ)
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;

		// Контроли по РасчетыСКлиентами (временные таблицы).
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияРасчетыСКлиентамиИзменениеСуммыДолга")
	 ИЛИ ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияРасчетыСКлиентамиИзменениеКонтрольСрока") Тогда

		МассивКонтролей.Добавить(Врег("ВременнаяТаблицаДанныеДоговоровПредварительные"));
		МассивКонтролей.Добавить(Врег("ВременнаяТаблицаДанныеДоговоров"));
		МассивКонтролей.Добавить(Врег("ВременнаяТаблицаОбъектыРасчетов"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ТаблицаДвижений.ЗаказКлиента.Договор                КАК Договор,
		|	ДанныеДоговора.ВалютаВзаиморасчетов                 КАК Валюта,
		|	ДанныеДоговора.ОграничиватьСуммуЗадолженности       КАК ОграничиватьСуммуЗадолженности,
		|	ДанныеДоговора.ДопустимаяСуммаЗадолженности         КАК ДопустимаяСуммаЗадолженности,
		|	ЛОЖЬ                                                КАК ЗапрещаетсяПросроченнаяЗадолженность
		|
		|ПОМЕСТИТЬ ДанныеДоговоровПредварительные
		|ИЗ
		|	ДвиженияРасчетыСКлиентамиИзменениеСуммыДолга КАК ТаблицаДвижений
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Справочник.ДоговорыКонтрагентов КАК ДанныеДоговора
		|	ПО
		|		ТаблицаДвижений.ЗаказКлиента.Договор = ДанныеДоговора.Ссылка
		|
		|ГДЕ
		|	ДанныеДоговора.ОграничиватьСуммуЗадолженности
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаДвижений.ЗаказКлиента                        КАК Договор,
		|	ДанныеДоговора.ВалютаВзаиморасчетов                 КАК Валюта,
		|	ДанныеДоговора.ОграничиватьСуммуЗадолженности       КАК ОграничиватьСуммуЗадолженности,
		|	ДанныеДоговора.ДопустимаяСуммаЗадолженности         КАК ДопустимаяСуммаЗадолженности,
		|	ЛОЖЬ                                                КАК ЗапрещаетсяПросроченнаяЗадолженность
		|
		|ИЗ
		|	ДвиженияРасчетыСКлиентамиИзменениеСуммыДолга КАК ТаблицаДвижений
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Справочник.ДоговорыКонтрагентов КАК ДанныеДоговора
		|	ПО
		|		ТаблицаДвижений.ЗаказКлиента = ДанныеДоговора.Ссылка
		|
		|ГДЕ
		|	ДанныеДоговора.ОграничиватьСуммуЗадолженности
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаДвижений.ЗаказКлиента.Договор                КАК Договор,
		|	ДанныеДоговора.ВалютаВзаиморасчетов                 КАК Валюта,
		|	ЛОЖЬ                                                КАК ОграничиватьСуммуЗадолженности,
		|	0                                                   КАК ДопустимаяСуммаЗадолженности,
		|	ДанныеДоговора.ЗапрещаетсяПросроченнаяЗадолженность КАК ЗапрещаетсяПросроченнаяЗадолженность
		|
		|ИЗ
		|	ДвиженияРасчетыСКлиентамиИзменениеКонтрольСрока КАК ТаблицаДвижений
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Справочник.ДоговорыКонтрагентов КАК ДанныеДоговора
		|	ПО
		|		ТаблицаДвижений.ЗаказКлиента.Договор = ДанныеДоговора.Ссылка
		|
		|ГДЕ
		|	ДанныеДоговора.ЗапрещаетсяПросроченнаяЗадолженность
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаДвижений.ЗаказКлиента                        КАК Договор,
		|	ДанныеДоговора.ВалютаВзаиморасчетов                 КАК Валюта,
		|	ЛОЖЬ                                                КАК ОграничиватьСуммуЗадолженности,
		|	0                                                   КАК ДопустимаяСуммаЗадолженности,
		|	ДанныеДоговора.ЗапрещаетсяПросроченнаяЗадолженность КАК ЗапрещаетсяПросроченнаяЗадолженность
		|
		|ИЗ
		|	ДвиженияРасчетыСКлиентамиИзменениеКонтрольСрока КАК ТаблицаДвижений
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Справочник.ДоговорыКонтрагентов КАК ДанныеДоговора
		|	ПО
		|		ТаблицаДвижений.ЗаказКлиента = ДанныеДоговора.Ссылка
		|
		|ГДЕ
		|	ДанныеДоговора.ЗапрещаетсяПросроченнаяЗадолженность
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДоговоров.Договор                                        КАК Договор,
		|	ДанныеДоговоров.Валюта                                         КАК Валюта,
		|	МАКСИМУМ(ДанныеДоговоров.ОграничиватьСуммуЗадолженности)       КАК КонтрольСуммы,
		|	МАКСИМУМ(ДанныеДоговоров.ДопустимаяСуммаЗадолженности)         КАК ДопустимаяСумма,
		|	МАКСИМУМ(ДанныеДоговоров.ЗапрещаетсяПросроченнаяЗадолженность) КАК КонтрольСрока
		|
		|ПОМЕСТИТЬ ДанныеДоговоров
		|ИЗ
		|	ДанныеДоговоровПредварительные КАК ДанныеДоговоров
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДоговоров.Договор,
		|	ДанныеДоговоров.Валюта
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеДоговора.Ссылка  КАК ЗаказКлиента,
		|	ДанныеДоговора.Ссылка  КАК Договор,
		|	ДанныеДоговоров.Валюта КАК Валюта,
		|	ДанныеДоговоров.КонтрольСуммы КАК КонтрольСуммы,
		|	ДанныеДоговоров.КонтрольСрока КАК КонтрольСрока
		|
		|ПОМЕСТИТЬ ОбъектыРасчетов
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДанныеДоговора
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		(ВЫБРАТЬ Договор, Валюта, КонтрольСуммы, КонтрольСрока ИЗ ДанныеДоговоров) КАК ДанныеДоговоров
		|	ПО
		|		ДанныеДоговора.Ссылка = ДанныеДоговоров.Договор
		|
		|ГДЕ
		|	ДанныеДоговора.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка  КАК ЗаказКлиента,
		|	ДанныеДокумента.Договор КАК Договор,
		|	ДанныеДоговоров.Валюта КАК Валюта,
		|	ДанныеДоговоров.КонтрольСуммы КАК КонтрольСуммы,
		|	ДанныеДоговоров.КонтрольСрока КАК КонтрольСрока
		|
		|ИЗ
		|	Документ.АктВыполненныхРабот КАК ДанныеДокумента
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		(ВЫБРАТЬ Договор, Валюта, КонтрольСуммы, КонтрольСрока ИЗ ДанныеДоговоров) КАК ДанныеДоговоров
		|	ПО
		|		ДанныеДокумента.Договор = ДанныеДоговоров.Договор
		|
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка  КАК ЗаказКлиента,
		|	ДанныеДокумента.Договор КАК Договор,
		|	ДанныеДоговоров.Валюта КАК Валюта,
		|	ДанныеДоговоров.КонтрольСуммы КАК КонтрольСуммы,
		|	ДанныеДоговоров.КонтрольСрока КАК КонтрольСрока
		|
		|ИЗ
		|	Документ.ЗаказКлиента КАК ДанныеДокумента
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		(ВЫБРАТЬ Договор, Валюта, КонтрольСуммы, КонтрольСрока ИЗ ДанныеДоговоров) КАК ДанныеДоговоров
		|	ПО
		|		ДанныеДокумента.Договор = ДанныеДоговоров.Договор
		|
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И &ИспользоватьРасширенныеВозможностиЗаказаКлиента
		|	И ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка  КАК ЗаказКлиента,
		|	ДанныеДокумента.Договор КАК Договор,
		|	ДанныеДоговоров.Валюта КАК Валюта,
		|	ДанныеДоговоров.КонтрольСуммы КАК КонтрольСуммы,
		|	ДанныеДоговоров.КонтрольСрока КАК КонтрольСрока
		|
		|ИЗ
		|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ДанныеДокумента
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		(ВЫБРАТЬ Договор, Валюта, КонтрольСуммы, КонтрольСрока ИЗ ДанныеДоговоров) КАК ДанныеДоговоров
		|	ПО
		|		ДанныеДокумента.Договор = ДанныеДоговоров.Договор
		|
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И &ИспользоватьРасширенныеВозможностиЗаказаКлиента
		|	И ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка  КАК ЗаказКлиента,
		|	ДанныеДокумента.Договор КАК Договор,
		|	ДанныеДоговоров.Валюта КАК Валюта,
		|	ДанныеДоговоров.КонтрольСуммы КАК КонтрольСуммы,
		|	ДанныеДоговоров.КонтрольСрока КАК КонтрольСрока
		|
		|ИЗ
		|	Документ.ОтчетКомиссионера КАК ДанныеДокумента
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		(ВЫБРАТЬ Договор, Валюта, КонтрольСуммы, КонтрольСрока ИЗ ДанныеДоговоров) КАК ДанныеДоговоров
		|	ПО
		|		ДанныеДокумента.Договор = ДанныеДоговоров.Договор
		|
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)	
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка  КАК ЗаказКлиента,
		|	ДанныеДокумента.Договор КАК Договор,
		|	ДанныеДоговоров.Валюта КАК Валюта,
		|	ДанныеДоговоров.КонтрольСуммы КАК КонтрольСуммы,
		|	ДанныеДоговоров.КонтрольСрока КАК КонтрольСрока
		|
		|ИЗ
		|	Документ.ОтчетКомиссионераОСписании КАК ДанныеДокумента
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		(ВЫБРАТЬ Договор, Валюта, КонтрольСуммы, КонтрольСрока ИЗ ДанныеДоговоров) КАК ДанныеДоговоров
		|	ПО
		|		ДанныеДокумента.Договор = ДанныеДоговоров.Договор
		|
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка  КАК ЗаказКлиента,
		|	ДанныеДокумента.Договор КАК Договор,
		|	ДанныеДоговоров.Валюта КАК Валюта,
		|	ДанныеДоговоров.КонтрольСуммы КАК КонтрольСуммы,
		|	ДанныеДоговоров.КонтрольСрока КАК КонтрольСрока
		|
		|ИЗ
		|	Документ.ОтчетКомитенту КАК ДанныеДокумента
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		(ВЫБРАТЬ Договор, Валюта, КонтрольСуммы, КонтрольСрока ИЗ ДанныеДоговоров) КАК ДанныеДоговоров
		|	ПО
		|		ДанныеДокумента.Договор = ДанныеДоговоров.Договор
		|
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка  КАК ЗаказКлиента,
		|	ДанныеДокумента.Договор КАК Договор,
		|	ДанныеДоговоров.Валюта КАК Валюта,
		|	ДанныеДоговоров.КонтрольСуммы КАК КонтрольСуммы,
		|	ДанныеДоговоров.КонтрольСрока КАК КонтрольСрока
		|
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК ДанныеДокумента
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		(ВЫБРАТЬ Договор, Валюта, КонтрольСуммы, КонтрольСрока ИЗ ДанныеДоговоров) КАК ДанныеДоговоров
		|	ПО
		|		ДанныеДокумента.Договор = ДанныеДоговоров.Договор
		|
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.Ссылка  КАК ЗаказКлиента,
		|	ДанныеДокумента.Договор КАК Договор,
		|	ДанныеДоговоров.Валюта КАК Валюта,
		|	ДанныеДоговоров.КонтрольСуммы КАК КонтрольСуммы,
		|	ДанныеДоговоров.КонтрольСрока КАК КонтрольСрока
		|
		|ИЗ
		|	Документ.РеализацияУслугПрочихАктивов КАК ДанныеДокумента
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		(ВЫБРАТЬ Договор, Валюта, КонтрольСуммы, КонтрольСрока ИЗ ДанныеДоговоров) КАК ДанныеДоговоров
		|	ПО
		|		ДанныеДокумента.Договор = ДанныеДоговоров.Договор
		|
		|ГДЕ
		|	ДанныеДокумента.Проведен
		|	И ДанныеДокумента.ПорядокРасчетов <> ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
		
		ПакетЗапросов.УстановитьПараметр("ИспользоватьРасширенныеВозможностиЗаказаКлиента",
			ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента"));
		
	КонецЕсли;
	
	// Контроль ограничения задолженности по РасчетыСКлиентами.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияРасчетыСКлиентамиИзменениеСуммыДолга") Тогда

		МассивКонтролей.Добавить(Врег("ОграничениеСуммыЗадолженности"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ОбъектыРасчетов.Договор                                   КАК Договор,
		|	РасчетыСКлиентамиОстатки.Валюта                           КАК Валюта,
		|	МИНИМУМ(ДанныеДоговоров.ДопустимаяСумма)                  КАК ДопустимаяСуммаЗадолженности,
		|	СУММА(РасчетыСКлиентамиОстатки.СуммаОстаток) +
		|		СУММА(РасчетыСКлиентамиОстатки.ОтгружаетсяОстаток)    КАК СуммаОстаток,
		|
		|	СУММА(РасчетыСКлиентамиОстатки.СуммаОстаток) +
		|		СУММА(РасчетыСКлиентамиОстатки.ОтгружаетсяОстаток) -
		|		МИНИМУМ(ДанныеДоговоров.ДопустимаяСумма)              КАК СуммаПревышения
		|
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами.Остатки(
		|		,
		|		(ЗаказКлиента, Валюта) В (ВЫБРАТЬ ЗаказКлиента, Валюта ИЗ ОбъектыРасчетов ГДЕ КонтрольСуммы)
		|	) КАК РасчетыСКлиентамиОстатки
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ОбъектыРасчетов КАК ОбъектыРасчетов
		|	
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|			ДанныеДоговоров КАК ДанныеДоговоров
		|		ПО
		|			ОбъектыРасчетов.Договор = ДанныеДоговоров.Договор
		|			И ОбъектыРасчетов.Валюта = ДанныеДоговоров.Валюта
		|	
		|	ПО
		|		РасчетыСКлиентамиОстатки.ЗаказКлиента = ОбъектыРасчетов.ЗаказКлиента
		|		И РасчетыСКлиентамиОстатки.Валюта = ОбъектыРасчетов.Валюта
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъектыРасчетов.Договор,
		|	РасчетыСКлиентамиОстатки.Валюта
		|
		|ИМЕЮЩИЕ
		|	СУММА(РасчетыСКлиентамиОстатки.СуммаОстаток)+
		|		СУММА(РасчетыСКлиентамиОстатки.ОтгружаетсяОстаток) > МИНИМУМ(ДанныеДоговоров.ДопустимаяСумма)
		|;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;

	// Контроль просроченной задолженности по РасчетыСКлиентами.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияРасчетыСКлиентамиИзменениеКонтрольСрока") Тогда

		МассивКонтролей.Добавить(Врег("КонтрольСрокаЗадолженности"));
		ПакетЗапросов.УстановитьПараметр("ПериодКонтроляСрокаДолга", Макс(КонецДня(ТекущаяДатаСеанса()), КонецДня(Объект.Дата)));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ОбъектыРасчетов.Договор                                   КАК Договор,
		|	РасчетыСКлиентамиОстатки.Валюта                           КАК Валюта,
		|	СУММА(ВЫБОР КОГДА РасчетыСКлиентамиОстатки.СуммаОстаток >
		|						РасчетыСКлиентамиОстатки.КОплатеОстаток - РасчетыСКлиентамиОстатки.ОплачиваетсяОстаток ТОГДА
		|		РасчетыСКлиентамиОстатки.КОплатеОстаток - РасчетыСКлиентамиОстатки.ОплачиваетсяОстаток
		|	ИНАЧЕ
		|		РасчетыСКлиентамиОстатки.СуммаОстаток
		|	КОНЕЦ) КАК ПросроченнаяЗадолженность
		|
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами.Остатки(
		|		&ПериодКонтроляСрокаДолга,
		|		(ЗаказКлиента, Валюта) В (ВЫБРАТЬ ЗаказКлиента, Валюта ИЗ ОбъектыРасчетов ГДЕ КонтрольСрока)
		|	) КАК РасчетыСКлиентамиОстатки
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ОбъектыРасчетов КАК ОбъектыРасчетов
		|	
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|			ДанныеДоговоров КАК ДанныеДоговоров
		|		ПО
		|			ОбъектыРасчетов.Договор = ДанныеДоговоров.Договор
		|			И ОбъектыРасчетов.Валюта = ДанныеДоговоров.Валюта
		|	
		|	ПО
		|		РасчетыСКлиентамиОстатки.ЗаказКлиента = ОбъектыРасчетов.ЗаказКлиента
		|		И РасчетыСКлиентамиОстатки.Валюта = ОбъектыРасчетов.Валюта
		|
		|ГДЕ
		|	РасчетыСКлиентамиОстатки.СуммаОстаток > 0
		|	И (РасчетыСКлиентамиОстатки.КОплатеОстаток - РасчетыСКлиентамиОстатки.ОплачиваетсяОстаток) > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъектыРасчетов.Договор,
		|	РасчетыСКлиентамиОстатки.Валюта
		|
		|;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;

	// Контроль остатков в ячейках по ТоварыВЯчейках.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияТоварыВЯчейкахИзменение") Тогда

		МассивКонтролей.Добавить(Врег("ВТМногооборотнаяТара"));
		МассивКонтролей.Добавить(Врег("ВТЯчейкиКонтролироватьОбособление"));
		МассивКонтролей.Добавить(Врег("ТоварыВЯчейках"));
		МассивКонтролей.Добавить(Врег("НесколькоНазначенийВОбособленныхЯчейках"));
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СпрНоменкатура.Ссылка
		|ПОМЕСТИТЬ ВТМногооборотнаяТара
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменкатура
		|ГДЕ
		|	СпрНоменкатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СкладскиеЯчейки.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТЯчейкиКонтролироватьОбособление
		|ИЗ
		|	Справочник.СкладскиеЯчейки КАК СкладскиеЯчейки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОбластиХранения КАК ОбластиХранения
		|		ПО СкладскиеЯчейки.ОбластьХранения = ОбластиХранения.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДвиженияТоварыВЯчейкахИзменение КАК ДвиженияТоварыВЯчейкахИзменение
		|		ПО СкладскиеЯчейки.Ссылка = ДвиженияТоварыВЯчейкахИзменение.Ячейка
		|ГДЕ
		|	ОбластиХранения.КонтролироватьОбособление
		|	И ДвиженияТоварыВЯчейкахИзменение.КРазмещениюИзменение < 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыВЯчейкахОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыВЯчейкахОстатки.Характеристика КАК Характеристика,
		|	ТоварыВЯчейкахОстатки.Назначение КАК Назначение,
		|	ТоварыВЯчейкахОстатки.Упаковка КАК Упаковка,
		|	ТаблицаИзменений.Серия КАК Серия,
		|	ТоварыВЯчейкахОстатки.Ячейка КАК Ячейка,
		|	СУММА(ТоварыВЯчейкахОстатки.ВНаличииОстаток - ТоварыВЯчейкахОстатки.КОтборуОстаток) КАК Количество
		|ИЗ
		|	ДвиженияТоварыВЯчейкахИзменение КАК ТаблицаИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВЯчейках.Остатки(
		|				,
		|				(Номенклатура, Характеристика, Назначение, Упаковка, Ячейка) В
		|					(ВЫБРАТЬ
		|						Таблица.Номенклатура,
		|						Таблица.Характеристика,
		|						Таблица.Назначение,
		|						Таблица.Упаковка,
		|						Таблица.Ячейка
		|					ИЗ
		|						ДвиженияТоварыВЯчейкахИзменение КАК Таблица)) КАК ТоварыВЯчейкахОстатки
		|		ПО ТаблицаИзменений.Номенклатура = ТоварыВЯчейкахОстатки.Номенклатура
		|			И ТаблицаИзменений.Характеристика = ТоварыВЯчейкахОстатки.Характеристика
		|			И ТаблицаИзменений.Назначение = ТоварыВЯчейкахОстатки.Назначение
		|			И ТаблицаИзменений.Упаковка = ТоварыВЯчейкахОстатки.Упаковка
		|			И ТаблицаИзменений.Ячейка = ТоварыВЯчейкахОстатки.Ячейка
		|			И (ВЫБОР
		|				КОГДА ТаблицаИзменений.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ТаблицаИзменений.Серия = ТоварыВЯчейкахОстатки.Серия
		|			КОНЕЦ)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыВЯчейкахОстатки.Номенклатура,
		|	ТоварыВЯчейкахОстатки.Характеристика,
		|	ТоварыВЯчейкахОстатки.Назначение,
		|	ТоварыВЯчейкахОстатки.Упаковка,
		|	ТаблицаИзменений.Серия,
		|	ТоварыВЯчейкахОстатки.Ячейка
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТоварыВЯчейкахОстатки.ВНаличииОстаток - ТоварыВЯчейкахОстатки.КОтборуОстаток) < 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыВЯчейкахОстатки.Ячейка
		|ИЗ
		|	РегистрНакопления.ТоварыВЯчейках.Остатки(
		|			,
		|			Ячейка В
		|					(ВЫБРАТЬ
		|						ВТЯчейкиКонтролироватьОбособление.Ссылка
		|					ИЗ
		|						ВТЯчейкиКонтролироватьОбособление КАК ВТЯчейкиКонтролироватьОбособление)
		|				И НЕ Номенклатура В
		|						(ВЫБРАТЬ
		|							ВТМногооборотнаяТара.Ссылка
		|						ИЗ
		|							ВТМногооборотнаяТара КАК ВТМногооборотнаяТара)
		|				И Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК ТоварыВЯчейкахОстатки
		|ГДЕ
		|	ТоварыВЯчейкахОстатки.ВНаличииОстаток - ТоварыВЯчейкахОстатки.КОтборуОстаток + ТоварыВЯчейкахОстатки.КРазмещениюОстаток > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыВЯчейкахОстатки.Ячейка
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыВЯчейкахОстатки.Назначение) > 1";
		
		ТекстЗапроса = ТекстЗапроса + 
		";
		|///////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	// Контроль остатков по ТоварыНаСкладах 
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияТоварыНаСкладахИзменение") Тогда

		МассивКонтролей.Добавить(Врег("ТоварыНаСкладах"));
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
		|	ТоварыНаСкладахОстатки.Назначение КАК Назначение,
		|	ТоварыНаСкладахОстатки.Склад КАК Склад,
		|	ТоварыНаСкладахОстатки.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТоварыНаСкладахОстатки.Помещение КАК Помещение,
		|	ТаблицаИзменений.Серия КАК Серия,
		|	СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток - ТоварыНаСкладахОстатки.КОтгрузкеОстаток) КАК Количество
		|ИЗ
		|	ДвиженияТоварыНаСкладахИзменение КАК ТаблицаИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				,
		|				(Номенклатура, Характеристика, Назначение, Склад, Помещение) В
		|					(ВЫБРАТЬ
		|						Таблица.Номенклатура,
		|						Таблица.Характеристика,
		|						Таблица.Назначение,
		|						Таблица.Склад,
		|						Таблица.Помещение
		|					ИЗ
		|						ДвиженияТоварыНаСкладахИзменение КАК Таблица)) КАК ТоварыНаСкладахОстатки
		|		ПО ТаблицаИзменений.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
		|			И ТаблицаИзменений.Характеристика = ТоварыНаСкладахОстатки.Характеристика
		|			И ТаблицаИзменений.Назначение = ТоварыНаСкладахОстатки.Назначение
		|			И ТаблицаИзменений.Склад = ТоварыНаСкладахОстатки.Склад
		|			И ТаблицаИзменений.Помещение = ТоварыНаСкладахОстатки.Помещение
		|			И (ВЫБОР
		|				КОГДА ТаблицаИзменений.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ТаблицаИзменений.Серия = ТоварыНаСкладахОстатки.Серия
		|			КОНЕЦ)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыНаСкладахОстатки.Номенклатура,
		|	ТоварыНаСкладахОстатки.Характеристика,
		|	ТоварыНаСкладахОстатки.Назначение,
		|	ТоварыНаСкладахОстатки.Склад,
		|	ТоварыНаСкладахОстатки.Номенклатура.ЕдиницаИзмерения,
		|	ТоварыНаСкладахОстатки.Помещение,
		|	ТаблицаИзменений.Серия
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток - ТоварыНаСкладахОстатки.КОтгрузкеОстаток) < 0;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	// Контроль остатков по ТоварыКОтбору.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияТоварыКОтборуИзменение") Тогда
		
		МассивКонтролей.Добавить(Врег("ТоварныеМестаНоменклатуры"));
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДвиженияТоварыКОтборуИзменение.Распоряжение,
		|	ДвиженияТоварыКОтборуИзменение.Номенклатура,
		|	ДвиженияТоварыКОтборуИзменение.Характеристика,
		|	ДвиженияТоварыКОтборуИзменение.Назначение,
		|	ДвиженияТоварыКОтборуИзменение.Серия,
		|	УпаковкиЕдиницыИзмерения.Ссылка КАК ТоварноеМесто,
		|	УпаковкиЕдиницыИзмерения.КоличествоУпаковок
		|ПОМЕСТИТЬ ТоварныеМестаНоменклатуры
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДвиженияТоварыКОтборуИзменение КАК ДвиженияТоварыКОтборуИзменение
		|		ПО УпаковкиЕдиницыИзмерения.Владелец = ДвиженияТоварыКОтборуИзменение.Номенклатура
		|ГДЕ
		|	УпаковкиЕдиницыИзмерения.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДвиженияТоварыКОтборуИзменение.Распоряжение,
		|	ДвиженияТоварыКОтборуИзменение.Номенклатура,
		|	ДвиженияТоварыКОтборуИзменение.Характеристика,
		|	ДвиженияТоварыКОтборуИзменение.Назначение,
		|	ДвиженияТоварыКОтборуИзменение.Серия,
		|	УпаковкиЕдиницыИзмерения.Ссылка,
		|	УпаковкиЕдиницыИзмерения.КоличествоУпаковок
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДвиженияТоварыКОтборуИзменение КАК ДвиженияТоварыКОтборуИзменение
		|		ПО УпаковкиЕдиницыИзмерения.Владелец = ДвиженияТоварыКОтборуИзменение.Номенклатура.Наборупаковок
		|ГДЕ
		|	УпаковкиЕдиницыИзмерения.ТипУпаковки = ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)";
		
		ТекстЗапроса = ТекстЗапроса + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
		
		ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров =
			Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
		
		Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров <> 0 Тогда
			
			МассивКонтролей.Добавить(Врег("ВременнаяТаблицаОборотовСТоварнымиМестами"));
			МассивКонтролей.Добавить(Врег("ВременнаяТаблицаОборотов"));
			ТекстЗапроса = ТекстЗапроса + 
			"ВЫБРАТЬ
			|	ТоварыКОтборуОбороты.Распоряжение КАК Распоряжение,
			|	ТоварыКОтборуОбороты.Номенклатура КАК Номенклатура,
			|	ТоварыКОтборуОбороты.Характеристика КАК Характеристика,
			|	ТоварыКОтборуОбороты.Назначение КАК Назначение,
			|	ТоварыКОтборуОбороты.Серия КАК Серия,
			|	ТоварыКОтборуОбороты.ТоварноеМесто КАК ТоварноеМесто,
			|	СУММА(ТоварыКОтборуОбороты.КОтборуПриход) КАК Количество
			|ПОМЕСТИТЬ ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами
			|ИЗ
			|	РегистрНакопления.ТоварыКОтбору.Обороты(
			|			,
			|			,
			|			,
			|			(Распоряжение, Номенклатура, Характеристика, Назначение, Серия) В
			|				(ВЫБРАТЬ
			|					Таблица.Распоряжение,
			|					Таблица.Номенклатура,
			|					Таблица.Характеристика,
			|					Таблица.Назначение,
			|					Таблица.Серия
			|				ИЗ
			|					ДвиженияТоварыКОтборуИзменение КАК Таблица)) КАК ТоварыКОтборуОбороты
			|
			|СГРУППИРОВАТЬ ПО
			|	ТоварыКОтборуОбороты.Распоряжение,
			|	ТоварыКОтборуОбороты.Номенклатура,
			|	ТоварыКОтборуОбороты.Характеристика,
			|	ТоварыКОтборуОбороты.Назначение,
			|	ТоварыКОтборуОбороты.Серия,
			|	ТоварыКОтборуОбороты.ТоварноеМесто
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВнутрненняяТаблица.Распоряжение,
			|	ВнутрненняяТаблица.Номенклатура,
			|	ВнутрненняяТаблица.Характеристика,
			|	ВнутрненняяТаблица.Назначение,
			|	ВнутрненняяТаблица.Серия,
			|	СУММА(ВнутрненняяТаблица.Количество) КАК Количество
			|ПОМЕСТИТЬ ВременнаяТаблицаТаблицаОборотов
			|ИЗ
			|	(ВЫБРАТЬ
			|		ТоварныеМестаНоменклатуры.Распоряжение КАК Распоряжение,
			|		ТоварныеМестаНоменклатуры.Номенклатура КАК Номенклатура,
			|		ТоварныеМестаНоменклатуры.Характеристика КАК Характеристика,
			|		ТоварныеМестаНоменклатуры.Назначение КАК Назначение,
			|		ТоварныеМестаНоменклатуры.Серия КАК Серия,
			|		МИНИМУМ(ВЫБОР
			|				КОГДА ЕСТЬNULL(ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.Количество, 0) / ТоварныеМестаНоменклатуры.ТоварноеМесто.КоличествоУпаковок - (ВЫРАЗИТЬ(ЕСТЬNULL(ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.Количество, 0) / ТоварныеМестаНоменклатуры.ТоварноеМесто.КоличествоУпаковок КАК ЧИСЛО(12, 0))) >= 0
			|					ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.Количество, 0) / ТоварныеМестаНоменклатуры.ТоварноеМесто.КоличествоУпаковок КАК ЧИСЛО(12, 0))
			|				ИНАЧЕ (ВЫРАЗИТЬ(ЕСТЬNULL(ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.Количество, 0) / ТоварныеМестаНоменклатуры.ТоварноеМесто.КоличествоУпаковок КАК ЧИСЛО(12, 0))) - 1
			|			КОНЕЦ) КАК Количество
			|	ИЗ
			|		ТоварныеМестаНоменклатуры КАК ТоварныеМестаНоменклатуры
			|			ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами КАК ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами
			|			ПО ТоварныеМестаНоменклатуры.Распоряжение = ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.Распоряжение
			|				И ТоварныеМестаНоменклатуры.Номенклатура = ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.Номенклатура
			|				И ТоварныеМестаНоменклатуры.Характеристика = ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.Характеристика
			|				И ТоварныеМестаНоменклатуры.Назначение = ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.Назначение
			|				И ТоварныеМестаНоменклатуры.Серия = ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.Серия
			|				И ТоварныеМестаНоменклатуры.ТоварноеМесто = ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.ТоварноеМесто
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ТоварныеМестаНоменклатуры.Распоряжение,
			|		ТоварныеМестаНоменклатуры.Номенклатура,
			|		ТоварныеМестаНоменклатуры.Характеристика,
			|		ТоварныеМестаНоменклатуры.Назначение,
			|		ТоварныеМестаНоменклатуры.Серия
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.Распоряжение,
			|		ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.Номенклатура,
			|		ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.Характеристика,
			|		ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.Назначение,
			|		ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.Серия,
			|		ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.Количество
			|	ИЗ
			|		ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами КАК ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами
			|	ГДЕ
			|		ЕСТЬNULL(ВременнаяТаблицаТаблицаОборотовСТоварнымиМестами.ТоварноеМесто.ТипУпаковки, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыУпаковокНоменклатуры.ТоварноеМесто)) КАК ВнутрненняяТаблица
			|
			|СГРУППИРОВАТЬ ПО
			|	ВнутрненняяТаблица.Распоряжение,
			|	ВнутрненняяТаблица.Номенклатура,
			|	ВнутрненняяТаблица.Характеристика,
			|	ВнутрненняяТаблица.Назначение,
			|	ВнутрненняяТаблица.Серия";
			
			ТекстЗапроса = ТекстЗапроса + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
			
		КонецЕсли;
				
		
		МассивКонтролей.Добавить(Врег("ВременнаяТаблицаОстатковСТоварнымиМестами"));
		МассивКонтролей.Добавить(Врег("ВременнаяТаблицаОстатков"));
		МассивКонтролей.Добавить(Врег("ТоварыКОтбору"));
		
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТоварыКОтборуОстатки.Распоряжение КАК Распоряжение,
		|	ТоварыКОтборуОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыКОтборуОстатки.Характеристика КАК Характеристика,
		|	ТоварыКОтборуОстатки.Назначение КАК Назначение,
		|	ТоварыКОтборуОстатки.Серия КАК Серия,
		|	ТоварыКОтборуОстатки.ТоварноеМесто КАК ТоварноеМесто,
		|	СУММА(ТоварыКОтборуОстатки.КОтборуОстаток) КАК КОтборуОстаток,
		|	СУММА(ТоварыКОтборуОстатки.ОтбираетсяОстаток) КАК ОтбираетсяОстаток,
		|	СУММА(ТоварыКОтборуОстатки.ОтобраноОстаток) КАК ОтобраноОстаток
		|ПОМЕСТИТЬ ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами
		|ИЗ
		|	РегистрНакопления.ТоварыКОтбору.Остатки(
		|			,
		|			(Распоряжение, Номенклатура, Характеристика, Назначение, Серия) В
		|				(ВЫБРАТЬ
		|					Таблица.Распоряжение,
		|					Таблица.Номенклатура,
		|					Таблица.Характеристика,
		|					Таблица.Назначение,
		|					Таблица.Серия
		|				ИЗ
		|					ДвиженияТоварыКОтборуИзменение КАК Таблица)) КАК ТоварыКОтборуОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКОтборуОстатки.Распоряжение,
		|	ТоварыКОтборуОстатки.Номенклатура,
		|	ТоварыКОтборуОстатки.Характеристика,
		|	ТоварыКОтборуОстатки.Назначение,
		|	ТоварыКОтборуОстатки.Серия,
		|	ТоварыКОтборуОстатки.ТоварноеМесто
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВнутрненняяТаблица.Распоряжение,
		|	ВнутрненняяТаблица.Номенклатура,
		|	ВнутрненняяТаблица.Характеристика,
		|	ВнутрненняяТаблица.Назначение,
		|	ВнутрненняяТаблица.Серия,
		|	СУММА(ВнутрненняяТаблица.КОтборуОстаток) КАК КОтборуОстаток,
		|	СУММА(ВнутрненняяТаблица.ОтбираетсяОстаток) КАК ОтбираетсяОстаток,
		|	СУММА(ВнутрненняяТаблица.ОтобраноОстаток) КАК ОтобраноОстаток
		|ПОМЕСТИТЬ ВременнаяТаблицаТаблицаОстатков
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварныеМестаНоменклатуры.Распоряжение КАК Распоряжение,
		|		ТоварныеМестаНоменклатуры.Номенклатура КАК Номенклатура,
		|		ТоварныеМестаНоменклатуры.Характеристика КАК Характеристика,
		|		ТоварныеМестаНоменклатуры.Назначение КАК Назначение,
		|		ТоварныеМестаНоменклатуры.Серия КАК Серия,
		|		МИНИМУМ(ВЫБОР
		|				КОГДА ЕСТЬNULL(ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.КОтборуОстаток, 0) / ТоварныеМестаНоменклатуры.ТоварноеМесто.КоличествоУпаковок - (ВЫРАЗИТЬ(ЕСТЬNULL(ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.КОтборуОстаток, 0) / ТоварныеМестаНоменклатуры.ТоварноеМесто.КоличествоУпаковок КАК ЧИСЛО(12, 0))) >= 0
		|					ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.КОтборуОстаток, 0) / ТоварныеМестаНоменклатуры.ТоварноеМесто.КоличествоУпаковок КАК ЧИСЛО(12, 0))
		|				ИНАЧЕ (ВЫРАЗИТЬ(ЕСТЬNULL(ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.КОтборуОстаток, 0) / ТоварныеМестаНоменклатуры.ТоварноеМесто.КоличествоУпаковок КАК ЧИСЛО(12, 0))) - 1
		|			КОНЕЦ) КАК КОтборуОстаток,
		|		МИНИМУМ(ВЫБОР
		|				КОГДА ЕСТЬNULL(ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.ОтбираетсяОстаток, 0) / ТоварныеМестаНоменклатуры.ТоварноеМесто.КоличествоУпаковок - (ВЫРАЗИТЬ(ЕСТЬNULL(ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.ОтбираетсяОстаток, 0) / ТоварныеМестаНоменклатуры.ТоварноеМесто.КоличествоУпаковок КАК ЧИСЛО(12, 0))) >= 0
		|					ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.ОтбираетсяОстаток, 0) / ТоварныеМестаНоменклатуры.ТоварноеМесто.КоличествоУпаковок КАК ЧИСЛО(12, 0))
		|				ИНАЧЕ (ВЫРАЗИТЬ(ЕСТЬNULL(ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.ОтбираетсяОстаток, 0) / ТоварныеМестаНоменклатуры.ТоварноеМесто.КоличествоУпаковок КАК ЧИСЛО(12, 0))) - 1
		|			КОНЕЦ) КАК ОтбираетсяОстаток,
		|		МИНИМУМ(ВЫБОР
		|				КОГДА ЕСТЬNULL(ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.ОтобраноОстаток, 0) / ТоварныеМестаНоменклатуры.ТоварноеМесто.КоличествоУпаковок - (ВЫРАЗИТЬ(ЕСТЬNULL(ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.ОтобраноОстаток, 0) / ТоварныеМестаНоменклатуры.ТоварноеМесто.КоличествоУпаковок КАК ЧИСЛО(12, 0))) >= 0
		|					ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.ОтобраноОстаток, 0) / ТоварныеМестаНоменклатуры.ТоварноеМесто.КоличествоУпаковок КАК ЧИСЛО(12, 0))
		|				ИНАЧЕ (ВЫРАЗИТЬ(ЕСТЬNULL(ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.ОтобраноОстаток, 0) / ТоварныеМестаНоменклатуры.ТоварноеМесто.КоличествоУпаковок КАК ЧИСЛО(12, 0))) - 1
		|			КОНЕЦ) КАК ОтобраноОстаток
		|	ИЗ
		|		ТоварныеМестаНоменклатуры КАК ТоварныеМестаНоменклатуры
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами КАК ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами
		|			ПО ТоварныеМестаНоменклатуры.Распоряжение = ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.Распоряжение
		|				И ТоварныеМестаНоменклатуры.Номенклатура = ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.Номенклатура
		|				И ТоварныеМестаНоменклатуры.Характеристика = ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.Характеристика
		|				И ТоварныеМестаНоменклатуры.Назначение = ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.Назначение
		|				И ТоварныеМестаНоменклатуры.Серия = ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.Серия
		|				И ТоварныеМестаНоменклатуры.ТоварноеМесто = ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.ТоварноеМесто
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТоварныеМестаНоменклатуры.Распоряжение,
		|		ТоварныеМестаНоменклатуры.Номенклатура,
		|		ТоварныеМестаНоменклатуры.Характеристика,
		|		ТоварныеМестаНоменклатуры.Назначение,
		|		ТоварныеМестаНоменклатуры.Серия
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.Распоряжение,
		|		ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.Номенклатура,
		|		ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.Характеристика,
		|		ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.Назначение,
		|		ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.Серия,
		|		ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.КОтборуОстаток,
		|		ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.ОтбираетсяОстаток,
		|		ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.ОтобраноОстаток
		|	ИЗ
		|		ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами КАК ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами
		|	ГДЕ
		|		ВременнаяТаблицаТаблицаОстатковСТоварнымиМестами.ТоварноеМесто = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК ВнутрненняяТаблица
		|
		|СГРУППИРОВАТЬ ПО
		|	ВнутрненняяТаблица.Распоряжение,
		|	ВнутрненняяТаблица.Номенклатура,
		|	ВнутрненняяТаблица.Характеристика,
		|	ВнутрненняяТаблица.Назначение,
		|	ВнутрненняяТаблица.Серия";
		
		ТекстЗапроса = ТекстЗапроса + 
		";
		|///////////////////////////////////////////////////////////////////
		|";
		
		
		Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров <> 0 Тогда
			
			ТекстЗапроса = ТекстЗапроса + 
			"ВЫБРАТЬ
			|	ТаблицаОстатков.Распоряжение,
			|	ТаблицаОстатков.Номенклатура,
			|	ТаблицаОстатков.Характеристика,
			|	ТаблицаОстатков.Назначение,
			|	ТаблицаОстатков.Серия,
			|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ТаблицаОстатков.КОтборуОстаток - ТаблицаОстатков.ОтобраноОстаток - ТаблицаОстатков.ОтбираетсяОстаток КАК Количество,
			|	ТаблицаОстатков.ОтобраноОстаток КАК КоличествоОтобрано
			|ИЗ
			|	ВременнаяТаблицаТаблицаОстатков КАК ТаблицаОстатков
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаТаблицаОборотов КАК ТаблицаОборотов
			|		ПО ТаблицаОстатков.Распоряжение = ТаблицаОборотов.Распоряжение
			|			И ТаблицаОстатков.Номенклатура = ТаблицаОборотов.Номенклатура
			|			И ТаблицаОстатков.Характеристика = ТаблицаОборотов.Характеристика
			|			И ТаблицаОстатков.Назначение = ТаблицаОборотов.Назначение
			|			И ТаблицаОстатков.Серия = ТаблицаОборотов.Серия
			|ГДЕ
			|	(ТаблицаОстатков.КОтборуОстаток - ТаблицаОстатков.ОтобраноОстаток - ТаблицаОстатков.ОтбираетсяОстаток < ВЫБОР
			|				КОГДА ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины В (&МерныеТипыЕдиницИзмерений)
			|					ТОГДА -&ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров / 100 * ЕСТЬNULL(ТаблицаОборотов.Количество, 0)
			|				ИНАЧЕ 0
			|			КОНЕЦ
			|			ИЛИ ТаблицаОстатков.ОтобраноОстаток < 0
			|			ИЛИ ВЫБОР
			|				КОГДА ТаблицаОстатков.КОтборуОстаток = 0
			|					ТОГДА ТаблицаОстатков.ОтобраноОстаток <> 0
			|				ИНАЧЕ ЛОЖЬ
			|			КОНЕЦ)";
			
			ПакетЗапросов.УстановитьПараметр("ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров", ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров);
			ПакетЗапросов.УстановитьПараметр("МерныеТипыЕдиницИзмерений", Справочники.УпаковкиЕдиницыИзмерения.МерныеТипыЕдиницИзмерений());
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + 
			"ВЫБРАТЬ
			|	ТаблицаОстатков.Распоряжение,
			|	ТаблицаОстатков.Номенклатура,
			|	ТаблицаОстатков.Характеристика,
			|	ТаблицаОстатков.Назначение,
			|	ТаблицаОстатков.Серия,
			|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ТаблицаОстатков.КОтборуОстаток - ТаблицаОстатков.ОтобраноОстаток - ТаблицаОстатков.ОтбираетсяОстаток КАК Количество,
			|	ТаблицаОстатков.ОтобраноОстаток КАК КоличествоОтобрано
			|ИЗ
			|	ВременнаяТаблицаТаблицаОстатков КАК ТаблицаОстатков
			|ГДЕ
			|	(ТаблицаОстатков.КОтборуОстаток - ТаблицаОстатков.ОтобраноОстаток - ТаблицаОстатков.ОтбираетсяОстаток < 0
			|			ИЛИ ТаблицаОстатков.ОтобраноОстаток < 0)";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + 
		";
		|///////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	// Контроль отрицательных остатков ТоварыОрганизацийКОформлению.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияТоварыОрганизацийКОформлениюИзменение") Тогда

		МассивКонтролей.Добавить(Врег("ТоварыОрганизацийКОформлению"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ТаблицаОстатков.Организация                   КАК Организация,
		|	ТаблицаОстатков.Поставщик                     КАК Поставщик,
		|	ТаблицаОстатков.ДокументПоступления           КАК ДокументПоступления,
		|	Аналитика.Номенклатура                        КАК Номенклатура,
		|	Аналитика.Характеристика                      КАК Характеристика,
		|	Аналитика.Склад                               КАК Склад,
		|	Аналитика.Номенклатура.ЕдиницаИзмерения       КАК ЕдиницаИзмерения,
		|	ТаблицаОстатков.ВидЗапасов                    КАК ВидЗапасов,
		|	ТаблицаОстатков.КоличествоОстаток             КАК Количество
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКОформлению.Остатки(,
		|			(Организация, Поставщик, ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов) В
		|				(ВЫБРАТЬ
		|					Таблица.Организация,
		|					Таблица.Поставщик,
		|					Таблица.ДокументПоступления,
		|					Таблица.АналитикаУчетаНоменклатуры,
		|					Таблица.ВидЗапасов
		|				ИЗ
		|					ДвиженияТоварыОрганизацийКОформлениюИзменение КАК Таблица)
		|	) КАК ТаблицаОстатков
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|	ПО
		|		ТаблицаОстатков.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
		|
		|ГДЕ
		|	ТаблицаОстатков.КоличествоОстаток < 0;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	//++ НЕ УТ
	
	// Контроль отрицательных остатков ЗаказыМатериаловВПроизводство.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияЗаказыМатериаловВПроизводствоИзменение") Тогда
		ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров =
		Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
		
		МассивКонтролей.Добавить(Врег("ЗаказыМатериаловВПроизводство"));
		Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров = 0 Тогда
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	ТаблицаОстатков.Распоряжение                  КАК Заказ,
			|	ТаблицаОстатков.Номенклатура                  КАК Номенклатура,
			|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ТаблицаОстатков.Характеристика                КАК Характеристика,
			|	ТаблицаОстатков.Серия                         КАК Серия,
			|	ТаблицаОстатков.КодСтроки                     КАК КодСтроки,
			|	ТаблицаОстатков.Склад                         КАК Склад,
			|	ТаблицаОстатков.Назначение                    КАК Назначение,
			|	ТаблицаОстатков.НазначениеОтправителя         КАК НазначениеОтправителя,
			|	ТаблицаОстатков.Подразделение                 КАК Подразделение,
			|	ТаблицаОстатков.КОформлениюОстаток            КАК Количество
			|ИЗ
			|	РегистрНакопления.ЗаказыМатериаловВПроизводство.Остатки(,
			|			(Распоряжение, Номенклатура, Характеристика, Серия, КодСтроки, Склад, Назначение, НазначениеОтправителя, Подразделение) В
			|				(ВЫБРАТЬ
			|					Таблица.Распоряжение,
			|					Таблица.Номенклатура,
			|					Таблица.Характеристика,
			|					Таблица.Серия,
			|					Таблица.КодСтроки,
			|					Таблица.Склад,
			|					Таблица.Назначение,
			|					Таблица.НазначениеОтправителя,
			|					Таблица.Подразделение
			|				ИЗ
			|					ДвиженияЗаказыМатериаловВПроизводствоИзменение КАК Таблица)
			|	) КАК ТаблицаОстатков
			|
			|ГДЕ
			|	ТаблицаОстатков.КОформлениюОстаток < 0;
			|///////////////////////////////////////////////////////////////////
			|";
		Иначе
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	ТаблицаОстатков.Распоряжение                  КАК Заказ,
			|	ТаблицаОстатков.Номенклатура                  КАК Номенклатура,
			|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ТаблицаОстатков.Характеристика                КАК Характеристика,
			|	ТаблицаОстатков.Серия                         КАК Серия,
			|	ТаблицаОстатков.КодСтроки                     КАК КодСтроки,
			|	ТаблицаОстатков.Склад                         КАК Склад,
			|	ТаблицаОстатков.Назначение                    КАК Назначение,
			|	ТаблицаОстатков.НазначениеОтправителя         КАК НазначениеОтправителя,
			|	ТаблицаОстатков.Подразделение                 КАК Подразделение,
			|	ТаблицаОстатков.КОформлениюОстаток            КАК Количество
			|ИЗ
			|	ВТЗаказыМатериаловВПроизводствоОстатки  КАК ТаблицаОстатков
			|	ЛЕВОЕ СОЕДИНЕНИЕ
			|		ВТДопустимыеОтклоненияЗаказыМатериаловВПроизводство КАК ДопустимыеОтклонения
			|		ПО
			|			ТаблицаОстатков.Распоряжение     = ДопустимыеОтклонения.Распоряжение
			|			И ТаблицаОстатков.Номенклатура   = ДопустимыеОтклонения.Номенклатура
			|			И ТаблицаОстатков.Характеристика = ДопустимыеОтклонения.Характеристика
			|			И ТаблицаОстатков.Склад          = ДопустимыеОтклонения.Склад
			|			И ТаблицаОстатков.Серия          = ДопустимыеОтклонения.Серия
			|			И ТаблицаОстатков.Назначение     = ДопустимыеОтклонения.Назначение
			|			И ТаблицаОстатков.НазначениеОтправителя = ДопустимыеОтклонения.НазначениеОтправителя
			|			И ТаблицаОстатков.Подразделение  = ДопустимыеОтклонения.Подразделение
			|
			|ГДЕ
			|	ТаблицаОстатков.КОформлениюОстаток + ЕСТЬNULL(ДопустимыеОтклонения.ДопустимоеОтклонение,0) < 0;
			|///////////////////////////////////////////////////////////////////
			|";
		КонецЕсли;
		
	КонецЕсли;
	
	//++ НЕ УТКА
	// Контроль отрицательных остатков РаспоряженияНаВыпускПродукции
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияРаспоряженияНаВыпускПродукцииИзменение") Тогда

		МассивКонтролей.Добавить(Врег("ВТ_РаспоряженияНаВыпускПродукцииОперативныйКонтроль"));
		МассивКонтролей.Добавить(Врег("ВТ_РаспоряженияНаВыпускПродукцииКонтрольНаДату"));
		МассивКонтролей.Добавить(Врег("РаспоряженияНаВыпускПродукции"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ТаблицаОстатков.Распоряжение                  КАК Заказ,
		|	ТаблицаОстатков.Подразделение                 КАК Подразделение,
		|	ТаблицаОстатков.Номенклатура                  КАК Номенклатура,
		|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаОстатков.Характеристика                КАК Характеристика,
		|	ТаблицаОстатков.КодСтроки                     КАК КодСтроки,
		|	ТаблицаОстатков.Склад                         КАК Склад,
		|	ТаблицаОстатков.КОформлениюОстаток            КАК Количество
		|ПОМЕСТИТЬ ВТ_РаспоряженияНаВыпускПродукцииОперативныйКонтроль
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаВыпускПродукции.Остатки(,
		|			(Распоряжение, Подразделение, Номенклатура, Характеристика, КодСтроки, Склад) В
		|				(ВЫБРАТЬ
		|					Таблица.Распоряжение,
		|					Таблица.Подразделение,
		|					Таблица.Номенклатура,
		|					Таблица.Характеристика,
		|					Таблица.КодСтроки,
		|					Таблица.Склад
		|				ИЗ
		|					ДвиженияРаспоряженияНаВыпускПродукцииИзменение КАК Таблица)
		|	) КАК ТаблицаОстатков
		|ГДЕ
		|	(ТаблицаОстатков.КОформлениюОстаток < 0
		|			ИЛИ ТаблицаОстатков.ЗаказаноОстаток < 0)
		|;
		|///////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.Распоряжение,
		|	Таблица.Подразделение,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.КодСтроки,
		|	Таблица.Склад
		|ПОМЕСТИТЬ ВТ_РаспоряженияНаВыпускПродукцииКонтрольНаДату
		|ИЗ
		|	ДвиженияРаспоряженияНаВыпускПродукцииИзменение КАК Таблица
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РаспоряженияНаВыпускПродукцииОперативныйКонтроль
		|	ПО Таблица.Распоряжение = ВТ_РаспоряженияНаВыпускПродукцииОперативныйКонтроль.Заказ
		|		И Таблица.Подразделение = ВТ_РаспоряженияНаВыпускПродукцииОперативныйКонтроль.Подразделение
		|		И Таблица.Номенклатура = ВТ_РаспоряженияНаВыпускПродукцииОперативныйКонтроль.Номенклатура
		|		И Таблица.Характеристика = ВТ_РаспоряженияНаВыпускПродукцииОперативныйКонтроль.Характеристика
		|		И Таблица.КодСтроки = ВТ_РаспоряженияНаВыпускПродукцииОперативныйКонтроль.КодСтроки
		|		И Таблица.Склад = ВТ_РаспоряженияНаВыпускПродукцииОперативныйКонтроль.Склад
		|
		|ГДЕ 
		|	ВТ_РаспоряженияНаВыпускПродукцииОперативныйКонтроль.Заказ ЕСТЬ NULL
		|;
		|///////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЛОЖЬ                                          КАК КонтрольНаДату,
		|	ТаблицаОстатков.Заказ                         КАК Заказ,
		|	ДАТАВРЕМЯ(1, 1, 1)                            КАК ДатаВыпуска,
		|	ТаблицаОстатков.Подразделение                 КАК Подразделение,
		|	ТаблицаОстатков.Номенклатура                  КАК Номенклатура,
		|	ТаблицаОстатков.ЕдиницаИзмерения              КАК ЕдиницаИзмерения,
		|	ТаблицаОстатков.Характеристика                КАК Характеристика,
		|	ТаблицаОстатков.КодСтроки                     КАК КодСтроки,
		|	ТаблицаОстатков.Склад                         КАК Склад,
		|	ТаблицаОстатков.Количество                    КАК Количество
		|ИЗ
		|	ВТ_РаспоряженияНаВыпускПродукцииОперативныйКонтроль КАК ТаблицаОстатков
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ИСТИНА                                        КАК КонтрольНаДату,
		|	ТаблицаОстатков.Распоряжение                  КАК Заказ,
		|	ВЫБОР
		|		КОГДА ТаблицаОстатков.Распоряжение.ФактическоеОкончание <> ДАТАВРЕМЯ(1,1,1)
		|			ТОГДА НАЧАЛОПЕРИОДА(ТаблицаОстатков.Распоряжение.ФактическоеОкончание, ДЕНЬ) 
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(ТаблицаОстатков.Распоряжение.Дата, ДЕНЬ)
		|	КОНЕЦ                                         КАК ДатаВыпуска,
		|	ТаблицаОстатков.Подразделение                 КАК Подразделение,
		|	ТаблицаОстатков.Номенклатура                  КАК Номенклатура,
		|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаОстатков.Характеристика                КАК Характеристика,
		|	ТаблицаОстатков.КодСтроки                     КАК КодСтроки,
		|	ТаблицаОстатков.Склад                         КАК Склад,
		|	ТаблицаОстатков.КОформлениюОстаток            КАК Количество
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаВыпускПродукции.Остатки(&ДатаКонтроля,
		|			(Распоряжение, Подразделение, Номенклатура, Характеристика, КодСтроки, Склад) В
		|				(ВЫБРАТЬ
		|					Таблица.Распоряжение,
		|					Таблица.Подразделение,
		|					Таблица.Номенклатура,
		|					Таблица.Характеристика,
		|					Таблица.КодСтроки,
		|					Таблица.Склад
		|				ИЗ
		|					ВТ_РаспоряженияНаВыпускПродукцииКонтрольНаДату КАК Таблица)
		|	) КАК ТаблицаОстатков
		|ГДЕ
		|	(ТаблицаОстатков.КОформлениюОстаток < 0
		|			ИЛИ ТаблицаОстатков.ЗаказаноОстаток < 0)
		|;
		|///////////////////////////////////////////////////////////////////
		|";
		
		ЗапросДаты = Новый Запрос("ВЫБРАТЬ МИНИМУМ(Т.ДатаКонтроля) КАК Дата ИЗ ДвиженияРаспоряженияНаВыпускПродукцииИзменение КАК Т");
		ЗапросДаты.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
		ВыборкаДаты = ЗапросДаты.Выполнить().Выбрать();
		
		ДатаОстатка = ?(ВыборкаДаты.Следующий() И ЗначениеЗаполнено(ВыборкаДаты.Дата), ВыборкаДаты.Дата, Объект.Дата);
		
		ПакетЗапросов.УстановитьПараметр("ДатаКонтроля", ДатаОстатка);
		
	КонецЕсли;
	
	// Контроль отрицательных остатков РаспоряженияНаПередачуИзПроизводства
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияРаспоряженияНаПередачуИзПроизводстваИзменение") Тогда
		
		ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров = 
			Константы.ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров.Получить();
		
		Если ДопустимоеОтклонениеОтгрузкиПриемкиМерныхТоваров = 0 Тогда
			МассивКонтролей.Добавить(Врег("ВТ_РаспоряженияНаПередачуИзПроизводстваОперативныйКонтроль"));
			МассивКонтролей.Добавить(Врег("ВТ_РаспоряженияНаПередачуИзПроизводстваКонтрольНаДату"));
			МассивКонтролей.Добавить(Врег("РаспоряженияНаПередачуИзПроизводства"));
			ТекстЗапроса = ТекстЗапроса + 
			"
			|ВЫБРАТЬ
			|	ТаблицаОстатков.Распоряжение                  КАК Заказ,
			|	ТаблицаОстатков.КодСтроки                     КАК КодСтроки,
			|	ТаблицаОстатков.Отправитель                   КАК Отправитель,
			|	ТаблицаОстатков.Получатель                    КАК Получатель,
			|	ТаблицаОстатков.Номенклатура                  КАК Номенклатура,
			|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ТаблицаОстатков.Характеристика                КАК Характеристика,
			|	ТаблицаОстатков.Назначение                    КАК Назначение,
			|	ТаблицаОстатков.Операция                      КАК Операция,
			|	ТаблицаОстатков.КоличествоОстаток             КАК Количество
			|ПОМЕСТИТЬ ВТ_РаспоряженияНаПередачуИзПроизводстваОперативныйКонтроль
			|ИЗ
			|	РегистрНакопления.РаспоряженияНаПередачуИзПроизводства.Остатки(,
			|			(Распоряжение, КодСтроки, Отправитель, Получатель, Номенклатура, Характеристика, Назначение, Операция) В
			|				(ВЫБРАТЬ
			|					Таблица.Распоряжение,
			|					Таблица.КодСтроки,
			|					Таблица.Отправитель,
			|					Таблица.Получатель,
			|					Таблица.Номенклатура,
			|					Таблица.Характеристика,
			|					Таблица.Назначение,
			|					Таблица.Операция
			|				ИЗ
			|					ДвиженияРаспоряженияНаПередачуИзПроизводстваИзменение КАК Таблица)
			|	) КАК ТаблицаОстатков
			|ГДЕ
			|	ТаблицаОстатков.КоличествоОстаток < 0
			|;
			|///////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Таблица.Распоряжение,
			|	Таблица.КодСтроки,
			|	Таблица.Отправитель,
			|	Таблица.Получатель,
			|	Таблица.Номенклатура,
			|	Таблица.Характеристика,
			|	Таблица.Назначение,
			|	Таблица.Операция
			|ПОМЕСТИТЬ ВТ_РаспоряженияНаПередачуИзПроизводстваКонтрольНаДату
			|ИЗ
			|	ДвиженияРаспоряженияНаПередачуИзПроизводстваИзменение КАК Таблица
			|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РаспоряженияНаПередачуИзПроизводстваОперативныйКонтроль
			|	ПО Таблица.Распоряжение = ВТ_РаспоряженияНаПередачуИзПроизводстваОперативныйКонтроль.Заказ
			|		И Таблица.КодСтроки = ВТ_РаспоряженияНаПередачуИзПроизводстваОперативныйКонтроль.КодСтроки
			|		И Таблица.Отправитель = ВТ_РаспоряженияНаПередачуИзПроизводстваОперативныйКонтроль.Отправитель
			|		И Таблица.Получатель = ВТ_РаспоряженияНаПередачуИзПроизводстваОперативныйКонтроль.Получатель
			|		И Таблица.Номенклатура = ВТ_РаспоряженияНаПередачуИзПроизводстваОперативныйКонтроль.Номенклатура
			|		И Таблица.Характеристика = ВТ_РаспоряженияНаПередачуИзПроизводстваОперативныйКонтроль.Характеристика
			|		И Таблица.Назначение = ВТ_РаспоряженияНаПередачуИзПроизводстваОперативныйКонтроль.Назначение
			|		И Таблица.Операция = ВТ_РаспоряженияНаПередачуИзПроизводстваОперативныйКонтроль.Операция
			|
			|ГДЕ 
			|	ВТ_РаспоряженияНаПередачуИзПроизводстваОперативныйКонтроль.Заказ ЕСТЬ NULL
			|;
			|///////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЛОЖЬ                                          КАК КонтрольНаДату,
			|	ТаблицаОстатков.Заказ                         КАК Заказ,
			|	ТаблицаОстатков.Отправитель                   КАК Отправитель,
			|	ТаблицаОстатков.Получатель                    КАК Получатель,
			|	ТаблицаОстатков.Номенклатура                  КАК Номенклатура,
			|	ТаблицаОстатков.ЕдиницаИзмерения              КАК ЕдиницаИзмерения,
			|	ТаблицаОстатков.Характеристика                КАК Характеристика,
			|	ТаблицаОстатков.Назначение                    КАК Назначение,
			|	ТаблицаОстатков.Операция                      КАК Операция,
			|	ТаблицаОстатков.Количество                    КАК Количество
			|ИЗ
			|	ВТ_РаспоряженияНаПередачуИзПроизводстваОперативныйКонтроль КАК ТаблицаОстатков
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ИСТИНА                                        КАК КонтрольНаДату,
			|	ТаблицаОстатков.Распоряжение                  КАК Заказ,
			|	ТаблицаОстатков.Отправитель                   КАК Отправитель,
			|	ТаблицаОстатков.Получатель                    КАК Получатель,
			|	ТаблицаОстатков.Номенклатура                  КАК Номенклатура,
			|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|	ТаблицаОстатков.Характеристика                КАК Характеристика,
			|	ТаблицаОстатков.Назначение                    КАК Назначение,
			|	ТаблицаОстатков.Операция                      КАК Операция,
			|	ТаблицаОстатков.КоличествоОстаток             КАК Количество
			|ИЗ
			|	РегистрНакопления.РаспоряженияНаПередачуИзПроизводства.Остатки(&ДатаКонтроля,
			|			(Распоряжение, КодСтроки, Отправитель, Получатель, Номенклатура, Характеристика, Назначение, Операция) В
			|				(ВЫБРАТЬ
			|					Таблица.Распоряжение,
			|					Таблица.КодСтроки,
			|					Таблица.Отправитель,
			|					Таблица.Получатель,
			|					Таблица.Номенклатура,
			|					Таблица.Характеристика,
			|					Таблица.Назначение,
			|					Таблица.Операция
			|				ИЗ
			|					ВТ_РаспоряженияНаПередачуИзПроизводстваКонтрольНаДату КАК Таблица)
			|	) КАК ТаблицаОстатков
			|ГДЕ
			|	ТаблицаОстатков.КоличествоОстаток < 0
			|;
			|///////////////////////////////////////////////////////////////////
			|";
		Иначе
			// Разрешен выпуск на склад без ограничений
		КонецЕсли;
		
		ЗапросДаты = Новый Запрос("ВЫБРАТЬ МИНИМУМ(Т.ДатаКонтроля) КАК Дата ИЗ ДвиженияРаспоряженияНаПередачуИзПроизводстваИзменение КАК Т");
		ЗапросДаты.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
		ВыборкаДаты = ЗапросДаты.Выполнить().Выбрать();
		
		ДатаОстатка = ?(ВыборкаДаты.Следующий() И ЗначениеЗаполнено(ВыборкаДаты.Дата), ВыборкаДаты.Дата, Объект.Дата);
		
		ПакетЗапросов.УстановитьПараметр("ДатаКонтроля", ДатаОстатка);
		
	КонецЕсли;
	
	//-- НЕ УТКА
	
	// Контроль отрицательных остатков РаспоряженияНаСписаниеПоНормативам
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияРаспоряженияНаСписаниеПоНормативамИзменение") Тогда
		
		МассивКонтролей.Добавить(Врег("РаспоряженияНаСписаниеПоНормативам_ОперативныйКонтроль"));
		МассивКонтролей.Добавить(Врег("РаспоряженияНаСписаниеПоНормативам_КонтрольНаДату"));
		
		МассивКонтролей.Добавить(Врег("РаспоряженияНаСписаниеПоНормативам"));
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаОстатков.Организация КАК Организация,
		|	ТаблицаОстатков.Подразделение КАК Подразделение,
		|	ТаблицаОстатков.Номенклатура КАК Номенклатура,
		|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаОстатков.Характеристика КАК Характеристика,
		|	ТаблицаОстатков.Распоряжение КАК Распоряжение,
		|	ТаблицаОстатков.КодСтроки КАК КодСтроки,
		|	ТаблицаОстатков.Назначение КАК Назначение,
		|	ТаблицаОстатков.КоличествоОстаток КАК Количество
		|ПОМЕСТИТЬ РаспоряженияНаСписаниеПоНормативам_ОперативныйКонтроль
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаСписаниеПоНормативам.Остатки(
		|			,
		|			(Организация, Подразделение, Номенклатура, Характеристика, Распоряжение, КодСтроки, Назначение) В
		|				(ВЫБРАТЬ
		|					Таблица.Организация,
		|					Таблица.Подразделение,
		|					Таблица.Номенклатура,
		|					Таблица.Характеристика,
		|					Таблица.Распоряжение,
		|					Таблица.КодСтроки,
		|					Таблица.Назначение
		|				ИЗ
		|					ДвиженияРаспоряженияНаСписаниеПоНормативамИзменение КАК Таблица)) КАК ТаблицаОстатков
		|ГДЕ
		|	ТаблицаОстатков.КоличествоОстаток < 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.Организация,
		|	Таблица.Подразделение,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Распоряжение,
		|	Таблица.КодСтроки,
		|	Таблица.Назначение
		|ПОМЕСТИТЬ РаспоряженияНаСписаниеПоНормативам_КонтрольНаДату
		|ИЗ
		|	ДвиженияРаспоряженияНаСписаниеПоНормативамИзменение КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ РаспоряженияНаСписаниеПоНормативам_ОперативныйКонтроль КАК РаспоряженияНаСписаниеПоНормативам_ОперативныйКонтроль
		|		ПО Таблица.Организация = РаспоряженияНаСписаниеПоНормативам_ОперативныйКонтроль.Организация
		|			И Таблица.Подразделение = РаспоряженияНаСписаниеПоНормативам_ОперативныйКонтроль.Подразделение
		|			И Таблица.Номенклатура = РаспоряженияНаСписаниеПоНормативам_ОперативныйКонтроль.Номенклатура
		|			И Таблица.Характеристика = РаспоряженияНаСписаниеПоНормативам_ОперативныйКонтроль.Характеристика
		|			И Таблица.Распоряжение = РаспоряженияНаСписаниеПоНормативам_ОперативныйКонтроль.Распоряжение
		|			И Таблица.КодСтроки = РаспоряженияНаСписаниеПоНормативам_ОперативныйКонтроль.КодСтроки
		|			И Таблица.Назначение = РаспоряженияНаСписаниеПоНормативам_ОперативныйКонтроль.Назначение
		|ГДЕ
		|	РаспоряженияНаСписаниеПоНормативам_ОперативныйКонтроль.Распоряжение ЕСТЬ NULL 
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЛОЖЬ КАК КонтрольНаДату,
		|	ТаблицаОстатков.Организация КАК Организация,
		|	ТаблицаОстатков.Подразделение КАК Подразделение,
		|	ТаблицаОстатков.Номенклатура КАК Номенклатура,
		|	ТаблицаОстатков.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаОстатков.Характеристика КАК Характеристика,
		|	ТаблицаОстатков.Распоряжение КАК Распоряжение,
		|	ТаблицаОстатков.КодСтроки КАК КодСтроки,
		|	ТаблицаОстатков.Назначение КАК Назначение,
		|	ТаблицаОстатков.Количество КАК Количество
		|ИЗ
		|	РаспоряженияНаСписаниеПоНормативам_ОперативныйКонтроль КАК ТаблицаОстатков
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ИСТИНА,
		|	ТаблицаОстатков.Организация,
		|	ТаблицаОстатков.Подразделение,
		|	ТаблицаОстатков.Номенклатура,
		|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения,
		|	ТаблицаОстатков.Характеристика,
		|	ТаблицаОстатков.Распоряжение,
		|	ТаблицаОстатков.КодСтроки,
		|	ТаблицаОстатков.Назначение,
		|	-(ТаблицаОстатков.КоличествоРасход - ТаблицаОстатков.КоличествоПриход)
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаСписаниеПоНормативам.Обороты(
		|			&ДатаКонтроляПередЗаписьюНачало,
		|			&ДатаКонтроляПередЗаписьюКонец,
		|			,
		|			(Организация, Подразделение, Номенклатура, Характеристика, Распоряжение, КодСтроки, Назначение) В
		|				(ВЫБРАТЬ
		|					Таблица.Организация,
		|					Таблица.Подразделение,
		|					Таблица.Номенклатура,
		|					Таблица.Характеристика,
		|					Таблица.Распоряжение,
		|					Таблица.КодСтроки,
		|					Таблица.Назначение
		|				ИЗ
		|					РаспоряженияНаСписаниеПоНормативам_КонтрольНаДату КАК Таблица)
		|					И &ДатаКонтроляПередЗаписьюНачало <> ДатаВремя(1,1,1)) КАК ТаблицаОстатков
		|ГДЕ
		|	ТаблицаОстатков.КоличествоРасход > ТаблицаОстатков.КоличествоПриход
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ИСТИНА,
		|	ТаблицаОстатков.Организация,
		|	ТаблицаОстатков.Подразделение,
		|	ТаблицаОстатков.Номенклатура,
		|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения,
		|	ТаблицаОстатков.Характеристика,
		|	ТаблицаОстатков.Распоряжение,
		|	ТаблицаОстатков.КодСтроки,
		|	ТаблицаОстатков.Назначение,
		|	-(ТаблицаОстатков.КоличествоРасход - ТаблицаОстатков.КоличествоПриход)
		|ИЗ
		|	РегистрНакопления.РаспоряженияНаСписаниеПоНормативам.Обороты(
		|			&ДатаКонтроляПриЗаписиНачало,
		|			&ДатаКонтроляПриЗаписиКонец,
		|			,
		|			(Организация, Подразделение, Номенклатура, Характеристика, Распоряжение, КодСтроки, Назначение) В
		|				(ВЫБРАТЬ
		|					Таблица.Организация,
		|					Таблица.Подразделение,
		|					Таблица.Номенклатура,
		|					Таблица.Характеристика,
		|					Таблица.Распоряжение,
		|					Таблица.КодСтроки,
		|					Таблица.Назначение
		|				ИЗ
		|					РаспоряженияНаСписаниеПоНормативам_КонтрольНаДату КАК Таблица)
		|					И &ДатаКонтроляПриЗаписиНачало <> ДатаВремя(1,1,1)) КАК ТаблицаОстатков
		|ГДЕ
		|	ТаблицаОстатков.КоличествоРасход > ТаблицаОстатков.КоличествоПриход
		|;
		|///////////////////////////////////////////////////////////////////
		|";
		
		ЗапросДаты = Новый Запрос("ВЫБРАТЬ МИНИМУМ(Т.ДатаКонтроляПередЗаписью) КАК ДатаКонтроляПередЗаписью,
			|МИНИМУМ(Т.ДатаКонтроляПриЗаписи) КАК ДатаКонтроляПриЗаписи ИЗ ДвиженияРаспоряженияНаСписаниеПоНормативамИзменение КАК Т");
			
		ЗапросДаты.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
		ВыборкаДаты = ЗапросДаты.Выполнить().Выбрать();
		
		ДатаКонтроляПередЗаписьюНачало = Дата("00010101");
		ДатаКонтроляПередЗаписьюКонец = Дата("00010101");
		
		ДатаКонтроляПриЗаписиНачало = Дата("00010101");
		ДатаКонтроляПриЗаписиКонец = Дата("00010101");
		
		Если ВыборкаДаты.Следующий() Тогда
			
			Если ЗначениеЗаполнено(ВыборкаДаты.ДатаКонтроляПередЗаписью) Тогда
				ДатаКонтроляПередЗаписьюНачало = НачалоМесяца(ВыборкаДаты.ДатаКонтроляПередЗаписью);
				ДатаКонтроляПередЗаписьюКонец = КонецМесяца(ВыборкаДаты.ДатаКонтроляПередЗаписью);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаДаты.ДатаКонтроляПриЗаписи) Тогда
				ДатаКонтроляПриЗаписиНачало = НачалоМесяца(ВыборкаДаты.ДатаКонтроляПриЗаписи);
				ДатаКонтроляПриЗаписиКонец = КонецМесяца(ВыборкаДаты.ДатаКонтроляПриЗаписи);
			КонецЕсли;
			
		КонецЕсли;
		
		ПакетЗапросов.УстановитьПараметр("ДатаКонтроляПередЗаписьюНачало",  ДатаКонтроляПередЗаписьюНачало);
		ПакетЗапросов.УстановитьПараметр("ДатаКонтроляПередЗаписьюКонец",   ДатаКонтроляПередЗаписьюКонец);
		
		ПакетЗапросов.УстановитьПараметр("ДатаКонтроляПриЗаписиНачало",     ДатаКонтроляПриЗаписиНачало);
		ПакетЗапросов.УстановитьПараметр("ДатаКонтроляПриЗаписиКонец",      ДатаКонтроляПриЗаписиКонец);
		
	КонецЕсли;
	
	//++ НЕ УТКА
	// Контроль отрицательных остатков ЗаказыНаПроизводствоСпецификации
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияЗаказыНаПроизводствоСпецификацииИзменение") Тогда

		МассивКонтролей.Добавить(Врег("ЗаказыНаПроизводствоСпецификации"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ТаблицаОстатков.ЗаказНаПроизводство           КАК Заказ,
		|	ТаблицаОстатков.КодСтрокиПродукция            КАК КодСтроки,
		|	ТаблицаОстатков.КодСтрокиЭтапыГрафик          КАК КодСтрокиЭтапыГрафик,
		|	ТаблицаОстатков.Этап                          КАК Этап,
		|	ТаблицаОстатков.Подразделение                 КАК Подразделение,
		|	ТаблицаОстатков.Номенклатура                  КАК Номенклатура,
		|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаОстатков.Характеристика                КАК Характеристика,
		|	ТаблицаОстатков.Назначение                    КАК Назначение,
		|	ТаблицаОстатков.ТипДвиженияЗапасов            КАК ТипДвиженияЗапасов,
		|	ТаблицаОстатков.ПроизводитсяВПроцессе         КАК ПроизводитсяВПроцессе,
		|	ТаблицаОстатков.ВариантОбеспечения            КАК ВариантОбеспечения,
		|	ТаблицаОстатков.ДатаПотребности               КАК ДатаПотребности,
		|	ТаблицаОстатков.Серия                         КАК Серия,
		|	ТаблицаОстатков.ЗаказаноОстаток               КАК КоличествоЗаказано
		|ИЗ
		|	РегистрНакопления.ЗаказыНаПроизводствоСпецификации.Остатки(,
		|			(ЗаказНаПроизводство, КодСтрокиПродукция, КодСтрокиЭтапыГрафик, Этап, Подразделение,
		|				Номенклатура, Характеристика, Назначение, ТипДвиженияЗапасов, ПроизводитсяВПроцессе, ВариантОбеспечения, ДатаПотребности, Серия) В
		|				(ВЫБРАТЬ
		|					Таблица.ЗаказНаПроизводство      КАК ЗаказНаПроизводство,
		|					Таблица.КодСтрокиПродукция       КАК КодСтрокиПродукция,
		|					Таблица.КодСтрокиЭтапыГрафик     КАК КодСтрокиЭтапыГрафик,
		|					Таблица.Этап                     КАК Этап,
		|					Таблица.Подразделение            КАК Подразделение,
		|					Таблица.Номенклатура             КАК Номенклатура,
		|					Таблица.Характеристика           КАК Характеристика,
		|					Таблица.Назначение               КАК Назначение,
		|					Таблица.ТипДвиженияЗапасов       КАК ТипДвиженияЗапасов,
		|					Таблица.ПроизводитсяВПроцессе    КАК ПроизводитсяВПроцессе,
		|					Таблица.ВариантОбеспечения       КАК ВариантОбеспечения,
		|					Таблица.ДатаПотребности          КАК ДатаПотребности,
		|					Таблица.Серия                    КАК Серия
		|				ИЗ
		|					ДвиженияЗаказыНаПроизводствоСпецификацииИзменение КАК Таблица)
		|	) КАК ТаблицаОстатков
		|
		|ГДЕ
		|	(ТаблицаОстатков.ЗаказаноОстаток < 0);
		|///////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	// Контроль отрицательных остатков ТрудозатратыКОформлению
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияТрудозатратыКОформлениюИзменение") Тогда
		
		МассивКонтролей.Добавить(Врег("ТрудозатратыКОформлению"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ТаблицаОстатков.Организация                     КАК Организация,
		|	ТаблицаОстатков.Распоряжение                    КАК Распоряжение,
		|	ТаблицаОстатков.ВидРабот                        КАК ВидРабот,
		|	ТаблицаОстатков.ВидРабот.ЕдиницаИзмерения       КАК ЕдиницаИзмерения,
		|	ТаблицаОстатков.Бригада                         КАК Бригада,
		|	ТаблицаОстатков.КодСтрокиРаспоряжения           КАК КодСтрокиРаспоряжения,
		|	ТаблицаОстатков.КоличествоОстаток               КАК Количество
		|ИЗ
		|	РегистрНакопления.ТрудозатратыКОформлению.Остатки(,
		|			(Организация, Распоряжение, ВидРабот, Бригада, КодСтрокиРаспоряжения) В
		|				(ВЫБРАТЬ
		|					Таблица.Организация,
		|					Таблица.Распоряжение,
		|					Таблица.ВидРабот,
		|					Таблица.Бригада,
		|					Таблица.КодСтрокиРаспоряжения
		|				ИЗ
		|					ДвиженияТрудозатратыКОформлениюИзменение КАК Таблица)
		|	) КАК ТаблицаОстатков
		|ГДЕ
		|	(ТаблицаОстатков.КоличествоОстаток < 0);
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	// Контроль отрицательных остатков БракВПроизводстве
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияБракВПроизводствеИзменение") Тогда
		МассивКонтролей.Добавить(Врег("БракВПроизводстве"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ТаблицаОстатков.МаршрутныйЛист                  КАК МаршрутныйЛист,
		|	ТаблицаОстатков.КоличествоОстаток               КАК Количество
		|ИЗ
		|	РегистрНакопления.БракВПроизводстве.Остатки(,
		|			МаршрутныйЛист В
		|				(ВЫБРАТЬ
		|					Таблица.МаршрутныйЛист
		|				ИЗ
		|					ДвиженияБракВПроизводствеИзменение КАК Таблица)
		|	) КАК ТаблицаОстатков
		|ГДЕ
		|	(ТаблицаОстатков.КоличествоОстаток < 0);
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	//-- НЕ УТКА
	//-- НЕ УТ
	
	// Контроль отрицательных остатков ПринятаяВозвратнаяТара.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияПринятаяВозвратнаяТараИзменение") Тогда

		МассивКонтролей.Добавить(Врег("ПринятаяВозвратнаяТара"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ТаблицаОстатков.Партнер                        КАК Партнер,
		|	ТаблицаОстатков.Номенклатура                   КАК Номенклатура,
		|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
		|	ТаблицаОстатков.Характеристика                 КАК Характеристика,
		|	ТаблицаОстатков.ДокументПоступления            КАК ДокументПоступления,
		|	ТаблицаОстатков.ПредусмотренЗалог              КАК ПредусмотренЗалог,
		|	ТаблицаОстатков.КоличествоОстаток              КАК Количество,
		|	ТаблицаОстатков.СуммаОстаток                   КАК Сумма
		|ИЗ
		|	РегистрНакопления.ПринятаяВозвратнаяТара.Остатки(,
		|			(Партнер, Номенклатура, Характеристика, ДокументПоступления, ПредусмотренЗалог) В
		|				(ВЫБРАТЬ
		|					Таблица.Партнер,
		|					Таблица.Номенклатура,
		|					Таблица.Характеристика,
		|					Таблица.ДокументПоступления,
		|					Таблица.ПредусмотренЗалог
		|				ИЗ
		|					ДвиженияПринятаяВозвратнаяТараИзменение КАК Таблица)
		|	) КАК ТаблицаОстатков
		|
		|ГДЕ
		|	ТаблицаОстатков.КоличествоОстаток < 0;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	// Контроль отрицательных остатков ПереданнаяВозвратнаяТара.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияПереданнаяВозвратнаяТараИзменение") Тогда

		МассивКонтролей.Добавить(Врег("ПереданнаяВозвратнаяТара"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ТаблицаОстатков.Партнер                        КАК Партнер,
		|	ТаблицаОстатков.Номенклатура                   КАК Номенклатура,
		|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения  КАК ЕдиницаИзмерения,
		|	ТаблицаОстатков.Характеристика                 КАК Характеристика,
		|	ТаблицаОстатков.ДокументПередачи               КАК ДокументПередачи,
		|	ТаблицаОстатков.ПредусмотренЗалог              КАК ПредусмотренЗалог,
		|	ТаблицаОстатков.ВидЗапасов                     КАК ВидЗапасов,
		|	ТаблицаОстатков.НомерГТД                       КАК НомерГТД,
		|	ТаблицаОстатков.КоличествоОстаток              КАК Количество,
		|	ТаблицаОстатков.СуммаОстаток                   КАК Сумма
		|ИЗ
		|	РегистрНакопления.ПереданнаяВозвратнаяТара.Остатки(,
		|			(Партнер, Номенклатура, Характеристика, ДокументПередачи, ВидЗапасов, НомерГТД, ПредусмотренЗалог) В
		|				(ВЫБРАТЬ
		|					Таблица.Партнер,
		|					Таблица.Номенклатура,
		|					Таблица.Характеристика,
		|					Таблица.ДокументПередачи,
		|					Таблица.ВидЗапасов,
		|					Таблица.НомерГТД,
		|					Таблица.ПредусмотренЗалог
		|				ИЗ
		|					ДвиженияПереданнаяВозвратнаяТараИзменение КАК Таблица)
		|	) КАК ТаблицаОстатков
		|
		|ГДЕ
		|	ТаблицаОстатков.КоличествоОстаток < 0;
		|///////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	// Контроль отрицательных остатков ТоварыОрганизаций.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ДвиженияТоварыОрганизацийИзменение") Тогда
		МассивКонтролей.Добавить(Врег("ОстаткиОрганизацийВТ"));
		МассивКонтролей.Добавить(Врег("ТоварыОрганизаций"));
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ДОБАВИТЬКДАТЕ(&ДатаКонтроля, СЕКУНДА, -1) КАК ДатаОстатка,
		|	Остатки.АналитикаУчетаНоменклатуры, Остатки.Организация, Остатки.ВидЗапасов, Остатки.НомерГТД, Остатки.КоличествоОстаток
		|ПОМЕСТИТЬ
		|	ОстаткиОрганизацийВТ
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(&ДатаКонтроля,
		|		(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов, НомерГТД) В
		|			(ВЫБРАТЬ
		|				Изменения.АналитикаУчетаНоменклатуры, Изменения.Организация, Изменения.ВидЗапасов, Изменения.НомерГТД
		|			ИЗ
		|				ДвиженияТоварыОрганизацийИзменение КАК Изменения)
		|	) КАК Остатки
		|ГДЕ
		|	Остатки.КоличествоОстаток < 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	&КонецВремен КАК ДатаОстатка,
		|	Остатки.АналитикаУчетаНоменклатуры, Остатки.Организация, Остатки.ВидЗапасов, Остатки.НомерГТД, Остатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(,
		|		НЕ &ИгнорироватьОперативныеОстатки
		|		И (АналитикаУчетаНоменклатуры, Организация, ВидЗапасов, НомерГТД) В
		|			(ВЫБРАТЬ
		|				Изменения.АналитикаУчетаНоменклатуры, Изменения.Организация, Изменения.ВидЗапасов, Изменения.НомерГТД
		|			ИЗ
		|				ДвиженияТоварыОрганизацийИзменение КАК Изменения)
		|	) КАК Остатки
		|ГДЕ
		|	Остатки.КоличествоОстаток < 0;
		|
		|ВЫБРАТЬ
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	Аналитика.Серия,
		|	Аналитика.Склад,
		|	Справочник.ЕдиницаИзмерения,
		|	Остатки.Организация,
		|	Остатки.ВидЗапасов,
		|	Остатки.НомерГТД,
		|	Остатки.КоличествоОстаток КАК Количество,
		|	Остатки.ДатаОстатка
		|ИЗ
		|	ОстаткиОрганизацийВТ КАК Остатки
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|	ПО
		|		Аналитика.КлючАналитики = Остатки.АналитикаУчетаНоменклатуры
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Справочник.Номенклатура КАК Справочник
		|	ПО
		|		Аналитика.Номенклатура = Справочник.Ссылка
		|УПОРЯДОЧИТЬ ПО
		|	Аналитика.Номенклатура, Аналитика.Характеристика, Остатки.Организация, Аналитика.Склад, Остатки.ДатаОстатка
		|;
		|///////////////////////////////////////////////////////////////////
		|";
		
		ЗапросДаты = Новый Запрос("ВЫБРАТЬ МИНИМУМ(Т.ПериодПередЗаписью) КАК Дата ИЗ ДвиженияТоварыОрганизацийИзменение КАК Т");
		ЗапросДаты.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
		ВыборкаДаты = ЗапросДаты.Выполнить().Выбрать();
		
		ДатаОстатка = ?(ВыборкаДаты.Следующий() И ЗначениеЗаполнено(ВыборкаДаты.Дата), ВыборкаДаты.Дата, Объект.Дата);
		
		ПакетЗапросов.УстановитьПараметр("ДатаКонтроля",
			Перечисления.ВидыКонтроляТоваровОрганизаций.ДатаКонтроля(ДатаОстатка) + 1);
		ПакетЗапросов.УстановитьПараметр("КонецВремен", '39991231235959');
		ПакетЗапросов.УстановитьПараметр("ИгнорироватьОперативныеОстатки",
			Объект.ДополнительныеСвойства.Свойство("ИгнорироватьОперативныеОстатки"));
	КонецЕсли;
	
	// Контроль отрицательных остатков ПрочиеРасходы.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц, "ДвиженияПрочиеРасходыИзменение") Тогда
		
		МассивКонтролей.Добавить(Врег("ПрочиеРасходы"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ТаблицаОстатков.Организация,
		|	ТаблицаОстатков.Подразделение,
		|	ТаблицаОстатков.СтатьяРасходов,
		|	ТаблицаОстатков.АналитикаРасходов,
		|	ТаблицаОстатков.СуммаОстаток
		|ИЗ
		|	РегистрНакопления.ПрочиеРасходы.Остатки(,
		|			(Организация, Подразделение, СтатьяРасходов, АналитикаРасходов) В
		|				(ВЫБРАТЬ
		|					Таблица.Организация,
		|					Таблица.Подразделение,
		|					Таблица.СтатьяРасходов,
		|					Таблица.АналитикаРасходов
		|				ИЗ
		|					ДвиженияПрочиеРасходыИзменение КАК Таблица)
		|	) КАК ТаблицаОстатков
		|
		|ГДЕ
		|	ТаблицаОстатков.СуммаОстаток < 0;
		|///////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	//++ НЕ УТ
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц, "ДвиженияЗаказыМатериаловСУчетомКорректировокИзменение") Тогда
		
		МассивКонтролей.Добавить(Врег("ЗаказыМатериаловСУчетомКорректировок"));
		ТекстЗапроса = ТекстЗапроса + 
		"
		|ВЫБРАТЬ
		|	ТаблицаОбороты.Организация                КАК Организация,
		|	ТаблицаОбороты.Подразделение              КАК Подразделение,
		|	ТаблицаОбороты.Распоряжение               КАК Распоряжение,
		|	ТаблицаОбороты.КодСтрокиРаспоряжения      КАК КодСтрокиРаспоряжения,
		|	ТаблицаОбороты.ВариантОбеспечения         КАК ВариантОбеспечения,
		|	ТаблицаОбороты.ДатаПотребности            КАК ДатаПотребности,
		|	ТаблицаОбороты.КодСтроки                  КАК КодСтроки,
		|	ТаблицаОбороты.Отменено                   КАК Отменено,
		|	ТаблицаОбороты.ПроизводствоНаСтороне      КАК ПроизводствоНаСтороне,
		|	ТаблицаОбороты.Серия                      КАК Серия,
		|	ТаблицаОбороты.Склад                      КАК Склад,
		|	ВЫБОР
		|		КОГДА ТаблицаОбороты.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ТаблицаОбороты.Упаковка.Представление                 
		|		ИНАЧЕ ТаблицаОбороты.Номенклатура.ЕдиницаИзмерения.Представление
		|	КОНЕЦ КАК УпаковкаПредставление,
		|	ТаблицаОбороты.Номенклатура.Представление    КАК НоменклатураПредставление,
		|	ТаблицаОбороты.Характеристика.Представление  КАК ХарактеристикаПредставление,
		|	ТаблицаОбороты.КоличествоУпаковокОборот   КАК КоличествоУпаковок
		|ИЗ
		|	РегистрНакопления.ЗаказыМатериаловСУчетомКорректировок.Обороты(,,, 
		|				(Организация,Подразделение,Распоряжение,КодСтрокиРаспоряжения) В 
		|					(ВЫБРАТЬ
		|						Таблица.Организация,
		|						Таблица.Подразделение,
		|						Таблица.Распоряжение,
		|						Таблица.КодСтрокиРаспоряжения
		|					ИЗ
		|						ЗаказыМатериаловСУчетомКорректировокИзменение КАК Таблица)
		|				)КАК ТаблицаОбороты
		|
		|ГДЕ
		|	ТаблицаОбороты.КоличествоУпаковокОборот < 0;
		|///////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	//-- НЕ УТ
	
	//++ НЕ УТКА
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц, "ДвиженияЭтапыПроизводстваИзменение") Тогда
		
		МассивКонтролей.Добавить(Врег("ВременнаяТаблицаЭтапыПроизводства"));
		МассивКонтролей.Добавить(Врег("ЭтапыПроизводства"));
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаОбороты.Распоряжение                         КАК Распоряжение,
		|	ТаблицаОбороты.КодСтрокиПродукция                   КАК КодСтрокиПродукция,
		|	ТаблицаОбороты.КодСтрокиЭтапыГрафик                 КАК КодСтрокиЭтапыГрафик,
		|
		|	ТаблицаОбороты.ЗапланированоЗаказомОборот           КАК ЗапланированоЗаказом,
		|	ТаблицаОбороты.ЗапланированоПроизводствомОборот
		|		+ ТаблицаОбороты.КВыполнениюОборот
		|		+ ТаблицаОбороты.ВыполненоОборот
		|		+ ТаблицаОбороты.БракОборот                     КАК ЗапланированоПроизводством
		|
		|ПОМЕСТИТЬ ВременнаяТаблицаЭтапыПроизводства
		|
		|ИЗ
		|	РегистрНакопления.ЭтапыПроизводства.Обороты(,,, 
		|				(Распоряжение, КодСтрокиПродукция, КодСтрокиЭтапыГрафик) В 
		|					(ВЫБРАТЬ
		|						Т.Распоряжение,
		|						Т.КодСтрокиПродукция,
		|						Т.КодСтрокиЭтапыГрафик
		|					ИЗ
		|						ДвиженияЭтапыПроизводстваИзменение КАК Т)
		|				)КАК ТаблицаОбороты
		|
		|ГДЕ
		|	ТаблицаОбороты.ЗапланированоЗаказомОборот < ТаблицаОбороты.ЗапланированоПроизводствомОборот 
		|													+ ТаблицаОбороты.КВыполнениюОборот 
		|													+ ТаблицаОбороты.ВыполненоОборот 
		|													+ ТаблицаОбороты.БракОборот
		|	ИНДЕКСИРОВАТЬ ПО
		|		Распоряжение,
		|		КодСтрокиПродукция
		|;
		|///////////////////////////////////////////////////////////////////
		|
		|	ВЫБРАТЬ
		|		ТЭтапыПроизводства.Распоряжение               КАК Распоряжение,
		|		ТЭтапыПроизводства.КодСтрокиПродукция         КАК КодСтрокиПродукция,
		|		ТПродукция.НомерСтроки                        КАК НомерСтроки,
		|		ТПродукция.Номенклатура.Представление         КАК НоменклатураПредставление,
		|		ТПродукция.Характеристика.Представление       КАК ХарактеристикаПредставление,
		|		ТЭтапыПроизводства.КодСтрокиЭтапыГрафик       КАК КодСтрокиЭтапыГрафик,
		|		ТЭтапыПроизводства.ЗапланированоЗаказом       КАК ЗапланированоЗаказом,
		|		ТЭтапыПроизводства.ЗапланированоПроизводством КАК ЗапланированоПроизводством
		|ИЗ
		|	ВременнаяТаблицаЭтапыПроизводства КАК ТЭтапыПроизводства
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК ТПродукция
		|		ПО ТЭтапыПроизводства.Распоряжение = ТПродукция.Ссылка
		|			И ТЭтапыПроизводства.КодСтрокиПродукция = ТПродукция.КодСтроки
		|		
		|;
		|///////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	//-- НЕ УТКА
	
	// Контроль отрицательных остатков ТоварыКОформлениюЗаявленийОВвозе.
	Если ЕстьИзмененияВТаблице(ДанныеТаблиц,"ТоварыКОформлениюЗаявленийОВвозеИзменение") Тогда
		МассивКонтролей.Добавить(Врег("ТоварыКОформлениюЗаявленийОВвозе"));
		ТекстЗапроса = ТекстЗапроса + 
		"ВЫБРАТЬ
		|	ТаблицаОстатков.ДокументПоступления           КАК ДокументПоступления,
		|	ТаблицаОстатков.Номенклатура                  КАК Номенклатура,
		|	ТаблицаОстатков.Характеристика                КАК Характеристика,
		|	ТаблицаОстатков.Серия                         КАК Серия,
		|	ТаблицаОстатков.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ТаблицаОстатков.Склад                         КАК Склад,
		|	ТаблицаОстатков.КОформлениюОстаток            КАК КОформлению,
		|	ТаблицаОстатков.ФактурнаяСтоимостьОстаток     КАК ФактурнаяСтоимость
		|ИЗ
		|	РегистрНакопления.ТоварыКОформлениюЗаявленийОВвозе.Остатки(
		|			,
		|			(ДокументПоступления, Номенклатура, Характеристика, Серия, Склад) В
		|				(ВЫБРАТЬ
		|					Таблица.ДокументПоступления,
		|					Таблица.Номенклатура,
		|					Таблица.Характеристика,
		|					Таблица.Серия,
		|					Таблица.Склад
		|				ИЗ
		|					ТоварыКОформлениюЗаявленийОВвозеИзменение КАК Таблица)) КАК ТаблицаОстатков
		|ГДЕ
		|	(ТаблицаОстатков.КОформлениюОстаток < 0
		|			ИЛИ ТаблицаОстатков.ФактурнаяСтоимостьОстаток < 0)";
	КонецЕсли;
	
	Если МассивКонтролей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПакетЗапросов.Текст = ТекстЗапроса;
	ПакетЗапросов.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	МассивРезультатов = ПакетЗапросов.ВыполнитьПакет();

	Итератор = -1;
	Для Каждого Результат Из МассивРезультатов Цикл

		Итератор = Итератор + 1;
		Если Результат.Пустой() Тогда
			Продолжить;
		КонецЕсли;

		ИмяКонтроля = МассивКонтролей[Итератор];

		Если ИмяКонтроля = Врег("ТоварыКОтгрузке") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструТоварыКОтгрузке(Объект, Отказ, Результат);

		ИначеЕсли ИмяКонтроля = Врег("ОбеспечениеВременнаяТаблица1") Тогда

		ИначеЕсли ИмяКонтроля = Врег("ОбеспечениеВременнаяТаблица2") Тогда

		ИначеЕсли ИмяКонтроля = Врег("Обеспечение") Тогда

			СообщитьОбОшибкахПроведенияПоРегистрамСвободныеОстаткиИДвижениеТоваров(Объект, Отказ, Результат);

		ИначеЕсли ИмяКонтроля = Врег("ДенежныеСредстваКВыплате") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструДенежныеСредстваКВыплате(Объект, Отказ, Результат);

		ИначеЕсли ИмяКонтроля = Врег("РасчетыСКлиентами") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструРасчетыСКлиентами(Объект, Отказ, Результат);

		ИначеЕсли ИмяКонтроля = Врег("ВременнаяТаблицаДанныеДоговоровПредварительные") Тогда

			// Временная таблица

		ИначеЕсли ИмяКонтроля = Врег("ВременнаяТаблицаДанныеДоговоров") Тогда

			// Временная таблица

		ИначеЕсли ИмяКонтроля = Врег("ВременнаяТаблицаОбъектыРасчетов") Тогда

			// Временная таблица

		ИначеЕсли ИмяКонтроля = Врег("ОграничениеСуммыЗадолженности") Тогда

			СообщитьОбОшибкахПроведенияПриОграниченииСуммыЗадолженности(Объект, Отказ, Результат);

		ИначеЕсли ИмяКонтроля = Врег("КонтрольСрокаЗадолженности") Тогда

			СообщитьОбОшибкахПроведенияПриКонтролеСрокаЗадолженности(Объект, Отказ, Результат);

		ИначеЕсли ИмяКонтроля = Врег("ЗаказыНаПеремещение") Тогда
			
			СообщитьОбОшибкахПроведенияПоРегиструЗаказыНаПеремещение(Объект, Отказ, Результат);
			
		ИначеЕсли ИмяКонтроля = Врег("ЗаказыНаВнутреннееПотребление") Тогда
			
			СообщитьОбОшибкахПроведенияПоРегиструЗаказыНаВнутреннееПотребление(Объект, Отказ, Результат);
			
		ИначеЕсли ИмяКонтроля = ВРег("ТМЦВЭксплуатации") Тогда
			
			СообщитьОбОшибкахПроведенияПоРегиструТМЦВЭксплуатации(Объект, Отказ, Результат);
		//++ НЕ УТКА
		ИначеЕсли ИмяКонтроля = Врег("РаспоряженияНаВыпускПродукции") Тогда
			
			СообщитьОбОшибкахПроведенияПоРегиструРаспоряженияНаВыпускПродукции(Объект, Отказ, Результат);
		
		ИначеЕсли ИмяКонтроля = Врег("РаспоряженияНаПередачуИзПроизводства") Тогда
			
			СообщитьОбОшибкахПроведенияПоРегиструРаспоряженияНаПередачуИзПроизводства(Объект, Отказ, Результат);
		
		//-- НЕ УТКА
		//++ НЕ УТ
		ИначеЕсли ИмяКонтроля = Врег("ЗаказыМатериаловВПроизводство") Тогда
			
			СообщитьОбОшибкахПроведенияПоРегиструЗаказыМатериаловВПроизводство(Объект, Отказ, Результат);
			
		ИначеЕсли ИмяКонтроля = Врег("ДенежныеДокументы") Тогда
			
			СообщитьОбОшибкахПроведенияПоРегиструДенежныеДокументы(Объект, Отказ, Результат);
			
		ИначеЕсли ИмяКонтроля = Врег("РаспоряженияНаСписаниеПоНормативам_ОперативныйКонтроль") Или
			ИмяКонтроля = Врег("РаспоряженияНаСписаниеПоНормативам_КонтрольНаДату") Тогда
			
			// временная таблица
			
		ИначеЕсли ИмяКонтроля = Врег("РаспоряженияНаСписаниеПоНормативам") Тогда
			
			СообщитьОбОшибкахПроведенияПоРегиструРаспоряженияНаСписаниеПоНормативам(Объект, Отказ, Результат);
			
		ИначеЕсли ИмяКонтроля = Врег("ТоварыПереданныеПереработчику") Тогда
			
			СообщитьОбОшибкахПроведенияПоРегиструТоварыПереданныеПереработчику(Объект, Отказ, Результат);
			
		//-- НЕ УТ
		//++ НЕ УТКА
		ИначеЕсли ИмяКонтроля = Врег("ЗаказыНаПроизводствоСпецификации") Тогда
		
			СообщитьОбОшибкахПроведенияПриОформленииЗаказаНаПроизводство(Объект, Отказ, Результат);
		
		ИначеЕсли ИмяКонтроля = Врег("УслугиДавальцуКОформлению") Тогда
			
			СообщитьОбОшибкахПроведенияПоРегиструУслугиДавальцуКОформлению(Объект, Отказ, Результат);
			
		//-- НЕ УТКА
		ИначеЕсли ИмяКонтроля = Врег("ЗаказыКлиентов")
			  Или ИмяКонтроля = Врег("ЗаказыПоставщикам") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструЗаказыКлиентовПоставщикам(Объект, Отказ, Результат);

		ИначеЕсли ИмяКонтроля = Врег("ДвиженияЗаказыКлиентовИзменениеМерныеТовары")
			ИЛИ ИмяКонтроля = Врег("ВТДопустимыеОтклоненияЗаказыКлиентов")
			ИЛИ ИмяКонтроля = Врег("ВТЗаказыКлиентовОстатки") Тогда
			
			// временная таблица
			
		ИначеЕсли ИмяКонтроля = Врег("ЗаявкиНаВозвратТоваровОтКлиентов") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструЗаявкиНаВозвратТоваровОтКлиентов(Объект, Отказ, Результат);

		ИначеЕсли ИмяКонтроля = Врег("ЗаказыНаСборку") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструЗаказыНаСборку(Объект, Отказ, Результат);
			
		ИначеЕсли ИмяКонтроля = Врег("ВТМногооборотнаяТара") Тогда
			
			// временная таблица
			
		ИначеЕсли ИмяКонтроля = Врег("ВТЯчейкиКонтролироватьОбособление") Тогда
			
			// временная таблица

		ИначеЕсли ИмяКонтроля = Врег("ТоварыВЯчейках") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструТоварыВЯчейках(Объект, Отказ, Результат);
			
		ИначеЕсли ИмяКонтроля = Врег("НесколькоНазначенийВОбособленныхЯчейках") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструТоварыВЯчейкахНесколькоНазначений(Объект, Отказ, Результат);

		ИначеЕсли ИмяКонтроля = Врег("ТоварыНаСкладах") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструТоварыНаСкладах(Объект, Отказ, Результат);

		ИначеЕсли ИмяКонтроля = Врег("ВременнаяТаблицаОстатковСТоварнымиМестами")
			Или ИмяКонтроля = Врег("ВременнаяТаблицаОборотовСТоварнымиМестами")
			Или ИмяКонтроля = Врег("ВременнаяТаблицаОстатков")
			Или ИмяКонтроля = Врег("ВременнаяТаблицаОборотов")
			Или ИмяКонтроля = Врег("ТоварныеМестаНоменклатуры") Тогда

			// временная таблица

		ИначеЕсли ИмяКонтроля = Врег("ТоварыКОтбору") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструТоварыКОтбору(Объект, Отказ, Результат);

		ИначеЕсли ИмяКонтроля = Врег("ТоварыОрганизацийКОформлению") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструТоварыОрганизацийКОформлению(Объект, Отказ, Результат);

		ИначеЕсли ИмяКонтроля = Врег("ДвиженияОбеспечениеЗаказовИзменениеМерныеТовары") 
			ИЛИ ИмяКонтроля = Врег("ВТДопустимыеОтклоненияОбеспечениеЗаказов") Тогда
			
			//временная таблица
			
		ИначеЕсли ИмяКонтроля = Врег("ОбеспечениеЗаказов") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструОбеспечениеЗаказов(Объект, Отказ, Результат);

		ИначеЕсли ИмяКонтроля = Врег("ДвиженияТоварыКОтгрузкеСводно") Тогда

			СообщитьОбОшибкахПроведенияПоРегиструСерии(Объект, Отказ, Результат);
			
 		//++ НЕ УТКА
		ИначеЕсли ИмяКонтроля = Врег("БракВПроизводстве") Тогда
			
			СообщитьОбОшибкахПроведенияПоРегиструБракВПроизводстве(Объект, Отказ, Результат);
			
		ИначеЕсли ИмяКонтроля = Врег("ВТ_РаспоряженияНаВыпускПродукцииОперативныйКонтроль")
			ИЛИ ИмяКонтроля = Врег("ВТ_РаспоряженияНаВыпускПродукцииКонтрольНаДату")
			ИЛИ ИмяКонтроля = Врег("ВТ_РаспоряженияНаПередачуИзПроизводстваОперативныйКонтроль")
			ИЛИ ИмяКонтроля = Врег("ВТ_РаспоряженияНаПередачуИзПроизводстваКонтрольНаДату")
			ИЛИ ИмяКонтроля = Врег("ВТ_РаспоряженияНаПередачуИзПроизводстваКонтрольНаДатуОстаток")
			ИЛИ ИмяКонтроля = Врег("ВТ_РаспоряженияНаПередачуИзПроизводства")Тогда
			
			// Временная таблица
			
		ИначеЕсли ИмяКонтроля = Врег("ТрудозатратыКОформлению") Тогда
			
			СообщитьОбОшибкахПроведенияПоРегиструТрудозатратыКОформлению(Объект, Отказ, Результат);
			
		//-- НЕ УТКА
		ИначеЕсли ИмяКонтроля = Врег("ПринятаяВозвратнаяТара") Тогда
			
			СообщитьОбОшибкахПроведенияПоРегиструПринятаяВозвратнаяТара(Объект, Отказ, Результат);
			
		ИначеЕсли ИмяКонтроля = Врег("ПереданнаяВозвратнаяТара") Тогда
			
			СообщитьОбОшибкахПроведенияПоРегиструПереданнаяВозвратнаяТара(Объект, Отказ, Результат);

		ИначеЕсли ИмяКонтроля = Врег("ОбеспечениеЗаказовРаботами") Тогда
			
			СообщитьОбОшибкахПроведенияПоРегиструОбеспечениеЗаказовРаботами(Объект, Отказ, Результат);

		ИначеЕсли ИмяКонтроля = Врег("ОстаткиОрганизацийВТ") Тогда
			// Временная таблица
			
		ИначеЕсли ИмяКонтроля = Врег("ТоварыОрганизаций") Тогда
			СообщитьОбОшибкахПроведенияПоРегиструТоварыОрганизаций(Объект, Отказ, Результат);
			
		ИначеЕсли ИмяКонтроля = Врег("ПрочиеРасходы") Тогда
			СообщитьОбОшибкахПроведенияПоРегиструПрочиеРасходы(Объект, Отказ, Результат);
			
		//++ НЕ УТ
		ИначеЕсли ИмяКонтроля = Врег("ЗаказыМатериаловСУчетомКорректировок") Тогда
			СообщитьОбОшибкахПроведенияПоРегиструЗаказыМатериаловСУчетомКорректировок(Объект, Отказ, Результат);
		//-- НЕ УТ
		
		//++ НЕ УТКА
		ИначеЕсли ИмяКонтроля = Врег("ВременнаяТаблицаЭтапыПроизводства") Тогда
			
			// Временная таблица
		
		ИначеЕсли ИмяКонтроля = Врег("ЭтапыПроизводства") Тогда
			СообщитьОбОшибкахПроведенияПоРегиструЭтапыПроизводства(Объект, Отказ, Результат);
		//-- НЕ УТКА
		
		ИначеЕсли ИмяКонтроля = Врег("ТоварыКОформлениюЗаявленийОВвозе") Тогда
			СообщитьОбОшибкахПроведенияПоРегиструТоварыКОформлениюЗаявленийОВвозе(Объект, Отказ, Результат);
		Иначе

			ВызватьИсключение НСтр("ru = 'Ошибка контроля проведения!'");

		КонецЕсли;
	КонецЦикла;

	Если Отказ Тогда

		Если Объект.ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			ТекстСообщения = НСтр("ru = 'Проведение не выполнено %ПредставлениеОбъекта%'");
		Иначе
			ТекстСообщения = НСтр("ru = 'Отмена проведения не выполнена %ПредставлениеОбъекта%'");
		КонецЕсли;

		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеОбъекта%", Строка(Объект));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект);

	КонецЕсли;

КонецПроцедуры


// Функция вызывается из модулей наборов записей для проверки необходимости
//  контроля изменений движений в регистре.
//
// Параметры:
//  ДополнительныеСвойстваНабораЗаписей	 - Структура - дополнительные свойства набора записей.
// 
// Возвращаемое значение:
//  Булево, Истина - признак необходимости выполнения контроля изменений движений в регистре.
//
Функция РассчитыватьИзменения(ДополнительныеСвойстваНабораЗаписей) Экспорт
	Перем РассчитыватьИзменения;

	Возврат Не ЗначениеЗаполнено(ПараметрыСеанса.ПараметрыОбработчикаОбновления.РежимВыполнения) 
		И ДополнительныеСвойстваНабораЗаписей.Свойство("РассчитыватьИзменения", РассчитыватьИзменения)
		И РассчитыватьИзменения;

КонецФункции

// Функция вызывается из модулей наборов записей для проверки необходимости
//  контроля изменений движений в регистрах "Свободные остатки" и "Движение товаров".
//
// Параметры:
//  ДополнительныеСвойстваНабораЗаписей	 - Структура - дополнительные свойства набора.
// 
// Возвращаемое значение:
//  Булево, Истина - признак необходимости выполнения контроля изменений движений в регистре
//  "Свободные остатки" и "Движение товаров".
//
Функция КонтролироватьОбеспечение(ДополнительныеСвойстваНабораЗаписей) Экспорт
	Перем КонтролироватьОбеспечение;

	Возврат Не ДополнительныеСвойстваНабораЗаписей.Свойство("КонтролироватьОбеспечение", КонтролироватьОбеспечение)
		Или КонтролироватьОбеспечение;

КонецФункции

// Заполняет значение режима проведения документа.
//
// Параметры:
//  ДокументОбъект	 - ДокументОбъект			 - экземпляр объекта определенного документа.
//  РежимЗаписи		 - РежимЗаписиДокумента		 - значение режима, в котором осуществляется запись документа.
//  РежимПроведения	 - РежимПроведенияДокумента	 - значение режима, в котором осуществляется проведение документа.
//
Процедура УстановитьРежимПроведения(ДокументОбъект, РежимЗаписи, РежимПроведения) Экспорт

	Если ДокументОбъект.Проведен И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		РежимПроведения = РежимПроведенияДокумента.Неоперативный;
	КонецЕсли;

КонецПроцедуры

// Процедура выполняет подготовку наборов записей документа к проведению документа.
//  1. Очищает наборы записей от "старых записей" (ситуация возможна только в толстом клиенте)
//  2. Взводит флаг записи у наборов, по которым документ имел движения при прошлом проведении
//  3. Устанавливает активность наборам записей документов с установленным флагом ручной корректировки
//  4. Записывает пустые наборы, если дата ранее проведенного документа была сдвинута вперед
//  Вызывается из модуля документа при проведении.
//
// Параметры:
//  Объект					 - ДокументОбъект - документ-объект, для которого происходит подготовка
//  ВыборочноОчищатьРегистры - Булево - признак выборочной очистки регистров
//
Процедура ПодготовитьНаборыЗаписейКПроведению(Объект, ВыборочноОчищатьРегистры = Истина) Экспорт
	
	Для каждого НаборЗаписей Из Объект.Движения Цикл
		Если НаборЗаписей.Количество() > 0 Тогда
			НаборЗаписей.Очистить();
		КонецЕсли;
	КонецЦикла;

	Если Объект.ДополнительныеСвойства.ЭтоНовый Тогда
		Возврат;
	КонецЕсли;
	
	МетаданныеОбъекта = Объект.Метаданные();
	
	// Регистры, требующие принудительной очистки:
	МассивИменРегистровПринудительнойОчистки = Новый Массив;
	МассивИменРегистровПринудительнойОчистки.Добавить("РасходыПриУСН");
	МассивДвиженийДляПринудительнойОчистки = Новый Массив;
	
	МассивИменРегистров = ПолучитьМассивИспользуемыхРегистров(
		Объект.Ссылка, 
		МетаданныеОбъекта.Движения);

	Для каждого ИмяРегистра Из МассивИменРегистров Цикл
		Объект.Движения[ИмяРегистра].Записывать = Истина;
		Если МассивИменРегистровПринудительнойОчистки.Найти(ИмяРегистра) <> Неопределено
			ИЛИ НЕ ВыборочноОчищатьРегистры Тогда
			МассивДвиженийДляПринудительнойОчистки.Добавить(Объект.Движения[ИмяРегистра]);
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция проверяет наличие изменений в таблице регистра.
//
Функция ЕстьИзмененияВТаблице(СтруктураДанных, Ключ)
	Перем ЕстьИзменения;

	Возврат СтруктураДанных.Свойство(Ключ, ЕстьИзменения) И ЕстьИзменения;

КонецФункции

Функция ТекстЗапросаКонтрольОбеспечения(ЕстьИзмененияСвободныеОстатки, ЕстьИзмененияГрафикОтгрузкиТоваров)

	Если ЕстьИзмененияСвободныеОстатки И ЕстьИзмененияГрафикОтгрузкиТоваров Тогда

		ТекстТаблицыТоваров =
			"ВЫБРАТЬ
			|	Т.Номенклатура               КАК Номенклатура,
			|	Т.Характеристика             КАК Характеристика,
			|	Т.Склад                      КАК Склад,
			|	ДАТАВРЕМЯ(1, 1, 1)           КАК Период
			|ПОМЕСТИТЬ ВтТоварыДляКонтроляОбеспечения
			|ИЗ
			|	ДвиженияСвободныеОстаткиИзменение КАК Т
			|
			|	ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Т.Номенклатура   КАК Номенклатура,
			|	Т.Характеристика КАК Характеристика,
			|	Т.Склад          КАК Склад,
			|	Т.Период         КАК Период
			|ИЗ
			|	ДвиженияГрафикОтгрузкиТоваровИзменение КАК Т
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура, Характеристика, Склад
			|;
			|
			|/////////////////////////////////////////////
			|";

	ИначеЕсли ЕстьИзмененияСвободныеОстатки Тогда

		ТекстТаблицыТоваров =
			"ВЫБРАТЬ
			|	Т.Номенклатура               КАК Номенклатура,
			|	Т.Характеристика             КАК Характеристика,
			|	Т.Склад                      КАК Склад,
			|	ДАТАВРЕМЯ(1, 1, 1)           КАК Период
			|ПОМЕСТИТЬ ВтТоварыДляКонтроляОбеспечения
			|ИЗ
			|	ДвиженияСвободныеОстаткиИзменение КАК Т
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура, Характеристика, Склад
			|;
			|
			|/////////////////////////////////////////////
			|";

	ИначеЕсли ЕстьИзмененияГрафикОтгрузкиТоваров Тогда

		ТекстТаблицыТоваров =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Т.Номенклатура   КАК Номенклатура,
			|	Т.Характеристика КАК Характеристика,
			|	Т.Склад          КАК Склад,
			|	Т.Период         КАК Период
			|ПОМЕСТИТЬ ВтТоварыДляКонтроляОбеспечения
			|ИЗ
			|	ДвиженияГрафикОтгрузкиТоваровИзменение КАК Т
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура, Характеристика, Склад
			|;
			|
			|/////////////////////////////////////////////
			|";

	КонецЕсли;

	ТекстЗапроса = ТекстТаблицыТоваров
		+"ВЫБРАТЬ
		|	Т.Номенклатура   КАК Номенклатура,
		|	Т.Характеристика КАК Характеристика,
		|	Т.Склад          КАК Склад,
		|	Т.Период         КАК Период,
		|	МАКСИМУМ(ОстаткиИзЗаказов.ДатаДоступности) КАК Дата
		|
		|ПОМЕСТИТЬ ВтТоварыКонтроляГрафика
		|ИЗ
		|	ВтТоварыДляКонтроляОбеспечения КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений КАК ОстаткиИзЗаказов
		|			ПО Т.Номенклатура   = ОстаткиИзЗаказов.Номенклатура
		|			 И Т.Характеристика = ОстаткиИзЗаказов.Характеристика
		|			 И Т.Склад          = ОстаткиИзЗаказов.Склад
		|			 И Т.Период >= ОстаткиИзЗаказов.ДатаДоступности
		|СГРУППИРОВАТЬ ПО
		|	Т.Номенклатура, Т.Характеристика, Т.Склад,
		|	Т.Период
		|
		|ИМЕЮЩИЕ
		|	НЕ МАКСИМУМ(ОстаткиИзЗаказов.ДатаДоступности) ЕСТЬ NULL
		|;
		|
		|/////////////////////////////////////////////
		|";

	ТекстЗапроса = ТекстЗапроса
		+"ВЫБРАТЬ
		|	Набор.Номенклатура        КАК Номенклатура,
		|	Набор.Характеристика      КАК Характеристика,
		|	Набор.Склад               КАК Склад,
		|	Набор.Период              КАК Период,
		|	МАКСИМУМ(Набор.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
		|
		|	СУММА(Набор.ВНаличии)          КАК ВНаличии,
		|	СУММА(Набор.ВРезервеИзЗаказов) КАК ВРезервеИзЗаказов,
		|	СУММА(Набор.ВРезервеСоСклада)  КАК ВРезервеСоСклада,
		|	СУММА(Набор.ВРезервеПодЗаказ)  КАК ВРезервеПодЗаказ
		|
		|ИЗ(
		|	ВЫБРАТЬ
		|		Т.Номенклатура        КАК Номенклатура,
		|		Т.Характеристика      КАК Характеристика,
		|		Т.Склад               КАК Склад,
		|		Т.Период              КАК Период,
		|		СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|
		|		ОстаткиСклада.ВНаличииОстаток            КАК ВНаличии,
		|		0                                        КАК ВРезервеИзЗаказов,
		|		ОстаткиСклада.ВРезервеСоСкладаОстаток    КАК ВРезервеСоСклада,
		|		ОстаткиСклада.ВРезервеПодЗаказОстаток    КАК ВРезервеПодЗаказ
		|	ИЗ
		|		ВтТоварыДляКонтроляОбеспечения КАК Т
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(,
		|				(Номенклатура, Характеристика, Склад) В(
		|					ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						Т.Номенклатура        КАК Номенклатура,
		|						Т.Характеристика      КАК Характеристика,
		|						Т.Склад               КАК Склад
		|					ИЗ
		|						ВтТоварыДляКонтроляОбеспечения КАК Т)) КАК ОстаткиСклада
		|			ПО Т.Номенклатура   = ОстаткиСклада.Номенклатура
		|			 И Т.Характеристика = ОстаткиСклада.Характеристика
		|			 И Т.Склад          = ОстаткиСклада.Склад
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|			ПО Т.Номенклатура = СпрНоменклатура.Ссылка
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|		ВЫБРАТЬ
		|			Т.Номенклатура   КАК Номенклатура,
		|			Т.Характеристика КАК Характеристика,
		|			Т.Склад          КАК Склад,
		|			Т.Период         КАК Период,
		|			СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|
		|			0                                  КАК ВНаличии,
		|			- ОстаткиИзЗаказов.Количество      КАК ВРезервеИзЗаказов,
		|			0                                  КАК ВРезервеСоСклада,
		|			0                                  КАК ВРезервеПодЗаказ
		|		ИЗ
		|			ВтТоварыКонтроляГрафика КАК Т
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений КАК ОстаткиИзЗаказов
		|				ПО Т.Номенклатура   = ОстаткиИзЗаказов.Номенклатура
		|				 И Т.Характеристика = ОстаткиИзЗаказов.Характеристика
		|				 И Т.Склад          = ОстаткиИзЗаказов.Склад
		|				 И Т.Дата           = ОстаткиИзЗаказов.ДатаДоступности
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|				ПО Т.Номенклатура = СпрНоменклатура.Ссылка) КАК Набор
		|
		|СГРУППИРОВАТЬ ПО
		|	Набор.Номенклатура, Набор.Характеристика, Набор.Склад,
		|	Набор.Период
		|
		|ИМЕЮЩИЕ
		|	Набор.Период = ДАТАВРЕМЯ(1, 1, 1) И(
		|		СУММА(Набор.ВНаличии) < 0
		|		ИЛИ СУММА(Набор.ВНаличии) - СУММА(Набор.ВРезервеПодЗаказ) < 0
		|		ИЛИ СУММА(Набор.ВНаличии) - СУММА(Набор.ВРезервеПодЗаказ) - СУММА(Набор.ВРезервеСоСклада) < 0)
		|
		|	ИЛИ СУММА(Набор.ВНаличии) - СУММА(Набор.ВРезервеПодЗаказ) - СУММА(Набор.ВРезервеСоСклада) - СУММА(Набор.ВРезервеИзЗаказов) < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|///////////////////////////////////////////////////////////////////
		|";

	Возврат ТекстЗапроса;

КонецФункции

#Область ПроцедурыВыдачиСообщенийОбОшибкахПроведения

Процедура СообщитьОбОшибкахПроведенияПоРегиструДенежныеСредстваКВыплате(Объект, Отказ, РезультатЗапроса)
	
	ЕстьРасхожденияРеквизитов = Ложь;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
	
		ТекстСообщения = "";
		ЭтоЗаявкаНаРасходованиеДС = (ТипЗнч(Выборка.ЗаявкаНаРасходованиеДенежныхСредств) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств"));
		
		Если ЭтоЗаявкаНаРасходованиеДС И Выборка.Организация <> Выборка.ОрганизацияЗаявки Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Организация %1 в документе оплаты не соответствует организации %2 в заявке'"),
				Выборка.Организация,
				Выборка.ОрганизацияЗаявки);
			ЕстьРасхожденияРеквизитов = Истина;
		КонецЕсли;
		
		Если ЭтоЗаявкаНаРасходованиеДС И Выборка.Получатель <> Выборка.ПолучательЗаявки
			И Выборка.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты Тогда
			
			ТекстСообщения = ТекстСообщения
				+ ?(Не ПустаяСтрока(ТекстСообщения), Символы.ПС, "")
				+ СтрШаблон(НСтр("ru = 'Получатель %1 в документе оплаты не соответствует получателю %2 в заявке'"),
					Выборка.Получатель,
					Выборка.ПолучательЗаявки);
			ЕстьРасхожденияРеквизитов = Истина;
		КонецЕсли;
		
		Если Не ЕстьРасхожденияРеквизитов Тогда
			Если ЭтоЗаявкаНаРасходованиеДС Тогда
				
				ТекстСообщения = СтрШаблон(НСтр("ru = 'По заявке %1 оплачено больше, чем утверждено в заявке, на %2 %3'"),
					Выборка.ЗаявкаНаРасходованиеДенежныхСредств,
					-Выборка.Сумма,
					Выборка.Валюта);
			Иначе
				
				ТекстСообщения = СтрШаблон(НСтр("ru = 'По документу %1 оплачено больше, чем утверждено в распоряжении, на %2 %3'"),
					Выборка.ЗаявкаНаРасходованиеДенежныхСредств,
					-Выборка.Сумма,
					Выборка.Валюта);
			КонецЕсли;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);
		
		Если ЕстьРасхожденияРеквизитов Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструТоварыКОтгрузке(Объект, Отказ, РезультатЗапроса)

	Если ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Объект, "Статус")
		И Объект.Статус = Перечисления.СтатусыРасходныхОрдеров.КОтбору Тогда 
		ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% %Назначение%
		|Планируется к отгрузке со склада %Склад% больше, чем указано в распоряжении на отгрузку, на %Количество% %Единица%'");
	Иначе
		ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% %Назначение%
		|Отгружено со склада %Склад% больше, чем указано в распоряжении на отгрузку, на %Количество% %Единица%'");
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
									НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика,,Выборка.Серия));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%",      Строка(Выборка.Склад));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
		Назначение = ?(ЗначениеЗаполнено(Выборка.Назначение), "(" + Строка(Выборка.Назначение) + ")", "");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Назначение%", Назначение);

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструЗаказыКлиентовПоставщикам(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщенияСоСкладом = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% склад %Склад%
		|Оформлено больше чем указано в распоряжении %Заказ% на %Количество% %Единица%'");
		
	ШаблонСообщенияБезСклада = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%
		|Оформлено больше чем указано в распоряжении %Заказ% на %Количество% %Единица%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Склад) Тогда
 			ШаблонСообщения = ШаблонСообщенияСоСкладом;
		Иначе
 			ШаблонСообщения = ШаблонСообщенияБезСклада;
		КонецЕсли;
			
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Заказ%",      Строка(Выборка.Заказ));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%",      Строка(Выборка.Склад));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструЗаявкиНаВозвратТоваровОтКлиентов(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%
		|Возвращено больше, чем указано в заявке на возврат, на %Количество% %Единица%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегистрамСвободныеОстаткиИДвижениеТоваров(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщенияВНаличииМеньшеНоля = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
							|Недостаточно товара в наличии на складе %Склад% на %Количество% %Единица%'");

	ШаблонСообщенияВНаличииМеньшеРезерваИзЗаказовНаДату = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
							|Превышен доступный на %Период% остаток товара на складе %Склад% на %Количество% %Единица%'");

	ШаблонСообщенияВНаличииМеньшеРезерваИзЗаказов = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
							|Превышен доступный остаток товара на складе %Склад% на %Количество% %Единица%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		Если ЗначениеЗаполнено(Выборка.Период)
			И Выборка.ВНаличии - Выборка.ВРезервеПодЗаказ - Выборка.ВРезервеСоСклада - Выборка.ВРезервеИзЗаказов < 0 Тогда

			ШаблонСообщения = ШаблонСообщенияВНаличииМеньшеРезерваИзЗаказовНаДату;
			Количество      = - (Выборка.ВНаличии - Выборка.ВРезервеПодЗаказ - Выборка.ВРезервеСоСклада - Выборка.ВРезервеИзЗаказов);

		ИначеЕсли Выборка.ВНаличии < 0 Тогда

			ШаблонСообщения = ШаблонСообщенияВНаличииМеньшеНоля;
			Количество      = - Выборка.ВНаличии;

		ИначеЕсли Выборка.ВНаличии - Выборка.ВРезервеПодЗаказ - Выборка.ВРезервеСоСклада - Выборка.ВРезервеИзЗаказов < 0 Тогда

			ШаблонСообщения = ШаблонСообщенияВНаличииМеньшеРезерваИзЗаказов;
			Количество      = - (Выборка.ВНаличии - Выборка.ВРезервеПодЗаказ - Выборка.ВРезервеСоСклада - Выборка.ВРезервеИзЗаказов);

		Иначе
			
			ВызватьИсключение НСтр("ru='Неизвестная ошибка контроля обеспечения.'");

		КонецЕсли;

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%",      Строка(Выборка.Склад));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Период%",     Строка(Формат(Выборка.Период, "ДЛФ=D")));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструРасчетыСКлиентами(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'Нарушены условия оплаты, необходимые для обеспечения/отгрузки по заказу %Заказ%,
		|Требуется %СуммаЗаказа% %Валюта% оплачено %СуммаОплаты% %Валюта%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%Заказ%",      Строка(Выборка.ЗаказКлиента));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%",      Строка(Выборка.Валюта));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаЗаказа%", Строка(Выборка.СуммаЗаказа));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаОплаты%", Строка(Выборка.СуммаОплаты));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПриОграниченииСуммыЗадолженности(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru='По договору %Договор% превышена допустимая сумма кредита на %СуммаПревышения% %Валюта%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%Договор%",         Строка(Выборка.Договор));
		ТекстСообщения = СтрЗаменить(ТекстСообщения,  "%СуммаПревышения%", Строка(Выборка.СуммаПревышения));
		ТекстСообщения = СтрЗаменить(ТекстСообщения,  "%Валюта%",          Строка(Выборка.Валюта));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПриКонтролеСрокаЗадолженности(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru='По договору %Договор% имеется просроченная задолженность на сумму %ПросроченнаяЗадолженность% %Валюта%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%Договор%",                   Строка(Выборка.Договор));
		ТекстСообщения = СтрЗаменить(ТекстСообщения,  "%ПросроченнаяЗадолженность%", Строка(Выборка.ПросроченнаяЗадолженность));
		ТекстСообщения = СтрЗаменить(ТекстСообщения,  "%Валюта%",                    Строка(Выборка.Валюта));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструЗаказыНаПеремещение(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщенияСоСкладомСПодразделением = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%, склад %Склад%, подразделение %Подразделение% 
		|Оформлено больше, чем указано в распоряжении на оформление, на %Количество% %Единица%'");
		
	ШаблонСообщенияСоСкладомБезПодразделения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%, склад %Склад% 
		|Оформлено больше, чем указано в распоряжении на оформление, на %Количество% %Единица%'");
		
	ШаблонСообщенияБезСкладаСПодразделением = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%, подразделение %Подразделение% 
		|Оформлено больше, чем указано в распоряжении на оформление, на %Количество% %Единица%'");
		
	ШаблонСообщенияБезСкладаБезПодразделения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
		|Оформлено больше, чем указано в распоряжении на оформление, на %Количество% %Единица%'");

	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл

		Если ЗначениеЗаполнено(Выборка.Склад)
			И ЗначениеЗаполнено(Выборка.Подразделение) Тогда
			ШаблонСообщения = ШаблонСообщенияСоСкладомСПодразделением;
		ИначеЕсли ЗначениеЗаполнено(Выборка.Склад)
			И Не ЗначениеЗаполнено(Выборка.Подразделение) Тогда
			ШаблонСообщения = ШаблонСообщенияСоСкладомБезПодразделения;
		ИначеЕсли Не ЗначениеЗаполнено(Выборка.Склад)
			И ЗначениеЗаполнено(Выборка.Подразделение) Тогда
			ШаблонСообщения = ШаблонСообщенияБезСкладаСПодразделением;
		Иначе 
			ШаблонСообщения = ШаблонСообщенияБезСкладаБезПодразделения;
		КонецЕсли;

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика,, Выборка.Серия));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%", Строка(Выборка.Склад));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Подразделение%",Строка(Выборка.Подразделение));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструЗаказыНаВнутреннееПотребление(Объект, Отказ, РезультатЗапроса)

	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВнутреннееПотреблениеТоваров") Тогда
		
		ШаблонСообщенияСоСкладом = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%, склад %Склад% 
			|Оформлено больше, чем указано в распоряжении, на %Количество% %Единица%'");
			
		ШаблонСообщенияБезСклада = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
			|Оформлено больше, чем указано в распоряжении, на %Количество% %Единица%'");
			
	Иначе

		ШаблонСообщенияСоСкладом = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%, склад %Склад% 
			|Оформлено внутреннее потребление в количестве большем, чем указано в документе, на %Количество% %Единица%'");
			
		ШаблонСообщенияБезСклада = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
			|Оформлено внутреннее потребление в количестве большем, чем указано в документе, на %Количество% %Единица%'");
			
	КонецЕсли; 

	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл

		Если ЗначениеЗаполнено(Выборка.Склад) Тогда
			ШаблонСообщения = ШаблонСообщенияСоСкладом;
		Иначе 
			ШаблонСообщения = ШаблонСообщенияБезСклада;
		КонецЕсли;

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика,, Выборка.Серия));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%", Строка(Выборка.Склад));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструЗаказыНаСборку(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
		|Оформлено больше, чем указано в распоряжении на оформление, на %Количество% %Единица%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика,, Выборка.Серия));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструТоварыВЯчейках(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% %Назначение%
		|Превышен свободный остаток в ячейке %Ячейка% на %Количество% %Упаковка%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
									НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика,, Выборка.Серия));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ячейка%",     Строка(Выборка.Ячейка));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Упаковка%",   Строка(Выборка.Упаковка));
		Назначение = ?(ЗначениеЗаполнено(Выборка.Назначение), "(" + Строка(Выборка.Назначение) + ")", "");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Назначение%", Назначение);

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструТоварыВЯчейкахНесколькоНазначений(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'В ячейку %Ячейка% запрещено размещать товары нескольких назначений'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%Ячейка%", Строка(Выборка.Ячейка));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);
	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструТоварыНаСкладах(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% %Назначение%
		|Превышен оперативный складской остаток на складе ""%Склад%"" на %Количество% %Единица%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
									НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика,, Выборка.Серия));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%",
									СкладыСервер.ПолучитьПредставлениеСклада(Выборка.Склад, Выборка.Помещение));		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
		Назначение = ?(ЗначениеЗаполнено(Выборка.Назначение), "(" + Строка(Выборка.Назначение) + ")", "");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Назначение%", Назначение);

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,Объект,,,Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструТоварыКОтбору(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщенияОтбор = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% %Назначение%
		|Отобрано из ячеек больше, чем указано в распоряжении на отбор, на %Количество% %Единица%'");

	ШаблонСообщенияОтгрузка = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% %Назначение%
		|Отгружается больше, чем отобрано из ячеек по распоряжению на отбор, на %Количество% %Единица%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		Если Выборка.КоличествоОтобрано >= 0 Тогда
			ТекстСообщения = СтрЗаменить(ШаблонСообщенияОтбор, "%Количество%", Строка(-Выборка.Количество));
		Иначе
			ТекстСообщения = СтрЗаменить(ШаблонСообщенияОтгрузка, "%Количество%", Строка(-Выборка.КоличествоОтобрано));
		КонецЕсли;

		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НоменклатураХарактеристика%",
									НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика,, Выборка.Серия));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%", Строка(Выборка.ЕдиницаИзмерения));
		Назначение = ?(ЗначениеЗаполнено(Выборка.Назначение), "(" + Строка(Выборка.Назначение) + ")", "");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Назначение%", Назначение);

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,Объект,,,Отказ);

	КонецЦикла;
	
КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструТоварыОрганизацийКОформлению(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщенияБезПоступления = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
		|Превышен остаток товара к оформлению на складе %Склад% на %Количество% %Единица%'");
	ШаблонСообщенияСПоступлением = ШаблонСообщенияБезПоступления + " " + НСтр("ru = 'по документу %Поступление%'");
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.ДокументПоступления) Тогда
			ШаблонСообщения = ШаблонСообщенияСПоступлением;
		Иначе
			ШаблонСообщения = ШаблонСообщенияБезПоступления;
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%",      Строка(Выборка.Склад));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Поступление%",Строка(Выборка.ДокументПоступления));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструОбеспечениеЗаказов(Объект, Отказ, РезультатЗапроса)

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		Если Выборка.ОшибкаЗаказатьМеньшеНуля Тогда

			ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% %Склад% назначение %Назначение%:
				|	Заказано для обеспечения больше чем требуется на %Количество% %Единица%.'");

			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%",      Строка(Выборка.Склад));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Назначение%", Строка(Выборка.Назначение));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.ВеличинаЗаказатьМеньшеНуля));

			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

		КонецЕсли;

		Если Выборка.ОшибкаНаличиеБольшеПотребности Тогда

			ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% %Склад% назначение %Назначение%:
				|	Приходуется для обеспечения больше чем требуется на %Количество% %Единица%.'");

			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%",      Строка(Выборка.Склад));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Назначение%", Строка(Выборка.Назначение));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(Выборка.ВеличинаНаличиеБольшеПотребности));

			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

		КонецЕсли;

		Если Выборка.ОшибкаНаличиеВМинусе Тогда

			ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% %Склад% назначение %Назначение%:
				|	Недостаточное количество товара в наличии на %Количество% %Единица%.'");

			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%",      Строка(Выборка.Склад));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Назначение%", Строка(Выборка.Назначение));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Наличие));

			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструОбеспечениеЗаказовРаботами(Объект, Отказ, РезультатЗапроса)

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% подразделение %Подразделение% назначение %Назначение%
			|	Заказано для обеспечения больше чем требуется на %Количество% %Единица%,'");

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
					НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Подразделение%",  Строка(Выборка.Подразделение));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Назначение%",     Строка(Выборка.Назначение));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",        Строка(Выборка.ЕдиницаИзмерения));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%",     Строка(-Выборка.Количество));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструСерии(Объект, Отказ, РезультатЗапроса)

		
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		ШаблонСообщения = НСтр("ru = 'Товар %Товар% 
				|Недостаточно для отгрузки %Количество% %Единица%.'");

		ПредставлениеТовара = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика,, Выборка.Серия);
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Товар%", ПредставлениеТовара );
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%", Строка(Выборка.ЕдиницаИзмерения));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,Объект,,,Отказ);

	КонецЦикла;
	
КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструТМЦВЭксплуатации(Объект, Отказ, РезультатЗапроса)
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВнутреннееПотреблениеТоваров")
		Или ТипЗнч(Объект) = Тип("ДокументОбъект.ВводОстатков") Тогда
		
		ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%, %Партия%
			|По ТМЦ уже оформлено списание, перемещение или возврат в количестве большем, чем указано в документе, на %Количество% %Единица%'");
	Иначе
		ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%, %Партия%
			|Превышен оперативный остаток в подразделении %Подразделение%, на %Количество% %Единица%'");
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения,"%НоменклатураХарактеристика%", НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Партия%", Строка(Выборка.Партия));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Подразделение%", Строка(Выборка.Подразделение));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%", Строка(Выборка.ЕдиницаИзмерения));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

//++ НЕ УТКА

Процедура СообщитьОбОшибкахПроведенияПоРегиструРаспоряженияНаВыпускПродукции(Объект, Отказ, РезультатЗапроса)
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ТипЗнч(Объект) = Тип("ДокументОбъект.МаршрутныйЛистПроизводства") Тогда
			// Это проведение маршрутного листа
			Если Выборка.КонтрольНаДату Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'На позицию %1 уже оформлен выпуск и распоряжение должно быть оформлено не позже выпуска'"),
					НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
			Иначе
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'На позицию %1 уже оформлен выпуск (%2 %3)'"),
					НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика),
					Строка(-Выборка.Количество),
					Строка(Выборка.ЕдиницаИзмерения));
			КонецЕсли;
		Иначе
			// Это проведение выпуска
			Если Выборка.КонтрольНаДату Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Выпуск позиции %1 должен быть оформлен не раньше даты завершения выполнения маршрутного листа %2'"),
					НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика),
					Выборка.ДатаВыпуска);
			Иначе
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Количество позиций %1 превышает количество по распоряжению (%2 %3)'"),
					НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика),
					Строка(-Выборка.Количество),
					Строка(Выборка.ЕдиницаИзмерения));
			КонецЕсли;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструРаспоряженияНаПередачуИзПроизводства(Объект, Отказ, РезультатЗапроса)
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ТипЗнч(Объект) = Тип("ДокументОбъект.ЭтапПроизводства2_2") Тогда
			// Это проведение распоряжения
			Если Выборка.КонтрольНаДату Тогда
				Если Выборка.Операция = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства Тогда
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'На позицию %1 уже оформлен выпуск и распоряжение должно быть оформлено не позже выпуска'"),
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
				Иначе
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'На позицию %1 уже оформлен возврат и распоряжение должно быть оформлено не позже возврата'"),
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
				КонецЕсли; 
			Иначе
				Если Выборка.Операция = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства Тогда
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'На позицию %1 оформлен выпуск в количестве большем, чем указано в документе, на %2 %3'"),
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика),
						Строка(-Выборка.Количество),
						Строка(Выборка.ЕдиницаИзмерения));
				Иначе
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'На позицию %1 оформлен возврат в количестве большем, чем указано в документе, на %2 %3'"),
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика),
						Строка(-Выборка.Количество),
						Строка(Выборка.ЕдиницаИзмерения));
				КонецЕсли; 
			КонецЕсли;
		Иначе
			// Это проведение накладной
			Если Выборка.КонтрольНаДату Тогда
				Если Выборка.Операция = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства Тогда
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Выпуск позиции %1 должен быть оформлен не раньше даты завершения выполнения этапа производства'"),
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
				Иначе	
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Возврат позиции %1 должен быть оформлен не раньше даты завершения выполнения этапа производства'"),
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
				КонецЕсли; 
			Иначе
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Количество позиций %1 превышает количество по распоряжению на %2 %3'"),
					НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика),
					Строка(-Выборка.Количество),
					Строка(Выборка.ЕдиницаИзмерения));
			КонецЕсли;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

//-- НЕ УТКА

//++ НЕ УТ
Процедура СообщитьОбОшибкахПроведенияПоРегиструЗаказыМатериаловВПроизводство(Объект, Отказ, РезультатЗапроса)

	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПередачаМатериаловВПроизводство") 
		//++ НЕ УТКА
		ИЛИ ТипЗнч(Объект) = Тип("ДокументОбъект.ДвижениеПродукцииИМатериалов")
		//-- НЕ УТКА
		Тогда
		
		ШаблонСообщенияСоСкладомСПодразделением = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%, склад %Склад%, подразделение %Подразделение% 
			|По строке %КодСтроки% оформлено больше, чем указано в распоряжении, на %Количество% %Единица%'");
			
		ШаблонСообщенияСоСкладомБезПодразделения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%, склад %Склад% 
			|По строке %КодСтроки% оформлено больше, чем указано в распоряжении, на %Количество% %Единица%'");
			
		ШаблонСообщенияБезСкладаСПодразделением = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%, подразделение %Подразделение% 
			|По строке %КодСтроки% оформлено больше, чем указано в распоряжении, на %Количество% %Единица%'");
			
		ШаблонСообщенияБезСкладаБезПодразделения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
			|По строке %КодСтроки% оформлено больше, чем указано в распоряжении, на %Количество% %Единица%'");
			
	Иначе

		ШаблонСообщенияСоСкладомСПодразделением = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%, склад %Склад%, подразделение %Подразделение% 
			|По строке %КодСтроки% уже оформлена передача материалов в количестве большем, чем указано в документе, на %Количество% %Единица%'");
			
		ШаблонСообщенияСоСкладомБезПодразделения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%, склад %Склад% 
			|По строке %КодСтроки% уже оформлена передача материалов в количестве большем, чем указано в документе, на %Количество% %Единица%'");
			
		ШаблонСообщенияБезСкладаСПодразделением = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%, подразделение %Подразделение% 
			|По строке %КодСтроки% уже оформлена передача материалов в количестве большем, чем указано в документе, на %Количество% %Единица%'");
			
		ШаблонСообщенияБезСкладаБезПодразделения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
			|По строке %КодСтроки% уже оформлена передача материалов в количестве большем, чем указано в документе, на %Количество% %Единица%'");
			
	КонецЕсли; 

	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл

		Если ЗначениеЗаполнено(Выборка.Склад)
			И ЗначениеЗаполнено(Выборка.Подразделение) Тогда
			ШаблонСообщения = ШаблонСообщенияСоСкладомСПодразделением;
		ИначеЕсли ЗначениеЗаполнено(Выборка.Склад)
			И Не ЗначениеЗаполнено(Выборка.Подразделение) Тогда
			ШаблонСообщения = ШаблонСообщенияСоСкладомБезПодразделения;
		ИначеЕсли Не ЗначениеЗаполнено(Выборка.Склад)
			И ЗначениеЗаполнено(Выборка.Подразделение) Тогда
			ШаблонСообщения = ШаблонСообщенияБезСкладаСПодразделением;
		Иначе 
			ШаблонСообщения = ШаблонСообщенияБезСкладаБезПодразделения;
		КонецЕсли;

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КодСтроки%",  Строка(Выборка.КодСтроки));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%", Строка(Выборка.Склад));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Подразделение%",Строка(Выборка.Подразделение));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструРаспоряженияНаСписаниеПоНормативам(Объект, Отказ, РезультатЗапроса)
	
	ШаблонВыпускПродукцииБезРаспоряжений = НСтр("ru = 'На изделие %1 уже списаны материалы (%2 %3)'");
	ШаблонСписаниеМатериалов = НСтр("ru = 'На изделие %1 еще не оформлен выпуск продукции (%2 %3)'");
		
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВыпускПродукции") Тогда
		Шаблон = ШаблонВыпускПродукцииБезРаспоряжений;
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.СписаниеЗатратНаВыпуск") Тогда
		Шаблон = ШаблонСписаниеМатериалов;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Шаблон,
			НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика),
			Строка(-Выборка.Количество),
			Строка(Выборка.ЕдиницаИзмерения));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

//-- НЕ УТ

//++ НЕ УТКА

Процедура СообщитьОбОшибкахПроведенияПоРегиструТрудозатратыКОформлению(Объект, Отказ, РезультатЗапроса)
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ВыработкаСотрудников") Тогда
		ШаблонСообщения = НСтр("ru = 'Количество по виду работ ""%ВидРабот%""
			| превышает или не соответствует данным распоряжения (на %Количество% %Единица%)'");
	Иначе
		ШаблонСообщения = НСтр("ru = 'Выработка сотрудников по виду работ ""%ВидРабот%""
			| уже оформлена на %Количество% %Единица%'");
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%ВидРабот%",  Строка(Выборка.ВидРабот));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПриОформленииЗаказаНаПроизводство(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
		|По строке %КодСтроки% оформлено больше, чем указано в распоряжении на оформление, на %Количество% %Единица%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.КоличествоЗаказано));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КодСтроки%",  Строка(Выборка.КодСтроки));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструУслугиДавальцуКОформлению(Объект, Отказ, РезультатЗапроса)
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ОтчетДавальцу") Тогда
		
		ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%
			|Не оформлен выпуск продукции по назначению %Заказ% на %Количество% %Единица%'");
			
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ВыпускПродукции") Тогда
		
		ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%
			|Отчет давальцу уже оформлен по распоряжению %Заказ% на %Количество% %Единица%'");
			
	Иначе
		
		ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%
			|Оформлено больше чем передано по распоряжению %Заказ% на %Количество% %Единица%'");
			
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
		НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Заказ%",      Строка(Выборка.Заказ));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

//-- НЕ УТКА

//++ НЕ УТ

Процедура СообщитьОбОшибкахПроведенияПоРегиструЗаказыМатериаловСУчетомКорректировок(Объект, Отказ, РезультатЗапроса)

	//++ НЕ УТКА
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ЗаказНаПроизводство") Тогда
		ШаблонСообщения = НСтр("ru = 'По материалу ""%НоменклатураХарактеристика%"" введены корректировки, которые превышают количество по заказу на %Количество% %Единица%'");
	Иначе
	//-- НЕ УТКА
		
		ШаблонСообщения = НСтр("ru = 'Корректировка заказа материала ""%НоменклатураХарактеристика%"" превышает количество по заказу на %Количество% %Единица%'");
		
	//++ НЕ УТКА
	КонецЕсли; 
	//-- НЕ УТКА
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, Выборка.ХарактеристикаПредставление));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.КоличествоУпаковок));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Выборка.УпаковкаПредставление);

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

	КонецЦикла;

КонецПроцедуры

//-- НЕ УТ

//++ НЕ УТКА

Процедура СообщитьОбОшибкахПроведенияПоРегиструЭтапыПроизводства(Объект, Отказ, РезультатЗапроса)
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ЗаказНаПроизводство") Тогда
		
		ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%
			|По строке %НомерСтроки% оформлено выполнение этапов графика производства в большем количестве единиц или партии изделия, чем запланировано заказом'");
			
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
			
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
							НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, Выборка.ХарактеристикаПредставление));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Строка(Выборка.НомерСтроки));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);
			
	Иначе
		
		ШаблонСообщения = НСтр("ru = 'Превышено выполнение этапа графика производства на %Количество% %ЕдиницаИзмерения%'");
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Количество       = Выборка.ЗапланированоПроизводством - Выборка.ЗапланированоЗаказом;
			ЕдиницаИзмерения = ОбщегоНазначенияУТКлиентСервер.ФормаМножественногоЧисла(
				НСтр("ru = 'единицу или партию изделия'"), НСтр("ru = 'единицы или партии изделия'"), НСтр("ru = 'единиц или партий изделий'"), Количество);
			
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%Количество%",       Количество);
			ТекстСообщения = СтрЗаменить(ТекстСообщения,  "%ЕдиницаИзмерения%", ЕдиницаИзмерения);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

//-- НЕ УТКА

Процедура СообщитьОбОшибкахПроведенияПоРегиструПринятаяВозвратнаяТара(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщенияСДокументомСЗалогом = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%. Возвращается (выкупается) больше, чем принято по документу %ДокументПоступления% под залог на %Количество% %Единица%'");
		
	ШаблонСообщенияБезДокументаСЗалогом = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%. Возвращается (выкупается) больше, чем принято под залог на %Количество% %Единица%'");
		
	ШаблонСообщенияСДокументомБезЗалога = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%. Возвращается (выкупается) больше, чем принято по документу %ДокументПоступления% на %Количество% %Единица%'");
		
	ШаблонСообщенияБезДокументаБезЗалога = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%. Возвращается (выкупается) больше, чем принято на %Количество% %Единица%'");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		Если ЗначениеЗаполнено(Выборка.ДокументПоступления) Тогда
			Если Выборка.ПредусмотренЗалог Тогда
				ШаблонСообщения = ШаблонСообщенияСДокументомСЗалогом;
			Иначе
				ШаблонСообщения = ШаблонСообщенияСДокументомБезЗалога;
			КонецЕсли;
		Иначе
			Если Выборка.ПредусмотренЗалог Тогда
				ШаблонСообщения = ШаблонСообщенияБезДокументаСЗалогом;
			Иначе
				ШаблонСообщения = ШаблонСообщенияБезДокументаБезЗалога;
			КонецЕсли;
		КонецЕсли;	
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДокументПоступления%",  Строка(Выборка.ДокументПоступления));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструПереданнаяВозвратнаяТара(Объект, Отказ, РезультатЗапроса)
	
	ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика%. Возвращается (выкупается) больше на %Количество% %Единица%, чем передано по аналитике %АналитикаПередачи%.'");
		
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл

		АналитикаПередачи = Новый Массив;
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
		
		Если ЗначениеЗаполнено(Выборка.ДокументПередачи) Тогда 
			АналитикаПередачиСтрока = НСтр("ru = 'Документ: %ДокументПередачи%'");  
			АналитикаПередачиСтрока = СтрЗаменить(АналитикаПередачиСтрока, "%ДокументПередачи%",  Строка(Выборка.ДокументПередачи));
			АналитикаПередачи.Добавить(АналитикаПередачиСтрока);
		КонецЕсли;
			
		Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
			АналитикаПередачиСтрока = НСтр("ru = 'Вид запасов: %ВидЗапасов%'");
			АналитикаПередачиСтрока = СтрЗаменить(АналитикаПередачиСтрока, "%ВидЗапасов%",  Строка(Выборка.ВидЗапасов));
			АналитикаПередачи.Добавить(АналитикаПередачиСтрока);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НомерГТД) Тогда
			АналитикаПередачиСтрока = НСтр("ru = 'Номер ГТД: %НомерГТД%'");
			АналитикаПередачиСтрока = СтрЗаменить(АналитикаПередачиСтрока, "%НомерГТД%",  Строка(Выборка.ВидЗапасов));
			АналитикаПередачи.Добавить(АналитикаПередачиСтрока);
		КонецЕсли;
		
		Если Выборка.ПредусмотренЗалог Тогда
			АналитикаПередачи.Добавить(НСтр("ru = 'Под залог'"));
		КонецЕсли;	

		АналитикаПередачиСтрока = СтрСоединить(АналитикаПередачи, ", ");
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%АналитикаПередачи%", АналитикаПередачиСтрока);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструТоварыОрганизаций(Объект, Отказ, РезультатЗапроса)

	КонецВремен = '39991231235959';
	ШаблонОперативный = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
		|Превышен оперативный остаток товара по организации %Организация% на складе %Склад% на %Количество% %Единица%'");
	ШаблонКонтрольный = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
		|Превышен остаток товара на %ДатаОстатка% по организации %Организация% на складе %Склад% на %Количество% %Единица%'");
	
	ПредыдущаяЗапись = Новый Структура;
	ПредыдущаяЗапись.Вставить("Номенклатура", Неопределено);
	ПредыдущаяЗапись.Вставить("Характеристика", Неопределено);
	ПредыдущаяЗапись.Вставить("Организация", Неопределено);
	ПредыдущаяЗапись.Вставить("Склад", Неопределено);
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ПредыдущаяЗапись.Номенклатура <> Выборка.Номенклатура Или ПредыдущаяЗапись.Характеристика <> Выборка.Характеристика
			Или ПредыдущаяЗапись.Организация <> Выборка.Организация Или ПредыдущаяЗапись.Склад <> Выборка.Склад
		Тогда
			ЗаполнитьЗначенияСвойств(ПредыдущаяЗапись, Выборка);
		Иначе
			Продолжить;
		КонецЕсли;
		ШаблонСообщения = ?(Выборка.ДатаОстатка = КонецВремен, ШаблонОперативный, ШаблонКонтрольный);
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
			НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
			
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", Строка(Выборка.Организация));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%", Строка(Выборка.ЕдиницаИзмерения));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%", Строка(Выборка.Склад));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДатаОстатка%", Формат(Выборка.ДатаОстатка, "ДЛФ=D"));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект);
	КонецЦикла;
	
	// технически можно не контролировать пустой результат запроса и значение константы - в этих случаях код сюда не придет
	Если Не ПраваПользователяПовтИсп.ПропускКонтроляТоваровОрганизацийПриОтменеПриходов()
	 И Не РезультатЗапроса.Пустой() И Константы.КонтролироватьТоварыОрганизацийПриОтменеПриходов.Получить() Тогда	
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструПрочиеРасходы(Объект, Отказ, РезультатЗапроса)
	
	ВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Превышен остаток расхода по статье %1 на сумму %2 %3'"),
				Строка(Выборка.СтатьяРасходов),
				Строка(- Выборка.СуммаОстаток),
				Строка(ВалютаУправленческогоУчета));
		
		Отказ = Истина;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

//++ НЕ УТКА

Процедура СообщитьОбОшибкахПроведенияПоРегиструБракВПроизводстве(Объект, Отказ, РезультатЗапроса)
	
	ШаблонСообщения = НСтр("ru = 'Ошибка соответствия этапов восстановления и брака.'");
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = ШаблонСообщения;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

//-- НЕ УТКА

//++ НЕ УТ

Процедура СообщитьОбОшибкахПроведенияПоРегиструТоварыПереданныеПереработчику(Объект, Отказ, РезультатЗапроса)
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПередачаСырьяПереработчику") Тогда
		ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
			|По материалу оформлен отчет переработчика или возврат сырья и материалов на %Количество% %Единица%'");
	Иначе
		ШаблонСообщения = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
			|Превышен остаток сырья и материалов переданных переработчику на %Количество% %Единица%'");
	КонецЕсли; 
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
			Выборка.Номенклатура,
			Выборка.Характеристика);
		
		ТекстСообщения = ШаблонСообщения;
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НоменклатураХарактеристика%", ПредставлениеНоменклатуры);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%",	Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",		Строка(Выборка.ЕдиницаИзмерения));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструДенежныеДокументы(Объект, Отказ, РезультатЗапроса)
	
	ШаблонКоличество = НСтр("ru = 'Денежный документ %1
		|Превышен остаток в наличии по организации %2 в подразделении %3 у МОЛ %4 на %5 шт.'");
	ШаблонСумма = НСтр("ru = 'Денежный документ %1
		|Превышен остаток в наличии по организации %2 в подразделении %3 у МОЛ %4 на %6 %7'");
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ШаблонСообщения = ?(Выборка.Количество < 0, ШаблонКоличество, ШаблонСумма);
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонСообщения,
			Выборка.ДенежныйДокумент, // %1
			Выборка.Организация,      // %2
			Выборка.Подразделение,    // %3
			Выборка.МОЛ,              // %4
			-Выборка.Количество,      // %5
			-Выборка.Сумма,           // %6
			Выборка.Валюта);          // %7
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, , , Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

//-- НЕ УТ

Процедура СообщитьОбОшибкахПроведенияПоРегиструТоварыКОформлениюЗаявленийОВвозе(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщенияБезПоступления = НСтр("ru = 'Номенклатура %НоменклатураХарактеристика% 
		|Количество товара к оформлению не соответствует количеству в документе поступления на %Количество% %Единица%'");
	ШаблонСообщенияСПоступлением = ШаблонСообщенияБезПоступления + " " + НСтр("ru = '(см. документ %Поступление%)'");
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.ДокументПоступления) Тогда
			ШаблонСообщения = ШаблонСообщенияСПоступлением;
		Иначе
			ШаблонСообщения = ШаблонСообщенияБезПоступления;
		КонецЕсли;
		
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", Строка(-Выборка.КОформлению));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",    Строка(Выборка.ЕдиницаИзмерения));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Поступление%",Строка(Выборка.ДокументПоступления));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, ,, Отказ);

	КонецЦикла;

КонецПроцедуры

#КонецОбласти


#КонецОбласти
