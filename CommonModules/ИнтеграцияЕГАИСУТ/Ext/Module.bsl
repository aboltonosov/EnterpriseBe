
#Область ПрограммныйИнтерфейс

Функция ИменаРеквизитовЕстьАлкогольнаяПродукция() Экспорт
	
	ИменаРеквизитовЕстьАлкогольнаяПродукция = Новый Массив;
	ИменаРеквизитовЕстьАлкогольнаяПродукция.Добавить("ЕстьАлкогольнаяПродукцияДляСписанияЕГАИС");
	ИменаРеквизитовЕстьАлкогольнаяПродукция.Добавить("ЕстьАлкогольнаяПродукцияДляПостановкиНаБалансЕГАИС");
	ИменаРеквизитовЕстьАлкогольнаяПродукция.Добавить("ЕстьАлкогольнаяПродукцияДляРеализацииЕГАИС");
	ИменаРеквизитовЕстьАлкогольнаяПродукция.Добавить("ЕстьАлкогольнаяПродукцияДляРеализацииРозницаЕГАИС");
	ИменаРеквизитовЕстьАлкогольнаяПродукция.Добавить("ЕстьАлкогольнаяПродукцияДляВозвратаИзРегистра2ЕГАИС");
	
	Возврат ИменаРеквизитовЕстьАлкогольнаяПродукция;
	
КонецФункции

Функция РеквизитыЕстьАлкогольнаяПродукция(Объект) Экспорт

	ИменаРеквизитовЕстьАлкогольнаяПродукция = ИменаРеквизитовЕстьАлкогольнаяПродукция();
	
	РеквизитыЕстьАлкогольнаяПродукция = Новый Структура;
	Для Каждого ИмяРеквизита Из ИменаРеквизитовЕстьАлкогольнаяПродукция Цикл
		
		Если ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Объект, ИмяРеквизита) Тогда
			РеквизитыЕстьАлкогольнаяПродукция.Вставить(ИмяРеквизита, Объект[ИмяРеквизита]);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат РеквизитыЕстьАлкогольнаяПродукция;
	
КонецФункции

Процедура ОчиститьПризнакиЕстьАлкогольнаяПродукция(ДокументОбъект) Экспорт
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВнутреннееПотреблениеТоваров") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляСписанияЕГАИС = Ложь;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.СписаниеНедостачТоваров") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляСписанияЕГАИС = Ложь;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетОРозничныхПродажах") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляСписанияЕГАИС = Ложь;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОприходованиеИзлишковТоваров") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляПостановкиНаБалансЕГАИС = Ложь;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПересортицаТоваров") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляПостановкиНаБалансЕГАИС = Ложь;
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляСписанияЕГАИС           = Ложь;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровМеждуОрганизациями") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляРеализацииЕГАИС = Ложь;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляРеализацииЕГАИС = Ложь;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаТоваровМеждуОрганизациями") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляРеализацииЕГАИС = Ложь;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляРеализацииЕГАИС = Ложь;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляРеализацииРозницаЕГАИС = Ложь;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровОтКлиента") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляРеализацииРозницаЕГАИС = Ложь;
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Не реализована процедура ""ИнтеграцияЕГАИСУТ.ОчиститьПризнакиЕстьАлкогольнаяПродукция""'");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПризнакиЕстьАлкогольнаяПродукция(ДокументОбъект) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийАлкоВРознице") Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВнутреннееПотреблениеТоваров") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляСписанияЕГАИС = ЕстьАлкогольнаяПродукция(ДокументОбъект, "Товары");
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетОРозничныхПродажах") Тогда
		
		ЕстьНеМаркируемаяАлкогольнаяПродукция = ЕстьНеМаркируемаяАлкогольнаяПродукция(ДокументОбъект, "Товары");
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляСписанияЕГАИС = ЕстьНеМаркируемаяАлкогольнаяПродукция;
		
		Если Константы.ДатаНачалаРегистрацииРозничныхПродажВЕГАИСВСельскойМестности.Получить() >= ТекущаяДатаСеанса()
			И Не ЕстьНеМаркируемаяАлкогольнаяПродукция Тогда
			ДокументОбъект.ЕстьАлкогольнаяПродукцияДляСписанияЕГАИС = ЕстьМаркируемаяАлкогольнаяПродукция(ДокументОбъект, "Товары");
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.СписаниеНедостачТоваров") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляСписанияЕГАИС = ЕстьАлкогольнаяПродукция(ДокументОбъект, "Товары");
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОприходованиеИзлишковТоваров") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляПостановкиНаБалансЕГАИС = ЕстьАлкогольнаяПродукция(ДокументОбъект, "Товары");
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПересортицаТоваров") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляПостановкиНаБалансЕГАИС = ЕстьАлкогольнаяПродукция(ДокументОбъект, "Товары", "НоменклатураОприходование");
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляСписанияЕГАИС           = ЕстьАлкогольнаяПродукция(ДокументОбъект, "Товары", "Номенклатура");
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровМеждуОрганизациями") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляРеализацииЕГАИС = ЕстьАлкогольнаяПродукция(ДокументОбъект, "Товары");
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровПоставщику") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляРеализацииЕГАИС = ЕстьАлкогольнаяПродукция(ДокументОбъект, "Товары");
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаТоваровМеждуОрганизациями") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляРеализацииЕГАИС = ЕстьАлкогольнаяПродукция(ДокументОбъект, "Товары");
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляРеализацииЕГАИС = ЕстьАлкогольнаяПродукция(ДокументОбъект, "Товары");
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляРеализацииРозницаЕГАИС = ЕстьМаркируемаяАлкогольнаяПродукция(ДокументОбъект, "Товары");
		
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВозвратТоваровОтКлиента") Тогда
		
		ДокументОбъект.ЕстьАлкогольнаяПродукцияДляРеализацииРозницаЕГАИС = ЕстьМаркируемаяАлкогольнаяПродукция(ДокументОбъект, "Товары");
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Не реализована процедура ""ИнтеграцияЕГАИСУТ.ЗаполнитьПризнакиЕстьАлкогольнаяПродукция""'");
		
	КонецЕсли;
	
КонецПроцедуры

Функция ДанныеОформленияДокументовПоПриоритетам(ДокументСсылка, РеквизитыЕстьАлкогольнаяПродукция) Экспорт
	
	ДокументыПоОснованию = ИнтеграцияЕГАИСВызовСервера.ДокументыПоОснованию(ДокументСсылка);
	
	ОформлениеДокументовПоПриоритетам = Новый Соответствие;
	Для Каждого КлючИЗначение Из РеквизитыЕстьАлкогольнаяПродукция Цикл
		
		Если Не КлючИЗначение.Значение Тогда
			Продолжить;
		КонецЕсли;
		
		Если КлючИЗначение.Ключ = "ЕстьАлкогольнаяПродукцияДляСписанияЕГАИС" Тогда
			Если Метаданные.ОпределяемыеТипы.ОснованиеАктаСписанияЕГАИС.Тип.СодержитТип(ТипЗнч(ДокументСсылка)) Тогда
				Данные = ИнтеграцияЕГАИС.ДанныеДокументаЕГАИС(Метаданные.Документы.АктСписанияЕГАИС, ДокументыПоОснованию);
				ДобавитьВРезультат(ОформлениеДокументовПоПриоритетам, 1, Данные);
			КонецЕсли;
		КонецЕсли;
		
		Если КлючИЗначение.Ключ = "ЕстьАлкогольнаяПродукцияДляПостановкиНаБалансЕГАИС" Тогда
			Если Метаданные.ОпределяемыеТипы.ОснованиеАктаПостановкиНаБалансЕГАИС.Тип.СодержитТип(ТипЗнч(ДокументСсылка)) Тогда
				Данные = ИнтеграцияЕГАИС.ДанныеДокументаЕГАИС(Метаданные.Документы.АктПостановкиНаБалансЕГАИС, ДокументыПоОснованию);
				ДобавитьВРезультат(ОформлениеДокументовПоПриоритетам, 2, Данные);
			КонецЕсли;
		КонецЕсли;
		
		Если КлючИЗначение.Ключ = "ЕстьАлкогольнаяПродукцияДляРеализацииЕГАИС" Тогда
			Если Метаданные.ОпределяемыеТипы.ОснованиеТТНИсходящаяЕГАИС.Тип.СодержитТип(ТипЗнч(ДокументСсылка)) Тогда
				
				Данные = ИнтеграцияЕГАИС.ДанныеДокументаЕГАИС(Метаданные.Документы.ТТНИсходящаяЕГАИС, ДокументыПоОснованию);
				ДобавитьВРезультат(ОформлениеДокументовПоПриоритетам, 3, Данные);
				
			КонецЕсли;
			Если Метаданные.ОпределяемыеТипы.ОснованиеТТНВходящаяЕГАИС.Тип.СодержитТип(ТипЗнч(ДокументСсылка)) Тогда
				
				Данные = ИнтеграцияЕГАИС.ДанныеДокументаЕГАИС(Метаданные.Документы.ТТНВходящаяЕГАИС, ДокументыПоОснованию);
				ДобавитьВРезультат(ОформлениеДокументовПоПриоритетам, 4, Данные);
				
			КонецЕсли;
		КонецЕсли;
		
		Если КлючИЗначение.Ключ = "ЕстьАлкогольнаяПродукцияДляРеализацииРозницаЕГАИС" Тогда
			Если Метаданные.ОпределяемыеТипы.ОснованиеЧекаЕГАИС.Тип.СодержитТип(ТипЗнч(ДокументСсылка)) Тогда
				
				Данные = ИнтеграцияЕГАИС.ДанныеДокументаЕГАИС(Метаданные.Документы.ЧекЕГАИС, ДокументыПоОснованию);
				ДобавитьВРезультат(ОформлениеДокументовПоПриоритетам, 5, Данные);
				
			КонецЕсли;
			Если Метаданные.ОпределяемыеТипы.ОснованиеЧекаЕГАИСВозврат.Тип.СодержитТип(ТипЗнч(ДокументСсылка)) Тогда
				
				Данные = ИнтеграцияЕГАИС.ДанныеДокументаЕГАИС(Метаданные.Документы.ЧекЕГАИСВозврат, ДокументыПоОснованию);
				ДобавитьВРезультат(ОформлениеДокументовПоПриоритетам, 6, Данные);
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ОформлениеДокументовПоПриоритетам;
	
КонецФункции

Процедура СформироватьТекстДокументаЕГАИС(Форма, ОчищатьВместоИзмененияВидимости = Ложь) Экспорт
	
	ЕстьАлкогольнаяПродукция = Ложь;
	
	РеквизитыЕстьАлкогольнаяПродукция = РеквизитыЕстьАлкогольнаяПродукция(Форма.Объект);
	Для Каждого КлючИЗначение Из РеквизитыЕстьАлкогольнаяПродукция Цикл
		Если КлючИЗначение.Значение = Истина Тогда
			ЕстьАлкогольнаяПродукция = Истина;
			Прервать;
		КонецЕсли
	КонецЦикла;
	
	Если Не ОчищатьВместоИзмененияВидимости Тогда
		Форма.Элементы.ТекстДокументаЕГАИС.Видимость = ЕстьАлкогольнаяПродукция;
	Иначе
		Форма.ТекстДокументаЕГАИС = "";
	КонецЕсли;
	
	Если Не ЕстьАлкогольнаяПродукция Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента")
		И ЗначениеЗаполнено(Форма.Объект.ПодписьЧекаЕГАИС) Тогда
		Форма.ТекстДокументаЕГАИС = Новый ФорматированнаяСтрока(НСтр("ru = 'Данные переданы в ЕГАИС'"));
		Возврат;
	КонецЕсли;
	
	ОформлениеДокументовПоПриоритетам = ДанныеОформленияДокументовПоПриоритетам(
		Форма.Объект.Ссылка,
		РеквизитыЕстьАлкогольнаяПродукция);
	
	ФорматированныеСтроки = Новый Массив;
	Для Каждого КлючИЗначение Из ОформлениеДокументовПоПриоритетам Цикл
		Данные = КлючИЗначение.Значение;
		Для Каждого ДанныеДокументаЕГАИС Из Данные Цикл
			Если ФорматированныеСтроки.Количество() <> 0 Тогда
				ФорматированныеСтроки.Добавить("," + " ");
			КонецЕсли;
			ФорматированныеСтроки.Добавить(ДанныеДокументаЕГАИС.Представление);
		КонецЦикла;
	КонецЦикла;
	
	Форма.ТекстДокументаЕГАИС = Новый ФорматированнаяСтрока(ФорматированныеСтроки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

#Область ЗаполнениеАктаСписанияЕГАИС

Процедура ОбработкаЗаполненияАктаСписанияЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт

	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров") Тогда
		
		ЗаполнитьАктСписанияЕГАИСНаОснованииВнутреннегоПотребленияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СписаниеНедостачТоваров") Тогда
	
		ЗаполнитьАктСписанияЕГАИСНаОснованииСписанияНедостачТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
	
		ЗаполнитьАктСписанияЕГАИСНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
	
		ЗаполнитьАктСписанияЕГАИСНаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьАктСписанияЕГАИСНаОснованииВнутреннегоПотребленияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка          КАК ДокументОснование,
	|	НЕ Таблица.Проведен     КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад           КАК Склад,
	|	Таблица.Склад.ТипСклада КАК ТипСклада,
	|	Таблица.Организация     КАК Организация,
	|	Таблица.Ответственный   КАК Ответственный
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Упаковка,
	|	ТабличнаяЧасть.Количество,
	|	ТабличнаяЧасть.КоличествоУпаковок,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.ИдентификаторУпаковки, """")                                                      КАК ИдентификаторУпаковки
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Упаковки КАК КлассификаторАлкогольнойПродукцииЕГАИСУпаковки
	|		ПО ТабличнаяЧасть.Номенклатура = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Номенклатура
	|			И (КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Сопоставлено)
	|			И ТабличнаяЧасть.Характеристика = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Характеристика
	|			И (ТабличнаяЧасть.Упаковка = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка ИЛИ ТабличнаяЧасть.Номенклатура.ЕдиницаИзмерения = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
			Если РеквизитыДокумента.ТипСклада = Перечисления.ТипыСкладов.РозничныйМагазин Тогда
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2;
			Иначе
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
			КонецЕсли;
			
			ДокументОбъект.ПричинаСписания = Неопределено;
			
	Иначе
		
		ДокументОбъект.Товары.Очистить();
		
	КонецЕсли;
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[1], ДанныеЗаполнения)
	
КонецПроцедуры

Процедура ЗаполнитьАктСписанияЕГАИСНаОснованииСписанияНедостачТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка          КАК ДокументОснование,
	|	НЕ Таблица.Проведен     КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад           КАК Склад,
	|	Таблица.Склад.ТипСклада КАК ТипСклада,
	|	Таблица.Организация     КАК Организация,
	|	Таблица.Ответственный   КАК Ответственный
	|ИЗ
	|	Документ.СписаниеНедостачТоваров КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество     КАК Количество,
	|	ТабличнаяЧасть.Количество     КАК КоличествоУпаковок,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))               КАК Упаковка,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка,   ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.ИдентификаторУпаковки, """")                                                        КАК ИдентификаторУпаковки
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Упаковки КАК КлассификаторАлкогольнойПродукцииЕГАИСУпаковки
	|		ПО ТабличнаяЧасть.Номенклатура = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Номенклатура
	|			И (КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Сопоставлено)
	|			И ТабличнаяЧасть.Характеристика = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Характеристика
	|			И (ТабличнаяЧасть.Номенклатура.ЕдиницаИзмерения = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
			Если РеквизитыДокумента.ТипСклада = Перечисления.ТипыСкладов.РозничныйМагазин Тогда
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2;
			Иначе
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
			КонецЕсли;
			
			ДокументОбъект.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Недостача;
			
	Иначе
		
		ДокументОбъект.Товары.Очистить();
		
	КонецЕсли;
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[1], ДанныеЗаполнения)
	
КонецПроцедуры

Процедура ЗаполнитьАктСписанияЕГАИСНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка          КАК ДокументОснование,
	|	НЕ Таблица.Проведен     КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад           КАК Склад,
	|	Таблица.Склад.ТипСклада КАК ТипСклада,
	|	Таблица.Организация     КАК Организация,
	|	Таблица.Ответственный   КАК Ответственный
	|ИЗ
	|	Документ.ПересортицаТоваров КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Количество     КАК Количество,
	|	ТабличнаяЧасть.Количество     КАК КоличествоУпаковок,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))             КАК Упаковка,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.ИдентификаторУпаковки, """")                                                      КАК ИдентификаторУпаковки
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Упаковки КАК КлассификаторАлкогольнойПродукцииЕГАИСУпаковки
	|		ПО ТабличнаяЧасть.Номенклатура = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Номенклатура
	|			И (КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Сопоставлено)
	|			И ТабличнаяЧасть.Характеристика = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Характеристика
	|			И (ТабличнаяЧасть.Номенклатура.ЕдиницаИзмерения = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
			Если РеквизитыДокумента.ТипСклада = Перечисления.ТипыСкладов.РозничныйМагазин Тогда
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2;
			Иначе
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
			КонецЕсли;
			
			ДокументОбъект.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Пересортица;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[1], ДанныеЗаполнения)
	
КонецПроцедуры

Процедура ЗаполнитьАктСписанияЕГАИСНаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК ДокументОснование,
	|	НЕ Таблица.Проведен КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад КАК Склад,
	|	Таблица.Склад.ТипСклада КАК ТипСклада,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Упаковка,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ ТаблицаСопоставления
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Упаковки КАК КлассификаторАлкогольнойПродукцииЕГАИСУпаковки
	|		ПО ТабличнаяЧасть.Номенклатура = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Номенклатура
	|			И (КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Сопоставлено)
	|			И ТабличнаяЧасть.Характеристика = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Характеристика
	|			И (ТабличнаяЧасть.Упаковка = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка
	|				ИЛИ ТабличнаяЧасть.Номенклатура.ЕдиницаИзмерения = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый
	|;
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Упаковка,
	|	ТабличнаяЧасть.КоличествоУпаковок,
	|	ТабличнаяЧасть.Количество,
	|	ТаблицаСопоставления.АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСопоставления КАК ТаблицаСопоставления
	|		ПО ТабличнаяЧасть.Номенклатура = ТаблицаСопоставления.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ТаблицаСопоставления.Характеристика
	|			И ТабличнаяЧасть.Упаковка = ТаблицаСопоставления.Упаковка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый
	|");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
			Если РеквизитыДокумента.ТипСклада = Перечисления.ТипыСкладов.РозничныйМагазин Тогда
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра2;
			Иначе
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
			КонецЕсли;
			
			ДокументОбъект.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Реализация;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[2], ДанныеЗаполнения)
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеАктаПостановкиНаБалансЕГАИС

Процедура ОбработкаЗаполненияАктаПостановкиНаБалансЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеИзлишковТоваров") Тогда
		
		ЗаполнитьАктПостановкиНаБалансНаОснованииОприходованияИзлишковТовара(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
	
		ЗаполнитьАктПостановкиНаБалансНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьАктПостановкиНаБалансНаОснованииОприходованияИзлишковТовара(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка          КАК ДокументОснование,
	|	НЕ Таблица.Проведен     КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад           КАК Склад,
	|	Таблица.Склад.ТипСклада КАК ТипСклада,
	|	Таблица.Организация     КАК Организация,
	|	Таблица.Ответственный   КАК Ответственный
	|ИЗ
	|	Документ.ОприходованиеИзлишковТоваров КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОприходованиеИзлишковТоваровТовары.Номенклатура   КАК Номенклатура,
	|	ОприходованиеИзлишковТоваровТовары.Характеристика КАК Характеристика,
	|	ОприходованиеИзлишковТоваровТовары.Количество     КАК Количество,
	|	ОприходованиеИзлишковТоваровТовары.Количество     КАК КоличествоУпаковок,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))             КАК Упаковка,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция
	|ИЗ
	|	Документ.ОприходованиеИзлишковТоваров.Товары КАК ОприходованиеИзлишковТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ОприходованиеИзлишковТоваровТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Упаковки КАК КлассификаторАлкогольнойПродукцииЕГАИСУпаковки
	|		ПО ОприходованиеИзлишковТоваровТовары.Номенклатура = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Номенклатура
	|			И (КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Сопоставлено)
	|			И ОприходованиеИзлишковТоваровТовары.Характеристика = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Характеристика
	|			И ОприходованиеИзлишковТоваровТовары.Номенклатура.ЕдиницаИзмерения = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка
	|ГДЕ
	|	ОприходованиеИзлишковТоваровТовары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыШапки = РезультатЗапроса[0].Выбрать();
	РеквизитыШапки.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыШапки.ДокументОснование,
			,
			РеквизитыШапки.ЕстьОшибкиПроведен,
			,
			);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыШапки);
			
			ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыШапки.Организация, РеквизитыШапки.Склад);
			Если РеквизитыШапки.ТипСклада = Перечисления.ТипыСкладов.РозничныйМагазин Тогда
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр2;
			Иначе
				ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр1;
			КонецЕсли;
			
			ДокументОбъект.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Излишки;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[1], ДанныеЗаполнения)
	
КонецПроцедуры

Процедура ЗаполнитьАктПостановкиНаБалансНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка          КАК ДокументОснование,
	|	НЕ Таблица.Проведен     КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад           КАК Склад,
	|	Таблица.Склад.ТипСклада КАК ТипСклада,
	|	Таблица.Организация     КАК Организация,
	|	Таблица.Ответственный   КАК Ответственный
	|ИЗ
	|	Документ.ПересортицаТоваров КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПересортицаТоваровТовары.НоменклатураОприходование   КАК Номенклатура,
	|	ПересортицаТоваровТовары.ХарактеристикаОприходование КАК Характеристика,
	|	ПересортицаТоваровТовары.Количество                  КАК Количество,
	|	ПересортицаТоваровТовары.Количество                  КАК КоличествоУпаковок,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))             КАК Упаковка,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ПересортицаТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ПересортицаТоваровТовары.НоменклатураОприходование = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Упаковки КАК КлассификаторАлкогольнойПродукцииЕГАИСУпаковки
	|		ПО ПересортицаТоваровТовары.НоменклатураОприходование = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Номенклатура
	|			И (КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Сопоставлено)
	|			И ПересортицаТоваровТовары.ХарактеристикаОприходование = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Характеристика
	|			И ПересортицаТоваровТовары.НоменклатураОприходование.ЕдиницаИзмерения = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка
	|ГДЕ
	|	ПересортицаТоваровТовары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 2
	|	АктСписанияЕГАИС.Ссылка КАК АктСписанияЕГАИС
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК АктСписанияЕГАИС
	|ГДЕ
	|	АктСписанияЕГАИС.ДокументОснование = &ДокументОснование
	|	И АктСписанияЕГАИС.ПричинаСписания = ЗНАЧЕНИЕ(Перечисление.ПричиныСписанийЕГАИС.Пересортица)
	|");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыШапки = РезультатЗапроса[0].Выбрать();
	РеквизитыШапки.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыШапки.ДокументОснование,
			,
			РеквизитыШапки.ЕстьОшибкиПроведен,
			,
			);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыШапки);
		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыШапки.Организация, РеквизитыШапки.Склад);
		Если РеквизитыШапки.ТипСклада = Перечисления.ТипыСкладов.РозничныйМагазин Тогда
			ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр2;
		Иначе
			ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр1;
			
			ДокументОбъект.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Пересортица;
			
			ВыборкаАктыСписания = РезультатЗапроса[2].Выбрать();
			Если ВыборкаАктыСписания.Количество() = 1 Тогда
				ВыборкаАктыСписания.Следующий();
				ДокументОбъект.АктСписанияЕГАИС = ВыборкаАктыСписания.АктСписанияЕГАИС;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[1], ДанныеЗаполнения)
	
КонецПроцедуры

Функция ДанныеДляЗаполненияАктаПостановкиНаБалансЕГАИСПоОстаткам(ДокументОбъект, Форма) Экспорт
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ЕстьНесопоставленнаяАлкогольнаяПродукция", Ложь);
	СтруктураВозврата.Вставить("АдресТаблицыНесопоставленныхТоваров", Неопределено);
	
	Организация = ОрганизацияПоОрганизацииЕГАИС(ДокументОбъект.ОрганизацияЕГАИС);
	Если Организация = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Организации ЕГАИС не сопоставлена наша организация, заполнение по остаткам невозможно.'"));
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	СУММА(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК Остаток,
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(
	|			&Период,
	|			АналитикаУчетаНоменклатуры.Номенклатура.АлкогольнаяПродукция
	|				И Организация = &Организация) КАК ТоварыОрганизацийОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Характеристика,
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаОстатков.Номенклатура КАК Номенклатура,
	|	ТаблицаОстатков.Характеристика КАК Характеристика,
	|	ТаблицаОстатков.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТаблицаОстатков.Остаток КАК Количество
	|ПОМЕСТИТЬ ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Упаковки КАК КлассификаторАлкогольнойПродукцииЕГАИСУпаковки
	|		ПО ТаблицаОстатков.Номенклатура = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Номенклатура
	|			И ТаблицаОстатков.Характеристика = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Характеристика
	|			И ТаблицаОстатков.ЕдиницаИзмерения = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка
	|			И (КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Сопоставлено)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|ВЫБРАТЬ
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.СвободныйОстатокОстаток КАК Количество,
	|	ОстаткиАлкогольнойПродукцииЕГАИСОстатки.АлкогольнаяПродукция
	|ПОМЕСТИТЬ ОстаткиАлкогольнаяПродукция
	|ИЗ
	|	РегистрНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.Остатки(
	|			&Период,
	|			ОрганизацияЕГАИС = &ОрганизацияЕГАИС
	|				И АлкогольнаяПродукция В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция.АлкогольнаяПродукция
	|					ИЗ
	|						ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция КАК ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция)) КАК ОстаткиАлкогольнойПродукцииЕГАИСОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|ВЫБРАТЬ
	|	ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция.Номенклатура                                                     КАК Номенклатура,
	|	ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция.Характеристика                                                   КАК Характеристика,
	|	ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция.Упаковка                                                         КАК Упаковка,
	|	ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция.ЕдиницаИзмерения                                                 КАК ЕдиницаИзмерения,
	|	ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция.АлкогольнаяПродукция                                             КАК АлкогольнаяПродукция,
	|	ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция.Количество - ЕСТЬNULL(ОстаткиАлкогольнаяПродукция.Количество, 0) КАК Количество,
	|	ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция.Количество - ЕСТЬNULL(ОстаткиАлкогольнаяПродукция.Количество, 0) КАК КоличествоУпаковок
	|ИЗ
	|	ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция КАК ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиАлкогольнаяПродукция КАК ОстаткиАлкогольнаяПродукция
	|		ПО ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция.АлкогольнаяПродукция = ОстаткиАлкогольнаяПродукция.АлкогольнаяПродукция
	|ГДЕ
	|	ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция.Количество - ЕСТЬNULL(ОстаткиАлкогольнаяПродукция.Количество, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////4
	|ВЫБРАТЬ
	|	ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция.Номенклатура,
	|	ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция.Характеристика,
	|	ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция.ЕдиницаИзмерения
	|ИЗ
	|	ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция КАК ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция
	|ГДЕ
	|	ТаблицаОстатковСопоставленнаяАлкогольнаяПродукция.АлкогольнаяПродукция = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ДокументОбъект.ОрганизацияЕГАИС);
	Запрос.УстановитьПараметр("Организация"     , Организация);
	Запрос.УстановитьПараметр("Период"          , ?(ЗначениеЗаполнено(ДокументОбъект.Дата), ДокументОбъект.Дата, ТекущаяДатаСеанса()));
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаСопоставленныеОстатки = Результат[3].Выбрать();
	
	Пока ВыборкаСопоставленныеОстатки.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект.Товары.Добавить(), ВыборкаСопоставленныеОстатки);
		
	КонецЦикла;
	
	Если Не Результат[4].Пустой() Тогда
		
		СтруктураВозврата.ЕстьНесопоставленнаяАлкогольнаяПродукция = Истина;
		СтруктураВозврата.АдресТаблицыНесопоставленныхТоваров      = ПоместитьВоВременноеХранилище(Результат[4].Выгрузить(), Форма.УникальныйИдентификатор);
		
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеТТНИсходящейЕГАИС

Процедура ОбработкаЗаполненияТТНИсходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		ЗаполнитьТТНИсходящуюЕГАИСНаОснованииВозвратаТоваровПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		ЗаполнитьТТНИсходящуюЕГАИСНаОснованииПеремещенияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") Тогда
		
		ЗаполнитьТТНИсходящуюЕГАИСНаОснованииВозвратаТоваровМеждуОрганизациями(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		
		ЗаполнитьТТНИсходящуюЕГАИСНаОснованииПередачиТоваровМеждуОрганизациями(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТТНИсходящуюЕГАИСНаОснованииВозвратаТоваровПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                КАК ДокументОснование,
	|	ДокументОснование.Номер                 КАК НомерТТН,
	|	ДокументОснование.Дата                  КАК ДатаТТН,
	|	ДокументОснование.Дата                  КАК ДатаОтгрузки,
	|	НЕ ДокументОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Организация           КАК Поставщик,
	|	ДокументОснование.Менеджер              КАК Ответственный,
	|	ДокументОснование.Контрагент            КАК Грузополучатель,
	|	ДокументОснование.Организация           КАК Грузоотправитель,
	|	ДокументОснование.Склад                 КАК Склад,
	|	ДокументОснование.Партнер               КАК Партнер,
	|	ДокументОснование.СпособДоставки        КАК ТипДоставки,
	|	ДокументОснование.Валюта                КАК Валюта
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.Идентификатор = Строка(Новый УникальныйИдентификатор());
			ДокументОбъект.ВидОперации   = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.ВозвратПоставщику;
			
			ДокументОбъект.Поставщик        = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Поставщик, РеквизитыДокумента.Склад);
			ДокументОбъект.Грузоотправитель = ДокументОбъект.Поставщик;
			ДокументОбъект.Грузополучатель  = ОрганизацияЕГАИСПоПартнеруИКонтрагенту(РеквизитыДокумента.Партнер,
			                                                                         РеквизитыДокумента.Грузополучатель);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаОснования,
	|			Валюта = &ВалютаРеглУчета
	|				ИЛИ Валюта = &ВалютаОснования) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Упаковка,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.ИдентификаторУпаковки, """")                                                      КАК ИдентификаторУпаковки,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ ТаблицаСопоставления
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Упаковки КАК КлассификаторАлкогольнойПродукцииЕГАИСУпаковки
	|		ПО ТабличнаяЧасть.Номенклатура = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Номенклатура
	|			И (КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Сопоставлено)
	|			И ТабличнаяЧасть.Характеристика = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Характеристика
	|			И (ТабличнаяЧасть.Упаковка = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка
	|				ИЛИ ТабличнаяЧасть.Номенклатура.ЕдиницаИзмерения = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                                                                                                               КАК Номенклатура,
	|	ТабличнаяЧасть.КоличествоУпаковок                                                                                                         КАК Количество,
	|	ТаблицаСопоставления.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	ТаблицаСопоставления.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТабличнаяЧасть.КоличествоУпаковок = 0
	|				ТОГДА 0
	|			ИНАЧЕ (ТабличнаяЧасть.СуммаСНДС / ТабличнаяЧасть.КоличествоУпаковок) * ВЫБОР
	|					КОГДА &ВалютаОснования <> &ВалютаРеглУчета
	|						ТОГДА ВЫБОР
	|								КОГДА ЕСТЬNULL(КурсВалютыОснования.Кратность, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыОснования.Курс, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыРегл.Кратность, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыРегл.Курс, 0) > 0
	|									ТОГДА КурсВалютыОснования.Курс * КурсВалютыРегл.Кратность / (КурсВалютыРегл.Курс * КурсВалютыОснования.Кратность)
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТабличнаяЧасть.КоличествоУпаковок = 0
	|				ТОГДА 0
	|			ИНАЧЕ ТабличнаяЧасть.СуммаСНДС * ВЫБОР
	|					КОГДА &ВалютаОснования <> &ВалютаРеглУчета
	|						ТОГДА ВЫБОР
	|								КОГДА ЕСТЬNULL(КурсВалютыОснования.Кратность, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыОснования.Курс, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыРегл.Кратность, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыРегл.Курс, 0) > 0
	|									ТОГДА КурсВалютыОснования.Курс * КурсВалютыРегл.Кратность / (КурсВалютыРегл.Курс * КурсВалютыОснования.Кратность)
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Сумма
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСопоставления КАК ТаблицаСопоставления
	|		ПО ТабличнаяЧасть.Номенклатура = ТаблицаСопоставления.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ТаблицаСопоставления.Характеристика
	|			И ТабличнаяЧасть.Упаковка = ТаблицаСопоставления.Упаковка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция");
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета",   Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ДатаОснования",     РеквизитыДокумента.ДатаТТН);
	Запрос.УстановитьПараметр("ВалютаОснования",   РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Запрос.Выполнить(), ДанныеЗаполнения)
	
КонецПроцедуры

Процедура ЗаполнитьТТНИсходящуюЕГАИСНаОснованииПеремещенияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка                КАК ДокументОснование,
	|	ПеремещениеТоваров.Номер                 КАК НомерТТН,
	|	ПеремещениеТоваров.Дата                  КАК ДатаТТН,
	|	ПеремещениеТоваров.Дата                  КАК ДатаОтгрузки,
	|	НЕ ПеремещениеТоваров.Проведен           КАК ЕстьОшибкиПроведен,
	|	
	|	ПеремещениеТоваров.Организация           КАК Организация,
	|	ПеремещениеТоваров.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	
	|	ПеремещениеТоваров.СкладОтправитель      КАК СкладОтправитель,
	|	ПеремещениеТоваров.СкладПолучатель       КАК СкладПолучатель,
	|	
	|	ПеремещениеТоваров.Ответственный         КАК Ответственный,
	|	ПеремещениеТоваров.СпособДоставки        КАК ТипДоставки,
	|	ПеремещениеТоваров.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ПеремещениеТоваров.ВидЦены               КАК ВидЦены,
	|	ПеремещениеТоваров.ВидЦены.ВалютаЦены    КАК ВалютаЦены
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.Идентификатор = Строка(Новый УникальныйИдентификатор());
		ДокументОбъект.ВидОперации   = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
		
		Поставщик = ОрганизацияЕГАИСПоОрганизацииИСкладу(
			РеквизитыДокумента.Организация,
			РеквизитыДокумента.СкладОтправитель);
		
		Если РеквизитыДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаТоваров Тогда
			
			Если РеквизитыДокумента.Организация = РеквизитыДокумента.ОрганизацияПолучатель Тогда
				
				ТекстОшибки = НСтр("ru=' В %1 одинаковые организация и организация-получатель - %2. Ввод на основании невозможен.'");
				ТекстОшибки = СтрШаблон(ТекстОшибки, ДанныеЗаполнения, РеквизитыДокумента.Грузоотправитель);
				
				ВызватьИсключение ТекстОшибки;
				
			КонецЕсли;
			
			ДокументОбъект.Поставщик        = Поставщик;
			ДокументОбъект.Грузоотправитель = Поставщик;
			ДокументОбъект.Грузополучатель  = ОрганизацияЕГАИСПоОрганизацииИСкладу(
				РеквизитыДокумента.ОрганизацияПолучатель,
				РеквизитыДокумента.СкладПолучатель);
			
		ИначеЕсли РеквизитыДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров Тогда
			
			ДокументОбъект.Поставщик        = Поставщик;
			ДокументОбъект.Грузоотправитель = Поставщик;
			ДокументОбъект.Грузополучатель  = ОрганизацияЕГАИСПоОрганизацииИСкладу(
				РеквизитыДокумента.Организация,
				РеквизитыДокумента.СкладПолучатель);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаОснования,
	|			Валюта = &ВалютаРеглУчета
	|				ИЛИ Валюта = &ВалютаВидаЦены) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Упаковка,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.ИдентификаторУпаковки, """")                                                      КАК ИдентификаторУпаковки,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ ТаблицаСопоставления
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Упаковки КАК КлассификаторАлкогольнойПродукцииЕГАИСУпаковки
	|		ПО ТабличнаяЧасть.Номенклатура = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Номенклатура
	|			И (КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Сопоставлено)
	|			И ТабличнаяЧасть.Характеристика = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Характеристика
	|			И (ТабличнаяЧасть.Упаковка = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка
	|				ИЛИ ТабличнаяЧасть.Номенклатура.ЕдиницаИзмерения = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Упаковка,
	|	ТабличнаяЧасть.КоличествоУпаковок          КАК Количество,
	|	ТаблицаСопоставления.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	ТаблицаСопоставления.ИдентификаторУпаковки КАК ИдентификаторУпаковки
	|ПОМЕСТИТЬ АлкогольнаяПродукцияДокумента
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСопоставления КАК ТаблицаСопоставления
	|		ПО ТабличнаяЧасть.Номенклатура = ТаблицаСопоставления.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ТаблицаСопоставления.Характеристика
	|			И ТабличнаяЧасть.Упаковка = ТаблицаСопоставления.Упаковка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АлкогольнаяПродукцияДокумента.Номенклатура,
	|	АлкогольнаяПродукцияДокумента.Количество,
	|	АлкогольнаяПродукцияДокумента.АлкогольнаяПродукция,
	|	АлкогольнаяПродукцияДокумента.ИдентификаторУпаковки,
	|	ВЫБОР
	|		КОГДА
	|			АлкогольнаяПродукцияДокумента.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА
	|			&ТекстЗапросаКоэффициентУпаковкиАлкогольнаяПродукция
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ
	|	* ЕстьNULL(ЦеныНоменклатурыСрезПоследних.Цена,0)/ЕстьNULL(&ТекстЗапросаКоэффициентУпаковкиЦеныНоменклатуры,1)
	|	* ВЫБОР
	|		КОГДА &ВалютаРеглУчета <> ЦеныНоменклатурыСрезПоследних.Валюта
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(КурсыВалютыЦены.Кратность, 0) > 0
	|						И ЕСТЬNULL(КурсыВалютыЦены.Курс, 0) > 0
	|						И ЕСТЬNULL(КурсыВалюты.Кратность, 0) > 0
	|						И ЕСТЬNULL(КурсыВалюты.Курс, 0) > 0
	|					ТОГДА 
	|						(КурсыВалютыЦены.Курс * КурсыВалюты.Кратность)
	|						/ (КурсыВалюты.Курс * КурсыВалютыЦены.Кратность)
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Цена,
	|	АлкогольнаяПродукцияДокумента.Количество
	|	* ВЫБОР
	|		КОГДА
	|			АлкогольнаяПродукцияДокумента.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ТОГДА
	|			&ТекстЗапросаКоэффициентУпаковкиАлкогольнаяПродукция
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ
	|	* ЕстьNULL(ЦеныНоменклатурыСрезПоследних.Цена,0)/ЕстьNULL(&ТекстЗапросаКоэффициентУпаковкиЦеныНоменклатуры,1)
	|	* ВЫБОР
	|		КОГДА &ВалютаРеглУчета <> ЦеныНоменклатурыСрезПоследних.Валюта
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(КурсыВалютыЦены.Кратность, 0) > 0
	|						И ЕСТЬNULL(КурсыВалютыЦены.Курс, 0) > 0
	|						И ЕСТЬNULL(КурсыВалюты.Кратность, 0) > 0
	|						И ЕСТЬNULL(КурсыВалюты.Курс, 0) > 0
	|					ТОГДА 
	|						(КурсыВалютыЦены.Курс * КурсыВалюты.Кратность)
	|						/ (КурсыВалюты.Курс * КурсыВалютыЦены.Кратность)
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	АлкогольнаяПродукцияДокумента КАК АлкогольнаяПродукцияДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&ДатаОснования,
	|				ВидЦены = &ВидЦены
	|					И (Номенклатура, Характеристика, Упаковка) В
	|						(ВЫБРАТЬ
	|							АлкогольнаяПродукцияДокумента.Номенклатура,
	|							АлкогольнаяПродукцияДокумента.Характеристика,
	|							АлкогольнаяПродукцияДокумента.Упаковка
	|						ИЗ
	|							АлкогольнаяПродукцияДокумента КАК АлкогольнаяПродукцияДокумента)) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО АлкогольнаяПродукцияДокумента.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|			И АлкогольнаяПродукцияДокумента.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	|			И АлкогольнаяПродукцияДокумента.Упаковка = ЦеныНоменклатурыСрезПоследних.Упаковка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсыВалютыЦены
	|		ПО (КурсыВалютыЦены.Валюта = &ВалютаВидаЦены)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсыВалюты
	|		ПО (КурсыВалюты.Валюта = &ВалютаРеглУчета)");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ДатаОснования",   РеквизитыДокумента.ДатаТТН);
	Запрос.УстановитьПараметр("ВидЦены",         РеквизитыДокумента.ВидЦены);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаВидаЦены",  РеквизитыДокумента.ВалютаЦены);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"&ТекстЗапросаКоэффициентУпаковкиАлкогольнаяПродукция",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"АлкогольнаяПродукцияДокумента.Упаковка",
			"АлкогольнаяПродукцияДокумента.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"&ТекстЗапросаКоэффициентУпаковкиЦеныНоменклатуры",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЦеныНоменклатурыСрезПоследних.Упаковка",
			"ЦеныНоменклатурыСрезПоследних.Номенклатура"));
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Запрос.Выполнить(), ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ЗаполнитьТТНИсходящуюЕГАИСНаОснованииВозвратаТоваровМеждуОрганизациями(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                КАК ДокументОснование,
	|	ДокументОснование.Номер                 КАК НомерТТН,
	|	ДокументОснование.Дата                  КАК ДатаТТН,
	|	ДокументОснование.Дата                  КАК ДатаОтгрузки,
	|	НЕ ДокументОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Организация           КАК Поставщик,
	|	ДокументОснование.Менеджер              КАК Ответственный,
	|	ДокументОснование.ОрганизацияПолучатель КАК Грузополучатель,
	|	ДокументОснование.Организация           КАК Грузоотправитель,
	|	ДокументОснование.Склад                 КАК Склад,
	|	ДокументОснование.Валюта                КАК Валюта
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.Идентификатор = Строка(Новый УникальныйИдентификатор());
			ДокументОбъект.ВидОперации   = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.ВозвратПоставщику;
			
			ДокументОбъект.Поставщик        = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Поставщик, РеквизитыДокумента.Склад);
			ДокументОбъект.Грузоотправитель = ДокументОбъект.Поставщик;
			ДокументОбъект.Грузополучатель  = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Грузополучатель, РеквизитыДокумента.Склад);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта    КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс      КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаОснования,
	|			Валюта = &ВалютаРеглУчета
	|				ИЛИ Валюта = &ВалютаОснования) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Упаковка,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.ИдентификаторУпаковки, """")                                                      КАК ИдентификаторУпаковки,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ ТаблицаСопоставления
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Упаковки КАК КлассификаторАлкогольнойПродукцииЕГАИСУпаковки
	|		ПО ТабличнаяЧасть.Номенклатура = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Номенклатура
	|			И (КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Сопоставлено)
	|			И ТабличнаяЧасть.Характеристика = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Характеристика
	|			И (ТабличнаяЧасть.Упаковка = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка
	|				ИЛИ ТабличнаяЧасть.Номенклатура.ЕдиницаИзмерения = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                КАК Номенклатура,
	|	ТабличнаяЧасть.КоличествоУпаковок          КАК Количество,
	|	ТаблицаСопоставления.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	ТаблицаСопоставления.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТабличнаяЧасть.КоличествоУпаковок = 0
	|				ТОГДА 0
	|			ИНАЧЕ (ТабличнаяЧасть.СуммаСНДС / ТабличнаяЧасть.КоличествоУпаковок) * ВЫБОР
	|					КОГДА &ВалютаОснования <> &ВалютаРеглУчета
	|						ТОГДА ВЫБОР
	|								КОГДА ЕСТЬNULL(КурсВалютыОснования.Кратность, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыОснования.Курс, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыРегл.Кратность, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыРегл.Курс, 0) > 0
	|									ТОГДА КурсВалютыОснования.Курс * КурсВалютыРегл.Кратность / (КурсВалютыРегл.Курс * КурсВалютыОснования.Кратность)
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТабличнаяЧасть.КоличествоУпаковок = 0
	|				ТОГДА 0
	|			ИНАЧЕ ТабличнаяЧасть.СуммаСНДС * ВЫБОР
	|					КОГДА &ВалютаОснования <> &ВалютаРеглУчета
	|						ТОГДА ВЫБОР
	|								КОГДА ЕСТЬNULL(КурсВалютыОснования.Кратность, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыОснования.Курс, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыРегл.Кратность, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыРегл.Курс, 0) > 0
	|									ТОГДА КурсВалютыОснования.Курс * КурсВалютыРегл.Кратность / (КурсВалютыРегл.Курс * КурсВалютыОснования.Кратность)
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Сумма
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСопоставления КАК ТаблицаСопоставления
	|		ПО ТабличнаяЧасть.Номенклатура = ТаблицаСопоставления.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ТаблицаСопоставления.Характеристика
	|			И ТабличнаяЧасть.Упаковка = ТаблицаСопоставления.Упаковка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция");
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета",   Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ДатаОснования",     РеквизитыДокумента.ДатаТТН);
	Запрос.УстановитьПараметр("ВалютаОснования",   РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Запрос.Выполнить(), ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ЗаполнитьТТНИсходящуюЕГАИСНаОснованииПередачиТоваровМеждуОрганизациями(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                КАК ДокументОснование,
	|	ДокументОснование.Номер                 КАК НомерТТН,
	|	ДокументОснование.Дата                  КАК ДатаТТН,
	|	ДокументОснование.Дата                  КАК ДатаОтгрузки,
	|	НЕ ДокументОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Организация           КАК Поставщик,
	|	ДокументОснование.Менеджер              КАК Ответственный,
	|	ДокументОснование.ОрганизацияПолучатель КАК Грузополучатель,
	|	ДокументОснование.Организация           КАК Грузоотправитель,
	|	ДокументОснование.Склад                 КАК Склад,
	|	ДокументОснование.Валюта                КАК Валюта
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.Идентификатор = Строка(Новый УникальныйИдентификатор());
			ДокументОбъект.ВидОперации   = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
			
			ДокументОбъект.Поставщик        = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Поставщик, РеквизитыДокумента.Склад);
			ДокументОбъект.Грузоотправитель = ДокументОбъект.Поставщик;
			ДокументОбъект.Грузополучатель  = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Грузополучатель, РеквизитыДокумента.Склад);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта КАК Валюта,
	|	КурсыВалютСрезПоследних.Курс КАК Курс,
	|	КурсыВалютСрезПоследних.Кратность КАК Кратность
	|ПОМЕСТИТЬ втКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(
	|			&ДатаОснования,
	|			Валюта = &ВалютаРеглУчета
	|				ИЛИ Валюта = &ВалютаОснования) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Упаковка,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.ИдентификаторУпаковки, """")                                                      КАК ИдентификаторУпаковки,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ ТаблицаСопоставления
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Упаковки КАК КлассификаторАлкогольнойПродукцииЕГАИСУпаковки
	|		ПО ТабличнаяЧасть.Номенклатура = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Номенклатура
	|			И (КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Сопоставлено)
	|			И ТабличнаяЧасть.Характеристика = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Характеристика
	|			И (ТабличнаяЧасть.Упаковка = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка
	|				ИЛИ ТабличнаяЧасть.Номенклатура.ЕдиницаИзмерения = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура                КАК Номенклатура,
	|	ТабличнаяЧасть.КоличествоУпаковок          КАК Количество,
	|	ТаблицаСопоставления.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	ТаблицаСопоставления.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТабличнаяЧасть.КоличествоУпаковок = 0
	|				ТОГДА 0
	|			ИНАЧЕ (ТабличнаяЧасть.СуммаСНДС / ТабличнаяЧасть.КоличествоУпаковок) * ВЫБОР
	|					КОГДА &ВалютаОснования <> &ВалютаРеглУчета
	|						ТОГДА ВЫБОР
	|								КОГДА ЕСТЬNULL(КурсВалютыОснования.Кратность, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыОснования.Курс, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыРегл.Кратность, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыРегл.Курс, 0) > 0
	|									ТОГДА КурсВалютыОснования.Курс * КурсВалютыРегл.Кратность / (КурсВалютыРегл.Курс * КурсВалютыОснования.Кратность)
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ТабличнаяЧасть.КоличествоУпаковок = 0
	|				ТОГДА 0
	|			ИНАЧЕ ТабличнаяЧасть.СуммаСНДС * ВЫБОР
	|					КОГДА &ВалютаОснования <> &ВалютаРеглУчета
	|						ТОГДА ВЫБОР
	|								КОГДА ЕСТЬNULL(КурсВалютыОснования.Кратность, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыОснования.Курс, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыРегл.Кратность, 0) > 0
	|										И ЕСТЬNULL(КурсВалютыРегл.Курс, 0) > 0
	|									ТОГДА КурсВалютыОснования.Курс * КурсВалютыРегл.Кратность / (КурсВалютыРегл.Курс * КурсВалютыОснования.Кратность)
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 1
	|				КОНЕЦ
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Сумма
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСопоставления КАК ТаблицаСопоставления
	|		ПО ТабличнаяЧасть.Номенклатура = ТаблицаСопоставления.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ТаблицаСопоставления.Характеристика
	|			И ТабличнаяЧасть.Упаковка = ТаблицаСопоставления.Упаковка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция");
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета",   Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ДатаОснования",     РеквизитыДокумента.ДатаТТН);
	Запрос.УстановитьПараметр("ВалютаОснования",   РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Запрос.Выполнить(), ДанныеЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеЧекаЕГАИС

Процедура ОбработкаЗаполненияЧекаЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ЗаполнитьЧекЕГАИСНаОснованииРеализацииТоваровУслуг(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЧекЕГАИСНаОснованииРеализацииТоваровУслуг(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка      КАК ДокументОснование,
	|	НЕ Таблица.Проведен КАК ЕстьОшибкиПроведен,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Склад       КАК Склад,
	|	Таблица.Менеджер    КАК Ответственный,
	|	Таблица.Дата        КАК Дата,             // Дата товарной накладной, на основании которой осуществлена розничная продажа алкогольной продукции по безналичному расчету
	|	Таблица.Номер       КАК НомерСмены,       // Номер товарной накладной, на основании которой осуществлена розничная продажа алкогольной продукции по безналичному расчету
	|	Таблица.Номер       КАК НомерЧекаККМ,
	|	""""                КАК СерийныйНомерККМ  // Номер счета на безналичную оплату алкогольной продукции
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Упаковка,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.ИдентификаторУпаковки, """")                                                      КАК ИдентификаторУпаковки,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ ТаблицаСопоставления
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Упаковки КАК КлассификаторАлкогольнойПродукцииЕГАИСУпаковки
	|		ПО ТабличнаяЧасть.Номенклатура = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Номенклатура
	|			И (КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Сопоставлено)
	|			И ТабличнаяЧасть.Характеристика = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Характеристика
	|			И (ТабличнаяЧасть.Упаковка = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка
	|				ИЛИ ТабличнаяЧасть.Номенклатура.ЕдиницаИзмерения = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура       КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика     КАК Характеристика,
	|	ТабличнаяЧасть.Упаковка           КАК Упаковка,
	|	ТабличнаяЧасть.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.Количество   КАК Количество,
	|	ТабличнаяЧасть.Цена         КАК Цена,
	|	ТабличнаяЧасть.СуммаСНДС    КАК Сумма,
	|	ТаблицаСопоставления.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	ТаблицаСопоставления.ИдентификаторУпаковки КАК ИдентификаторУпаковки
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСопоставления КАК ТаблицаСопоставления
	|		ПО ТабличнаяЧасть.Номенклатура = ТаблицаСопоставления.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ТаблицаСопоставления.Характеристика
	|			И ТабличнаяЧасть.Упаковка = ТаблицаСопоставления.Упаковка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый
	|	И СправочникНоменклатура.АлкогольнаяПродукция");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.НомерСмены   = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РеквизитыДокумента.НомерСмены);
			ДокументОбъект.НомерЧекаККМ = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РеквизитыДокумента.НомерЧекаККМ);
			
			ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(
				РеквизитыДокумента.Организация,
				РеквизитыДокумента.Склад);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[2], ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаЗаполненияЧекаЕГАИСВозврат(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
		
		ЗаполнитьЧекЕГАИСВозвратНаОснованииВозвратаТоваровОтКлиента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЧекЕГАИСВозвратНаОснованииВозвратаТоваровОтКлиента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка                   КАК ДокументОснование,
	|	НЕ Таблица.Проведен              КАК ЕстьОшибкиПроведен,
	|	Таблица.Организация              КАК Организация,
	|	Таблица.Склад                    КАК Склад,
	|	Таблица.Менеджер                 КАК Ответственный,
	|	Таблица.ДокументРеализации.Дата  КАК Дата,             // Дата товарной накладной, на основании которой осуществлена розничная продажа алкогольной продукции по безналичному расчету
	|	Таблица.ДокументРеализации.Номер КАК НомерСмены,       // Номер товарной накладной, на основании которой осуществлена розничная продажа алкогольной продукции по безналичному расчету
	|	Таблица.ДокументРеализации.Номер КАК НомерЧекаККМ,
	|	""""                             КАК СерийныйНомерККМ  // Номер счета на безналичную оплату алкогольной продукции
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Упаковка,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.ИдентификаторУпаковки, """")                                                      КАК ИдентификаторУпаковки,
	|	ЕСТЬNULL(КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ ТаблицаСопоставления
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Упаковки КАК КлассификаторАлкогольнойПродукцииЕГАИСУпаковки
	|		ПО ТабличнаяЧасть.Номенклатура = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Номенклатура
	|			И (КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Сопоставлено)
	|			И ТабличнаяЧасть.Характеристика = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Ссылка.Характеристика
	|			И (ТабличнаяЧасть.Упаковка = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка
	|				ИЛИ ТабличнаяЧасть.Номенклатура.ЕдиницаИзмерения = КлассификаторАлкогольнойПродукцииЕГАИСУпаковки.Упаковка)
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура       КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика     КАК Характеристика,
	|	ТабличнаяЧасть.Упаковка           КАК Упаковка,
	|	ТабличнаяЧасть.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.Количество   КАК Количество,
	|	ТабличнаяЧасть.Цена         КАК Цена,
	|	ТабличнаяЧасть.СуммаСНДС    КАК Сумма,
	|	ТаблицаСопоставления.АлкогольнаяПродукция  КАК АлкогольнаяПродукция,
	|	ТаблицаСопоставления.ИдентификаторУпаковки КАК ИдентификаторУпаковки
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСопоставления КАК ТаблицаСопоставления
	|		ПО ТабличнаяЧасть.Номенклатура = ТаблицаСопоставления.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ТаблицаСопоставления.Характеристика
	|			И ТабличнаяЧасть.Упаковка = ТаблицаСопоставления.Упаковка
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый
	|	И СправочникНоменклатура.АлкогольнаяПродукция");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
			
			ДокументОбъект.НомерСмены = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РеквизитыДокумента.НомерСмены);
			ДокументОбъект.НомерЧекаККМ = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(РеквизитыДокумента.НомерЧекаККМ);
			
			ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(
				РеквизитыДокумента.Организация,
				РеквизитыДокумента.Склад);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[2], ДанныеЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеВозвратаИзРегистра2ЕГАИС

Процедура ОбработкаЗаполненияВозвратаИзРегистра2ЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТТНИсходящаяЕГАИС") Тогда
		
		ЗаполнитьВозвратИзРегистра2ЕГАИСНаОснованииТТНИсходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьВозвратИзРегистра2ЕГАИСНаОснованииТТНИсходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка           КАК ДокументОснование,
	|	Ложь                     КАК ЕстьОшибкиПроведен,
	|	Таблица.Грузоотправитель КАК ОрганизацияЕГАИС,
	|	Таблица.Ответственный    КАК Ответственный
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Классификатор.Ссылка.Номенклатура   КАК Номенклатура,
	|	Классификатор.Ссылка.Характеристика КАК Характеристика,
	|	Классификатор.Упаковка              КАК Упаковка,
	|	ТабличнаяЧасть.Количество           КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.Количество           КАК Количество,
	|	ТабличнаяЧасть.Справка2             КАК Справка2
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Упаковки КАК Классификатор
	|		ПО ТабличнаяЧасть.АлкогольнаяПродукция = Классификатор.Ссылка
	|		 И ТабличнаяЧасть.ИдентификаторУпаковки = Классификатор.ИдентификаторУпаковки
	|ГДЕ
	|	ТабличнаяЧасть.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|	И ТабличнаяЧасть.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[1], ДанныеЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеПередачиВРегистр2ЕГАИС

Процедура ОбработкаЗаполненияПередачиВРегистр2ЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
		
		ЗаполнитьПередачуВРегистр2ЕГАИСНаОснованииТТНВходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПередачуВРегистр2ЕГАИСНаОснованииТТНВходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка          КАК ДокументОснование,
	|	НЕ Таблица.Проведен     КАК ЕстьОшибкиПроведен,
	|	Таблица.Грузополучатель КАК ОрганизацияЕГАИС,
	|	Таблица.Ответственный   КАК Ответственный
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Классификатор.Ссылка.Номенклатура   КАК Номенклатура,
	|	Классификатор.Ссылка.Характеристика КАК Характеристика,
	|	Классификатор.Упаковка              КАК Упаковка,
	|	ТабличнаяЧасть.Количество           КАК КоличествоУпаковок,
	|	ТабличнаяЧасть.Количество           КАК Количество,
	|	ТабличнаяЧасть.Справка2             КАК Справка2
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Упаковки КАК Классификатор
	|		ПО ТабличнаяЧасть.АлкогольнаяПродукция = Классификатор.Ссылка
	|		 И ТабличнаяЧасть.ИдентификаторУпаковки = Классификатор.ИдентификаторУпаковки
	|ГДЕ
	|	ТабличнаяЧасть.Справка2 <> ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|	И ТабличнаяЧасть.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
			РеквизитыДокумента.ДокументОснование,
			,
			РеквизитыДокумента.ЕстьОшибкиПроведен,,);
			
			ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[1], ДанныеЗаполнения);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьКлассификаторОрганизацийЕГАИСДляУстановкиСоответствий(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	|		ПО КлассификаторОрганизацийЕГАИС.Код = НастройкиОбменаЕГАИС.ИдентификаторФСРАР
	|ГДЕ
	|	(КлассификаторОрганизацийЕГАИС.Контрагент <> НастройкиОбменаЕГАИС.УдалитьРесурсОрганизация
	|			ИЛИ КлассификаторОрганизацийЕГАИС.ТорговыйОбъект <> НастройкиОбменаЕГАИС.УдалитьРесурсСклад
	|			ИЛИ НЕ КлассификаторОрганизацийЕГАИС.СоответствуетОрганизации)";
	
	МассивСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, МассивСсылок);
	
КонецПроцедуры

Процедура ОбработатьКлассификаторОрганизацийЕГАИСДляУстановкиСоответствий(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Справочник.КлассификаторОрганизацийЕГАИС";
	МетаданныеОбъекта = Метаданные.Справочники.КлассификаторОрганизацийЕГАИС;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВТСсылкиДляОбработки.Ссылка КАК Справочник.КлассификаторОрганизацийЕГАИС) КАК Ссылка
	|ПОМЕСТИТЬ СсылкиДляОбработки
	|ИЗ
	|	&ВТСсылкиДляОбработки КАК ВТСсылкиДляОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СсылкиДляОбработки.Ссылка,
	|	НастройкиОбменаЕГАИС.УдалитьРесурсОрганизация      КАК ОрганизацияИзНастроек,
	|	НастройкиОбменаЕГАИС.УдалитьРесурсСклад            КАК ТорговыйОбъектИзНастроек,
	|	ЕСТЬNULL(НастройкиОбменаЕГАИС.ИдентификаторФСРАР, НЕОПРЕДЕЛЕНО) КАК ИдентификаторФСРАР
	|ИЗ
	|	СсылкиДляОбработки КАК СсылкиДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	|		ПО СсылкиДляОбработки.Ссылка.Код = НастройкиОбменаЕГАИС.ИдентификаторФСРАР";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТСсылкиДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ОбработанныеОбъекты = Новый Массив;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ИдентификаторФСРАР = Неопределено Тогда
			ОбработанныеОбъекты.Добавить(Выборка.Ссылка);
			Продолжить;
		КонецЕсли;
		
		НачатьТранзакцию();
		
		Попытка
		
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.НастройкиОбменаЕГАИС");
			ЭлементБлокировки.УстановитьЗначение("ИдентификаторФСРАР", Выборка.ИдентификаторФСРАР);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
		
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось заблокировать данные по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         МетаданныеОбъекта,
			                         Выборка.Ссылка,
			                         ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
		ОрганизацияЕГАИС = Выборка.Ссылка.ПолучитьОбъект();
		
		Если ОрганизацияЕГАИС = Неопределено Тогда
			ОтменитьТранзакцию();
			ОбработанныеОбъекты.Добавить(Выборка.Ссылка);
			Продолжить;
		КонецЕсли;
		
		Если ОрганизацияЕГАИС.СоответствуетОрганизации
			И Выборка.ОрганизацияИзНастроек = ОрганизацияЕГАИС.Контрагент
			И Выборка.ТорговыйОбъектИзНастроек = ОрганизацияЕГАИС.ТорговыйОбъект Тогда
			ОбработанныеОбъекты.Добавить(Выборка.Ссылка);
			Продолжить;
		КонецЕсли;
		
		Попытка
		
			ОрганизацияЕГАИС.СоответствуетОрганизации = Истина;
			ОрганизацияЕГАИС.Контрагент     = Выборка.ОрганизацияИзНастроек;
			ОрганизацияЕГАИС.ТорговыйОбъект = Выборка.ТорговыйОбъектИзНастроек;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОрганизацияЕГАИС);
			
			ЗафиксироватьТранзакцию();
		
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать справочник: %Справочник% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Справочник%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         МетаданныеОбъекта,
			                         Выборка.Ссылка,
			                         ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработанныеОбъекты.Количество() > 0 Тогда
		ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ОбработанныеОбъекты,, Параметры.Очередь);
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = НЕ ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ЗарегистрироватьАктыСписанияЕГАИСДляЗаполненияНоменклатуры(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК Товары
	|ГДЕ
	|	Товары.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			И Товары.АлкогольнаяПродукция.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьАктыСписанияЕГАИСДляЗаполненияНоменклатуры(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.АктСписанияЕГАИС";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СсылкиДляОбработки.Ссылка КАК Ссылка,
	|	СсылкиДляОбработки.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Товары.АлкогольнаяПродукция.Номенклатура КАК Номенклатура,
	|	Товары.АлкогольнаяПродукция.Характеристика КАК Характеристика
	|ИЗ
	|	&ВТДляОбработки КАК СсылкиДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АктСписанияЕГАИС.Товары КАК Товары
	|		ПО (Товары.Ссылка = СсылкиДляОбработки.Ссылка)
	|ИТОГИ ПО
	|	Ссылка";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
		Параметры.Очередь,
		ПолноеИмяОбъекта,
		МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	
	ОбъектыДляОбработки = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ОбъектыДляОбработки.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			// Устанавливаем управляемую блокировку, чтобы провести ответственное чтение объекта
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ОбъектыДляОбработки.Ссылка);
			
			Блокировка.Заблокировать();
			
			Объект = ОбъектыДляОбработки.Ссылка.ПолучитьОбъект();
			Если Объект = Неопределено Тогда
				ОтменитьТранзакцию();
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ОбъектыДляОбработки.Ссылка);
				Продолжить;
			КонецЕсли;
			
			Если Объект.ВерсияДанных <> ОбъектыДляОбработки.ВерсияДанных Тогда
				ОтменитьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ОбъектИзменен = Ложь;
			
			ВыборкаПоТоварам = ОбъектыДляОбработки.Выбрать();
			Пока ВыборкаПоТоварам.Следующий() Цикл
				
				ПараметрыОтбора = Новый Структура;
				ПараметрыОтбора.Вставить("АлкогольнаяПродукция", ВыборкаПоТоварам.АлкогольнаяПродукция);
				ПараметрыОтбора.Вставить("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
				
				НайденныеСтроки = Объект.Товары.НайтиСтроки(ПараметрыОтбора);
				Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
					
					Если НЕ СтрокаТЧ.Номенклатура.Пустая() Тогда
						Продолжить;
					КонецЕсли;
					
					СтрокаТЧ.Номенклатура        = ВыборкаПоТоварам.Номенклатура;
					СтрокаТЧ.Характеристика      = ВыборкаПоТоварам.Характеристика;
					СтрокаТЧ.КоличествоУпаковок  = СтрокаТЧ.Количество;
					СтрокаТЧ.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
					
					ОбъектИзменен = Истина;
					
				КонецЦикла;
				
			КонецЦикла;
			
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ОбъектыДляОбработки.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать %ИмяОбъекта%: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяОбъекта%", ПолноеИмяОбъекта);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ОбъектыДляОбработки.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
										УровеньЖурналаРегистрации.Предупреждение,
										МетаданныеОбъекта,
										ОбъектыДляОбработки.Ссылка,
										ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ОрганизацияЕГАИСПоОрганизацииИСкладу(Организация, Склад)
	
	МассивОрганизацийЕГАИС = ОрганизацииЕГАИСПоОрганизацииИСкладу(Организация, Склад);
	
	Если МассивОрганизацийЕГАИС = Неопределено 
		Или МассивОрганизацийЕГАИС.Количество() <> 1 Тогда
		
		Возврат Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка();
		
	Иначе
		
		Возврат МассивОрганизацийЕГАИС[0];
		
	КонецЕсли;
	
КонецФункции

Функция ОрганизацияЕГАИСПоПартнеруИКонтрагенту(Партнер, Контрагент)

	МассивОрганизацийЕГАИС = ОрганизацииЕГАИСПоПартнеруИКонтрагенту(Партнер, Контрагент);
	
	Если МассивОрганизацийЕГАИС = Неопределено 
		Или МассивОрганизацийЕГАИС.Количество() <> 1 Тогда
		
		Возврат Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка();
		
	Иначе
		
		Возврат МассивОрганизацийЕГАИС[0];
		
	КонецЕсли;

КонецФункции

Функция ОрганизацияПоОрганизацииЕГАИС(ОрганизацияЕГАИС)

	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Контрагент
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	КлассификаторОрганизацийЕГАИС.СоответствуетОрганизации
	|	И КлассификаторОрганизацийЕГАИС.Ссылка = &ОрганизацияЕГАИС
	|	И КлассификаторОрганизацийЕГАИС.Контрагент <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ОрганизацияЕГАИС);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Контрагент;
	Иначе
		Возврат Неопределено;
	КонецЕсли;	

КонецФункции

Функция ЕстьАлкогольнаяПродукция(Объект, ИмяТабличнойЧасти, ИмяКолонки = "Номенклатура")
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	Справочник.Номенклатура КАК ТаблицаНоменклатура
	|ГДЕ
	|	ТаблицаНоменклатура.АлкогольнаяПродукция
	|	И ТаблицаНоменклатура.Ссылка В(&МассивНоменклатуры)");
	
	Запрос.УстановитьПараметр("МассивНоменклатуры",   Объект[ИмяТабличнойЧасти].ВыгрузитьКолонку(ИмяКолонки));
	
	Результат = Запрос.ВыполнитьПакет();
	
	Возврат НЕ Результат[0].Пустой();
	
КонецФункции

Функция ЕстьМаркируемаяАлкогольнаяПродукция(Объект, ИмяТабличнойЧасти, ИмяКолонки = "Номенклатура")
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	Справочник.Номенклатура КАК ТаблицаНоменклатура
	|ГДЕ
	|	ТаблицаНоменклатура.АлкогольнаяПродукция
	|	И ТаблицаНоменклатура.ВидАлкогольнойПродукции.Маркируемый
	|	И ТаблицаНоменклатура.Ссылка В(&МассивНоменклатуры)");
	
	Запрос.УстановитьПараметр("МассивНоменклатуры", Объект[ИмяТабличнойЧасти].ВыгрузитьКолонку(ИмяКолонки));
	
	Результат = Запрос.ВыполнитьПакет();
	
	Возврат НЕ Результат[0].Пустой();
	
КонецФункции

Функция ЕстьНеМаркируемаяАлкогольнаяПродукция(Объект, ИмяТабличнойЧасти, ИмяКолонки = "Номенклатура")
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	Справочник.Номенклатура КАК ТаблицаНоменклатура
	|ГДЕ
	|	ТаблицаНоменклатура.АлкогольнаяПродукция
	|	И Не ТаблицаНоменклатура.ВидАлкогольнойПродукции.Маркируемый
	|	И ТаблицаНоменклатура.Ссылка В(&МассивНоменклатуры)");
	
	Запрос.УстановитьПараметр("МассивНоменклатуры", Объект[ИмяТабличнойЧасти].ВыгрузитьКолонку(ИмяКолонки));
	
	Результат = Запрос.ВыполнитьПакет();
	
	Возврат НЕ Результат[0].Пустой();
	
КонецФункции

Функция ОрганизацииЕГАИСПоОрганизацииИСкладу(Организация, Склад)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	НЕ КлассификаторОрганизацийЕГАИС.ПометкаУдаления
	|	И КлассификаторОрганизацийЕГАИС.СоответствуетОрганизации
	|	И КлассификаторОрганизацийЕГАИС.Контрагент = &Организация
	|	И КлассификаторОрганизацийЕГАИС.ТорговыйОбъект = &Склад
	|";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад",       Склад);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция ОрганизацииЕГАИСПоПартнеруИКонтрагенту(Партнер, Контрагент)
	
	Если Не ЗначениеЗаполнено(Контрагент) Или Не ЗначениеЗаполнено(Партнер) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	НЕ КлассификаторОрганизацийЕГАИС.ПометкаУдаления
	|	И КлассификаторОрганизацийЕГАИС.Сопоставлено
	|	И КлассификаторОрганизацийЕГАИС.Контрагент = &Контрагент
	|	И КлассификаторОрганизацийЕГАИС.ТорговыйОбъект = &Партнер
	|	И НЕ КлассификаторОрганизацийЕГАИС.СоответствуетОрганизации";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Партнер", Партнер);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Процедура ДобавитьВРезультат(Результат, Приоритет, ДобавляемоеЗначение)
	
	Если ДобавляемоеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Значение = Результат.Получить(Приоритет);
	Если Значение = Неопределено Тогда
		Значение = Новый Массив();
	КонецЕсли;
	Значение.Добавить(ДобавляемоеЗначение);
	
	Результат.Вставить(Приоритет, Значение);
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса, ДанныеЗаполнения)
	
	ВыборкаТовары = РезультатЗапроса.Выбрать();
	
	Если ВыборкаТовары.Количество() = 0 Тогда
		
		ВызватьИсключение СтрШаблон(
			НСтр("ru='В %1 отсутствует алкогольная продукция для заполнения.'"),
			ДанныеЗаполнения);
		
	КонецЕсли;
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ВыборкаТовары.АлкогольнаяПродукция) Тогда
			
			НоваяСтрока = ДокументОбъект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
			
		Иначе
			
			ДокументОбъект.Товары.Очистить();
			
			ТекстОшибки = НСтр("ru='Не выполнено сопоставление %Номенклатура% классификатору номенклатуры ЕГАИС.'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Номенклатура%", ВыборкаТовары.Номенклатура);
			
			ВызватьИсключение ТекстОшибки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

