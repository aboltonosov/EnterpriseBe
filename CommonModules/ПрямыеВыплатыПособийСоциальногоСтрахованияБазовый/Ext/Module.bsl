#Область СлужебныйПрограммныйИнтерфейс

// Заполняет табличные части документа "ИсходящаяСправкаОЗаработкеДляРасчетаПособий".
//
// Параметры:
//  Объект -  ДокументОбъект.ИсходящаяСправкаОЗаработкеДляРасчетаПособий
//  ПараметрыЗаполнения - см. ПараметрыЗаполненияСправкиОЗаработкеИДняхОтсутствия.
//  
// Возвращаемое значение:
//	Истина, если данные в объекте были обновлены.
//
Функция ЗаполнитьСправкуДаннымиОЗаработкеИДняхОтсутствия(Объект, ПараметрыЗаполнения) Экспорт
	
	Если ПараметрыЗаполнения.Обновление Тогда
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		СоздатьВТДанныеОЗаработкеДляЗаполнения(МенеджерВременныхТаблиц, ПараметрыЗаполнения);
		Модифицирован = ФиксацияВторичныхДанныхВДокументах.ОбновитьВторичныеДанные(МенеджерВременныхТаблиц, Объект, "ДанныеОЗаработке", "ВТДанныеОЗаработкеДляЗаполнения");
		
	Иначе
		
		Объект.ДанныеОЗаработке.Загрузить(ДанныеОЗаработкеДляЗаполнения(ПараметрыЗаполнения));
		Модифицирован = Истина;
		
	КонецЕсли;
	
	Возврат Модифицирован; 
	
КонецФункции

// Формирует параметры для создания временных таблиц используемых для заполнения справки о заработке для расчета
// пособий.
//
// Параметры:
//  Объект - ДокументОбъект.СправкаОЗаработкеДляРасчетаПособий
//
// Возвращаемое значение:
//    Структура:
//		ГодНачало
//		ГодОкончание
//		Сотрудник
//		Организация
//      ПоВсемОП - данные по Организации или по ГоловнойОрганизации.
//      Обновление - учитывать ли зафиксированные в документе реквизиты.
//      РасчетныеГоды - отбор заполняемых лет, входящих в период между ГодНачало и ГодОкончание.
//      ОграничиватьРазмерЗаработка - применять ли ограничение базой страховых взносов.
//
Функция ПараметрыЗаполненияСправкиОЗаработкеИДняхОтсутствия(Объект = Неопределено) Экспорт
	ПараметрыЗаполненияСправки = Новый Структура("ГодНачала, ГодОкончания, Сотрудник, Организация, ПоВсемОП, Обновление, РасчетныеГоды, ОграничиватьРазмерЗаработка");
	ПараметрыЗаполненияСправки.ПоВсемОП = Ложь;
	ПараметрыЗаполненияСправки.Обновление = Ложь;
	ПараметрыЗаполненияСправки.РасчетныеГоды = Неопределено;
	ПараметрыЗаполненияСправки.ОграничиватьРазмерЗаработка = Истина;
	Возврат ПараметрыЗаполненияСправки
КонецФункции

// Возвращает таблицу с данными о заработке сотрудника по годам.
//
// Параметры:
//  ПараметрыЗаполнения - Структура, состав см. в
//                        УчетПособийСоциальногоСтрахования.ПараметрыЗаполненияСправкиОЗаработкеИДняхОтсутствия.
//  
// Возвращаемое значение:
//  Таблица значений с колонками:
//		РасчетныйГод	
//		Заработок	
//			
Функция ДанныеОЗаработкеДляЗаполнения(ПараметрыЗаполнения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТДанныеОЗаработкеДляЗаполнения(Запрос.МенеджерВременныхТаблиц, ПараметрыЗаполнения);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеОЗаработкеДляЗаполнения.РасчетныйГод,
	|	ДанныеОЗаработкеДляЗаполнения.Заработок
	|ИЗ
	|	ВТДанныеОЗаработкеДляЗаполнения КАК ДанныеОЗаработкеДляЗаполнения";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Возвращает массив ссылок из ПВР Начисления, соответствующих облагаемым взносами компенсациям, возмещаемым из бюджета ФСС 
// (в частности, оплата 4-х дополнительных выходных дней для ухода за детьми инвалидами).
//
// Параметры:
//	нет
// 
// Возвращаемое значение:
//	Массив
// 
Функция НачисленияОблагаемыхВзносамиПособий() Экспорт

	Возврат Новый Массив()
	
КонецФункции

// Функция - Категории начислений пособий по прямым выплатам ФСС
// 
// Возвращаемое значение:
//  МассивКатегорий - Массив, категории пособий, которые оплачиваются напрямую ФСС
//
Функция КатегорииНачисленийПособийПоПрямымВыплатамФСС() Экспорт
	
	МассивКатегорий = Новый Массив;
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам);
	
	Возврат МассивКатегорий;	
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПризнакВыплачиваетсяФСССуществующихДокументов(МенеджерВременныхТаблиц) Экспорт
		
КонецПроцедуры

Процедура СоздатьВТДанныеОЗаработкеДляЗаполнения(МенеджерВременныхТаблиц, ПараметрыЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыЗаполнения.Сотрудник, "ФизическоеЛицо"));
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(ПараметрыЗаполнения.Организация));
	Запрос.УстановитьПараметр("ОграничиватьРазмерЗаработка", ПараметрыЗаполнения.ОграничиватьРазмерЗаработка);
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	&ФизическоеЛицо КАК ФизическоеЛицо,
		|	&ГоловнаяОрганизация КАК ГоловнаяОрганизация
		|ПОМЕСТИТЬ ВТФизЛицаОрганизаций";
		
	Запрос.Выполнить();
	
	УчетСтраховыхВзносов.СформироватьВТРасширенныеСведенияОДоходахИВзносах(Дата(ПараметрыЗаполнения.ГодНачала, 1, 1), КонецГода(Дата(ПараметрыЗаполнения.ГодОкончания, 1, 1)), ПараметрыЗаполнения.Организация, Запрос.МенеджерВременныхТаблиц, Истина, , , , Истина);
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ГОД(СведенияОДоходах.Период) КАК РасчетныйГод,
		|	СУММА(СведенияОДоходах.БазаФСС - СведенияОДоходах.СуммаПревысившаяПределФСС) КАК Заработок
		|ПОМЕСТИТЬ ВТДанныеОЗаработкеБезОграничения
		|ИЗ
		|	ВТРасширенныеСведенияОДоходах КАК СведенияОДоходах
		|ГДЕ
		|	&ОтборПоОрганизации
		|
		|СГРУППИРОВАТЬ ПО
		|	ГОД(СведенияОДоходах.Период)
		|
		|ИМЕЮЩИЕ
		|	СУММА(СведенияОДоходах.БазаФСС - СведенияОДоходах.СуммаПревысившаяПределФСС) <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеОЗаработке.РасчетныйГод,
		|	СУММА(ВЫБОР
		|			КОГДА ДанныеОЗаработке.Заработок >= ПредельнаяВеличинаБазыСтраховыхВзносов.РазмерФСС
		|					И &ОграничиватьРазмерЗаработка
		|				ТОГДА ПредельнаяВеличинаБазыСтраховыхВзносов.РазмерФСС
		|			ИНАЧЕ ДанныеОЗаработке.Заработок
		|		КОНЕЦ) КАК Заработок
		|ПОМЕСТИТЬ ВТДанныеОЗаработкеДляЗаполнения
		|ИЗ
		|	(ВЫБРАТЬ
		|		МАКСИМУМ(ПредельнаяВеличинаБазыСтраховыхВзносов.Период) КАК Период,
		|		ДанныеОЗаработке.РасчетныйГод КАК РасчетныйГод,
		|		ДанныеОЗаработке.Заработок КАК Заработок
		|	ИЗ
		|		ВТДанныеОЗаработкеБезОграничения КАК ДанныеОЗаработке
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
		|			ПО (ДанныеОЗаработке.РасчетныйГод >= ГОД(ПредельнаяВеличинаБазыСтраховыхВзносов.Период))
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ДанныеОЗаработке.РасчетныйГод,
		|		ДанныеОЗаработке.Заработок) КАК ДанныеОЗаработке
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
		|		ПО ДанныеОЗаработке.Период = ПредельнаяВеличинаБазыСтраховыхВзносов.Период
		|ГДЕ
		|	ДанныеОЗаработке.РасчетныйГод В(&РасчетныеГоды)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеОЗаработке.РасчетныйГод";
	
	Если ПараметрыЗаполнения.ПоВсемОП Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОтборПоОрганизации","Истина");
	Иначе		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&ОтборПоОрганизации","СведенияОДоходах.Организация = &Организация");
		Запрос.УстановитьПараметр("Организация", ПараметрыЗаполнения.Организация);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РасчетныеГоды = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеОЗаработке.РасчетныйГод В(&РасчетныеГоды)", "ИСТИНА");	
	Иначе
		Запрос.УстановитьПараметр("РасчетныеГоды", ПараметрыЗаполнения.РасчетныеГоды);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса; 
	
	Запрос.Выполнить();
	
КонецПроцедуры

#Область ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов

Функция ДанныеЗаполненияЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов(Организация, Ссылка, ОплатаДнейУходаЗаДетьмиИнвалидами = Неопределено) Экспорт
	 Возврат Неопределено;
КонецФункции 

#Область ОписаниеФиксацииРеквизитовЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов

Функция ОписаниеФиксацииРеквизитовЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов() Экспорт
	
	ОписаниеФиксацииРеквизитов = Новый Соответствие;
	
	// Сотрудники
	ОписаниеФиксацииРеквизитов.Вставить("НаименованиеТерриториальногоОрганаФСС", 	ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("НаименованиеТерриториальногоОрганаФСС", 	"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("РегистрационныйНомерФСС", 					ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("РегистрационныйНомерФСС", 	"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ДополнительныйКодФСС",						ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("ДополнительныйКодФСС", 		"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("КодПодчиненностиФСС", 						ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("КодПодчиненностиФСС", 		"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ИНН",										ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("ИНН", 						"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("КПП", 										ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("КПП", 						"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("АдресОрганизации",							ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("АдресОрганизации", 			"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ТелефонСоставителя",						ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("ТелефонСоставителя", 		"Организация", "Организация", Ложь, , ""));
	
	Возврат Новый ФиксированноеСоответствие(ОписаниеФиксацииРеквизитов);
	
КонецФункции 

Функция ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов(ИмяРеквизита, 
	ИмяГруппы = "Оплаты", 
	ОснованиеЗаполнения = "ДокументОснование",
	РеквизитСтроки = Истина,
	ФиксацияГруппы = Ложь, 
	Путь = "Оплаты",
	Используется = Истина, 
	ОтображатьПредупреждение = Истина, 
	СтрокаПредупреждения =  "") Экспорт
	
	ФиксацияРеквизита = ФиксацияВторичныхДанныхВДокументах.СтруктураПараметровОписанияФиксацииРеквизитов();
	ФиксацияРеквизита.Вставить("Используется", Используется);
	ФиксацияРеквизита.Вставить("ИмяРеквизита", ИмяРеквизита);
	ФиксацияРеквизита.Вставить("ИмяГруппы", ИмяГруппы);
	ФиксацияРеквизита.Вставить("ФиксацияГруппы", ФиксацияГруппы);
	ФиксацияРеквизита.Вставить("ОснованиеЗаполнения", ОснованиеЗаполнения);
	ФиксацияРеквизита.Вставить("Путь", Путь);
	ФиксацияРеквизита.Вставить("ОтображатьПредупреждение", ОтображатьПредупреждение);
	Если СтрокаПредупреждения <> "" Тогда
		ФиксацияРеквизита.Вставить("СтрокаПредупреждения", СтрокаПредупреждения);
	КонецЕсли;
	ФиксацияРеквизита.Вставить("РеквизитСтроки", РеквизитСтроки);
	
	Возврат ФиксацияВторичныхДанныхВДокументах.ОписаниеФиксацииРеквизита(ФиксацияРеквизита);
	
КонецФункции

#КонецОбласти

Функция ИспользуетсяЗаполнениеДокументаЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов() Экспорт

	Возврат Ложь;
	
КонецФункции 

#КонецОбласти

#Область ЗаявлениеВФССОВозмещенииРасходовНаПогребение

Функция ДанныеЗаполненияЗаявленияВФССОВозмещенииРасходовНаПогребение(Организация, Ссылка, ЕдиновременноеПособие = Неопределено) Экспорт
	
	Возврат Неопределено;
	
КонецФункции 

#Область ОписаниеФиксацииРеквизитовЗаявленияВФССОВозмещенииРасходовНаПогребение

Функция ОписаниеФиксацииРеквизитовЗаявленияВФССОВозмещенииРасходовНаПогребение() Экспорт
	
	ОписаниеФиксацииРеквизитов = Новый Соответствие;
	
	// Сотрудники
	ОписаниеФиксацииРеквизитов.Вставить("НаименованиеТерриториальногоОрганаФСС", 	ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("НаименованиеТерриториальногоОрганаФСС", 	"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("РегистрационныйНомерФСС", 					ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("РегистрационныйНомерФСС", 	"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ДополнительныйКодФСС",						ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("ДополнительныйКодФСС", 		"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("КодПодчиненностиФСС", 						ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("КодПодчиненностиФСС", 		"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ИНН",										ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("ИНН", 						"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("КПП", 										ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("КПП", 						"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("АдресОрганизации",							ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("АдресОрганизации", 			"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ТелефонСоставителя",						ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("ТелефонСоставителя", 		"Организация", "Организация", Ложь, , ""));
	
	Возврат Новый ФиксированноеСоответствие(ОписаниеФиксацииРеквизитов);
	
КонецФункции 

Функция ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение(ИмяРеквизита, 
	ИмяГруппы = "Оплаты", 
	ОснованиеЗаполнения = "ДокументОснование",
	РеквизитСтроки = Истина,
	ФиксацияГруппы = Ложь, 
	Путь = "Оплаты",
	Используется = Истина, 
	ОтображатьПредупреждение = Истина, 
	СтрокаПредупреждения =  "") Экспорт
	
	ФиксацияРеквизита = ФиксацияВторичныхДанныхВДокументах.СтруктураПараметровОписанияФиксацииРеквизитов();
	ФиксацияРеквизита.Вставить("Используется", Используется);
	ФиксацияРеквизита.Вставить("ИмяРеквизита", ИмяРеквизита);
	ФиксацияРеквизита.Вставить("ИмяГруппы", ИмяГруппы);
	ФиксацияРеквизита.Вставить("ФиксацияГруппы", ФиксацияГруппы);
	ФиксацияРеквизита.Вставить("ОснованиеЗаполнения", ОснованиеЗаполнения);
	ФиксацияРеквизита.Вставить("Путь", Путь);
	ФиксацияРеквизита.Вставить("ОтображатьПредупреждение", ОтображатьПредупреждение);
	Если СтрокаПредупреждения <> "" Тогда
		ФиксацияРеквизита.Вставить("СтрокаПредупреждения", СтрокаПредупреждения);
	КонецЕсли;
	ФиксацияРеквизита.Вставить("РеквизитСтроки", РеквизитСтроки);
	
	Возврат ФиксацияВторичныхДанныхВДокументах.ОписаниеФиксацииРеквизита(ФиксацияРеквизита);
	
КонецФункции

#КонецОбласти

Функция ИспользуетсяЗаполнениеЗаявленияВФССОВозмещенииРасходовНаПогребение() Экспорт
	
	Возврат Ложь;
	
КонецФункции 

#КонецОбласти

#Область ЗаявлениеСотрудникаНаВыплатуПособия
	
Функция ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоОснованию(Объект) Экспорт
	
	Модифицирован = Ложь;
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		
		РеквизитыДокумента = Новый Структура;
		
		Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.БольничныйЛист") Тогда
			ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоБольничномуЛисту(Объект, РеквизитыДокумента);
		ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.Отпуск") Тогда
			ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоОтпуску(Объект, РеквизитыДокумента);
		КонецЕсли;
		
		Запрос = ПрямыеВыплатыПособийСоциальногоСтрахования.ЗапросПоСтруктуре(РеквизитыДокумента);
		Запрос.Выполнить();
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Объект.Метаданные().ПолноеИмя());
		ПараметрыФиксацииВторичныхДанных = МенеджерОбъекта.ПараметрыФиксацииВторичныхДанных(Объект);
		Модифицирован = ФиксацияВторичныхДанныхВДокументах.ОбновитьВторичныеДанные(Запрос.МенеджерВременныхТаблиц, Объект, , , ПараметрыФиксацииВторичныхДанных);
		
	КонецЕсли;
	
	Возврат Модифицирован;
	
КонецФункции 

Процедура ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоБольничномуЛисту(Объект, РеквизитыДокумента)
	
	НеобходимыеРеквизиты = Новый Массив;
	НеобходимыеРеквизиты.Добавить("Организация");
	НеобходимыеРеквизиты.Добавить("Сотрудник"); 
	НеобходимыеРеквизиты.Добавить("ПричинаНетрудоспособности"); 
	НеобходимыеРеквизиты.Добавить("НомерЛисткаНетрудоспособности"); 
	НеобходимыеРеквизиты.Добавить("СреднийДневнойЗаработок");
	НеобходимыеРеквизиты.Добавить("МинимальныйСреднедневнойЗаработок");
	НеобходимыеРеквизиты.Добавить("ДатаВыдачиЛисткаНетрудоспособности"); 
	НеобходимыеРеквизиты.Добавить("ПоставленаНаУчетВРанниеСрокиБеременности");
	
	РеквизитыДокументаОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ДокументОснование, НеобходимыеРеквизиты);
	
	ПричинаНетрудоспособности = Неопределено;
	ПоставленаНаУчетВРанниеСрокиБеременности = Ложь;
	Если РеквизитыДокументаОснования.Свойство("ПричинаНетрудоспособности", ПричинаНетрудоспособности) Тогда
		Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
			Если РеквизитыДокументаОснования.Свойство("ПоставленаНаУчетВРанниеСрокиБеременности", ПоставленаНаУчетВРанниеСрокиБеременности) 
				И ПоставленаНаУчетВРанниеСрокиБеременности Тогда
				РеквизитыДокумента.Вставить("ВидПособия",  Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки);
			Иначе	
				РеквизитыДокумента.Вставить("ВидПособия",  Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам);
			КонецЕсли;
		ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве
			Или ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.Профзаболевание Тогда	
			РеквизитыДокумента.Вставить("ВидПособия",  Перечисления.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве);
		Иначе	                                                                           
			РеквизитыДокумента.Вставить("ВидПособия", Перечисления.ПособияНазначаемыеФСС.ПособиеПоВременнойНетрудоспособности);
		КонецЕсли;
	КонецЕсли;  
	
	ОрганизацияОснования = Неопределено;                                                                              
	СотрудникОснования = Неопределено; 
	НомерЛисткаНетрудоспособностиОснования = Неопределено; 
	ДатаЛисткаНетрудоспособностиОснования = Неопределено;    
	СреднийЗаработокЗаРасчетныйПериодОснования = Неопределено;  
	МинимальныйСреднедневнойЗаработокОснования = Неопределено;  
	
	РеквизитыДокументаОснования.Свойство("Организация", 						ОрганизацияОснования);
	РеквизитыДокументаОснования.Свойство("Сотрудник", 							СотрудникОснования);
	РеквизитыДокументаОснования.Свойство("НомерЛисткаНетрудоспособности", 		НомерЛисткаНетрудоспособностиОснования);
	РеквизитыДокументаОснования.Свойство("ДатаВыдачиЛисткаНетрудоспособности", 	ДатаЛисткаНетрудоспособностиОснования);
	РеквизитыДокументаОснования.Свойство("СреднийДневнойЗаработок", 			СреднийЗаработокЗаРасчетныйПериодОснования);
	РеквизитыДокументаОснования.Свойство("МинимальныйСреднедневнойЗаработок", 	МинимальныйСреднедневнойЗаработокОснования);
	
	РеквизитыДокумента.Вставить("Организация", 						ОрганизацияОснования);
	РеквизитыДокумента.Вставить("Сотрудник", 						СотрудникОснования);
	РеквизитыДокумента.Вставить("НомерЛисткаНетрудоспособности", 	НомерЛисткаНетрудоспособностиОснования);
	РеквизитыДокумента.Вставить("ДатаЛисткаНетрудоспособности", 	ДатаЛисткаНетрудоспособностиОснования);
	РеквизитыДокумента.Вставить("СреднийЗаработокЗаРасчетныйПериод", Макс(СреднийЗаработокЗаРасчетныйПериодОснования, МинимальныйСреднедневнойЗаработокОснования));
		
	ДанныеДокументовДляРасчетаСреднегоЗаработка = Документы.БольничныйЛист.ДанныеДокументовДляРасчетаСреднегоЗаработкаФСС(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.ДокументОснование));
	
	ЗаполнитьРеквизитыРасчетаСреднегоЗаработкаВЗаявленииСотрудникаНаВыплатуПособия(РеквизитыДокумента, ДанныеДокументовДляРасчетаСреднегоЗаработка.Получить(Объект.ДокументОснование));
	
КонецПроцедуры

Процедура ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоОтпуску(Объект, РеквизитыДокумента)
	
	НеобходимыеРеквизиты = Новый Массив;
	НеобходимыеРеквизиты.Добавить("Организация");
	НеобходимыеРеквизиты.Добавить("Сотрудник"); 
	
	РеквизитыДокументаОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ДокументОснование, НеобходимыеРеквизиты);
	
	ОрганизацияОснования = Неопределено;                                                                              
	СотрудникОснования = Неопределено; 
	ИсправленныйДокумент = Неопределено;
	
	РеквизитыДокументаОснования.Свойство("Организация", ОрганизацияОснования);
	РеквизитыДокументаОснования.Свойство("Сотрудник", СотрудникОснования);
	
	РеквизитыДокумента.Вставить("Организация", ОрганизацияОснования);
	РеквизитыДокумента.Вставить("Сотрудник", СотрудникОснования);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыРасчетаСреднегоЗаработкаВЗаявленииСотрудникаНаВыплатуПособия(РеквизитыДокумента, ДанныеДокументовДляРасчетаСреднегоЗаработка)
	
	ПараметрыРасчета = ДанныеДокументовДляРасчетаСреднегоЗаработка.ПараметрыРасчета;
	ДанныеРасчетаСреднего = ДанныеДокументовДляРасчетаСреднегоЗаработка.ДанныеРасчетаСреднего;
	
	РеквизитыДокумента.Вставить("ДатаНачалаРасчетногоПериода", 		ПараметрыРасчета.ПериодРасчетаСреднегоЗаработкаНачало);
	РеквизитыДокумента.Вставить("ДатаОкончанияРасчетногоПериода", 	ПараметрыРасчета.ПериодРасчетаСреднегоЗаработкаОкончание);
	РеквизитыДокумента.Вставить("ПервыйРасчетныйГод", 				ПараметрыРасчета.РасчетныеГоды[0]);
	РеквизитыДокумента.Вставить("ВторойРасчетныйГод", 				ПараметрыРасчета.РасчетныеГоды[1]);			
	РеквизитыДокумента.Вставить("РайонныйКоэффициент", 				ПараметрыРасчета.РайонныйКоэффициентРФ);
	РеквизитыДокумента.Вставить("РазмерСтавки", 					УчетПособийСоциальногоСтрахованияКлиентСервер.ДоляНеполногоВремени(ПараметрыРасчета));
	РеквизитыДокумента.Вставить("НеполноеРабочееВремя", 			РеквизитыДокумента.РазмерСтавки < 1);

	Если ЗначениеЗаполнено(ПараметрыРасчета.ДатаНачалаСобытия)
		И ЗначениеЗаполнено(ПараметрыРасчета.ПорядокРасчета) Тогда
		
		ПериодРасчетаСреднего = УчетПособийСоциальногоСтрахованияКлиентСервер.ПериодРасчетаСреднегоЗаработкаФСС(ПараметрыРасчета.ДатаНачалаСобытия, ПараметрыРасчета.ПорядокРасчета);
		
		ПервыйГодПоДатеСобытия = Год(ПериодРасчетаСреднего.ДатаНачала);
		ВторойГодПоДатеСобытия = Год(ПериодРасчетаСреднего.ДатаОкончания);
		
		// Поменять периоды местами, если в действительности заменялся только один из периодов.
		ПоменятьМестами = (ПервыйГодПоДатеСобытия = РеквизитыДокумента.ВторойРасчетныйГод
			Или ВторойГодПоДатеСобытия = РеквизитыДокумента.ПервыйРасчетныйГод);
		
		РеквизитыДокумента.Вставить("ПервыйЗамененныйГод", ?(ПоменятьМестами, ВторойГодПоДатеСобытия, ПервыйГодПоДатеСобытия));
		РеквизитыДокумента.Вставить("ВторойЗамененныйГод", ?(ПоменятьМестами, ПервыйГодПоДатеСобытия, ВторойГодПоДатеСобытия));
		
		Если РеквизитыДокумента.ПервыйЗамененныйГод <> РеквизитыДокумента.ПервыйРасчетныйГод 
			Или РеквизитыДокумента.ВторойЗамененныйГод <> РеквизитыДокумента.ВторойРасчетныйГод Тогда
			РеквизитыДокумента.Вставить("ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка", Истина);
		Иначе 
			РеквизитыДокумента.Вставить("ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	УчитываемыхДнейВКалендарныхГодах = УчетПособийСоциальногоСтрахованияКлиентСервер.УчитываемыхДнейВКалендарныхГодахФСС(ПараметрыРасчета, ДанныеРасчетаСреднего);
	РеквизитыДокумента.Вставить("ЧислоКалендарныхДнейРасчетногоПериода", УчитываемыхДнейВКалендарныхГодах);	
	
	СтрокаПоГоду = УчетПособийСоциальногоСтрахованияКлиентСервер.ЭлементКоллекцииПоОтбору(ДанныеРасчетаСреднего, Новый Структура("РасчетныйГод", РеквизитыДокумента.ПервыйРасчетныйГод));
	Если НЕ СтрокаПоГоду = Неопределено Тогда
		РеквизитыДокумента.Вставить("ЗаработокПервыйГодРасчета", УчетПособийСоциальногоСтрахованияКлиентСервер.УчитываемыйЗаработокФССПоГоду(ПараметрыРасчета, СтрокаПоГоду));
	иначе
		РеквизитыДокумента.Вставить("ЗаработокПервыйГодРасчета", 0);
	КонецЕсли;
	
	СтрокаПоГоду = УчетПособийСоциальногоСтрахованияКлиентСервер.ЭлементКоллекцииПоОтбору(ДанныеРасчетаСреднего, Новый Структура("РасчетныйГод", РеквизитыДокумента.ВторойРасчетныйГод));
	Если НЕ СтрокаПоГоду = Неопределено Тогда
		РеквизитыДокумента.Вставить("ЗаработокВторойГодРасчета", УчетПособийСоциальногоСтрахованияКлиентСервер.УчитываемыйЗаработокФССПоГоду(ПараметрыРасчета, СтрокаПоГоду));
	иначе
		РеквизитыДокумента.Вставить("ЗаработокВторойГодРасчета", 0);
	КонецЕсли;
	
КонецПроцедуры

Функция РайонныйКоэффициентРФПодразделенияОрганизацииДляЗаявленияСотрудникаНаВыплатуПособия(Организация, Подразделение = Неопределено) Экспорт
	
	Возврат Неопределено;
	
КонецФункции

Функция ТипДокументаОснованияЗаявленияСотрудникаНаВыплатуПособия(ВидПособия) Экспорт
	
	ПустоеЗначение = Документы.БольничныйЛист.ПустаяСсылка();
	
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ОтпускСверхЕжегодногоНаПериодЛечения Тогда
		ПустоеЗначение = Документы.Отпуск.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ПустоеЗначение;
	
КонецФункции

Функция СписокДетейПоУходуЗаКоторымиПредоставленОтпуск(ДокументОснование) Экспорт
	
	ДанныеОДетях = Новый СписокЗначений;
	
	Возврат ДанныеОДетях;
	
КонецФункции

Функция ВидПособияИмеетДокументОснование(ВидПособия) Экспорт
	
	ВидПособияИмеетДокументОснование = Ложь;
	
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоВременнойНетрудоспособности
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки 
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ОтпускСверхЕжегодногоНаПериодЛечения Тогда
		ВидПособияИмеетДокументОснование = Истина; 
	КонецЕсли;
	
	Возврат ВидПособияИмеетДокументОснование;
	
КонецФункции

Функция ДоляРабочегоВремениСотрудника(Сотрудник, Дата) Экспорт
	
	Возврат 1;
	
КонецФункции

Процедура ДобавитьКомандыПечатиЗаявленияСотрудникаНаВыплатуПособия(КомандыПечати) Экспорт 
	
	// Печать заявления о выплате пособия.
	ПравоЧтенияПлановыхНачислений = КадровыйУчет.ПравоНаРазделУчета("Чтение", "ПлановыеНачисления");
	Если ПравоЧтенияПлановыхНачислений Тогда
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
		КомандаПечати.Идентификатор = "ЗаявлениеСотрудникаНаВыплатуПособия";
		КомандаПечати.Представление = НСтр("ru = 'Заявления о выплате пособия (оплате отпуска)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособий

Функция СведенияБольничныхЛистовНеобходимыеДляНазначенияИВыплатыПособий(Объект, Заявление = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Текст = ТекстЗапросаСписокЗаявлений(Заявление);
	Текст = Текст +	"
	|; 
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Заявления.Ссылка КАК Заявление,
	|	МИНИМУМ(БольничныйЛистНачисления.ДатаНачала) КАК ДатаНачала,
	|	МАКСИМУМ(БольничныйЛистНачисления.ДатаОкончания) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТПериодыОплатыЗаСчетФСС
	|ИЗ
	|	Заявления КАК Заявления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.БольничныйЛист.Начисления КАК БольничныйЛистНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК Начисления
	|			ПО БольничныйЛистНачисления.Начисление = Начисления.Ссылка
	|		ПО Заявления.ДокументОснование = БольничныйЛистНачисления.Ссылка
	|ГДЕ
	|	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В(&МассивКатегорий)
	|
	|СГРУППИРОВАТЬ ПО
	|	Заявления.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Заявления.Ссылка КАК Заявление,
	|	БольничныйЛист.Ссылка КАК ПервичныйДокумент,
	|	БольничныйЛист.ПредоставленДубликатЛисткаНетрудоспособности,
	|	НЕ БольничныйЛист.ЯвляетсяПродолжениемБолезни КАК ЯвляетсяПервичнымЛисткомНетрудоспособности,
	|	БольничныйЛист.НомерПервичногоЛисткаНетрудоспособности,
	|	БольничныйЛист.МедицинскаяОрганизация,
	|	БольничныйЛист.НаименованиеМедицинскойОрганизации,
	|	БольничныйЛист.АдресМедицинскойОрганизации,
	|	БольничныйЛист.ОГРНМедицинскойОрганизации,
	|	БольничныйЛист.НомерЛисткаНетрудоспособности,
	|	БольничныйЛист.ДатаВыдачиЛисткаНетрудоспособности,
	|	БольничныйЛист.КодПричиныНетрудоспособности,
	|	БольничныйЛист.ДополнительныйКодПричиныНетрудоспособности,
	|	БольничныйЛист.ВторойКодПричиныНетрудоспособности,
	|	БольничныйЛист.НаименованиеОрганизацииВЛисткеНетрудоспособности,
	|	БольничныйЛист.ОсновноеМестоРаботы,
	|	БольничныйЛист.НомерЛисткаПоОсновномуМестуРаботы,
	|	БольничныйЛист.ДатаИзмененияКодаПричиныНетрудоспособности,
	|	БольничныйЛист.ДатаОкончанияПутевки,
	|	БольничныйЛист.НомерПутевки,
	|	БольничныйЛист.ОГРН_Санатория,
	|	БольничныйЛист.ПоУходуВозрастЛет1,
	|	БольничныйЛист.ПоУходуВозрастМесяцев1,
	|	БольничныйЛист.ПоУходуРодственнаяСвязь1,
	|	БольничныйЛист.ПоУходуФИО1,
	|	БольничныйЛист.ПоУходуИспользованоДней1,
	|	БольничныйЛист.ПоУходуВозрастЛет2,
	|	БольничныйЛист.ПоУходуВозрастМесяцев2,
	|	БольничныйЛист.ПоУходуРодственнаяСвязь2,
	|	БольничныйЛист.ПоУходуФИО2,
	|	БольничныйЛист.ПоУходуИспользованоДней2,
	|	БольничныйЛист.ПоставленаНаУчетВРанниеСрокиБеременности,
	|	БольничныйЛист.КодНарушенияРежима,
	|	БольничныйЛист.ДатаНарушенияРежима,
	|	БольничныйЛист.ПериодНахожденияВСтационареСРебенкомС,
	|	БольничныйЛист.ПериодНахожденияВСтационареСРебенкомПо,
	|	БольничныйЛист.ДатаНаправленияВБюроМСЭ,
	|	БольничныйЛист.ДатаРегистрацииДокументовМСЭ,
	|	БольничныйЛист.ДатаОсвидетельствованияМСЭ,
	|	БольничныйЛист.ГруппаИнвалидности,
	|	БольничныйЛист.ОсвобождениеДатаНачала1,
	|	БольничныйЛист.ОсвобождениеДатаОкончания1,
	|	БольничныйЛист.ОсвобождениеДолжностьВрача1,
	|	БольничныйЛист.ОсвобождениеФИОВрача1,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрача1,
	|	БольничныйЛист.ОсвобождениеФИОВрачаПредседателяВК1,
	|	БольничныйЛист.ОсвобождениеДолжностьВрачаПредседателяВК1,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрачаПредседателяВК1,
	|	БольничныйЛист.ОсвобождениеДатаНачала2,
	|	БольничныйЛист.ОсвобождениеДатаОкончания2,
	|	БольничныйЛист.ОсвобождениеДолжностьВрача2,
	|	БольничныйЛист.ОсвобождениеФИОВрача2,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрача2,
	|	БольничныйЛист.ОсвобождениеФИОВрачаПредседателяВК2,
	|	БольничныйЛист.ОсвобождениеДолжностьВрачаПредседателяВК2,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрачаПредседателяВК2,
	|	БольничныйЛист.ОсвобождениеДатаНачала3,
	|	БольничныйЛист.ОсвобождениеДатаОкончания3,
	|	БольничныйЛист.ОсвобождениеДолжностьВрача3,
	|	БольничныйЛист.ОсвобождениеФИОВрача3,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрача3,
	|	БольничныйЛист.ОсвобождениеФИОВрачаПредседателяВК3,
	|	БольничныйЛист.ОсвобождениеДолжностьВрачаПредседателяВК3,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрачаПредседателяВК3,
	|	БольничныйЛист.ПриступитьКРаботеС,
	|	БольничныйЛист.ДатаНовыйСтатусНетрудоспособного,
	|	БольничныйЛист.НовыйСтатусНетрудоспособного,
	|	БольничныйЛист.НомерЛисткаПродолжения,
	|	БольничныйЛист.УсловияИсчисленияКод1,
	|	БольничныйЛист.УсловияИсчисленияКод2,
	|	БольничныйЛист.УсловияИсчисленияКод3,
	|	БольничныйЛист.ДатаАктаН1,
	|	БольничныйЛист.ДатаНачалаРаботы,
	|	БольничныйЛист.ФинансированиеФедеральнымБюджетом,
	|	ВТПериодыОплатыЗаСчетФСС.ДатаНачала КАК ДатаНачалаОплаты,
	|	ВТПериодыОплатыЗаСчетФСС.ДатаОкончания КАК ДатаОкончанияОплаты
	|ИЗ
	|	Заявления КАК Заявления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.БольничныйЛист КАК БольничныйЛист
	|		ПО Заявления.ДокументОснование = БольничныйЛист.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыОплатыЗаСчетФСС КАК ВТПериодыОплатыЗаСчетФСС
	|		ПО Заявления.Ссылка = ВТПериодыОплатыЗаСчетФСС.Заявление";
	
	Запрос.Текст = Текст;
	
	Запрос.УстановитьПараметр("ВидРеестра", Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПособияПоНетрудоспособности);
	Запрос.УстановитьПараметр("МассивКатегорий", ПрямыеВыплатыПособийСоциальногоСтрахования.КатегорииНачисленийПособийПоПрямымВыплатамФСС());
	
	Если ЗначениеЗаполнено(Заявление) Тогда
		Запрос.УстановитьПараметр("Ссылка", Заявление);
	Иначе	
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СведенияОтпусковПоУходуНеобходимыеДляНазначенияИВыплатыПособий(Объект, Заявление = Неопределено) Экспорт
	
	Текст = ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ТекстЗапросаСписокЗаявлений(Заявление);
	Текст = Текст +	"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявления.Ссылка КАК Заявление,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ФамилияРебенка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ИмяРебенка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ОтчествоРебенка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРожденияРебенка,
	|	ВЫБОР
	|		КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСвидетельстваОРождении = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОРождении)
	|		КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРешенияОбОпеке = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ВидыПодтверждающихДокументовОтпускаПоУходу.РешениеОбУстановленииОпеки)
	|		КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаИногоДокументаПодтверждающегоРождение = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ВидыПодтверждающихДокументовОтпускаПоУходу.ИнойДокументПодтверждающийРождениеРебенка)
	|	КОНЕЦ КАК ВидПодтверждающегоДокумента,
	|	ВЫБОР
	|		КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСвидетельстваОРождении = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСвидетельстваОРождении
	|		КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРешенияОбОпеке = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРешенияОбОпеке
	|		КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаИногоДокументаПодтверждающегоРождение = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ДатаИногоДокументаПодтверждающегоРождение
	|	КОНЕЦ КАК ДатаДокумента,
	|	ВЫБОР
	|		КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСвидетельстваОРождении = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.СерияСвидетельстваОРождении
	|	КОНЕЦ КАК СерияДокумента,
	|	ВЫБОР
	|		КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСвидетельстваОРождении = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.НомерСвидетельстваОРождении
	|		КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРешенияОбОпеке = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.НомерРешенияОбОпеке
	|		КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаИногоДокументаПодтверждающегоРождение = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.НомерИногоДокументаПодтверждающегоРождение
	|	КОНЕЦ КАК НомерДокумента,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ФинансированиеФедеральнымБюджетом
	|ИЗ
	|	Заявления КАК Заявления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК ЗаявлениеСотрудникаНаВыплатуПособия
	|		ПО Заявления.Ссылка = ЗаявлениеСотрудникаНаВыплатуПособия.Ссылка";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = Текст;
	
	Запрос.УстановитьПараметр("ВидРеестра", Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ЕжемесячныеПособияПоУходуЗаРебенком);
	
	Если ЗначениеЗаполнено(Заявление) Тогда
		Запрос.УстановитьПараметр("Ссылка", Заявление);
	Иначе	
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
КонецФункции

Функция ТекстЗапросаСписокЗаявлений(Заявление) Экспорт
	Если ЗначениеЗаполнено(Заявление) Тогда
		Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Заявления.Ссылка,
		|	Заявления.ДокументОснование,
		|	Заявления.ИдентификаторСтрокиОснования
		|ПОМЕСТИТЬ Заявления
		|ИЗ
		|	Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК Заявления
		|ГДЕ
		|	Заявления.Ссылка = &Ссылка";
	Иначе
		Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РеестрСведенийУчтенных.Заявление
		|ПОМЕСТИТЬ УчтенныеЗаявления
		|ИЗ
		|	Документ.РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособий.СведенияНеобходимыеДляНазначенияПособий КАК РеестрСведенийУчтенных
		|ГДЕ
		|	РеестрСведенийУчтенных.Ссылка <> &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Заявления.Ссылка,
		|	Заявления.ДокументОснование,
		|	Заявления.ИдентификаторСтрокиОснования
		|ПОМЕСТИТЬ Заявления
		|ИЗ
		|	Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК Заявления
		|ГДЕ
		|	Заявления.ВидРеестра = &ВидРеестра
		|	И Заявления.Проведен
		|	И НЕ Заявления.Ссылка В
		|				(ВЫБРАТЬ
		|					УчтенныеЗаявления.Заявление
		|				ИЗ
		|					УчтенныеЗаявления КАК УчтенныеЗаявления)
		|	И Заявления.Организация = &Организация";
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции 

Функция ОписаниеФиксацииРеквизитовРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий() Экспорт
	
	ОписаниеФиксацииРеквизитов = Новый Соответствие;
	
	// Сотрудники
	ОписаниеФиксацииРеквизитов.Вставить("РегистрационныйНомерФСС", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("РегистрационныйНомерФСС", "Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ДополнительныйКодФСС",	ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДополнительныйКодФСС", "Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("КодПодчиненностиФСС", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("КодПодчиненностиФСС", "Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ОГРН", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОГРН", "Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("КПП",	ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("КПП", "Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ИНН", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ИНН", "Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("Руководитель", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("Руководитель", "Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ДолжностьРуководителя",	ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДолжностьРуководителя", "Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ГлавныйБухгалтер", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ГлавныйБухгалтер", "Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ТелефонСоставителя", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ТелефонСоставителя", "Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("АдресЭлектроннойПочтыСоставителя", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("АдресЭлектроннойПочтыСоставителя", "Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("РеестрСоставил", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("РеестрСоставил", "Организация", "Организация", Ложь, , ""));
	
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийПервичныйДокумент",							ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ПервичныйДокумент"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийНомерЛисткаНетрудоспособности",				ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("НомерЛисткаНетрудоспособности"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийНомерПервичногоЛисткаНетрудоспособности",	ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("НомерПервичногоЛисткаНетрудоспособности"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийЯвляетсяПервичнымЛисткомНетрудоспособности", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ЯвляетсяПервичнымЛисткомНетрудоспособности"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийПредоставленДубликатЛисткаНетрудоспособности", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ПредоставленДубликатЛисткаНетрудоспособности"));
	
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийДатаВыдачиЛисткаНетрудоспособности", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДатаВыдачиЛисткаНетрудоспособности"));
	
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийМедицинскаяОрганизация", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("МедицинскаяОрганизация",,"МедицинскаяОрганизация"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийНаименованиеМедицинскойОрганизации", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("НаименованиеМедицинскойОрганизации",,"МедицинскаяОрганизация"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийАдресМедицинскойОрганизации", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("АдресМедицинскойОрганизации",,"МедицинскаяОрганизация"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОГРНМедицинскойОрганизации", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОГРНМедицинскойОрганизации",,"МедицинскаяОрганизация"));
	
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийНомерЛисткаПоОсновномуМестуРаботы", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("НомерЛисткаПоОсновномуМестуРаботы"));
	
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособий", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДатаИзмененияКодаПричиныНетрудоспособности"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийДатаОкончанияПутевки", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДатаОкончанияПутевки"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийНомерПутевки", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("НомерПутевки"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОГРН_Санатория", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОГРН_Санатория"));
	
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийКодПричиныНетрудоспособности", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("КодПричиныНетрудоспособности"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийДополнительныйКодПричиныНетрудоспособности", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДополнительныйКодПричиныНетрудоспособности"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийВторойКодПричиныНетрудоспособности", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ВторойКодПричиныНетрудоспособности"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийНаименованиеОрганизацииВЛисткеНетрудоспособности", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("НаименованиеОрганизацииВЛисткеНетрудоспособности"));
	
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсновноеМестоРаботы", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсновноеМестоРаботы"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийПоУходуВозрастЛет1", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ПоУходуВозрастЛет1"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийПоУходуВозрастМесяцев1", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ПоУходуВозрастМесяцев1"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийПоУходуРодственнаяСвязь1", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ПоУходуРодственнаяСвязь1"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийПоУходуФИО1", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ПоУходуФИО1"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийПоУходуИспользованоДней1", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ПоУходуИспользованоДней1"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийПоУходуВозрастЛет2", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ПоУходуВозрастЛет2"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийПоУходуВозрастМесяцев2", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ПоУходуВозрастМесяцев2"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийПоУходуРодственнаяСвязь2", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ПоУходуРодственнаяСвязь2"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийПоУходуФИО2", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ПоУходуФИО2"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийПоУходуИспользованоДней2", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ПоУходуИспользованоДней2"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийПоставленаНаУчетВРанниеСрокиБеременности", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ПоставленаНаУчетВРанниеСрокиБеременности"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийКодНарушенияРежима", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("КодНарушенияРежима"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийДатаНарушенияРежима", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДатаНарушенияРежима"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийПериодНахожденияВСтационареСРебенкомС", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ПериодНахожденияВСтационареСРебенкомС"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийПериодНахожденияВСтационареСРебенкомПо", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ПериодНахожденияВСтационареСРебенкомПо"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийДатаНаправленияВБюроМСЭ", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДатаНаправленияВБюроМСЭ"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийДатаРегистрацииДокументовМСЭ", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДатаРегистрацииДокументовМСЭ"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийДатаОсвидетельствованияМСЭ", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДатаОсвидетельствованияМСЭ"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийГруппаИнвалидности", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ГруппаИнвалидности"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеДатаНачала1", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеДатаНачала1"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеДатаОкончания1", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеДатаОкончания1"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеДолжностьВрача1", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеДолжностьВрача1"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеФИОВрача1", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеФИОВрача1"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеИдентификационныйНомерВрача1", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеИдентификационныйНомерВрача1"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеФИОВрачаПредседателяВК1", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеФИОВрачаПредседателяВК1"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеДолжностьВрачаПредседателяВК1", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеДолжностьВрачаПредседателяВК1"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеИдентификационныйНомерВрачаПредседателяВК1", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеИдентификационныйНомерВрачаПредседателяВК1"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеДатаНачала2", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеДатаНачала2"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеДатаОкончания2", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеДатаОкончания2"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеДолжностьВрача2", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеДолжностьВрача2"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеФИОВрача2", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеФИОВрача2"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеИдентификационныйНомерВрача2", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеИдентификационныйНомерВрача2"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеФИОВрачаПредседателяВК2", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеФИОВрачаПредседателяВК2"));                                 
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеДолжностьВрачаПредседателяВК2", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеДолжностьВрачаПредседателяВК2"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеИдентификационныйНомерВрачаПредседателяВК2", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеИдентификационныйНомерВрачаПредседателяВК2"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеДатаНачала3", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеДатаНачала3"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеДатаОкончания3", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеДатаОкончания3"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеДолжностьВрача3", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеДолжностьВрача3"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеФИОВрача3", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеФИОВрача3"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеИдентификационныйНомерВрача3", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеИдентификационныйНомерВрача3"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеФИОВрачаПредседателяВК3", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеФИОВрачаПредседателяВК3"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеДолжностьВрачаПредседателяВК3", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеДолжностьВрачаПредседателяВК3"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОсвобождениеИдентификационныйНомерВрачаПредседателяВК3", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОсвобождениеИдентификационныйНомерВрачаПредседателяВК3"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийПриступитьКРаботеС", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ПриступитьКРаботеС"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийДатаНовыйСтатусНетрудоспособного", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДатаНовыйСтатусНетрудоспособного"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийНовыйСтатусНетрудоспособного", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("НовыйСтатусНетрудоспособного"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийНомерЛисткаПродолжения", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("НомерЛисткаПродолжения"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийУсловияИсчисленияКод1", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("УсловияИсчисленияКод1"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийУсловияИсчисленияКод2", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("УсловияИсчисленияКод2"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийУсловияИсчисленияКод3", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("УсловияИсчисленияКод3"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийДатаАктаН1", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДатаАктаН1"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийДатаНачалаРаботы", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДатаНачалаРаботы"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийДатаНачалаОплаты", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДатаНачалаОплаты"));          
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийДатаОкончанияОплаты", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДатаОкончанияОплаты"));
	
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийФамилияРебенка", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ФамилияРебенка", "ЕжемесячныеПособияПоУходуЗаРебенком"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийИмяРебенка", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ИмяРебенка", "ЕжемесячныеПособияПоУходуЗаРебенком"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийОтчествоРебенка", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОтчествоРебенка", "ЕжемесячныеПособияПоУходуЗаРебенком"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийДатаРожденияРебенка", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДатаРожденияРебенка", "ЕжемесячныеПособияПоУходуЗаРебенком"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийВидПодтверждающегоДокумента", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ВидПодтверждающегоДокумента", "ЕжемесячныеПособияПоУходуЗаРебенком"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийДатаДокумента", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ДатаДокумента", "ЕжемесячныеПособияПоУходуЗаРебенком"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийСерияДокумента", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("СерияДокумента", "ЕжемесячныеПособияПоУходуЗаРебенком"));
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийНомерДокумента", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("НомерДокумента", "ЕжемесячныеПособияПоУходуЗаРебенком"));  
	ОписаниеФиксацииРеквизитов.Вставить("СведенияНеобходимыеДляНазначенияПособийФинансированиеФедеральнымБюджетом", ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ФинансированиеФедеральнымБюджетом", "ЕжемесячныеПособияПоУходуЗаРебенком"));  
	
	Возврат Новый ФиксированноеСоответствие(ОписаниеФиксацииРеквизитов);
	
КонецФункции 

Функция ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий(ИмяРеквизита, 
	ИмяГруппы = "ПособияПоНетрудоспособности", 
	ОснованиеЗаполнения = "ПервичныйДокумент",
	РеквизитСтроки = Истина,
	ФиксацияГруппы = Ложь, 
	Путь = "СведенияНеобходимыеДляНазначенияПособий",
	Используется = Истина, 
	ОтображатьПредупреждение = Истина, 
	СтрокаПредупреждения =  "") Экспорт
	
	ФиксацияРеквизита = ФиксацияВторичныхДанныхВДокументах.СтруктураПараметровОписанияФиксацииРеквизитов();
	ФиксацияРеквизита.Вставить("Используется", Используется);
	ФиксацияРеквизита.Вставить("ИмяРеквизита", ИмяРеквизита);
	ФиксацияРеквизита.Вставить("ИмяГруппы", ИмяГруппы);
	ФиксацияРеквизита.Вставить("ФиксацияГруппы", ФиксацияГруппы);
	ФиксацияРеквизита.Вставить("ОснованиеЗаполнения", ОснованиеЗаполнения);
	ФиксацияРеквизита.Вставить("Путь", Путь);
	ФиксацияРеквизита.Вставить("ОтображатьПредупреждение", ОтображатьПредупреждение);
	Если СтрокаПредупреждения <> "" Тогда
		ФиксацияРеквизита.Вставить("СтрокаПредупреждения", СтрокаПредупреждения);
	КонецЕсли;
	ФиксацияРеквизита.Вставить("РеквизитСтроки", РеквизитСтроки);
	
	Возврат ФиксацияВторичныхДанныхВДокументах.ОписаниеФиксацииРеквизита(ФиксацияРеквизита);
	
КонецФункции

#КонецОбласти

#КонецОбласти

