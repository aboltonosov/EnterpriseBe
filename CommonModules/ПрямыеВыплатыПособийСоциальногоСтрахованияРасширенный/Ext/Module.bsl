#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьПризнакВыплачиваетсяФСССуществующихДокументов(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенком.Ссылка
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком КАК ОтпускПоУходуЗаРебенком
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДатыПередачиВыплатыПособий КАК ВТДатыПередачиВыплатыПособий
	|		ПО ОтпускПоУходуЗаРебенком.Организация = ВТДатыПередачиВыплатыПособий.Организация
	|			И (ВТДатыПередачиВыплатыПособий.Дата МЕЖДУ ОтпускПоУходуЗаРебенком.ДатаНачала И ОтпускПоУходуЗаРебенком.ДатаОкончания)
	|			И (ОтпускПоУходуЗаРебенком.ПособиеВыплачиваетсяФСС = ЛОЖЬ)";
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Документ = Выборка.Ссылка.ПолучитьОбъект();
			Документ.ОбменДанными.Загрузка = Истина;
			
			Документ.ПособиеВыплачиваетсяФСС = Истина;
			
			Документ.Записать(РежимЗаписиДокумента.Запись);
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

// Функция - Категории начислений пособий по прямым выплатам ФСС
// 
// Возвращаемое значение:
//  МассивКатегорий - Массив, категории пособий, которые оплачиваются напрямую ФСС
//
Функция КатегорииНачисленийПособийПоПрямымВыплатамФСС() Экспорт
	
	МассивКатегорий = Новый Массив;
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоЛиста);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоНесчастныйСлучайНаПроизводстве);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОплатаБольничногоПрофзаболевание);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОтпускПоБеременностиИРодам);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ПособиеПоУходуЗаРебенкомДоПолутораЛет);
	МассивКатегорий.Добавить(Перечисления.КатегорииНачисленийИНеоплаченногоВремени.ОтпускНаСанаторноКурортноеЛечение);
		
	Возврат МассивКатегорий;	
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов

Функция ДанныеЗаполненияЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов(Организация, Ссылка, ОплатаДнейУходаЗаДетьмиИнвалидами = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Текст = ТекстЗапросаПервичныеДокументыДляЗаполненияЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов(ОплатаДнейУходаЗаДетьмиИнвалидами);
	Текст = Текст +
	"
	|; 
	|";
	
	Текст = Текст +
	"ВЫБРАТЬ
	|	ОплатаДнейУходаЗаДетьмиИнвалидами.Сотрудник,
	|	ОплатаДнейУходаЗаДетьмиИнвалидами.СреднийЗаработок КАК СреднедневнойЗаработок,
	|	ОплатаДнейУходаЗаДетьмиИнвалидами.Начислено КАК СуммаПособия,
	|	ОплатаДнейУходаЗаДетьмиИнвалидами.Ссылка КАК ДокументОснование,
	|	1 КАК КоличествоСтраниц
	|ИЗ
	|	Документ.ОплатаДнейУходаЗаДетьмиИнвалидами КАК ОплатаДнейУходаЗаДетьмиИнвалидами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументы КАК ВТДокументы
	|		ПО ОплатаДнейУходаЗаДетьмиИнвалидами.Ссылка = ВТДокументы.Ссылка";
	
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ОплатаДнейУходаЗаДетьмиИнвалидами);
	
	Возврат Запрос.Выполнить();
	
КонецФункции 

Функция ТекстЗапросаПервичныеДокументыДляЗаполненияЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов(ОплатаДнейУходаЗаДетьмиИнвалидами = Неопределено)
	
	Если ЗначениеЗаполнено(ОплатаДнейУходаЗаДетьмиИнвалидами) Тогда
		Текст = 
		"ВЫБРАТЬ
		|	ОплатаДнейУходаЗаДетьмиИнвалидами.Ссылка
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.ОплатаДнейУходаЗаДетьмиИнвалидами КАК ОплатаДнейУходаЗаДетьмиИнвалидами
		|ГДЕ
		|	ОплатаДнейУходаЗаДетьмиИнвалидами.Ссылка = &ДокументОснование";
	Иначе
		Текст = 
		"ВЫБРАТЬ
		|	ИспользованныеОплаты.ДокументОснование КАК Ссылка
		|ПОМЕСТИТЬ ВТИспользованныеОплаты
		|ИЗ
		|	Документ.ЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов.Оплаты КАК ИспользованныеОплаты
		|ГДЕ
		|	ИспользованныеОплаты.Ссылка.Организация = &Организация
		|	И ИспользованныеОплаты.Ссылка <> &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОплатаДнейУходаЗаДетьмиИнвалидами.Ссылка
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.ОплатаДнейУходаЗаДетьмиИнвалидами КАК ОплатаДнейУходаЗаДетьмиИнвалидами
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользованныеОплаты КАК ВТИспользованныеОплаты
		|		ПО ОплатаДнейУходаЗаДетьмиИнвалидами.Ссылка = ВТИспользованныеОплаты.Ссылка
		|ГДЕ
		|	ОплатаДнейУходаЗаДетьмиИнвалидами.Организация = &Организация
		|	И ВТИспользованныеОплаты.Ссылка ЕСТЬ NULL 
		|	И ОплатаДнейУходаЗаДетьмиИнвалидами.ПометкаУдаления = ЛОЖЬ
		|	И ОплатаДнейУходаЗаДетьмиИнвалидами.Проведен = ИСТИНА";
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции 

Функция ОписаниеФиксацииРеквизитовЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов() Экспорт
	
	ОписаниеФиксацииРеквизитов = Новый Соответствие;
	
	// Сотрудники
	ОписаниеФиксацииРеквизитов.Вставить("НаименованиеТерриториальногоОрганаФСС", 	ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("НаименованиеТерриториальногоОрганаФСС", 	"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("РегистрационныйНомерФСС", 					ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("РегистрационныйНомерФСС", 		"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ДополнительныйКодФСС",						ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("ДополнительныйКодФСС", 			"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("КодПодчиненностиФСС", 						ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("КодПодчиненностиФСС", 			"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ИНН",										ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("ИНН", 					"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("КПП", 										ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("КПП", 					"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("Руководитель", 							ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("Руководитель", 				"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ДолжностьРуководителя", 					ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("ДолжностьРуководителя", 			"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("АдресОрганизации",							ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("АдресОрганизации", 			"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ТелефонСоставителя",						ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("ТелефонСоставителя", 			"Организация", "Организация", Ложь, , ""));
	
	ОписаниеФиксацииРеквизитов.Вставить("ОплатыСотрудник", 							ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("Сотрудник"));
	ОписаниеФиксацииРеквизитов.Вставить("ОплатыСреднедневнойЗаработок", 			ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("СреднедневнойЗаработок"));
	ОписаниеФиксацииРеквизитов.Вставить("ОплатыКоличествоСтраниц", 					ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("КоличествоСтраниц"));
	ОписаниеФиксацииРеквизитов.Вставить("ОплатыСуммаПособия", 						ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииВыплатРодителямДетейИнвалидов("СуммаПособия"));
	
	Возврат Новый ФиксированноеСоответствие(ОписаниеФиксацииРеквизитов);
	
КонецФункции 

Функция ИспользуетсяЗаполнениеДокументаЗаявлениеВФССОВозмещенииВыплатРодителямДетейИнвалидов() Экспорт

	Возврат Истина;
	
КонецФункции 

#КонецОбласти

#Область ЗаявлениеВФССОВозмещенииРасходовНаПогребение

Функция ДанныеЗаполненияЗаявленияВФССОВозмещенииРасходовНаПогребение(Организация, Ссылка, ЕдиновременноеПособие = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Текст = ТекстЗапросаПервичныеДокументыДляЗаполненияЗаявленияВФССОВозмещенииРасходовНаПогребение(ЕдиновременноеПособие);
	Текст = Текст +
	"
	|; 
	|";
	
	Текст = Текст +
	"ВЫБРАТЬ
	|	ЕдиновременноеПособиеЗаСчетФСС.ФизическоеЛицо,
	|	ЕдиновременноеПособиеЗаСчетФСС.Начислено КАК РазмерПособия,
	|	ЕдиновременноеПособиеЗаСчетФСС.Ссылка КАК ДокументОснование,
	|	1 КАК КоличествоСтраниц
	|ИЗ
	|	Документ.ЕдиновременноеПособиеЗаСчетФСС КАК ЕдиновременноеПособиеЗаСчетФСС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументы КАК ВТДокументы
	|		ПО ЕдиновременноеПособиеЗаСчетФСС.Ссылка = ВТДокументы.Ссылка";
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 	
	Запрос.УстановитьПараметр("ДокументОснование", ЕдиновременноеПособие);
	
	Возврат Запрос.Выполнить();
	
КонецФункции 

Функция ТекстЗапросаПервичныеДокументыДляЗаполненияЗаявленияВФССОВозмещенииРасходовНаПогребение(ЕдиновременноеПособие = Неопределено)
	
	Если ЗначениеЗаполнено(ЕдиновременноеПособие) Тогда
		Текст = 
		"ВЫБРАТЬ
		|	ЕдиновременноеПособиеЗаСчетФСС.Ссылка
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.ЕдиновременноеПособиеЗаСчетФСС КАК ЕдиновременноеПособиеЗаСчетФСС
		|ГДЕ
		|	ЕдиновременноеПособиеЗаСчетФСС.Ссылка = &ДокументОснование";
	Иначе
		Текст = 
		"ВЫБРАТЬ
		|	ИспользованныеОплаты.ДокументОснование КАК Ссылка
		|ПОМЕСТИТЬ ВТИспользованныеОплаты
		|ИЗ
		|	Документ.ЗаявлениеВФССОВозмещенииРасходовНаПогребение.Оплаты КАК ИспользованныеОплаты
		|ГДЕ
		|	ИспользованныеОплаты.Ссылка.Организация = &Организация
		|	И ИспользованныеОплаты.Ссылка <> &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕдиновременноеПособиеЗаСчетФСС.Ссылка
		|ПОМЕСТИТЬ ВТДокументы
		|ИЗ
		|	Документ.ЕдиновременноеПособиеЗаСчетФСС КАК ЕдиновременноеПособиеЗаСчетФСС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользованныеОплаты КАК ВТИспользованныеОплаты
		|		ПО ЕдиновременноеПособиеЗаСчетФСС.Ссылка = ВТИспользованныеОплаты.Ссылка
		|ГДЕ
		|	ЕдиновременноеПособиеЗаСчетФСС.Организация = &Организация
		|	И ВТИспользованныеОплаты.Ссылка ЕСТЬ NULL 
		|	И ЕдиновременноеПособиеЗаСчетФСС.ПометкаУдаления = ЛОЖЬ
		|	И ЕдиновременноеПособиеЗаСчетФСС.Проведен = ИСТИНА";
	КонецЕсли;
	
	Возврат Текст;
	
КонецФункции 

Функция ОписаниеФиксацииРеквизитовЗаявленияВФССОВозмещенииРасходовНаПогребение() Экспорт
	
	ОписаниеФиксацииРеквизитов = Новый Соответствие;
	
	// Сотрудники
	ОписаниеФиксацииРеквизитов.Вставить("НаименованиеТерриториальногоОрганаФСС", 	ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("НаименованиеТерриториальногоОрганаФСС", 	"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("РегистрационныйНомерФСС", 					ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("РегистрационныйНомерФСС", 	"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ДополнительныйКодФСС",						ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("ДополнительныйКодФСС", 		"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("КодПодчиненностиФСС", 						ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("КодПодчиненностиФСС", 		"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ИНН",										ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("ИНН", 						"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("КПП", 										ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("КПП", 						"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("Руководитель", 							ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("Руководитель", 				"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ДолжностьРуководителя", 					ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("ДолжностьРуководителя", 		"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("АдресОрганизации",							ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("АдресОрганизации", 			"Организация", "Организация", Ложь, , ""));
	ОписаниеФиксацииРеквизитов.Вставить("ТелефонСоставителя",						ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("ТелефонСоставителя", 		"Организация", "Организация", Ложь, , ""));
	
	ОписаниеФиксацииРеквизитов.Вставить("ОплатыФизическоеЛицо", 					ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("ФизическоеЛицо"));
	ОписаниеФиксацииРеквизитов.Вставить("ОплатыРазмерПособия", 						ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("РазмерПособия"));
	ОписаниеФиксацииРеквизитов.Вставить("ОплатыКоличествоСтраниц", 					ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаЗаявленияВФССОВозмещенииРасходовНаПогребение("КоличествоСтраниц"));
	
	Возврат Новый ФиксированноеСоответствие(ОписаниеФиксацииРеквизитов);
	
КонецФункции 

Функция ИспользуетсяЗаполнениеЗаявленияВФССОВозмещенииРасходовНаПогребение() Экспорт
	
	Возврат Истина;
	
КонецФункции 

#КонецОбласти

#Область ЗаявлениеСотрудникаНаВыплатуПособия
	
Функция ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоОснованию(Объект) Экспорт
	
	Модифицирован = Ложь;
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		
		РеквизитыДокумента = Новый Структура;
		
		Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.БольничныйЛист") Тогда
			ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоБольничномуЛисту(Объект, РеквизитыДокумента);
		ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ОтпускПоУходуЗаРебенком") Тогда
			ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоОтпускуПоУходуЗаРебенком(Объект, РеквизитыДокумента);
		ИначеЕсли ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.Отпуск") Тогда
			ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоОтпуску(Объект, РеквизитыДокумента);
		КонецЕсли;
		
		Запрос = ПрямыеВыплатыПособийСоциальногоСтрахования.ЗапросПоСтруктуре(РеквизитыДокумента);
		Запрос.Выполнить();
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Объект.Метаданные().ПолноеИмя());
		ПараметрыФиксацииВторичныхДанных = МенеджерОбъекта.ПараметрыФиксацииВторичныхДанных(Объект);
		Модифицирован = ФиксацияВторичныхДанныхВДокументах.ОбновитьВторичныеДанные(Запрос.МенеджерВременныхТаблиц, Объект, , , ПараметрыФиксацииВторичныхДанных);
		
	КонецЕсли;
	
	Возврат Модифицирован;
	
КонецФункции 

Процедура ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоБольничномуЛисту(Объект, РеквизитыДокумента)
	
	НеобходимыеРеквизиты = Новый Массив;
	НеобходимыеРеквизиты.Добавить("Организация");
	НеобходимыеРеквизиты.Добавить("Сотрудник"); 
	НеобходимыеРеквизиты.Добавить("ПричинаНетрудоспособности"); 
	НеобходимыеРеквизиты.Добавить("НомерЛисткаНетрудоспособности"); 
	НеобходимыеРеквизиты.Добавить("ДатаВыдачиЛисткаНетрудоспособности"); 
	НеобходимыеРеквизиты.Добавить("СреднийДневнойЗаработок");
	НеобходимыеРеквизиты.Добавить("МинимальныйСреднедневнойЗаработок");
	НеобходимыеРеквизиты.Добавить("ИсправленныйДокумент");
	НеобходимыеРеквизиты.Добавить("ПоставленаНаУчетВРанниеСрокиБеременности");
	
	РеквизитыДокументаОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ДокументОснование, НеобходимыеРеквизиты);
	ПричинаНетрудоспособности = Неопределено;
	ПоставленаНаУчетВРанниеСрокиБеременности = Ложь;
	Если РеквизитыДокументаОснования.Свойство("ПричинаНетрудоспособности", ПричинаНетрудоспособности) Тогда
		Если ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ПоБеременностиИРодам Тогда
			Если РеквизитыДокументаОснования.Свойство("ПоставленаНаУчетВРанниеСрокиБеременности", ПоставленаНаУчетВРанниеСрокиБеременности) 
				И ПоставленаНаУчетВРанниеСрокиБеременности Тогда
				РеквизитыДокумента.Вставить("ВидПособия",  Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки);
			иначе	
				РеквизитыДокумента.Вставить("ВидПособия",  Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам);
			КонецЕсли;
		ИначеЕсли ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.ТравмаНаПроизводстве
			Или ПричинаНетрудоспособности = Перечисления.ПричиныНетрудоспособности.Профзаболевание Тогда	
			РеквизитыДокумента.Вставить("ВидПособия",  Перечисления.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве);
		Иначе	                                                                           
			РеквизитыДокумента.Вставить("ВидПособия", Перечисления.ПособияНазначаемыеФСС.ПособиеПоВременнойНетрудоспособности);
		КонецЕсли;
	КонецЕсли;
	
	ОрганизацияОснования = Неопределено;                                                                              
	СотрудникОснования = Неопределено; 
	НомерЛисткаНетрудоспособностиОснования = Неопределено; 
	ДатаЛисткаНетрудоспособностиОснования = Неопределено;    
	СреднийЗаработокЗаРасчетныйПериодОснования = Неопределено;  
	МинимальныйСреднедневнойЗаработокОснования = Неопределено;  
	ИсправленныйДокумент = Неопределено;
	
	РеквизитыДокументаОснования.Свойство("Организация", ОрганизацияОснования);
	РеквизитыДокументаОснования.Свойство("Сотрудник", СотрудникОснования);
	РеквизитыДокументаОснования.Свойство("НомерЛисткаНетрудоспособности", НомерЛисткаНетрудоспособностиОснования);
	РеквизитыДокументаОснования.Свойство("ДатаВыдачиЛисткаНетрудоспособности", ДатаЛисткаНетрудоспособностиОснования);
	РеквизитыДокументаОснования.Свойство("СреднийДневнойЗаработок", СреднийЗаработокЗаРасчетныйПериодОснования);
	РеквизитыДокументаОснования.Свойство("МинимальныйСреднедневнойЗаработок", МинимальныйСреднедневнойЗаработокОснования);
	РеквизитыДокументаОснования.Свойство("ИсправленныйДокумент", ИсправленныйДокумент);
	
	РеквизитыДокумента.Вставить("Организация", ОрганизацияОснования);
	РеквизитыДокумента.Вставить("Сотрудник", СотрудникОснования);
	РеквизитыДокумента.Вставить("НомерЛисткаНетрудоспособности", НомерЛисткаНетрудоспособностиОснования);
	РеквизитыДокумента.Вставить("ДатаЛисткаНетрудоспособности", ДатаЛисткаНетрудоспособностиОснования);
	РеквизитыДокумента.Вставить("СреднийЗаработокЗаРасчетныйПериод", Макс(СреднийЗаработокЗаРасчетныйПериодОснования, МинимальныйСреднедневнойЗаработокОснования));
	РеквизитыДокумента.Вставить("Перерасчет", ?(ЗначениеЗаполнено(ИсправленныйДокумент), Истина, Ложь));
	РеквизитыДокумента.Вставить("КодПричиныПерерасчета", ?(ЗначениеЗаполнено(ИсправленныйДокумент), "01", "00"));
		
	ДанныеДокументовДляРасчетаСреднегоЗаработка = Документы.БольничныйЛист.ДанныеДокументовДляРасчетаСреднегоЗаработкаФСС(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.ДокументОснование));
	
	ЗаполнитьРеквизитыРасчетаСреднегоЗаработкаВЗаявленииСотрудникаНаВыплатуПособия(РеквизитыДокумента, ДанныеДокументовДляРасчетаСреднегоЗаработка.Получить(Объект.ДокументОснование));
	
КонецПроцедуры

Процедура ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоОтпускуПоУходуЗаРебенком(Объект, РеквизитыДокумента)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Очередность,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ДатаРожденияРебенка,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ВидПодтверждающегоДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НаименованиеПодтверждающегоДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ДатаДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.СерияДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НомерДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НаличиеРешенияСудаОЛишенииПрав,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Фамилия,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Имя,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Отчество,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка
	|ПОМЕСТИТЬ РебенокЗаКоторымОсуществляетсяУход
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком.ДанныеОДетях КАК ОтпускПоУходуЗаРебенкомДанныеОДетях
	|ГДЕ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка = &Ссылка
	|	И ОтпускПоУходуЗаРебенкомДанныеОДетях.ИдентификаторСтроки = &ИдентификаторСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенком.Номер КАК НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком,
	|	ОтпускПоУходуЗаРебенком.Дата КАК ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком,
	|	ОтпускПоУходуЗаРебенком.ДатаНачала КАК ДатаНачалаОтпускаПоУходуЗаРебенком,
	|	ОтпускПоУходуЗаРебенком.ДатаОкончанияПособияДоПолутораЛет КАК ДатаОкончанияОтпускаПоУходуЗаРебенком,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.СреднийДневнойЗаработок > ОтпускПоУходуЗаРебенком.МинимальныйСреднедневнойЗаработок
	|			ТОГДА ОтпускПоУходуЗаРебенком.СреднийДневнойЗаработок
	|		ИНАЧЕ ОтпускПоУходуЗаРебенком.МинимальныйСреднедневнойЗаработок
	|	КОНЕЦ КАК СреднийЗаработокЗаРасчетныйПериод,
	|	РебенокЗаКоторымОсуществляетсяУход.ВидПодтверждающегоДокумента,
	|	РебенокЗаКоторымОсуществляетсяУход.ДатаДокумента,
	|	РебенокЗаКоторымОсуществляетсяУход.СерияДокумента,
	|	РебенокЗаКоторымОсуществляетсяУход.НомерДокумента,
	|	ЛОЖЬ КАК НаличиеОдногоИзДокументовНаПредыдущихДетей,
	|	ЛОЖЬ КАК НаличиеСвидетельстваОСмертиПредыдущихДетей,
	|	ОтпускПоУходуЗаРебенком.Организация,
	|	ОтпускПоУходуЗаРебенком.Сотрудник,
	|	РебенокЗаКоторымОсуществляетсяУход.ДатаРожденияРебенка,
	|	РебенокЗаКоторымОсуществляетсяУход.Фамилия,
	|	РебенокЗаКоторымОсуществляетсяУход.Имя,
	|	РебенокЗаКоторымОсуществляетсяУход.Отчество,
	|	ОтпускПоУходуЗаРебенком.ФинансированиеФедеральнымБюджетом
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком КАК ОтпускПоУходуЗаРебенком
	|		ЛЕВОЕ СОЕДИНЕНИЕ РебенокЗаКоторымОсуществляетсяУход КАК РебенокЗаКоторымОсуществляетсяУход
	|		ПО ОтпускПоУходуЗаРебенком.Ссылка = РебенокЗаКоторымОсуществляетсяУход.Ссылка
	|ГДЕ
	|	ОтпускПоУходуЗаРебенком.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Объект.ДокументОснование);
	Запрос.УстановитьПараметр("ИдентификаторСтроки", Объект.ИдентификаторСтрокиОснования);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	РеквизитыДокумента.Вставить("Организация", Выборка.Организация);
	РеквизитыДокумента.Вставить("НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком", Прав(Выборка.НомерПриказаОПредоставленииОтпускаПоУходуЗаРебенком,10));
	РеквизитыДокумента.Вставить("ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком", Выборка.ДатаПриказаОПредоставленииОтпускаПоУходуЗаРебенком);
	РеквизитыДокумента.Вставить("ДатаНачалаОтпускаПоУходуЗаРебенком", Выборка.ДатаНачалаОтпускаПоУходуЗаРебенком);
	РеквизитыДокумента.Вставить("ДатаОкончанияОтпускаПоУходуЗаРебенком", Выборка.ДатаОкончанияОтпускаПоУходуЗаРебенком);
	РеквизитыДокумента.Вставить("СреднийЗаработокЗаРасчетныйПериод", Выборка.СреднийЗаработокЗаРасчетныйПериод);
	РеквизитыДокумента.Вставить("НаличиеОдногоИзДокументовНаПредыдущихДетей", Выборка.НаличиеОдногоИзДокументовНаПредыдущихДетей);
	РеквизитыДокумента.Вставить("НаличиеСвидетельстваОСмертиПредыдущихДетей", Выборка.НаличиеСвидетельстваОСмертиПредыдущихДетей);
	РеквизитыДокумента.Вставить("Сотрудник", СотрудникОтпускаПоУходуЗаРебенком(Выборка.Сотрудник, Выборка.Организация, Выборка.ДатаНачалаОтпускаПоУходуЗаРебенком));
	РеквизитыДокумента.Вставить("ВидПособия",  Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком);
	РеквизитыДокумента.Вставить("ДатаРожденияРебенка", 	Выборка.ДатаРожденияРебенка);
	РеквизитыДокумента.Вставить("ФамилияРебенка", 		Выборка.Фамилия);
	РеквизитыДокумента.Вставить("ИмяРебенка", 			Выборка.Имя);
	РеквизитыДокумента.Вставить("ОтчествоРебенка", 		Выборка.Отчество);
	РеквизитыДокумента.Вставить("ФинансированиеФедеральнымБюджетом", Выборка.ФинансированиеФедеральнымБюджетом);
	
	Если Выборка.ВидПодтверждающегоДокумента  = Перечисления.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОРождении Тогда
		
		РеквизитыДокумента.Вставить("ДатаСвидетельстваОРождении", Выборка.ДатаДокумента);
		РеквизитыДокумента.Вставить("НомерСвидетельстваОРождении", Выборка.НомерДокумента);
		РеквизитыДокумента.Вставить("СерияСвидетельстваОРождении", Выборка.СерияДокумента);
		
		РеквизитыДокумента.Вставить("ДатаРешенияОбОпеке", Неопределено);
		РеквизитыДокумента.Вставить("НомерРешенияОбОпеке", Неопределено);
		
		РеквизитыДокумента.Вставить("ДатаИногоДокументаПодтверждающегоРождение", Неопределено);
		РеквизитыДокумента.Вставить("НомерИногоДокументаПодтверждающегоРождение", Неопределено);
		
	ИначеЕсли Выборка.ВидПодтверждающегоДокумента  = Перечисления.ВидыПодтверждающихДокументовОтпускаПоУходу.РешениеОбУстановленииОпеки Тогда
		
		РеквизитыДокумента.Вставить("ДатаРешенияОбОпеке", Выборка.ДатаДокумента);
		РеквизитыДокумента.Вставить("НомерРешенияОбОпеке", Выборка.НомерДокумента);
		
		РеквизитыДокумента.Вставить("ДатаСвидетельстваОРождении", Неопределено);
		РеквизитыДокумента.Вставить("НомерСвидетельстваОРождении", Неопределено);
		РеквизитыДокумента.Вставить("СерияСвидетельстваОРождении", Неопределено);
		
		РеквизитыДокумента.Вставить("ДатаИногоДокументаПодтверждающегоРождение", Неопределено);
		РеквизитыДокумента.Вставить("НомерИногоДокументаПодтверждающегоРождение", Неопределено);
		
	ИначеЕсли Выборка.ВидПодтверждающегоДокумента  = Перечисления.ВидыПодтверждающихДокументовОтпускаПоУходу.ИнойДокументПодтверждающийРождениеРебенка Тогда
		
		РеквизитыДокумента.Вставить("ДатаИногоДокументаПодтверждающегоРождение", Выборка.ДатаДокумента);
		РеквизитыДокумента.Вставить("НомерИногоДокументаПодтверждающегоРождение", Выборка.НомерДокумента);
		
		РеквизитыДокумента.Вставить("ДатаСвидетельстваОРождении", Неопределено);
		РеквизитыДокумента.Вставить("НомерСвидетельстваОРождении", Неопределено);
		РеквизитыДокумента.Вставить("СерияСвидетельстваОРождении", Неопределено);
		
		РеквизитыДокумента.Вставить("ДатаРешенияОбОпеке", Неопределено);
		РеквизитыДокумента.Вставить("НомерРешенияОбОпеке", Неопределено);
		
	КонецЕсли;
	
	ДанныеДокументовДляРасчетаСреднегоЗаработка = Документы.ОтпускПоУходуЗаРебенком.ДанныеДокументовДляРасчетаСреднегоЗаработкаФСС(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Объект.ДокументОснование));
	
	ЗаполнитьРеквизитыРасчетаСреднегоЗаработкаВЗаявленииСотрудникаНаВыплатуПособия(РеквизитыДокумента, ДанныеДокументовДляРасчетаСреднегоЗаработка.Получить(Объект.ДокументОснование));
	
КонецПроцедуры

Функция СотрудникОтпускаПоУходуЗаРебенком(ФизическоеЛицо, Организация, Дата) Экспорт
	
	ОсновныеСотрудники = КадровыйУчет.ОсновныеСотрудникиФизическихЛиц(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФизическоеЛицо), Истина, Организация, Дата);
	
	Если ОсновныеСотрудники.Количество() > 0 Тогда
		Сотрудник = ОсновныеСотрудники[0].Сотрудник;
	КонецЕсли;
	
	Возврат Сотрудник;        
	
КонецФункции

Процедура ЗаполнитьЗаявлениеСотрудникаНаВыплатуПособияПоОтпуску(Объект, РеквизитыДокумента)
	
	НеобходимыеРеквизиты = Новый Массив;
	НеобходимыеРеквизиты.Добавить("Организация");
	НеобходимыеРеквизиты.Добавить("Сотрудник"); 
	НеобходимыеРеквизиты.Добавить("ИсправленныйДокумент");
	
	РеквизитыДокументаОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ДокументОснование, НеобходимыеРеквизиты);
	
	ОрганизацияОснования = Неопределено;                                                                              
	СотрудникОснования = Неопределено; 
	ИсправленныйДокумент = Неопределено;
	
	РеквизитыДокументаОснования.Свойство("Организация", ОрганизацияОснования);
	РеквизитыДокументаОснования.Свойство("Сотрудник", СотрудникОснования);
	РеквизитыДокументаОснования.Свойство("ИсправленныйДокумент", ИсправленныйДокумент);
	
	РеквизитыДокумента.Вставить("Организация", ОрганизацияОснования);
	РеквизитыДокумента.Вставить("Сотрудник", СотрудникОснования);
	РеквизитыДокумента.Вставить("Перерасчет", ?(ЗначениеЗаполнено(ИсправленныйДокумент), Истина, Ложь));
	РеквизитыДокумента.Вставить("КодПричиныПерерасчета", ?(ЗначениеЗаполнено(ИсправленныйДокумент), "01", "00"));
		
КонецПроцедуры

Процедура ЗаполнитьРеквизитыРасчетаСреднегоЗаработкаВЗаявленииСотрудникаНаВыплатуПособия(РеквизитыДокумента, ДанныеДокументовДляРасчетаСреднегоЗаработка)
	
	ПараметрыРасчета = ДанныеДокументовДляРасчетаСреднегоЗаработка.ПараметрыРасчета;
	ДанныеРасчетаСреднего = ДанныеДокументовДляРасчетаСреднегоЗаработка.ДанныеРасчетаСреднего;
	
	РеквизитыДокумента.Вставить("ДатаНачалаРасчетногоПериода", 		ПараметрыРасчета.ПериодРасчетаСреднегоЗаработкаНачало);
	РеквизитыДокумента.Вставить("ДатаОкончанияРасчетногоПериода", 	ПараметрыРасчета.ПериодРасчетаСреднегоЗаработкаОкончание);
	РеквизитыДокумента.Вставить("ПервыйРасчетныйГод", 				ПараметрыРасчета.РасчетныеГоды[0]);
	РеквизитыДокумента.Вставить("ВторойРасчетныйГод", 				ПараметрыРасчета.РасчетныеГоды[1]);			
	РеквизитыДокумента.Вставить("РайонныйКоэффициент", 				ПараметрыРасчета.РайонныйКоэффициентРФ);
	РеквизитыДокумента.Вставить("РазмерСтавки", 					УчетПособийСоциальногоСтрахованияКлиентСервер.ДоляНеполногоВремени(ПараметрыРасчета));
	РеквизитыДокумента.Вставить("НеполноеРабочееВремя", 			РеквизитыДокумента.РазмерСтавки < 1);

	Если ЗначениеЗаполнено(ПараметрыРасчета.ДатаНачалаСобытия)
		И ЗначениеЗаполнено(ПараметрыРасчета.ПорядокРасчета) Тогда
		
		ПериодРасчетаСреднего = УчетПособийСоциальногоСтрахованияКлиентСервер.ПериодРасчетаСреднегоЗаработкаФСС(ПараметрыРасчета.ДатаНачалаСобытия, ПараметрыРасчета.ПорядокРасчета);
		
		ПервыйГодПоДатеСобытия = Год(ПериодРасчетаСреднего.ДатаНачала);
		ВторойГодПоДатеСобытия = Год(ПериодРасчетаСреднего.ДатаОкончания);
		
		// Поменять периоды местами, если в действительности заменялся только один из периодов.
		ПоменятьМестами = (ПервыйГодПоДатеСобытия = РеквизитыДокумента.ВторойРасчетныйГод
			Или ВторойГодПоДатеСобытия = РеквизитыДокумента.ПервыйРасчетныйГод);
		
		РеквизитыДокумента.Вставить("ПервыйЗамененныйГод", ?(ПоменятьМестами, ВторойГодПоДатеСобытия, ПервыйГодПоДатеСобытия));
		РеквизитыДокумента.Вставить("ВторойЗамененныйГод", ?(ПоменятьМестами, ПервыйГодПоДатеСобытия, ВторойГодПоДатеСобытия));
		
		Если РеквизитыДокумента.ПервыйЗамененныйГод <> РеквизитыДокумента.ПервыйРасчетныйГод
			Или РеквизитыДокумента.ВторойЗамененныйГод <> РеквизитыДокумента.ВторойРасчетныйГод Тогда
			РеквизитыДокумента.Вставить("ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка", Истина);
		Иначе
			РеквизитыДокумента.Вставить("ЗамененыКалендарныеГодыРасчетаСреднегоЗаработка", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	УчитываемыхДнейВКалендарныхГодах = УчетПособийСоциальногоСтрахованияКлиентСервер.УчитываемыхДнейВКалендарныхГодахФСС(ПараметрыРасчета, ДанныеРасчетаСреднего);
	РеквизитыДокумента.Вставить("ЧислоКалендарныхДнейРасчетногоПериода", УчитываемыхДнейВКалендарныхГодах);	
	
	СтрокаПоГоду = УчетСреднегоЗаработкаКлиентСервер.ЭлементКоллекцииПоОтбору(ДанныеРасчетаСреднего, Новый Структура("РасчетныйГод", РеквизитыДокумента.ПервыйРасчетныйГод));
	Если НЕ СтрокаПоГоду = Неопределено Тогда
		РеквизитыДокумента.Вставить("ЗаработокПервыйГодРасчета", УчетПособийСоциальногоСтрахованияКлиентСервер.УчитываемыйЗаработокФССПоГоду(ПараметрыРасчета, СтрокаПоГоду));
	иначе
		РеквизитыДокумента.Вставить("ЗаработокПервыйГодРасчета", 0);
	КонецЕсли;
	
	СтрокаПоГоду = УчетСреднегоЗаработкаКлиентСервер.ЭлементКоллекцииПоОтбору(ДанныеРасчетаСреднего, Новый Структура("РасчетныйГод", РеквизитыДокумента.ВторойРасчетныйГод));
	Если НЕ СтрокаПоГоду = Неопределено Тогда
		РеквизитыДокумента.Вставить("ЗаработокВторойГодРасчета", УчетПособийСоциальногоСтрахованияКлиентСервер.УчитываемыйЗаработокФССПоГоду(ПараметрыРасчета, СтрокаПоГоду));
	иначе
		РеквизитыДокумента.Вставить("ЗаработокВторойГодРасчета", 0);
	КонецЕсли;
	
КонецПроцедуры

Функция РайонныйКоэффициентРФПодразделенияОрганизацииДляЗаявленияСотрудникаНаВыплатуПособия(Организация, Подразделение = Неопределено) Экспорт
	
	Если Подразделение = Неопределено Тогда
		Подразделение = Справочники.ПодразделенияОрганизаций.ПустаяСсылка()
	КонецЕсли;
	
	// Размер районного коэффициента, установленного для организации
	РайонныйКоэффициентРФПодразделенияОрганизации = 1;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Подразделение",Подразделение);
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Подразделение.РайонныйКоэффициентРФ > 1
	|			ТОГДА Подразделение.РайонныйКоэффициентРФ
	|		КОГДА Организации.РайонныйКоэффициентРФ > 1
	|			ТОГДА Организации.РайонныйКоэффициентРФ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК РайонныйКоэффициентРФОрганизации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК Подразделение
	|		ПО Организации.Ссылка = Подразделение.Владелец
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|	И (&Подразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	|			ИЛИ Подразделение.Ссылка = &Подразделение)";
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		РайонныйКоэффициентРФПодразделенияОрганизации = Выборка.РайонныйКоэффициентРФОрганизации;	
	КонецЕсли;
	
	Возврат РайонныйКоэффициентРФПодразделенияОрганизации	
	
КонецФункции

Функция ТипДокументаОснованияЗаявленияСотрудникаНаВыплатуПособия(ВидПособия) Экспорт
	
	ПустоеЗначение = Документы.БольничныйЛист.ПустаяСсылка();
	
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком Тогда
		ПустоеЗначение = Документы.ОтпускПоУходуЗаРебенком.ПустаяСсылка();
	ИначеЕсли ВидПособия = Перечисления.ПособияНазначаемыеФСС.ОтпускСверхЕжегодногоНаПериодЛечения Тогда
		ПустоеЗначение = Документы.Отпуск.ПустаяСсылка();
	КонецЕсли;   
	
	Возврат ПустоеЗначение;
	
КонецФункции

Функция СписокДетейПоУходуЗаКоторымиПредоставленОтпуск(ДокументОснование) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Имя,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ИдентификаторСтроки,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ДатаРожденияРебенка
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком.ДанныеОДетях КАК ОтпускПоУходуЗаРебенкомДанныеОДетях
	|ГДЕ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",ДокументОснование);
	Результат = Запрос.Выполнить();
	
	ДанныеОДетях = Новый СписокЗначений;
	
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ДанныеОДетях.Добавить(Выборка.ИдентификаторСтроки, Выборка.Имя + " ("+ Формат(Выборка.ДатаРожденияРебенка, "ДЛФ=D") +")");
		КонецЦикла;	
	КонецЕсли;
	
	Возврат ДанныеОДетях;
	
КонецФункции

Функция ВидПособияИмеетДокументОснование(ВидПособия) Экспорт
	
	ВидПособияИмеетДокументОснование = Ложь;
	
	Если ВидПособия = Перечисления.ПособияНазначаемыеФСС.ЕжемесячноеПособиеПоУходуЗаРебенком 
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоВременнойНетрудоспособности
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ОтпускСверхЕжегодногоНаПериодЛечения
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеВСвязиСНесчастнымСлучаемНаПроизводстве
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодам
		Или ВидПособия = Перечисления.ПособияНазначаемыеФСС.ПособиеПоБеременностиИРодамВставшимНаУчетВРанниеСроки Тогда
		ВидПособияИмеетДокументОснование = Истина; 
	КонецЕсли;
	
	Возврат ВидПособияИмеетДокументОснование;
	
КонецФункции

Функция ДоляРабочегоВремениСотрудника(Сотрудник, Дата) Экспорт
	
	ДоляРабочегоВремениСотрудника = ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ДоляРабочегоВремениСотрудника(Сотрудник, Дата);
	
	КадровыеДанныеСотрудника = КадровыйУчет.КадровыеДанныеСотрудников(Истина, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Сотрудник), "ДоляНеполногоРабочегоВремени", Дата);
	Если КадровыеДанныеСотрудника.Количество() > 0 Тогда
		
		ДоляРабочегоВремениСотрудника = КадровыеДанныеСотрудника[0].ДоляНеполногоРабочегоВремени;
		
	КонецЕсли;
	
	Возврат ДоляРабочегоВремениСотрудника;
	
КонецФункции

Процедура ПометитьЗаявлениеНаУдаление(Заявление) Экспорт
	ЗаявлениеОбъект = Заявление.ПолучитьОбъект();
	ЗаявлениеОбъект.УстановитьПометкуУдаления(Истина);
КонецПроцедуры	

Процедура ДобавитьКомандыПечатиЗаявленияСотрудникаНаВыплатуПособия(КомандыПечати) Экспорт 
	
	ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ДобавитьКомандыПечатиЗаявленияСотрудникаНаВыплатуПособия(КомандыПечати);
	
	// Печать заявления о выплате пособия.
	Если ПравоДоступа("Использование", Метаданные.Обработки.ПечатьПрямыеВыплатыПособийСоциальногоСтрахованияФСС) Тогда
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "ЗарплатаКадрыКлиент.ВыполнитьКомандуПечати";
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьПрямыеВыплатыПособийСоциальногоСтрахованияФСС";
		КомандаПечати.Идентификатор = "СправкаПоРасчетуСуммыДоплатыПособия";
		КомандаПечати.Представление = НСтр("ru = 'Справка по расчету суммы доплаты пособия'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РеестрСведенийНеобходимыхДляНазначенияИВыплатыПособий

Функция СведенияБольничныхЛистовНеобходимыеДляНазначенияИВыплатыПособий(Объект, Заявление = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Текст = ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ТекстЗапросаСписокЗаявлений(Заявление);
	Текст = Текст +
	"
	|; 
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Заявления.Ссылка КАК Заявление,
	|	МИНИМУМ(БольничныйЛистНачисления.ДатаНачала) КАК ДатаНачала,
	|	МАКСИМУМ(БольничныйЛистНачисления.ДатаОкончания) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТПериодыОплатыЗаСчетФСС
	|ИЗ
	|	Заявления КАК Заявления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.БольничныйЛист.Начисления КАК БольничныйЛистНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК Начисления
	|			ПО БольничныйЛистНачисления.Начисление = Начисления.Ссылка
	|		ПО Заявления.ДокументОснование = БольничныйЛистНачисления.Ссылка
	|ГДЕ
	|	Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В(&МассивКатегорий)
	|
	|СГРУППИРОВАТЬ ПО
	|	Заявления.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Заявления.Ссылка КАК Заявление,
	|	БольничныйЛист.Ссылка КАК ПервичныйДокумент,
	|	БольничныйЛист.ПредоставленДубликатЛисткаНетрудоспособности,
	|	НЕ БольничныйЛист.ЯвляетсяПродолжениемБолезни КАК ЯвляетсяПервичнымЛисткомНетрудоспособности,
	|	БольничныйЛист.НомерПервичногоЛисткаНетрудоспособности,
	|	БольничныйЛист.МедицинскаяОрганизация,
	|	БольничныйЛист.НаименованиеМедицинскойОрганизации,
	|	БольничныйЛист.АдресМедицинскойОрганизации,
	|	БольничныйЛист.ОГРНМедицинскойОрганизации,
	|	БольничныйЛист.НомерЛисткаНетрудоспособности,
	|	БольничныйЛист.ДатаВыдачиЛисткаНетрудоспособности,
	|	БольничныйЛист.КодПричиныНетрудоспособности,
	|	БольничныйЛист.ДополнительныйКодПричиныНетрудоспособности,
	|	БольничныйЛист.ВторойКодПричиныНетрудоспособности,
	|	БольничныйЛист.НаименованиеОрганизацииВЛисткеНетрудоспособности,
	|	БольничныйЛист.ОсновноеМестоРаботы,
	|	БольничныйЛист.НомерЛисткаПоОсновномуМестуРаботы,
	|	БольничныйЛист.ДатаИзмененияКодаПричиныНетрудоспособности,
	|	БольничныйЛист.ДатаОкончанияПутевки,
	|	БольничныйЛист.НомерПутевки,
	|	БольничныйЛист.ОГРН_Санатория,
	|	БольничныйЛист.ПоУходуВозрастЛет1,
	|	БольничныйЛист.ПоУходуВозрастМесяцев1,
	|	БольничныйЛист.ПоУходуРодственнаяСвязь1,
	|	БольничныйЛист.ПоУходуФИО1,
	|	БольничныйЛист.ПоУходуИспользованоДней1,
	|	БольничныйЛист.ПоУходуВозрастЛет2,
	|	БольничныйЛист.ПоУходуВозрастМесяцев2,
	|	БольничныйЛист.ПоУходуРодственнаяСвязь2,
	|	БольничныйЛист.ПоУходуФИО2,
	|	БольничныйЛист.ПоУходуИспользованоДней2,
	|	БольничныйЛист.ПоставленаНаУчетВРанниеСрокиБеременности,
	|	БольничныйЛист.КодНарушенияРежима,
	|	БольничныйЛист.ДатаНарушенияРежима,
	|	БольничныйЛист.ПериодНахожденияВСтационареСРебенкомС,
	|	БольничныйЛист.ПериодНахожденияВСтационареСРебенкомПо,
	|	БольничныйЛист.ДатаНаправленияВБюроМСЭ,
	|	БольничныйЛист.ДатаРегистрацииДокументовМСЭ,
	|	БольничныйЛист.ДатаОсвидетельствованияМСЭ,
	|	БольничныйЛист.ГруппаИнвалидности,
	|	БольничныйЛист.ОсвобождениеДатаНачала1,
	|	БольничныйЛист.ОсвобождениеДатаОкончания1,
	|	БольничныйЛист.ОсвобождениеДолжностьВрача1,
	|	БольничныйЛист.ОсвобождениеФИОВрача1,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрача1,
	|	БольничныйЛист.ОсвобождениеФИОВрачаПредседателяВК1,
	|	БольничныйЛист.ОсвобождениеДолжностьВрачаПредседателяВК1,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрачаПредседателяВК1,
	|	БольничныйЛист.ОсвобождениеДатаНачала2,
	|	БольничныйЛист.ОсвобождениеДатаОкончания2,
	|	БольничныйЛист.ОсвобождениеДолжностьВрача2,
	|	БольничныйЛист.ОсвобождениеФИОВрача2,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрача2,
	|	БольничныйЛист.ОсвобождениеФИОВрачаПредседателяВК2,
	|	БольничныйЛист.ОсвобождениеДолжностьВрачаПредседателяВК2,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрачаПредседателяВК2,
	|	БольничныйЛист.ОсвобождениеДатаНачала3,
	|	БольничныйЛист.ОсвобождениеДатаОкончания3,
	|	БольничныйЛист.ОсвобождениеДолжностьВрача3,
	|	БольничныйЛист.ОсвобождениеФИОВрача3,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрача3,
	|	БольничныйЛист.ОсвобождениеФИОВрачаПредседателяВК3,
	|	БольничныйЛист.ОсвобождениеДолжностьВрачаПредседателяВК3,
	|	БольничныйЛист.ОсвобождениеИдентификационныйНомерВрачаПредседателяВК3,
	|	БольничныйЛист.ПриступитьКРаботеС,
	|	БольничныйЛист.ДатаНовыйСтатусНетрудоспособного,
	|	БольничныйЛист.НовыйСтатусНетрудоспособного,
	|	БольничныйЛист.НомерЛисткаПродолжения,
	|	БольничныйЛист.УсловияИсчисленияКод1,
	|	БольничныйЛист.УсловияИсчисленияКод2,
	|	БольничныйЛист.УсловияИсчисленияКод3,
	|	БольничныйЛист.ДатаАктаН1,
	|	БольничныйЛист.ДатаНачалаРаботы,
	|	БольничныйЛист.СтажЛет,
	|	БольничныйЛист.СтажМесяцев,
	|	БольничныйЛист.СтажРасширенныйЛет,
	|	БольничныйЛист.СтажРасширенныйМесяцев,
	|	БольничныйЛист.ФинансированиеФедеральнымБюджетом,
	|	ВТПериодыОплатыЗаСчетФСС.ДатаНачала КАК ДатаНачалаОплаты,
	|	ВТПериодыОплатыЗаСчетФСС.ДатаОкончания КАК ДатаОкончанияОплаты
	|ИЗ
	|	Заявления КАК Заявления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.БольничныйЛист КАК БольничныйЛист
	|		ПО Заявления.ДокументОснование = БольничныйЛист.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыОплатыЗаСчетФСС КАК ВТПериодыОплатыЗаСчетФСС
	|		ПО Заявления.Ссылка = ВТПериодыОплатыЗаСчетФСС.Заявление";
	
	Запрос.Текст = Текст;
	
	Запрос.УстановитьПараметр("ВидРеестра", Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ПособияПоНетрудоспособности);
	Запрос.УстановитьПараметр("МассивКатегорий", ПрямыеВыплатыПособийСоциальногоСтрахования.КатегорииНачисленийПособийПоПрямымВыплатамФСС());
	
	Если ЗначениеЗаполнено(Заявление) Тогда
		Запрос.УстановитьПараметр("Ссылка", Заявление);
	Иначе	
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция СведенияОтпусковПоУходуНеобходимыеДляНазначенияИВыплатыПособий(Объект, Заявление = Неопределено) Экспорт
	
	Текст = ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ТекстЗапросаСписокЗаявлений(Заявление);
	Текст = Текст +
	"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА КОЛИЧЕСТВО(ОтпускПоУходуЗаРебенкомДанныеОДетях.Имя) > 1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОдновременныйУходЗаНесколькимиДетьми
	|ПОМЕСТИТЬ МногодетныеДокументы
	|ИЗ
	|	Заявления КАК Заявления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенком.ДанныеОДетях КАК ОтпускПоУходуЗаРебенкомДанныеОДетях
	|		ПО Заявления.ДокументОснование = ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявления.Ссылка КАК Заявление,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРожденияРебенка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ФамилияРебенка КАК ФамилияРебенка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ИмяРебенка КАК ИмяРебенка,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ОтчествоРебенка КАК ОтчествоРебенка,
	|	ОтпускПоУходуЗаРебенком.Ссылка КАК ПервичныйДокумент,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Очередность КАК ОчередностьРожденияРебенка,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.Ссылка ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСвидетельстваОРождении = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОРождении)
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРешенияОбОпеке = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ВидыПодтверждающихДокументовОтпускаПоУходу.РешениеОбУстановленииОпеки)
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаИногоДокументаПодтверждающегоРождение = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ВидыПодтверждающихДокументовОтпускаПоУходу.ИнойДокументПодтверждающийРождениеРебенка)
	|				КОНЕЦ
	|		ИНАЧЕ ОтпускПоУходуЗаРебенкомДанныеОДетях.ВидПодтверждающегоДокумента
	|	КОНЕЦ КАК ВидПодтверждающегоДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НаименованиеПодтверждающегоДокумента,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.Ссылка ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСвидетельстваОРождении = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСвидетельстваОРождении
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРешенияОбОпеке = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРешенияОбОпеке
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаИногоДокументаПодтверждающегоРождение = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.ДатаИногоДокументаПодтверждающегоРождение
	|				КОНЕЦ
	|		ИНАЧЕ ОтпускПоУходуЗаРебенкомДанныеОДетях.ДатаДокумента
	|	КОНЕЦ КАК ДатаДокумента,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.Ссылка ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСвидетельстваОРождении = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.СерияСвидетельстваОРождении
	|				КОНЕЦ
	|		ИНАЧЕ ОтпускПоУходуЗаРебенкомДанныеОДетях.СерияДокумента
	|	КОНЕЦ КАК СерияДокумента,
	|	ВЫБОР
	|		КОГДА ОтпускПоУходуЗаРебенком.Ссылка ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаСвидетельстваОРождении = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.НомерСвидетельстваОРождении
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаРешенияОбОпеке = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.НомерРешенияОбОпеке
	|					КОГДА НЕ ЗаявлениеСотрудникаНаВыплатуПособия.ДатаИногоДокументаПодтверждающегоРождение = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ЗаявлениеСотрудникаНаВыплатуПособия.НомерИногоДокументаПодтверждающегоРождение
	|				КОНЕЦ
	|		ИНАЧЕ ОтпускПоУходуЗаРебенкомДанныеОДетях.НомерДокумента
	|	КОНЕЦ КАК НомерДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НаличиеРешенияСудаОЛишенииПрав,
	|	ЗаявлениеСотрудникаНаВыплатуПособия.ФинансированиеФедеральнымБюджетом,
	|	МногодетныеДокументы.ОдновременныйУходЗаНесколькимиДетьми
	|ИЗ
	|	Заявления КАК Заявления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявлениеСотрудникаНаВыплатуПособия КАК ЗаявлениеСотрудникаНаВыплатуПособия
	|		ПО Заявления.Ссылка = ЗаявлениеСотрудникаНаВыплатуПособия.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенком.ДанныеОДетях КАК ОтпускПоУходуЗаРебенкомДанныеОДетях
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтпускПоУходуЗаРебенком КАК ОтпускПоУходуЗаРебенком
	|			ПО ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка = ОтпускПоУходуЗаРебенком.Ссылка
	|		ПО Заявления.ДокументОснование = ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка
	|			И Заявления.ИдентификаторСтрокиОснования = ОтпускПоУходуЗаРебенкомДанныеОДетях.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ МногодетныеДокументы КАК МногодетныеДокументы
	|		ПО Заявления.ДокументОснование = МногодетныеДокументы.Ссылка";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = Текст;
	
	Запрос.УстановитьПараметр("ВидРеестра", Перечисления.ВидыРеестровСведенийНеобходимыхДляНазначенияИВыплатыПособий.ЕжемесячныеПособияПоУходуЗаРебенком);
	
	Если ЗначениеЗаполнено(Заявление) Тогда
		Запрос.УстановитьПараметр("Ссылка", Заявление);
	Иначе	
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
КонецФункции

Функция ОписаниеФиксацииРеквизитовРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий() Экспорт
	
	ОписаниеФиксацииРеквизитов = ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитовРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий();
	
	ОписаниеФиксацииРеквизитовРасширенное = Новый Соответствие(ОписаниеФиксацииРеквизитов);
	ОписаниеФиксацииРеквизитовРасширенное.Вставить("СведенияНеобходимыеДляНазначенияПособийОчередностьРожденияРебенка", ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОчередностьРожденияРебенка", "ЕжемесячныеПособияПоУходуЗаРебенком"));
	ОписаниеФиксацииРеквизитовРасширенное.Вставить("СведенияНеобходимыеДляНазначенияПособийНаРебенкаВыплачиваетсяПособие", ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("НаРебенкаВыплачиваетсяПособие", ""));
	ОписаниеФиксацииРеквизитовРасширенное.Вставить("СведенияНеобходимыеДляНазначенияПособийНаименованиеПодтверждающегоДокумента", ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("НаименованиеПодтверждающегоДокумента", "ЕжемесячныеПособияПоУходуЗаРебенком"));
	ОписаниеФиксацииРеквизитовРасширенное.Вставить("СведенияНеобходимыеДляНазначенияПособийНаличиеРешенияСудаОЛишенииПрав", ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("НаличиеРешенияСудаОЛишенииПрав", "ЕжемесячныеПособияПоУходуЗаРебенком"));
	ОписаниеФиксацииРеквизитовРасширенное.Вставить("СведенияНеобходимыеДляНазначенияПособийФинансированиеФедеральнымБюджетом", ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ФинансированиеФедеральнымБюджетом", "ЕжемесячныеПособияПоУходуЗаРебенком"));
	ОписаниеФиксацииРеквизитовРасширенное.Вставить("СведенияНеобходимыеДляНазначенияПособийОдновременныйУходЗаНесколькимиДетьми", ПрямыеВыплатыПособийСоциальногоСтрахованияБазовый.ОписаниеФиксацииРеквизитаРеквизитаРеестраСведенийНеобходимыхДляНазначенияИВыплатыПособий("ОдновременныйУходЗаНесколькимиДетьми", "ЕжемесячныеПособияПоУходуЗаРебенком"));
	
	Возврат Новый ФиксированноеСоответствие(ОписаниеФиксацииРеквизитовРасширенное);
	
КонецФункции 

#КонецОбласти

// Определяет есть ли в массиве начислений пособия оплачиваемые за счет ФСС 
//
// Параметры
//  МассивНачислений - массив или список значений содержащий виды расчетов
//
// Возвращаемое значение:
//    Булево - истина, если в массиве начислений есть пособия за счет ФСС.
//
Функция КоллекцияСодержитПособияЗаСчетФСС(МассивНачислений) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Ссылка
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Ссылка В(&МассивНачислений)
	|	И Начисления.КатегорияНачисленияИлиНеоплаченногоВремени В(&МассивКатегорий)";
	Запрос.УстановитьПараметр("МассивНачислений", МассивНачислений);
	Запрос.УстановитьПараметр("МассивКатегорий", ПрямыеВыплатыПособийСоциальногоСтрахования.КатегорииНачисленийПособийПоПрямымВыплатамФСС());
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();	
	
КонецФункции

#КонецОбласти

