
#Область СлужебныеПроцедурыИФункции

Процедура ПередДобавлениемКомандСоздатьНаОсновании(ИмяФормы, КомандыСоздатьНаОсновании, СтандартнаяОбработка) Экспорт
	
	МассивПолей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяФормы,".");
	
	Если ПравоДоступа("Просмотр", Метаданные.Обработки.ИнтеграцияС1СДокументооборот) Тогда
		КомандаСозданияНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСозданияНаОсновании.Обработчик = "ВводНаОснованииУТКлиент.ИнтеграцияС1СДокументооборотСоздатьПисьмо";
		КомандаСозданияНаОсновании.Идентификатор = "ИнтеграцияС1СДокументооборотСоздатьПисьмо";
		КомандаСозданияНаОсновании.Представление = НСтр("ru = 'Документооборот: Письмо'");
		КомандаСозданияНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСозданияНаОсновании.ФункциональныеОпции = "ИспользоватьЭлектроннуюПочту1СДокументооборота";
		КомандаСозданияНаОсновании.Порядок = 98;
		
		КомандаСозданияНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСозданияНаОсновании.Обработчик = "ВводНаОснованииУТКлиент.ИнтеграцияС1СДокументооборотСоздатьБизнесПроцесс";
		КомандаСозданияНаОсновании.Идентификатор = "ИнтеграцияС1СДокументооборотСоздатьБизнесПроцесс";
		КомандаСозданияНаОсновании.Представление = НСтр("ru = 'Документооборот: Процесс...'");
		КомандаСозданияНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСозданияНаОсновании.ФункциональныеОпции = "ИспользоватьПроцессыИЗадачи1СДокументооборота";
		КомандаСозданияНаОсновании.Порядок = 99;
	КонецЕсли;
	
	Если (ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеОбработкиСозданияСвязанныхОбъектов", 
				Новый Структура("ДополнительныеОтчетыИОбработкиОбъектНазначения,ДополнительныеОтчетыИОбработкиТипФормы", 
				Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("ПолноеИмя",МассивПолей[0]+"."+МассивПолей[1]), МассивПолей[3]))
			или ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеОбработкиСозданияСвязанныхОбъектов", 
				Новый Структура("ДополнительныеОтчетыИОбработкиОбъектНазначения,ДополнительныеОтчетыИОбработкиТипФормы", 
				Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоРеквизиту("ПолноеИмя",МассивПолей[0]+"."+МассивПолей[1]), 
				?(СтрНайти(МассивПолей[3], "ФормаСписка") <> 0,ДополнительныеОтчетыИОбработкиКлиентСервер.ТипФормыСписка(),
				ДополнительныеОтчетыИОбработкиКлиентСервер.ТипФормыОбъекта())))) 
			и СтрНайти(ИмяФормы,"ЖурналДокументов") = 0 Тогда
		
		КомандаСозданияНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСозданияНаОсновании.Обработчик = "ВводНаОснованииУТКлиент.СозданиеСвязанныхОбъектов";
		КомандаСозданияНаОсновании.Идентификатор = "СозданиеСвязанныхОбъектов";
		КомандаСозданияНаОсновании.Представление = НСтр("ru = 'Создание связанных объектов...'");
		КомандаСозданияНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСозданияНаОсновании.Порядок = 100;
	КонецЕсли;
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании) Экспорт

	Если ПравоДоступа("Добавление", Метаданные.БизнесПроцессы.Задание) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.БизнесПроцессы.Задание.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.БизнесПроцессы.Задание);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Ложь;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьБизнесПроцессыИЗадачи";
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

#КонецОбласти 