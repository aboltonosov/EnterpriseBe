
#Область ПрограммныйИнтерфейс

// Возвращает схему запроса по значению переданного индекса в пакете запросов
//
// Параметры:
//  СхемаЗапроса         - СхемаЗапроса - схема запроса
//  ИндексЗапросаВПакете - Число - индекс запроса в пакете запросов. Если не задано, то последний запрос в пакете
//
// Возвращаемое значение:
//  ЗапросВыбораСхемыЗапроса, ЗапросУничтоженияТаблицыСхемыЗапроса - измененный текст запроса или запрос
//
Функция ЗапросПакетаЗапросов(Знач СхемаЗапроса, ИндексЗапросаВПакете = Неопределено) Экспорт
	Перем ЗапросПакетаЗапросов;
	
	ПакетЗапросов = СхемаЗапроса.ПакетЗапросов;
	
	Если ИндексЗапросаВПакете = Неопределено Тогда
		ИндексЗапросаВПакете = ПакетЗапросов.Количество() - 1;
	КонецЕсли;
	
	ЗапросПакетаЗапросов = ПакетЗапросов.Получить(ИндексЗапросаВПакете);
	
	Возврат ЗапросПакетаЗапросов;
КонецФункции 

// Добавляет новое поле в конец секции выборки переданного запроса
//
// Параметры:
//  Запрос        - Строка, Запрос - текст запроса или запрос
//  ВыражениеПоля - Строка         - выражение поля для секции выборки
//  ПсевдонимПоля - Строка         - псевдоним поля для секции выборки
//  ИндексЗапросаВПакете           - Число - индекс запроса в пакете запросов. Если не задано, то последний запрос в пакете
//  РасширениеЯзыкаЗапросовСКД     - Булево - Истина, когда требуется дополнительно добавить поле в секцию ВЫБРАТЬ расширения языка запросов СКД
//
// Возвращаемое значение:
//  Строка, Запрос - измененный текст запроса или запрос
//
Функция ДобавитьПолеВыборкиВЗапрос(Знач Запрос, ВыражениеПоля, ПсевдонимПоля = "", Знач ИндексЗапросаВПакете = Неопределено, РасширениеЯзыкаЗапросовСКД = Ложь) Экспорт
	
	Если ТипЗнч(Запрос) = Тип("Строка") Тогда
		ТекстЗапроса = Запрос;
	ИначеЕсли ТипЗнч(Запрос) = Тип("Запрос") Тогда 
		ТекстЗапроса = Запрос.Текст;
	Иначе
		ВызватьИсключение НСтр("ru= 'Некорректный тип параметра 1'") ;
	КонецЕсли;
	
	СхемаЗапроса = Новый СхемаЗапроса;
	
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	
	ИзменяемыйЗапрос = ЗапросПакетаЗапросов(СхемаЗапроса, ИндексЗапросаВПакете);
	
	Если ТипЗнч(ИзменяемыйЗапрос) = Тип("ЗапросУничтоженияТаблицыСхемыЗапроса") Тогда
		ВызватьИсключение НСтр("ru= 'Невозможно добавить поля в запрос уничтожения таблицы.'"); 
	КонецЕсли;
	
	ВыбираемыеПоля = ИзменяемыйЗапрос.Операторы[0].ВыбираемыеПоля;
	НовоеПоле = ВыбираемыеПоля.Добавить(ВыражениеПоля);
	
	Колонки = ИзменяемыйЗапрос.Колонки;
	НоваяКолонка = Колонки.Найти(НовоеПоле);
	Если ЗначениеЗаполнено(ПсевдонимПоля) Тогда
		НоваяКолонка.Псевдоним = ПсевдонимПоля;
	КонецЕсли;
	
	ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
	
	Если РасширениеЯзыкаЗапросовСКД Тогда
		ВыражениеСодержитПараметр = СтрНайти(ВыражениеПоля, "&");
		
		ДобавитьРасширенноеПолеВОбластьЗапроса(ТекстЗапроса, "ВЫБРАТЬ", ВыражениеПоля, ПсевдонимПоля, Не ВыражениеСодержитПараметр);
	КонецЕсли;
	
	// Удалим "мусор" схемы запроса
	Для НомерПоля = 1 По 9 Цикл 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, " КАК Поле" + НомерПоля, "");
	КонецЦикла;
	
	Если ТипЗнч(Запрос) = Тип("Строка") Тогда
		Запрос = ТекстЗапроса;
	ИначеЕсли ТипЗнч(Запрос) = Тип("Запрос") Тогда 
		Запрос.Текст = ТекстЗапроса;
	КонецЕсли;
	
	Возврат Запрос;
	
КонецФункции

// Добавляет новое поле в конец области расширения языка запросов СКД
//
// Параметры:
//  Запрос        - Строка, Запрос - текст запроса или запрос
//  ТипОбласти    - Строка         - может принимать значения "ВЫБРАТЬ" или "ГДЕ". В противном случае будет выдано исключение.
//  ВыражениеПоля - Строка         - выражение поля для секции выборки
//  ПсевдонимПоля - Строка         - псевдоним поля для секции выборки
//  ДочерниеПоля  - Булево         - Истина, когда требуется сделать доступными для СКД дочерние поля
//
// Возвращаемое значение:
//  Булево - Истина, когда вставка поля произведена и запрос изменен
//
Функция ДобавитьРасширенноеПолеВОбластьЗапроса(Запрос, ТипОбласти, ВыражениеПоля, ПсевдонимПоля = "Поле1", ДочерниеПоля = Ложь) Экспорт
	ВставкаПроизведена = Ложь;
	
	Если ТипЗнч(Запрос) = Тип("Строка") Тогда
		ТекстЗапроса = Запрос;
	ИначеЕсли ТипЗнч(Запрос) = Тип("Запрос") Тогда 
		ТекстЗапроса = Запрос.Текст;
	Иначе
		ВызватьИсключение НСтр("ru= 'Некорректный тип параметра 1'") ;
	КонецЕсли;
	
	Если Не (ТипОбласти = "ВЫБРАТЬ" ИЛИ ТипОбласти = "ГДЕ") Тогда
		ВызватьИсключение НСтр("ru= 'Некорректное значение параметра 2'") ;
	КонецЕсли;
	
	ЭтоОбластьВыбрать   = (ТипОбласти = "ВЫБРАТЬ");
	ЭтоОбластьГде       = (ТипОбласти = "ГДЕ");
	
	ТегОбласти = "{" + ТипОбласти;
	ТегЗакрытияОбласти = "}";
	РазделительПолей = "," + Символы.ПС;
	ТипОбластиВРег = ВРег(ТипОбласти);
	
	// На шаге 1 выделим текст после начала области вставки
	ЭлементыОбластиШаг1 = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТекстЗапроса, ТегОбласти);
	КоличествоЭлементовЭтап1 = ЭлементыОбластиШаг1.Количество();
	
	Если Не (КоличествоЭлементовЭтап1 = 1 Или КоличествоЭлементовЭтап1 = 2) Тогда
		ТекстИсключения = НСтр("ru= 'Некорректная область %1 расширения языка запроса СКД'");
		ТекстИсключения = СтрШаблон(ТекстИсключения, ТипОбластиВРег);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	// На шаге 2 выделим текст до окончания области вставки
	Если КоличествоЭлементовЭтап1 = 2 Тогда
		СтрокиПослеОбласти = ЭлементыОбластиШаг1[1]; // Строки после тега области
		
		ЭлементыОбластиШаг2 = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокиПослеОбласти, ТегЗакрытияОбласти);
		КоличествоЭлементовЭтап2 = ЭлементыОбластиШаг2.Количество();
		
		Если КоличествоЭлементовЭтап2 = 1 Тогда
			ТекстИсключения = НСтр("ru= 'Некорректное закрытие области %1 расширения языка запроса СКД'");
			ТекстИсключения = СтрШаблон(ТекстИсключения, ТипОбластиВРег);
			
			ВызватьИсключение ТекстИсключения;
		Иначе
			ОбластьВставки = ЭлементыОбластиШаг2[0]; // Текст области - между фигурными скобками
			
			// Добавим новое расширенное поле
			ПоляОбласти = СтрРазделить(ОбластьВставки, РазделительПолей, Ложь);
			
			ВставляемоеВыражениеПоля = ?(Не ЭтоОбластьВыбрать, ВыражениеПоля + ?(ДочерниеПоля, ".*", "") +  " КАК ", "") + ?(ЗначениеЗаполнено(ПсевдонимПоля), ПсевдонимПоля, "");
			
			ПоляОбласти.Добавить(ВставляемоеВыражениеПоля);
			
			// Соберем текст области и текст запроса
			ОбластьВставки = СтрСоединить(ПоляОбласти, РазделительПолей);
		
		КонецЕсли;
		
		ЭлементыОбластиШаг2[0] = ОбластьВставки;
		ТекстЗапросаШаг2 = СтрСоединить(ЭлементыОбластиШаг2, ТегЗакрытияОбласти);
		
		ЭлементыОбластиШаг1[1] = ТекстЗапросаШаг2;
		ТекстЗапросаШаг1 = СтрСоединить(ЭлементыОбластиШаг1, ТегОбласти);
	КонецЕсли;
		
	Если ТипЗнч(Запрос) = Тип("Строка") Тогда
		Запрос = ТекстЗапросаШаг1;
	ИначеЕсли ТипЗнч(Запрос) = Тип("Запрос") Тогда 
		Запрос.Текст = ТекстЗапросаШаг1;
	КонецЕсли;
		
	Возврат ВставкаПроизведена;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


#КонецОбласти