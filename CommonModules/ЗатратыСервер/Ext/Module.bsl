////////////////////////////////////////////////////////////////////////////////
//
// ЗатратыСервер: Распределение производственных затрат и затрат незавершенного производства.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура выполняет запись движений производственных затрат.
//
// Параметры:
//	ДополнительныеСвойства - Структура - структура с данными для записи
//	Движения - Движения - Движения регистра "Производственные затраты"
//	Отказ - Булево - Признак отказа от записи движений
//
Процедура ОтразитьМатериалыИРаботыВПроизводстве(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаМатериалыИРаботыВПроизводстве;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Набор = Движения.МатериалыИРаботыВПроизводстве;
	Набор.Записывать = Истина;
	Набор.Загрузить(Таблица);
	
КонецПроцедуры

// Процедура выполняет запись движений партий производственных затрат.
//
// Параметры:
//	ДополнительныеСвойства - Структура - структура с данными для записи
//	Движения - Движения - Движения регистра "Партии производственных затрат"
//	Отказ - Булево - Признак отказа от записи движений
//
Процедура ОтразитьПартииПроизводственныхЗатрат(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииПроизводственныхЗатрат;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Набор = Движения.ПартииПроизводственныхЗатрат;
	Набор.Записывать = Истина;
	Набор.Загрузить(Таблица);
	
КонецПроцедуры

//++ НЕ УТ

// Устанавливает параметры выбора для правила распределения в зависимости от способа учета производственных затрат.
//
// Параметры:
//	Подразделение - СправочникСсылка.СтруктураПредприятия - подразделение, в котором выполняется распределение
//	ВариантРаспределения - ПеречислениеСсылка.СпособыРаспределенияСтатейРасходов - вариант распределения
//	ЭлементПравилоРаспределения - ПолеФормы - Поле для ввода правила распределения
//	Назначение - СправочникСсылка.Назначения - Назначение расхода
//
Процедура НастроитьПараметрыВыбораПравилРаспределения(Подразделение, ВариантРаспределения, ЭлементПравилоРаспределения, Назначение) Экспорт
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.НазначениеПравила", Назначение));
	
	Если ЗначениеЗаполнено(Подразделение)
		И (ВариантРаспределения = Перечисления.СпособыРаспределенияСтатейРасходов.ПоЭтапамПоПравилуВДанномПодразделении Или ВариантРаспределения = Неопределено) Тогда
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Подразделение, "ПроизводствоПоЗаказам, ИспользуетсяСписаниеЗатратНаВыпуск");
		
		Если Не Реквизиты.ПроизводствоПоЗаказам И Не Реквизиты.ИспользуетсяСписаниеЗатратНаВыпуск Тогда
			
			МассивБазРаспределения = Новый Массив;
			МассивБазРаспределения.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.КоличествоПродукции);
			МассивБазРаспределения.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ВесПродукции);
			МассивБазРаспределения.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ОбъемПродукции);
			МассивБазРаспределения.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ПлановаяСтоимостьПродукции);
			МассивБазРаспределения.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.КоличествоУказанныхМатериалов);
			МассивБазРаспределения.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ВесУказанныхМатериалов);
			МассивБазРаспределения.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.ОбъемУказанныхМатериалов);
			МассивБазРаспределения.Добавить(Перечисления.ТипыБазыРаспределенияРасходов.НормативРасходаМатериала);
			
			МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.БазаРаспределения", Новый ФиксированныйМассив(МассивБазРаспределения)));
			
		КонецЕсли;
		
	КонецЕсли;
	
	ЭлементПравилоРаспределения.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
КонецПроцедуры

// Функция формирует таблицу выполненных этапов производства.
//
// Параметры:
//	Параметры - Структура - Структура передаваемых параметров
//
// Возвращаемое значение:
//	ТаблицаЗначений - таблица этапов производства
//
Функция ЭтапыПроизводстваДляРаспределенияЗатрат(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Распоряжение.Распоряжение КАК ЗаказНаПроизводство,
	|	ДД.Распоряжение.КодСтроки КАК КодСтроки
	|ПОМЕСТИТЬ втВыпускиПродукции
	|ИЗ
	|	РегистрНакопления.ВыпускПродукции.Обороты(&ПериодНачало, &ПериодОкончание) КАК ДД
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|;
	|
	|
	|ВЫБРАТЬ
	|	Заказы.ЗаказПоставщику КАК ЗаказПоставщику,
	|	Заказы.Номенклатура КАК Номенклатура,
	|	Заказы.КодСтроки КАК КодСтроки,
	|	Заказы.КОформлениюНачальныйОстаток КАК НачальныйОстаток,
	|	Заказы.КОформлениюПриход КАК Приход
	|ПОМЕСТИТЬ ВТВТЗаказыПереработчикамВрем
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(&ПериодНачало,
	|									   &ПериодОкончание, , ,
	|									   ЗаказПоставщику ССЫЛКА Документ.ЗаказПереработчику
	|									   И (ЗаказПоставщику = &Заказ ИЛИ &ПоВсемЗаказам)) КАК Заказы
	|ГДЕ
	|	НЕ &ПартионныйУчетВерсии22
	|ИНДЕКСИРОВАТЬ ПО Заказы.ЗаказПоставщику
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таб.ЗаказПоставщику,
	|	Таб.КодСтроки
	|
	|ПОМЕСТИТЬ ВТЗаказыПереработчикам
	|
	|ИЗ ВТВТЗаказыПереработчикамВрем КАК Таб
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПереработчику КАК ДокЗаказ
	|	ПО Таб.ЗаказПоставщику = ДокЗаказ.Ссылка
	|		И ДокЗаказ.Организация = &Организация
	|		И (ДокЗаказ.Подразделение = &Подразделение ИЛИ &ПоВсемПодразделениям)
	|		И (ДокЗаказ.Назначение = &Назначение ИЛИ &ПоВсемНазначениям)
	|		И (ДокЗаказ.Назначение.НаправлениеДеятельности = &НаправлениеДеятельности ИЛИ &ПоВсемНаправлениямДеятельности)
	|		И (&НеТолькоТекущийМесяц ИЛИ Таб.НачальныйОстаток = 0)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО Таб.Номенклатура = СпрНоменклатура.Ссылка
	|		И (&ПоВсемГруппамПродукции ИЛИ СпрНоменклатура.ГруппаАналитическогоУчета = &ГруппаПродукции)
	|ГДЕ
	|	НЕ &ПартионныйУчетВерсии22
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Таб.ЗаказПоставщику,
	|	Таб.КодСтроки
	|
	|;
	|/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заказы.ЗаказПоставщику КАК ЗаказНаПроизводство,
	|	Заказы.КодСтроки КАК КодСтрокиПродукция,
	|	НЕОПРЕДЕЛЕНО КАК Этап,
	|	НЕОПРЕДЕЛЕНО КАК Спецификация,
	|	СУММА(ВЫБОР 
	|				КОГДА Заказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА Заказы.КОформлению
	|				ИНАЧЕ 0
	|			   КОНЕЦ) КАК ЗапланированоЗаказом,
	|	СУММА(ВЫБОР 
	|				КОГДА Заказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Заказы.КОформлению
	|				ИНАЧЕ 0
	|			   КОНЕЦ) КАК Выполнено
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам КАК Заказы
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаказыПереработчикам КАК ВТЗаказы
	|	ПО Заказы.ЗаказПоставщику = ВТЗаказы.ЗаказПоставщику
	|		И Заказы.КодСтроки = ВТЗаказы.КодСтроки
	|		И (Заказы.Период >= &ПериодНачало)
	|		И (&НеТолькоТекущийМесяц
	|			ИЛИ Заказы.Период МЕЖДУ &ПериодНачало И &ПериодОкончание)
	|		И Заказы.Активность
	|ГДЕ
	|	НЕ &ПартионныйУчетВерсии22
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Заказы.ЗаказПоставщику,
	|	Заказы.КодСтроки
	|
	//++ НЕ УТКА
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Записи.Распоряжение КАК ЗаказНаПроизводство,
	|	Записи.КодСтрокиПродукция КАК КодСтрокиПродукция,
	|	Записи.Этап КАК Этап,
	|	Записи.Этап.Владелец КАК Спецификация,
	|	СУММА(Записи.ЗапланированоЗаказом) КАК ЗапланированоЗаказом,
	|	СУММА(Записи.Выполнено + Записи.Брак) КАК Выполнено
	|
	|ИЗ
	|	РегистрНакопления.ЭтапыПроизводства КАК Записи
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|	ПО Записи.Распоряжение = ЗаказНаПроизводство.Ссылка
	|		И ЗаказНаПроизводство.Организация = &Организация
	|		И (ЗаказНаПроизводство.Ссылка = &Заказ ИЛИ &ПоВсемЗаказам)
	|		И (Записи.Подразделение = &Подразделение ИЛИ &ПоВсемПодразделениям)
	|		И (Записи.ОкончаниеЗавершающегоБуфера >= &ПериодНачало)
	|		И (&НеТолькоТекущийМесяц ИЛИ Записи.ОкончаниеЗавершающегоБуфера МЕЖДУ &ПериодНачало И &ПериодОкончание)
	|		И (&НеТолькоТекущийМесяц ИЛИ Записи.НачалоПредварительногоБуфера МЕЖДУ &ПериодНачало И &ПериодОкончание)
	|		И Записи.Активность
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство.Продукция КАК ТЧПродукция
	|	ПО ЗаказНаПроизводство.Ссылка = ТЧПродукция.Ссылка
	|		И Записи.КодСтрокиПродукция = ТЧПродукция.КодСтроки
	|		И (ТЧПродукция.Назначение = &Назначение ИЛИ &ПоВсемНазначениям)
	|		И (ТЧПродукция.Назначение.НаправлениеДеятельности = &НаправлениеДеятельности ИЛИ &ПоВсемНаправлениямДеятельности)
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО ТЧПродукция.Номенклатура = СпрНоменклатура.Ссылка
	|		И (&ПоВсемГруппамПродукции ИЛИ СпрНоменклатура.ГруппаАналитическогоУчета = &ГруппаПродукции)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ втВыпускиПродукции КАК ВыпускПродукции
	|	ПО (ТЧПродукция.Ссылка = ВыпускПродукции.ЗаказНаПроизводство
	|		И ТЧПродукция.КодСтроки = ВыпускПродукции.КодСтроки)
	|
	|ГДЕ 
	|	НЕ &ПартионныйУчетВерсии22 ИЛИ НЕ ВыпускПродукции.ЗаказНаПроизводство ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Записи.Распоряжение,
	|	Записи.КодСтрокиПродукция,
	|	Записи.Этап,
	|	ТЧПродукция.Номенклатура,
	|	ТЧПродукция.Характеристика,
	|	ТЧПродукция.Спецификация,
	|	ТЧПродукция.Назначение
	//-- НЕ УТКА
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказНаПроизводство");
	
	Назначение = Неопределено;
	НаправлениеДеятельности = Неопределено;
	Подразделение = Неопределено;
	ГруппаПродукции = Неопределено;
	Заказ = Неопределено;
	Параметры.Свойство("Назначение", Назначение);
	Параметры.Свойство("НаправлениеДеятельности", НаправлениеДеятельности);
	Параметры.Свойство("Подразделение", Подразделение);
	Параметры.Свойство("ГруппаПродукции", ГруппаПродукции);
	Параметры.Свойство("Заказ", Заказ);
	
	Запрос.УстановитьПараметр("ПериодНачало",	 Параметры.ПериодНачало);
	Запрос.УстановитьПараметр("ПериодОкончание", Параметры.ПериодОкончание);
	Запрос.УстановитьПараметр("Организация",     Параметры.Организация);
	Запрос.УстановитьПараметр("Назначение",       Назначение);
	Запрос.УстановитьПараметр("ПоВсемНазначениям", Не ЗначениеЗаполнено(Назначение));
	Запрос.УстановитьПараметр("НаправлениеДеятельности",        НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ПоВсемНаправлениямДеятельности", Не ЗначениеЗаполнено(НаправлениеДеятельности));
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ПоВсемПодразделениям", Не ЗначениеЗаполнено(Подразделение));
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.УстановитьПараметр("ПоВсемЗаказам", Не ЗначениеЗаполнено(Заказ));
	Запрос.УстановитьПараметр("ГруппаПродукции", ГруппаПродукции);
	Запрос.УстановитьПараметр("ПоВсемГруппамПродукции", Не ЗначениеЗаполнено(ГруппаПродукции));
	Запрос.УстановитьПараметр("НеТолькоТекущийМесяц", НЕ Параметры.ТолькоТекущийМесяц);
	Запрос.УстановитьПараметр("ПартионныйУчетВерсии22", Параметры.ПартионныйУчетВерсии22);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Процедура выполняет запись движений в таблицу последовательности производственных затрат.
//
// Параметры:
//	ДополнительныеСвойства - Структура - структура с данными для записи
//	Движения - Движения - Движения регистра "Выпуск продукции"
//	Отказ - Булево - Признак отказа от записи движений
//
Процедура ОтразитьВыпускПродукции(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаВыпускПродукции;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ВыпускПродукции.Записывать = Истина;
	Движения.ВыпускПродукции.Загрузить(Таблица);
	
КонецПроцедуры

// Процедура выполняет запись движений в таблицу последовательности производственных затрат.
//
// Параметры:
//	ДополнительныеСвойства - Структура - структура с данными для записи
//	Движения - Движения - Движения регистра "РаспоряженияНаСписаниеПоНормативам"
//	Отказ - Булево - Признак отказа от записи движений
//
Процедура ОтразитьРаспоряженияНаСписаниеПоНормативам(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаРаспоряженияНаСписаниеПоНормативам;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.РаспоряженияНаСписаниеПоНормативам.Записывать = Истина;
	Движения.РаспоряженияНаСписаниеПоНормативам.Загрузить(Таблица);
	
КонецПроцедуры

// Процедура выполняет запись движений в таблицу последовательности производственных затрат.
//
// Параметры:
//	ДополнительныеСвойства - Структура - структура с данными для записи
//	Движения - Движения - Движения регистра "ПрочиеРасходыНезавершенногоПроизводства"
//	Отказ - Булево - Признак отказа от записи движений
//
Процедура ОтразитьПрочиеРасходыНезавершенногоПроизводства(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПрочиеРасходыНезавершенногоПроизводства;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Набор = Движения.ПрочиеРасходыНезавершенногоПроизводства;
	Набор.Записывать = Истина;
	Набор.Загрузить(Таблица);
	
КонецПроцедуры

// Процедура выполняет запись движений в таблицу партий незавершенного производства.
//
// Параметры:
//	ДополнительныеСвойства - Структура - структура с данными для записи
//	Движения - Движения - Движения регистра "ПартииНезавершенногоПроизводства"
//	Отказ - Булево - Признак отказа от записи движений
//
Процедура ОтразитьПартииНезавершенногоПроизводства(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПартииНезавершенногоПроизводства;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Набор = Движения.ПартииНезавершенногоПроизводства;
	Набор.Записывать = Истина;
	Набор.Загрузить(Таблица);
	
КонецПроцедуры

// Процедура используется для выполнения регламентного задания по формированию документов
// "Списание затрат на выпуск".
Процедура СписатьЗатратыНаВыпуск() Экспорт
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания();
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство") Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(НСтр("ru='Списание затрат на выпуск без заказов'"));
	
	Документы.СписаниеЗатратНаВыпуск.ДокументыПоПараметрам(Новый Структура, , Истина);
	
КонецПроцедуры

//-- НЕ УТ

//++ НЕ УТКА

// Функция формирует таблицу этапов производства.
//
// Параметры:
//	Параметры - Структура - Структура передаваемых параметров
//
// Возвращаемое значение:
//	ТаблицаЗначений - таблица этапов производства
//
Функция ЭтапыДляРаспределенияЗатрат(Параметры) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЭтапПроизводства2_2.Подразделение КАК Подразделение,
	|	ЭтапПроизводства2_2.АналитикаУчетаПартийПроизводства КАК ПартияПроизводства,
	|	ЭтапПроизводства2_2.Ссылка КАК Этап,
	|	ВЫБОР
	|		КОГДА &НачалоПериода МЕЖДУ ЭтапПроизводства2_2.ФактическоеНачалоЭтапа И ЭтапПроизводства2_2.ФактическоеОкончаниеЭтапа
	|				ИЛИ &НачалоПериода >= ЭтапПроизводства2_2.ФактическоеНачалоЭтапа
	|					И ЭтапПроизводства2_2.ФактическоеОкончаниеЭтапа = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ &ОкончаниеПериода МЕЖДУ ЭтапПроизводства2_2.ФактическоеНачалоЭтапа И ЭтапПроизводства2_2.ФактическоеОкончаниеЭтапа
	|				ИЛИ &ОкончаниеПериода >= ЭтапПроизводства2_2.ФактическоеНачалоЭтапа
	|					И ЭтапПроизводства2_2.ФактическоеОкончаниеЭтапа = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтапТекущегоМесяца,
	|	ЭтапПроизводства2_2.Спецификация,
	|	ЭтапПроизводства2_2.ОсновноеИзделиеНоменклатура КАК ОсновноеИзделиеНоменклатура,
	|	ЭтапПроизводства2_2.ОсновноеИзделиеХарактеристика КАК ОсновноеИзделиеХарактеристика,
	|	ЭтапПроизводства2_2.Назначение,
	|	ЭтапПроизводства2_2.ОсновноеИзделиеНоменклатура.ГруппаАналитическогоУчета КАК ГруппаПродукции,
	|	ЭтапПроизводства2_2.Запланировано,
	|	ЭтапПроизводства2_2.Выполнено,
	|	ЭтапПроизводства2_2.Распоряжение КАК Заказ
	|ПОМЕСТИТЬ ВтЭтапы
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
	|ГДЕ
	|	ЭтапПроизводства2_2.Организация = &Организация
	|	И ЭтапПроизводства2_2.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат),
	|									ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ЭтапПроизводства2_2.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтЭтапы.Подразделение,
	|	ВтЭтапы.ПартияПроизводства,
	|	ВтЭтапы.Этап,
	|	ВтЭтапы.Спецификация,
	|	ВтЭтапы.ОсновноеИзделиеНоменклатура,
	|	ВтЭтапы.ОсновноеИзделиеХарактеристика,
	|	ВтЭтапы.Запланировано,
	|	ВтЭтапы.Выполнено,
	|	ВтЭтапы.Назначение
	|ИЗ
	|	ВтЭтапы КАК ВтЭтапы
	|ГДЕ
	|	(ВтЭтапы.Подразделение = &Подразделение
	|			ИЛИ &ВсеПодразделения)
	|	И (ВтЭтапы.ЭтапТекущегоМесяца
	|			ИЛИ &ЭтапыЗаВесьПериод)
	|	И (ВтЭтапы.ГруппаПродукции = &ГруппаПродукции
	|			ИЛИ &ВсеГруппыПродукции)
	|	И (ВтЭтапы.Назначение = &Назначение
	|			ИЛИ &ВсеНазначения)
	|	И (ВтЭтапы.Заказ = &Заказ
	|			ИЛИ &ВсеЗаказы)");
	
	Назначение = Неопределено;
	Подразделение = Неопределено;
	ГруппаПродукции = Неопределено;
	Заказ = Неопределено;
	
	Параметры.Свойство("Назначение",      Назначение);
	Параметры.Свойство("Подразделение",   Подразделение);
	Параметры.Свойство("ГруппаПродукции", ГруппаПродукции);
	Параметры.Свойство("Заказ",           Заказ);
	
	Запрос.УстановитьПараметр("НачалоПериода",        Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",     Параметры.ОкончаниеПериода);
	
	Запрос.УстановитьПараметр("Организация",          Параметры.Организация);
	Запрос.УстановитьПараметр("Заказ",                Заказ);
	Запрос.УстановитьПараметр("ВсеЗаказы",            Не ЗначениеЗаполнено(Заказ));
	Запрос.УстановитьПараметр("Назначение",           Назначение);
	Запрос.УстановитьПараметр("ВсеНазначения",        Не ЗначениеЗаполнено(Назначение));
	Запрос.УстановитьПараметр("Подразделение",        Подразделение);
	Запрос.УстановитьПараметр("ВсеПодразделения",     Не ЗначениеЗаполнено(Подразделение));
	Запрос.УстановитьПараметр("ГруппаПродукции",      ГруппаПродукции);
	Запрос.УстановитьПараметр("ВсеГруппыПродукции",   Не ЗначениеЗаполнено(ГруппаПродукции));
	Запрос.УстановитьПараметр("ЭтапыЗаВесьПериод",    НЕ Параметры.ТолькоТекущийМесяц);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Функция формирует таблицу партий производства.
//
// Параметры:
//	Параметры - Структура - Структура отборов
//
// Возвращаемое значение:
//	ТаблицаЗначений - таблица партий производства
//
Функция ПартииПроизводстваДляРаспределенияЗатрат(Параметры) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Изделия.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ЕстьВыпускПродукции
	|ПОМЕСТИТЬ ЭтапыСВыпуском
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК Изделия
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
	|			ПО Изделия.Ссылка = ЭтапПроизводства2_2.Ссылка
	|ГДЕ
	|	ЭтапПроизводства2_2.Организация = &Организация
	|	И ЭтапПроизводства2_2.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат), ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ЭтапПроизводства2_2.Проведен
	|	И НЕ ЭтапПроизводства2_2.ПроизводствоНаСтороне
	|	И Изделия.Произведено
	|	И Изделия.ДатаПроизводства МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Изделия.Ссылка КАК Ссылка,
	|	ИСТИНА КАК ЕстьВыпускПродукции
	|ИЗ
	|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК Изделия
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
	|			ПО Изделия.Ссылка = ЭтапПроизводства2_2.Ссылка
	|ГДЕ
	|	ЭтапПроизводства2_2.Организация = &Организация
	|	И ЭтапПроизводства2_2.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат), ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ЭтапПроизводства2_2.Проведен
	|	И НЕ ЭтапПроизводства2_2.ПроизводствоНаСтороне
	|	И Изделия.Произведено
	|	И Изделия.ДатаПроизводства МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭтапПроизводства2_2.ВыпускающийЭтап КАК ПартияПроизводства,
	|	ВЫБОР
	|		КОГДА &ДетализироватьПоЭтапам
	|			ТОГДА ЭтапПроизводства2_2.Подразделение
	|		ИНАЧЕ ВыпускающийЭтапПроизводства2_2.Подразделение
	|	КОНЕЦ КАК Подразделение,
	|	ВЫБОР
	|		КОГДА &ДетализироватьПоЭтапам
	|			ТОГДА ЭтапПроизводства2_2.Ссылка
	|		ИНАЧЕ ВыпускающийЭтапПроизводства2_2.Ссылка
	|	КОНЕЦ КАК Этап,
	|	ВыпускающийЭтапПроизводства2_2.ОсновноеИзделиеНоменклатура КАК Номенклатура,
	|	ВыпускающийЭтапПроизводства2_2.ОсновноеИзделиеХарактеристика КАК Характеристика,
	|	ВыпускающийЭтапПроизводства2_2.Спецификация КАК Спецификация,
	|	ВыпускающийЭтапПроизводства2_2.Назначение КАК Назначение,
	|	ВЫБОР
	|		КОГДА &НачалоПериода МЕЖДУ ЭтапПроизводства2_2.ФактическоеНачалоЭтапа И ЭтапПроизводства2_2.ФактическоеОкончаниеЭтапа
	|				ИЛИ &НачалоПериода >= ЭтапПроизводства2_2.ФактическоеНачалоЭтапа
	|					И ЭтапПроизводства2_2.ФактическоеОкончаниеЭтапа = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ &ОкончаниеПериода МЕЖДУ ЭтапПроизводства2_2.ФактическоеНачалоЭтапа И ЭтапПроизводства2_2.ФактическоеОкончаниеЭтапа
	|				ИЛИ &ОкончаниеПериода >= ЭтапПроизводства2_2.ФактическоеНачалоЭтапа
	|					И ЭтапПроизводства2_2.ФактическоеОкончаниеЭтапа = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ &НачалоПериода <= ЭтапПроизводства2_2.ФактическоеНачалоЭтапа
	|					И &ОкончаниеПериода >= ЭтапПроизводства2_2.ФактическоеОкончаниеЭтапа
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтапТекущегоМесяца,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПартийПроизводства,
	|	ЕСТЬNULL(ЭтапыСВыпуском.ЕстьВыпускПродукции, ЛОЖЬ) КАК ЕстьВыпускПродукции
	|ПОМЕСТИТЬ ВтЭтапы
	|ИЗ
	|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ВыпускающийЭтапПроизводства2_2
	|		ПО (ВыпускающийЭтапПроизводства2_2.Ссылка = ЭтапПроизводства2_2.ВыпускающийЭтап)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЭтапыСВыпуском КАК ЭтапыСВыпуском
	|		ПО ЭтапыСВыпуском.Ссылка = ЭтапПроизводства2_2.ВыпускающийЭтап
	|ГДЕ
	|	ЭтапПроизводства2_2.Организация = &Организация
	|	И ЭтапПроизводства2_2.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат), ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен))
	|	И ЭтапПроизводства2_2.Проведен
	|	И НЕ ЭтапПроизводства2_2.ПроизводствоНаСтороне
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВыходныеИзделия.Ссылка,
	|	ДанныеДокумента.Подразделение,
	|	ТаблицаВыходныеИзделия.Ссылка,
	|	ТаблицаВыходныеИзделия.Номенклатура,
	|	ТаблицаВыходныеИзделия.Характеристика,
	|	ТаблицаВыходныеИзделия.Спецификация,
	|	ТаблицаВыходныеИзделия.Назначение,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ТаблицаВыходныеИзделия.АналитикаУчетаПартийПроизводства,
	|	ИСТИНА КАК ЕстьВыпускПродукции
	|ИЗ
	|	Документ.ПроизводствоБезЗаказа КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТаблицаВыходныеИзделия
	|		ПО ДанныеДокумента.Ссылка = ТаблицаВыходныеИзделия.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Организация = &Организация
	|	И ДанныеДокумента.Проведен
	|	И ТаблицаВыходныеИзделия.ОсновноеИзделиеГруппыЗатрат
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЭтапТекущегоМесяца,
	|	Подразделение,
	|	Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтЭтапы.ПартияПроизводства,
	|	ВтЭтапы.Подразделение,
	|	ВтЭтапы.Этап,
	|	ВтЭтапы.Номенклатура,
	|	ВтЭтапы.Характеристика,
	|	ВтЭтапы.Спецификация,
	|	ВтЭтапы.Назначение,
	|	ВтЭтапы.ЭтапТекущегоМесяца,
	|	ВтЭтапы.АналитикаУчетаПартийПроизводства
	|ИЗ
	|	ВтЭтапы КАК ВтЭтапы
	|ГДЕ
	|	(ВтЭтапы.ЭтапТекущегоМесяца
	|			ИЛИ &ЭтапыЗаВесьПериод)
	|	И (ВтЭтапы.Подразделение = &Подразделение
	|			ИЛИ &ВсеПодразделения)
	|	И (ВтЭтапы.Назначение = &Назначение
	|			ИЛИ &ВсеНазначения)
	|	И (ВтЭтапы.Назначение.НаправлениеДеятельности = &НаправлениеДеятельности
	|			ИЛИ &ВсеНаправленияДеятельности)
	|	И (ВтЭтапы.ЕстьВыпускПродукции
	|			ИЛИ НЕ &ТолькоЭтапыСВыпуском)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтЭтапы.Характеристика,
	|	ВтЭтапы.ПартияПроизводства,
	|	ВтЭтапы.АналитикаУчетаПартийПроизводства,
	|	ВтЭтапы.Этап,
	|	ВтЭтапы.ЭтапТекущегоМесяца,
	|	ВтЭтапы.Спецификация,
	|	ВтЭтапы.Номенклатура,
	|	ВтЭтапы.Назначение,
	|	ВтЭтапы.Подразделение");
	
	Подразделение	= Неопределено;
	Назначение		= Неопределено;
	НаправлениеДеятельности = Неопределено;
	ТолькоЭтапыСВыпуском = Ложь;
	
	Параметры.Свойство("Подразделение",	Подразделение);
	Параметры.Свойство("Назначение",	Назначение);
	Параметры.Свойство("НаправлениеДеятельности",	НаправлениеДеятельности);
	Параметры.Свойство("ТолькоЭтапыСВыпуском",		ТолькоЭтапыСВыпуском);
	
	Запрос.УстановитьПараметр("НачалоПериода",			Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",		Параметры.ОкончаниеПериода);
	
	Запрос.УстановитьПараметр("Организация",			Параметры.Организация);
	Запрос.УстановитьПараметр("ДетализироватьПоЭтапам",	Параметры.ДетализироватьПоЭтапам);
	Запрос.УстановитьПараметр("ЭтапыЗаВесьПериод",		НЕ Параметры.ТолькоТекущийМесяц);
	
	Запрос.УстановитьПараметр("Подразделение",			Подразделение);
	Запрос.УстановитьПараметр("ВсеПодразделения",		Не ЗначениеЗаполнено(Подразделение));
	
	Запрос.УстановитьПараметр("Назначение",				Назначение);
	Запрос.УстановитьПараметр("ВсеНазначения",			Не ЗначениеЗаполнено(Назначение));
	
	Запрос.УстановитьПараметр("НаправлениеДеятельности",НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ВсеНаправленияДеятельности",Не ЗначениеЗаполнено(НаправлениеДеятельности));
	
	Запрос.УстановитьПараметр("ТолькоЭтапыСВыпуском",	ТолькоЭтапыСВыпуском);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Процедура заполняет характеристики основного изделия в коллекции для партии производства.
//
// Параметры:
//	Коллекция - ТаблицаЗначений - Таблица, в которой необходимо заполнить характеристики основного изделия
//
Процедура ЗаполнитьХарактеристикиИзделийПоПартииПроизводства(Коллекция) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Коллекция.НомерСтроки,
	|	Коллекция.ПартияПроизводства,
	|	Коллекция.АналитикаУчетаПартийПроизводства
	|ПОМЕСТИТЬ Коллекция
	|ИЗ
	|	&Коллекция КАК Коллекция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Коллекция.НомерСтроки КАК Индекс,
	|	ЕСТЬNULL(ТаблицаВыходныеИзделия.Номенклатура, ЭтапПроизводства2_2.ОсновноеИзделиеНоменклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ТаблицаВыходныеИзделия.Характеристика, ЭтапПроизводства2_2.ОсновноеИзделиеХарактеристика) КАК Характеристика,
	|	ЕСТЬNULL(ТаблицаВыходныеИзделия.Спецификация, ЭтапПроизводства2_2.Спецификация) КАК Спецификация,
	|	ЕСТЬNULL(ТаблицаВыходныеИзделия.Назначение, ЭтапПроизводства2_2.Назначение) КАК Назначение
	|ИЗ
	|	Коллекция КАК Коллекция
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
	|		ПО Коллекция.ПартияПроизводства = ЭтапПроизводства2_2.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПроизводствоБезЗаказа.ВыходныеИзделия КАК ТаблицаВыходныеИзделия
	|		ПО (ТаблицаВыходныеИзделия.АналитикаУчетаПартийПроизводства = Коллекция.АналитикаУчетаПартийПроизводства)
	|			И (ТаблицаВыходныеИзделия.ОсновноеИзделиеГруппыЗатрат)
	|			И Коллекция.ПартияПроизводства = ТаблицаВыходныеИзделия.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Индекс");
	
	Запрос.УстановитьПараметр("Коллекция",	Коллекция.Выгрузить(, "НомерСтроки, ПартияПроизводства, АналитикаУчетаПартийПроизводства"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Для Номер = 0 По Коллекция.Количество() - 1 Цикл
		Выборка.Следующий(); // Количество строк в выборке по запросу всегда равно количеству строк в ТЧ
		ЗаполнитьЗначенияСвойств(Коллекция[Номер], Выборка);
	КонецЦикла;
	
КонецПроцедуры

// Процедура проверяет дату документа на соответствие дате перехода на партионный учет версии 2.2.
// Проверка выполняется для документов нового производства.
//
// Параметры:
//	Объект - ДокументОбъект.ЭтапПроизводства2_2, ДокументОбъект.ДвижениеПродукцииИМатериалов - проверяемый документ,
//	Дата - Дата - дата, на которую выполняется проверка,
//	Отказ - Булево - устанавливается в ИСТИНА, если дата перехода на новый партионный учет больше переданной даты.
//
Процедура ПроверитьИспользованиеПартионногоУчета22(Объект, Дата, Отказ) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Возврат;
	КонецЕсли;
	
	ДатаПереходаНаПартионныйУчетВерсии22 = УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ДатаПереходаНаПартионныйУчетВерсии22();
	
	ТекстОшибки = Неопределено;
	
	Если НЕ УниверсальныеМеханизмыПартийИСебестоимостиПовтИсп.ПартионныйУчетВерсии22() Тогда
		
		ТекстОшибки = НСтр("ru='Для производства версии 2.2 требуется установить соответствующий режим партионного учета.'");
		
	ИначеЕсли ДатаПереходаНаПартионныйУчетВерсии22 > НачалоМесяца(Дата) Тогда
		
		ТекстОшибки = НСтр("ru='Регистрация операций по производству версии 2.2 раньше даты перехода на партионный учет версии 2.2 недоступна.
								|Требуется изменить дату операции (%1) или дату перехода на партионный учет 2.2 (%2).'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстОшибки,
			Формат(Дата, "ДЛФ=D"),
			Формат(ДатаПереходаНаПартионныйУчетВерсии22, "ДЛФ=D"));
			
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Объект,,, Отказ);
	КонецЕсли;
	
КонецПроцедуры

//-- НЕ УТКА

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ НЕ УТ

#Область БлокировкаПриОбновленииИБ

Процедура ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ПредставлениеОперации)
	
	ВходящиеДанные = Новый Соответствие;
	
	ВходящиеДанные.Вставить(Метаданные.Документы.ВыпускПродукции);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.РаспоряженияНаСписаниеПоНормативам);
	
	ЗакрытиеМесяцаУТВызовСервера.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ВходящиеДанные, ПредставлениеОперации);
	
КонецПроцедуры

#КонецОбласти

//-- НЕ УТ

#КонецОбласти

