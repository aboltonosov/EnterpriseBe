////////////////////////////////////////////////////////////////////////////////
// Подсистема "Работа с контрагентами".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращаются реквизиты юридического лица по данным ЕГРЮЛ (наименование, адрес, коды и т.д.).
//
// Параметры:
//  ИНН  - Строка - ИНН юридического лица, реквизиты которого надо получить.
//
// Возвращаемое значение:
//   Структура   - реквизиты юридического лица. 
//                 Содержание структуры - см. функцию НовыеРеквизитыЮридическогоЛица.
//
Функция РеквизитыЮридическогоЛицаПоИНН(Знач ИНН) Экспорт
	
	// 4D:ERP для Беларуси, Дмитрий, 04.08.2017 10:58:05 
	// Проверка контрагентов, №14822 
	// {
	РеквизитыОрганизации = НовыеРеквизитыЮридическогоЛица();
	РеквизитыОрганизации.ИНН = СокрЛП(ИНН);
	
	ОписаниеОшибки = "";
	ОбъектXDTO     = Неопределено;
	
	Попытка
		HTTPСоединение = Новый HTTPСоединение(АдресСервиса());
		HTTPЗапрос = Новый HTTPЗапрос("getData?unp=" + РеквизитыОрганизации.ИНН + "&charset=UTF-8"); 
		HTTPОтвет = HTTPСоединение.Получить(HTTPЗапрос);
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ОписаниеОшибки     = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='УНП %1:'"), РеквизитыОрганизации.ИНН)
			+ Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
	КонецПопытки;
	
	Если HTTPОтвет.КодСостояния <> 200 Тогда
		Возврат РеквизитыОрганизации;	
	КонецЕсли;	
	
	ЧтениеXML = Новый ЧтениеXML; 
	ЧтениеXML.УстановитьСтроку(HTTPОтвет.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8));
	ОбъектXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML);

	ОбработатьОшибкуСервиса(ОбъектXDTO, ОписаниеОшибки, "getCorporationRequisitesByINN", РеквизитыОрганизации);
	
	Если ЗначениеЗаполнено(РеквизитыОрганизации.ОписаниеОшибки) Тогда
		Возврат РеквизитыОрганизации;
	КонецЕсли;
	
	ЗаполнитьНаименованияЮридическогоЛица(ОбъектXDTO, РеквизитыОрганизации);
	РеквизитыОрганизации.ДатаРегистрации = ОбъектXDTO.ROW.DREG;
	
	ЗаполнитьРегистрациюВНалоговомОргане(ОбъектXDTO, РеквизитыОрганизации);
	
	ЗаполнитьЮридическийАдрес(ОбъектXDTO, РеквизитыОрганизации, ФабрикаXDTO);
	
	Возврат РеквизитыОрганизации;
	// }
	// 4D
		
КонецФункции

// Возвращаются реквизиты индивидуального предпринимателя по данным ЕГРИП (ФИО, свидетельство о регистрации, коды и
// т.д.).
//
// Параметры:
//  ИНН  - Строка - ИНН индивидуального предпринимателя, реквизиты которого надо получить.
//
// Возвращаемое значение:
//   Структура   - реквизиты индивидуального предпринимателя. 
//                 Содержание структуры - см. функцию НовыеРеквизитыПредпринимателя.
//
Функция РеквизитыПредпринимателяПоИНН(Знач ИНН) Экспорт
	
	// 4D:ERP для Беларуси, Дмитрий, 04.08.2017 10:58:05 
	// Проверка контрагентов, №14822 
	// {
	Возврат РеквизитыЮридическогоЛицаПоИНН(ИНН);
	// }
	// 4D
	
КонецФункции

// Возвращаются основные реквизиты юридических лиц по данным ЕГРЮЛ, подходящих по условиям поиска по наименованию.
//
// Параметры:
//  Наименование - Строка - одно или несколько слов из наименования юридического лица для поиска в ЕГРЮЛ.
//  КодРегиона - Строка, 2 - код региона в юридическом адресе для поиска в ЕГРЮЛ.
//  Адрес - Строка - одно или несколько слов из юридического адреса (от региона до улицы) для поиска в ЕГРЮЛ.
//
// Возвращаемое значение:
//   Структура   - реквизиты найденных юридических лиц. Содержание структуры: 
//                 * РеквизитыЮрЛиц - Массив - реквизиты найденных юридических лиц.
//                     Элементы массива - Структура, описание см. функцию НовыеРеквизитыЮридическогоЛица.
//                     Заполняются только основные реквизиты (ИНН, наименование, юридический адрес, ФИО руководителя).
//                     Если найдено больше 20 контрагентов - возвращаются реквизиты только первых 20.
//                 * КоличествоНайденных - Число - общее количество найденных реквизитов (может быть больше 20).
//                 * ОписаниеОшибки - Строка - служебный реквизит.
//
Функция РеквизитыЮридическихЛицПоНаименованию(Знач Наименование, Знач КодРегиона = "", Знач Адрес = "") Экспорт
	
	РеквизитыОрганизаций = Новый Структура("РеквизитыОрганизаций,КоличествоНайденных,ОписаниеОшибки",
		Новый Массив, 0, Неопределено);
		
	// 4D:ERP для Беларуси, Дмитрий, 04.08.2017 11:05:27 
	// Проверка контрагентов, №14822 
	// {
	// Никаких действий не требуется
	// }
	// 4D
		
	Возврат РеквизитыОрганизаций;
	
КонецФункции

// Возвращается информация о связях юридического лица, его руководителей и учредителей 
// с другими лицами по данным ЕГРЮЛ.
//
// Параметры:
//  ИНН  - Строка - ИНН юридического лица, информацию о связях которого надо получить.
//
// Возвращаемое значение:
//   Структура   - информация о связях юридического лица. 
//                 Содержание структуры - см. функцию НоваяИнформацияОСвязяхЮридическогоЛица.
//
Функция ИнформацияОСвязяхЮридическогоЛицаПоИНН(Знач ИНН) Экспорт
	
	// 4D:ERP для Беларуси, Дмитрий, 04.08.2017 11:05:27 
	// Проверка контрагентов, №14822 
	// {
	Возврат Неопределено;
	// }
	// 4D
	
КонецФункции

// Возвращается информация о связях индивидуального предпринимателя с другими лицами по данным ЕГРЮЛ и ЕГРИП.
//
// Параметры:
//  ИНН  - Строка - ИНН индивидуального предпринимателя, информацию о связях которого надо получить.
//
// Возвращаемое значение:
//   Структура   - информация о связях индивидуального предпринимателя. 
//                 Содержание структуры - см. функцию НоваяИнформацияОСвязяхПредпринимателя.
//
Функция ИнформацияОСвязяхПредпринимателяПоИНН(Знач ИНН) Экспорт
	
	// 4D:ERP для Беларуси, Дмитрий, 04.08.2017 11:05:27 
	// Проверка контрагентов, №14822 
	// {
	Возврат Неопределено;
	// }
	// 4D
	
КонецФункции

// Возвращается информация о проверках юридического лица или предпринимателя контролирующими органами
// по открытым данным единого реестра проверок.
//
// Параметры:
//  ИНН  - Строка - ИНН юридического лица или предпринимателя, информацию о проверках которого надо получить.
//  Плановые  - Булево - требуется ли информация о плановых проверках.
//  Внеплановые  - Булево - требуется ли информация о внеплановых проверках.
//  Завершенные  - Булево - требуется ли информация о завершенных проверках (плановых и внеплановых), 
//                          по которым уже известен результат.
//  Незавершенные  - Булево - требуется ли информация о незавершенных проверках (плановых и внеплановых), 
//                          результат по которым не известен.
//
// Возвращаемое значение:
//   Структура   - информация о проверках. 
//                 Содержание структуры - см. функцию НоваяИнформацияОПроверкахКонтролирующимиОрганами.
//
Функция ИнформацияОПроверкахКонтролирующимиОрганамиПоИНН(Знач ИНН, Плановые, Внеплановые, Завершенные, Незавершенные) Экспорт
	
	// 4D:ERP для Беларуси, Дмитрий, 04.08.2017 11:05:27 
	// Проверка контрагентов, №14822 
	// {
	Возврат Неопределено;
	// }
	// 4D
	
КонецФункции

#КонецОбласти

#Область ОписанияРеквизитов

// 4D:ERP для Беларуси, Дмитрий, 04.08.2017 11:03:57 
// Проверка контрагентов, №14822 
// {
Функция НовыеРеквизитыЮридическогоЛица()

	РеквизитыОрганизации = Новый Структура;
	
	// Заполняется на основе данных ЕГРЮЛ.
	
	РеквизитыОрганизации.Вставить("ИНН");                         // Строка, 10
	РеквизитыОрганизации.Вставить("КПП");                         // Строка, 9
	РеквизитыОрганизации.Вставить("Наименование");                // Строка, 0
	РеквизитыОрганизации.Вставить("НаименованиеПолное");          // Строка, 0
	РеквизитыОрганизации.Вставить("НаименованиеСокращенное");     // Строка, 0
	РеквизитыОрганизации.Вставить("РегистрационныйНомер");        // Строка, 13 - ОГРН
	// Следующие свойства могут содержать Неопределено в случае отсутствия в сервисе данных.
	РеквизитыОрганизации.Вставить("ПравоваяФорма");               // Строка, 0
	РеквизитыОрганизации.Вставить("ЮридическийАдрес");            // Структура из НоваяКонтактнаяИнформация().
	РеквизитыОрганизации.Вставить("Телефон");                     // Структура из НоваяКонтактнаяИнформация().
	РеквизитыОрганизации.Вставить("Руководитель");                // Структура из НовоеКонтактноеЛицо().
	РеквизитыОрганизации.Вставить("РегистрацияВНалоговомОргане"); // Структура из НоваяРегистрацияВНалоговомОргане().
	РеквизитыОрганизации.Вставить("ДатаРегистрации");             // Дата
	РеквизитыОрганизации.Вставить("РегистрацияВПенсионномФонде"); // Структура из НоваяРегистрацияВПенсионномФонде().
	РеквизитыОрганизации.Вставить("РегистрацияВФСС");             // Структура из НоваяРегистрацияВФСС().
	РеквизитыОрганизации.Вставить("КодОКВЭД");                    // Строка, 8
	
	// Служебный реквизит
	РеквизитыОрганизации.Вставить("ОписаниеОшибки");              // Строка, 0
	
	Возврат РеквизитыОрганизации;

КонецФункции 

Функция НоваяРегистрацияВНалоговомОргане()
	
	Результат = Новый Структура;
	Результат.Вставить("Код");             // Строка, 4
	Результат.Вставить("Наименование");    // Строка, 0
	Результат.Вставить("ОКТМО");           // Строка, 11
	Результат.Вставить("ОКАТО");           // Строка, 11
	Результат.Вставить("ДатаРегистрации"); // Дата
	Возврат Результат;
	
КонецФункции

Функция НоваяКонтактнаяИнформация()

	Результат = Новый Структура;
	Результат.Вставить("КонтактнаяИнформация"); // Строка, 0 - XML 
	Результат.Вставить("Представление");        // Строка, 0
	Результат.Вставить("Комментарий");          // Строка, 0
	Возврат Результат;

КонецФункции
// }
// 4D

#КонецОбласти

#Область ЗаполнениеРеквизитов

// 4D:ERP для Беларуси, Дмитрий, 04.08.2017 11:03:13 
// Проверка контрагентов, №14822 
// {
Процедура ЗаполнитьНаименованияЮридическогоЛица(ОбъектXDTO, Реквизиты)

	Реквизиты.НаименованиеПолное = ОбъектXDTO.ROW.VNAIMP;
	Реквизиты.НаименованиеСокращенное = ОбъектXDTO.ROW.VNAIMK;
	Если НЕ ЗначениеЗаполнено(Реквизиты.НаименованиеСокращенное) 
		ИЛИ НЕ ЗначениеЗаполнено(СтрЗаменить(Реквизиты.НаименованиеСокращенное, "-", "")) Тогда
		Реквизиты.НаименованиеСокращенное = Реквизиты.НаименованиеПолное;
	КонецЕсли;
	
	Реквизиты.Наименование = Реквизиты.НаименованиеСокращенное;
	Поз = СтрНайти(Реквизиты.Наименование, """");
	Если Поз > 0 И Поз <= 10 Тогда
		Реквизиты.Наименование = СокрП(Сред(Реквизиты.Наименование, Поз)) + " " + СокрП(Лев(Реквизиты.Наименование, Поз-1));
		Реквизиты.Наименование = СтрЗаменить(Реквизиты.Наименование, """", "");
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьРегистрациюВНалоговомОргане(ОбъектXDTO, Реквизиты)
	
	Если ОбъектXDTO.ROW.NMNS <> Неопределено
		И ОбъектXDTO.ROW.VMNS <> Неопределено Тогда
		
		Реквизиты.РегистрацияВНалоговомОргане = НоваяРегистрацияВНалоговомОргане();
		
		Реквизиты.РегистрацияВНалоговомОргане.Код             = ОбъектXDTO.ROW.NMNS;
		Реквизиты.РегистрацияВНалоговомОргане.Наименование    = ОбъектXDTO.ROW.VMNS;
		Реквизиты.РегистрацияВНалоговомОргане.ДатаРегистрации = ОбъектXDTO.ROW.DREG;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЮридическийАдрес(ОбъектXDTO, Реквизиты, Фабрика)
	
	ПространствоИменКИ = УправлениеКонтактнойИнформациейКлиентСервер.ПространствоИмен();
	
	Если ТипЗнч(ОбъектXDTO.ROW.VPADRES) <> Тип("ОбъектXDTO") Тогда 
		
		АдресРФ_КИ = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(ПространствоИменКИ, "АдресРФ"));
		
		КИ = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(ПространствоИменКИ, "КонтактнаяИнформация"));
		КИ.Состав        = ФабрикаXDTO.Создать(ФабрикаXDTO.Тип(ПространствоИменКИ, "Адрес"));
		КИ.Состав.Страна = Строка(Справочники.СтраныМира.Беларусь);
		КИ.Состав.Состав = ОбъектXDTO.ROW.VPADRES;
		КИ.Представление = УправлениеКонтактнойИнформацией.ПредставлениеКонтактнойИнформации(КИ,
			Новый Структура("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес));
		
		СтруктураКИ = НоваяКонтактнаяИнформация();
		СтруктураКИ.КонтактнаяИнформация = СериализацияОбъектаXDTO(КИ);
		СтруктураКИ.Представление  = КИ.Представление;
		
		Реквизиты.ЮридическийАдрес = СтруктураКИ;
		
	КонецЕсли;
	
КонецПроцедуры
// }
// 4D

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// 4D:ERP для Беларуси, Дмитрий, 04.08.2017 11:04:32 
// Проверка контрагентов, №14822 
// {
Функция АдресСервиса()
	
	Возврат "portal.nalog.gov.by/grp/";

КонецФункции

Процедура ОбработатьОшибкуСервиса(ОбъектXDTO, ОписаниеОшибки, ИмяМетода, СтруктураРеквизитов)
	
	Если ОбъектXDTO <> Неопределено
		И НЕ ЗначениеЗаполнено(ОписаниеОшибки) Тогда
		Возврат;
	КонецЕсли;
	
	КодОсновногоЯзыка  = ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка(); // Для записи события в журнал регистрации
	ОписаниеОшибкиВРег = ВРег(ОписаниеОшибки);
		
	ТекстОшибки  = НСтр("ru='Ошибка при работе с сервисом (подробнее см. Журнал регистрации)'");
	ТекстСобытия = НСтр("ru='Ошибка при работе с сервисом'", КодОсновногоЯзыка);
	
	СтруктураРеквизитов.ОписаниеОшибки = ТекстОшибки;
	
	ИмяСобытия = НСтр("ru = 'Сервис получения сведений по юридическим лицам.'", КодОсновногоЯзыка) + " " + ТекстСобытия;
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки);
	
КонецПроцедуры
// }
// 4D

Функция СериализацияОбъектаXDTO(ОбъектXDTO)
	
	Запись = Новый ЗаписьXML;
	Запись.УстановитьСтроку(Новый ПараметрыЗаписиXML(, , Ложь, Ложь, ""));
	Если ОбъектXDTO <> Неопределено Тогда
		ФабрикаXDTO.ЗаписатьXML(Запись, ОбъектXDTO);
	КонецЕсли;
	
	Возврат СтрЗаменить(Запись.Закрыть(), Символы.ПС, "&#10;");
	
КонецФункции

#КонецОбласти
