////////////////////////////////////////////////////////////////////////////////
// Модуль содержит переопределяемые процедуры и функции.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции получения сведений об организации.

// Функция возвращает сведения об организации.
//
// Параметры:
//  Организация       - ссылка на элемент справочника "Организации";
//  ДатаЗначения      - дата, на которую нужно получить сведения;
//  СписокПоказателей - список показателей, значения которых нужно вернуть.
//  
// Возвращаемое значение:
//  Структура с ключами из списка показателей и возвращаемыми значениями.
//
// Пример:
//	ОргСведения = Новый Структура;
//  Для Каждого Показатель Из СписокПоказателей Цикл
//  	ИмяПоказателя = Показатель.Представление;
//      Если Имяпоказателя = "КодНО" Тогда
//      	Значение = Организация.КодНалоговогоОргана;
//      ИначеЕсли ИмяПоказателя = "ОГРН" Тогда
//      	Значение = Организация.ОГРН;
//      Иначе
//      	Значение = "";
//      КонецЕсли;
//      ОргСведения.Вставить(ИмяПоказателя, Значение);
//  КонецЦикла;
//  Возврат ОргСведения;
//
Функция ПолучитьСведенияОбОрганизации(Знач Организация, Знач ДатаЗначения = Неопределено, Знач СписокПоказателей = Неопределено) Экспорт
	
	Перем ОргСведения;
	Перем Значение;
	Перем ДанныеБанковскогоСчета;

	// Структура, в которой будут возвращаться найденные значения
	ОргСведения = Новый Структура;
	
	Если ДатаЗначения = Неопределено Тогда
		ДатаЗначения = ТекущаяДатаСеанса();
	КонецЕсли;
	ДатаЗначения = КонецДня(ДатаЗначения);
	
	ПустаяДата = '00010101000000';
	ПустойАдрес = ",,,,,,,,,";
	
	Организация = Организация.ПолучитьОбъект();
	Организация.Прочитать();
	
	Кэш = Новый Структура;
	Кэш.Вставить("Организация", Организация);
	Кэш.Вставить("ДатаЗначения", ДатаЗначения);
	
	ПБОЮЛ = НЕ ЭтоЮридическоеЛицо(Организация);
	Кэш.Вставить("ПБОЮЛ", ПБОЮЛ);
	
	ДомашнийТелефонФизЛица = ?(РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(Справочники.ВидыКонтактнойИнформации, "ТелефонДомашнийФизическиеЛица"), Справочники.ВидыКонтактнойИнформации.ТелефонДомашнийФизическиеЛица, Справочники.ВидыКонтактнойИнформации.ТелефонРабочийФизическиеЛица);
			
	Если СписокПоказателей = Неопределено Тогда
		
		СписокПоказателей = Новый Массив;
		СписокПоказателей.Добавить("СтавкаПрибФед");
		СписокПоказателей.Добавить("СтавкаПрибРесп");
		СписокПоказателей.Добавить("СтавкаПрибМест");
		СписокПоказателей.Добавить("СтавкаНалогаУСН");
		СписокПоказателей.Добавить("ТипНП");
		СписокПоказателей.Добавить("КатНП");
		СписокПоказателей.Добавить("НаимНО");
		СписокПоказателей.Добавить("КодНО");
		СписокПоказателей.Добавить("ОснВидДеят");
		СписокПоказателей.Добавить("ОснВидДеят2");
		СписокПоказателей.Добавить("ОКВЭД");
		СписокПоказателей.Добавить("ОКВЭД2");
		СписокПоказателей.Добавить("ОГРН");
		СписокПоказателей.Добавить("ОКАТО");
		СписокПоказателей.Добавить("РегНомПФР");
		СписокПоказателей.Добавить("ОКПО");
		СписокПоказателей.Добавить("ОргПравФорм");
		СписокПоказателей.Добавить("ОКОПФ");
		СписокПоказателей.Добавить("ФормСобств");
		СписокПоказателей.Добавить("ОКФС");
		СписокПоказателей.Добавить("ДатаРегистрации");
		СписокПоказателей.Добавить("АдрПочт");
		СписокПоказателей.Добавить("АдрПочт_XML");
		СписокПоказателей.Добавить("СвидСН");
		СписокПоказателей.Добавить("СвидДВ");
		СписокПоказателей.Добавить("СвидНО");
		СписокПоказателей.Добавить("СвидНОКод");
		СписокПоказателей.Добавить("НаимЮЛПол");
		СписокПоказателей.Добавить("НаимЮЛСокр");
		СписокПоказателей.Добавить("ИННЮЛ");
		СписокПоказателей.Добавить("КППЮЛ");
		СписокПоказателей.Добавить("АдрЮР");
		СписокПоказателей.Добавить("АдрЮР_XML");
		СписокПоказателей.Добавить("ОргИндекс");
		СписокПоказателей.Добавить("ОргСубъект");
		СписокПоказателей.Добавить("ОргКодСубъект");
		СписокПоказателей.Добавить("ОргРайон");
		СписокПоказателей.Добавить("ОргГород");
		СписокПоказателей.Добавить("ОргНПункт");
		СписокПоказателей.Добавить("ОргУлица");
		СписокПоказателей.Добавить("ОргДом");
		СписокПоказателей.Добавить("ОргКорпус");
		СписокПоказателей.Добавить("ОргКвартира");
		СписокПоказателей.Добавить("НаимОППол");
		СписокПоказателей.Добавить("КППОП");
		СписокПоказателей.Добавить("АдрОП");
		СписокПоказателей.Добавить("АдрОП_XML");
		СписокПоказателей.Добавить("ИндексОП");
		СписокПоказателей.Добавить("СубъектОП");
		СписокПоказателей.Добавить("КодСубъектОП");
		СписокПоказателей.Добавить("РайонОП");
		СписокПоказателей.Добавить("ГородОП");
		СписокПоказателей.Добавить("НПунктОП");
		СписокПоказателей.Добавить("УлицаОП");
		СписокПоказателей.Добавить("ДомОП");
		СписокПоказателей.Добавить("КорпусОП");
		СписокПоказателей.Добавить("КвартираОП");
		СписокПоказателей.Добавить("НаимОИОПол");
		СписокПоказателей.Добавить("ИННИО");
		СписокПоказателей.Добавить("КППИО");
		СписокПоказателей.Добавить("АдрОтдИОРФ");
		СписокПоказателей.Добавить("АдрОтдИОРФ_XML");
		СписокПоказателей.Добавить("ИндексОИО");
		СписокПоказателей.Добавить("СубъектОИО");
		СписокПоказателей.Добавить("КодСубъектОИО");
		СписокПоказателей.Добавить("РайонОИО");
		СписокПоказателей.Добавить("ГородОИО");
		СписокПоказателей.Добавить("НПунктОИО");
		СписокПоказателей.Добавить("УлицаОИО");
		СписокПоказателей.Добавить("ДомОИО");
		СписокПоказателей.Добавить("КорпусОИО");
		СписокПоказателей.Добавить("КвартираОИО");
		СписокПоказателей.Добавить("КодИОСтрРег");
		СписокПоказателей.Добавить("НаимИОПол");
		СписокПоказателей.Добавить("СтрИО");
		СписокПоказателей.Добавить("КодСтрИО");
		СписокПоказателей.Добавить("СтрПостИО");
		СписокПоказателей.Добавить("КодСтрПостИО");
		СписокПоказателей.Добавить("АдрИО");
		СписокПоказателей.Добавить("АдрИО_XML");
		СписокПоказателей.Добавить("ФИО");
		СписокПоказателей.Добавить("ФИООтпрФЛ");
		СписокПоказателей.Добавить("ИННФЛ");
		СписокПоказателей.Добавить("СНИЛС");
		СписокПоказателей.Добавить("ДатаРожд");
		СписокПоказателей.Добавить("МестоРожд");
		СписокПоказателей.Добавить("Пол");
		СписокПоказателей.Добавить("Гражд");
		СписокПоказателей.Добавить("ГраждСтрана");
		СписокПоказателей.Добавить("КодУдЛичн");
		СписокПоказателей.Добавить("ВидУдЛичн");
		СписокПоказателей.Добавить("ОрганВыданУдЛичн");
		СписокПоказателей.Добавить("КодПодрУдЛичн");
		СписокПоказателей.Добавить("СерияУдЛичн");
		СписокПоказателей.Добавить("НомерУдЛичн");
		СписокПоказателей.Добавить("ДатаУдЛичн");
		СписокПоказателей.Добавить("АдрПрописки");
		СписокПоказателей.Добавить("АдрПрописки_XML");
		СписокПоказателей.Добавить("АдрМЖ");
		СписокПоказателей.Добавить("АдрМЖ_XML");
		СписокПоказателей.Добавить("ИндексМЖ");
		СписокПоказателей.Добавить("СубъектМЖ");
		СписокПоказателей.Добавить("КодСубъектМЖ");
		СписокПоказателей.Добавить("РайонМЖ");
		СписокПоказателей.Добавить("ГородМЖ");
		СписокПоказателей.Добавить("НПунктМЖ");
		СписокПоказателей.Добавить("УлицаМЖ");
		СписокПоказателей.Добавить("ДомМЖ");
		СписокПоказателей.Добавить("КорпусМЖ");
		СписокПоказателей.Добавить("КвартираМЖ");
		СписокПоказателей.Добавить("ТелСлуж");
		СписокПоказателей.Добавить("ТелДом");
		СписокПоказателей.Добавить("ФИОРук");
		СписокПоказателей.Добавить("ИННРук");
		СписокПоказателей.Добавить("ДатаРождРук");
		СписокПоказателей.Добавить("МестоРождРук");
		СписокПоказателей.Добавить("ПолРук");
		СписокПоказателей.Добавить("ГраждРук");
		СписокПоказателей.Добавить("ГраждСтранаРук");
		СписокПоказателей.Добавить("ТелРук");
		СписокПоказателей.Добавить("КодУдЛичнРук");
		СписокПоказателей.Добавить("ВидУдЛичнРук");
		СписокПоказателей.Добавить("ОрганВыданУдЛичнРук");
		СписокПоказателей.Добавить("КодПодрУдЛичнРук");
		СписокПоказателей.Добавить("СерияУдЛичнРук");
		СписокПоказателей.Добавить("НомерУдЛичнРук");
		СписокПоказателей.Добавить("ДатаУдЛичнРук");
		СписокПоказателей.Добавить("АдрМЖРукРФ");
		СписокПоказателей.Добавить("АдрМЖРукРФ_XML");
		СписокПоказателей.Добавить("ИндексМЖРук");
		СписокПоказателей.Добавить("СубъектМЖРук");
		СписокПоказателей.Добавить("КодСубъектМЖРук");
		СписокПоказателей.Добавить("РайонМЖРук");
		СписокПоказателей.Добавить("ГородМЖРук");
		СписокПоказателей.Добавить("НПунктМЖРук");
		СписокПоказателей.Добавить("УлицаМЖРук");
		СписокПоказателей.Добавить("ДомМЖРук");
		СписокПоказателей.Добавить("КорпусМЖРук");
		СписокПоказателей.Добавить("КвартираМЖРук");
		СписокПоказателей.Добавить("ФИОБух");
		СписокПоказателей.Добавить("ФИООтпр");
		СписокПоказателей.Добавить("ИННБух");
		СписокПоказателей.Добавить("ДатаРождБух");
		СписокПоказателей.Добавить("МестоРождБух");
		СписокПоказателей.Добавить("ПолБух");
		СписокПоказателей.Добавить("ПолУпПред");
		СписокПоказателей.Добавить("ГраждБух");
		СписокПоказателей.Добавить("ГраждУпПред");
		СписокПоказателей.Добавить("ГраждСтранаБух");
		СписокПоказателей.Добавить("ГраждСтранаУпПред");
		СписокПоказателей.Добавить("ТелБух");
		СписокПоказателей.Добавить("ТелОтпр");
		СписокПоказателей.Добавить("КодУдЛичнБух");
		СписокПоказателей.Добавить("ВидУдЛичнБух");
		СписокПоказателей.Добавить("ОрганВыданУдЛичнБух");
		СписокПоказателей.Добавить("КодПодрУдЛичнБух");
		СписокПоказателей.Добавить("СерияУдЛичнБух");
		СписокПоказателей.Добавить("НомерУдЛичнБух");
		СписокПоказателей.Добавить("ДатаУдЛичнБух");
		СписокПоказателей.Добавить("АдрМЖБухРФ");
		СписокПоказателей.Добавить("АдрМЖБухРФ_XML");
		СписокПоказателей.Добавить("ИндексМЖБух");
		СписокПоказателей.Добавить("СубъектМЖБух");
		СписокПоказателей.Добавить("КодСубъектМЖБух");
		СписокПоказателей.Добавить("РайонМЖБух");
		СписокПоказателей.Добавить("ГородМЖБух");
		СписокПоказателей.Добавить("НПунктМЖБух");
		СписокПоказателей.Добавить("УлицаМЖБух");
		СписокПоказателей.Добавить("ДомМЖБух");
		СписокПоказателей.Добавить("КорпусМЖБух");
		СписокПоказателей.Добавить("КвартираМЖБух");
		СписокПоказателей.Добавить("ФИОУпПред");
		СписокПоказателей.Добавить("ИННУпПред");
		СписокПоказателей.Добавить("ТелУпПред");
		СписокПоказателей.Добавить("КодУдЛичнУпПред");
		СписокПоказателей.Добавить("ВидУдЛичнУпПред");
		СписокПоказателей.Добавить("ОрганВыданУдЛичнУпПред");
		СписокПоказателей.Добавить("СерияУдЛичнУпПред");
		СписокПоказателей.Добавить("НомерУдЛичнУпПред");
		СписокПоказателей.Добавить("ДатаУдЛичнУпПред");
		СписокПоказателей.Добавить("ДатаРождУпПред");
		СписокПоказателей.Добавить("АдрМЖУпПредРФ");
		СписокПоказателей.Добавить("АдрМЖУпПредРФ_XML");
		СписокПоказателей.Добавить("МестоРождУпПред");
		СписокПоказателей.Добавить("ИндексМЖУпПред");
		СписокПоказателей.Добавить("СубъектМЖУпПред");
		СписокПоказателей.Добавить("КодСубъектМЖУпПред");
		СписокПоказателей.Добавить("РайонМЖУпПред");
		СписокПоказателей.Добавить("ГородМЖУпПред");
		СписокПоказателей.Добавить("НПунктМЖУпПред");
		СписокПоказателей.Добавить("УлицаМЖУпПред");
		СписокПоказателей.Добавить("ДомМЖУпПред");
		СписокПоказателей.Добавить("КорпусМЖУпПред");
		СписокПоказателей.Добавить("КвартираМЖУпПред");
		СписокПоказателей.Добавить("ФаксИсп");
		СписокПоказателей.Добавить("ДолжнОтпр");
		СписокПоказателей.Добавить("СтавкаРефинансирования");
		СписокПоказателей.Добавить("ДатаПереходаНаУСН");
		СписокПоказателей.Добавить("БанкСчетНомер");
		СписокПоказателей.Добавить("БанкСчетНаимБанка");
		СписокПоказателей.Добавить("БанкСчетКоррСчетБанка");
		СписокПоказателей.Добавить("БанкСчетБИКБанка");
		СписокПоказателей.Добавить("РегистрационныйНомерФСС");
		СписокПоказателей.Добавить("КодПодчиненностиФСС");
		СписокПоказателей.Добавить("НаименованиеТерриториальногоОрганаФСС");
		СписокПоказателей.Добавить("КодОКОНХ");
		СписокПоказателей.Добавить("СтраховойТариф");
		СписокПоказателей.Добавить("ТелОрганизации");
		СписокПоказателей.Добавить("ФаксОрганизации");
		СписокПоказателей.Добавить("ОбъектНалогообложенияУСН");
		СписокПоказателей.Добавить("НаимГоловнОрг");
		СписокПоказателей.Добавить("КППГоловнОрг");
		СписокПоказателей.Добавить("ФИОИсп");
		СписокПоказателей.Добавить("ДолжнИсп");
		СписокПоказателей.Добавить("ТелИсп");
		СписокПоказателей.Добавить("КодОрганаПФР");
		СписокПоказателей.Добавить("АдресЭлектроннойПочтыОрганизации");
		СписокПоказателей.Добавить("РегНомТФОМС");
		СписокПоказателей.Добавить("КодПодчФССДобрСтрах");
		СписокПоказателей.Добавить("КодОрганаФСГС");
		СписокПоказателей.Добавить("ОКТМО");
		СписокПоказателей.Добавить("НаимОргПФР");
		СписокПоказателей.Добавить("ДолжнРук");
		СписокПоказателей.Добавить("ФамилияРук");
		СписокПоказателей.Добавить("ИмяРук");
		СписокПоказателей.Добавить("ОтчествоРук");
		СписокПоказателей.Добавить("ФамилияБух");
		СписокПоказателей.Добавить("ИмяБух");
		СписокПоказателей.Добавить("ОтчествоБух");		
		СписокПоказателей.Добавить("ШифрСтрахователяФСС");
		СписокПоказателей.Добавить("СистемыНалогообложения");
		СписокПоказателей.Добавить("ВидПлательщикаСтраховыхВзносов");
		СписокПоказателей.Добавить("КодТарифаПлательщикаПоУмолчаниюДляРСВ");
				
	КонецЕсли;
	
	РоссийскийАдрес = Новый Соответствие;
	РоссийскийАдрес.Вставить("Индекс",          "");
	РоссийскийАдрес.Вставить("Регион",          "");
	РоссийскийАдрес.Вставить("КодРегиона",      "");
	РоссийскийАдрес.Вставить("Район",           "");
	РоссийскийАдрес.Вставить("Город",           "");
	РоссийскийАдрес.Вставить("НаселенныйПункт", "");
	РоссийскийАдрес.Вставить("Улица",           "");
	РоссийскийАдрес.Вставить("Дом",             "");
	РоссийскийАдрес.Вставить("Корпус",          "");
	РоссийскийАдрес.Вставить("Квартира",        "");
	
	ЭтоМассив = (ТипЗнч(СписокПоказателей) = Тип("Массив"));
	
	Для Каждого Показатель Из СписокПоказателей Цикл
		
		ИмяПоказателя = ?(ЭтоМассив, Показатель, Показатель.Представление);
		Значение	  = ""; // значение показателя по умолчанию
		
		Если ИмяПоказателя = "СтавкаПрибФед" Тогда
			
			Ставки = ПолучитьСУчетомКэша(Кэш, "СтавкаНалогаНаПрибыль");
			Если Ставки <> Неопределено И Ставки.Количество() > 0 Тогда
				Значение = Ставки.СтавкаФБ;
			Иначе
				Значение = 0;
			КонецЕсли;

		ИначеЕсли ИмяПоказателя = "СтавкаПрибРесп" Тогда
			Ставки = ПолучитьСУчетомКэша(Кэш, "СтавкаНалогаНаПрибыль");
			Если Ставки <> Неопределено И Ставки.Количество() > 0 Тогда
				Значение = Ставки.СтавкаСубъектРФ;
			Иначе
				Значение = 0;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СтавкаПрибМест" Тогда
			Ставки = ПолучитьСУчетомКэша(Кэш, "СтавкаНалогаНаПрибыль");
			Если Ставки <> Неопределено И Ставки.Количество() > 0 Тогда
				Значение = Ставки.СтавкаМестный;
			Иначе
				Значение = 0;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СтавкаНалогаУСН" Тогда
			
			Значение = УчетнаяПолитика.СтавкаНалогаУСН(Организация.Ссылка, ДатаЗначения);
			
		ИначеЕсли ИмяПоказателя = "ТипНП" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация) Тогда
				Значение = 5;
			Иначе
				Если ЭтоГоловнаяОрганизация(Организация, Истина) Тогда
					Если ПБОЮЛ Тогда
						Значение = 3;
					Иначе
						Значение = 1;
					КонецЕсли;
				Иначе
					Значение = 2;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КатНП" Тогда
			
			Значение = "01";
			
		ИначеЕсли Имяпоказателя = "НаимНО" Тогда
			
			// данный реквизит заполняется из регистрации в налоговом органе организации
			РегистрацияВНалоговомОргане = Неопределено;
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
			
			Если ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОргане, "НаименованиеИФНС");
			КонецЕсли;
			
			// если заполнить не удалось
			Если Не ЗначениеЗаполнено(Значение) Тогда
				ПолучитьЗначениеРеквизитаОрганизации(Организация, "НаименованиеНалоговогоОргана", Значение);
			КонецЕсли;
			
		ИначеЕсли Имяпоказателя = "КодНО" Тогда
			
			// данный реквизит заполняется из регистрации в налоговом органе организации
			РегистрацияВНалоговомОргане = Неопределено;
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
			
			Если ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОргане, "Код");
			КонецЕсли;
			
			// если заполнить не удалось
			Если Не ЗначениеЗаполнено(Значение) Тогда
				ПолучитьЗначениеРеквизитаОрганизации(Организация, "КодНалоговогоОргана", Значение);
			КонецЕсли;
			
		ИначеЕсли Имяпоказателя = "ОснВидДеят" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "НаименованиеОКВЭД", Значение);
			
		ИначеЕсли Имяпоказателя = "ОКВЭД" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "КодОКВЭД", Значение);
			
		ИначеЕсли Имяпоказателя = "ОснВидДеят2" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "НаименованиеОКВЭД2", Значение);
			
		ИначеЕсли Имяпоказателя = "ОКВЭД2" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "КодОКВЭД2", Значение);
			
		ИначеЕсли ИмяПоказателя	= "ОГРН" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "ОГРН", Значение);
			
		ИначеЕсли ИмяПоказателя = "ОКАТО" Тогда
			
			// данный реквизит заполняется из регистрации в налоговом органе организации
			
			РегистрацияВНалоговомОргане = Неопределено;
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
			
			Если ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОргане, "КодПоОКАТО");
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОКТМО" Тогда
			
			// данный реквизит заполняется из регистрации в налоговом органе организации
			
			РегистрацияВНалоговомОргане = Неопределено;
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
			
			Если ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОргане, "КодПоОКТМО");
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "РегНомТФОМС" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "РегистрационныйНомерТФОМС", Значение);
			
		ИначеЕсли ИмяПоказателя = "РегНомТФОМСЗаСебя" Тогда
			
			Если ПБОЮЛ Тогда
				Если НЕ ПолучитьЗначениеРеквизитаОрганизации(Организация, "ИПРегистрационныйНомерТФОМС", Значение) Тогда
					ПолучитьЗначениеРеквизитаОрганизации(Организация, "РегистрационныйНомерТФОМС", Значение);
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;	
			
		ИначеЕсли ИмяПоказателя = "РегНомПФР" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "РегистрационныйНомерПФР", Значение);
			
		ИначеЕсли ИмяПоказателя = "РегНомПФРЗаСебя" Тогда	
						
			Если ПБОЮЛ Тогда
				Если НЕ ПолучитьЗначениеРеквизитаОрганизации(Организация, "ИПРегистрационныйНомерПФР", Значение) Тогда
					ПолучитьЗначениеРеквизитаОрганизации(Организация, "РегистрационныйНомерПФР", Значение); 
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
						
		ИначеЕсли ИмяПоказателя = "КодОрганаПФР" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "КодОрганаПФР", Значение);
			
		ИначеЕсли ИмяПоказателя = "ОКПО" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "КодПоОКПО", Значение);
						
		ИначеЕсли ИмяПоказателя = "ОргПравФорм" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "НаименованиеОКОПФ", Значение);
						
		ИначеЕсли ИмяПоказателя = "ОКОПФ" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "КодОКОПФ", Значение);
						
		ИначеЕсли ИмяПоказателя = "ФормСобств" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "НаименованиеОКФС", Значение);
						
		ИначеЕсли ИмяПоказателя = "ОКФС" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "КодОКФС", Значение);
						
		ИначеЕсли ИмяПоказателя = "РегистрационныйНомерФСС" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "РегистрационныйНомерФСС", Значение);
			
		ИначеЕсли ИмяПоказателя = "НаименованиеТерриториальногоОрганаФСС" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "НаименованиеТерриториальногоОрганаФСС", Значение);
			
		ИначеЕсли ИмяПоказателя = "РегистрационныйНомерФССДобрСтрах" Тогда	
			
			Если ПБОЮЛ Тогда
				Если НЕ ПолучитьЗначениеРеквизитаОрганизации(Организация, "ИПРегистрационныйНомерФСС", Значение) Тогда
					ПолучитьЗначениеРеквизитаОрганизации(Организация, "РегистрационныйНомерФСС", Значение);
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодПодчиненностиФСС" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "КодПодчиненностиФСС", Значение);
			
		ИначеЕсли ИмяПоказателя = "КодПодчФССДобрСтрах" Тогда	
			
			Если ПБОЮЛ Тогда
				Если НЕ ПолучитьЗначениеРеквизитаОрганизации(Организация, "ИПКодПодчиненностиФСС", Значение) Тогда
					ПолучитьЗначениеРеквизитаОрганизации(Организация, "КодПодчиненностиФСС", Значение);
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодОКОНХ" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "КодОКОНХ", Значение);
			
		ИначеЕсли ИмяПоказателя = "КодОрганаФСГС" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "КодОрганаФСГС", Значение);
			
		ИначеЕсли ИмяПоказателя = "ДатаРегистрации" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "ДатаРегистрации", Значение, ПустаяДата);
			
		ИначеЕсли ИмяПоказателя = "СтраховойТариф" Тогда
			
			Результат = РегистрыСведений.СтавкаВзносаНаСтрахованиеОтНесчастныхСлучаев.СрезПоследних(ДатаЗначения, Новый Структура("Организация", Организация.Ссылка));
			Если Результат.Количество() > 0 Тогда
				Значение = Результат[0].Ставка;
			Иначе
				Значение = 0;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ШифрСтрахователяФСС" Тогда
			
			ВидТарифа = ПолучитьСУчетомКэша(Кэш, "ВидТарифа");
			Значение = ВидТарифа.КодФСС2012;
						
		ИначеЕсли ИмяПоказателя = "СистемыНалогообложения" Тогда
			
			Значение = "";
			
			УчетнаяПолитикаОрганизации = УчетнаяПолитика.СистемаНалогообложения(Организация.Ссылка, Кэш.ДатаЗначения);
			Если УчетнаяПолитикаОрганизации = Перечисления.СистемыНалогообложения.Общая Тогда
				Значение = "ОСНО";
			ИначеЕсли УчетнаяПолитикаОрганизации = Перечисления.СистемыНалогообложения.Упрощенная Тогда
				Значение = "УСН";
			КонецЕсли;
				
			ПлательщикЕНВД = УчетнаяПолитика.ПлательщикЕНВД(Организация.Ссылка, Кэш.ДатаЗначения);
			Если ПлательщикЕНВД Тогда
				Если ЗначениеЗаполнено(Значение) Тогда
					Значение = Значение + ", ЕНВД";
				Иначе
					Значение = "ЕНВД";
				КонецЕсли;
			КонецЕсли;
			
			ВидТарифа = ПолучитьСУчетомКэша(Кэш, "ВидТарифа");
			Если ВидТарифа = Справочники.ВидыТарифовСтраховыхВзносов.ЕСХН Тогда
				Значение = "ЕСХН";
			КонецЕсли;
			Если ВидТарифа = Справочники.ВидыТарифовСтраховыхВзносов.ИндивидуальныйПредпринимательПрименяющийПатент Тогда
				Если ЗначениеЗаполнено(Значение) Тогда
					Значение = Значение + ", ПСН";
				Иначе
					Значение = "ПСН";
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ВидПлательщикаСтраховыхВзносов" Тогда
			
			Значение = "00";
						
		ИначеЕсли ИмяПоказателя = "КодТарифаПлательщикаПоУмолчаниюДляРСВ" Тогда
			
			Значение = "01";
						
		ИначеЕсли ИмяПоказателя = "АдрПочт" Тогда
			
			ПолучитьКонтактнуюИнформациюОрганизации(
				Значение,
				Организация.Ссылка,
				Перечисления.ТипыКонтактнойИнформации.Адрес,
				Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации,
				,
				Истина,
				ПустойАдрес);
			
		ИначеЕсли ИмяПоказателя = "АдрПочт_XML" Тогда
			
			Значение = АдресВXML(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации);
			
		ИначеЕсли ИмяПоказателя = "ПолныйАдрПочт" Тогда
			
			ПолучитьКонтактнуюИнформациюОрганизации(
				Значение,
				Организация.Ссылка,
				Перечисления.ТипыКонтактнойИнформации.Адрес,
				Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресОрганизации,
				"Представление",
				,
				ПустойАдрес);
			
		ИначеЕсли ИмяПоказателя = "АдресЭлектроннойПочтыОрганизации" Тогда
			
			ПолучитьКонтактнуюИнформациюОрганизации(
				Значение,
				Организация.Ссылка,
				Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты,
				Справочники.ВидыКонтактнойИнформации.EmailОрганизации,
				"Представление");
			
		ИначеЕсли ИмяПоказателя = "СвидСН" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "СвидетельствоСерияНомер", Значение);
			
		ИначеЕсли ИмяПоказателя = "СвидДВ" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "СвидетельствоДатаВыдачи", Значение);
			
		ИначеЕсли ИмяПоказателя = "СвидНО" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "СвидетельствоНаименованиеОргана", Значение);
			
		ИначеЕсли ИмяПоказателя = "СвидНОКод" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "СвидетельствоКодОргана", Значение);
			
		ИначеЕсли ИмяПоказателя = "НаимЮЛПол" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "НаименованиеПолное", Значение);
			
		ИначеЕсли ИмяПоказателя = "НаимЮЛСокр" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "НаименованиеСокращенное", Значение);
			
		ИначеЕсли ИмяПоказателя = "ИННЮЛ" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "ИНН", Значение);
			
		ИначеЕсли ИмяПоказателя = "КППЮЛ" Тогда
			
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "КПП", Значение);
			
		ИначеЕсли ИмяПоказателя = "АдрЮР" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

			Если Результат <> Неопределено Тогда
				Значение = АдресВФормате9Запятых(Результат);
			Иначе
				Значение = ПустойАдрес;
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрЮР_XML" Тогда
			
			Значение = АдресВXML(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			
		ИначеЕсли ИмяПоказателя = "ПолныйАдрЮР" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

			Если Результат <> Неопределено Тогда
				Значение = Результат.Представление;
			Иначе
				Значение = ПустойАдрес;
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;

		ИначеЕсли ИмяПоказателя = "АдрФакт" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ФактАдресОрганизации");
			Если Результат <> Неопределено Тогда
				Значение = АдресВФормате9Запятых(Результат);
			Иначе
				Значение = ПустойАдрес;
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрФакт_XML" Тогда
			
			Значение = АдресВXML(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);
			
		ИначеЕсли ИмяПоказателя = "ТелОрганизации" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ТелефонОрганизации");

			Если Результат <> Неопределено Тогда
				Значение = Результат.Представление;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ФаксОрганизации" Тогда
			
			Если НЕ Кэш.ПБОЮЛ Тогда
				
				ПолучитьКонтактнуюИнформациюОрганизации(
					Значение,
					Кэш.Организация.Ссылка,
					Перечисления.ТипыКонтактнойИнформации.Факс,
					Справочники.ВидыКонтактнойИнформации.ФаксОрганизации,
					"Представление");
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОргИндекс" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

			Если Результат <> Неопределено Тогда
				
				РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
				
				Значение = РоссийскийАдрес["Индекс"];
								
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОргСубъект" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

			Если Результат <> Неопределено Тогда
								
				РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
				
				Значение = РоссийскийАдрес["Регион"];				
					
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОргКодСубъект" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

			Если Результат <> Неопределено Тогда
				
				РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
				
				Значение = РоссийскийАдрес["КодРегиона"];
					
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОргРайон" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

			Если Результат <> Неопределено Тогда
				
				РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
				
				Значение = РоссийскийАдрес["Район"];
					
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОргГород" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

			Если Результат <> Неопределено Тогда
				
				РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
				
				Значение = РоссийскийАдрес["Город"];
					
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОргНПункт" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

			Если Результат <> Неопределено Тогда
				
				РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
				
				Значение = РоссийскийАдрес["НаселенныйПункт"];
					
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОргУлица" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

			Если Результат <> Неопределено Тогда
				
				РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
				
				Значение = РоссийскийАдрес["Улица"];
					
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОргДом" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

			Если Результат <> Неопределено Тогда
				
				РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
				
				Значение = РоссийскийАдрес["Дом"];
					
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОргКорпус" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

			Если Результат <> Неопределено Тогда
				
				РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
				
				Значение = РоссийскийАдрес["Корпус"];
					
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОргКвартира" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

			Если Результат <> Неопределено Тогда
				
				РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.ЗначенияПолей, РоссийскийАдрес);
				
				Значение = РоссийскийАдрес["Квартира"];
					
			Иначе
				Значение = "";
			КонецЕсли;
			
			ИначеЕсли ИмяПоказателя = "ДолжнРук" Тогда
			    Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Значение = СокрЛП(Результат[0].Должность);
				Иначе
					Значение = "";
			    КонецЕсли;
				
			ИначеЕсли ИмяПоказателя = "ФамилияРук" Тогда
			    Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			    Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
			        ФЛ = Результат[0]["ФизическоеЛицо"];
			        Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
			            Значение = "";
			        Иначе
			            Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
			                Значение = "";
			            Иначе
			                ДанныеФЛ = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(ДатаЗначения, Новый Структура("ФизическоеЛицо",ФЛ));
			                Если ДанныеФЛ.Количество() > 0 Тогда
			                    Значение = СокрЛП(ДанныеФЛ[0].Фамилия);
			                Иначе
			                    Значение = "";
			                КонецЕсли;
			            КонецЕсли;
			        КонецЕсли;
			    Иначе
			        Значение = "";
				КонецЕсли;
				
			ИначеЕсли ИмяПоказателя = "ФамилияБух" Тогда
			    Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			    Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
			        ФЛ = Результат[0]["ФизическоеЛицо"];
			        Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
			            Значение = "";
			        Иначе
			            Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
			                Значение = "";
			            Иначе
			                ДанныеФЛ = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(ДатаЗначения, Новый Структура("ФизическоеЛицо",ФЛ));
			                Если ДанныеФЛ.Количество() > 0 Тогда
			                    Значение = СокрЛП(ДанныеФЛ[0].Фамилия);
			                Иначе
			                    Значение = "";
			                КонецЕсли;
			            КонецЕсли;
			        КонецЕсли;
			    Иначе
			        Значение = "";
			    КонецЕсли;
		//*************************************************************для обособленного подразделения
		ИначеЕсли ИмяПоказателя = "НаимОППол" Тогда
		
			Если НЕ ЭтоГоловнаяОрганизация(Организация) Тогда
				ПолучитьЗначениеРеквизитаОрганизации(Организация, "НаименованиеПолное", Значение);
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КППОП" Тогда
			
			// данный реквизит заполняется из регистрации в налоговом органе организации
			
			РегистрацияВНалоговомОргане = Неопределено;
			ПолучитьЗначениеРеквизитаОрганизации(Организация, "РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
			
			Если ЗначениеЗаполнено(РегистрацияВНалоговомОргане) Тогда
				Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОргане, "КПП");
			КонецЕсли;
			
			Если НЕ ЭтоГоловнаяОрганизация(Организация) И Не ЗначениеЗаполнено(Значение) Тогда
				ПолучитьЗначениеРеквизитаОрганизации(Организация, "КПП", Значение);
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрОП" Тогда
			
			Если ЭтоГоловнаяОрганизация(Организация) Тогда
				Значение = ПустойАдрес;
			Иначе
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
					Значение = АдресВФормате9Запятых(Результат);
				Иначе
					Значение = ПустойАдрес;
				КонецЕсли;
				
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрОП_XML" Тогда
			
			Если Организация.ГоловнаяОрганизация = Организация.Ссылка Тогда
				Значение = Неопределено;
			Иначе
				Значение = АдресВXML(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИндексОП" Тогда
			
			Если НЕ ЭтоГоловнаяОрганизация(Организация) Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
					
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Индекс=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СубъектОП" Тогда
			
			Если НЕ ЭтоГоловнаяОрганизация(Организация) Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
										
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Регион=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
						
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодСубъектОП" Тогда
			
			Если НЕ ЭтоГоловнаяОрганизация(Организация) Тогда
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
					
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Регион=") = 1 Тогда
							
							Значение = Формат(РегламентированнаяОтчетностьВызовСервера.КодРегионаПоНазванию(Сред(Стр, Найти(Стр, "=") + 1)), "ЧЦ=2; ЧВН=");
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "РайонОП" Тогда
			
			Если НЕ ЭтоГоловнаяОрганизация(Организация) Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
										
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Район=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ГородОП" Тогда
			
			Если НЕ ЭтоГоловнаяОрганизация(Организация) Тогда

				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
										
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Город=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "НПунктОП" Тогда
			
			Если НЕ ЭтоГоловнаяОрганизация(Организация) Тогда
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
										
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "НаселенныйПункт=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "УлицаОП" Тогда
			
			Если НЕ ЭтоГоловнаяОрганизация(Организация) Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
										
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Улица=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДомОП" Тогда
			
			Если НЕ ЭтоГоловнаяОрганизация(Организация) Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
					
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Дом=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КорпусОП" Тогда
			
			Если НЕ ЭтоГоловнаяОрганизация(Организация) Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
										
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Корпус=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "КвартираОП" Тогда
			
			Если НЕ ЭтоГоловнаяОрганизация(Организация) Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
										
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Квартира=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
			КонецЕсли;
			
		//********************************************************сведения об иностранной организации
		ИначеЕсли ИмяПоказателя = "НаимОИОПол" Тогда
		
			Если ЭтоИностраннаяОрганизация(Организация) Тогда
				ПолучитьЗначениеРеквизитаОрганизации(Организация, "НаименованиеПолное", Значение);
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИННИО" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация) Тогда
				ПолучитьЗначениеРеквизитаОрганизации(Организация, "ИНН", Значение);
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КППИО" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация) Тогда
				ПолучитьЗначениеРеквизитаОрганизации(Организация, "КПП", Значение);
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрОтдИОРФ" Тогда
			
			Если НЕ ЭтоИностраннаяОрганизация(Организация) Тогда
				Значение = ПустойАдрес;
			Иначе
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
					Значение = АдресВФормате9Запятых(Результат);
				Иначе
					Значение = ПустойАдрес;
				КонецЕсли;
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрОтдИОРФ_XML" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = Неопределено;
			Иначе
				Значение = АдресВXML(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИндексОИО" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация) Тогда
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
					
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Индекс=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СубъектОИО" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация) Тогда
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
					
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Регион=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодСубъектОИО" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация) Тогда
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
					
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Регион=") = 1 Тогда
							
							Значение = Формат(РегламентированнаяОтчетностьВызовСервера.КодРегионаПоНазванию(Сред(Стр, Найти(Стр, "=") + 1)), "ЧЦ=2; ЧВН=");
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
						
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "РайонОИО" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация) Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
										
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Район=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
						
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ГородОИО" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация) Тогда

				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
										
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Город=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
						
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "НПунктОИО" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация) Тогда
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
										
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "НаселенныйПункт=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
						
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "УлицаОИО" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация) Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
										
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Улица=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
						
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДомОИО" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация) Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
										
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Дом=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
						
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КорпусОИО" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация) Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
					
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Корпус=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "КвартираОИО" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация) Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "ЮрАдресОрганизации");

				Если Результат <> Неопределено Тогда
										
					Для НомСтр = 1 По СтрЧислоСтрок(Результат.ЗначенияПолей) Цикл
						
						Стр = СтрПолучитьСтроку(Результат.ЗначенияПолей, НомСтр);
						
						Если Найти(Стр, "Квартира=") = 1 Тогда
							
							Значение = Сред(Стр, Найти(Стр, "=") + 1);
							Прервать;
							
						КонецЕсли;
						
					КонецЦикла;
						
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодИОСтрРег" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация) Тогда
				ПолучитьЗначениеРеквизитаОрганизации(Организация, "КодВСтранеРегистрации", Значение);
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "НаимИОПол" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация) Тогда
				ПолучитьЗначениеРеквизитаОрганизации(Организация, "НаименованиеИнострОрганизации", Значение);
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СтрИО" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация)
			 И ПолучитьЗначениеРеквизитаОрганизации(Организация, "СтранаРегистрации", Значение) Тогда
				Значение = Значение.НаименованиеПолное;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодСтрИО" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация)
			 И ПолучитьЗначениеРеквизитаОрганизации(Организация, "СтранаРегистрации", Значение) Тогда
				Значение = Значение.КодАльфа2;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СтрПостИО" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация)
			 И ПолучитьЗначениеРеквизитаОрганизации(Организация, "СтранаПостоянногоМестонахождения", Значение) Тогда
				Значение = Значение.НаименованиеПолное;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодСтрПостИО" Тогда
			
			Если ЭтоИностраннаяОрганизация(Организация)
			 И ПолучитьЗначениеРеквизитаОрганизации(Организация, "СтранаПостоянногоМестонахождения", Значение) Тогда
				Значение = Значение.КодАльфа2;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрИО" Тогда
			
			Если НЕ ЭтоИностраннаяОрганизация(Организация) Тогда
				Значение = ПустойАдрес;
			Иначе
				
				ПолучитьКонтактнуюИнформациюОрганизации(
					Значение,
					Организация.Ссылка,
					Перечисления.ТипыКонтактнойИнформации.Адрес,
					Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации, //УчредительныйАдресИностраннойОрганизации,
					"Представление",
					,
					ПустойАдрес);
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрИО_XML" Тогда
			
			Если НЕ Организация.ИностраннаяОрганизация Тогда
				Значение = Неопределено;
			Иначе
				Значение = АдресВXML(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			КонецЕсли;
			
		//***************************************************сведения об индивидуальном предпринимателе			
		ИначеЕсли ИмяПоказателя = "ФИО" ИЛИ ИмяПоказателя = "ФИООтпрФЛ" Тогда
			
			Если ПБОЮЛ Тогда
				Если Метаданные.Справочники.Организации.Реквизиты.Найти("ИндивидуальныйПредприниматель") <> Неопределено Тогда
					ПолучитьЗначениеРеквизитаОрганизации(Организация, "ИндивидуальныйПредприниматель", Значение, Справочники.ФизическиеЛица.ПустаяСсылка());
					Если Значение = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						ПолучитьЗначениеРеквизитаОрганизации(Организация, "НаименованиеПолное", Значение);
					Иначе
						ДанныеФЛ = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(ДатаЗначения, Новый Структура("ФизическоеЛицо", Значение));
						Если ДанныеФЛ.Количество() > 0 Тогда
							Значение = СокрЛП(СокрЛП(ДанныеФЛ[0].Фамилия) + " " + СокрЛП(ДанныеФЛ[0].Имя) + " " + СокрЛП(ДанныеФЛ[0].Отчество));
						КонецЕсли;
					КонецЕсли;
				Иначе
					ПолучитьЗначениеРеквизитаОрганизации(Организация, "НаименованиеПолное", Значение);
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИННФЛ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если НЕ Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = Результат[0].ФизическоеЛицо.ИНН;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СНИЛС" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если НЕ Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = Результат[0].ФизическоеЛицо.СтраховойНомерПФР;
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;	
			
		ИначеЕсли ИмяПоказателя = "ДатаРожд" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = ПустаяДата;
					Иначе
						Значение = Результат[0].ФизическоеЛицо.ДатаРождения;
					КонецЕсли;
				Иначе
					Значение = ПустаяДата;
				КонецЕсли;
				
			Иначе
				Значение = ПустаяДата;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "МестоРожд" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						Значение = Результат[0].ФизическоеЛицо.МестоРождения;
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "Пол" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = 0;
					Иначе
						Если Результат[0].ФизическоеЛицо.Пол = Перечисления.ПолФизическогоЛица.Женский Тогда
							Значение = 2;
						ИначеЕсли Результат[0].ФизическоеЛицо.Пол = Перечисления.ПолФизическогоЛица.Мужской Тогда
							Значение = 1;
						Иначе
							Значение = 0;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = 0;
				КонецЕсли;
				
			Иначе
				Значение = 0;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "Гражд" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						Гражданство = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеГражданство", Результат[0].ФизическоеЛицо);
						Если Гражданство = Неопределено Тогда
							Значение = "";
						Иначе
							Значение = Гражданство.Код;
						КонецЕсли;

					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ГраждСтрана" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						Гражданство = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеГражданство", Результат[0].ФизическоеЛицо);
						Если Гражданство = Неопределено Тогда
							Значение = "";
						Иначе
							Значение = ?(ПустаяСтрока(Гражданство.НаименованиеПолное), Гражданство.Наименование, Гражданство.НаименованиеПолное);
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодУдЛичн" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеПаспортныеДанные", Результат[0].ФизическоеЛицо);
						Если УдЛичн = Неопределено Тогда
							Значение = Неопределено;
						Иначе
							Если УдЛичн.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка() Тогда
								Значение = "";
							Иначе
								Значение = УдЛичн.ВидДокумента.КодМВД;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ВидУдЛичн" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеПаспортныеДанные", Результат[0].ФизическоеЛицо);
						Если УдЛичн = Неопределено Тогда
							Значение = "";
						Иначе
							Если УдЛичн.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка() Тогда
								Значение = "";
							Иначе
								Значение = УдЛичн.ВидДокумента.Наименование;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОрганВыданУдЛичн" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеПаспортныеДанные", Результат[0].ФизическоеЛицо);
						Если УдЛичн = Неопределено Тогда
							Значение = "";
						Иначе
							Значение = УдЛичн.КемВыдан;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодПодрУдЛичн" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеПаспортныеДанные", Результат[0].ФизическоеЛицо);
						Если УдЛичн = Неопределено Тогда
							Значение = "";
						Иначе
							Значение = УдЛичн.КодПодразделения;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СерияУдЛичн" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеПаспортныеДанные", Результат[0].ФизическоеЛицо);
						Если УдЛичн = Неопределено Тогда
							Значение = "";
						Иначе
							Значение = УдЛичн.Серия;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "НомерУдЛичн" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеПаспортныеДанные", Результат[0].ФизическоеЛицо);
						Если УдЛичн = Неопределено Тогда
							Значение = "";
						Иначе
							Значение = УдЛичн.Номер;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДатаУдЛичн" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = ПустаяДата;
					Иначе
						УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеПаспортныеДанные", Результат[0].ФизическоеЛицо);
						Если УдЛичн = Неопределено Тогда
							Значение = ПустаяДата;
						Иначе
							Значение = УдЛичн.ДатаВыдачи;
						КонецЕсли;
					КонецЕсли;
				Иначе
					Значение = ПустаяДата;
				КонецЕсли;
				
			Иначе
				Значение = ПустаяДата;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрПрописки" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = ПустойАдрес;
					Иначе
						
						Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеАдресПрописки", Результат[0].ФизическоеЛицо);

						Если Результат2 <> Неопределено Тогда
							Значение = АдресВФормате9Запятых(Результат2);
						Иначе
							Значение = ПустойАдрес;
						КонецЕсли;
						
					КонецЕсли;
				Иначе
					Значение = ПустойАдрес;
				КонецЕсли;
				
			Иначе
				Значение = ПустойАдрес;
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрПрописки_XML" Тогда
			
			Если ПБОЮЛ Тогда
				Значение = АдресВXML(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			Иначе
				Значение = Неопределено;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = ПустойАдрес;
					Иначе
						
						Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеАдрес", Результат[0].ФизическоеЛицо);

						Если Результат2 <> Неопределено Тогда
							Значение = АдресВФормате9Запятых(Результат2);
						Иначе
							Значение = ПустойАдрес;
						КонецЕсли;
						
					КонецЕсли;
				Иначе
					Значение = ПустойАдрес;
				КонецЕсли;
				
			Иначе
				Значение = ПустойАдрес;
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖ_XML" Тогда
			
			Если ПБОЮЛ Тогда
				Значение = АдресВXML(Организация.КонтактнаяИнформация, Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации);
			Иначе
				Значение = Неопределено;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИндексМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						
						Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеАдрес", Результат[0].ФизическоеЛицо);

						Если Результат2 <> Неопределено Тогда
														
							Значение = "";
							
							Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
								
								Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
								
								Если Найти(Стр, "Индекс=") = 1 Тогда
									
									Значение = Сред(Стр, Найти(Стр, "=") + 1);
									Прервать;
									
								КонецЕсли;
								
							КонецЦикла;
							
						Иначе
							Значение = "";
						КонецЕсли;
						
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СубъектМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						
						Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеАдрес", Результат[0].ФизическоеЛицо);

						Если Результат2 <> Неопределено Тогда
														
							Значение = "";
							
							Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
								
								Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
								
								Если Найти(Стр, "Регион=") = 1 Тогда
									
									Значение = Сред(Стр, Найти(Стр, "=") + 1);
									Прервать;
									
								КонецЕсли;
								
							КонецЦикла;
						
						Иначе
							Значение = "";
						КонецЕсли;
						
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "КодСубъектМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						
						Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеАдрес", Результат[0].ФизическоеЛицо);

						Если Результат2 <> Неопределено Тогда
							
							Значение = "";
							
							Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
								
								Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
								
								Если Найти(Стр, "Регион=") = 1 Тогда
									
									Значение = Формат(РегламентированнаяОтчетностьВызовСервера.КодРегионаПоНазванию(Сред(Стр, Найти(Стр, "=") + 1)), "ЧЦ=2; ЧВН=");
									Прервать;
									
								КонецЕсли;
								
							КонецЦикла;
						
						Иначе
							Значение = "";
						КонецЕсли;
						
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "РайонМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						
						Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеАдрес", Результат[0].ФизическоеЛицо);

						Если Результат2 <> Неопределено Тогда
							
							Значение = "";
							
							Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
								
								Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
								
								Если Найти(Стр, "Район=") = 1 Тогда
									
									Значение = Сред(Стр, Найти(Стр, "=") + 1);
									Прервать;
									
								КонецЕсли;
								
							КонецЦикла;
						
						Иначе
							Значение = "";
						КонецЕсли;
						
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "ГородМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						
						Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеАдрес", Результат[0].ФизическоеЛицо);

						Если Результат2 <> Неопределено Тогда
							
							Значение = "";
							
							Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
								
								Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
								
								Если Найти(Стр, "Город=") = 1 Тогда
									
									Значение = Сред(Стр, Найти(Стр, "=") + 1);
									Прервать;
									
								КонецЕсли;
								
							КонецЦикла;
						
						Иначе
							Значение = "";
						КонецЕсли;
						
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "НПунктМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						
						Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеАдрес", Результат[0].ФизическоеЛицо);

						Если Результат2 <> Неопределено Тогда
							
							Значение = "";
							
							Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
								
								Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
								
								Если Найти(Стр, "НаселенныйПункт=") = 1 Тогда
									
									Значение = Сред(Стр, Найти(Стр, "=") + 1);
									Прервать;
									
								КонецЕсли;
								
							КонецЦикла;
						
						Иначе
							Значение = "";
						КонецЕсли;
						
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "УлицаМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						
						Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеАдрес", Результат[0].ФизическоеЛицо);

						Если Результат2 <> Неопределено Тогда
							
							Значение = "";
							
							Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
								
								Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
								
								Если Найти(Стр, "Улица=") = 1 Тогда
									
									Значение = Сред(Стр, Найти(Стр, "=") + 1);
									Прервать;
									
								КонецЕсли;
								
							КонецЦикла;
						
						Иначе
							Значение = "";
						КонецЕсли;
						
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "ДомМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						
						Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеАдрес", Результат[0].ФизическоеЛицо);

						Если Результат2 <> Неопределено Тогда
							
							Значение = "";
							
							Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
								
								Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
								
								Если Найти(Стр, "Дом=") = 1 Тогда
									
									Значение = Сред(Стр, Найти(Стр, "=") + 1);
									Прервать;
									
								КонецЕсли;
								
							КонецЦикла;
						
						Иначе
							Значение = "";
						КонецЕсли;
						
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "КорпусМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						
						Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеАдрес", Результат[0].ФизическоеЛицо);

						Если Результат2 <> Неопределено Тогда
							
							Значение = "";
							
							Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
								
								Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
								
								Если Найти(Стр, "Корпус=") = 1 Тогда
									
									Значение = Сред(Стр, Найти(Стр, "=") + 1);
									Прервать;
									
								КонецЕсли;
								
							КонецЦикла;
						
						Иначе
							Значение = "";
						КонецЕсли;
						
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КвартираМЖ" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
					Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						Значение = "";
					Иначе
						
						Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателеАдрес", Результат[0].ФизическоеЛицо);

						Если Результат2 <> Неопределено Тогда
							
							Значение = "";
							
							Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
								
								Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
								
								Если Найти(Стр, "Квартира=") = 1 Тогда
									
									Значение = Сред(Стр, Найти(Стр, "=") + 1);
									Прервать;
									
								КонецЕсли;
								
							КонецЦикла;
						
						Иначе
							Значение = "";
						КонецЕсли;
						
					КонецЕсли;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ТелСлуж" Тогда
			
			Если ПБОЮЛ Тогда
			
				Результат = ПолучитьСУчетомКэша(Кэш, "ТелефонОрганизации");

				Если Результат <> Неопределено Тогда
					Значение = Результат.Представление;
				Иначе
					Значение = "";
				КонецЕсли;
				
			Иначе
				
				Значение = "";
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ТелДом" Тогда
			
			Если ПБОЮЛ Тогда
				
				Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИндивидуальномПредпринимателе");

				Если Результат <> Неопределено И Результат.Количество() > 0
				 И НЕ Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						
					ПолучитьКонтактнуюИнформациюОрганизации(
						Значение,
						Результат[0].ФизическоеЛицо.Ссылка,
						Перечисления.ТипыКонтактнойИнформации.Телефон,
						ДомашнийТелефонФизЛица,
						"Представление");
					
				КонецЕсли;
				
			КонецЕсли;
			
		//******************************************************************сведения о руководителе организации
		ИначеЕсли ИмяПоказателя = "ФИОРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				ФЛ = Результат[0]["ФизическоеЛицо"];
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
						Значение = "";
					Иначе
						ДанныеФЛ = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(ДатаЗначения, Новый Структура("ФизическоеЛицо",ФЛ));
						Если ДанныеФЛ.Количество() > 0 Тогда
							Значение = СокрЛП(СокрЛП(ДанныеФЛ[0].Фамилия) + " " + СокрЛП(ДанныеФЛ[0].Имя) + " " + СокрЛП(ДанныеФЛ[0].Отчество));
						Иначе
							Значение = "";
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИННРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда

				ФЛ = Результат[0].ФизическоеЛицо;

				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					Значение = ФЛ.ИНН;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДатаРождРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = ПустаяДата;
				Иначе
					Значение = ФЛ.ДатаРождения;
				КонецЕсли;
				
			Иначе
				Значение = ПустаяДата;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "МестоРождРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					Значение = ФЛ.МестоРождения;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ПолРук" Тогда

			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = 0;
				Иначе
					Если Результат[0].ФизическоеЛицо.Пол = Перечисления.ПолФизическогоЛица.Женский Тогда
						Значение = 2;
					ИначеЕсли Результат[0].ФизическоеЛицо.Пол = Перечисления.ПолФизическогоЛица.Мужской Тогда
						Значение = 1;
					Иначе
						Значение = 0;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = 0;
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "ГраждРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					Гражданство = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеГражданство", ФЛ);
					Если Гражданство = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = Гражданство.Код;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ГраждСтранаРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					Гражданство = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеГражданство", ФЛ);
					Если Гражданство = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = ?(ПустаяСтрока(Гражданство.НаименованиеПолное), Гражданство.Наименование, Гражданство.НаименованиеПолное);
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ТелРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если ЗначениеЗаполнено(ФЛ) Тогда
					
					ПолучитьКонтактнуюИнформациюОрганизации(
						Значение,
						ФЛ.Ссылка,
						Перечисления.ТипыКонтактнойИнформации.Телефон,
						ДомашнийТелефонФизЛица,
						"Представление");
					
				КонецЕсли;
				
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодУдЛичнРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеПаспортныеДанные", Результат[0].ФизическоеЛицо);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Если УдЛичн.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка() Тогда
							Значение = "";
						Иначе
							Значение = УдЛичн.ВидДокумента.КодМВД;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ВидУдЛичнРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеПаспортныеДанные", Результат[0].ФизическоеЛицо);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Если УдЛичн.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка() Тогда
							Значение = "";								
						Иначе
							Значение = УдЛичн.ВидДокумента.Наименование;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОрганВыданУдЛичнРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеПаспортныеДанные", ФЛ);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = УдЛичн.КемВыдан;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодПодрУдЛичнРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеПаспортныеДанные", ФЛ);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = УдЛичн.КодПодразделения;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СерияУдЛичнРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеПаспортныеДанные", ФЛ);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = УдЛичн.Серия;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "НомерУдЛичнРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеПаспортныеДанные", ФЛ);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = УдЛичн.Номер;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДатаУдЛичнРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеПаспортныеДанные", ФЛ);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = УдЛичн.ДатаВыдачи;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖРукРФ" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = ПустойАдрес;
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						Значение = АдресВФормате9Запятых(Результат2);
					Иначе
						Значение = ПустойАдрес;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = ПустойАдрес;
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖРукРФ_XML" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = Неопределено;
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						Значение =  УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(Результат2.ЗначенияПолей, Результат2.Представление, Результат2.Вид);
					Иначе
						Значение = Неопределено;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = Неопределено;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИндексМЖРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
								
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Индекс=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СубъектМЖРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Регион=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "КодСубъектМЖРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Регион=") = 1 Тогда
								
								Значение = Формат(РегламентированнаяОтчетностьВызовСервера.КодРегионаПоНазванию(Сред(Стр, Найти(Стр, "=") + 1)), "ЧЦ=2; ЧВН=");
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "РайонМЖРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Район=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "ГородМЖРук" Тогда
				
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Город=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "НПунктМЖРук" Тогда
				
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "НаселенныйПункт=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "УлицаМЖРук" Тогда
				
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Улица=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "ДомМЖРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Дом=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "КорпусМЖРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Корпус=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КвартираМЖРук" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителеАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Квартира=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДолжнРук" Тогда
		    Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
		    Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
		        Значение = СокрЛП(Результат[0].Должность);
			Иначе
				Значение = "";
		    КонецЕсли;
		
		ИначеЕсли ИмяПоказателя = "ФамилияРук" Тогда
		    Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
		    Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
		        ФЛ = Результат[0]["ФизическоеЛицо"];
		        Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
		            Значение = "";
		        Иначе
		            Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
		                Значение = "";
		            Иначе
		                ДанныеФЛ = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(ДатаЗначения, Новый Структура("ФизическоеЛицо",ФЛ));
		                Если ДанныеФЛ.Количество() > 0 Тогда
		                    Значение = СокрЛП(ДанныеФЛ[0].Фамилия);
		                Иначе
		                    Значение = "";
		                КонецЕсли;
		            КонецЕсли;
		        КонецЕсли;
		    Иначе
		        Значение = "";
		    КонецЕсли;
		ИначеЕсли ИмяПоказателя = "ИмяРук" Тогда
		    Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
		    Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
		        ФЛ = Результат[0]["ФизическоеЛицо"];
		        Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
		            Значение = "";
		        Иначе
		            Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
		                Значение = "";
		            Иначе
		                ДанныеФЛ = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(ДатаЗначения, Новый Структура("ФизическоеЛицо",ФЛ));
		                Если ДанныеФЛ.Количество() > 0 Тогда
		                    Значение = СокрЛП(ДанныеФЛ[0].Имя);
		                Иначе
		                    Значение = "";
		                КонецЕсли;
		            КонецЕсли;
		        КонецЕсли;
		    Иначе
		        Значение = "";
		    КонецЕсли;
		ИначеЕсли ИмяПоказателя = "ОтчествоРук" Тогда
		    Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОРуководителе");
		    Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
		        ФЛ = Результат[0]["ФизическоеЛицо"];
		        Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
		            Значение = "";
		        Иначе
		            Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
		                Значение = "";
		            Иначе
		                ДанныеФЛ = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(ДатаЗначения, Новый Структура("ФизическоеЛицо",ФЛ));
		                Если ДанныеФЛ.Количество() > 0 Тогда
		                    Значение = СокрЛП(ДанныеФЛ[0].Отчество);
		                Иначе
		                    Значение = "";
		                КонецЕсли;
		            КонецЕсли;
		        КонецЕсли;
		    Иначе
		        Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ФамилияБух" Тогда
		    Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
		    Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
		        ФЛ = Результат[0]["ФизическоеЛицо"];
		        Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
		            Значение = "";
		        Иначе
		            Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
		                Значение = "";
		            Иначе
		                ДанныеФЛ = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(ДатаЗначения, Новый Структура("ФизическоеЛицо",ФЛ));
		                Если ДанныеФЛ.Количество() > 0 Тогда
		                    Значение = СокрЛП(ДанныеФЛ[0].Фамилия);
		                Иначе
		                    Значение = "";
		                КонецЕсли;
		            КонецЕсли;
		        КонецЕсли;
		    Иначе
		        Значение = "";
		    КонецЕсли;
		ИначеЕсли ИмяПоказателя = "ИмяБух" Тогда
		    Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
		    Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
		        ФЛ = Результат[0]["ФизическоеЛицо"];
		        Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
		            Значение = "";
		        Иначе
		            Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
		                Значение = "";
		            Иначе
		                ДанныеФЛ = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(ДатаЗначения, Новый Структура("ФизическоеЛицо",ФЛ));
		                Если ДанныеФЛ.Количество() > 0 Тогда
		                    Значение = СокрЛП(ДанныеФЛ[0].Имя);
		                Иначе
		                    Значение = "";
		                КонецЕсли;
		            КонецЕсли;
		        КонецЕсли;
		    Иначе
		        Значение = "";
		    КонецЕсли;
		ИначеЕсли ИмяПоказателя = "ОтчествоБух" Тогда
		    Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
		    Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
		        ФЛ = Результат[0]["ФизическоеЛицо"];
		        Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
		            Значение = "";
		        Иначе
		            Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
		                Значение = "";
		            Иначе
		                ДанныеФЛ = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(ДатаЗначения, Новый Структура("ФизическоеЛицо",ФЛ));
		                Если ДанныеФЛ.Количество() > 0 Тогда
		                    Значение = СокрЛП(ДанныеФЛ[0].Отчество);
		                Иначе
		                    Значение = "";
		                КонецЕсли;
		            КонецЕсли;
		        КонецЕсли;
		    Иначе
		        Значение = "";
		    КонецЕсли;
		//*******************************************************************Сведения о главном бухгалтере
		ИначеЕсли ИмяПоказателя = "ФИОБух" ИЛИ ИмяПоказателя = "ФИООтпр" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				ФЛ = Результат[0]["ФизическоеЛицо"];
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
						Значение = "";
					Иначе
						ДанныеФЛ = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(ДатаЗначения, Новый Структура("ФизическоеЛицо",ФЛ));
						Если ДанныеФЛ.Количество() > 0 Тогда
							Значение = СокрЛП(СокрЛП(ДанныеФЛ[0].Фамилия) + " " + СокрЛП(ДанныеФЛ[0].Имя) + " " + СокрЛП(ДанныеФЛ[0].Отчество));
						Иначе
							Значение = "";
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИННБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					Значение = ФЛ.ИНН;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДатаРождБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = ПустаяДата;
				Иначе
					Значение = ФЛ.ДатаРождения;
				КонецЕсли;
				
			Иначе
				Значение = ПустаяДата;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДатаРождУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = ПустаяДата;
				Иначе
					Значение = Результат.ФизическоеЛицо.ДатаРождения;
				КонецЕсли;
			Иначе
				Значение = ПустаяДата;
			КонецЕсли;

		ИначеЕсли ИмяПоказателя = "МестоРождБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					Значение = ФЛ.МестоРождения;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;

		ИначеЕсли ИмяПоказателя = "МестоРождУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					Значение = Результат.ФизическоеЛицо.МестоРождения;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;

		ИначеЕсли ИмяПоказателя = "ПолБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = 0;
				Иначе
					Если Результат[0].ФизическоеЛицо.Пол = Перечисления.ПолФизическогоЛица.Женский Тогда
						Значение = 2;
					ИначеЕсли Результат[0].ФизическоеЛицо.Пол = Перечисления.ПолФизическогоЛица.Мужской Тогда
						Значение = 1;
					Иначе
						Значение = 0;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = 0;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ПолУпПред" Тогда

			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = 0;
				Иначе
					Если Результат.ФизическоеЛицо.Пол = Перечисления.ПолФизическогоЛица.Женский Тогда
						Значение = 2;
					ИначеЕсли Результат.ФизическоеЛицо.Пол = Перечисления.ПолФизическогоЛица.Мужской Тогда
						Значение = 1;
					Иначе
						Значение = 0;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = 0;
			КонецЕсли;

		ИначеЕсли ИмяПоказателя = "ГраждБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					Гражданство = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереГражданство", ФЛ);
					Если Гражданство = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = Гражданство.Код;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ГраждСтранаБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					Гражданство = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереГражданство", ФЛ);
					Если Гражданство = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = ?(ПустаяСтрока(Гражданство.НаименованиеПолное), Гражданство.Наименование, Гражданство.НаименованиеПолное);
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;

		ИначеЕсли ИмяПоказателя = "ГраждУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					Гражданство = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеГражданство", Результат.ФизическоеЛицо);
					Если Гражданство = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = Гражданство.Код;
					КонецЕсли;

				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;

		ИначеЕсли ИмяПоказателя = "ГраждСтранаУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					Гражданство = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеГражданство", Результат.ФизическоеЛицо);
					Если Гражданство = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = ?(ПустаяСтрока(Гражданство.НаименованиеПолное), Гражданство.Наименование, Гражданство.НаименованиеПолное);
					КонецЕсли;

				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;

		ИначеЕсли ИмяПоказателя = "ТелБух" ИЛИ ИмяПоказателя = "ТелОтпр" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если ЗначениеЗаполнено(ФЛ) Тогда
					
					ПолучитьКонтактнуюИнформациюОрганизации(
						Значение,
						ФЛ.Ссылка,
						Перечисления.ТипыКонтактнойИнформации.Телефон,
						ДомашнийТелефонФизЛица,
						"Представление");
						
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "КодУдЛичнБух" Тогда

			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереПаспортныеДанные", Результат[0].ФизическоеЛицо);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Если УдЛичн.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка() Тогда
							Значение = "";
						Иначе
							Значение = УдЛичн.ВидДокумента.КодМВД;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "ВидУдЛичнБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если Результат[0].ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереПаспортныеДанные", Результат[0].ФизическоеЛицо);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Если УдЛичн.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка() Тогда
							Значение = "";								
						Иначе
							Значение = УдЛичн.ВидДокумента.Наименование;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОрганВыданУдЛичнБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереПаспортныеДанные", ФЛ);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = УдЛичн.КемВыдан;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КодПодрУдЛичнБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереПаспортныеДанные", ФЛ);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = УдЛичн.КодПодразделения;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
		
		ИначеЕсли ИмяПоказателя = "СерияУдЛичнБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереПаспортныеДанные", ФЛ);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = УдЛичн.Серия;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "НомерУдЛичнБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереПаспортныеДанные", ФЛ);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = УдЛичн.Номер;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДатаУдЛичнБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФЛ = Результат[0].ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереПаспортныеДанные", ФЛ);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = УдЛичн.ДатаВыдачи;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖБухРФ" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = ПустойАдрес;
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						Значение = АдресВФормате9Запятых(Результат2);
					Иначе
						Значение = ПустойАдрес;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = ПустойАдрес;
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖБухРФ_XML" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = Неопределено;
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(Результат2.ЗначенияПолей, Результат2.Представление, Результат2.Вид);
					Иначе
						Значение = Неопределено;
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = Неопределено;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИндексМЖБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Индекс=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СубъектМЖБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Регион=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "КодСубъектМЖБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Регион=") = 1 Тогда
								
								Значение = Формат(РегламентированнаяОтчетностьВызовСервера.КодРегионаПоНазванию(Сред(Стр, Найти(Стр, "=") + 1)), "ЧЦ=2; ЧВН=");
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "РайонМЖБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Район=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "ГородМЖБух" Тогда
				
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Город=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "НПунктМЖБух" Тогда
				
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "НаселенныйПункт=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "УлицаМЖБух" Тогда
				
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Улица=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "ДомМЖБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Дом=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "КорпусМЖБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Корпус=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КвартираМЖБух" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтере");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(Результат[0].ФизическоеЛицо) Тогда
					Значение = "";
				Иначе
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОБухгалтереАдрес", Результат[0].ФизическоеЛицо);
					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Квартира=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				Значение = "";
			КонецЕсли;
			
			
		//**********************************************Сведения об уполномоченном представителе
		ИначеЕсли ИмяПоказателя = "ФИОУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					ФЛ = Результат.ФизическоеЛицо;
					Если НЕ ФЛ = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
						ДанныеФЛ = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(ДатаЗначения, Новый Структура("ФизическоеЛицо",ФЛ));
						Если ДанныеФЛ.Количество() > 0 Тогда
							Значение = СокрЛП(СокрЛП(ДанныеФЛ[0].Фамилия) + " " + СокрЛП(ДанныеФЛ[0].Имя) + " " + СокрЛП(ДанныеФЛ[0].Отчество));
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИННУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					Значение = Результат.ФизическоеЛицо.ИНН;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ТелУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0
			 И НЕ Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
				
				ПолучитьКонтактнуюИнформациюОрганизации(
					Значение,
					Результат.ФизическоеЛицо.Ссылка,
					Перечисления.ТипыКонтактнойИнформации.Телефон,
					ДомашнийТелефонФизЛица,
					"Представление");
				
			КонецЕсли;
				
				
		ИначеЕсли ИмяПоказателя = "КодУдЛичнУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеПаспортныеДанные", Результат.ФизическоеЛицо);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Если УдЛичн.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка() Тогда
							Значение = "";								
						Иначе
							Значение = УдЛичн.ВидДокумента.КодМВД;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "ВидУдЛичнУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеПаспортныеДанные", Результат.ФизическоеЛицо);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Если УдЛичн.ВидДокумента = Справочники.ВидыДокументовФизическихЛиц.ПустаяСсылка() Тогда
							Значение = "";								
						Иначе
							Значение = УдЛичн.ВидДокумента.Наименование;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ОрганВыданУдЛичнУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеПаспортныеДанные", Результат.ФизическоеЛицо);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = УдЛичн.КемВыдан;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СерияУдЛичнУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеПаспортныеДанные", Результат.ФизическоеЛицо);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = УдЛичн.Серия;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "НомерУдЛичнУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеПаспортныеДанные", Результат.ФизическоеЛицо);
					Если УдЛичн = Неопределено Тогда
						Значение = "";
					Иначе
						Значение = УдЛичн.Номер;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДатаУдЛичнУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = ПустаяДата;
				Иначе
					УдЛичн = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеПаспортныеДанные", Результат.ФизическоеЛицо);
					Если УдЛичн = Неопределено Тогда
						Значение = ПустаяДата;
					Иначе
						Значение = УдЛичн.ДатаВыдачи;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = ПустаяДата;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖУпПредРФ" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = ПустойАдрес;
				Иначе
					
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", Результат.ФизическоеЛицо);

					Если Результат2 <> Неопределено Тогда
						Значение = АдресВФормате9Запятых(Результат2);
					Иначе
						Значение = ПустойАдрес;
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				Значение = ПустойАдрес;
			КонецЕсли;
			
			Если ПустаяСтрока(Значение) Тогда
				Значение = ПустойАдрес;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "АдрМЖУпПредРФ_XML" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = Неопределено;
				Иначе
					
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", Результат.ФизическоеЛицо);

					Если Результат2 <> Неопределено Тогда
						Значение = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(Результат2.ЗначенияПолей, Результат2.Представление, Результат2.Вид);
					Иначе
						Значение = Неопределено;
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				Значение = Неопределено;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ИндексМЖУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", Результат.ФизическоеЛицо);

					Если Результат2 <> Неопределено Тогда
												
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Индекс=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "СубъектМЖУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", Результат.ФизическоеЛицо);

					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Регион=") = 1 Тогда
																
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "КодСубъектМЖУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", Результат.ФизическоеЛицо);

					Если Результат2 <> Неопределено Тогда
												
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Регион=") = 1 Тогда
																
								Значение = Формат(РегламентированнаяОтчетностьВызовСервера.КодРегионаПоНазванию(Сред(Стр, Найти(Стр, "=") + 1)), "ЧЦ=2; ЧВН=");
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						Значение = "";
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "РайонМЖУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", Результат.ФизическоеЛицо);

					Если Результат2 <> Неопределено Тогда
						
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Район=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
					
					Иначе
						Значение = "";
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "ГородМЖУпПред" Тогда
				
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", Результат.ФизическоеЛицо);

					Если Результат2 <> Неопределено Тогда
												
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Город=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
					
					Иначе
						Значение = "";
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "НПунктМЖУпПред" Тогда
				
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", Результат.ФизическоеЛицо);

					Если Результат2 <> Неопределено Тогда
											
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "НаселенныйПункт=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
					
					Иначе
						Значение = "";
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "УлицаМЖУпПред" Тогда
				
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", Результат.ФизическоеЛицо);

					Если Результат2 <> Неопределено Тогда
												
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Улица=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
					
					Иначе
						Значение = "";
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "ДомМЖУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", Результат.ФизическоеЛицо);

					Если Результат2 <> Неопределено Тогда
												
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Дом=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
					
					Иначе
						Значение = "";
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
				
		ИначеЕсли ИмяПоказателя = "КорпусМЖУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", Результат.ФизическоеЛицо);

					Если Результат2 <> Неопределено Тогда
												
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Корпус=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
					
					Иначе
						Значение = "";
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "КвартираМЖУпПред" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителе");

			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если Результат.ФизическоеЛицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
					Значение = "";
				Иначе
					
					Результат2 = ПолучитьСУчетомКэша(Кэш, "СведенияОУполномоченномПредставителеАдрес", Результат.ФизическоеЛицо);

					Если Результат2 <> Неопределено Тогда
												
						Значение = "";
						
						Для НомСтр = 1 По СтрЧислоСтрок(Результат2.ЗначенияПолей) Цикл
							
							Стр = СтрПолучитьСтроку(Результат2.ЗначенияПолей, НомСтр);
							
							Если Найти(Стр, "Квартира=") = 1 Тогда
								
								Значение = Сред(Стр, Найти(Стр, "=") + 1);
								Прервать;
								
							КонецЕсли;
							
						КонецЦикла;
					
					Иначе
						Значение = "";
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		//прочие сведения
		ИначеЕсли ИмяПоказателя = "ФаксИсп" Тогда
			
			Значение = "";
			
		ИначеЕсли ИмяПоказателя = "ДолжнОтпр" Тогда
			
			Значение = "ГЛАВНЫЙ БУХГАЛТЕР"
			
		ИначеЕсли ИмяПоказателя = "СтавкаРефинансирования" Тогда
			
			Результат = РегистрыСведений.СтавкаРефинансированияЦБ.СрезПоследних(ДатаЗначения);
			Если Результат.Количество() > 0 Тогда
				Значение = Результат[0].Размер;
			Иначе
				Значение = 0;
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ПрименяетсяУСН" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "УчетнаяПолитикаНалоговыйУчет");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				ПромежуточноеЗначение = ?(ТипЗнч(Результат) = Тип("Структура"), Результат.ПрименяетсяУСН, Результат[0].ПрименяетсяУСН);
				Если ПромежуточноеЗначение = Истина Тогда
					Значение = 1;
				Иначе
					Значение = 0;
				КонецЕсли;
			Иначе
				Значение = 0;
			КонецЕсли;
		
		ИначеЕсли ИмяПоказателя = "ДатаПереходаНаУСН" Тогда
			
			Значение = ПустаяДата;
			
		ИначеЕсли ИмяПоказателя = "ОбъектНалогообложенияУСН" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "УчетнаяПолитикаНалоговыйУчет");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Если ТипЗнч(Результат) = Тип("Структура") Тогда
					ПрименяетсяУСНДоходыМинусРасходы = Результат.ПрименяетсяУСНДоходыМинусРасходы;
					ПрименяетсяУСН = Результат.ПрименяетсяУСН;
				Иначе
					ПрименяетсяУСНДоходыМинусРасходы = Результат[0].ПрименяетсяУСНДоходыМинусРасходы;
					ПрименяетсяУСН = Результат[0].ПрименяетсяУСН;
				КонецЕсли;
				Если ПрименяетсяУСН И ПрименяетсяУСНДоходыМинусРасходы Тогда
					Значение = 2;
				ИначеЕсли ПрименяетсяУСН И Не ПрименяетсяУСНДоходыМинусРасходы Тогда
					Значение = 1;
				Иначе
					Значение = 0;
				КонецЕсли;
			Иначе
				Значение = 0;
			КонецЕсли;	
			
		//сведения о банковском счете организации
		ИначеЕсли ИмяПоказателя = "БанкСчетНомер" Тогда
			
			Если ДанныеБанковскогоСчета = Неопределено Тогда
				БанковскийСчет = Справочники.БанковскиеСчетаОрганизаций.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(Организация.Ссылка, Константы.ВалютаРегламентированногоУчета.Получить());
				ДанныеБанковскогоСчета = Справочники.БанковскиеСчетаОрганизаций.ПолучитьРеквизитыБанковскогоСчетаОрганизации(БанковскийСчет);
			КонецЕсли;
			
			Значение = ДанныеБанковскогоСчета.НомерСчета;
			
		ИначеЕсли ИмяПоказателя = "БанкСчетНаимБанка" Тогда
			
			Если ДанныеБанковскогоСчета = Неопределено Тогда
				БанковскийСчет = Справочники.БанковскиеСчетаОрганизаций.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(Организация.Ссылка, Константы.ВалютаРегламентированногоУчета.Получить());
				ДанныеБанковскогоСчета = Справочники.БанковскиеСчетаОрганизаций.ПолучитьРеквизитыБанковскогоСчетаОрганизации(БанковскийСчет);
			КонецЕсли;
			
			Значение = ДанныеБанковскогоСчета.Банк;
			
		ИначеЕсли ИмяПоказателя = "БанкСчетКоррСчетБанка" Тогда
			
			Если ДанныеБанковскогоСчета = Неопределено Тогда
				БанковскийСчет = Справочники.БанковскиеСчетаОрганизаций.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(Организация.Ссылка, Константы.ВалютаРегламентированногоУчета.Получить());
				ДанныеБанковскогоСчета = Справочники.БанковскиеСчетаОрганизаций.ПолучитьРеквизитыБанковскогоСчетаОрганизации(БанковскийСчет);
			КонецЕсли;
			
			Значение = ДанныеБанковскогоСчета.КоррСчет;
			
		ИначеЕсли ИмяПоказателя = "БанкСчетБИКБанка" Тогда
			
			Если ДанныеБанковскогоСчета = Неопределено Тогда
				БанковскийСчет = Справочники.БанковскиеСчетаОрганизаций.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(Организация.Ссылка, Константы.ВалютаРегламентированногоУчета.Получить());
				ДанныеБанковскогоСчета = Справочники.БанковскиеСчетаОрганизаций.ПолучитьРеквизитыБанковскогоСчетаОрганизации(БанковскийСчет);
			КонецЕсли;
			
			Значение = ДанныеБанковскогоСчета.БИК;
			
		ИначеЕсли ИмяПоказателя = "НаимГоловнОрг" Тогда

			Если НЕ ЭтоГоловнаяОрганизация(Организация) Тогда
				ПолучитьЗначениеРеквизитаОрганизации(Организация, "ГоловнаяОрганизация.НаименованиеПолное", Значение);
			КонецЕсли;

		ИначеЕсли ИмяПоказателя = "КППГоловнОрг" Тогда

			Если НЕ ЭтоГоловнаяОрганизация(Организация) Тогда
				ПолучитьЗначениеРеквизитаОрганизации(Организация, "ГоловнаяОрганизация.КПП", Значение);
			КонецЕсли;

		ИначеЕсли ИмяПоказателя = "ФИОИсп" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИсполнителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				ФЛ = Результат.ФизическоеЛицо;
				Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
					Значение = "";
				Иначе
					ФЛ = Результат.ФизическоеЛицо;
					Если НЕ ЗначениеЗаполнено(ФЛ) Тогда
						Значение = "";
					Иначе
						ДанныеФЛ = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(ДатаЗначения, Новый Структура("ФизическоеЛицо",ФЛ));
						Если ДанныеФЛ.Количество() > 0 Тогда
							Значение = СокрЛП(СокрЛП(ДанныеФЛ[0].Фамилия) + " " + СокрЛП(ДанныеФЛ[0].Имя) + " " + СокрЛП(ДанныеФЛ[0].Отчество));
						Иначе
							Значение = "";
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ДолжнИсп" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИсполнителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				Значение = СокрЛП(Результат.Должность);
			Иначе
				Значение = "";
			КонецЕсли;
			
		ИначеЕсли ИмяПоказателя = "ТелИсп" Тогда
			
			Результат = ПолучитьСУчетомКэша(Кэш, "СведенияОбИсполнителе");
			Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
				
				ФизЛицо = Результат.ФизическоеЛицо;
				Если ЗначениеЗаполнено(ФизЛицо) Тогда
					
					ПолучитьКонтактнуюИнформациюОрганизации(
						Значение,
						ФизЛицо.Ссылка,
						Перечисления.ТипыКонтактнойИнформации.Телефон,
						ДомашнийТелефонФизЛица,
						"Представление");
					
				КонецЕсли;
				
			КонецЕсли;
				
		КонецЕсли;

		ОргСведения.Вставить(ИмяПоказателя, Значение);

	КонецЦикла;

	Возврат ОргСведения;

КонецФункции

// Функция возвращает сведения о физлице.
//
// Параметры:
//  ФизЛицо           - ссылка на элемент справочника "ФизическиеЛица";
//  ДатаЗначения      - дата, на которую нужно получить сведения;
//  МассивПоказателей - массив показателей, значения которых нужно вернуть.
//  
// Возвращаемое значение:
//  Структура с ключами из массива показателей и возвращаемыми значениями.
//
// Пример:
//	Если МассивПоказателей = Неопределено Тогда
//		МассивПоказателей = Новый Массив;
//		МассивПоказателей.Добавить("ИНН");
//		МассивПоказателей.Добавить("Фамилия");
//		МассивПоказателей.Добавить("Имя");
//		МассивПоказателей.Добавить("Отчество");
//	КонецЕсли;
//	ФЛСведения = Новый Структура;
//	Для Каждого ИмяПоказателя Из МассивПоказателей Цикл
//		Если ИмяПоказателя = "ИНН" Тогда
//			Значение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФизЛицо, "ИНН");
//		ИначеЕсли ИмяПоказателя = "Фамилия"
//			  ИЛИ ИмяПоказателя = "Имя"
//			  ИЛИ ИмяПоказателя = "Отчество" Тогда
//			ТаблицаСрезПоследних = РегистрыСведений.ФИОФизическихЛиц.СрезПоследних(ДатаЗначения, Новый Структура("ФизическоеЛицо", ФизЛицо));
//			Если ТаблицаСрезПоследних.Количество() > 0 Тогда
//				Значение = ТаблицаСрезПоследних[0][ИмяПоказателя];
//			Иначе
//				Значение = "";
//			КонецЕсли;
//		Иначе
//			Значение = "";
//		КонецЕсли;
//		ФЛСведения.Вставить(ИмяПоказателя, Значение);
//	КонецЦикла;
//	Возврат ФЛСведения;
//
Функция ПолучитьСведенияОФизЛице(Знач ФизЛицо, Знач МассивПоказателей = Неопределено, Знач ДатаЗначения = Неопределено) Экспорт
	
	Возврат ФизическиеЛицаЗарплатаКадры.ДанныеФизическогоЛицаДляРегламентированнойОтчетности(ФизЛицо, МассивПоказателей, ДатаЗначения);	
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции получения сведений об обособленном подразделении.

// Процедура возвращает признак того, что в конфигурации используется механизм отправки
// по различным направлениям в Росстат (для обособленных подразделений).
//
// Параметры:
// ПризнакИспользования - Булево - Истина, если реализована отправка по различным направлениям
Процедура ИспользуетсяОтправкаВРосстатПоРазнымНаправлениям(ПризнакИспользования) Экспорт 
	ПризнакИспользования = Истина;
КонецПроцедуры

// Получает код ОКПО обособленного подразделения
// 
// Параметры:
// Подразделение - СправочникСсылка.ПодразделенияОрганизаций
// КодОКПО       - Строка(14) - код ОКПО обособленного подразделения
Процедура ПолучитьКодОКПОПодразделения(Знач Подразделение, КодОКПО) Экспорт 
	ЗарплатаКадры.ПолучитьКодОКПОПодразделения(Подразделение, КодОКПО);
КонецПроцедуры

// Получает код органа ФСГС обособленного подразделения
// 
// Параметры:
// Подразделение - СправочникСсылка.ПодразделенияОрганизаций
// КодФСГС       - Строка(5) - код органа ФСГС для подразделения (например, "23-45")
Процедура ПолучитьКодОрганаФСГСПодразделения(Знач Подразделение, КодФСГС) Экспорт 
	ЗарплатаКадры.ПолучитьКодОрганаФСГСПодразделения(Подразделение, КодФСГС);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции механизма автоматического заполнения.

// Функция возвращает структуру показателей.
// Ключ структуры – идентификатор показателя.
// Значение структуры – массив из двух элементов:
// 	- признак автозаполнения показателя;
//	- признак расшифровки показателя.
//
// Параметры:
// 	ИДОтчета         - идентификатор отчета;
//	ИДРедакцииОтчета - идентификатор редакции формы отчета;
//  ПараметрыОтчета  - структура параметров отчета.
//
// Пример:
//	ПоказателиОтчета = Новый Структура;
//	Если ИДОтчета = "РегламентированныйОтчетРСВ1" Тогда
//		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв1" Тогда
//			РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000100010003", Истина, Истина);
//		КонецЕсли;
//	КонецЕсли;
//	Возврат ПоказателиОтчета;
//
Функция ПолучитьСведенияОПоказателяхОтчета(ИДОтчета, ИДРедакцииОтчета, ПараметрыОтчета = Неопределено) Экспорт
	
	ПоказателиОтчета = Новый Структура;
	
	Если ИДОтчета = "РегламентированныйОтчетБухОтчетность" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв1" Тогда
			
			ЗаполнениеБухгалтерскойОтчетности.ПолучитьСведенияОПоказателяхОтчетаБухОтчетностьФормаОтчета2011Кв1(ПоказателиОтчета);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2011Кв4" Тогда
			
			ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ПолучитьСведенияОПоказателяхОтчетаБухОтчетностьФормаОтчета2011Кв4(ПоказателиОтчета, ПараметрыОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетБухОтчетностьМП" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв4" Тогда
			
			ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ПолучитьСведенияОПоказателяхОтчетаБухОтчетностьМПФормаОтчета2012Кв4(ПоказателиОтчета, ПараметрыОтчета);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2012Кв4_2" ИЛИ ИДРедакцииОтчета = "ФормаОтчета2015Кв4" Тогда
			
			ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ПолучитьСведенияОПоказателяхОтчетаБухОтчетностьМПФормаОтчета2012Кв4_2(ПоказателиОтчета, ПараметрыОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетБухОтчетностьСОНКО" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв4" Тогда
			
			ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ПолучитьСведенияОПоказателяхОтчетаБухОтчетностьСОНКОФормаОтчета2012Кв4(ПоказателиОтчета, ПараметрыОтчета);
			
		КонецЕсли;
					
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетНДС" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2009Кв4" Тогда
			
			УчетНДС.ПолучитьСведенияОПоказателяхОтчетаНДСФормаОтчета2009Кв4(ПоказателиОтчета);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2015Кв1" Тогда
			
			УчетНДСФормированиеОтчетности.ПолучитьСведенияОПоказателяхОтчетаНДСФормаОтчета2015Кв1(ПоказателиОтчета);

		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2017Кв1" Тогда
			
			УчетНДСФормированиеОтчетности.ПолучитьСведенияОПоказателяхОтчетаНДСФормаОтчета2017Кв1(ПоказателиОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетКосвенныеНалогиТамСоюз" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2010Кв3" Тогда
		
			УчетНДС.ПолучитьСведенияОПоказателяхОтчетаКосвенныеНалогиТамСоюзФормаОтчета2010Кв3(ПоказателиОтчета);
		
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетРеестрНДСПриложение5" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2015Кв4" Тогда
		
			УчетНДСФормированиеОтчетности.ПолучитьСведенияОПоказателяхОтчетаРеестрНДСПриложение5ФормаОтчета2015Кв4(ПоказателиОтчета);
		
		КонецЕсли;
	
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетПрибыль" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2010Кв4" Тогда
			
		КонецЕсли;
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв1" ИЛИ ИДРедакцииОтчета = "ФормаОтчета2013Кв4" Тогда
			
			НалоговыйУчет.ПолучитьСведенияОПоказателяхОтчетаПрибыльФормаОтчета2012Кв1(ПоказателиОтчета);
			
		КонецЕсли;
		
		Если ИДРедакцииОтчета = "ФормаОтчета2015Кв1" ИЛИ ИДРедакцииОтчета = "ФормаОтчета2016Кв4" Тогда
			
			// часть показателей заполняется модулем НалоговыйУчет
			НалоговыйУчет.ПолучитьСведенияОПоказателяхОтчетаПрибыльФормаОтчета2015Кв1(ПоказателиОтчета);
			
			// другая часть - модулем НалогНаПрибыльДекларация
			НомераЯчеек = НалогНаПрибыльДекларация.ЗаполняемыеЯчейкиРегламентированногоОтчета(
				ИДРедакцииОтчета,
				ПараметрыОтчета.Организация,
				ПараметрыОтчета.мДатаКонцаПериодаОтчета);
				
			// ... третья - с помощью БЗКБ
			Если ИДРедакцииОтчета = "ФормаОтчета2015Кв1" Тогда
				АвтоматическоеЗаполнениеОтчетности.ОписаниеПоказателей_РасчетПоНалогуНаПрибыль_2015Кв1(ПоказателиОтчета);
			КонецЕсли;
			
			Для Каждого НомерЯчейки Из НомераЯчеек Цикл
				РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, НомерЯчейки, Истина, Истина);
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетАвансыИмущество" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв3" Тогда
			
			РегламентированнаяОтчетностьУП.ПолучитьСведенияОПоказателяхОтчетаАвансыИмуществоФормаОтчета2011Кв3(ПоказателиОтчета);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2013Кв4" Тогда

			РегламентированнаяОтчетностьУП.ПолучитьСведенияОПоказателяхОтчетаАвансыИмуществоФормаОтчета2013Кв4(ПоказателиОтчета);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2017Кв1" Тогда
			
			РегламентированнаяОтчетностьУП.ПолучитьСведенияОПоказателяхОтчетаАвансыИмуществоФормаОтчета2017Кв1(ПоказателиОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетЗемельныйНалог" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв1" Тогда
			
			УправлениеВнеоборотнымиАктивами.ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2011Кв1(ПоказателиОтчета);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2013Кв4" Тогда

			УправлениеВнеоборотнымиАктивами.ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2013Кв4(ПоказателиОтчета);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2014Кв4" Тогда
			
			УправлениеВнеоборотнымиАктивами.ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2014Кв4(ПоказателиОтчета);

		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2017Кв4" Тогда
			
			УправлениеВнеоборотнымиАктивами.ПолучитьСведенияОПоказателяхОтчетаЗемельныйНалогФормаОтчета2017Кв4(ПоказателиОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетУСН" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2009Кв1" Тогда
			
			УчетУСНСервер.ПолучитьСведенияОПоказателяхОтчетаУСНФормаОтчета2009Кв1(ПоказателиОтчета);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2014Кв1" Тогда
			
			УчетУСНСервер.ПолучитьСведенияОПоказателяхОтчетаУСНФормаОтчета2014Кв1(ПоказателиОтчета);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2015Кв1" Тогда
			
			УчетУСНСервер.ПолучитьСведенияОПоказателяхОтчетаУСНФормаОтчета2015Кв1(ПоказателиОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетТранспортныйНалог" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2007Кв1" Тогда
			
			УправлениеВнеоборотнымиАктивами.ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2007Кв1(ПоказателиОтчета);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2012Кв1" Тогда
			
			УправлениеВнеоборотнымиАктивами.ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2012Кв1(ПоказателиОтчета);

		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2012Кв4" Тогда
			
			УправлениеВнеоборотнымиАктивами.ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2012Кв4(ПоказателиОтчета);

		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2013Кв4" Тогда
			
			УправлениеВнеоборотнымиАктивами.ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2013Кв4(ПоказателиОтчета);

		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2014Кв1" Тогда
			
			УправлениеВнеоборотнымиАктивами.ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2014Кв1(ПоказателиОтчета);

		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2016Кв1" Тогда
			
			УправлениеВнеоборотнымиАктивами.ПолучитьСведенияОПоказателяхОтчетаТранспортныйНалогФормаОтчета2016Кв1(ПоказателиОтчета);
		
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетИмущество" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв3" Тогда
			
			РегламентированнаяОтчетностьУП.ПолучитьСведенияОПоказателяхОтчетаИмуществоФормаОтчета2011Кв3(ПоказателиОтчета);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2013Кв4" Тогда
			
			РегламентированнаяОтчетностьУП.ПолучитьСведенияОПоказателяхОтчетаИмуществоФормаОтчета2013Кв4(ПоказателиОтчета);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2017Кв4" Тогда
			
			РегламентированнаяОтчетностьУП.ПолучитьСведенияОПоказателяхОтчетаИмуществоФормаОтчета2017Кв4(ПоказателиОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетАлкоПриложение11" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв3" 
			ИЛИ ИДРедакцииОтчета = "ФормаОтчета2014Кв1" Тогда
			
			РегламентированнаяОтчетностьУП.ПолучитьСведенияОПоказателяхОтчетаРегламентированныйОтчетАлкоПриложение11ФормаОтчета2012Кв3(ПоказателиОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетАлкоПриложение12" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв3" Тогда
			
			РегламентированнаяОтчетностьУП.ПолучитьСведенияОПоказателяхОтчетаРегламентированныйОтчетАлкоПриложение12ФормаОтчета2012Кв3(ПоказателиОтчета);
			
		КонецЕсли;	
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП3"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП1"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП1Приложение3"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП2" 
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП2к"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма5З"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП5М" 
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма1РП"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП6"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаПМ"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма3ТОРГПМ"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма1ИПсвед"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма1Услуги"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма11"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма1П"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма1Предприниматель"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаМПСП"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаТЗВМП"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаПУслуги"
		Тогда
		
		ЗаполнениеФормСтатистики.ЗаполнитьСписокАвтозаполняемыхПолей(ПоказателиОтчета, ИДОтчета, ИДРедакцииОтчета, ПараметрыОтчета.Период);
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетСтатистикаФорма1ДМ" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв1" Тогда
			
			РегламентированнаяОтчетностьУП.ПолучитьСведенияОПоказателяхОтчетаРегламентированныйОтчетСтатистикаФорма1ДМФормаОтчета2012Кв1(ПоказателиОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетСтатистикаФорма2ДМДавальческоеСырье" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв1" Тогда
			
			РегламентированнаяОтчетностьУП.ПолучитьСведенияОПоказателяхОтчетаРегламентированныйОтчетСтатистикаФорма2ДМДавальческоеСырьеФормаОтчета2012Кв1(ПоказателиОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетСтатистикаФорма4ДМ" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв1" Тогда
			
			РегламентированнаяОтчетностьУП.ПолучитьСведенияОПоказателяхОтчетаРегламентированныйОтчетСтатистикаФорма4ДМФормаОтчета2012Кв1(ПоказателиОтчета);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "БухгалтерскаяОтчетностьВБанк" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв4" Тогда
			
			//ЗаполнениеБухгалтерскойОтчетности.ПолучитьСведенияОПоказателяхОтчетаБухгалтерскаяОтчетностьВБанкФормаОтчета2011Кв4(ПоказателиОтчета, ПараметрыОтчета);
			
		КонецЕсли;
		
	Иначе
		
		ЗарплатаКадры.ЗаполнитьПоказателиРегламентированногоОтчета(ПоказателиОтчета, ИДОтчета, ИДРедакцииОтчета, ПараметрыОтчета);
		
	КонецЕсли;
	
	Возврат ПоказателиОтчета;
	
КонецФункции

// Функция возвращает признак реализации настройки автозаполняемых показателей регл. отчета.
//
// Параметры:
// 	ИДОтчета         - идентификатор отчета;
//	ИДРедакцииОтчета - идентификатор редакции формы отчета;
//
// Пример:
//  Если ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП1" Тогда
//		Если ИДРедакцииОтчета = "ФормаОтчета2010Кв1" Тогда	
//			Возврат Истина;
//		КонецЕсли;
//	КонецЕсли;
//	Возврат Ложь;
//
Функция РеализованаНастройкаАвтозаполняемыхПоказателейРеглОтчета(ИДОтчета, ИДРедакцииОтчета) Экспорт
	Возврат Истина;
КонецФункции

// Процедура заполняет переданную в виде контейнера структуру данных отчета.
//
// Пример:
//	Если ИДОтчета = "РегламентированныйОтчетРСВ1" Тогда
//		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв1" Тогда	
//			Контейнер.Раздел30.П000300030103 = 100;
//			Контейнер.Раздел41.Добавить();
//		КонецЕсли;
//	КонецЕсли;
//
Процедура ЗаполнитьОтчет(ИДОтчета, ИДРедакцииОтчета, ПараметрыОтчета, Контейнер) Экспорт
	
	ПоказателиОтчета = Новый Структура;
	
	Если ИДОтчета = "РегламентированныйОтчетБухОтчетность" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв1" Тогда
			
			ЗаполнениеБухгалтерскойОтчетности.ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв1(ПараметрыОтчета, Контейнер);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2011Кв4" Тогда
			
			ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4(ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетБухОтчетностьМП" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв4" Тогда
			
			ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЗаполнитьОтчетБухОтчетностьМПФормаОтчета2012Кв4(ПараметрыОтчета, Контейнер);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2012Кв4_2" Тогда
			
			ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЗаполнитьОтчетБухОтчетностьМПФормаОтчета2012Кв4_2(ПараметрыОтчета, Контейнер);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2015Кв4" Тогда
			
			ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЗаполнитьОтчетБухОтчетностьМПФормаОтчета2015Кв4(ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетБухОтчетностьСОНКО" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв4" Тогда
			
			ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЗаполнитьОтчетБухОтчетностьСОНКОФормаОтчета2012Кв4(ПараметрыОтчета, Контейнер);
			
		КонецЕсли;		
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетНДС" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2009Кв4" Тогда
			
			УчетНДС.ЗаполнитьОтчетНДСФормаОтчета2009Кв4(ПараметрыОтчета, Контейнер);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2015Кв1" Тогда
			
			УчетНДСФормированиеОтчетности.ЗаполнитьОтчетНДСФормаОтчета2015Кв1(ПараметрыОтчета, Контейнер);

		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2017Кв1" Тогда
			
			УчетНДСФормированиеОтчетности.ЗаполнитьОтчетНДСФормаОтчета2017Кв1(ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетКосвенныеНалогиТамСоюз" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2010Кв3" Тогда
		
			УчетНДС.ЗаполнитьОтчетКосвенныеНалогиТамСоюзФормаОтчета2010Кв3(ПараметрыОтчета, Контейнер);
		
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетРеестрНДСПриложение5" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2015Кв4" Тогда
		
			УчетНДСФормированиеОтчетности.ЗаполнитьОтчетРеестрНДСПриложение5ФормаОтчета2015Кв4(ПараметрыОтчета, Контейнер);
		
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетПрибыль" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2010Кв4" Тогда	
			
		КонецЕсли;
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв1" ИЛИ ИДРедакцииОтчета = "ФормаОтчета2013Кв4" Тогда
			
			НалоговыйУчет.ЗаполнитьОтчетПрибыльФормаОтчета2012Кв1(ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
		Если ИДРедакцииОтчета = "ФормаОтчета2015Кв1" ИЛИ ИДРедакцииОтчета = "ФормаОтчета2016Кв4" Тогда	
			
			// Таблица для сбора сведений о расшифровке. 
			// Инициализируется в процедуре добавления записи 
			// с помощью ЗаполнениеРасшифровкаРегламентированнойОтчетности.ДобавитьСтрокуРасшифровки()
			ТаблицаРасшифровки = Неопределено; 
			
			// Определим, какие данные должна содержать декларация:
			// - по всей организации
			// - или по одному обособленному подразделению.
			// Первая представляется по месту нахождения организации,
			// вторая - по месту нахождения обособленного подразделения.
			Если ПараметрыОтчета.КПП = ПараметрыОтчета.Организация.КПП Тогда
				КППОбособленногоПодразделения = ""; // в целом по организации
			Иначе
				КППОбособленногоПодразделения = ПараметрыОтчета.КПП; // по обособленному подразделению
			КонецЕсли;
			
			// часть показателей заполняется модулем НалоговыйУчет
			НалоговыйУчет.ЗаполнитьОтчетПрибыльФормаОтчета2015Кв1(ПараметрыОтчета, Контейнер, ТаблицаРасшифровки, ИДРедакцииОтчета);
			
			// ... другая часть - модулем НалогНаПрибыльДекларация
			ДатаПодписи = Неопределено;
			ПараметрыОтчета.Свойство("ДатаПодписи", ДатаПодписи);
			
			Периодичность = Неопределено;
			ПараметрыОтчета.Свойство("Периодичность", Периодичность);
			
			КонтекстРасчета = НалогНаПрибыльДекларация.НовыйКонтекстРасчета(
				ПараметрыОтчета.Организация,
				ПараметрыОтчета.мДатаКонцаПериодаОтчета,
				ДатаПодписи,
				КППОбособленногоПодразделения,
				Периодичность);
				
			НалогНаПрибыльДекларация.ЗаполнитьРегламентированныйОтчет(
				Контейнер,
				ТаблицаРасшифровки,
				ИДРедакцииОтчета,
				КонтекстРасчета);
				
			// ... третья - с помощью БЗКБ
			АвтоматическоеЗаполнениеОтчетности.ЗначенияПоказателей_РасчетПоНалогуНаПрибыль_2015Кв1(ПараметрыОтчета, Контейнер);
			
			// Так как расшифровка составляется разными алгоритмами, то в общем случае порядок показателей в ней может оказаться непонятным для пользователя.
			// Поэтому отсортируем показатели расшифровки по возрастанию их номеров ячеек.
			// Исходя из формата ячеек это должно привести к тому, что показатели в расшифровке будут идти в том же порядке,
			// как в распечатанном отчете.
			// Однако, так как номер ячейки - не ключевое поле, то сортировку нужно выполнять так,
			// чтобы не нарушить порядок записей расшифровки каждого конкретного поля.
			Если ТипЗнч(ТаблицаРасшифровки) = Тип("ТаблицаЗначений") 
				И ТаблицаРасшифровки.Колонки.Найти("ИмяПоказателя") <> Неопределено
				И ТаблицаРасшифровки.Колонки.Найти("ИсходныйПорядок") = Неопределено Тогда
				ТаблицаРасшифровки.Колонки.Добавить("ИсходныйПорядок", Новый ОписаниеТипов("Число"));
				Для Каждого СтрокаРасшифровки Из ТаблицаРасшифровки Цикл
					СтрокаРасшифровки.ИсходныйПорядок = ТаблицаРасшифровки.Индекс(СтрокаРасшифровки);
				КонецЦикла;
				ТаблицаРасшифровки.Сортировать("ИмяПоказателя, ИсходныйПорядок");
				ТаблицаРасшифровки.Колонки.Удалить("ИсходныйПорядок");
			КонецЕсли;
			
			// Сохраняем таблицу расшифровок во временном хранилище в привязке к уникальному идентификатору формы
			ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = 
				ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетАвансыИмущество" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв3" Тогда	
			
			РегламентированнаяОтчетностьУП.ЗаполнитьОтчетАвансыИмуществоФормаОтчета2011Кв3(ПараметрыОтчета, Контейнер);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2013Кв4" Тогда	
			
			РегламентированнаяОтчетностьУП.ЗаполнитьОтчетАвансыИмуществоФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2017Кв1" Тогда	
			
			РегламентированнаяОтчетностьУП.ЗаполнитьОтчетАвансыИмуществоФормаОтчета2017Кв1(ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
	    		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетЗемельныйНалог" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв1" Тогда
			
			УправлениеВнеоборотнымиАктивами.ЗаполнитьОтчетЗемельныйНалогФормаОтчета2011Кв1(ПараметрыОтчета, Контейнер);
		
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2013Кв4" Тогда

			УправлениеВнеоборотнымиАктивами.ЗаполнитьОтчетЗемельныйНалогФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2014Кв4" Тогда
			
			УправлениеВнеоборотнымиАктивами.ЗаполнитьОтчетЗемельныйНалогФормаОтчета2014Кв4(ПараметрыОтчета, Контейнер);

		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2017Кв4" Тогда
			
			УправлениеВнеоборотнымиАктивами.ЗаполнитьОтчетЗемельныйНалогФормаОтчета2017Кв4(ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетУСН" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2009Кв1" Тогда
			
			УчетУСНСервер.ЗаполнитьОтчетУСНФормаОтчета2009Кв1(ПараметрыОтчета, Контейнер);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2014Кв1" Тогда
			
			УчетУСНСервер.ЗаполнитьОтчетУСНФормаОтчета2014Кв1(ПараметрыОтчета, Контейнер);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2015Кв1" Тогда
			
			УчетУСНСервер.ЗаполнитьОтчетУСНФормаОтчета2015Кв1(ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетТранспортныйНалог" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2007Кв1" Тогда
			
			УправлениеВнеоборотнымиАктивами.ЗаполнитьОтчетТранспортныйНалогФормаОтчета2007Кв1(ПараметрыОтчета, Контейнер);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2012Кв1" Тогда
			
			УправлениеВнеоборотнымиАктивами.ЗаполнитьОтчетТранспортныйНалогФормаОтчета2012Кв1(ПараметрыОтчета, Контейнер);

		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2012Кв4" Тогда
			
			УправлениеВнеоборотнымиАктивами.ЗаполнитьОтчетТранспортныйНалогФормаОтчета2012Кв4(ПараметрыОтчета, Контейнер);

		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2013Кв4" Тогда
			
			УправлениеВнеоборотнымиАктивами.ЗаполнитьОтчетТранспортныйНалогФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2014Кв1" Тогда
			
			УправлениеВнеоборотнымиАктивами.ЗаполнитьОтчетТранспортныйНалогФормаОтчета2014Кв1(ПараметрыОтчета, Контейнер);

		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2016Кв1" Тогда
			
			УправлениеВнеоборотнымиАктивами.ЗаполнитьОтчетТранспортныйНалогФормаОтчета2016Кв1(ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетИмущество" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв3" Тогда	
			
			РегламентированнаяОтчетностьУП.ЗаполнитьОтчетИмуществоФормаОтчета2011Кв3(ПараметрыОтчета, Контейнер);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2013Кв4" Тогда	
			
			РегламентированнаяОтчетностьУП.ЗаполнитьОтчетИмуществоФормаОтчета2013Кв4(ПараметрыОтчета, Контейнер);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2017Кв4" Тогда
			
			РегламентированнаяОтчетностьУП.ЗаполнитьОтчетИмуществоФормаОтчета2017Кв4(ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетАлкоПриложение11" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв3" Тогда
			
			РегламентированнаяОтчетностьУП.ЗаполнитьРегламентированныйОтчетАлкоПриложение11ФормаОтчета2012Кв3(ПараметрыОтчета, Контейнер);
			
		ИначеЕсли ИДРедакцииОтчета = "ФормаОтчета2014Кв1" Тогда
			
			РегламентированнаяОтчетностьУП.ЗаполнитьРегламентированныйОтчетАлкоПриложение11ФормаОтчета2014Кв1(ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетАлкоПриложение12" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв3" Тогда
			
			РегламентированнаяОтчетностьУП.ЗаполнитьРегламентированныйОтчетАлкоПриложение12ФормаОтчета2012Кв3(ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП3"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП1"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП1Приложение3"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП2" 
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП2к"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма5З"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП5М" 
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма1РП"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаП6"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаПМ"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма3ТОРГПМ"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма1ИПсвед"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма1Услуги"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма11"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма1П"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФорма1Предприниматель"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаМПСП"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаТЗВМП"
		Или ИДОтчета = "РегламентированныйОтчетСтатистикаФормаПУслуги"
		Тогда
		
		ЗаполнениеФормСтатистики.ЗаполнитьФормуСтатистики(Контейнер, ИДОтчета, ИДРедакцииОтчета, ПараметрыОтчета);
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетСтатистикаФорма1ДМ" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв1" Тогда
			
			РегламентированнаяОтчетностьУП.ЗаполнитьРегламентированныйОтчетСтатистикаФорма1ДМФормаОтчета2012Кв1(ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетСтатистикаФорма2ДМДавальческоеСырье" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв1" Тогда
			
			РегламентированнаяОтчетностьУП.ЗаполнитьРегламентированныйОтчетСтатистикаФорма2ДМДавальческоеСырьеФормаОтчета2012Кв1(ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "РегламентированныйОтчетСтатистикаФорма4ДМ" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2012Кв1" Тогда
			
			РегламентированнаяОтчетностьУП.ЗаполнитьРегламентированныйОтчетСтатистикаФорма4ДМФормаОтчета2012Кв1(ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
	ИначеЕсли ИДОтчета = "БухгалтерскаяОтчетностьВБанк" Тогда
		
		Если ИДРедакцииОтчета = "ФормаОтчета2011Кв4" Тогда
			
			//ЗаполнениеБухгалтерскойОтчетности.ЗаполнитьОтчетБухгалтерскаяОтчетностьВБанкФормаОтчета2011Кв4(ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
	Иначе
		
		ЗарплатаКадры.ЗаполнитьРегламентированныйОтчет(ИДОтчета, ИДРедакцииОтчета, ПараметрыОтчета, Контейнер);
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции статистики.

// Автоматически заполняет отчет в фоновом режиме.
//
Процедура ЗаполнитьОтчетВФоне(ПараметрыОтчета, АдресХранилища) Экспорт
	
	// Заполняет переданную во временном хранилище структуру данных отчета
	ЗаполнитьОтчет(ПараметрыОтчета.ИДОтчета, ПараметрыОтчета.ИДРедакцииОтчета, ПараметрыОтчета.ПараметрыОтчета, ПараметрыОтчета.Контейнер);
	Попытка
		ТаблицаРасшифровки = ПолучитьИзВременногоХранилища(ПараметрыОтчета.ПараметрыОтчета.АдресВременногоХранилищаРасшифровки);
	Исключение
		ТаблицаРасшифровки = Неопределено;
	КонецПопытки;
	
	СтруктураДанных = Новый Структура();
	СтруктураДанных.Вставить("Контейнер", ПараметрыОтчета.Контейнер);
	СтруктураДанных.Вставить("ТаблицаРасшифровки", ТаблицаРасшифровки);
	
	ПоместитьВоВременноеХранилище(СтруктураДанных, АдресХранилища);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры интеграции со списком задач бухгалтера.

// Процедура изменят заголовки кнопок.
//
Процедура НастроитьКнопкиКалендаряБухгалтера(КнопкаСправочникОтчетов = Неопределено, КнопкаКалендарь = Неопределено) Экспорт
			
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Процедуры интерфейса взаимодействия с конфигурациями (библиотеками)
// - потребителями.

// Процедура возвращает структуру с табличными документами разделов 2.5 и 6 формы РСВ-1.
//
// Параметры:
//  СсылкаНаСохрРеглОтчет - ссылка на регламентированный отчет;
//  СтруктураРазделов     - структура:
//    ключ                - имя раздела;
//    значение            - массив структур с полями:
//     Описание           - строка;
//     ТабличныйДокумент  -  табличный документ.
//
Процедура ПолучитьРаздел25иРаздел6ФормыРСВ1(СсылкаНаСохрРеглОтчет, СтруктураРазделов,
	                                        НумероватьСтраницы,
											НомерПервойстраницыРаздела25,
											НомерПоследнейстраницыРаздела25,
											НомерПервойстраницыРаздела6,
											ОбщееКоличествоСтраницРаздела6) Экспорт
											
	ПерсонифицированныйУчет.ЗаполнитьПечатныеФормыРазделовРСВ1(
		СсылкаНаСохрРеглОтчет,
		СтруктураРазделов,
		НумероватьСтраницы,
		НомерПервойстраницыРаздела25,
		НомерПоследнейстраницыРаздела25,
		НомерПервойстраницыРаздела6,
		ОбщееКоличествоСтраницРаздела6);
	
КонецПроцедуры

// Процедура заполняет данные для выгрузки раздела 2.5 формы РСВ-1
//
// Параметры:
//  СсылкаНаСохрРеглОтчет – ссылка на регламентированный отчет;
//  ДанныеРаздела25       – структура с ключами "Таблица_2_5_1" и "Таблица_2_5_2":
//    "Таблица_2_5_1"     - таблица значений - заполняется данными многострочной
//                          части подраздела 2.5.1 по колонкам 2 - 5:
//      "П000251000102"   - Число (15, 2);
//      "П000251000103"   - Число (15, 2);
//      "П000251000104"   - Число ( 3, 0);
//      "П000251000105"   - Строка  (100);
//    "Таблица_2_5_2"     - таблица значений - заполняется данными многострочной
//                          части подраздела 2.5.2 по колонкам 2 - 8:
//      "П000252000102"   - Число ( 1, 0);
//      "П000252000103"   - Число ( 4, 0);
//      "П000252000104"   - Число (15, 2);
//      "П000252000105"   - Число (15, 2);
//      "П000252000106"   - Число (15, 2);
//      "П000252000107"   - Число ( 3, 0);
//      "П000252000108"   - Строка  (100).
//
Процедура ЗаполнитьДанныеДляВыгрузкиРаздела25РСВ_1(СсылкаНаСохрРеглОтчет, ДанныеРаздела25) Экспорт
	
	ПерсонифицированныйУчет.ЗаполнитьДанныеДляВыгрузкиРаздела25РСВ_1(СсылкаНаСохрРеглОтчет, ДанныеРаздела25);	
	
КонецПроцедуры

// Процедура вызывается при создании на сервере формы регламентированного отчета.
//
// Параметры:
//  ИмяОтчета - Строка - имя отчета в дереве объектов метаданных;
//  ИмяФормы  - Строка - имя формы отчета;
//  Форма     - УправляемаФорма - форма, из которой вызывается процедура.
//
Процедура ПриСозданииФормыРеглОтчета(ИмяОтчета, ИмяФормы, Форма) Экспорт
			
КонецПроцедуры

#Область ПроцедурыОтчетностиПоАлкогольнойПродукции

// Возвращает в параметре "СтрокаИмениОбъекта" имя объекта, 
// соответствующего "РегистрСведений.СведенияОбАлкогольнойПродукции" в БП.
// Если такого объекта нет - пустая строка.
//
// Параметры:
//  СтрокаИмениОбъекта - Строка - имя объекта, соответствующего "РегистрСведений.СведенияОбАлкогольнойПродукции" в БП. 
//
// Пример реализации:
//  СтрокаИмениОбъекта = "РегистрСведений.СведенияОбАлкогольнойПродукции";
//
Процедура СтрокаРегистрСведенийСведенияОбАлкогольнойПродукции(СтрокаИмениОбъекта) Экспорт
	СтрокаИмениОбъекта = "";
КонецПроцедуры

// Возвращает в параметре "СтрокаИмениОбъекта" имя объекта,
// соответствующего "Перечисление.ВидыЛицензийНаПродажуАлкоголя.Пиво" в БП.
// Если такого объекта нет - пустая строка.
//
// Параметры:
//	СтрокаИмениОбъекта - Строка - имя объекта, соответствующего "Перечисление.ВидыЛицензийНаПродажуАлкоголя.Пиво" в БП.
//
// Пример реализации:
//  СтрокаИмениОбъекта = "Перечисление.ВидыЛицензийНаПродажуАлкоголя.Пиво";
//
Процедура СтрокаПеречислениеВидыЛицензийНаПродажуАлкоголяПиво(СтрокаИмениОбъекта) Экспорт
	СтрокаИмениОбъекта = "Перечисление.ВидыЛицензийАлкогольнойПродукции.Пиво";	
КонецПроцедуры

// Возвращает в параметре "СтрокаИмениОбъекта" имя объекта,
// соответствующего "РегистрСведений.ЛицензииПоставщиковАлкогольнойПродукции" в БП.
// Если такого объекта нет - пустая строка.
//
// Параметры:
//	СтрокаИмениОбъекта - Строка - имя объекта, соответствующего "РегистрСведений.ЛицензииПоставщиковАлкогольнойПродукции" в БП.
//
// Пример реализации:
//  СтрокаИмениОбъекта = "РегистрСведений.ЛицензииПоставщиковАлкогольнойПродукции";
//
Процедура СтрокаРегистрСведенийЛицензииПоставщиковАлкогольнойПродукции(СтрокаИмениОбъекта) Экспорт
	СтрокаИмениОбъекта = "Справочник.ЛицензииПоставщиковАлкогольнойПродукции";
КонецПроцедуры
	
#КонецОбласти 

////////////////////////////////////////////////////////////////////////////////
// Служебные процедуры и функции.

// Функция возвращает идентификатор конфигурации.
// Длина идентификатора не должна превышать 8 символов.
//
// Пример:
//  Возврат "БПКОРП";
//
Функция ИДКонфигурации() Экспорт
	Возврат ОбщегоНазначенияУТ.ИДКонфигурации();
КонецФункции

// Функция возвращает краткое название конфигурации.
// Длина возвращаемого значения не должна превышать 30 символов.
//
// Пример:
//  Возврат "1С:Бухгалтерия";
//
Функция КраткоеНазваниеПрограммы() Экспорт
	Возврат Метаданные.КраткаяИнформация;
КонецФункции

// Функция возвращает список используемых в конфигурации регламентированных отчетов.
//
// Пример:
// 	СписокРегламентированныхОтчетов = Новый СписокЗначений;
//	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетНДС");
//	Возврат СписокРегламентированныхОтчетов;
//
Функция ПолучитьСписокРегламентированныхОтчетов() Экспорт
	
	СписокРегламентированныхОтчетов = Новый СписокЗначений;
	
	// Бухгалтерская отчетность
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетБухОтчетность");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетБухОтчетностьМП");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетБухОтчетностьСОНКО");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРасчетЧистыхАктивов");
	
	// Налоговая отчетность
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАвансыИмущество");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАкцизыАлкоголь");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАкцизыГСМ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАкцизыПриложение1");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАкцизыПриложение5");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАкцизыПриложение7");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАкцизыТабак");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетВода");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетВодныеБиоресурсы");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетВодныеБиоресурсыПрилов");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетДоходыЗаПределамиРФ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетДоходыИностраннымОрганизациям");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетЕдиныйНалогНаВмененныйДоход");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетЕСХН");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетЕУНД");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетЖивотныйМир");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетЗаявлениеОВвозеТоваров");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетЗемельныйНалог");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетИзвещениеОбОсвАвансовогоПлатежаАкциза");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетИзвещениеОбУплатеАвансовогоПлатежаАкциза");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетИмущество");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетКосвенныеНалогиТамСоюз");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетНалогНаИгорныйБизнес");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетНДПИ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетНДС");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетНедра");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетПереченьЗаявленийОВвозеТоваров");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетПрибыль");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетПрибыльСколковоРасчетНалоговойБазы");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетПрибыльСколковоРасчетПрибыли");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетПрибыльСРП");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРасчетПлатыОкрСредаСвод");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРасчетПоОплатеЗаВоду");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРасчетПоСтраховымВзносам");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРеестрАкцизыПриложение1");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРеестрАкцизыПриложение2");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРозничныеЦеныНаТабак");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаУчетаПеремещенияТоваровТС");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетТранспортныйНалог");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетУСН");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетФинансовыйРезультатИнвестиционногоТоварищества");
	
	// Отчетность в фонды
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчет4ФСС");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчет4аФСС");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетПодтверждениеВидаДеятельности");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРВ3");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРСВ1");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРСВ2");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистика1Квотирование");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтраховыеВзносыНСИПЗ");
	
	// Налоговая отчетность иностранных организаций
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетДеятельностьИнОргВРФ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетПрибыльИностраннойОрганизации");
		
	// Статистика
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаБухОтчетность");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаПрочиеФормы");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма11");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма11К");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма11НА");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма11Сделка");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма11ТЭР");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма12Строительство");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма12Ф");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма14МЕТлом");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1Автотранс");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1Алкоголь");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1АлкогольОпт");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1ВЭС");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1ДАП");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1ДАуслуги");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1ДМ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1Закупки");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1И");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1ИПмес");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1ИПсвед");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1Кадры");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1КСР");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1КСРКраткая");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1НатураБМ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1П");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1Предприниматель");	
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1РабочаяСила");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1РЖ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1РП");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1СХцены");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1Т");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1ТЕП");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1Технология");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1ТОРГ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1ТРавто");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1Туст");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1Тчзп");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1Услуги");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1Учет");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1ЦеныПриобр");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма1ЦеныПроизв");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма22ЖКХсв");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма24Энергетика");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма26ЖКХ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма2ДМДавальческоеСырье");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма2МПинн");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма2НаукаКр");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма2СБСеверСр");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма2ТПВоздух");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма2ЦеныПриобр");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма3Информ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма3СБвывоз");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма3ТОРГПМ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма3Ф");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма4ДМ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма4Запасы");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма4Инновация");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма4ТЭР");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма5З");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма65Автотранс");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма7Травматизм");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма85К");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма8ВЭСуслуги");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма9КС");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаДАППМ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаДАС");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаДАФЛ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаМПм");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаМПмсх");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаМПСП");	
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаП1");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаП1Приложение3");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаП1СХ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаП2");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаП2инв");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаП2к");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаП3");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаП4");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаП5М");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаП6");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаПМ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаПМПром");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаПМТорг");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаПУслуги");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаС1");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаС2");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаТЗВМП");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФормаТЗПбюджет");
	
	// Справки
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСведенияОрублевыхСчетах");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСведенияОСчетахвВиностраннойВалюте");
		
	// Декларирование производства и оборота алкогольной продукции
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАлкоПриложение1");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАлкоПриложение2");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАлкоПриложение3");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАлкоПриложение4");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАлкоПриложение5");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАлкоПриложение6");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАлкоПриложение7");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАлкоПриложение8");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАлкоПриложение9");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАлкоПриложение10");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАлкоПриложение11");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАлкоПриложение12");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАлкоПриложение13");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАлкоПриложение14");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетАлкоПриложение15");
		
	// Отчетность БЗК
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчет3НДФЛ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчет4НДФЛ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчет6НДФЛ");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСоответствиеУсловийТруда");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСведенияОСреднесписочнойЧисленностиРаботников");
	
	ЗарплатаКадры.ЗаполнитьСписокРегламентированныхОтчетов(СписокРегламентированныхОтчетов);
	
	// Отчетность прочая
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетДекларацияПлатаНВОС");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетОтходыСубъектовМСП");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетФорма2ТПОтходы");
	
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма8ВЭСТрусл");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСтатистикаФорма57Т");
	
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРасчетЭкологическийСбор");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРеестрНДСПриложение1");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРеестрНДСПриложение2");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРеестрНДСПриложение3");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРеестрНДСПриложение4");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРеестрНДСПриложение5");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРеестрНДСПриложение6");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРеестрНДСПриложение7");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРеестрНДСПриложение8");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРеестрНДСПриложение9");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРеестрНДСПриложение10");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРеестрНДСПриложение11");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРеестрНДСПриложение12");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРеестрНДСПриложение13");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетРеестрНДСПриложение14");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСведенияОДолеДоходовОрганизацииПоСоцУслугам");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетСведенияОДолеДоходовОтОбразовательнойИлиМедДеятельности");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетУтилизационныйСбор");
	СписокРегламентированныхОтчетов.Добавить("РегламентированныйОтчетУтилизационныйСборСамоходныеМашины");
	
	// Свернем список отчетов
	ТаблицаОтчетов = Новый ТаблицаЗначений;
	ТаблицаОтчетов.Колонки.Добавить("Отчет", Новый ОписаниеТипов("Строка"));
	
	Для Каждого ТекОтчет Из СписокРегламентированныхОтчетов Цикл
		ТаблицаОтчетов.Добавить().Отчет = ТекОтчет.Значение;
	КонецЦикла;
	
	ТаблицаОтчетов.Свернуть("Отчет", "");
	
	СписокРегламентированныхОтчетов.ЗагрузитьЗначения(ТаблицаОтчетов.ВыгрузитьКолонку("Отчет"));
	
	Возврат СписокРегламентированныхОтчетов;
	
КонецФункции

// Функция возвращает признак - является ли организация физ. или юр. лицом.
//
// Параметры:
//  Организация - ссылка на элемент справочника "Организации".
//
// Возвращаемое значение:
//  Истина - организация является юр. лицом;
//  Ложь   - организация является физ. лицом.
//
// Пример:
//  Если Организация.ИностраннаяОрганизация Тогда
//		Возврат Истина;
//	Иначе
//		Возврат (Организация.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);
//	КонецЕсли;
//
Функция ЭтоЮридическоеЛицо(Организация) Экспорт
	Перем Значение;
	
	ПолучитьЗначениеРеквизитаОрганизации(Организация, "ЮридическоеФизическоеЛицо", Значение, Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);
	
	Возврат Значение = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	
КонецФункции

// Функция возвращает признак - уплачивает ли налогоплательщик единый налог на вмененный доход (ЕНВД).
//
// Параметры:
//  Организация - ссылка на элемент справочника "Организации".
//  Период      - дата, на которую нужно получить признак.
//
// Возвращаемое значение:
//  Истина - налогоплательщик уплачивает ЕНВД.
//  Ложь   - налогоплательщик не уплачивает ЕНВД.
//
// Пример:
//  Возврат УчетнаяПолитика.ПлательщикЕНВД(Организация, Период);
//
Функция ПлательщикЕНВД(Организация, Период) Экспорт
	Возврат Ложь;
КонецФункции

// Функция возвращает систему налогообложения организации.
//
// Параметры:
//  Организация - ссылка на элемент справочника "Организации".
//  Период      - дата, на которую нужно получить систему налогообложения.
//
// Возвращаемое значение:
//  Общая      - общая система налогообложения.
//  Упрощенная - упрощенная система налогообложения.
//
// Пример:
//  УчетнаяПолитикаОрганизации = УчетнаяПолитика.СистемаНалогообложения(Организация, Период);
//	Если УчетнаяПолитикаОрганизации = Перечисления.СистемыНалогообложения.Общая Тогда
//		Возврат "Общая";
//	Иначе
//		Возврат "Упрощенная";
//	КонецЕсли;
//
Функция СистемаНалогообложения(Организация, Период) Экспорт
	
	УчетнаяПолитикаОрганизации = УчетнаяПолитика.СистемаНалогообложения(Организация, Период);
	Если УчетнаяПолитикаОрганизации = Перечисления.СистемыНалогообложения.Общая Тогда
		Возврат "Общая";
	Иначе
		Возврат "Упрощенная";
	КонецЕсли;
	
КонецФункции

// Функция возвращает признак применения ПБУ 18/02.
//
// Параметры:
//  Организация - ссылка на элемент справочника "Организации".
//  Период      - дата, на которую нужно получить признак.
//
// Возвращаемое значение:
//  Истина - ПБУ 18/02 применяется.
//  Ложь   - ПБУ 18/02 не применяется.
//
// Пример:
//  Возврат УчетнаяПолитика.ПоддержкаПБУ18(Организация, Период);
//
Функция ПрименяетсяПБУ18(Организация, Период) Экспорт
	Возврат УчетнаяПолитика.ПоддержкаПБУ18(Организация, Период);
КонецФункции 

// Функция возвращает признак - является ли организация иностранной.
//
// Параметры:
//  Организация - ссылка на элемент справочника "Организации".
//
// Возвращаемое значение:
//  Истина - организация является иностранной;
//  Ложь   - организация не является иностранной.
//
// Пример:
//  Если Организация.Метаданные().Реквизиты.Найти("ИностраннаяОрганизация") <> Неопределено Тогда
//		Возврат Организация.ИностраннаяОрганизация;
//	Иначе
//		Возврат Ложь;
//	КонецЕсли;
//
Функция ЭтоИностраннаяОрганизация(Организация) Экспорт
	Перем Значение;
	
	ПолучитьЗначениеРеквизитаОрганизации(Организация, "ИностраннаяОрганизация", Значение, Ложь);
	
	Возврат Значение;
	
КонецФункции

// Функция возвращает сведения о сотрудниках (застрахованных лицах) организации по состоянию на указанную дату.
//
// Параметры:
//  Организация - ссылка на элемент справочника Организации, по которому требуется получить сведения.
//  ДатаЗапроса - дата, по состоянию на которую требуется получить сведения
//
// Возвращаемое значение:
//  ТаблицаЗначений с колонками "Фамилия", "Имя", "Отчество" и "СтраховойНомерПФР", в которых
//  содержится информация о фамилии, имени, отчестве и страховом номере (СНИЛС) каждого
//  из сотрудников (застрахованных лиц) организации соответственно.
//
// Пример:
//
//  СтруктураПараметров = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизаций();
//  СтруктураПараметров.Организация = Организация;
//  СтруктураПараметров.ОкончаниеПериода = ДатаЗапроса;
//
//  Сотрудники = КадровыйУчет.СотрудникиОрганизации(Истина, СтруктураПараметров);
//
//  Возврат КадровыйУчет.КадровыеДанныеСотрудников(Истина, Сотрудники.ВыгрузитьКолонку("Сотрудник"), "Фамилия,Имя,Отчество,СтраховойНомерПФР", ДатаЗапроса);
//
Функция ПолучитьСписокЗастрахованныхЛицОрганизации(Организация, ДатаЗапроса) Экспорт
	
 	Возврат ЗарплатаКадры.СписокЗастрахованныхЛицОрганизацииЗаОтчетныйПериодПФР(Организация, ДатаЗапроса);
	
КонецФункции

// Процедура добавляет в форму назначаемую команду.
//
// Параметры:
//   Форма - форма, в которую добавляется команда.
//   ГруппаФормы - группа формы, в которой будет располагаться команда.
//
Процедура ДобавитьНазначаемуюКоманду(Форма, ГруппаФормы) Экспорт
	
КонецПроцедуры

// Функция возвращает заголовок формы "УправлениеОтчетностью" обработки "ОбщиеОбъектыРеглОтчетности".
// Если функция возвращает пустую строку, то используется заголовок формы, указанный по умолчанию.
//
// Пример:
//  Возврат "";
//
Функция ЗаголовокФормыУправлениеОтчетностью() Экспорт
	
КонецФункции

// Процедура возвращает признак - является ли индивидуальный предприниматель работодателем для наемных сотрудников.
//
// Параметры:
//  Организация - ссылка на элемент справочника "Организации".
//  ИПИспользуетТрудНаемныхРаботников - булево - признак - является ли индивидуальный предприниматель
//  работодателем для наемных сотрудников.
//    Истина - ИП является работодателем;
//    Ложь   - ИП не является работодателем.
//
// Пример:
//	ИПИспользуетТрудНаемныхРаботников = НЕ ЭтоЮридическоеЛицо(Организация)
//		И (ЗначениеЗаполнено(Организация.РегистрационныйНомерПФР)
//		ИЛИ ЗначениеЗаполнено(Организация.КодОрганаПФР)
//		ИЛИ ЗначениеЗаполнено(Организация.НаименованиеТерриториальногоОрганаПФР)
//		ИЛИ ЗначениеЗаполнено(Организация.РегистрационныйНомерТФОМС)
//		ИЛИ ЗначениеЗаполнено(Организация.РегистрационныйНомерФСС)
//		ИЛИ ЗначениеЗаполнено(Организация.КодПодчиненностиФСС)
//		ИЛИ ЗначениеЗаполнено(Организация.НаименованиеТерриториальногоОрганаФСС));
//
Процедура ПолучитьПризнакИспользованияИПТрудаНаемныхРаботников(Организация, ИПИспользуетТрудНаемныхРаботников) Экспорт
	
	ИПИспользуетТрудНаемныхРаботников = Истина;
	
КонецПроцедуры

// Функция возвращает имя справочника обособленных подразделений,
// используемого для автоматического заполнения статистической отчетности.
//
// Пример:
//  Возврат "ПодразделенияОрганизаций";
//
Функция ИмяСправочникаОбособленныхПодразделений() Экспорт
	Возврат ЗарплатаКадры.ИмяСправочникаОбособленныхПодразделений();
КонецФункции

// Функция возвращает имя реквизита справочника подразделений, который
// определяет, является ли подразделение обособленным (в трактовке Росстата).
// Используется для автоматического заполнения статистической отчетности.
//
// Тип реквизита - Булево.
// Если значение реквизита равно Истина - подразделение является обособленным.
// Если значение реквизита равно Ложь - подразделение не является обособленным.
//
// Пример:
//  Возврат "ИмеетНомерТерриториальногоОрганаРосстата";
//
Функция ИмяРеквизитаПризнакаОбособленногоПодразделения() Экспорт
	Возврат ЗарплатаКадры.ИмяРеквизитаПризнакаОбособленногоПодразделения();
КонецФункции

// Функция возвращает значение Раздела 3 Строки 130 Книги учета доходов и расходов.
// Параметры:
//   Организация - Организация по которой построен рег.отчет.
//   ДатаОкончанияПериода - Дата окончания периода отчета (СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета).
Функция СуммаФактическогоУменьшенияНалоговойБазы(Организация, ДатаОкончанияПериода) Экспорт 
	Возврат 0;
КонецФункции

// Функция возвращает код вида документа физического лица.
//
// Параметры:
//  ВидДокументаФизическогоЛица - ссылка на элемент справочника "ВидыДокументовФизическихЛиц".
//
// Тип возвращаемого значения:
//  Строка(2).
//
// Пример:
//	Возврат ВидДокументаФизическогоЛица.КодМВД;
//
Функция ПолучитьКодВидаДокументаФизическогоЛица(ВидДокументаФизическогоЛица) Экспорт
	
	КодВидаДокумента = "";
	
	Если ЗначениеЗаполнено(ВидДокументаФизическогоЛица) Тогда
		КодВидаДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидДокументаФизическогоЛица, "КодМВД");
	КонецЕсли;
	
	Возврат КодВидаДокумента;
	
КонецФункции

// Процедура возвращает ссылку на предопределенный элемент из справочника "ВидыКонтактнойИнформации".
//
// Параметры:
//  ВидКИ      - ссылка на предопределенный элемент справочника "ВидыКонтактнойИнформации".
//  НаимВидаКИ - Строка - наименование предопределенного элемента справочника "ВидыКонтактнойИнформации".
//
// Пример:
//  ВидКИ = Справочники.ВидыКонтактнойИнформации[НаимВидаКИ];
//
Процедура ПолучитьВидКонтактнойИнформации(ВидКИ, НаимВидаКИ) Экспорт
		
КонецПроцедуры

// Процедура возвращает признак ведения персонифицированного учета во внешней программе.
//
// Параметры:
//  ПризнакПерсУчета - булево - признак ведения персонифицированного учета во внешней программе.
//                     Истина - персонифицированный учет ведется во внешней программе;
//                     Ложь   - персонифицированный учет ведется в конфигурации.
//
Процедура ПолучитьПризнакВеденияПерсонифицированногоУчетаВоВнешнейПрограмме(ПризнакПерсУчета) Экспорт
	
КонецПроцедуры

// Процедура возвращает признак учета расходов по элементам затрат.
//
// Параметры:
//  НачалоПериода        - Дата - начало периода отчета (СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета).
//  КонецПериода         - Дата - окончание периода отчета (СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета).
//  Организация          - СправочникСсылка - ссылка на элемент справочника "Организации".
//  ПризнакУчетаРасходов - Булево - признак учета расходов по элементам затрат.
//                           Истина - расходы учитываются по элементам затрат;
//                           Ложь   - расходы не учитываются по элементам затрат.
// Пример:
//  ПризнакУчетаРасходов = ЭлементыЗатратНастройкаПараметровУчета.РасходыУчитываютсяПоЭлементамЗатрат(
//  	НачалоПериода, КонецПериода, Организация);
//
Процедура ПолучитьПризнакУчетаРасходовПоЭлементамЗатрат(НачалоПериода, КонецПериода, Организация, ПризнакУчетаРасходов) Экспорт
	
КонецПроцедуры

// Процедура возвращает признак учета расходов по элементам затрат.
//
// Параметры:
//  НачалоПериода        - Дата - начало года, предшествовавшему периоду отчета
//                               (НачалоГода(ДобавитьМесяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета, - 12))).
//  КонецПериода         - Дата - окончание периода отчета (СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета).
//  Организация          - СправочникСсылка - ссылка на элемент справочника "Организации".
//  ПризнакПлательщикаТС - Булево - признак плательщика торгового сбора.
//                           Истина - организация является плательщиком торгового сбора;
//                           Ложь   - организация не является плательщиком торгового сбора.
// Пример:
//  ПризнакПлательщикаТС = УчетнаяПолитика.ПлательщикТорговогоСбораЗаПериод(Организация, НачалоПериода, КонецПериода);
//
Процедура ПолучитьПризнакПлательщикаТорговогоСбораЗаПериод(Организация, НачалоПериода, КонецПериода, ПризнакПлательщикаТС) Экспорт
	
КонецПроцедуры

// Процедура возвращает УИД конфигурации для целей регламентированной отчетности.
//
// Параметры:
// 	УИДКонфигурации - Строка - Уникальный идентификатор конфигурации 
//							   для целей регламентированной отчетности.
//
// Пример:
//  УИДКонфигурации = "e54b72a0-171f-11df-85fa-001b24e002fe";
//
Процедура ПолучитьУИДКонфигурации(УИДКонфигурации) Экспорт
	
	УИДКонфигурации = "42565904-0fd9-11df-85fa-001b24e002fe";
	
КонецПроцедуры

// Возвращает массив ссылок на элементы справочника "РегистрацииВНалоговомОргане".
//
// Параметры:
//   Организация            - СправочникСсылка.Организации - ссылка на элемент справочника "Организации".
//   ДатаКонцаПериодаОтчета - Дата - дата конца периода отчета.
//   НалоговыеОрганы        - Массив - ссылки на элементы справочника "РегистрацииВНалоговомОргане".
//
Процедура ПолучитьНалоговыеОрганы(Организация, ДатаКонцаПериодаОтчета, НалоговыеОрганы) Экспорт
	 
КонецПроцедуры

#Область НоваяФормаРегламентированнойОтчетности

// Процедура переопределяет обработчик подписки на событие "ЗаписьОбъектовРегламентированнойОтчетности*"
//
// Параметры:
//	Ссылка - СправочникСсылка, ДокументСсылка - Ссылка на объект - источник события
//	Отказ  - Булево - Управляет значением параметра "Отказ" вызывающего обработчика подписки на событие
//	СтандартнаяОбработка - Булево - Если СтандартнаяОбработка = Истина, то будут выполнены действия вызывающего обработчика подписки на событие
//
Процедура ЗаписьОбъектовРегламентированнойОтчетности(Ссылка, Отказ, СтандартнаяОбработка) Экспорт
	ЗарплатаКадры.ЗаписьОбъектовРегламентированнойОтчетности(Ссылка, Отказ, СтандартнаяОбработка);	
КонецПроцедуры

// Процедура переопределяет свойства объекта, с которыми он будет отображен в форме Отчетность
// Параметры:
//  СвойстваОбъектов  - ТаблицаЗначений - Таблица, содержащая в себе описания ссылок, переданных в закладке Ссылка таблицы
//		Каждая колонка таблицы соотвествует свойству объекта.
//		Таблица содержит следующие колонки:
//			- ДатаСоздания - Дата - Дата создания объекта
//			- Наименование - Строка - Наименование объекта, с которым он будет отображаться в форме Отчетность
//			- КодКонтролирующегоОргана - Строка - Код контролирующего органа, в который отправляется отчетности по ТКС
//			- ДатаНачала - Дата - Дата начала периода. Пустая, если дата начала периода отсуствует
//			- ДатаОкончания - Дата - Дата окончания периода. Пустая, если дата окончания периода отсуствует 
//			- ВариантОтчета - Строка - Если первичный, то указываем "П", если нет признака первичный/корректирующий - "-", иначе - "К/" + <номер корректировки>
//			- ПометкаУдаления - Булево - Истина, если объект помечен на удаление 
//			- Организация - СправочникСсылка.Организации - Организация, которой принадлежит объект
//			- Комментарий - Строка - Комментарий из объекта
//
Процедура ОпределитьСвойстваОбъектовДляОтображенииВФормеОтчетность(СвойстваОбъектов) Экспорт
	
	КонтролируемыеСделки.ОпределитьСвойстваОбъектовДляОтображенииВФормеОтчетность(СвойстваОбъектов);
	
	ЗарплатаКадры.ОпределитьСвойстваОбъектовДляОтображенииВФормеОтчетность(СвойстваОбъектов);
	
	МассивЖурналовСчетовФактур = Новый Массив();
	Для Каждого СвойстваОбъекта ИЗ СвойстваОбъектов Цикл
		Если ТипЗнч(СвойстваОбъекта.Ссылка) = Тип("ДокументСсылка.ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде") Тогда
			МассивЖурналовСчетовФактур.Добавить(СвойстваОбъекта.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивЖурналовСчетовФактур.Количество() > 0 Тогда
		Запрос = Новый Запрос();
		Запрос.Параметры.Вставить("МассивЖурналовСчетовФактур", МассивЖурналовСчетовФактур);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде.Ссылка,
		|	ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде.Дата КАК ДатаСоздания,
		|	ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде.Организация КАК Организация,
		|	0 КАК НомерКорректировки,
		|	ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде.НалоговыйПериод КАК ДатаНачала,
		|	КОНЕЦПЕРИОДА(ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде.НалоговыйПериод, КВАРТАЛ) КАК ДатаОкончания,
		|	ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде.ПометкаУдаления,
		|	ЕСТЬNULL(ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде.Организация.РегистрацияВНалоговомОргане.Код, """") КАК КодКонтролирующегоОргана
		|ИЗ
		|	Документ.ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде КАК ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде
		|ГДЕ
		|	ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде.Ссылка В(&МассивЖурналовСчетовФактур)";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СтрокиОбъектов = СвойстваОбъектов.НайтиСтроки(Новый Структура("Ссылка", Выборка.Ссылка));
			Для Каждого СтрокаОбъекта ИЗ СтрокиОбъектов Цикл
				ЗаполнитьЗначенияСвойств(СтрокаОбъекта, Выборка);
				СтрокаОбъекта.Наименование = НСтр("ru = 'Журнал учета счетов-фактур для передачи в электронном виде'");
				СтрокаОбъекта.ВариантОтчета = Формат(Выборка.НомерКорректировки, "ЧЦ=3; ЧГ=0");
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	МассивЗаявленийОВвозеТоваров = Новый Массив();
	Для Каждого СвойстваОбъекта ИЗ СвойстваОбъектов Цикл
		Если ТипЗнч(СвойстваОбъекта.Ссылка) = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров") Тогда
			МассивЗаявленийОВвозеТоваров.Добавить(СвойстваОбъекта.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивЗаявленийОВвозеТоваров.Количество() > 0 Тогда
		Запрос = Новый Запрос();
		Запрос.Параметры.Вставить("МассивЗаявленийОВвозеТоваров", МассивЗаявленийОВвозеТоваров);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаявлениеОВвозеТоваров.Ссылка,
		|	ЗаявлениеОВвозеТоваров.Дата КАК ДатаСоздания,
		|	ЗаявлениеОВвозеТоваров.Организация КАК Организация,
		|	НАЧАЛОПЕРИОДА(ЗаявлениеОВвозеТоваров.Дата, МЕСЯЦ) КАК ДатаНачала,
		|	КОНЕЦПЕРИОДА(ЗаявлениеОВвозеТоваров.Дата, МЕСЯЦ) КАК ДатаОкончания,
		|	ЗаявлениеОВвозеТоваров.ПометкаУдаления,
		|	ЗаявлениеОВвозеТоваров.СтруктураРеквизитовВыгрузки,
		|	""-"" КАК ВариантОтчета,
		|	ЗаявлениеОВвозеТоваров.Комментарий КАК Комментарий
		|ИЗ
		|	Документ.ЗаявлениеОВвозеТоваров КАК ЗаявлениеОВвозеТоваров
		|ГДЕ
		|	ЗаявлениеОВвозеТоваров.Ссылка В(&МассивЗаявленийОВвозеТоваров)";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СтрокиОбъектов = СвойстваОбъектов.НайтиСтроки(Новый Структура("Ссылка", Выборка.Ссылка));
			Для Каждого СтрокаОбъекта ИЗ СтрокиОбъектов Цикл
				
				ЗаполнитьЗначенияСвойств(СтрокаОбъекта, Выборка);
				СтрокаОбъекта.Наименование = НСтр("ru = 'Заявление о ввозе товаров (на основании поступления)'");
				
				СтруктураРеквизитовВыгрузки = Выборка.СтруктураРеквизитовВыгрузки.Получить();
		
				Если ТипЗнч(СтруктураРеквизитовВыгрузки) = Тип("Структура") И СтруктураРеквизитовВыгрузки.Свойство("КодИФНС") Тогда
					СтрокаОбъекта.КодКонтролирующегоОргана = СтруктураРеквизитовВыгрузки.КодИФНС;
				Иначе
					СтрокаОбъекта.КодКонтролирующегоОргана = "";
				КонецЕсли;
			
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Определяет свойства, касающиеся общих свойств объектов конфигураций-потребителей для отображения в форме Отчетность
// и возможности содания новый объектов из формы Отчетность
//
// Параметры:
//  ТаблицаОписания  - ТаблицаЗначений - Таблица, содержащая в себе описания объектов конфигураций-потребителей
//		Каждая колонка таблицы соотвествует свойству объекта.
//		Таблица содержит следующие колонки:
//			- Наименование - Строка - Наименование вида отчета, как оно должно отображаться в форме создания отчета
//			- ТипОбъекта - Тип - Тип описываемого объекта
//			- ВидКонтролирующегоОргана - Перечисления.ТипыКонтролирующихОрганов - контролирующий орган, в который сдается отчетности
//			- ГруппаВДереве - Строка - Определяет имя группы, в которой будет отображаться объект в случае иерархическкого отображения списка объектов
//			- ВидДокумента - Перечисления.СтраницыЖурналаОтчетность - Определяет страницу формы Отчетность, на которой будет отображаться объект
//				Может принимать одно из следующих значений:
//						Перечисления.СтраницыЖурналаОтчетность.Уведомления
//						Перечисления.СтраницыЖурналаОтчетность.Отчеты
//			- НеОтправляетсяВКонтролирующийОрган - Булево - Истина, если объект не отправляется в контролирующий орган по ТКС
//			- ЯвляетсяАктуальным - Булево - Определяет, можно ли создавать новые объекты данного вида
//			- ИмяОсновногоМакетаДляПечати - Строка - имя макета, который будет использоваться для печати по умолчанию
//			- ВидЭлектронногоПредставления - СправочникСсылка.ВидыОтправляемыхДокументов - вид электронного представления (справочник 
// ЭлектронныеПредставленияРегламентированныхОтчетов), соответствующий данному типу объекта. Неопределено, если такого вида отправляемого документа не существует
//
Процедура ОпределитьТаблицуОписанияОбъектовРегламентированнойОтчетности(ТаблицаОписания) Экспорт
	
	КонтролируемыеСделки.ОпределитьТаблицуОписанияОбъектовРегламентированнойОтчетности(ТаблицаОписания);
	ЗарплатаКадры.ОпределитьТаблицуОписанияОбъектовРегламентированнойОтчетности(ТаблицаОписания);
	
	ОписаниеОбъекта = ТаблицаОписания.Добавить();
	ОписаниеОбъекта.ТипОбъекта = Тип("ДокументСсылка.ЖурналУчетаСчетовФактурДляПередачиВЭлектронномВиде");
	ОписаниеОбъекта.ВидКонтролирующегоОргана = Перечисления.ТипыКонтролирующихОрганов.ФНС;
	ОписаниеОбъекта.ГруппаВДереве = "Налоговая отчетность";
	ОписаниеОбъекта.ВидДокумента = Перечисления.СтраницыЖурналаОтчетность.Отчеты;
	ОписаниеОбъекта.НеОтправляетсяВКонтролирующийОрган = Ложь;
	ОписаниеОбъекта.ЯвляетсяАктуальным = Истина;
	ОписаниеОбъекта.ИмяОсновногоМакетаДляПечати = "";
	
	ОписаниеОбъекта = ТаблицаОписания.Добавить();
	ОписаниеОбъекта.Наименование = НСтр("ru='Заявление о ввозе товаров (на основании поступления)'");
	ОписаниеОбъекта.ТипОбъекта = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров");
	ОписаниеОбъекта.ВидКонтролирующегоОргана = Перечисления.ТипыКонтролирующихОрганов.ФНС;
	ОписаниеОбъекта.ГруппаВДереве = "Налоговая отчетность";
	ОписаниеОбъекта.ВидДокумента = Перечисления.СтраницыЖурналаОтчетность.Отчеты;
	ОписаниеОбъекта.НеОтправляетсяВКонтролирующийОрган = Ложь;
	ОписаниеОбъекта.ЯвляетсяАктуальным = Истина;
	ОписаниеОбъекта.ИмяОсновногоМакетаДляПечати = "";
	
КонецПроцедуры

// Дополняет дерево регламентированных отчетов для использования в форме выбора видов отчетов,
// которая вызывается из формы "Отчетность" при нажатии на кнопку "Создать" на вкладке "Отчеты"
//
// Параметры:
//  ДеревоОтчетов - ДеревоЗначений - Дерево содержит описания видов отчетов, дополняемые из конфигураций-потребителей
//		Деревоз значений содержит следующие колонки:
//			- Наименование - Строка - Наименование вида отчета, как оно должно отображаться в форме
//			- ПолноеИмя - Строка - Полное имя (как в метаданных) документа или справочник для хранения данных отчета,
//				например: "Документ.РегламентированныйОтчет" или "Документ.УниверсальныйРегламентированныйОтчет" (для БГУ)
//			- Ссылка - СправочникСсылка - Ссылка на элемент справочника, содержащий описание вида отчета (если существует),
//				например, ссылка на элемент справочника "ВидыОтчетов" в БГУ
//			- ТипПолучателя - Перечисления.ТипыКонтролирующихОрганов - контролирующий орган, в который сдается отчетность
//			- Категория - Строка - Наименование категории отчета или название группы, в которую входит отчет (для группировки в форме)
//			- ЭтоГруппа - Булево - Если элемент дерева должен отображаться в форме как группа
//
Процедура ДобавитьВДеревоРегламентированныхОтчетовДругиеОтчеты(ДеревоОтчетов) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ФильтрацияОрганизацийВСтартовойФормеРегламентированногоОтчета

// Процедура возвращает текст запроса для получения организаций - юридических лиц.
//
// Параметры:
//  ТекстЗапроса - Строка - текст запроса для получения организаций, являющихся юридическими лицами.
//
// Пример:
//	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
//				   |	Организации.Ссылка,
//				   |	Организации.Наименование
//				   |ИЗ
//				   |	Справочник.Организации КАК Организации
//				   |ГДЕ
//				   |	Организации.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
//				   |	И НЕ Организации.ПометкаУдаления
//				   |
//				   |УПОРЯДОЧИТЬ ПО
//				   |	Наименование";
//
Процедура СформироватьТекстЗапросаДляПолученияДоступныхЮридическихЛиц(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"И НЕ Организации.ПометкаУдаления", "И НЕ Организации.ПометкаУдаления И НЕ Организации.Предопределенный");

КонецПроцедуры

// Процедура возвращает текст запроса для получения организаций - индивидуальных предпринимателей.
//
// Параметры:
//  ТекстЗапроса - Строка - текст запроса для получения организаций, являющихся индивидуальными предпринимателями.
//
// Пример:
//	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
//				   |	Организации.Ссылка,
//				   |	Организации.Наименование
//				   |ИЗ
//				   |	Справочник.Организации КАК Организации
//				   |ГДЕ
//				   |	Организации.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо)
//				   |	И НЕ Организации.ПометкаУдаления
//				   |
//				   |УПОРЯДОЧИТЬ ПО
//				   |	Наименование";
//
Процедура СформироватьТекстЗапросаДляПолученияДоступныхИндивидуальныхПредпринимателей(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"И НЕ Организации.ПометкаУдаления", "И НЕ Организации.ПометкаУдаления И НЕ Организации.Предопределенный");

КонецПроцедуры

// Процедура возвращает текст запроса для получения организаций -
// юридических лиц и индивидуальных предпринимателей.
//
// Параметры:
//  ТекстЗапроса - Строка - текст запроса для получения организаций -
//                          юридических лиц и индивидуальных предпринимателей.
//
// Пример:
//	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
//				   |	Организации.Ссылка,
//				   |	Организации.Наименование
//				   |ИЗ
//				   |	Справочник.Организации КАК Организации
//				   |ГДЕ
//				   |	НЕ Организации.ПометкаУдаления
//				   |
//				   |УПОРЯДОЧИТЬ ПО
//				   |	Наименование";
//
Процедура СформироватьТекстЗапросаДляПолученияДоступныхОрганизаций(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"НЕ Организации.ПометкаУдаления", "НЕ Организации.ПометкаУдаления И НЕ Организации.Предопределенный");

КонецПроцедуры

#КонецОбласти

#Область ПолучениеПредставленияУведомления
// Процедура используется для переопределения представления документа УведомлениеОСпецрежимахНалогообложения
// В случае, если такое переопределение произошло, необходимо установить флаг СтандартнаяОбработка в Ложь
// Параметры аналогичны событию ОбработкаПолученияПолейПредставления в модуле менеджера документа УведомлениеОСпецрежимахНалогообложения
Процедура ОбработкаПолученияПолейПредставления_УведомлениеОСпецрежимахНалогообложения(Поля, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Процедура используется для переопределения представления документа УведомлениеОСпецрежимахНалогообложения
// В случае, если такое переопределение произошло, необходимо установить флаг СтандартнаяОбработка в Ложь
// Параметры аналогичны событию ОбработкаПолученияПредставления в модуле менеджера документа УведомлениеОСпецрежимахНалогообложения
Процедура ОбработкаПолученияПредставления_УведомлениеОСпецрежимахНалогообложения(Данные, Представление, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры
#КонецОбласти

#Область ЗапросВФНСНаПроверкуСведенийРаботников

// Процедура формирует сведения, необходимые для представления в налоговую инспекцию
// запроса работодателя на проверку ИНН, ФИО, СНИЛС работающих лиц в электронной форме.
//
// Параметры:
//  СтруктураПараметров - Структура - свойства:
//     * Организация - СправочникСсылка.Организации - организация, по работникам
//                     которой будут формироваться сведения для файла;
//     * ДатаПодписи - Дата - дата, на которую будут формироваться сведения для файла.
//     * ИНН - Строка - возвращается ИНН организации;
//     * КПП - Строка - возвращается КПП организации (пустая строка в случае ИП);
//     * КодНалоговогоОргана - Строка - возвращается четырехзначный код налогового органа;
//     * РазмерПачки - Число - допустимое количество физических лиц в одном файле
//                     (необязательный параметр, по умолчанию допустимое количество равно 200;
//                     в случае превышения, будет записано необходимое количество файлов);
//     * СведенияОРаботниках - ТаблицаЗначений - возвращается таблица с колонками:
//        ** Фамилия - Строка - фамилия физического лица;
//        ** Имя - Строка - имя физического лица;
//        ** Отчество - Строка - отчество физического лица;
//        ** ИНН - Строка - ИНН физического лица;
//        ** СтраховойНомерПФР - Строка - СНИЛС физического лица;
//        ** ДатаРождения - Дата - дата рождения физического лица;
//        ** ВидДокумента - Строка - двузначный код вида документа, удостоверяющего личность физического лица;
//        ** СерияДокумента - Строка - серия документа, удостоверяющего личность физического лица;
//        ** НомерДокумента - Строка - номер документа, удостоверяющего личность физического лица.
//
Процедура ПолучитьДанныеДляЗапросаВФНСНаПроверкуСведенийРаботников(СтруктураПараметров) Экспорт
	ПерсонифицированныйУчет.ПолучитьДанныеДляЗапросаВФНСНаПроверкуСведенийРаботников(СтруктураПараметров);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыERP

Функция ПолучитьСУчетомКэша(Кэш, Параметр, ФизЛицо = Неопределено)
	Перем Значение;
	Перем Ставки;
	
	Если Кэш.Свойство(Параметр, Значение) Тогда
		Возврат Значение;
	КонецЕсли;
	
	Если Параметр = "СтавкаНалогаНаПрибыль" Тогда
		СтавкаФБ = 0;
		СтавкаРФ = 0;
		СтруктураПараметров = Новый Структура("Организация, Дата", Кэш.Организация.Ссылка, Кэш.ДатаЗначения);
		БухгалтерскийУчетПереопределяемый.ПолучитьСтавкуНалогаНаПрибыль(СтруктураПараметров, Неопределено, СтавкаФБ, СтавкаРФ, 0);
		Результат = Новый Структура("СтавкаФБ, СтавкаСубъектРФ, СтавкаМестный", СтавкаФБ * 100, СтавкаРФ * 100, 0);
	ИначеЕсли Параметр = "ЮрАдресОрганизации" ИЛИ Параметр = "ФактАдресОрганизации" Тогда
		
		ЭлементАдрес = ?(Параметр = "ЮрАдресОрганизации", Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации, Справочники.ВидыКонтактнойИнформации.ФактАдресОрганизации);

		Результат = Неопределено;
		
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(Кэш.Организация.Ссылка);
		
		КонтактнаяИнформацияОрганизации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(МассивОбъектов,, ЭлементАдрес, Кэш.ДатаЗначения);
		Если КонтактнаяИнформацияОрганизации.Количество() Тогда
			Результат = КонтактнаяИнформацияОрганизации[0];
		КонецЕсли;
		
	ИначеЕсли Параметр = "СведенияОбИндивидуальномПредпринимателе" Тогда
		Если ПолучитьЗначениеРеквизитаОрганизации(Кэш.Организация, "ИндивидуальныйПредприниматель", Значение) Тогда
			Результат = Новый Массив;
			Результат.Добавить(Новый Структура("ФизическоеЛицо", Значение));
		КонецЕсли;
	ИначеЕсли Параметр = "СведенияОРуководителе" Тогда
		СтруктураОтветственных = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Кэш.Организация.Ссылка, Кэш.ДатаЗначения);
		Результат = Новый ТаблицаЗначений;
		Результат.Колонки.Добавить("СтруктурнаяЕдиница");
		Результат.Колонки.Добавить("ОтветственноеЛицо");
		Результат.Колонки.Добавить("ФизическоеЛицо");
		Результат.Колонки.Добавить("Должность");
		НовСтр = Результат.Добавить();
		НовСтр.СтруктурнаяЕдиница = Кэш.Организация.Ссылка;
		НовСтр.ОтветственноеЛицо  = Перечисления.ОтветственныеЛицаОрганизаций.Руководитель;
		НовСтр.ФизическоеЛицо 	  = СтруктураОтветственных.Руководитель;
		НовСтр.Должность 		  = СтруктураОтветственных.РуководительДолжность;
	ИначеЕсли Параметр = "СведенияОБухгалтере" Тогда
		СтруктураОтветственных = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(Кэш.Организация.Ссылка, Кэш.ДатаЗначения);
		Результат = Новый ТаблицаЗначений;
		Результат.Колонки.Добавить("СтруктурнаяЕдиница");
		Результат.Колонки.Добавить("ОтветственноеЛицо");
		Результат.Колонки.Добавить("ФизическоеЛицо");
		Результат.Колонки.Добавить("Должность");
		НовСтр = Результат.Добавить();
		НовСтр.СтруктурнаяЕдиница = Кэш.Организация.Ссылка;
		НовСтр.ОтветственноеЛицо  = Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер;
		НовСтр.ФизическоеЛицо 	  = СтруктураОтветственных.ГлавныйБухгалтер;
		НовСтр.Должность 		  = СтруктураОтветственных.ГлавныйБухгалтерДолжность;
	ИначеЕсли Параметр = "СведенияОбИсполнителе" Тогда
		Результат = ОтветственныеЛицаСервер.ПолучитьДанныеОтветственногоЛица(
			Кэш.Организация.Ссылка,
			Кэш.ДатаЗначения,
			Перечисления.ОтветственныеЛицаОрганизаций.Исполнитель);
	ИначеЕсли Параметр = "СведенияОУполномоченномПредставителе" Тогда
		Результат = ОтветственныеЛицаСервер.ПолучитьДанныеОтветственногоЛица(
			Кэш.Организация.Ссылка,
			Кэш.ДатаЗначения,
			Перечисления.ОтветственныеЛицаОрганизаций.УполномоченныйПредставитель);
	ИначеЕсли Параметр = "ТелефонОрганизации" Тогда
		Если Кэш.ПБОЮЛ Тогда
			Если РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(Справочники.ВидыКонтактнойИнформации, "ТелефонРабочийФизическиеЛица") Тогда
				ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ТелефонРабочийФизическиеЛица;
			ИначеЕсли РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(Справочники.ВидыКонтактнойИнформации, "ТелефонДомашнийФизическиеЛица") Тогда
				ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ТелефонДомашнийФизическиеЛица;
			Иначе
				ВидКонтактнойИнформации = Неопределено;
			КонецЕсли;
			
			ПолучитьКонтактнуюИнформациюОрганизации(
				Результат,
				Кэш.Организация.ИндивидуальныйПредприниматель.Ссылка,
				Перечисления.ТипыКонтактнойИнформации.Телефон,
				ВидКонтактнойИнформации,
				,
				,
				Неопределено);
			
		Иначе
			
			ПолучитьКонтактнуюИнформациюОрганизации(
				Результат,
				Кэш.Организация.Ссылка,
				Перечисления.ТипыКонтактнойИнформации.Телефон,
				Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации,
				,
				,
				Неопределено);
			
		КонецЕсли;
	ИначеЕсли Параметр = "УчетнаяПолитикаНалоговыйУчет" Тогда
		Результат = РегистрыСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(Кэш.ДатаЗначения, Новый Структура("Организация", Кэш.Организация.Ссылка));
	ИначеЕсли Параметр = "СведенияОбИндивидуальномПредпринимателеПаспортныеДанные" 
		ИЛИ Параметр = "СведенияОРуководителеПаспортныеДанные" 
		ИЛИ Параметр = "СведенияОБухгалтереПаспортныеДанные" 
		ИЛИ Параметр = "СведенияОУполномоченномПредставителеПаспортныеДанные" Тогда
		
		Результат = РегламентированнаяОтчетность.ПолучитьДокФизЛица(ФизЛицо, Кэш.ДатаЗначения);
		
	ИначеЕсли Параметр = "СведенияОбИндивидуальномПредпринимателеАдрес" 
		ИЛИ Параметр = "СведенияОРуководителеАдрес" 
		ИЛИ Параметр = "СведенияОБухгалтереАдрес" 
		ИЛИ Параметр = "СведенияОУполномоченномПредставителеАдрес" Тогда
		
		ПолучитьКонтактнуюИнформациюОрганизации(
			Результат,
			ФизЛицо.Ссылка,
			Перечисления.ТипыКонтактнойИнформации.Адрес,
			Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица,
			,
			,
			Неопределено);
		
	ИначеЕсли Параметр = "СведенияОбИндивидуальномПредпринимателеАдресПрописки" Тогда
		
		ПолучитьКонтактнуюИнформациюОрганизации(
			Результат,
			ФизЛицо.Ссылка,
			Перечисления.ТипыКонтактнойИнформации.Адрес,
			Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица,
			,
			,
			Неопределено);
		
	ИначеЕсли Параметр = "СведенияОбИндивидуальномПредпринимателеГражданство" 
		ИЛИ Параметр = "СведенияОРуководителеГражданство" 
		ИЛИ Параметр = "СведенияОБухгалтереГражданство" 
		ИЛИ Параметр = "СведенияОУполномоченномПредставителеГражданство" Тогда
		
		СведенияОГражданстве = РегистрыСведений.ГражданствоФизическихЛиц.СрезПоследних(Кэш.ДатаЗначения, Новый Структура("ФизическоеЛицо", ФизЛицо));
		
		Если СведенияОГражданстве.Количество() > 0 Тогда
			Результат = СведенияОГражданстве[0].Страна;
		Иначе
			Результат = Неопределено;
		КонецЕсли;
		
	ИначеЕсли Параметр = "ВидТарифа" Тогда
		
		ИмяРегистра = "ПрименяемыеТарифыСтраховыхВзносов";
		ИмяИзмерения = Метаданные.РегистрыСведений[ИмяРегистра].Измерения[0].Имя;
			
		СтруктураВедущихОбъектов = Новый Структура();
		СтруктураВедущихОбъектов.Вставить(ИмяИзмерения, Кэш.Организация.Ссылка);
			
		МенеджерЗаписи = РедактированиеПериодическихСведений.МенеджерПоследнейЗаписи(ИмяРегистра, СтруктураВедущихОбъектов);
			
		Если Не ЗначениеЗаполнено(МенеджерЗаписи.ВидТарифа) Тогда
			Результат = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим");
		Иначе
			Результат = МенеджерЗаписи.ВидТарифа;
		КонецЕсли;
		
	КонецЕсли;
				
	Кэш.Вставить(Параметр, Результат);
	Возврат Результат;
	
КонецФункции

Функция АдресВФормате9Запятых(Запись)
	
	Если ПустаяСтрока(Запись.ЗначенияПолей) Тогда
		ЗначенияПолейКИ = УправлениеКонтактнойИнформациейСлужебныйВызовСервера.КонтактнаяИнформацияXMLПоПредставлению(Запись.Представление, Запись.Вид);
	Иначе
		ЗначенияПолейКИ = Запись.ЗначенияПолей;
	КонецЕсли;

	СтруктураАдреса = УправлениеКонтактнойИнформацией.ПредыдущаяСтруктураКонтактнойИнформацииXML(ЗначенияПолейКИ);
	
	АдресБезКодастраны = 
	                    ?(СтруктураАдреса.Свойство("Индекс"),СтруктураАдреса.Индекс,"") + "," +
						?(СтруктураАдреса.Свойство("Регион"),СтруктураАдреса.Регион,"") + "," +
						?(СтруктураАдреса.Свойство("Район"),СтруктураАдреса.Район,"") + "," +
			  			?(СтруктураАдреса.Свойство("Город"),СтруктураАдреса.Город,"") + "," +
	                    ?(СтруктураАдреса.Свойство("НаселенныйПункт"),СтруктураАдреса.НаселенныйПункт,"") + "," +
						?(СтруктураАдреса.Свойство("Улица"),СтруктураАдреса.Улица,"") + "," +
						?(СтруктураАдреса.Свойство("Дом"),СтруктураАдреса.Дом,"") + "," +
			  			?(СтруктураАдреса.Свойство("Корпус"),СтруктураАдреса.Корпус,"") + "," +
			  			?(СтруктураАдреса.Свойство("Квартира"),СтруктураАдреса.Квартира,"");

	Если АдресБезКодаСтраны = ",,,,,,,," Тогда
		Возврат ?(СтруктураАдреса.Свойство("Представление"),СтруктураАдреса.Представление,",,,,,,,,,")
	Иначе
		Возврат "643," + АдресБезКодаСтраны;
	КонецЕсли;
	
КонецФункции

Функция АдресВXML(КонтактнаяИнформация, ВидАдреса)
	
	Данные = Новый Структура("Тип, Вид", Перечисления.ТипыКонтактнойИнформации.Адрес, ВидАдреса);
	
	Результат = КонтактнаяИнформация.НайтиСтроки(Данные);
	
	Если Результат.Количество() > 0 Тогда
		Возврат УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML(Результат[0].ЗначенияПолей, Результат[0].Представление, ВидАдреса);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьЗначениеРеквизитаОрганизации(Организация, Знач ИмяРеквизита, Значение, ПустоеЗначение = "")
	
	МассивРеквизитов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяРеквизита, ".");
	
	Значение = Организация;
	
	Для Каждого ИмяРеквизита Из МассивРеквизитов Цикл
		
		Если ТипЗнч(Значение) <> Тип("СправочникОбъект.Организации")
		 И НЕ ЗначениеЗаполнено(Значение) Тогда
			Значение = ПустоеЗначение;
			Возврат Истина;
		КонецЕсли;
		
		Если Значение.Метаданные().Реквизиты.Найти(ИмяРеквизита) <> Неопределено Тогда
			Значение = Значение[ИмяРеквизита];
		Иначе
			Значение = ПустоеЗначение;
			Возврат Ложь;
		КонецЕсли;
		
	КонецЦикла;
		
	Если ТипЗнч(Значение) = Тип("Строка") Тогда
		Значение = СокрЛП(Значение);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ЭтоГоловнаяОрганизация(Организация, ВозможнаРекурсивнаяСсылка = Ложь)
	Перем Значение;
	
	ПолучитьЗначениеРеквизитаОрганизации(Организация, "ГоловнаяОрганизация", Значение, Справочники.Организации.ПустаяСсылка());
	
	Возврат НЕ ЗначениеЗаполнено(Значение) ИЛИ (ВозможнаРекурсивнаяСсылка И Значение.Ссылка = Организация.Ссылка);
	
КонецФункции

Функция ПолучитьКонтактнуюИнформациюОрганизации(Значение, ВладелецКИ, Тип, Вид,
	ПолеРезультата = Неопределено, ПреобразоватьВФорматАдреса = Ложь, ПустоеЗначение = "")
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(ВладелецКИ);
	
	КонтактнаяИнформация = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(МассивОбъектов,, Вид);
	
	Отбор = Новый Структура("Тип, Вид", Тип, Вид);
	Результат = КонтактнаяИнформация.НайтиСтроки(Отбор);
	
	Если Результат.Количество() > 0 Тогда
		
		Если ПолеРезультата = Неопределено Тогда
			Значение = Результат[0];
		Иначе
			Значение = Результат[0][ПолеРезультата];
		КонецЕсли;
		
		Если ПреобразоватьВФорматАдреса Тогда
			Значение = АдресВФормате9Запятых(Значение);
		КонецЕсли;
		
		Если ПустаяСтрока(Значение) Тогда
			Значение = ПустоеЗначение;
		КонецЕсли;
		
	Иначе
		
		Значение = ПустоеЗначение;
		
	КонецЕсли;

КонецФункции

Функция ТекстЗапросаДоговораСчетовФактурВыданныхДолгосрочные() Экспорт
	
	Возврат 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ДоговорыКонтрагентов
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.УстановленСрокОплаты
		|	И ДоговорыКонтрагентов.СрокОплаты > &КороткийСрок
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДоговорыМеждуОрганизациями.Ссылка
		|ИЗ
		|	Справочник.ДоговорыМеждуОрганизациями КАК ДоговорыМеждуОрганизациями
		|ГДЕ
		|	ДоговорыМеждуОрганизациями.УстановленСрокОплаты
		|				И ДоговорыМеждуОрганизациями.СрокОплаты > &КороткийСрок
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетФактураВыданныйДокументыОснования.Ссылка КАК СчетФактура,
		|	ДоговорыКонтрагентов.Ссылка КАК ДоговорКонтрагента
		|ПОМЕСТИТЬ ДоговораСчетовФактурВыданныхДолгосрочные
		|ИЗ
		|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ПО СчетФактураВыданныйДокументыОснования.ДокументОснование.Договор = ДоговорыКонтрагентов.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоговорыКонтрагентов.Ссылка,
		|	СчетФактураВыданныйДокументыОснования.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетФактура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	
КонецФункции

Функция ТекстЗапросаДоговораСчетовФактурВыданныхКраткосрочные() Экспорт
	
	Возврат 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ДоговорыКонтрагентов
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	НЕ(ДоговорыКонтрагентов.УстановленСрокОплаты
		|				И ДоговорыКонтрагентов.СрокОплаты > &КороткийСрок)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДоговорыМеждуОрганизациями.Ссылка
		|ИЗ
		|	Справочник.ДоговорыМеждуОрганизациями КАК ДоговорыМеждуОрганизациями
		|ГДЕ
		|	НЕ(ДоговорыМеждуОрганизациями.УстановленСрокОплаты
		|				И ДоговорыМеждуОрганизациями.СрокОплаты > &КороткийСрок)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетФактураВыданныйДокументыОснования.Ссылка КАК СчетФактура,
		|	ДоговорыКонтрагентов.Ссылка КАК ДоговорКонтрагента
		|ПОМЕСТИТЬ ДоговораСчетовФактурВыданныхКраткосрочные
		|ИЗ
		|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ПО СчетФактураВыданныйДокументыОснования.ДокументОснование.Договор = ДоговорыКонтрагентов.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоговорыКонтрагентов.Ссылка,
		|	СчетФактураВыданныйДокументыОснования.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетФактура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	
КонецФункции

Функция ТекстЗапросаДоговораСчетовФактурПолученныхДолгосрочные() Экспорт
	
	Возврат 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ДоговорыКонтрагентов
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.УстановленСрокОплаты
		|	И ДоговорыКонтрагентов.СрокОплаты > &КороткийСрок
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДоговорыМеждуОрганизациями.Ссылка
		|ИЗ
		|	Справочник.ДоговорыМеждуОрганизациями КАК ДоговорыМеждуОрганизациями
		|ГДЕ
		|	ДоговорыМеждуОрганизациями.УстановленСрокОплаты
		|	И ДоговорыМеждуОрганизациями.СрокОплаты > &КороткийСрок
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетФактураПолученныйДокументыОснования.Ссылка КАК СчетФактура,
		|	ДоговорыКонтрагентов.Ссылка КАК ДоговорКонтрагента
		|ПОМЕСТИТЬ ДоговораСчетовФактурПолученныхДолгосрочные
		|ИЗ
		|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ПО СчетФактураПолученныйДокументыОснования.ДокументОснование.Договор = ДоговорыКонтрагентов.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоговорыКонтрагентов.Ссылка,
		|	СчетФактураПолученныйДокументыОснования.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетФактура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	
КонецФункции

Функция ТекстЗапросаДоговораСчетовФактурПолученныхКраткосрочные() Экспорт
	
	Возврат 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ДоговорыКонтрагентов
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	НЕ (ДоговорыКонтрагентов.УстановленСрокОплаты
		|	И ДоговорыКонтрагентов.СрокОплаты > &КороткийСрок)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДоговорыМеждуОрганизациями.Ссылка
		|ИЗ
		|	Справочник.ДоговорыМеждуОрганизациями КАК ДоговорыМеждуОрганизациями
		|ГДЕ
		|	НЕ(ДоговорыМеждуОрганизациями.УстановленСрокОплаты
		|	И ДоговорыМеждуОрганизациями.СрокОплаты > &КороткийСрок)
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СчетФактураПолученныйДокументыОснования.Ссылка КАК СчетФактура,
		|	ДоговорыКонтрагентов.Ссылка КАК ДоговорКонтрагента
		|ПОМЕСТИТЬ ДоговораСчетовФактурПолученныхКраткосрочные
		|ИЗ
		|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ПО СчетФактураПолученныйДокументыОснования.ДокументОснование.Договор = ДоговорыКонтрагентов.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоговорыКонтрагентов.Ссылка,
		|	СчетФактураПолученныйДокументыОснования.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетФактура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет таблицу действующими льготами по кадастровым номерам замельных участков.
// Параметры:
//   ТаблицаЗемельныхУчастков - пустая таблица земельных участков с колонками:
//     * КадастровыйНомер - Строка - кадастровый номер земельного участка.
//     * ПроцентУменьшенияСуммыНалога - Число - значение льготы в виде уменьшения суммы налога.
//     * СниженнаяНалоговаяСтавка - Число - значение льготы в виде понижения налоговой ставки.
//   ОрганизацияВладелец - СправочникСсылка.Организации - ссылка на элемент справочника Организации.
//   ДатаСреза - Дата - дата, на момент которой определяются льготы.
//
// Пример:
//
//  Запрос = Новый Запрос;
//  Запрос.Текст = "ВЫБРАТЬ
//                 |	РегистрацияЗемельныхУчастковСрезПоследних.КадастровыйНомер КАК КадастровыйНомер,
//                 |	РегистрацияЗемельныхУчастковСрезПоследних.ПроцентУменьшенияСуммыНалога КАК ПроцентУменьшенияСуммыНалога,
//                 |	РегистрацияЗемельныхУчастковСрезПоследних.СниженнаяНалоговаяСтавка КАК СниженнаяНалоговаяСтавка
//                 |ИЗ
//                 |	РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(&ДатаСреза, Организация = &Организация) КАК РегистрацияЗемельныхУчастковСрезПоследних";
//  Запрос.УстановитьПараметр("Организация", ОрганизацияВладелец);
//  Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
//
//  ТаблицаЗемельныхУчастков = Запрос.Выполнить().Выгрузить();
//  ТаблицаЗемельныхУчастков.Индексы.Добавить("КадастровыйНомер");
//
// Пример:
//
//  Запрос = Новый Запрос;
//  Запрос.Текст = "ВЫБРАТЬ
//                 |	СведенияКадастровогоУчетаСрезПоследних.КадастровыйНомер КАК КадастровыйНомер,
//                 |	РегистрацияЗемельныхУчастковСрезПоследних.ПроцентУменьшенияСуммыНалога КАК ПроцентУменьшенияСуммыНалога,
//                 |	РегистрацияЗемельныхУчастковСрезПоследних.СниженнаяНалоговаяСтавка КАК СниженнаяНалоговаяСтавка
//                 |ИЗ
//                 |	РегистрСведений.СведенияКадастровогоУчета.СрезПоследних(&ДатаСреза, Учреждение = &Организация) КАК СведенияКадастровогоУчетаСрезПоследних
//                 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегистрацияЗемельныхУчастков.СрезПоследних(&ДатаСреза, Организация = &Организация) КАК РегистрацияЗемельныхУчастковСрезПоследних
//                 |		ПО СведенияКадастровогоУчетаСрезПоследних.ОсновноеСредство = РегистрацияЗемельныхУчастковСрезПоследних.ОсновноеСредство
//                 |			И СведенияКадастровогоУчетаСрезПоследних.Учреждение = РегистрацияЗемельныхУчастковСрезПоследних.Организация";
//  Запрос.УстановитьПараметр("Организация", ОрганизацияВладелец);
//  Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
//
//  ТаблицаЗемельныхУчастков = Запрос.Выполнить().Выгрузить();
//  ТаблицаЗемельныхУчастков.Индексы.Добавить("КадастровыйНомер");
//
Процедура ПолучитьЛьготыПоКадастровымНомерам(ТаблицаЗемельныхУчастков, ОрганизацияВладелец, ДатаСреза) Экспорт
	         	
КонецПроцедуры

#КонецОбласти

#Область ФильтрацияИзбранного

// Заполняется таблица избранного по правилам, определяемым в самом потребителе.
//
// Параметры:
// ПараметрыОтбора - структура, содержащая значения:
//   Организация - СправочникСсылка.Организации - ссылка на элемент справочника Организации.
//   РанееСозданныеОтчеты - пустая таблица избранного с колонками:
//     * Наименование - Строка - наименование отчета.
//     * ПолноеИмя    - Строка - имя объекта отчета.
//     * Ссылка       - ДокументСсылка.РегламентированныйОтчет или иной документ, который приравнен к отчетам.
//     * ЭтоГруппа    - Булево.
//
Процедура ЗаполнитьИзбранноеДоступнымиОтчетами(ПараметрыОтбора) Экспорт
	
КонецПроцедуры

// Процедура возвращает объект налогообложения УСН.
//
// Параметры:
//  НачалоПериода - Дата - начало периода отчета (СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета).
//  КонецПериода  - Дата - окончание периода отчета (СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета).
//  Организация   - СправочникСсылка - ссылка на элемент справочника "Организации".
//  ОбъектНалУСН  - Число или Неопределено - объект налогообложения УСН.
//                    1 - объект налогообложения - доходы;
//                    2 - объект налогообложения - доходы, уменьшенные на величину расходов;
//                    Неопределено - не применялась УСН за период или в конфигурации не реализован
//                                   функционал получения объекта налогообложения УСН за период.
//
Процедура ПолучитьОбъектНалогообложенияУСНЗаПериод(Организация, НачалоПериода, КонецПериода, ОбъектНалУСН) Экспорт
	
КонецПроцедуры

// Процедура переопределяет параметры отчета
//
// Параметры:
//  Отчет                      – Структура("Наименование,ПолноеИмя,Ссылка").
//  ОрганизацияОтчета          – Ссылка или Неопределено, организация отчета.
//  ДатаНачалаПериодаОтчета    – Дата или Неопределено, дата начала периода отчета.
//  ДатаОкончанияПериодаОтчета – Дата или Неопределено, дата окончания периода отчета.
//  ПараметрыОткрытия          - Структура, переопределяемые параметры открытия формы отчета.
//
Процедура ПереопределитьПараметрыОтчета(Отчет, ОрганизацияОтчета, ДатаНачалаПериодаОтчета, ДатаОкончанияПериодаОтчета, ПараметрыОткрытия) Экспорт
			
КонецПроцедуры

// Дополняет функционал обработчика "ПриСозданииНаСервере" общей формы "Регламентированная отчетность",
// здесь можно добавлять новые конопки в командные панели, расширять возможности интерфейса.
//
// Параметры:
//  Форма - УправляемаяФорма, общая форма "Регламентированная отчетность".
//
// Пример:
//  ГруппаКоманды = Форма.Элементы["ОтчетыГруппа3"];
//  
//  ИмяКоманды = "ОтчетыПоказатьДополнительнуюИнформацию";
//  Команда = Форма.Команды.Добавить(ИмяКоманды);
//  Команда.Подсказка = НСтр("ru = 'Показать дополнительную информацию'");
//  Команда.Отображение = ОтображениеКнопки.КартинкаИТекст;
//  Команда.Картинка = БиблиотекаКартинок.Лупа;
//  Команда.Действие = "Подключаемый_ВыполнитьНазначаемуюКоманду";
//  
//  Кнопка = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ГруппаКоманды);
//  Кнопка.Заголовок = НСтр("ru = 'Инфо'");
//  Команда.ИзменяетСохраняемыеДанные = Ложь;
//  Кнопка.ИмяКоманды = ИмяКоманды;
//
Процедура ФормаРегламентированнойОтчетности_ПриСозданииНаСервере(Форма) Экспорт
	
КонецПроцедуры

// Заполняет контейнер данными бухгалтерской отчетности и помещает его во временное хранилище.
Процедура ПолучитьПоказателиАвтозаполненияБухгалтерскойОтчетности(ПараметрыОтчета, Контейнер) Экспорт

	ЗаполнениеБухгалтерскойОтчетностиВызовСервера.ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4(ПараметрыОтчета, Контейнер);
	
КонецПроцедуры

#КонецОбласти