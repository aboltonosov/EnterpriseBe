#Область ПрограммныйИнтерфейс

// Процедура устанавливает в проводке суммы НУ,ПР,ВР в зависимости от признака ведения налогового учета на счете
//
// Параметры:
//		СуммаНУДт - Число - Дебетовая сумма налогового учета
//		СуммаНУКт - Число - Кредитовая сумма налогового учета
//		СуммаПРДт - Число - Дебетовая сумма постоянной разницы
//		СуммаПРКт - Число - Кредитовая сумма постоянной разницы
//		СуммаВРДт - Число - Дебетовая сумма временной разницы
//		СуммаВРКт - Число - Кредитовая сумма временной разницы
//		Проводка - Запись регистра бухгалтерии
//		ЕстьРазницы - Булево
//
Процедура ЗаполнитьНалоговыеСуммыПроводки(СуммаНУДт = 0, СуммаНУКт = 0,
			СуммаПРДт = 0, СуммаПРКт = 0, СуммаВРДт = 0, СуммаВРКт = 0, Проводка, ЕстьРазницы = Истина) Экспорт
	
	Если Проводка.СчетДт.НалоговыйУчет Тогда
		Проводка.СуммаНУДт = СуммаНУДт;
		
		Если ЕстьРазницы Тогда
			Проводка.СуммаПРДт = СуммаПРДт;
			Проводка.СуммаВРДт = СуммаВРДт;
		КонецЕсли;
		
	Иначе
		Проводка.СуммаНУДт = 0;	
		Проводка.СуммаПРДт = 0;
		Проводка.СуммаВРДт = 0;	
	КонецЕсли;
	
	Если Проводка.СчетКт.НалоговыйУчет Тогда
		Проводка.СуммаНУКт = СуммаНУКт;
		
		Если ЕстьРазницы Тогда
			Проводка.СуммаПРКт = СуммаПРКт;
			Проводка.СуммаВРКт = СуммаВРКт;
		КонецЕсли;
		
	Иначе
		Проводка.СуммаНУКт = 0;	
		Проводка.СуммаПРКт = 0;
		Проводка.СуммаВРКт = 0;	
	КонецЕсли;
	
КонецПроцедуры

// Определяет дату начала налогового периода по налогу на прибыль.
//
// Параметры:
//  Период	 - Дата - дата, характеризующая налоговый период
// 
// Возвращаемое значение:
//  Дата - дата начала налогового периода по налогу на прибыль
//
Функция НачалоНалоговогоПериода(Период) Экспорт
	
	Возврат НачалоГода(Период);
	
КонецФункции

#Область НалоговыеСтавки

// Определяет ставку налога на прибыль, подлежащего уплате в федеральный бюджет
//
// Параметры:
//  Период	 - Дата - характеризует налоговый период
// 
// Возвращаемое значение:
//  Число - ставка в виде доли от единицы (например, 0.02 для 2%)
//
Функция НалоговаяСтавкаФедеральныйБюджет(Период) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтавкиНалога.СтавкаФБ КАК Ставка
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.СрезПоследних(&Период, ) КАК СтавкиНалога";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗначениеВПроцентах = Выборка.Ставка;
	Иначе
		ЗначениеВПроцентах = РегистрыСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.ЗначениеПоУмолчаниюФедеральныйБюджет(Период);
	КонецЕсли;
	
	Возврат ЗначениеВПроцентах / 100;
	
КонецФункции

// Определяет ставку налога на прибыль, подлежащего уплате в региональный бюджет (бюджет субъекта Российской Федерации)
//
// Параметры:
//  Период	    - Дата - характеризует налоговый период
//  Организация - СправочникСсылка.Организации	- налогоплательщик
// 
// Возвращаемое значение:
//  Число - ставка в виде доли от единицы (например, 0.18 для 18%)
//
Функция НалоговаяСтавкаРегиональныйБюджет(Период, Организация) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ПрименяютсяРазныеСтавкиНалогаНаПрибыль") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период",      Период);
		Запрос.УстановитьПараметр("Организация", Организация);
		// поле ОбщаяСтавка позволяет преимущественно получить ставку, установленную для организации в целом, т.е. с пустой регистрацией в налоговом органе
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СтавкиНалога.СтавкаСубъектРФ КАК Ставка,
		|	СтавкиНалога.РегистрацияВНалоговомОргане = ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка) КАК ОбщаяСтавка
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.СрезПоследних(&Период, Организация = &Организация) КАК СтавкиНалога
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОбщаяСтавка УБЫВ,
		|	Ставка УБЫВ";
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период", Период);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СтавкиНалога.СтавкаСубъектРФ КАК Ставка
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.СрезПоследних(&Период, ) КАК СтавкиНалога";
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗначениеВПроцентах = Выборка.Ставка;
	Иначе
		ЗначениеВПроцентах = РегистрыСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.ЗначениеПоУмолчаниюРегиональныйБюджет(Период);
	КонецЕсли;
	
	Возврат ЗначениеВПроцентах / 100;
	
КонецФункции

// Устарела.
// Следует использовать
// - НалоговаяСтавкаФедеральныйБюджет()
// - НалоговаяСтавкаРегиональныйБюджет()
// - НалоговыйУчетОбособленныхПодразделений.ЗаполнитьНалоговыеСтавкиРегиональныйБюджет()
Функция ПолучитьСтавкуНалогаНаПрибыль(СтруктураШапкиДокумента, ИФНС = Неопределено, СтавкаФБ = 0, СтавкаРФ = 0, СтавкаМестный = 0) Экспорт   
	
	Возврат БухгалтерскийУчетПереопределяемый.ПолучитьСтавкуНалогаНаПрибыль(СтруктураШапкиДокумента, ИФНС, СтавкаФБ, СтавкаРФ, СтавкаМестный);
	
КонецФункции // ПолучитьСтавкуНалогаНаПрибыль()

#КонецОбласти

// Формируется таблица строк в которой задано соответствие видов активов
// (обязательства) и счетов налогового учета, на которых отражаются разницы
// по этим видам активов.
//
// Возвращаемое значение:
//   ТаблицаЗначений - таблица соответствия.
//
Функция ПолучитьТаблицуВидовАктивовИОбязательств() Экспорт
	
	Если  ПланыСчетов.Хозрасчетный.ТоварыНаСкладах.ВидыСубконто.Количество() = 1 ТОгда
		ЕстьСкладскойУчет = Ложь;
	ИНачеЕсли  ПланыСчетов.Хозрасчетный.ТоварыНаСкладах.ВидыСубконто.Количество() = 2 ТОгда
		ЕстьСкладскойУчет = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах.ВидыСубконто[1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	Иначе
		ЕстьСкладскойУчет = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах.ВидыСубконто[2].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады;
	КонецЕсли;
	
	ТаблицаВидовАктивовИОбязательств = Новый ТаблицаЗначений;
	ТаблицаВидовАктивовИОбязательств.Колонки.Добавить("ВидАктивовОбязательств", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыАктивовИОбязательств, Строка"));
	ТаблицаВидовАктивовИОбязательств.Колонки.Добавить("Счета",      Новый ОписаниеТипов("Массив"));
	ТаблицаВидовАктивовИОбязательств.Колонки.Добавить("Субконто",   Новый ОписаниеТипов("Массив"));
	
	// 4D:ERP для Беларуси, Екатерина, 01.07.2015 13:18:25 
	// Локализация плана счетов, №8969
	// {
	// Основные средства
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ОсновныеСредства;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ОсновныеСредства);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияОС_01);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияАрендованногоИмущества);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	
	// ДоходныеВложенияВ_МЦ
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ДоходныеВложенияВ_МЦ;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияОС_03);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ДоходныеВложенияВ_МЦ);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	
	// Нематериальные активы
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НематериальныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.НематериальныеАктивы);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияНематериальныхАктивов);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);
	
	// Оборудование 
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Оборудование;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке);
	Если ЕстьСкладскойУчет Тогда
		НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// Внеоборотные активы 08.01.1
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПриобретениеОбъектовОсновныхСредств);
	Если ЕстьСкладскойУчет Тогда
		НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// Внеоборотные активы 08.01.2
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства);
	
	// Внеоборотные активы 08.01.3
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПодготовкаКВводуВЭксплуатацию);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	
	// Внеоборотные активы   08.02
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПриобретениеИнвестиционнойНедвижимости);
	Если ЕстьСкладскойУчет Тогда
		НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.СозданиеИнвестиционнойНедвижимости);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства);
	
	// Внеоборотные активы 08.03
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПриобретениеПредметовФинансовойАренды);
	Если ЕстьСкладскойУчет Тогда
		НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// Внеоборотные активы 08.04
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПриобретениеНематериальныхАктивов);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);
	
	// Внеоборотные активы 08.05
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПриобретениеИныхДолгосрочныхАктивов);
	Если ЕстьСкладскойУчет Тогда
		НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ВнеоборотныеАктивы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.СозданиеИныхДолгосрочныхАктивов);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства);
	// }
	// 4D
	
	// Материалы
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Материалы;
	СчетаУчетаМатериалов = ПланыСчетов.Хозрасчетный.ВыбратьИерархически(ПланыСчетов.Хозрасчетный.Материалы);
	Пока СчетаУчетаМатериалов.Следующий() Цикл
		СчетУчетаМатериалов = СчетаУчетаМатериалов.Ссылка;
		КодСчета = СчетУчетаМатериалов.Код;
		Если Лев(КодСчета, 5) = "10.МЦ"
			Или Лев(КодСчета, 5) = "10.11" 
			Или Лев(КодСчета, 5) = "10.07" Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока.Счета.Добавить(СчетУчетаМатериалов);
	КонецЦикла;
	Если ЕстьСкладскойУчет Тогда
		НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// Материалы  в переработке
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Материалы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.МатериалыПереданныеВПереработку.Ссылка);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	
	// Материалы  в эксплуатации
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Материалы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.СпецодеждаВЭксплуатации.Ссылка);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.СпецоснасткаВЭксплуатации.Ссылка);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ИнвентарьВЭксплуатации.Ссылка);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПартииМатериаловВЭксплуатации);
	
	// Незавершенное производство
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НезавершенноеПроизводство;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.БракВПроизводстве);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ОбслуживающиеПроизводства);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ГруппыПродукции);
	
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.КосвенныеПроизводственныеРасходы;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
	
	// Готовая продукция
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ГотоваяПродукция;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ГотоваяПродукция);
	Если ЕстьСкладскойУчет Тогда
		НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// Полуфабрикаты
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Полуфабрикаты;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.Полуфабрикаты);
	Если ЕстьСкладскойУчет Тогда
		НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// Расходы будущих периодов
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.РасходыБудущихПериодов;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасходыБудущихПериодов);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	
	// Товары
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.Товары;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.Товары);
	Если ЕстьСкладскойУчет Тогда
		НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
	КонецЕсли;
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// Товары отгруженные
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ТоварыОтгруженные;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ТоварыОтгруженные);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	
	// 4D:ERP для Беларуси, Екатерина, 01.07.2015 18:19:37 
	// Локализация плана счетов, №8969
	// {
	// Финансовые вложения (счета 58.01)
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ФинансовыеВложения;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.КраткосрочныеФинансовыеВложенияВЦенныеБумаги);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ЦенныеБумаги);
	
	// Финансовые вложения (счета 58.02)
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ФинансовыеВложения;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПредоставленныеЗаймы);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	// Доходы будущих периодов
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ДоходыБудущихПериодов;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ДоходыБудущихПериодов);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДоходыБудущихПериодов);
	
	
	// Дебиторская задолженность
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ДебиторскаяЗадолженность;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	// Кредиторская задолженность
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.КредиторскаяЗадолженность;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданным);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ВекселяВыданные);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоИмущественномуИЛичномуСтрахованию);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоПретензиям);
    НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоПричитающимсяДивидендам);
    НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоДепонированнымСуммам);
    НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоИсполнительнымДокументамРаботников);
	// }
	// 4D
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	// Курсовые разницы при оплате в рублях
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.КурсовыеРазницыПоРасчетамВУЕ;
	// 4D:ERP для Беларуси, Екатерина, 23.07.2015 10:41:03 
	// Локализация плана счетов, №8969
	// {
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиУЕ);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданнымУЕ);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиУЕ);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымУЕ);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоПретензиямУЕ);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиУЕ);
	// }
	// 4D
	
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	// Курсовые разницы при оплате в валюте
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.КурсовыеРазницыПоРасчетамВВалюте;
	// 4D:ERP для Беларуси, Екатерина, 23.07.2015 10:40:00 
	// Локализация плана счетов, №8969
	// {
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданнымВал);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиВал);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоИмущественномуИЛичномуСтрахованиюВал);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоПретензиямВал);
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторамиВал);
	// }
	// 4D

	
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	// Убытки текущего периода
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.УбытокТекущегоПериода;
	
	// Недостачи и потери от порчи ценностей
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НедостачиПотери;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.НедостачиИПотериОтПорчиЦенностей);
	
	// Оценочные обязательства
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.ОценочныеОбязательства;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РезервыПредстоящихРасходов);
	
	// Резервы по сомнительным долгам
	НоваяСтрока = ТаблицаВидовАктивовИОбязательств.Добавить();
	НоваяСтрока.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.РезервыСомнительныхДолгов;
	НоваяСтрока.Счета.Добавить(ПланыСчетов.Хозрасчетный.РезервыПоСомнительнымДолгам);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	НоваяСтрока.Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	// Разворачиваем счета верхнего уровня до субсчетов
	Для каждого НоваяСтрока Из ТаблицаВидовАктивовИОбязательств Цикл
		
		Если НоваяСтрока.Счета.Количество() > 0 Тогда
			НоваяСтрока.Счета = БухгалтерскийУчет.СформироватьМассивСубсчетов(НоваяСтрока.Счета);
		КонецЕсли;
	
	КонецЦикла; 
	
	Возврат ТаблицаВидовАктивовИОбязательств;
	
КонецФункции // ПолучитьТаблицуВидовАктивовИОбязательств()

// Функция добавляет в текст запроса временную таблицу, содержащую счета ЕНВД.
//
//	Параметры:
//		Запрос - запрос, в который необходимо добавить временную таблицу со счетами
//
//	Возвращаемое значение:
//		ТекстЗапроса - Строка неограниченной длины - первоначальный текст запроса, перед которым добавлено получение временной таблицы со счетами ЕНВД.
//
Функция ДобавитьТекстЗапросаСчетаЕНВД(Запрос) Экспорт
	
	Запрос.УстановитьПараметр("СчетаЕН", ПолучитьМассивСчетовЕНВД());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаЕН
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (&СчетаЕН)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет"
	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета()
	+ Запрос.Текст;
	
	Возврат ТекстЗапроса;
	
КонецФункции // ДобавитьТекстЗапросаСчетаЕНВД()

// Отложенные налоговые активы и отложенные налоговые обязательства.
// Определяются суммы временных разницы, которые отражены на плане счетов
// по конкретному виду ОНА (ОНО) и распределяются на вычитаемые и налогооблагаемые разницы,
// числящиеся на остатках текущего периода.
//
// Параметры:
//		СтрокаВидАктиваОбязательства - строка таблицы в которой задано соответствие
//			вида актива (обязательства) и счетов налогового учета, на которых
//			отражаются разницы по этому виду активов.
//
Функция ОстаткиВременныхРазницПоВидуАктивовОбязательств(СтрокаВидАктиваОбязательства,
														Организация, НачалоГода, КонецГода) Экспорт
	
	КоличествоОбъектовАналитики = СтрокаВидАктиваОбязательства.Субконто.Количество();
	
	Если Не КоличествоОбъектовАналитики = 0 Тогда
		МассивСубконто = СтрокаВидАктиваОбязательства.Субконто;
		ФлагОС_НМА = ?(МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства, 1, 0);
		ФлагОС_НМА = ?(МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы, 1, ФлагОС_НМА);
		ФлагОбъектовСтроительства = ?(МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбъектыСтроительства, 1, 0);
		ФлагНЗП    = ?(СтрокаВидАктиваОбязательства.ВидАктивовОбязательств = Перечисления.ВидыАктивовИОбязательств.НезавершенноеПроизводство, 1, 0);
	Иначе
		ФлагОС_НМА = Ложь;
		ФлагОбъектовСтроительства = Ложь;
		ФлагНЗП = Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;  
	Запрос.УстановитьПараметр("НачалоГода",             НачалоГода);
	Запрос.УстановитьПараметр("КонецГода",              КонецГода);
	Запрос.УстановитьПараметр("Организации",            Организация);
	Запрос.УстановитьПараметр("МассивСчетов",           СтрокаВидАктиваОбязательства.Счета);
	Запрос.УстановитьПараметр("ВидСубконто",            МассивСубконто);
	Запрос.УстановитьПараметр("Счет09",                 ПланыСчетов.Хозрасчетный.ОтложенныеНалоговыеАктивы);
	Запрос.УстановитьПараметр("Счет77",                 ПланыСчетов.Хозрасчетный.ОтложенныеНалоговыеОбязательства);
	Запрос.УстановитьПараметр("ВидАктивовОбязательств", СтрокаВидАктиваОбязательства.ВидАктивовОбязательств);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_Счета
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&МассивСчетов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_Счета84
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НераспределеннаяПрибыль), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрибылиИУбыткиОтПересчетаОНА_ОНО))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиВР.Счет КАК Счет,
	|	ОстаткиВР.Субконто1 КАК Субконто1,
	|	ОстаткиВР.Субконто2 КАК Субконто2,
	|	ОстаткиВР.Субконто3 КАК Субконто3,
	|	ОстаткиВР.СуммаВРОстатокДт КАК СуммаВРОстатокДт,
	|	ОстаткиВР.СуммаВРОстатокКт КАК СуммаВРОстатокКт,
	|	ОстаткиВР.СуммаВРОстаток КАК СуммаВРОстаток
	|ПОМЕСТИТЬ ВТ_ОстаткиВР
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецГода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					ВТ_Счета.Счет
	|				ИЗ
	|					ВТ_Счета),
	|			&ВидСубконто,
	|			Организация В (&Организации)) КАК ОстаткиВР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаОстатокДт
	|ПОМЕСТИТЬ ВТ_ХозрасчетныйОстатки09
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецГода,
	|			Счет = &Счет09,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыАктивовИОбязательств),
	|			Организация В (&Организации)
	|				И Субконто1 = &ВидАктивовОбязательств) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаОстатокКт
	|ПОМЕСТИТЬ ВТ_ХозрасчетныйОстатки77
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецГода,
	|			Счет = &Счет77,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыАктивовИОбязательств),
	|			Организация В (&Организации)
	|				И Субконто1 = &ВидАктивовОбязательств) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаОборот
	|ПОМЕСТИТЬ ВТ_ХозрасчетныйОбороты77
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоГода,
	|			&КонецГода,
	|			Период,
	|			Счет = &Счет77,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыАктивовИОбязательств),
	|			Организация В (&Организации)
	|				И Субконто1 = &ВидАктивовОбязательств,
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_Счета84.Счет
	|				ИЗ
	|					ВТ_Счета84),
	|			) КАК ХозрасчетныйОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаОборот
	|ПОМЕСТИТЬ ВТ_ХозрасчетныйОбороты09
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоГода,
	|			&КонецГода,
	|			Период,
	|			Счет = &Счет09,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыАктивовИОбязательств),
	|			Организация В (&Организации)
	|				И Субконто1 = &ВидАктивовОбязательств,
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_Счета84.Счет
	|				ИЗ
	|					ВТ_Счета84),
	|			) КАК ХозрасчетныйОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиВР.Счет КАК Счет,
	|	ОстаткиВР.Субконто1 КАК Субконто1,
	|	ОстаткиВР.Субконто2 КАК Субконто2,
	|	ОстаткиВР.Субконто3 КАК Субконто3,
	|	&Счет09 КАК СчетОНАОНО,
	|	ХозрасчетныйОстатки.СуммаОстатокДт - ХозрасчетныйОбороты.СуммаОборот КАК СтараяСумма,
	|	СУММА(ВЫБОР
	|			КОГДА ОстаткиВР.СуммаВРОстатокДт < 0
	|					ИЛИ ОстаткиВР.СуммаВРОстатокКт > 0
	|				ТОГДА -ОстаткиВР.СуммаВРОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Сумма
	|ИЗ
	|	ВТ_ОстаткиВР КАК ОстаткиВР,
	|	ВТ_ХозрасчетныйОстатки09 КАК ХозрасчетныйОстатки,
	|	ВТ_ХозрасчетныйОбороты09 КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиВР.Счет,
	|	ОстаткиВР.Субконто1,
	|	ОстаткиВР.Субконто2,
	|	ОстаткиВР.Субконто3,
	|	ХозрасчетныйОстатки.СуммаОстатокДт - ХозрасчетныйОбороты.СуммаОборот
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиВР.Счет,
	|	ОстаткиВР.Субконто1,
	|	ОстаткиВР.Субконто2,
	|	ОстаткиВР.Субконто3,
	|	&Счет77,
	|	ХозрасчетныйОстатки.СуммаОстатокКт + ХозрасчетныйОбороты.СуммаОборот,
	|	СУММА(ВЫБОР
	|			КОГДА ОстаткиВР.СуммаВРОстатокДт > 0
	|					ИЛИ ОстаткиВР.СуммаВРОстатокКт < 0
	|				ТОГДА ОстаткиВР.СуммаВРОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ)
	|ИЗ
	|	ВТ_ОстаткиВР КАК ОстаткиВР,
	|	ВТ_ХозрасчетныйОстатки77 КАК ХозрасчетныйОстатки,
	|	ВТ_ХозрасчетныйОбороты77 КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиВР.Счет,
	|	ОстаткиВР.Субконто1,
	|	ОстаткиВР.Субконто2,
	|	ОстаткиВР.Субконто3,
	|	ХозрасчетныйОстатки.СуммаОстатокКт + ХозрасчетныйОбороты.СуммаОборот";
	
	Если ФлагОС_НМА = 1 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОстаткиВР.Счет КАК Счет,", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ОстаткиВР.Счет,", "");
	КонецЕсли;
	
	Если КоличествоОбъектовАналитики < 3 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	ОстаткиВР.Субконто3 КАК Субконто3", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	ОстаткиВР.Субконто3", "");
	КонецЕсли;
	
	Если КоличествоОбъектовАналитики < 2 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	ОстаткиВР.Субконто2 КАК Субконто2", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	ОстаткиВР.Субконто2", "");
	КонецЕсли;
	
	Если КоличествоОбъектовАналитики = 0 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	ОстаткиВР.Субконто1 КАК Субконто1", "");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ",
			|	ОстаткиВР.Субконто1", "");
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	ТаблицаРезультатов = Результат.Выгрузить();
	ТаблицаРезультатов.Свернуть("СчетОНАОНО, СтараяСумма,"
		+ ?(ФлагОС_НМА = 1, "", "Счет,")
		+ ?(КоличествоОбъектовАналитики = 0, "", "Субконто1")
		+ ?(ФлагОбъектовСтроительства = 1, "", ?(КоличествоОбъектовАналитики = 2, ", Субконто2", ""))
		+ ?(ФлагНЗП = 1, "", ?(КоличествоОбъектовАналитики = 3, ", Субконто3", "")), "Сумма");
	
	Возврат  ТаблицаРезультатов;
	
КонецФункции // ОстаткиВременныхРазницПоВидуАктивовОбязательств()

// Определяет коэффициент распределения расходов по видам деятельности с разным порядком налогообложения.
//
// Параметры
//  Организации - СправочникСсылка.Организации или массив со значениями этого типа
//  НачалоПериода, 
//  КонецПериода - Дата - характеризует период, за который рассчитывается коэффициент. Период всегда кратен месяцу.
//                        Предполагается, что период лежит в пределах налогового периода,
//                        параметры учетной политики в течение которого неизменны.
//
// Возвращаемое значение:
//   Число - коэффициент распределения расходов по видам деятельности.
//
Функция КоэффициентРаспределенияРасходовПоВидамДеятельности(Организации, Знач НачалоПериода, Знач КонецПериода = Неопределено) Экспорт
	
	// Период
	Если КонецПериода = Неопределено Тогда
		КонецПериода = НачалоПериода;
	КонецЕсли;
	НачалоПериода = НачалоМесяца(НачалоПериода);
	КонецПериода  = КонецМесяца(КонецПериода);
	
	// База распределения
	ВключатьПрочиеДоходы = Ложь;
	
	Если ТипЗнч(Организации) = Тип("СправочникСсылка.Организации") Тогда
		Организация = Организации;
	Иначе
		Если Организации.Количество() > 0 Тогда
			Организация = Организации[0];
		Иначе
			// Неверные параметры
			Возврат 0;
		КонецЕсли;
	КонецЕсли;
	
	Если УчетнаяПолитика.Существует(Организация, НачалоПериода, Истина) Тогда
		
		ВключатьПрочиеДоходы = 
			УчетнаяПолитика.БазаРаспределенияКосвенныхРасходовПоВидамДеятельности(Организация, НачалоПериода) = 
				Перечисления.БазыРаспределенияКосвенныхРасходовПоВидамДеятельности.ДоходыОтРеализацииИВнереализационные;
				
	Иначе
		
		// Определить нельзя
		Возврат 0;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АналитикаУчетаПоПартнерам.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ КлючиАналитикаУчетаПоПартнерам
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|ГДЕ
	|	АналитикаУчетаПоПартнерам.Организация В(&Организации)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаПоПартнерам.КлючАналитики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ВложенныйЗапрос.Всего), 0) КАК Всего,
	|	ЕСТЬNULL(СУММА(ВложенныйЗапрос.ЕНВД), 0)  КАК ЕНВД
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл КАК Всего,
	|		ВЫБОР
	|			КОГДА ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|				ТОГДА ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЕНВД
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиАналитикаУчетаПоПартнерам КАК КлючиАналитикаУчетаПоПартнерам
	|			ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = КлючиАналитикаУчетаПоПартнерам.КлючАналитики
	|	ГДЕ
	|		ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДенежныеСредстваДоходыРасходы.СуммаРегл,
	|		ВЫБОР
	|			КОГДА СтатьиДоходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|				ТОГДА ДвиженияДенежныеСредстваДоходыРасходы.СуммаРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы КАК ДвиженияДенежныеСредстваДоходыРасходы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиДоходов КАК СтатьиДоходов
	|			ПО ДвиженияДенежныеСредстваДоходыРасходы.СтатьяДоходовРасходов = СтатьиДоходов.Ссылка
	|	ГДЕ
	|		&ВключатьПрочиеДоходы
	|		И ДвиженияДенежныеСредстваДоходыРасходы.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ДвиженияДенежныеСредстваДоходыРасходы.Организация В(&Организации)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияКонтрагентДоходыРасходы.СуммаРеглБезНДС,
	|		ВЫБОР
	|			КОГДА СтатьиДоходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|				ТОГДА ДвиженияКонтрагентДоходыРасходы.СуммаРеглБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ДвиженияКонтрагентДоходыРасходы КАК ДвиженияКонтрагентДоходыРасходы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиДоходов КАК СтатьиДоходов
	|			ПО ДвиженияКонтрагентДоходыРасходы.СтатьяДоходовРасходов = СтатьиДоходов.Ссылка
	|	ГДЕ
	|		&ВключатьПрочиеДоходы
	|		И ДвиженияКонтрагентДоходыРасходы.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ДвиженияКонтрагентДоходыРасходы.Организация В(&Организации)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияНоменклатураДоходыРасходы.СтоимостьРегл,
	|		ВЫБОР
	|			КОГДА СтатьиДоходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|				ТОГДА ДвиженияНоменклатураДоходыРасходы.СтоимостьРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ДвиженияНоменклатураДоходыРасходы КАК ДвиженияНоменклатураДоходыРасходы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиДоходов КАК СтатьиДоходов
	|			ПО ДвиженияНоменклатураДоходыРасходы.СтатьяДоходовРасходов = СтатьиДоходов.Ссылка
	|	ГДЕ
	|		&ВключатьПрочиеДоходы
	|		И ДвиженияНоменклатураДоходыРасходы.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ДвиженияНоменклатураДоходыРасходы.Организация В(&Организации)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДоходыРасходыПрочиеАктивыПассивы.СуммаРегл,
	|		ВЫБОР
	|			КОГДА СтатьиДоходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|				ТОГДА ДвиженияДоходыРасходыПрочиеАктивыПассивы.СуммаРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиДоходов КАК СтатьиДоходов
	|			ПО ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья = СтатьиДоходов.Ссылка
	|	ГДЕ
	|		&ВключатьПрочиеДоходы
	|		И ДвиженияДоходыРасходыПрочиеАктивыПассивы.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ДвиженияДоходыРасходыПрочиеАктивыПассивы.Организация В(&Организации)) КАК ВложенныйЗапрос
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",          НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",           КонецПериода);
	Запрос.УстановитьПараметр("Организации",            Организации);
	Запрос.УстановитьПараметр("ВключатьПрочиеДоходы",   ВключатьПрочиеДоходы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий(); // В выборке всегда ровно один элемент
	
	Если Выборка.Всего = 0 ИЛИ Выборка.ЕНВД = 0 Тогда
		// Если нет определенности, то считаем, что все расходы относятся к деятельности на основной системе обложения
		Возврат 0;
	Иначе
		Возврат Выборка.ЕНВД / Выборка.Всего;
	КонецЕсли;
	
КонецФункции // КоэффициентРаспределенияРасходовПоВидамДеятельности()


// Регламентная операция "Расчет долей".
// Определяет на основании базы данных доли списания расходов, см. процедуру Документы.РегламентнаяОперация.МодульОбъекта.РасчетДолейСписанияКосвенныхРасходов
//
//	Параметры:
//		Период - Дата - на основании даты определяется анализируемый период (берется начало и конец месяца от даты)
//		Организация - СправочникСсылка.Организации
//		ПротоколНормируемыеРасходы - Таблица значений - пустая, содержит колонки регистра сведений "РасчетНормированияРасходов".
//		ТранспортныеРасходы - Булево - учитывать или нет транспортные расходы при определении долей.
//
//	Возвращаемое значение:
//		Структура - инициализируется в начале функции
//
Функция ДолиСписанияРасходов(Период, Организация, ПротоколНормируемыеРасходы, ТранспортныеРасходы) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Период",                                                   Период);
	Результат.Вставить("ДоляЕНВД",                                                 0);
	Результат.Вставить("ДоляТранспортныхРасходов",                                 0);
	Результат.Вставить("ДоляРасходовНаРекламу",                                    0);
	Результат.Вставить("ДоляРасходовНаДобровольноеМедицинскоеСтрахование",         0);
	Результат.Вставить("ДоляРасходовНаДобровольноеСтрахованиеЖизни",               0);
	Результат.Вставить("ДоляРасходовНаДобровольноеСтрахованиеОтНесчастныхСлучаев", 0);
	Результат.Вставить("ДоляПредставительскихРасходов",                            0);
	Результат.Вставить("ДоляРасходовНаВозмещениеПроцентовРаботникам",              0);
	Результат.Вставить("ДоляРезервовПоСомнительнымДолгамНУ",                       0);
	
	// Распределение расходов по видам деятельности
	Организации = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(Организация);
	ДоляСпециальныхРежимов = КоэффициентРаспределенияРасходовПоВидамДеятельности(Организации, Период); // За месяц
	Результат.ДоляЕНВД     = ДоляСпециальныхРежимов;
	
	Если ТранспортныеРасходы Тогда
		
		// Транспортные расходы могут быть отнесены к остаткам нереализованных товаров - ст. 320 НК РФ
		Результат.ДоляТранспортныхРасходов = ДоляТранспортныхРасходовТекущегоМесяца(Период, Организация);
		
	Иначе
		
		// РАСХОДЫ, ПО КОТОРЫМ ЕСТЬ ОГРАНИЧЕНИЯ
		Ограничения = ДолиСписанияНормируемыхРасходов(Период, Организация, ДоляСпециальныхРежимов, ПротоколНормируемыеРасходы);
		Для Каждого ОписаниеПоля Из РегистрыСведений.ДолиСписанияКосвенныхРасходов.ИменаВидовНормируемыхРасходов() Цикл
			Результат[ОписаниеПоля.Ключ] = Ограничения[Перечисления.ВидыРасходовНУ[ОписаниеПоля.Значение]];
		КонецЦикла;
		
		// Расходы по сомнительным долгам еще не начислены.
		// Лимит таких расходов рассчитывается особо.
		// п. 4, ст. 266 НК РФ
		// Сумма создаваемого резерва по сомнительным долгам 
		// не может превышать 10 процентов от выручки
		СуммаРезерва = УчетДоходовРасходов.СуммаРезерваПоСомнительнымДолгамНУ(КонецМесяца(Период), Организация);
		Если СуммаРезерва <> 0 Тогда
			База  = ВыручкаОтРеализации(Период, Организация);
			// С 2017 года при расчете резервов по сомнительным долгам за отчетные периоды ограничение в НУ равно большей из сумм:
			// - 10% выручки текущего отчетного периода
			// - 10% выручки предыдущего года 
			// При расчете за год ограничение по-прежнему 10% выручки отчетного года(405-ФЗ от 30.11.16)
			Если Период >= '2017-01-01' И Период < КонецГода(Период) Тогда
				БазаПрошлогоГода = ВыручкаОтРеализации(НачалоГода(Период) - 1, Организация);
				База = Макс(БазаПрошлогоГода, База);
			КонецЕсли;
			Норма = 0.10;
			Лимит = ЛимитРасходов(База, Норма);
			Результат.ДоляРезервовПоСомнительнымДолгамНУ = Мин(СуммаРезерва, Лимит) / СуммаРезерва;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции

#Область РасчетныеСтавкиНалогаНаПрибыль

Функция ПодготовитьТаблицуРасчетСтавокНалогаНаПрибыль(Отказ) Экспорт   
	ЗаписьСтавокНалогаНаПрибыль = ПолучитьЗаписьСтавокНалогаНаПрибыль();
	Возврат  ЗаписьСтавокНалогаНаПрибыль;
	
КонецФункции

Функция ПолучитьЗаписьСтавокНалогаНаПрибыль()
	
	ОписаниеТипаЧисла15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(15, 2);
	
	ЗаписьСтавкиНалогаНаПрибыль = Новый ТаблицаЗначений;
	ЗаписьСтавкиНалогаНаПрибыль.Колонки.Добавить("Ставка",      ОбщегоНазначения.ОписаниеТипаЧисло(8, 6));
	ЗаписьСтавкиНалогаНаПрибыль.Колонки.Добавить("СуммаНалога", ОписаниеТипаЧисла15_2);
	ЗаписьСтавкиНалогаНаПрибыль.Колонки.Добавить("СуммаБазы",   ОписаниеТипаЧисла15_2);
	
	Возврат ЗаписьСтавкиНалогаНаПрибыль;
	
КонецФункции

#КонецОбласти

// Возвращает перечень (массив) всех структурных частей переданной головной организации, имеющих отдельный баланс.
// В перечень входит головная организация и все ее обособленные подразделения на выделенном балансе.
// В перечень входят только те организации, данные по которым доступны текущему пользователю.
//
// Параметры:
//  Организация - организация, которая вялется головной для остальных
//
// Возвращаемое значение:
//  Массив - организация, которая вялется головной для остальных
//           и все структурно подчиненные ей организации
//
Функция ВсяОрганизация(Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ГоловнаяОрганизация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация");
	
КонецФункции

// Функция рассчитывает прибыли убытки по указанном виду доходов и расходов
//
// Параметры:
//   Счет учета доходов   91.01
//   Счет учета расхоов   91.02
//   Вид доходов и расходов из перечисления ВидыПрочихДоходовИРасходов
//   Флаг выдаваемого результата. "Убыток" - выдать сумму убытка, иначе - выдать сумму прибыли.
//
//
Функция ПрибылиИУбытки(Запрос, Счет911, Счет912, ВидДоходовРасходов, Флаг) Экспорт
	 
	Запрос.УстановитьПараметр("Счет911", 			Счет911);
	Запрос.УстановитьПараметр("Счет912", 			Счет912);
	Запрос.УстановитьПараметр("КорСчет", 			ПланыСчетов.Хозрасчетный.ПрочиеРасходыБудущихПериодов);
	Запрос.УстановитьПараметр("ВидДоходовРасходов", ВидДоходовРасходов);
	
	Массив = Новый Массив;
	Массив.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Массив.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РеализуемыеАктивы);
	Запрос.УстановитьПараметр("ВидыСубконто", Массив);
	 
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборот) КАК Результат,
	|	ХозрасчетныйОбороты.Субконто2 КАК Субконто2
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , Счет = &Счет911, &ВидыСубконто, Организация В (&СписокОрганизаций), КорСчет <> &КорСчет, ) КАК ХозрасчетныйОбороты
	|
	|//УсловиеНаВидДоходовРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборот),
	|	ХозрасчетныйОбороты.Субконто2 КАК Субконто2
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , Счет = &Счет912, &ВидыСубконто, Организация В (&СписокОрганизаций), КорСчет <> &КорСчет, ) КАК ХозрасчетныйОбороты
	|
	|//УсловиеНаВидДоходовРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто2";
	
	Если ЗначениеЗаполнено(ВидДоходовРасходов) Тогда
		
		ТекстУсловия = "
		|ГДЕ
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов В (&ВидДоходовРасходов)
		|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
		|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов В (&ВидДоходовРасходов)
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ"; 
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УсловиеНаВидДоходовРасходов", ТекстУсловия);
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	БухИтогиРезультат = Запрос.Выполнить().Выгрузить();
	БухИтогиРезультат.Свернуть("Субконто2", "Результат");
	
	Результат = 0;
	
	Для Каждого Строка Из БухИтогиРезультат Цикл
		
		Если Флаг = "Убыток" Тогда
			РезультатТек = ?(Строка.Результат > 0, Строка.Результат, 0);
		Иначе
			РезультатТек = ?(Строка.Результат < 0, - Строка.Результат, 0);
		КонецЕсли;
		
		Результат = Результат + РезультатТек;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаСоздатьВременнуюТаблицуДолиСпециальныеРежимы() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ДолиСписанияКосвенныхРасходов.ПериодРасчета, МЕСЯЦ) КАК Месяц,
	|	МИНИМУМ(ДолиСписанияКосвенныхРасходов.ДоляЕНВД) КАК Доля
	|ПОМЕСТИТЬ ДолиСпециальныеРежимы
	|ИЗ
	|	РегистрСведений.ДолиСписанияКосвенныхРасходов КАК ДолиСписанияКосвенныхРасходов
	|ГДЕ
	|	ДолиСписанияКосвенныхРасходов.Организация В(&Организации)
	|	И ДолиСписанияКосвенныхРасходов.Активность
	|	И ДолиСписанияКосвенныхРасходов.ПериодРасчета МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ДолиСписанияКосвенныхРасходов.ПериодРасчета, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц";
	
КонецФункции

Функция УбытокОтРеализацииПраваТребованияВключаетсяЕдиновременно(НалоговыйПериод) Экспорт
	
	// Закон №81-ФЗ от 20 апреля 2014 года внес изменения в п. 2 ст. 279 НК РФ - отменил двухэтапный порядок 
	// включения в расходы убытка от реализации права требования.
	// Это изменение действует с 2015 года. 
	// До этой даты двухэтапный порядок применялся для реализации прав требования после наступления срока платежа.
	// Поэтому в декларации требовалось заполнять детальные сведения о таких убытках.
	ДатаНачалаЕдиновременногоВключенияУбыткаОтРеализацииПраваТребования = '2015-01-01';
	
	Возврат НалоговыйПериод >= ДатаНачалаЕдиновременногоВключенияУбыткаОтРеализацииПраваТребования;
	
КонецФункции

#Область ЗаполнениеРегламентированныхОтчетов

#Область ПолучениеСведенийОПоказателях

#Область ПолучениеСведенийОПоказателяхДекларацииПоПрибыли

Процедура ПолучитьСведенияОПоказателяхОтчетаПрибыльФормаОтчета2010Кв4(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010503", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020001003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020004103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020004203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020005203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020005403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020005903", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020020003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020030003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020020103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020020403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020020503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020030103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020030203", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030018003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030019003", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040004001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040005001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040006001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040007001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040008001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040009001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040010001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040011001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040012001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040013001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040015003", Истина, Истина);
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаПрибыльФормаОтчета2012Кв1(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010001403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010603", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002010010703", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020001003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020004103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020004203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020005203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020005403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020005903", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020013503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020020003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020030003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020020103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020020403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020020503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020030103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002020030203", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030003003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030018003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002030019003", Истина, Истина);
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040004001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040005001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040006001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040007001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040008001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040009001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040010001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040011001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040012001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040013001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002040015003", Истина, Истина);
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаПрибыльФормаОтчета2015Кв1(ПоказателиОтчета) Экспорт
	
	// В основном, код этой процедуры скопирован из ПолучитьСведенияОПоказателяхОтчетаПрибыльФормаОтчета2013Кв4.
	// Такой код отличается номерами ячеек.
	// Кроме того, заполнение отдельных строк выполняется только в налоговых периодах до 2015 года.
	// Остальные изменения следует вносить одновременно в ПолучитьСведенияОПоказателяхОтчетаПрибыльФормаОтчета2013Кв4() 
	// и ПолучитьСведенияОПоказателяхОтчетаПрибыльФормаОтчета2015Кв1()
	
	// Приложение 1 к Листу 02
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210001403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010603", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010703", Истина, Истина);
	
	// Приложение 2 к Листу 02
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220013103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220013203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220013303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220013403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220013503", Истина, Истина);
	
	// Приложение 4 к Листу 02
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240004001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240005001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240006001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240007001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240008001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240009001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240010001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240011001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240012001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240013001", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240002003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240004003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240005003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240006003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240007003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240008003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240009003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240010003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240011003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240012003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240013003", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000240015003", Истина, Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Заполнение

#Область ЗаполнениеДекларацииПоПрибыли

Процедура ЗаполнитьОтчетПрибыльФормаОтчета2012Кв1(ПараметрыОтчета, Контейнер) Экспорт
	Перем ТаблицаРасшифровки; // Таблица для сбора сведений о расшифровке. Инициализируется в процедуре добавления записи
	
	ПС = ПланыСчетов.Хозрасчетный;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СписокОрганизаций = ВсяОрганизация(ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.УстановитьПараметр("ДатаНач",           ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("ДатаКон",           ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	
	// Временная таблица расчета доли ЕНВД:
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ДолиЕНВД.ДоляЕНВД) КАК ДоляЕНВД,
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(ДолиЕНВД.ПериодРасчета, МЕСЯЦ)) КАК МесяцЕНВД
	|ПОМЕСТИТЬ ДолиЕНВД
	|ИЗ
	|	РегистрСведений.ДолиСписанияКосвенныхРасходов КАК ДолиЕНВД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|	ПО ДолиЕНВД.Регистратор = РегламентнаяОперация.Ссылка
	|		И РегламентнаяОперация.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.СписаниеКосвенныхРасходов)
	|ГДЕ
	|	ДолиЕНВД.Организация В(&СписокОрганизаций)
	|	И ДолиЕНВД.Активность
	|	И ДолиЕНВД.ПериодРасчета МЕЖДУ &ДатаНач И &ДатаКон
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МесяцЕНВД";
	
	Запрос.Выполнить();	
	
	// Таблица итогов по всем счетам без анлитики:
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаНУОборотДт КАК ДО,
	|	ХозрасчетныйОбороты.СуммаНУОборотКт КАК КО,
	|	ХозрасчетныйОбороты.Счет КАК Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , , , Организация В (&СписокОрганизаций), , ) КАК ХозрасчетныйОбороты
	|
	|ИТОГИ
	|	СУММА(ДО),
	|	СУММА(КО)
	|ПО
	|	Счет ИЕРАРХИЯ";	
	
	БухИтоги = Запрос.Выполнить().Выгрузить();
	
	// Таблица итогов по всем счетам косвенных затрат с рабивкой по виду затрат:
	
	Запрос.УстановитьПараметр("Счет", ПолучитьМассивСчетовУчетаРасходов());
	
	КорСчета = Новый Массив;
	КорСчета.Добавить(ПС.Продажи_РасходыНаПродажуНеЕНВД);
	КорСчета.Добавить(ПС.Продажи_УправленческиеРасходыНеЕНВД);
	
	Запрос.УстановитьПараметр("КорСчет",             КорСчета);
	Запрос.УстановитьПараметр("ВидСубконто",         ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	Запрос.УстановитьПараметр("ТранспортныеРасходы", Перечисления.ВидыРасходовНУ.ТранспортныеРасходы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК КО,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидРасходов КАК Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			&ВидСубконто,
	|			Организация В (&СписокОрганизаций)
	|				И (НЕ ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидРасходов = &ТранспортныеРасходы),
	|			КорСчет В ИЕРАРХИИ (&КорСчет),
	|			) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидРасходов";
	
	БухИтогиКосвЗатрат = Запрос.Выполнить().Выгрузить();
	
	// Прочие доходы и расходы:
	
	МассивНеЕНВД = Новый Массив;
	МассивНеЕНВД.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения);
	МассивНеЕНВД.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
	Запрос.УстановитьПараметр("МассивНеЕНВД", МассивНеЕНВД);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов
	|	КОНЕЦ КАК ВидПрочихДоходовИРасходов,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|				И ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаздельногоУчетаНДС
	|					= ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|				ТОГДА 1 - ЕСТЬNULL(ДолиЕНВД.ДоляЕНВД, 0)
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДебетовыйОборот,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт * ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|				И ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаздельногоУчетаНДС
	|					= ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|				ТОГДА 1 - ЕСТЬNULL(ДолиЕНВД.ДоляЕНВД, 0)
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КредитовыйОборот
	|ПОМЕСТИТЬ ТаблицаПрочиеДоходыРасходыНеЕНВД
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходыИРасходы)),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы),
	|			Организация В (&СписокОрганизаций)
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД.ВидПрочихДоходовИРасходов КАК Счет,
	|	СУММА(ТаблицаПрочиеДоходыРасходыНеЕНВД.ДебетовыйОборот) КАК ДО,
	|	СУММА(ТаблицаПрочиеДоходыРасходыНеЕНВД.КредитовыйОборот) КАК КО
	|ИЗ
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД КАК ТаблицаПрочиеДоходыРасходыНеЕНВД
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД.ВидПрочихДоходовИРасходов";
	
	БухИтоги91 = Запрос.Выполнить().Выгрузить();
	
	// Из расходов по реализации амортизируемого имущества вычитаем перенос на расходы убытков от реализации
	
	РеализацияАмортизируемогоИмущества = Новый Массив;
	РеализацияАмортизируемогоИмущества.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств);
	РеализацияАмортизируемогоИмущества.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов);
	Запрос.УстановитьПараметр("РеализацияАмортизируемогоИмущества", РеализацияАмортизируемогоИмущества);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов
	|	КОНЕЦ КАК Счет,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|				И ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаздельногоУчетаНДС
	|					= ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|				ТОГДА 1 - ЕСТЬNULL(ДолиЕНВД.ДоляЕНВД, 0)
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДО,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт * ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|				И ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаздельногоУчетаНДС
	|					= ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|				ТОГДА 1 - ЕСТЬNULL(ДолиЕНВД.ДоляЕНВД, 0)
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КО
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходыИРасходы)),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы),
	|			Организация В (&СписокОрганизаций)
	|				И ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|						ТОГДА ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов В (&РеализацияАмортизируемогоИмущества)
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|						ТОГДА ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов В (&РеализацияАмортизируемогоИмущества)
	|				КОНЕЦ,
	|			Корсчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходыБудущихПериодов),
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов
	|	КОНЕЦ";
	
	БухИтогиПереносУбытковПоОСиНМА = Запрос.Выполнить().Выгрузить();
	
	// Внереализационные доходы и расходы
	
	Запрос.УстановитьПараметр("Счет",           ПС.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ВидСубконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ВидРасходов",    ПолучитьМассивВнереализационныхРасходов());
	Запрос.УстановитьПараметр("Распределяемые", Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов
	|	КОНЕЦ КАК Счет,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|					И ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаздельногоУчетаНДС
	|						= ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|				ТОГДА 1 - ЕСТЬNULL(ДолиЕНВД.ДоляЕНВД, 0)
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДО,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК КО
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			&ВидСубконто,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|						ТОГДА ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов В (&ВидРасходов)
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|						ТОГДА ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов В (&ВидРасходов)
	|				КОНЕЦ
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов
	|	КОНЕЦ";
	
	БухИтоги917 = Запрос.Выполнить().Выгрузить();
	
	Запрос.УстановитьПараметр("Счет",        ПС.ПрочиеДоходы);
	Запрос.УстановитьПараметр("ВидСубконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	
	МассивЗапасовНУ = Новый Массив;
	МассивЗапасовНУ.Добавить(ПС.ВложенияВоВнеоборотныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.ОСвОрганизации);
	МассивЗапасовНУ.Добавить(ПС.ДоходныеВложенияВ_МЦ);
	МассивЗапасовНУ.Добавить(ПС.НематериальныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.АмортизацияОсновныхСредств);
	МассивЗапасовНУ.Добавить(ПС.АмортизацияНематериальныхАктивов);
	МассивЗапасовНУ.Добавить(ПС.ОборудованиеКУстановке);
	МассивЗапасовНУ.Добавить(ПС.ВложенияВоВнеоборотныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.Материалы);
	МассивЗапасовНУ.Добавить(ПС.Полуфабрикаты);
	МассивЗапасовНУ.Добавить(ПС.Товары);
	МассивЗапасовНУ.Добавить(ПС.ТоварыОтгруженные);
	МассивЗапасовНУ.Добавить(ПС.ГотоваяПродукция);
	
	Запрос.УстановитьПараметр("КорСчет",     МассивЗапасовНУ);
	Запрос.УстановитьПараметр("ВидРасходов", Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕстьNULL(СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),0) КАК КО
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет = &Счет,
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|						ТОГДА ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов В (&ВидРасходов)
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|						ТОГДА ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов В (&ВидРасходов)
	|				КОНЕЦ,
	|			КорСчет В ИЕРАРХИИ (&КорСчет),
	|			) КАК ХозрасчетныйОбороты";
	
	
	БухИтоги911_Излишки = Запрос.Выполнить().Выгрузить().Итог("КО");
	
	// Состав справочников "Статьи затрат", "Прочие доходы и расходы" и "Расходы будущих периодов" по видам затрат для расшифровки 
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка КАК Ссылка,
	|	СтатьиЗатрат.ВидРасходов КАК ВидЗатрат
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиЗатрат
	|
	|ГДЕ
	|	НЕ СтатьиЗатрат.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ПустаяСсылка)
	|ИТОГИ ПО
	|	ВидЗатрат,
	|	Ссылка";
	
	Результат = Запрос.Выполнить();
	
	СписокСтатейЗатрат = Новый ТаблицаЗначений;
	СписокСтатейЗатрат.Колонки.Добавить("Счет");
	СписокСтатейЗатрат.Колонки.Добавить("СписокЗатрат");
	
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидЗатрат");
	
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		
		СтрокаСписокСтатейЗатрат = СписокСтатейЗатрат.Добавить();
		СтрокаСписокСтатейЗатрат.Счет = ВыборкаВидовЗатрат.ВидЗатрат;
		СтрокаСписокСтатейЗатрат.СписокЗатрат = Новый СписокЗначений;
		
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		
		Пока Выборка.Следующий() Цикл
			СтрокаСписокСтатейЗатрат.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПрочиеДоходыИРасходы.Ссылка КАК Ссылка,
	|	ПрочиеДоходыИРасходы.ВидПрочихРасходов КАК ВидПрочихДоходовИРасходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК ПрочиеДоходыИРасходы
	|
	|ГДЕ
	|	НЕ ПрочиеДоходыИРасходы.ВидПрочихРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеДоходыИРасходы.Ссылка,
	|	ПрочиеДоходыИРасходы.ВидПрочихДоходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиДоходов КАК ПрочиеДоходыИРасходы
	|ГДЕ
	|	НЕ ПрочиеДоходыИРасходы.ВидПрочихДоходов = ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)
	|ИТОГИ ПО
	|	ВидПрочихДоходовИРасходов,
	|	Ссылка";
	
	Результат = Запрос.Выполнить();
	
	СписокПрочихДоходовИРасходов = Новый ТаблицаЗначений;
	СписокПрочихДоходовИРасходов.Колонки.Добавить("Счет");
	СписокПрочихДоходовИРасходов.Колонки.Добавить("СписокЗатрат");
	
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидПрочихДоходовИРасходов");
	
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		
		СтрокаСписокПрочихДоходовИРасходов = СписокПрочихДоходовИРасходов.Добавить();
		СтрокаСписокПрочихДоходовИРасходов.Счет = ВыборкаВидовЗатрат.ВидПрочихДоходовИРасходов;
		СтрокаСписокПрочихДоходовИРасходов.СписокЗатрат = Новый СписокЗначений;
		
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		
		Пока Выборка.Следующий() Цикл
			СтрокаСписокПрочихДоходовИРасходов.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
		
	КонецЦикла;	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходыБудущихПериодов.Ссылка КАК Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРБП.Прочие) КАК Вид
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК РасходыБудущихПериодов
	|ГДЕ
	|	РасходыБудущихПериодов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов)
	|ИТОГИ ПО
	|	Вид,
	|	Ссылка";
	
	Результат = Запрос.Выполнить();
	
	СписокРБП = Новый ТаблицаЗначений;
	СписокРБП.Колонки.Добавить("Счет");
	СписокРБП.Колонки.Добавить("СписокЗатрат");
	
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Вид");
	
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		
		СтрокаСписокРБП = СписокРБП.Добавить();
		СтрокаСписокРБП.Счет = ВыборкаВидовЗатрат.Вид;
		СтрокаСписокРБП.СписокЗатрат = Новый СписокЗначений;
		
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		
		Пока Выборка.Следующий() Цикл
			СтрокаСписокРБП.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
		
	КонецЦикла;	
	
	#Область Лист02_1
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 1
	
	СтраницаЛист02_1 = Контейнер.Лист02_1[0].Данные[0].Значение;
	
	Счет9101 = ПС.ПрочиеДоходы;
	Счет9102 = ПС.ПрочиеРасходы;
	
	ВидСубконтоПрочиеДоходыИРасходы = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы;
	ВидСубконтоСтатьиЗатрат 		= ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат;
	ВидСубконтоРБП 					= ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов;
	ПрочиеДоходыИРасходы			= Перечисления.ВидыПрочихДоходовИРасходов;

	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	
	СчетаУчетаПродукции = Новый Массив;
	СчетаУчетаПродукции.Добавить(ПланыСчетов.Хозрасчетный.ГотоваяПродукция); //43
	СчетаУчетаПродукции.Добавить(ПланыСчетов.Хозрасчетный.Полуфабрикаты);    //21
	СчетаУчетаПродукции.Добавить(ПланыСчетов.Хозрасчетный.ГотоваяПродукцияОтгруженная); //45.02
	Запрос.УстановитьПараметр("СчетаУчетаПродукции", СчетаУчетаПродукции);
	
	ИспользоватьГруппыФинансовогоУчетаНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьГруппыФинансовогоУчета");
	Запрос.УстановитьПараметр("ИспользоватьГруппыФинансовогоУчетаНоменклатуры", ИспользоватьГруппыФинансовогоУчетаНоменклатуры);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДвиженияССубконто.Регистратор КАК Регистратор,
	|	ДвиженияССубконто.СубконтоКт1 КАК Номенклатура
	|ПОМЕСТИТЬ РеализацияПродукции
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Организация В (&СписокОрганизаций)
	|				И СчетДт В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД))
	|				И СчетКт В (&СчетаУчетаПродукции),
	|			,
	|			) КАК ДвиженияССубконто
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Регистратор КАК Регистратор,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ХозрасчетныйОбороты.СуммаНУОборотКт КАК СуммаДохода,
	|	ВЫБОР
	|		КОГДА &ИспользоватьГруппыФинансовогоУчетаНоменклатуры
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ГруппыФинансовогоУчетаНоменклатуры)
	|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.Номенклатура)
	|	КОНЕЦ КАК ЗначениеСубконто
	|ПОМЕСТИТЬ Выручка
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыручкаНеЕНВД)),
	|			&ВидыСубконто,
	|			Организация В (&СписокОрганизаций),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|;
	|
	|ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(Выручка.СуммаДохода, 0)) КАК СуммаДохода,
	|	Выручка.ЗначениеСубконто КАК ЗначениеСубконто,
	|	ВЫБОР
	|		КОГДА НЕ РеализацияПродукции.Номенклатура ЕСТЬ NULL 
	|				ИЛИ Выручка.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СобственнаяПродукция
	|ИЗ
	|	Выручка КАК Выручка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РеализацияПродукции КАК РеализацияПродукции
	|		ПО Выручка.Регистратор = РеализацияПродукции.Регистратор
	|			И Выручка.Номенклатура = РеализацияПродукции.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	Выручка.ЗначениеСубконто,
	|	ВЫБОР
	|		КОГДА НЕ РеализацияПродукции.Номенклатура ЕСТЬ NULL 
	|				ИЛИ Выручка.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ";
	
	ВыборкаДоходПродукция = Запрос.Выполнить().Выбрать();
	// Строка 011 - выручка от реализации товаров (работ, услуг) собственного производства
	ЗаголовокРасшифровкиСтроки011 = НСтр("ru = 'Строка 011 ""Выручка от реализации товаров (работ, услуг) собственного производства""'");
	П002010001103 = 0;
	// Строка 012 - выручка от реализации покупных товаров
	ЗаголовокРасшифровкиСтроки012 = НСтр("ru = 'Строка 012 - ""Выручка от реализации покупных товаров""'");
	П002010001203 = 0;
	
	ВидыСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные;
	ВидСубконтоРасшифровки = ?(ИспользоватьГруппыФинансовогоУчетаНоменклатуры, ВидыСубконто.НоменклатурныеГруппы, ВидыСубконто.Номенклатура);
	
	Пока ВыборкаДоходПродукция.Следующий() Цикл
				
		Если ВыборкаДоходПродукция.СобственнаяПродукция Тогда
			П002010001103 = П002010001103 + ВыборкаДоходПродукция.СуммаДохода;
		Иначе
			П002010001203 = П002010001203 + ВыборкаДоходПродукция.СуммаДохода;			
		КонецЕсли;
			
		// Заполним данные расшифровки:
		ИмяПоказателя = ?(ВыборкаДоходПродукция.СобственнаяПродукция, "П002010001103", "П002010001203");
		ЗаголовокРасшифровки = ?(ВыборкаДоходПродукция.СобственнаяПродукция, ЗаголовокРасшифровкиСтроки011, ЗаголовокРасшифровкиСтроки012);
		ЗначениеСубконто = ?(ЗначениеЗаполнено(ВыборкаДоходПродукция.ЗначениеСубконто), ВыборкаДоходПродукция.ЗначениеСубконто, "< не заполнено >");
		ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоРасшифровки, ЗначениеСубконто);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки, "+",
			"!КО"+ПС.ВыручкаНеЕНВД.Код, ВыборкаДоходПродукция.СуммаДохода, "Лист02_1", ДополнительныеПараметры);
			
	КонецЦикла;
		
	СтраницаЛист02_1.П002010001103 = П002010001103;
	СтраницаЛист02_1.П002010001203 = П002010001203;
	
	Если П002010001103 = 0 Тогда // Данные расшифровки были не заполнены по этому показателю
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002010001103", ЗаголовокРасшифровкиСтроки011, "+", "!КО"+ПС.ВыручкаНеЕНВД.Код, 0, "Лист02_1");
	КонецЕсли;
	Если П002010001203 = 0 Тогда // Данные расшифровки были не заполнены по этому показателю
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002010001203", ЗаголовокРасшифровкиСтроки012, "+", "!КО"+ПС.ВыручкаНеЕНВД.Код, 0, "Лист02_1");
	КонецЕсли;
	
	// Строка 013 - выручка от реализации имущественных прав, за исключением доходов от реализации права требования
	П002010001303 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования, БухИтоги91);
	П002030007003 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, БухИтоги91);
	СтраницаЛист02_1.П002010001303 = П002010001303 + П002030007003;
	
	Заголовок = НСтр("ru = 'Строка 013 ""Выручка от реализации от реализации имущественных прав""'");
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияИмущественныхПравКромеПраваТребования", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002010001303",
								Заголовок,
								"+",
								"!КО"+ПС.ПрочиеРасходы.Код,
								П002010001303,
								"Лист02_1",
								ДополнительныеПараметры);
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияПраваТребованияКакОказанияФинансовыхУслуг", СписокПрочихДоходовИРасходов, Ложь);															
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002010001303",
								Заголовок,
								"+",
								"!КО"+ПС.ПрочиеРасходы.Код,
								П002030007003,
								"Лист02_1",
								ДополнительныеПараметры);
	
	// Строка 014 - выручка от реализации прочего имущества
	СтраницаЛист02_1.П002010001403 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества, БухИтоги91);
	
	// Строка 020 - выручка от реализации ценных бумаг профессиональных участников рынка
	СтраницаЛист02_1.П002010002003 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг, БухИтоги91);
	
	// Строка 100 - Внереализационные доходы всего
	СтраницаЛист02_1.П002010010003 = ?(БухИтоги917.Количество() = 0, 0, БухИтоги917.Итог("КО"));
	ВставитьРасшифровкуВнереализационныхДоходовРасходов(ТаблицаРасшифровки, Запрос, "П002010010003", "КО", СписокПрочихДоходовИРасходов);
	
	// Строка 101 - В виде дохода прошлых лет, выявленного в отчетном (налоговом) периоде
	П002010010103 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет, БухИтоги917);
	СтраницаЛист02_1.П002010010103 = П002010010103;
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("ПрибыльУбытокПрошлыхЛет", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002010010103",
								НСтр("ru = 'Строка 101 ""Доходы в виде дохода прошлых лет, выявленного в отчетном (налоговом) периоде""'"),
								"+",
								"!КО"+ПС.ПрочиеДоходы.Код,
								П002010010103,
								"Лист02_1",
								ДополнительныеПараметры);
	
	// Строка 102 - доходы от ликвидации основных средств
	П002010010203 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств, БухИтоги917);
	СтраницаЛист02_1.П002010010203 = П002010010203;
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("ЛиквидацияОсновныхСредств", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002010010203",
								НСтр("ru = 'Строка 102 ""Доходы от ликвидации основных средств""'"),
								"+",
								"!КО"+ПС.ПрочиеДоходы.Код,
								П002010010203,
								"Лист02_1",
								ДополнительныеПараметры);
	
	// Строка 103 - в виде безвозмездно полученного имущества (работ, услуг) или имущественных прав (кроме указанных в статье 251 НК)
	П002010010303 = БухИтогиНайти("КО", ПрочиеДоходыИРасходы.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав, БухИтоги917);
	СтраницаЛист02_1.П002010010303 = П002010010303;
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002010010303",
								НСтр("ru = 'Строка 103 ""Доходы от безвозмездного получения имущества""'"),
								"+",
								"!КО"+ПС.ПрочиеДоходы.Код,
								П002010010303,
								"Лист02_1",
								ДополнительныеПараметры);
	
	// Строка 104 - в виде излишков
	П002010010403 = БухИтоги911_Излишки;
	СтраницаЛист02_1.П002010010403 = П002010010403;
	
	// Строка 105 - в виде востановления аморт.премии
	П002010010503 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ВосстановлениеАмортизационнойПремии, БухИтоги917);
	СтраницаЛист02_1.П002010010503 = П002010010503;
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("ВосстановлениеАмортизационнойПремии", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
		"П002010010503",
		НСтр("ru = 'Строка 103 ""сумма восстановленных расходов на капитальные вложения в соответствии с абзацем четвертым пункта 9 статьи 258 НК""'"),
		"+",
		"!КО"+ПС.ПрочиеДоходы.Код,
		П002010010503,
		"Лист02_1",
		ДополнительныеПараметры);
	
	// Строка 107 - в сумм корректировки прибыли до рыночных цен
	П002010010703 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.КорректировкаПрибылиДоРыночныхЦен, БухИтоги917);
	СтраницаЛист02_1.П002010010703 = П002010010703;
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("КорректировкаПрибылиДоРыночныхЦен", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002010010703",
								НСтр("ru = 'Строка 107 ""сумма корректировки прибыли до рыночных цен""'"),
								"+",
								"!КО"+ПС.ПрочиеДоходы.Код,
								П002010010703,
								"Лист02_1",
								ДополнительныеПараметры);
								
	#КонецОбласти
	
	#Область Лист02_2
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 2
	
	СтраницаЛист02_2 = Контейнер.Лист02_2[0].Данные[0].Значение;
	
	// Строка 010 - Прямые расходы, относящиеся к реализованным товарам,
	//              работам, услугам
	Запрос.УстановитьПараметр("Счет", ПС.СебестоимостьПродажНеЕНВД);
	Товары = Новый Массив;
	Товары.Добавить(ПС.Товары);
	Товары.Добавить(ПС.ТорговаяНаценка);
	Запрос.УстановитьПараметр("Товары", Товары);
	
	ПокупныеТовары = Новый Массив;
	ПокупныеТовары.Добавить(ПС.Товары);
	ПокупныеТовары.Добавить(ПС.ТорговаяНаценка);
	ПокупныеТовары.Добавить(ПС.ПокупныеТоварыОтгруженные);
	Запрос.УстановитьПараметр("ПокупныеТовары", ПокупныеТовары);
	
	Запрос.УстановитьПараметр("ПокупныеТоварыОтгруженные", ПС.ПокупныеТоварыОтгруженные);
	Массив = Новый Массив;
	Массив.Добавить(ПС.РасчетыСПоставщикамиИПодрядчиками);
	Массив.Добавить(ПС.РасчетыСПокупателямиИЗаказчиками);
	Массив.Добавить(ПС.РасчетыСРазнымиДебиторамиИКредиторами);
	Запрос.УстановитьПараметр("ПоступлениеИВыбытиеИмуществаРаботУслугПрав", Массив);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт) КАК СебестоимостьПродаж,
	|	0 КАК Товары,
	|	0 КАК ПокупныеТоварыОтгруженные,
	|	0 КАК ПоступлениеИВыбытиеИмуществаРаботУслугПрав
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			,
	|			Организация В (&СписокОрганизаций),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт),
	|	0,
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			,
	|			Организация В (&СписокОрганизаций),
	|			КорСчет В ИЕРАРХИИ (&Товары),
	|			) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт),
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			,
	|			Организация В (&СписокОрганизаций),
	|			КорСчет В ИЕРАРХИИ (&ПокупныеТоварыОтгруженные),
	|			) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	0,
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			,
	|			Организация В (&СписокОрганизаций),
	|			КорСчет В ИЕРАРХИИ (&ПоступлениеИВыбытиеИмуществаРаботУслугПрав),
	|			) КАК ХозрасчетныйОбороты";
	БухИтоги902 = Запрос.Выполнить().Выгрузить();
	
	СебестоимостьПродаж                        = БухИтоги902.Итог("СебестоимостьПродаж");
	Товары                                     = БухИтоги902.Итог("Товары");
	ПокупныеТоварыОтгруженные                  = БухИтоги902.Итог("ПокупныеТоварыОтгруженные");
	ПоступлениеИВыбытиеИмуществаРаботУслугПрав = БухИтоги902.Итог("ПоступлениеИВыбытиеИмуществаРаботУслугПрав");
	ПокупныеТовары                             = Товары + ПокупныеТоварыОтгруженные + ПоступлениеИВыбытиеИмуществаРаботУслугПрав;
	П002020001003 = СебестоимостьПродаж - ПокупныеТовары;
	СтраницаЛист02_2.П002020001003 = П002020001003;
	ЗначениеСубконто = БухИтогиНайти("СписокЗатрат", Перечисления.ВидыРасходовНУ.ТранспортныеРасходы, СписокСтатейЗатрат, Ложь);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоСтатьиЗатрат, ЗначениеСубконто);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020001003",
								НСтр("ru = 'Строка 010 ""Прямые расходы, относящиеся к реализованным товарам, работам, услугам""'"),
								"+",
								"!ДО"+ПС.СебестоимостьПродаж.Код,
								СебестоимостьПродаж,
								"Лист02_2",
								ДополнительныеПараметры);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020001003", "", "-", "!ОБ"+ПС.СебестоимостьПродаж.Код+" "+ПС.Товары.Код, - Товары, "Лист02_2");
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020001003",
								"",
								"-",
								"!ОБ"+ПС.СебестоимостьПродаж.Код+" "+ПС.ПокупныеТоварыОтгруженные.Код,
								- ПокупныеТоварыОтгруженные,
								"Лист02_2");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт) КАК Сумма,
	|	ХозрасчетныйОбороты.КорСчет КАК КоррСчет,
	|	ХозрасчетныйОбороты.КорСчет.Код КАК КоррСчетКод
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			,
	|			Организация В (&СписокОрганизаций),
	|			КорСчет В ИЕРАРХИИ (&ПоступлениеИВыбытиеИмуществаРаботУслугПрав),
	|			) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСчет.Код";
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Строка ИЗ Результат Цикл
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									"П002020001003",
									"",
									"-",
									"!ОБ"+ПС.СебестоимостьПродаж.Код+" "+Строка.КоррСчетКод,
									- Строка.Сумма,
									"Лист02_2");
	КонецЦикла;
	
	// Строка 020 - Прямые расходы налогоплательщиков, осуществляющих оптовую,
	//              мелкооптовую и розничную  торговлю в текущем  отчетном
	//              (налоговом) периоде
	Запрос.УстановитьПараметр("Счет44",       ПС.РасходыНаПродажу);
	Запрос.УстановитьПараметр("Счет90",       ПС.Продажи_РасходыНаПродажуНеЕНВД);	
	Запрос.УстановитьПараметр("ВидЗатрат",    Перечисления.ВидыРасходовНУ.ТранспортныеРасходы);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаНУОборотКт КАК СуммаОборотКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет44),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|				И ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидРасходов в (&ВидЗатрат),
	|			КорСчет = &Счет90,
	|			) КАК ХозрасчетныйОбороты
	|";
	
	БухИтоги44 = Запрос.Выполнить().Выгрузить();
	П002020002003 = БухИтоги44.Итог("СуммаОборотКт") + ПокупныеТовары;
	СтраницаЛист02_2.П002020002003 = П002020002003;
	
	ЗначениеСубконто = БухИтогиНайти("СписокЗатрат", Перечисления.ВидыРасходовНУ.ТранспортныеРасходы, СписокСтатейЗатрат, Ложь);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоСтатьиЗатрат, ЗначениеСубконто);
	
	Заголовок = НСтр("ru = 'Строка 020 ""Прямые расходы налогоплательщиков, осуществляющих оптовую, 
	|мелкооптовую и розничную  торговлю в текущем  отчетном (налоговом) периоде""'");
	ОборотСДебетаСчета = "!ОБ"+ПС.СебестоимостьПродаж.Код+" ";
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020002003",
								Заголовок,
								"+",
								"!ОБ"+ПС.РасходыНаПродажу+" "+ПС.РасходыНаПродажу,
								БухИтоги44.Итог("СуммаОборотКт"),
								"Лист02_2",
								ДополнительныеПараметры);
								
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020002003", "", "+", ОборотСДебетаСчета+ПС.Товары.Код, Товары, "Лист02_2");
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020002003",
								"",
								"+",
								ОборотСДебетаСчета+ПС.ПокупныеТоварыОтгруженные,
								ПокупныеТоварыОтгруженные,
								"Лист02_2");
								
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020002003",
								"",
								"+",
								ОборотСДебетаСчета+ПС.РасчетыСПокупателямиИЗаказчиками.Код,
								ПоступлениеИВыбытиеИмуществаРаботУслугПрав,
								"Лист02_2");
	
	// Строка 030 - Стоимость реализованных покупных товаров
	П002020003003 = ПокупныеТовары;
	СтраницаЛист02_2.П002020003003 = П002020003003;
	Заголовок = НСтр("ru = 'Строка 030 ""Стоимость реализованных покупных товаров""'");
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020003003", Заголовок, "+", ОборотСДебетаСчета+ПС.Товары.Код, Товары, "Лист02_2");
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020003003",
								"",
								"+",
								ОборотСДебетаСчета+ПС.ПокупныеТоварыОтгруженные.Код,
								ПокупныеТоварыОтгруженные,
								"Лист02_2");
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020003003",
								"",
								"+",
								ОборотСДебетаСчета+ПС.РасчетыСПокупателямиИЗаказчиками.Код,
								ПоступлениеИВыбытиеИмуществаРаботУслугПрав,
								"Лист02_2");
	
	// Строка 040 - Косвенные расходы
	КосвенныеРасходы = БухИтогиКосвЗатрат.Итог("КО");
	НалогиИСборыПрочие =  БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.НалогиИСборы, БухИтоги91);
	ПрочиеКосвенныеРасходы = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеКосвенныеРасходы, БухИтоги91);
	ПрочиеОперационныеДоходыРасходы = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеОперационныеДоходыРасходы, БухИтоги91);
	П002020004003 = КосвенныеРасходы + ПрочиеКосвенныеРасходы + НалогиИСборыПрочие + ПрочиеОперационныеДоходыРасходы;
	
	СтраницаЛист02_2.П002020004003 = П002020004003;
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020004003", НСтр("ru = 'Строка 040 ""Косвенные расходы""'"), "+", "", 0, "Лист02_2");
	
	ВставитьРасшифровкуКосвенныхРасходов(ТаблицаРасшифровки, Запрос, СписокСтатейЗатрат, "П002020004003");
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("ПрочиеКосвенныеРасходы", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020004003", "", "+", "!ДО"+ПланыСчетов.Хозрасчетный.ПрочиеРасходы.Код,
								ПрочиеКосвенныеРасходы, "Лист02_2", ДополнительныеПараметры);
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("НалогиИСборы", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020004003",
								"",
								"+",
								"!ДО"+ПланыСчетов.Хозрасчетный.ПрочиеРасходы.Код,
								НалогиИСборыПрочие,
								"Лист02_2",
								ДополнительныеПараметры);
	
	// Строка 041 - Суммы налогов и сборов, начисленные в порядке, установленном законодательством Российской
	//              Федерации о налогах и сборах, за исключением ЕСН, а также налогов, перечисленных в статье 270 НК																	
	
	НалогиИСборы =  БухИтогиНайти("КО", Перечисления.ВидыРасходовНУ.НалогиИСборы, БухИтогиКосвЗатрат);
	СтраницаЛист02_2.П002020004103 = НалогиИСборы + НалогиИСборыПрочие;
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020004103", НСтр("ru = 'Строка 041 ""Суммы налогов и сборов""'"), "+", "", 0, "Лист02_2");
	ВставитьРасшифровкуКосвенныхРасходов(ТаблицаРасшифровки, Запрос, "П002020004103", Перечисления.ВидыРасходовНУ.НалогиИСборы);
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("НалогиИСборы", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020004103",
								"",
								"+",
								"!ДО"+ПланыСчетов.Хозрасчетный.ПрочиеРасходы.Код,
								НалогиИСборыПрочие,
								"Лист02_2",
								ДополнительныеПараметры);
	
	// Строка 042 - Расходы на капитальные вложения размере не более 10%  
	П002020004203 = БухИтогиНайти("КО", Перечисления.ВидыРасходовНУ.АмортизационнаяПремия, БухИтогиКосвЗатрат);	
	СтраницаЛист02_2.П002020004203 = П002020004203;
	
	// Строка 050 - Стоимость имущественных прав
	ОказаниеФинансовыхУслуг      = БухИтогиНайти("ДО", ПрочиеДоходыИРасходы.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, БухИтоги91);
	ПослеНаступленияСрокаПлатежа = БухИтогиНайти("ДО", ПрочиеДоходыИРасходы.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа, БухИтоги91);
	ДоНаступленияСрокаПлатежа    = БухИтогиНайти("ДО", ПрочиеДоходыИРасходы.РеализацияПраваТребованияДоНаступленияСрокаПлатежа, БухИтоги91);
	СтоимостьИмущественныхПравОбслПроизвдств = БухИтогиНайти("ДО", ПрочиеДоходыИРасходы.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств, БухИтоги91);
	СтоимостьВсехИмущественныхПрав = ОказаниеФинансовыхУслуг + ПослеНаступленияСрокаПлатежа + ДоНаступленияСрокаПлатежа + СтоимостьИмущественныхПравОбслПроизвдств;
	
	П002020005003 = СтоимостьВсехИмущественныхПрав - ОказаниеФинансовыхУслуг - ДоНаступленияСрокаПлатежа
				  - ПослеНаступленияСрокаПлатежа - СтоимостьИмущественныхПравОбслПроизвдств;
				  
	СтраницаЛист02_2.П002020005003 = П002020005003;
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020005003",
								НСтр("ru = 'Строка 050 ""Стоимость имущественных прав""'"),
								"+",
								"!ДО"+ПС.ПрочиеРасходы.Код,
								СтоимостьВсехИмущественныхПрав,
								"Лист02_2");
								
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияПраваТребованияКакОказанияФинансовыхУслуг",
																		 СписокПрочихДоходовИРасходов,
																		 Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020005003",
								"",
								"-",
								"!ДО"+ПС.ПрочиеРасходы.Код,
								-ОказаниеФинансовыхУслуг,
								"Лист02_2",
								ДополнительныеПараметры);
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияПраваТребованияДоНаступленияСрокаПлатежа",
																		 СписокПрочихДоходовИРасходов,
																		 Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020005003",
								"",
								"-",
								"!ДО"+ПС.ПрочиеРасходы.Код,
								-ДоНаступленияСрокаПлатежа,
								"Лист02_2",
								ДополнительныеПараметры);
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияПраваТребованияПослеНаступленияСрокаПлатежа",
																		 СписокПрочихДоходовИРасходов,
																		 Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020005003", "", "-", "!ДО"+ПС.ПрочиеРасходы.Код, -ПослеНаступленияСрокаПлатежа, "Лист02_2", ДополнительныеПараметры);
	
	// Строка 054 - Расходы на НИОКР по перечню правительства
	П002020005403 = БухИтогиНайти("КО", Перечисления.ВидыРасходовНУ.НИОКРПоПеречнюПравительстваРФ, БухИтогиКосвЗатрат);
	СтраницаЛист02_2.П002020005403 = П002020005403;
	
	// Строка 052 - Расходы на НИОКР 
	П002020005203 = БухИтогиНайти("КО", Перечисления.ВидыРасходовНУ.НИОКР, БухИтогиКосвЗатрат) + П002020005403;
	СтраницаЛист02_2.П002020005203 = П002020005203;
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020005203", НСтр("ru = 'Строка 052 ""Расходы на НИОКР""'"), "+", "", 0, "Лист02_2");
	ВставитьРасшифровкуКосвенныхРасходов(ТаблицаРасшифровки, Запрос, СписокСтатейЗатрат, "П002020005203", Перечисления.ВидыРасходовНУ.НИОКР);
	ВставитьРасшифровкуКосвенныхРасходов(ТаблицаРасшифровки, Запрос, СписокСтатейЗатрат, "П002020005203", Перечисления.ВидыРасходовНУ.НИОКРПоПеречнюПравительстваРФ);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020005403", НСтр("ru = 'Строка 052 ""Расходы на НИОКР по перечню Правительства РФ""'"), "+", "", 0, "Лист02_2");
	ВставитьРасшифровкуКосвенныхРасходов(ТаблицаРасшифровки, Запрос, СписокСтатейЗатрат, "П002020005403", Перечисления.ВидыРасходовНУ.НИОКРПоПеречнюПравительстваРФ);
	
	// Строка 059 - Стоимость имущественных прав
	П002020005903 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования, БухИтоги91);
	П002030008003 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, БухИтоги91);
	СтраницаЛист02_2.П002020005903 = П002020005903 + П002030008003;
	
	Заголовок = НСтр("ru = 'Строка 059 ""Стоимость имущественных прав""'");
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияИмущественныхПравКромеПраваТребования",
																		 СписокПрочихДоходовИРасходов,
																		 Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020005903", Заголовок, "+", "!ДО"+ПС.ПрочиеРасходы.Код, П002020005903, "Лист02_2", ДополнительныеПараметры);
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияПраваТребованияКакОказанияФинансовыхУслуг",
																		 СписокПрочихДоходовИРасходов,
																		 Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020005903", Заголовок, "+", "!ДО"+ПС.ПрочиеРасходы.Код, П002030008003, "Лист02_2", ДополнительныеПараметры);
	
	
	// Строка 060 - Цена приобретения реализованного прочего имущества и расходы,           
	//              связанные с его реализацией
	ПрочееИмущество = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества, БухИтоги91);
	ОбъектыСтроит = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОбъектовСтроительства, БухИтоги91);
	П002020006003 = ПрочееИмущество + ОбъектыСтроит;
	СтраницаЛист02_2.П002020006003 = П002020006003;
	
	Заголовок = НСтр("ru = 'Строка 060 ""Цена приобретения реализованного прочего имущества""'");
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияПрочегоИмущества", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020006003", Заголовок, "+", "!ДО"+ПС.ПрочиеРасходы.Код, ПрочееИмущество, "Лист02_2", ДополнительныеПараметры);
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияОбъектовСтроительства", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020006003", "", "+", "!ДО"+ПС.ПрочиеРасходы.Код, ОбъектыСтроит, "Лист02_2", ДополнительныеПараметры);
	
	// Строка 070 - Расходы, связанные с приобретением и реализацией (выбытием, в т.ч. погашением)
	//              ценных бумаг профессиональными участниками рынка ценных бумаг
	П002020007003 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг, БухИтоги91);
	СтраницаЛист02_2.П002020007003 = П002020007003;
	
	Заголовок = НСтр("ru = 'Строка 070 ""Расходы, связанные с приобретением и реализацией (выбытием, в т.ч. погашением) 
	|ценных бумаг профессиональными участниками рынка ценных бумаг""'");
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияЦенныхБумаг", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020007003", Заголовок, "+", "!ДО"+ПС.ПрочиеРасходы.Код, П002020007003, "Лист02_2", ДополнительныеПараметры);
	
	Запрос.УстановитьПараметр("Счет97",       ПС.РасходыБудущихПериодов);
	Запрос.УстановитьПараметр("ВидСубконто",  ВидСубконтоРБП);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК КО,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидРБП КАК Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет97),
	|			&ВидСубконто,
	|			Организация В (&СписокОрганизаций),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидРБП";
	
	БухИтоги97 = Запрос.Выполнить().Выгрузить();
	БухИтоги97.Свернуть("Счет","КО");	
	
	// Строка 090 - Суммы убытков прошлых лет по объектам обслуживающих производств и хозяйств, включая объекты жилищно - коммунальной и социально - культурной сферы, учитываемые в уменьшение прибыли текущего отчетного (налогового) периода, полученной по указанным видам деятельности
	П002020009003 = БухИтогиНайти("КО", Перечисления.ВидыРБП.УбыткиПрошлыхЛетОбслуживающихПроизводствИХозяйств, БухИтоги97);
	СтраницаЛист02_2.П002020009003 = П002020009003;
	
	Заголовок = НСтр("ru = 'Строка 090 ""Суммы убытков прошлых лет по объектам обслуживающих производств и хозяйств""'");
	
	ЗначениеСубконто = БухИтогиНайти("СписокЗатрат", Перечисления.ВидыРБП.УбыткиПрошлыхЛетОбслуживающихПроизводствИХозяйств, СписокРБП, Ложь);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоРБП, ЗначениеСубконто);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020009003", Заголовок, "+", "!КО"+ ПС.РасходыБудущихПериодов.Код, П002020009003, "Лист02_2", ДополнительныеПараметры);
	
	// Строка 100 - часть убытка от реализации амортизируемого имущества,
	//              относящаяся к расходам текущего отчетного (налогового) периода
	П002020010003 = БухИтогиНайти("КО",Перечисления.ВидыРБП.УбыткиОтРеализацииАмортизируемогоИмущества, БухИтоги97);
	СтраницаЛист02_2.П002020010003 = П002020010003;
	
	Заголовок = НСтр("ru = 'Строка 100 ""часть убытка от реализации амортизируемого имущества, относящаяся к расходам текущего отчетного (налогового) периода""'");
	ЗначениеСубконто = БухИтогиНайти("СписокЗатрат", Перечисления.ВидыРБП.УбыткиОтРеализацииАмортизируемогоИмущества, СписокРБП, Ложь);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоРБП, ЗначениеСубконто);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020010003", Заголовок, "+", "!КО"+ПС.РасходыБудущихПериодов.Код, П002020010003, "Лист02_2", ДополнительныеПараметры);
	
	// Строка 131 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
	Запрос.УстановитьПараметр("Счета02",         	
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПС.АмортизацияОсновныхСредств));
	Запрос.УстановитьПараметр("Счета05",         	
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПС.АмортизацияНематериальныхАктивов));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК АмортизацияОсновныхСредств,
	|	0 КАК АмортизацияНематериальныхАктивов,
	|	ХозрасчетныйОбороты.КорСчет КАК КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1 КАК КорСубконто
	|ПОМЕСТИТЬ Амортизация
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета02),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.Амортизация),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета05),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.Амортизация),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),
	|	0,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета02),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.Амортизация),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет В (&Счета05),
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫРАЗИТЬ(КорСубконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.Амортизация),
	|			,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы)) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(Амортизация.АмортизацияОсновныхСредств) КАК АмортизацияОсновныхСредств,
	|	СУММА(Амортизация.АмортизацияНематериальныхАктивов) КАК АмортизацияНематериальныхАктивов,
	|	Амортизация.КорСчет,
	|	Амортизация.КорСубконто
	|ИЗ
	|	Амортизация КАК Амортизация
	|
	|СГРУППИРОВАТЬ ПО
	|	Амортизация.КорСчет,
	|	Амортизация.КорСубконто";
	
	БухИтогиАмортизация = Запрос.Выполнить().Выгрузить();
	
	АмортизацияОсновныхСредств       = БухИтогиАмортизация.Итог("АмортизацияОсновныхСредств");
	АмортизацияНематериальныхАктивов = БухИтогиАмортизация.Итог("АмортизацияНематериальныхАктивов");
	
	МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Линейный;
	СпособАмортизации = ?(МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный, "2","1");
	Если СпособАмортизации = "1" Тогда
		
		// Строка 131 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
		СтраницаЛист02_2.П002020013103 = АмортизацияОсновныхСредств + АмортизацияНематериальныхАктивов;
		
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			ДополнительныеПараметры = 
			ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
			Если СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П002020013103",
										  "Строка 131 ""Сумма начисленной амортизации, за отчетный (налоговый) период""",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									      "П002020013103",
										  "",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
		КонецЦикла;
		
		// Строка 132 - Сумма начисленной амортизации по нематериальным активам
		СтраницаЛист02_2.П002020013203 = АмортизацияНематериальныхАктивов;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов <> 0 Тогда
				ДополнительныеПараметры = 
				ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										 "П002020013203",
										 "Строка 132 ""Сумма начисленной амортизации по нематериальным активам""",
										 "+",
										 "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										 СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов,
										 "Лист02_2",
										 ДополнительныеПараметры);
			КонецЕсли;
			
		КонецЦикла;
		СтраницаЛист02_2.П002020013303 = 0;
		СтраницаЛист02_2.П002020013403 = 0;
	Иначе
		// Строка 133 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
		СтраницаЛист02_2.П002020013303 = АмортизацияОсновныхСредств + АмортизацияНематериальныхАктивов;
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									"П002020013303",
									НСтр("ru = 'Строка 133 ""Сумма начисленной амортизации, за отчетный (налоговый) период""'"),
									"+",
									"!КО"+ПС.АмортизацияОсновныхСредств.Код,
									АмортизацияОсновныхСредств,
									"Лист02_2");
									
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									"П002020013303",
									"",
									"+",
									"!КО"+ПС.АмортизацияНематериальныхАктивов.Код,
									АмортизацияНематериальныхАктивов,
									"Лист02_2");
									
		// Строка 134 - Сумма начисленной амортизации по нематериальным активам
		СтраницаЛист02_2.П002020013403 = АмортизацияНематериальныхАктивов;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									"П002020013403",
									НСтр("ru = 'Строка 134 ""Сумма начисленной амортизации по нематериальным активам""'"),
									"+",
									"!КО"+ПС.АмортизацияНематериальныхАктивов.Код,
									АмортизацияНематериальныхАктивов,
									"Лист02_2");
	КонецЕсли;
	
	// Строка 135 - Способ амортизации
	СтраницаЛист02_2.П002020013503 = СпособАмортизации;
	
	// Строка 201 - Расходы ввиде процентов по долговым обязательствам
	П002020020103_1 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыКПолучениюУплате, БухИтоги917);
	П002020020103_2 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыНачисленныеПоСт269, БухИтоги917);
	СтраницаЛист02_2.П002020020103 = П002020020103_1 + П002020020103_2;
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("ПроцентыКПолучениюУплате", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020020103",
								НСтр("ru = 'Строка 201 ""Расходы ввиде процентов по долговым обязательствам""'"),
								"+",
								"!КО"+Счет9102.Код,
								П002020020103_1,
								"Лист02_2",
								ДополнительныеПараметры);
								
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("ПроцентыНачисленныеПоСт269", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020020103", "", "+", "!КО"+Счет9102.Код, П002020020103_2, "Лист02_2", ДополнительныеПараметры);
	
	// Строка 301 - Убытки прошлых налоговых периодов, выявленные в текущем отчетном (налоговом) периоде
	П002020030103 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет, БухИтоги917);
	СтраницаЛист02_2.П002020030103 = П002020030103;
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("ПрибыльУбытокПрошлыхЛет", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020030103",
								НСтр("ru = 'Строка 301 ""Убытки прошлых налоговых периодов, выявленные в текущем отчетном (налоговом) периоде""'"),
								"+",
								"!ДО"+Счет9102.Код,
								П002020030103,
								"Лист02_2",
								ДополнительныеПараметры);
	
	// Строка 302 - Суммы безнадежных долгов, а в случае, если налогоплательщик
	//              принял решение о создании резерва по сомнительным долгам,
	//              суммы безнадежных долгов, не покрытые за счет средств резерва
	П002020030203 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности, БухИтоги917);
	СтраницаЛист02_2.П002020030203 = П002020030203;
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("СписаниеДебиторскойКредиторскойЗадолженности",
																		 СписокПрочихДоходовИРасходов,
																		 Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020030203",
								НСтр("ru = 'Строка 302 ""Суммы безнадежных долгов""'"),
								"+",
								"!ДО"+Счет9102.Код,
								П002020030203,
								"Лист02_2",
								ДополнительныеПараметры);
	
   // Строка 300 - Убытки, приравненные к внереализационным расходам всего
    ПрочиеУбытки = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам, БухИтоги917); 
	П002020030003 = ПрочиеУбытки + П002020030103 + П002020030203;
	СтраницаЛист02_2.П002020030003 = П002020030003;
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("ПрибыльУбытокПрошлыхЛет", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020030003",
								НСтр("ru = 'Строка 300 ""Убытки, приравненные к внереализационным расходам - всего""'"),
								"+",
								"!ДО"+Счет9102.Код,
								П002020030103,
								"Лист02_2",
								ДополнительныеПараметры);
								
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("СписаниеДебиторскойКредиторскойЗадолженности",
																		 СписокПрочихДоходовИРасходов,
																		 Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020030003", "", "+", "!ДО"+Счет9102.Код, П002020030203, "Лист02_2", ДополнительныеПараметры);
	
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("ПрочиеУбыткиПриравненныеКВнереализационнымРасходам",
																		 СписокПрочихДоходовИРасходов,
																		 Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020030003", "", "+", "!ДО"+Счет9102.Код, ПрочиеУбытки, "Лист02_2", ДополнительныеПараметры);
	
	// Строка 200 - Внереализационные расходы
	П002020020003 = ?(БухИтоги917.Количество() = 0, 0, БухИтоги917.Итог("ДО")) - П002020030103 - П002020030203 - ПрочиеУбытки;
	СтраницаЛист02_2.П002020020003 = П002020020003;
	ВставитьРасшифровкуВнереализационныхДоходовРасходов(ТаблицаРасшифровки, Запрос, "П002020020003", "ДО", СписокПрочихДоходовИРасходов);
	
	// Строка 204 - Расходы на ликвидацию ОС
	П002020020403 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств, БухИтоги917);
	СтраницаЛист02_2.П002020020403 = П002020020403;
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("ЛиквидацияОсновныхСредств", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
		"П002020020403",
		НСтр("ru = 'Строка 204 ""Расходы на ликвидацию выводимых из эксплуатации основных средств, объектов незавершенного строительства и иного имущества""'"),
		"+",
		"!ДО"+Счет9102.Код,
		П002020020403,
		"Лист02_2",
		ДополнительныеПараметры);
	
	// Строка 205 - штрафы, пени и иные санкции за нарушение договорных или долговых обязательств
	П002020020503_1 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате, БухИтоги917);
	П002020020503_2 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.ВозмещениеУбытковКПолучениюУплате, БухИтоги917);
	СтраницаЛист02_2.П002020020503 = П002020020503_1 + П002020020503_2;
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("ШтрафыПениНеустойкиКПолучениюУплате", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002020020503",
								НСтр("ru = 'Строка 205 ""штрафы, пени и иные санкции за нарушение договорных или долговых обязательств""'"),
								"+",
								"!ДО"+Счет9102.Код,
								П002020020503_1,
								"Лист02_2",
								ДополнительныеПараметры);
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("ВозмещениеУбытковКПолучениюУплате", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002020020503", "", "+", "!ДО"+Счет9102.Код, П002020020503_2, "Лист02_2", ДополнительныеПараметры);
	
	#КонецОбласти
	
	#Область Лист02_3
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 3
	
	СтраницаЛист02_3 = Контейнер.Лист02_3[0].Данные[0].Значение;
	
	// Строка 030 - выручка от реализации амортизируемого имущества
	ВыручкаОтРеализацииОС  = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств, БухИтоги91);
	ВыручкаОтРеализацииНМА = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов, БухИтоги91);
	П002030003003 = ВыручкаОтРеализацииОС + ВыручкаОтРеализацииНМА;
	СтраницаЛист02_3.П002030003003 = П002030003003;
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияОсновныхСредств", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002030003003",
								НСтр("ru = 'Строка 030 ""Выручка от реализации амортизируемого имущества""'"),
								"+",
								"!КО"+Счет9101.Код,
								ВыручкаОтРеализацииОС,
								"Лист02_3",
								ДополнительныеПараметры);
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияНематериальныхАктивов", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030003003", "", "+", "!КО"+Счет9101.Код, ВыручкаОтРеализацииНМА, "Лист02_3", ДополнительныеПараметры);
	
	// Строка 040 - Остаточная стоимость реализованного амортизируемого имущества
	//              и расходы, связанные с его реализацией
	РасходыПоОС  = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств, БухИтоги91);  
	РасходыПоНМА = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов, БухИтоги91);
	ПереносУбытковПоОС  = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств, БухИтогиПереносУбытковПоОСиНМА);  
	ПереносУбытковПоНМА = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов, БухИтогиПереносУбытковПоОСиНМА);
	П002030004003 = РасходыПоОС - ПереносУбытковПоОС + РасходыПОНМА - ПереносУбытковПоНМА;
	СтраницаЛист02_3.П002030004003 = П002030004003;
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияОсновныхСредств", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
		"П002030004003",
		НСтр("ru = 'Строка 040 ""Остаточная стоимость реализованного амортизируемого имущества и расходы, связанные с его реализацией""'"),
		"+",
		"!ДО"+ПС.ПрочиеРасходы.Код,
		РасходыПоОС,
		"Лист02_3",
		ДополнительныеПараметры);
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияОсновныхСредств", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030004003", "", "-", "!КО"+ПС.ПрочиеРасходы.Код, -ПереносУбытковПоОС, "Лист02_3", ДополнительныеПараметры);
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияНематериальныхАктивов", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030004003", "", "+", "!КО"+ПС.ПрочиеРасходы.Код, РасходыПОНМА, "Лист02_3", ДополнительныеПараметры);
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияНематериальныхАктивов", СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П002030004003", "", "-", "!КО"+ПС.ПрочиеРасходы.Код, -ПереносУбытковПоНМА, "Лист02_3", ДополнительныеПараметры);
	
	// Строка 050 - Прибыль от реализации амортизируемого имущества (без учета сделок, по которым получены убытки)
	ПрибыльПоАмортИмуществу = ПрибылиИУбытки(Запрос, ПС.ПрочиеДоходы, ПС.ПрочиеРасходы, ПрочиеДоходыИРасходы.РеализацияОсновныхСредств, "Прибыль")
					+ ПрибылиИУбытки(Запрос, ПС.ПрочиеДоходы, ПС.ПрочиеРасходы, ПрочиеДоходыИРасходы.РеализацияНематериальныхАктивов, "Прибыль");
	СтраницаЛист02_3.П002030005003 = ПрибыльПоАмортИмуществу;
	
	// Строка 060 - Убытки от реализации амортизируемого имущества (без учета сделок, по которым получена прибыль)
	УбыткиПоАмортИмуществу = ПрибылиИУбытки(Запрос, ПС.ПрочиеДоходы, ПС.ПрочиеРасходы, ПрочиеДоходыИРасходы.РеализацияОсновныхСредств, "Убыток")
					+ ПрибылиИУбытки(Запрос, ПС.ПрочиеДоходы, ПС.ПрочиеРасходы, ПрочиеДоходыИРасходы.РеализацияНематериальныхАктивов, "Убыток");
	СтраницаЛист02_3.П002030006003 = УбыткиПоАмортИмуществу;
	
	ДоходыОказаниеФинансовыхУслуг      = БухИтогиНайти("КО", ПрочиеДоходыИРасходы.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, БухИтоги91);
	ДоходыПослеНаступленияСрокаПлатежа = БухИтогиНайти("КО", ПрочиеДоходыИРасходы.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа, БухИтоги91);
	ДоходыДоНаступленияСрокаПлатежа    = БухИтогиНайти("КО", ПрочиеДоходыИРасходы.РеализацияПраваТребованияДоНаступленияСрокаПлатежа, БухИтоги91);
	
	// Строка 100 - Выручка от реализации права требования до наступления срока платежа (п.1 ст. 279 НК)
	П002030010003 = ДоходыДоНаступленияСрокаПлатежа;
	СтраницаЛист02_3.П002030010003 = П002030010003;
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияПраваТребованияДоНаступленияСрокаПлатежа",
																		 СписокПрочихДоходовИРасходов,
																		 Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
		"П002030010003",
		НСтр("ru = 'Строка 100 ""Выручка от реализации права требования до наступления срока платежа (п.1 ст. 279 НК)""'"),
		"+",
		"!КО"+ПС.ПрочиеДоходы.Код,
		П002030010003,
		"Лист02_3",
		ДополнительныеПараметры);
	
	// Строка 110 - Выручка от реализации права требования после наступления срока платежа (п.1 ст. 279 НК)
	П002030011003 = ДоходыПослеНаступленияСрокаПлатежа;
	СтраницаЛист02_3.П002030011003 = П002030011003;
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияПраваТребованияПослеНаступленияСрокаПлатежа",
																		 СписокПрочихДоходовИРасходов,
																		 Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								"П002030011003",
								НСтр("ru = 'Строка 110 ""Выручка от реализации права требования после наступления срока платежа (п.1 ст. 279 НК)""'"),
								"+",
								"!КО"+ПС.ПрочиеДоходы.Код,
								П002030011003,
								"Лист02_3",
								ДополнительныеПараметры);
	
	// Строка 120 - Стоимость реализованного права требования  до наступления срока платежа (п.1 ст. 279 НК)
	П002030012003 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияДоНаступленияСрокаПлатежа, БухИтоги91);
	СтраницаЛист02_3.П002030012003 = П002030012003;
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияПраваТребованияДоНаступленияСрокаПлатежа",
																		 СписокПрочихДоходовИРасходов,
																		 Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
		"П002030012003",
		НСтр("ru = 'Строка 120 ""Стоимость реализованного права требования  до наступления срока платежа (п.1 ст. 279 НК)""'"),
		"+",
		"!ДО"+ПС.ПрочиеРасходы.Код,
		П002030012003,
		"Лист02_3",
		ДополнительныеПараметры);
	
	// Строка 130 - Стоимость реализованного права требования  до наступления срока платежа (п.1 ст. 279 НК)
	П002030013003 = БухИтогиНайти("ДО", ПрочиеДоходыИРасходы.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа, БухИтоги91);
	СтраницаЛист02_3.П002030013003 = П002030013003;
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов("РеализацияПраваТребованияПослеНаступленияСрокаПлатежа",
																		 СписокПрочихДоходовИРасходов,
																		 Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
		"П002030013003",
		НСтр("ru = 'Строка 130 ""Стоимость реализованного права требования  до наступления срока платежа (п.1 ст. 279 НК)""'"),
		"+",
		"!ДО"+ПС.ПрочиеРасходы.Код,
		П002030013003,
		"Лист02_3",
		ДополнительныеПараметры);
	
	Запрос.УстановитьПараметр("Счет",         ПС.ПрочиеРасходы);
	Запрос.УстановитьПараметр("ВидРасходов",  ПолучитьМассивВнереализационныхРасходов());
	Запрос.УстановитьПараметр("КорСчет",      ПС.ПрочиеРасходы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаНУОборотДт КАК СуммаОборотДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет = &Счет,
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|						ТОГДА ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов В (&ВидДоходовРасходов)
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|						ТОГДА ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов В (&ВидДоходовРасходов)
	|					ИНАЧЕ
	|						ЛОЖЬ
	|				КОНЕЦ,
	|			КорСчет = &КорСчет,
	|			) КАК ХозрасчетныйОбороты";
	БухИтоги170 = Запрос.Выполнить().Выгрузить();
	
	// Строка 170 - убыток от реализации права требования, относящийся к внереализационным расходам текущего отчетного (налогового) периода (включается в строку 200 Приложения № 2 к Листу 02)			
	П002030017003 = БухИтоги170.Итог("СуммаОборотДт");
	СтраницаЛист02_3.П002030017003 = П002030017003; 
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
		"П002030017003",
		НСтр("ru = 'Строка 170 ""Убыток от реализации права требования, относящийся к внереализационным расходам текущего отчетного (налогового) периода""'"),
		"+",
		"!ОБ"+ПС.ПрочиеРасходы.Код+" "+ПС.ПрочиеРасходы.Код,
		П002030017003,
		"Лист02_3");
	
	ИмяТекущегоДохода = "РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств";
	// Строка 180 - Выручка от реализации товаров (работ, услуг), имущественных прав по			
	//              объектам обслуживающих производств и хозяйств, включая объекты жилищно-коммунальной и социально-культурной сферы			
	П002030018003 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов[ИмяТекущегоДохода], БухИтоги91); 
	СтраницаЛист02_3.П002030018003 = П002030018003;
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов(ИмяТекущегоДохода, СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
		"П002030018003",
		НСтр("ru = 'Строка 180 ""Выручка от реализации товаров (работ, услуг), имущественных прав по объектам обслуживающих производств и хозяйств""'"),
		"+",
		"!КО"+ПС.ПрочиеРасходы.Код,
		П002030018003,
		"Лист02_3",
		ДополнительныеПараметры);
	
	// Строка 190 - Расходы, понесенные обслуживающими производствами и хозяйствами при реализации ими товаров (работ, услуг), имущественных прав в текущем отчетном (налоговом) периоде
	П002030019003 = БухИтогиНайти("ДО", Перечисления.ВидыПрочихДоходовИРасходов[ИмяТекущегоДохода], БухИтоги91); 
	СтраницаЛист02_3.П002030019003 = П002030019003;
	ДополнительныеПараметры = ДопПараметрыСубконтоПрочихДоходовИРасходов(ИмяТекущегоДохода, СписокПрочихДоходовИРасходов, Ложь);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
		"П002030019003",
		НСтр("ru = 'Строка 190 ""Расходы, понесенные обслуживающими производствами и хозяйствами""'"),
		"+",
		"!ДО"+ПС.ПрочиеРасходы.Код,
		П002030019003,
		"Лист02_3",
		ДополнительныеПараметры);
		
	#КонецОбласти
	
	#Область Лист02_4
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 4
	
	СтраницаЛист02_4 = Контейнер.Лист02_4[0].Данные[0].Значение;
	
	Если Месяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета) = 3 Или Месяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета) = 12 Тогда
		Запрос.УстановитьПараметр("Счет",         ПС.РасходыБудущихПериодов);
		Запрос.УстановитьПараметр("КорСчет",      ПС.ПрибылиИУбыткиНеЕНВД);
		Запрос.УстановитьПараметр("ВидРБП",       Перечисления.ВидыРБП.УбыткиПрошлыхЛет);
		Запрос.УстановитьПараметр("ВидСубконто",  ВидСубконтоРБП);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	0 КАК КО,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК Субконто1,
		|	0 КАК СуммаНачальныйОстатокДт,
		|	0 КАК СуммаКонечныйОстатокДт
		|ГДЕ
		|	ЛОЖЬ";
		УбыткиПрошлыхЛет = Запрос.Выполнить().Выгрузить();
		
		П1997 = 0;
		П1998 = 0;
		П1999 = 0;
		П2000 = 0;
		П2001 = 0;
		П2002 = 0;
		П2003 = 0;
		П2004 = 0;
		П2005 = 0;
		П2006 = 0;
		П2007 = 0;
		П2008 = 0;
		П2009 = 0;
		П2010 = 0;
		П2011 = 0;
		
		О1997 = 0;
		О1998 = 0;
		О1999 = 0;
		О2000 = 0;
		О2001 = 0;
		О2002 = 0;
		О2003 = 0;
		О2004 = 0;
		О2005 = 0;
		О2006 = 0;
		О2007 = 0;
		О2008 = 0;
		О2009 = 0;
		О2010 = 0;
		О2011 = 0;
		
		Для Каждого УбытокПрошлыхЛет Из УбыткиПрошлыхЛет Цикл
			
			ГодУбытка = Год(ПараметрыОтчета.мДатаНачалаПериодаОтчета) - 1;
			СуммаСписанногоУбытка   = УбытокПрошлыхЛет.СуммаНачальныйОстатокДт;
			СуммаНеСписанногоУбытка = УбытокПрошлыхЛет.СуммаКонечныйОстатокДт;
			Если ГодУбытка = 2002 Тогда
				П2002 = СуммаСписанногоУбытка; РБП2002 = УбытокПрошлыхЛет.Субконто1;
				О2002 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2003 Тогда
				П2003 = СуммаСписанногоУбытка; РБП2003 = УбытокПрошлыхЛет.Субконто1;
				О2003 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2004 Тогда
				П2004 = СуммаСписанногоУбытка; РБП2004 = УбытокПрошлыхЛет.Субконто1;
				О2004 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2005 Тогда
				П2005 = СуммаСписанногоУбытка; РБП2005 = УбытокПрошлыхЛет.Субконто1;
				О2005 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2006 Тогда
				П2006 = СуммаСписанногоУбытка; РБП2006 = УбытокПрошлыхЛет.Субконто1;
				О2006 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2007 Тогда
				П2007 = СуммаСписанногоУбытка; РБП2007 = УбытокПрошлыхЛет.Субконто1;
				О2007 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2008 Тогда
				П2008 = СуммаСписанногоУбытка; РБП2008 = УбытокПрошлыхЛет.Субконто1;
				О2008 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2009 Тогда
				П2009 = СуммаСписанногоУбытка; РБП2009 = УбытокПрошлыхЛет.Субконто1;
				О2009 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2010 Тогда
				П2010 = СуммаСписанногоУбытка; РБП2010 = УбытокПрошлыхЛет.Субконто1;
				О2010 = СуммаНеСписанногоУбытка;
			ИначеЕсли ГодУбытка = 2011 Тогда
				П2011 = СуммаСписанногоУбытка; РБП2011 = УбытокПрошлыхЛет.Субконто1;
				О2011 = СуммаНеСписанногоУбытка;
			КонецЕсли;
		КонецЦикла;
		
		Если П2002 <> 0 Тогда
			СтраницаЛист02_4.П002040004001 = "2002";
			СтраницаЛист02_4.П002040004003 = П2002;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
				"П002040004003",
				НСтр("ru = 'Сумма убытка, полученного в 2002 году'"),
				"+",
				"!СНД"+ПС.РасходыБудущихПериодов.Код,
				П2002,
				"Лист02_4",
				ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоРБП, РБП2002));
		КонецЕсли;
		
		Если П2003 <> 0 Тогда
			СтраницаЛист02_4.П002040005001 = "2003";
			СтраницаЛист02_4.П002040005003 = П2003;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
				"П002040005003",
				НСтр("ru = 'Сумма убытка, полученного в 2003 году'"),
				"+",
				"!СНД"+ПС.РасходыБудущихПериодов.Код,
				П2003,
				"Лист02_4",
				ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоРБП, РБП2003));
		КонецЕсли;
		
		Если П2004 <> 0 Тогда
			СтраницаЛист02_4.П002040006001 = "2004";
			СтраницаЛист02_4.П002040006003 = П2004;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
				"П002040006003",
				НСтр("ru = 'Сумма убытка, полученного в 2004 году'"),
				"+",
				"!СНД"+ПС.РасходыБудущихПериодов.Код,
				П2004,
				"Лист02_4",
				ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоРБП, РБП2004));
		КонецЕсли;
		
		Если П2005 <> 0 Тогда
			СтраницаЛист02_4.П002040007001 = "2005";
			СтраницаЛист02_4.П002040007003 = П2005;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
				"П002040007003",
				НСтр("ru = 'Сумма убытка, полученного в 2005 году'"),
				"+",
				"!СНД"+ПС.РасходыБудущихПериодов.Код,
				П2005,
				"Лист02_4",
				ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоРБП, РБП2005));
		КонецЕсли;
		
		Если П2006 <> 0 Тогда
			СтраницаЛист02_4.П002040008001 = "2006";
			СтраницаЛист02_4.П002040008003 = П2006;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
				"П002040008003",
				НСтр("ru = 'Сумма убытка, полученного в 2006 году'"),
				"+",
				"!СНД"+ПС.РасходыБудущихПериодов.Код,
				П2006,
				"Лист02_4",
				ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоРБП, РБП2006));
		КонецЕсли;
		
		Если П2007 <> 0 Тогда
			СтраницаЛист02_4.П002040009001 = "2007";
			СтраницаЛист02_4.П002040009003 = П2007;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
				"П002040009003",
				НСтр("ru = 'Сумма убытка, полученного в 2007 году'"),
				"+",
				"!СНД"+ПС.РасходыБудущихПериодов.Код,
				П2007,
				"Лист02_4",
				ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоРБП, РБП2007));
		КонецЕсли;
		
		Если П2008 <> 0 Тогда
			СтраницаЛист02_4.П002040010001 = "2008";
			СтраницаЛист02_4.П002040010003 = П2008;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
				"П002040010003",
				НСтр("ru = 'Сумма убытка, полученного в 2008 году'"),
				"+",
				"!СНД"+ПС.РасходыБудущихПериодов.Код,
				П2008,
				"Лист02_4",
				ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоРБП, РБП2008));
		КонецЕсли;
		
		Если П2009 <> 0 Тогда
			СтраницаЛист02_4.П002040011001 = "2009";
			СтраницаЛист02_4.П002040011003 = П2009;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
				"П002040011003",
				НСтр("ru = 'Сумма убытка, полученного в 2009 году'"),
				"+",
				"!СНД"+ПС.РасходыБудущихПериодов.Код,
				П2009,
				"Лист02_4",
				ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоРБП, РБП2009));
		КонецЕсли;
		
		Если П2010 <> 0 Тогда
			СтраницаЛист02_4.П002040012001 = "2010";
			СтраницаЛист02_4.П002040012003 = П2010;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
				"П002040012003",
				НСтр("ru = 'Сумма убытка, полученного в 2010 году'"),
				"+",
				"!СНД"+ПС.РасходыБудущихПериодов.Код,
				П2010,
				"Лист02_4",
				ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоРБП, РБП2010));
		КонецЕсли;
		
		Если П2011 <> 0 Тогда
			СтраницаЛист02_4.П002040013001 = "2011";
			СтраницаЛист02_4.П002040013003 = П2011;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
				"П002040013003",
				НСтр("ru = 'Сумма убытка, полученного в 2011 году'"),
				"+",
				"!СНД"+ПС.РасходыБудущихПериодов.Код,
				П2011,
				"Лист02_4",
				ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоРБП, РБП2011));
		КонецЕсли;
		
		// Строка 150 - Сумма убытка или части убытка, уменьшающего   
		//              налоговую базу за отчетный  (налоговый)  период
		СуммаПоСтроке050Листа02 = 0;
		СуммаПоСтроке140Листа02 = 0;
		СуммаПоСтроке120Листа05 = 0;
		СуммаПоСтроке120Листа06 = 0;
		СуммаПоСтроке230Листа07 = 0;
		СуммаПоСтроке110Листа08 = 0;
		СуммаПоСтроке590Листа09 = 0;
		
		П002040015003 =  УбыткиПрошлыхЛет.Итог("КО");
		СтраницаЛист02_4.П002040015003 = П002040015003;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
			"П002040015003",
			НСтр("ru = 'Сумма убытка или части убытка, уменьшающего налоговую базу за отчетный (налоговый) период'"),
			"+",
			"!КО"+ПС.РасходыБудущихПериодов.Код,
			П002040015003,
			"Лист02_4");
		
		// Строка 160 -    сумма неперенесенного убытка	
		П002040016003 = УбыткиПрошлыхЛет.Итог("СуммаКонечныйОстатокДт");
		СтраницаЛист02_4.П002040016003 = П002040016003;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
			"П002040016003",
			НСтр("ru = 'неперенесенного убытка'"),
			"+",
			"!СКД"+ПС.РасходыБудущихПериодов.Код,
			П002040016003,
			"Лист02_4");
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Лист02_5
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 5
	
	НалоговыйУчетОбособленныхПодразделений.ЗаполнитьЛист2Приложение5ДекларацииПоПрибыли(Контейнер, ПараметрыОтчета, СписокОрганизаций, Контейнер.Лист02_5);
	
	#КонецОбласти
	
	// Сохраняем таблицу расшифровок во временном хранилище в привязке к уникальному идентификатору формы
	ПараметрыОтчета.АдресВременногоХранилищаРасшифровки = ПоместитьВоВременноеХранилище(ТаблицаРасшифровки, ПараметрыОтчета.УникальныйИдентификаторФормы);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетПрибыльФормаОтчета2015Кв1(ПараметрыОтчета, Контейнер, ТаблицаРасшифровки, ИДРедакцииОтчета) Экспорт
	
	// В основном, код этой процедуры скопирован из ЗаполнитьОтчетПрибыльФормаОтчета2013Кв4.
	// Такой код отличается номерами ячеек.
	// Кроме того, заполнение отдельных строк выполняется только в налоговых периодах до 2015 года.
	// Остальные изменения следует вносить одновременно в ЗаполнитьОтчетПрибыльФормаОтчета2015Кв1() и ЗаполнитьОтчетПрибыльФормаОтчета2013Кв4()
	
	// С декабря 2016 года (ИДРедакцииОтчета = "ФормаОтчета2016Кв4") исключена строка 107 Приложения №1 к листу 02
	
	// Приложения 2, 3, 5 к Листу 02 заполняются в модуле НалогНаПрибыльДекларация
		
	ПС = ПланыСчетов.Хозрасчетный;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаНач",           ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("ДатаКон",           ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	СписокОрганизаций = ВсяОрганизация(ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	
	СоздатьДолиЕНВД(
		Запрос.МенеджерВременныхТаблиц, 
		Запрос.Параметры.ДатаНач, 
		Запрос.Параметры.ДатаКон, 
		Запрос.Параметры.СписокОрганизаций);
	
	Запрос.УстановитьПараметр("СчетаПрочиеДоходыИРасходы",         	
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПС.ПрочиеДоходыИРасходы));
	
	МассивНеЕНВД = Новый Массив;
	МассивНеЕНВД.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения);
	МассивНеЕНВД.Добавить(Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
	Запрос.УстановитьПараметр("МассивНеЕНВД",  МассивНеЕНВД);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов
	|	КОНЕЦ КАК ВидПрочихДоходовИРасходов,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидДеятельностиДляНалоговогоУчетаЗатрат 
	|																		= ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|					ИЛИ ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидДеятельностиДляНалоговогоУчетаЗатрат 
	|																			= ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА 1 - ЕСТЬNULL(ДолиЕНВД.ДоляЕНВД, 0)
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДебетовыйОборот,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт * ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидДеятельностиДляНалоговогоУчетаЗатрат 
	|																		= ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|					ИЛИ ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидДеятельностиДляНалоговогоУчетаЗатрат 
	|																			= ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|				ТОГДА 1 - ЕСТЬNULL(ДолиЕНВД.ДоляЕНВД, 0)
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КредитовыйОборот
	|ПОМЕСТИТЬ ТаблицаПрочиеДоходыРасходыНеЕНВД
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеДоходыИРасходы)),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы),
	|			Организация В (&СписокОрганизаций)
	|				И (ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД)
	|					ИЛИ ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидДеятельностиДляНалоговогоУчетаЗатрат В (&МассивНеЕНВД)),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов
	|	КОНЕЦ";
	Запрос.Выполнить();	
	
	// таблица итогов по всем счетам без анлитики
	Запрос.УстановитьПараметр("Счет41",  ПС.Товары);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаНУОборотДт КАК ДО,
	|	ХозрасчетныйОбороты.СуммаНУОборотКт КАК КО,
	|	ХозрасчетныйОбороты.Счет КАК Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , , , Организация В (&СписокОрганизаций), , ) КАК ХозрасчетныйОбороты
	|
	|ИТОГИ
	|	СУММА(ДО),
	|	СУММА(КО)
	|ПО
	|	Счет ИЕРАРХИЯ";	
	
	БухИтоги = Запрос.Выполнить().Выгрузить();
	
	// прочие доходы и расходы
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД.ВидПрочихДоходовИРасходов КАК Счет,
	|	СУММА(ТаблицаПрочиеДоходыРасходыНеЕНВД.ДебетовыйОборот) КАК ДО,
	|	СУММА(ТаблицаПрочиеДоходыРасходыНеЕНВД.КредитовыйОборот) КАК КО
	|ИЗ
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД КАК ТаблицаПрочиеДоходыРасходыНеЕНВД
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПрочиеДоходыРасходыНеЕНВД.ВидПрочихДоходовИРасходов";
	
	БухИтоги91 = Запрос.Выполнить().Выгрузить();
	
	// внереализационные доходы и расходы
	Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ВидРасходов",  ПолучитьМассивВнереализационныхРасходов());
	Запрос.УстановитьПараметр("Распределяемые", Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов
	|	КОНЕЦ КАК Счет,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|						И ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидДеятельностиДляНалоговогоУчетаЗатрат = &Распределяемые
	|					ИЛИ ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|						И ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидДеятельностиДляНалоговогоУчетаЗатрат = &Распределяемые
	|				ТОГДА 1 - ДолиЕНВД.ДоляЕНВД
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК ДО,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК КО
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В (&СчетаПрочиеДоходыИРасходы),
	|			&ВидСубконто,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|						ТОГДА ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|						ТОГДА ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|				КОНЕЦ В (&МассивНеЕНВД)
	|				И ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|						ТОГДА ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|						ТОГДА ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов
	|				КОНЕЦ В (&ВидРасходов),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов
	|	КОНЕЦ";
	
	
	БухИтоги917 = Запрос.Выполнить().Выгрузить();
	
	Запрос.УстановитьПараметр("Счет",  ПС.ПрочиеДоходы);
	Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	
	МассивЗапасовНУ = Новый Массив;
	МассивЗапасовНУ.Добавить(ПС.ВложенияВоВнеоборотныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.ОСвОрганизации);
	МассивЗапасовНУ.Добавить(ПС.ДоходныеВложенияВ_МЦ);
	МассивЗапасовНУ.Добавить(ПС.НематериальныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.АмортизацияОсновныхСредств);
	МассивЗапасовНУ.Добавить(ПС.АмортизацияНематериальныхАктивов);
	МассивЗапасовНУ.Добавить(ПС.ОборудованиеКУстановке);
	МассивЗапасовНУ.Добавить(ПС.ВложенияВоВнеоборотныеАктивы);
	МассивЗапасовНУ.Добавить(ПС.Материалы);
	МассивЗапасовНУ.Добавить(ПС.Полуфабрикаты);
	МассивЗапасовНУ.Добавить(ПС.Товары);
	МассивЗапасовНУ.Добавить(ПС.ТоварыОтгруженные);
	МассивЗапасовНУ.Добавить(ПС.ГотоваяПродукция);
	
	Запрос.УстановитьПараметр("КорСчет",  МассивЗапасовНУ);
	Запрос.УстановитьПараметр("ВидРасходов", Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_СчетаЗапасовНУ
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&КорСчет)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|ВЫБРАТЬ
	|	ЕстьNULL(СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),0) КАК КО
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			Счет = &Счет,
	|			,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|						ТОГДА ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов В (&ВидРасходов)
	|					КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|						ТОГДА ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов В (&ВидРасходов)
	|				КОНЕЦ,
	|			КорСчет В
	|				(ВЫБРАТЬ
	|					ВТ_СчетаЗапасовНУ.Счет
	|				ИЗ
	|					ВТ_СчетаЗапасовНУ),
	|			) КАК ХозрасчетныйОбороты";
	
	БухИтоги911_Излишки = Запрос.Выполнить().Выгрузить().Итог("КО");
	
	// Состав справочников "Статьи затрат" и "Прочие доходы и расходы" по видам затрат для расшифровки 
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка КАК Ссылка,
	|	СтатьиЗатрат.ВидРасходов КАК ВидЗатрат
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиЗатрат
	|
	|ГДЕ
	|	НЕ СтатьиЗатрат.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ПустаяСсылка)
	|ИТОГИ ПО
	|	ВидЗатрат,
	|	Ссылка";
	
	Результат = Запрос.Выполнить();
	СписокСтатейЗатрат = Новый ТаблицаЗначений;
	СписокСтатейЗатрат.Колонки.Добавить("Счет");
	СписокСтатейЗатрат.Колонки.Добавить("СписокЗатрат");
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидЗатрат");
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		СтрокаСписокСтатейЗатрат = СписокСтатейЗатрат.Добавить();
		СтрокаСписокСтатейЗатрат.Счет = ВыборкаВидовЗатрат.ВидЗатрат;
		СтрокаСписокСтатейЗатрат.СписокЗатрат = Новый СписокЗначений;
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		Пока Выборка.Следующий() Цикл
			СтрокаСписокСтатейЗатрат.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПрочиеДоходыИРасходы.Ссылка КАК Ссылка,
	|	ПрочиеДоходыИРасходы.ВидПрочихРасходов КАК ВидПрочихДоходовИРасходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК ПрочиеДоходыИРасходы
	|
	|ГДЕ
	|	НЕ ПрочиеДоходыИРасходы.ВидПрочихРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеДоходыИРасходы.Ссылка,
	|	ПрочиеДоходыИРасходы.ВидПрочихДоходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиДоходов КАК ПрочиеДоходыИРасходы
	|ГДЕ
	|	НЕ ПрочиеДоходыИРасходы.ВидПрочихДоходов = ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)
	|ИТОГИ ПО
	|	ВидПрочихДоходовИРасходов,
	|	Ссылка";
	Результат = Запрос.Выполнить();
	СписокПрочихДоходовИРасходов = Новый ТаблицаЗначений;
	СписокПрочихДоходовИРасходов.Колонки.Добавить("Счет");
	СписокПрочихДоходовИРасходов.Колонки.Добавить("СписокЗатрат");
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидПрочихДоходовИРасходов");
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		СтрокаСписокПрочихДоходовИРасходов = СписокПрочихДоходовИРасходов.Добавить();
		СтрокаСписокПрочихДоходовИРасходов.Счет = ВыборкаВидовЗатрат.ВидПрочихДоходовИРасходов;
		СтрокаСписокПрочихДоходовИРасходов.СписокЗатрат = Новый СписокЗначений;
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		Пока Выборка.Следующий() Цикл
			СтрокаСписокПрочихДоходовИРасходов.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЦикла;	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходыБудущихПериодов.Ссылка КАК Ссылка,
	|	РасходыБудущихПериодов.ВидРБП КАК Вид
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК РасходыБудущихПериодов
	|ГДЕ
	|	РасходыБудущихПериодов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов)
	|ИТОГИ ПО
	|	Вид,
	|	Ссылка";
	Результат = Запрос.Выполнить();
	СписокРБП = Новый ТаблицаЗначений;
	СписокРБП.Колонки.Добавить("Счет");
	СписокРБП.Колонки.Добавить("СписокЗатрат");
	ВыборкаВидовЗатрат = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Вид");
	Пока ВыборкаВидовЗатрат.Следующий() Цикл
		СтрокаСписокРБП = СписокРБП.Добавить();
		СтрокаСписокРБП.Счет = ВыборкаВидовЗатрат.Вид;
		СтрокаСписокРБП.СписокЗатрат = Новый СписокЗначений;
		Выборка = ВыборкаВидовЗатрат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Ссылка");
		Пока Выборка.Следующий() Цикл
			СтрокаСписокРБП.СписокЗатрат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	КонецЦикла;	
	
	#Область Лист02_1
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 1
	
	СтраницаЛист02_1 = Контейнер.Лист02_1[0].Данные[0].Значение;
	
	Счет9101 = ПС.ПрочиеДоходы;
	Счет9102 = ПС.ПрочиеРасходы;
	
	ВидСубконтоСтатьиЗатрат = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат;
	ВидСубконтоРБП 			= ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов;

	ВидыСубконто = Новый Массив;
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
	Запрос.УстановитьПараметр("ВидыСубконто", ВидыСубконто);
	Запрос.УстановитьПараметр("СчетаВыручкаНеЕНВД", 
		БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПС.ВыручкаНеЕНВД));
		
	СчетаУчетаПродукции = Новый Массив;
	СчетаУчетаПродукции.Добавить(ПланыСчетов.Хозрасчетный.ГотоваяПродукция); //43
	СчетаУчетаПродукции.Добавить(ПланыСчетов.Хозрасчетный.Полуфабрикаты);    //21
	СчетаУчетаПродукции.Добавить(ПланыСчетов.Хозрасчетный.ГотоваяПродукцияОтгруженная); //45.02
	Запрос.УстановитьПараметр("СчетаУчетаПродукции", СчетаУчетаПродукции);
	
	ИспользоватьГруппыФинансовогоУчетаНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьГруппыФинансовогоУчета");
	Запрос.УстановитьПараметр("ИспользоватьГруппыФинансовогоУчетаНоменклатуры", ИспользоватьГруппыФинансовогоУчетаНоменклатуры);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Регистратор КАК Регистратор,
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ХозрасчетныйОбороты.СуммаНУОборотКт КАК СуммаДохода,
	|	ВЫБОР
	|		КОГДА &ИспользоватьГруппыФинансовогоУчетаНоменклатуры
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ГруппыФинансовогоУчетаНоменклатуры)
	|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто2 КАК Справочник.Номенклатура)
	|	КОНЕЦ КАК ЗначениеСубконто
	|ПОМЕСТИТЬ Выручка
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Регистратор,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыручкаНеЕНВД)),
	|			&ВидыСубконто,
	|			Организация В (&СписокОрганизаций),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Выручка.Регистратор КАК Регистратор,
	|	Выручка.Регистратор КАК ДокументРеализации
	|ПОМЕСТИТЬ ДокументыРеализации
	|ИЗ
	|	Выручка КАК Выручка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Выручка.Регистратор КАК Регистратор,
	|	ВЫРАЗИТЬ(Выручка.Регистратор КАК Документ.КорректировкаРеализации).ДокументОснование КАК ДокументРеализации
	|ИЗ
	|	Выручка КАК Выручка
	|ГДЕ
	|	Выручка.Регистратор ССЫЛКА Документ.КорректировкаРеализации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРеализации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияССубконто.Регистратор КАК ДокументРеализации,
	|	ВЫБОР 
	|		КОГДА ДвиженияССубконто.СубконтоКт1 ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ДвиженияССубконто.СубконтоКт1
	|		КОГДА ДвиженияССубконто.СубконтоКт2 ССЫЛКА Справочник.Номенклатура
	|			ТОГДА ДвиженияССубконто.СубконтоКт2              
	|		КОГДА ДвиженияССубконто.СубконтоКт3 ССЫЛКА Справочник.Номенклатура 
	|			ТОГДА ДвиженияССубконто.СубконтоКт3
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	КОНЕЦ КАК Номенклатура
	|ПОМЕСТИТЬ ДокументыРеализацииПродукции
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			,
	|			,
	|			Регистратор В (
	|				ВЫБРАТЬ
	|					ДокументыРеализации.ДокументРеализации
	|				ИЗ
	|					ДокументыРеализации КАК ДокументыРеализации)
	|				И Организация В (&СписокОрганизаций)
	|				И СчетДт В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД))
	|				И СчетКт В (&СчетаУчетаПродукции),
	|			,
	|			) КАК ДвиженияССубконто
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРеализации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыРеализации.Регистратор,
	|	ДокументыРеализацииПродукции.Номенклатура
	|ПОМЕСТИТЬ РегистраторыРеализацииПродукции
	|ИЗ
	|	ДокументыРеализацииПродукции КАК ДокументыРеализацииПродукции
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ДокументыРеализации КАК ДокументыРеализации
	|	ПО
	|		ДокументыРеализацииПродукции.ДокументРеализации = ДокументыРеализации.ДокументРеализации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(Выручка.СуммаДохода, 0)) КАК СуммаДохода,
	|	Выручка.ЗначениеСубконто КАК ЗначениеСубконто,
	|	ВЫБОР
	|		КОГДА НЕ РеализацияПродукции.Номенклатура ЕСТЬ NULL 
	|				ИЛИ Выручка.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СобственнаяПродукция
	|ИЗ
	|	Выручка КАК Выручка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистраторыРеализацииПродукции КАК РеализацияПродукции
	|		ПО Выручка.Регистратор = РеализацияПродукции.Регистратор
	|			И Выручка.Номенклатура = РеализацияПродукции.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	Выручка.ЗначениеСубконто,
	|	ВЫБОР
	|		КОГДА НЕ РеализацияПродукции.Номенклатура ЕСТЬ NULL 
	|				ИЛИ Выручка.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ";
	
	ВыборкаДоходПродукция = Запрос.Выполнить().Выбрать();
	// Строка 011 - выручка от реализации товаров (работ, услуг) собственного производства
	ЗаголовокРасшифровкиСтроки011 = НСтр("ru = 'Строка 011 ""Выручка от реализации товаров (работ, услуг) собственного производства""'");
	П002010001103 = 0;
	// Строка 012 - выручка от реализации покупных товаров
	ЗаголовокРасшифровкиСтроки012 = НСтр("ru = 'Строка 012 - ""Выручка от реализации покупных товаров""'");
	П002010001203 = 0;
	
	ВидыСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные;
	ВидСубконтоРасшифровки = ?(ИспользоватьГруппыФинансовогоУчетаНоменклатуры, ВидыСубконто.НоменклатурныеГруппы, ВидыСубконто.Номенклатура);
	
	Пока ВыборкаДоходПродукция.Следующий() Цикл
				
		Если ВыборкаДоходПродукция.СобственнаяПродукция Тогда
			П002010001103 = П002010001103 + ВыборкаДоходПродукция.СуммаДохода;
		Иначе
			П002010001203 = П002010001203 + ВыборкаДоходПродукция.СуммаДохода;			
		КонецЕсли;
			
		// Заполним данные расшифровки:
		ИмяПоказателя = ?(ВыборкаДоходПродукция.СобственнаяПродукция, "П000210001103", "П000210001203");
		ЗаголовокРасшифровки = ?(ВыборкаДоходПродукция.СобственнаяПродукция, ЗаголовокРасшифровкиСтроки011, ЗаголовокРасшифровкиСтроки012);
		ЗначениеСубконто = ?(ЗначениеЗаполнено(ВыборкаДоходПродукция.ЗначениеСубконто), ВыборкаДоходПродукция.ЗначениеСубконто, "< не заполнено >");
		ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоРасшифровки, ВыборкаДоходПродукция.ЗначениеСубконто);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяПоказателя, ЗаголовокРасшифровки, "+",
			"!КО"+ПС.ВыручкаНеЕНВД.Код, ВыборкаДоходПродукция.СуммаДохода, "Лист02_1", ДополнительныеПараметры);
			
	КонецЦикла;
		
	СтраницаЛист02_1.П000210001103 = П002010001103;
	СтраницаЛист02_1.П000210001203 = П002010001203;
	
	Если П002010001103 = 0 Тогда // Данные расшифровки были не заполнены по этому показателю
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000210001103", ЗаголовокРасшифровкиСтроки011, "+", "!КО"+ПС.ВыручкаНеЕНВД.Код, 0, "Лист02_1");
	КонецЕсли;
	Если П002010001203 = 0 Тогда // Данные расшифровки были не заполнены по этому показателю
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000210001203", ЗаголовокРасшифровкиСтроки012, "+", "!КО"+ПС.ВыручкаНеЕНВД.Код, 0, "Лист02_1");
	КонецЕсли;
	
	// Строка 013 - выручка от реализации имущественных прав, за исключением доходов от реализации права требования
	П002010001303 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования, БухИтоги91);
	П002030007003 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг, БухИтоги91);
	СтраницаЛист02_1.П000210001303 = П002010001303 + П002030007003;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы, 
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210001303",
							  "Строка 013 ""Выручка от реализации от реализации имущественных прав""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002010001303,
							  "Лист02_1",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат", 
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210001303",
							  "Строка 013 ""Выручка от реализации от реализации имущественных прав""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002030007003,
							  "Лист02_1",
							  ДополнительныеПараметры);

	Если УбытокОтРеализацииПраваТребованияВключаетсяЕдиновременно(ПараметрыОтчета.мДатаНачалаПериодаОтчета) Тогда
		// Письмо ФНС от 25 июня 2015 г. N ГД-4-3/11053@
		// "Начиная с первого отчетного периода 2015 года в налоговой декларации по налогу на прибыль организаций ...
		// выручка от реализации права требования долга после наступления срока платежа
		// отражается по строке 013 Приложения 1 к Листу 02,
		// а стоимость реализованного товара (работ, услуг) - по строке 059 Приложения N 2 к Листу 02 налоговой декларации.
		// Таким образом, доходы и расходы от уступки права требования долга после наступления срока платежа
		// учитываются для целей налогообложения независимо от полученного финансового результата."
		РеализацияПраваТребованияПослеНаступленияСрокаПлатежа = БухИтогиНайти(
			"КО",
			Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа,
			БухИтоги91);
			
		СтраницаЛист02_1.П000210001303 = СтраницаЛист02_1.П000210001303 + РеализацияПраваТребованияПослеНаступленияСрокаПлатежа;
		
		ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(
			ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
			БухИтогиНайти("СписокЗатрат", 
				Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа,
				СписокПрочихДоходовИРасходов));
				
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								  "П000210001303",
								  "Строка 013 ""Выручка от реализации от реализации имущественных прав""",
								  "+",
								  "!КО"+ПС.ПрочиеДоходы.Код,
								  РеализацияПраваТребованияПослеНаступленияСрокаПлатежа,
								  "Лист02_1",
								  ДополнительныеПараметры);
	КонецЕсли;
							  
	// Строка 014 - выручка от реализации прочего имущества
	Доходы_ПрочееИмущество = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества, БухИтоги91);
	Доходы_ОбъектыСтроит = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОбъектовСтроительства, БухИтоги91);
	СтраницаЛист02_1.П000210001403 = Доходы_ПрочееИмущество + Доходы_ОбъектыСтроит;
	
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
										    БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210001403",
							  "Строка 014 ""Выручка от реализации прочего имущества""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  Доходы_ПрочееИмущество,
							  "Лист02_1",
							  ДополнительныеПараметры);
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОбъектовСтроительства,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210001403",
							  "",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  Доходы_ОбъектыСтроит,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 020 - выручка от реализации ценных бумаг профессиональных участников рынка
	СтраницаЛист02_1.П000210002003 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг, БухИтоги91);
	
	// Строка 100 - Внереализационные доходы всего
	СтраницаЛист02_1.П000210010003 = ?(БухИтоги917.Количество() = 0, 0, БухИтоги917.Итог("КО"));
	ВставитьРасшифровкуВнереализационныхДоходовРасходов(ТаблицаРасшифровки, Запрос, "П000210010003", "КО", СписокПрочихДоходовИРасходов);
	
	// Строка 101 - В виде дохода прошлых лет, выявленного в отчетном (налоговом) периоде
	П002010010103 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет, БухИтоги917);
	СтраницаЛист02_1.П000210010103 = П002010010103;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
											Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет,
											СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210010103",
							  "Строка 101 ""Доходы в виде дохода прошлых лет, выявленного в отчетном (налоговом) периоде""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002010010103,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 102 - доходы от ликвидации основных средств
	П002010010203 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств, БухИтоги917);
	СтраницаЛист02_1.П000210010203 = П002010010203;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210010203",
							  "Строка 102 ""Доходы от ликвидации основных средств""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код, П002010010203,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 103 - в виде безвозмездно полученного имущества (работ, услуг) или имущественных прав (кроме указанных в статье 251 НК)
	П002010010303 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав, БухИтоги917);
	СтраницаЛист02_1.П000210010303 = П002010010303;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210010303",
							  "Строка 103 ""Доходы от безвозмездного получения имущества""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код, П002010010303,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 104 - в виде излишков
	П002010010403 = БухИтоги911_Излишки;
	СтраницаЛист02_1.П000210010403 = П002010010403;
	
	// Строка 105 - в виде востановления аморт.премии
	П002010010503 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.ВосстановлениеАмортизационнойПремии, БухИтоги917);
	СтраницаЛист02_1.П000210010503 = П002010010503;
	ДополнительныеПараметры = 
	ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
											БухИтогиНайти("СписокЗатрат",
														  Перечисления.ВидыПрочихДоходовИРасходов.ВосстановлениеАмортизационнойПремии,
														  СписокПрочихДоходовИРасходов));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
							  "П000210010503",
							  "Строка 103 ""сумма восстановленных расходов на капитальные вложения в соответствии с абзацем четвертым пункта 9 статьи 258 НК""",
							  "+",
							  "!КО"+ПС.ПрочиеДоходы.Код,
							  П002010010503,
							  "Лист02_1",
							  ДополнительныеПараметры);
	
	// Строка 107 - в виде сумм корректировки прибыли до рыночных цен
	// С декабря 2016 года исключена из формы декларации
	Если ИДРедакцииОтчета = "ФормаОтчета2015Кв1" Тогда						  
							  
		П002010010703 = БухИтогиНайти("КО", Перечисления.ВидыПрочихДоходовИРасходов.КорректировкаПрибылиДоРыночныхЦен, БухИтоги917);
		СтраницаЛист02_1.П000210010703 = П002010010703;
		ДополнительныеПараметры = 
		ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
												БухИтогиНайти("СписокЗатрат",
															  Перечисления.ВидыПрочихДоходовИРасходов.КорректировкаПрибылиДоРыночныхЦен,
															  СписокПрочихДоходовИРасходов));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								  "П000210010703",
								  "Строка 107 ""сумма корректировки прибыли до рыночных цен""",
								  "+",
								  "!КО"+ПС.ПрочиеДоходы.Код,
								  П002010010703,
								  "Лист02_1",
								  ДополнительныеПараметры);
								  
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Лист02_2
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 2
	
	СтраницаЛист02_2 = Контейнер.Лист02_2[0].Данные[0].Значение;
	
	// Строка 131 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
	
	Запрос.УстановитьПараметр("СчетаОС",  БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПС.АмортизацияОсновныхСредств));
	Запрос.УстановитьПараметр("СчетаНМА", БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПС.АмортизацияНематериальныхАктивов));
	
	МетодНачисленияАмортизацииНУ = УчетнаяПолитика.МетодНачисленияАмортизацииНУ(ПараметрыОтчета.Организация, 
		ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	НелинейныйМетод = МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный;
	Запрос.УстановитьПараметр("НелинейныйМетод", НелинейныйМетод);
	СпособАмортизации = ?(НелинейныйМетод, "2", "1");
	
	Группы8_10 = Новый Массив;
	Группы8_10.Добавить(Перечисления.АмортизационныеГруппы.ВосьмаяГруппа);
	Группы8_10.Добавить(Перечисления.АмортизационныеГруппы.ДевятаяГруппа);
	Группы8_10.Добавить(Перечисления.АмортизационныеГруппы.ДесятаяГруппа);
	Запрос.УстановитьПараметр("Группы8_10",      Группы8_10);
	Запрос.УстановитьПараметр("ОтдельнаяГруппа", Перечисления.АмортизационныеГруппы.ОтдельнаяГруппа);
	
	ЗданияСооружения = Новый Массив;
	ЗданияСооружения.Добавить(Перечисления.ГруппыОС.Здания);
	ЗданияСооружения.Добавить(Перечисления.ГруппыОС.Сооружения);
	Запрос.УстановитьПараметр("ЗданияСооружения", ЗданияСооружения);
	
	Запрос.УстановитьПараметр("ЗатратыРаспределяемые",  Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
	Запрос.УстановитьПараметр("ЗатратыОсновнаяСистема", Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения);
	Запрос.УстановитьПараметр("ВидСубконтоСтатьиЗатрат",         ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	Запрос.УстановитьПараметр("ВидСубконтоПрочиеДоходыИРасходы", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатьиЗатрат.Ссылка КАК СтатьяРасходов,
	|	СтатьиЗатрат.ВидДеятельностиДляНалоговогоУчетаЗатрат = &ЗатратыРаспределяемые КАК Распределяется
	|ПОМЕСТИТЬ СтатьиРасходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиЗатрат
	|ГДЕ
	|	(СтатьиЗатрат.ВидДеятельностиДляНалоговогоУчетаЗатрат = &ЗатратыОсновнаяСистема
	|			ИЛИ СтатьиЗатрат.ВидДеятельностиДляНалоговогоУчетаЗатрат = &ЗатратыРаспределяемые)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СтатьиДоходов.Ссылка,
	|	СтатьиДоходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = &ЗатратыРаспределяемые
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиДоходов КАК СтатьиДоходов
	|ГДЕ
	|	(СтатьиДоходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = &ЗатратыОсновнаяСистема
	|			ИЛИ СтатьиДоходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = &ЗатратыРаспределяемые)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтатьяРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) КАК НачалоМесяца,
	|	ХозрасчетныйОбороты.КорСчет КАК КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1 КАК КорСубконто,
	|	ВЫБОР
	|		КОГДА &НелинейныйМетод
	|			ТОГДА ПервоначальныеСведенияОСБухгалтерскийУчет.АмортизационнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АмортизационнаяГруппа,
	|	ВЫБОР
	|		КОГДА &НелинейныйМетод
	|			ТОГДА ПервоначальныеСведенияОСБухгалтерскийУчет.ГруппаОС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ГруппаОС,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК АмортизацияОсновныхСредств,
	|	0 КАК АмортизацияНематериальныхАктивов
	|ПОМЕСТИТЬ ХозрасчетныйОбороты
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Месяц, Счет В (&СчетаОС), , Организация В (&СписокОрганизаций), , &ВидСубконтоСтатьиЗатрат) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК ПервоначальныеСведенияОСБухгалтерскийУчет
	|		ПО ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОбъектыЭксплуатации) = ПервоначальныеСведенияОСБухгалтерскийУчет.ОсновноеСредство
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ),
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫБОР
	|		КОГДА &НелинейныйМетод
	|			ТОГДА ПервоначальныеСведенияОСБухгалтерскийУчет.АмортизационнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &НелинейныйМетод
	|			ТОГДА ПервоначальныеСведенияОСБухгалтерскийУчет.ГруппаОС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ),
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫБОР
	|		КОГДА &НелинейныйМетод
	|			ТОГДА ПервоначальныеСведенияОСБухгалтерскийУчет.АмортизационнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &НелинейныйМетод
	|			ТОГДА ПервоначальныеСведенияОСБухгалтерскийУчет.ГруппаОС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт),
	|	0
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Месяц, Счет В (&СчетаОС), , Организация В (&СписокОрганизаций), , &ВидСубконтоПрочиеДоходыИРасходы) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК ПервоначальныеСведенияОСБухгалтерскийУчет
	|		ПО ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.ОбъектыЭксплуатации) = ПервоначальныеСведенияОСБухгалтерскийУчет.ОсновноеСредство
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ),
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫБОР
	|		КОГДА &НелинейныйМетод
	|			ТОГДА ПервоначальныеСведенияОСБухгалтерскийУчет.АмортизационнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &НелинейныйМетод
	|			ТОГДА ПервоначальныеСведенияОСБухгалтерскийУчет.ГруппаОС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ),
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫБОР
	|		КОГДА &НелинейныйМетод
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Месяц, Счет В (&СчетаНМА), , Организация В (&СписокОрганизаций), , &ВидСубконтоСтатьиЗатрат) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ),
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫБОР
	|		КОГДА &НелинейныйМетод
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ),
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫБОР
	|		КОГДА &НелинейныйМетод
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	НЕОПРЕДЕЛЕНО,
	|	0,
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, Месяц, Счет В (&СчетаНМА), , Организация В (&СписокОрганизаций), , &ВидСубконтоПрочиеДоходыИРасходы) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ),
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто1,
	|	ВЫБОР
	|		КОГДА &НелинейныйМетод
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК Справочник.НематериальныеАктивы).АмортизационнаяГруппа
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КорСубконто
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.НачалоМесяца,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто,
	|	ХозрасчетныйОбороты.АмортизационнаяГруппа,
	|	ХозрасчетныйОбороты.ГруппаОС,
	|	СтатьиРасходов.Распределяется,
	|	СУММА(ХозрасчетныйОбороты.АмортизацияОсновныхСредств) КАК АмортизацияОсновныхСредств,
	|	СУММА(ХозрасчетныйОбороты.АмортизацияНематериальныхАктивов) КАК АмортизацияНематериальныхАктивов
	|ПОМЕСТИТЬ СуммыАмортизацииНераспределенные
	|ИЗ
	|	ХозрасчетныйОбороты КАК ХозрасчетныйОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтатьиРасходов КАК СтатьиРасходов
	|		ПО ХозрасчетныйОбороты.КорСубконто = СтатьиРасходов.СтатьяРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.НачалоМесяца,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСубконто,
	|	ХозрасчетныйОбороты.АмортизационнаяГруппа,
	|	ХозрасчетныйОбороты.ГруппаОС,
	|	СтатьиРасходов.Распределяется
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.НачалоМесяца
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СуммыАмортизацииНераспределенные.НачалоМесяца,
	|	СуммыАмортизацииНераспределенные.КорСчет,
	|	СуммыАмортизацииНераспределенные.КорСубконто,
	|	СуммыАмортизацииНераспределенные.АмортизационнаяГруппа,
	|	СуммыАмортизацииНераспределенные.ГруппаОС,
	|	ВЫБОР
	|		КОГДА СуммыАмортизацииНераспределенные.Распределяется
	|			ТОГДА СуммыАмортизацииНераспределенные.АмортизацияОсновныхСредств * (1 - ДолиЕНВД.ДоляЕНВД)
	|		ИНАЧЕ СуммыАмортизацииНераспределенные.АмортизацияОсновныхСредств
	|	КОНЕЦ КАК АмортизацияОсновныхСредств,
	|	ВЫБОР
	|		КОГДА СуммыАмортизацииНераспределенные.Распределяется
	|			ТОГДА СуммыАмортизацииНераспределенные.АмортизацияНематериальныхАктивов * (1 - ДолиЕНВД.ДоляЕНВД)
	|		ИНАЧЕ СуммыАмортизацииНераспределенные.АмортизацияНематериальныхАктивов
	|	КОНЕЦ КАК АмортизацияНематериальныхАктивов
	|ПОМЕСТИТЬ Амортизация
	|ИЗ
	|	СуммыАмортизацииНераспределенные КАК СуммыАмортизацииНераспределенные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО СуммыАмортизацииНераспределенные.НачалоМесяца = ДолиЕНВД.МесяцЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Амортизация.КорСчет,
	|	Амортизация.КорСубконто,
	|	СУММА(Амортизация.АмортизацияОсновныхСредств) КАК АмортизацияОсновныхСредств,
	|	СУММА(Амортизация.АмортизацияНематериальныхАктивов) КАК АмортизацияНематериальныхАктивов,
	|	СУММА(ВЫБОР
	|			КОГДА Амортизация.АмортизационнаяГруппа В (&Группы8_10)
	|						И Амортизация.ГруппаОС В (&ЗданияСооружения)
	|					ИЛИ Амортизация.АмортизационнаяГруппа = &ОтдельнаяГруппа
	|				ТОГДА Амортизация.АмортизацияОсновныхСредств
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК АмортизацияОсновныхСредств8_10,
	|	СУММА(ВЫБОР
	|			КОГДА Амортизация.АмортизационнаяГруппа В (&Группы8_10)
	|					ИЛИ Амортизация.АмортизационнаяГруппа = &ОтдельнаяГруппа
	|				ТОГДА Амортизация.АмортизацияНематериальныхАктивов
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК АмортизацияНематериальныхАктивов8_10
	|ИЗ
	|	Амортизация КАК Амортизация
	|
	|СГРУППИРОВАТЬ ПО
	|	Амортизация.КорСчет,
	|	Амортизация.КорСубконто";
	
	БухИтогиАмортизация = Запрос.Выполнить().Выгрузить();
	
	АмортизацияОсновныхСредств       = БухИтогиАмортизация.Итог("АмортизацияОсновныхСредств");
	АмортизацияНематериальныхАктивов = БухИтогиАмортизация.Итог("АмортизацияНематериальныхАктивов");
	АмортизацияОсновныхСредств8_10       = БухИтогиАмортизация.Итог("АмортизацияОсновныхСредств8_10");
	АмортизацияНематериальныхАктивов8_10 = БухИтогиАмортизация.Итог("АмортизацияНематериальныхАктивов8_10");
	
	Если СпособАмортизации = "1" Тогда
		
		// Строка 131 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
		СтраницаЛист02_2.П000220013103 = АмортизацияОсновныхСредств + АмортизацияНематериальныхАктивов;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			ДополнительныеПараметры = 
			ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
			Если СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П000220013103",
										  "Строка 131 ""Сумма начисленной амортизации, за отчетный (налоговый) период""",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									      "П000220013103",
										  "",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
		КонецЦикла;
		
		// Строка 132 - Сумма начисленной амортизации по нематериальным активам
		СтраницаЛист02_2.П000220013203 = АмортизацияНематериальныхАктивов;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов <> 0 Тогда
				ДополнительныеПараметры = 
				ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										 "П000220013203",
										 "Строка 132 ""Сумма начисленной амортизации по нематериальным активам""",
										 "+",
										 "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										 СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов,
										 "Лист02_2",
										 ДополнительныеПараметры);
			КонецЕсли;
			
		КонецЦикла;
		СтраницаЛист02_2.П000220013303 = 0;
		СтраницаЛист02_2.П000220013403 = 0;
	Иначе
		СтраницаЛист02_2.П000220013103 = АмортизацияОсновныхСредств8_10 + АмортизацияНематериальныхАктивов8_10;
		СтраницаЛист02_2.П000220013203 = АмортизацияНематериальныхАктивов8_10;
		// Строка 133 - Сумма начисленной амортизации, за отчетный (налоговый) период - всего
		СтраницаЛист02_2.П000220013303 = АмортизацияОсновныхСредств + АмортизацияНематериальныхАктивов
										-АмортизацияОсновныхСредств8_10 - АмортизацияНематериальныхАктивов8_10;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			ДополнительныеПараметры = 
			ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
			Если СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств-СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств8_10 <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П000220013303",
										  "Строка 131 ""Сумма начисленной амортизации, за отчетный (налоговый) период""",
										  "+",
										  "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств-СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств8_10,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств8_10 <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П000220013103",
										  "Строка 131 ""Сумма начисленной амортизации, за отчетный (налоговый) период""",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияОсновныхСредств8_10,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов- СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10 <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									      "П000220013303",
										  "",
										  "+",
										  "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов - СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10,
										  "Лист02_2");
			КонецЕсли;
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10 <> 0 Тогда
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
									      "П000220013103",
										  "",
										  "+",
										  "!ДО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10,
										  "Лист02_2",
										  ДополнительныеПараметры);
			КонецЕсли;
		КонецЦикла;
		// Строка 134 - Сумма начисленной амортизации по нематериальным активам
		СтраницаЛист02_2.П000220013403 = АмортизацияНематериальныхАктивов - АмортизацияНематериальныхАктивов8_10;
		Для Каждого СтрокаБухИтогиАмортизация ИЗ БухИтогиАмортизация Цикл
			Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов- СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10 <> 0 Тогда
				ДополнительныеПараметры = 
				ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат,СтрокаБухИтогиАмортизация.КорСубконто);
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										  "П000220013403",
										  "Строка 132 ""Сумма начисленной амортизации по нематериальным активам""",
										  "+",
										  "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										  СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов- СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10,
										  "Лист02_2",
										  ДополнительныеПараметры);
				Если СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10 <> 0 Тогда						  
					ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
										 "П000220013203",
										 "Строка 132 ""Сумма начисленной амортизации по нематериальным активам""",
										 "+",
										 "!КО"+СтрокаБухИтогиАмортизация.КорСчет,
										 СтрокаБухИтогиАмортизация.АмортизацияНематериальныхАктивов8_10,
										 "Лист02_2",
										 ДополнительныеПараметры);
				 КонецЕсли;
			 КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	// Строка 135 - Способ амортизации
	СтраницаЛист02_2.П000220013503 = СпособАмортизации;
	
	#КонецОбласти
	
	#Область Лист02_4
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 4
	
	СтраницаЛист02_4 = Контейнер.Лист02_4[0].Данные[0].Значение;
	
	Если Месяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета) = 3 Или Месяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета) = 12 Тогда
		Запрос.УстановитьПараметр("СчетаРасходыБудущихПериодов",         	
			БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПС.РасходыБудущихПериодов));
		Запрос.УстановитьПараметр("СчетаПрибылиИУбыткиНеЕНВД",         	
			БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПС.ПрибылиИУбыткиНеЕНВД));
		Запрос.УстановитьПараметр("ВидРБП",       Перечисления.ВидыРБП.УбыткиПрошлыхЛет);
		Запрос.УстановитьПараметр("ВидСубконто",  ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.СуммаНУОборотКт,
		|	ХозрасчетныйОбороты.Субконто1
		|ПОМЕСТИТЬ ОборотыКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			Период,
		|			Счет В (&СчетаРасходыБудущихПериодов),
		|			&ВидСубконто,
		|			Организация В (&СписокОрганизаций)
		|				И Субконто1.ВидРБП = &ВидРБП,
		|			КорСчет В (&СчетаПрибылиИУбыткиНеЕНВД),
		|			) КАК ХозрасчетныйОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ОборотыКт.СуммаНУОборотКт) КАК КО,
		|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Субконто1,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНУНачальныйОстатокДт) КАК СуммаНачальныйОстатокДт,
		|	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНУКонечныйОстатокДт) КАК СуммаКонечныйОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&ДатаНач,
		|			&ДатаКон,
		|			Период,
		|			,
		|			Счет В (&СчетаРасходыБудущихПериодов),
		|			&ВидСубконто,
		|			Организация В (&СписокОрганизаций)
		|				И Субконто1.ВидРБП = &ВидРБП) КАК ХозрасчетныйОстаткиИОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОборотыКт КАК ОборотыКт
		|		ПО ХозрасчетныйОстаткиИОбороты.Субконто1 = ОборотыКт.Субконто1
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОстаткиИОбороты.Субконто1";
		УбыткиПрошлыхЛет = Запрос.Выполнить().Выгрузить();
		
		ТаблицаУбытков = Новый ТаблицаЗначений;
		ТаблицаУбытков.Колонки.Добавить("ГодУбыткаПредставление", Новый ОписаниеТипов("Строка"));
		ТаблицаУбытков.Колонки.Добавить("ГодУбытка", Новый ОписаниеТипов("Число"));
		ТаблицаУбытков.Колонки.Добавить("Сумма",     Новый ОписаниеТипов("Число"));
		ТаблицаУбытков.Колонки.Добавить("Остаток",   Новый ОписаниеТипов("Число"));
		ТаблицаУбытков.Колонки.Добавить("РБП",       Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
		
		ПоследнийГод = Год(ПараметрыОтчета.мДатаКонцаПериодаОтчета) - 1;
		СчетчикГодов = ПоследнийГод;
		
		Пока СчетчикГодов > ПоследнийГод - 10 Цикл
			СтрокаТаблицаУбытков = ТаблицаУбытков.Добавить();
			СтрокаТаблицаУбытков.ГодУбытка = СчетчикГодов;
			СчетчикГодов = СчетчикГодов - 1;
		КонецЦикла;
		
		Для Каждого УбытокПрошлыхЛет Из УбыткиПрошлыхЛет Цикл
			
			ГодУбытка = Год(ПараметрыОтчета.мДатаНачалаПериодаОтчета) - 1;

			СтрокаТаблицаУбытков = ТаблицаУбытков.Найти(ГодУбытка, "ГодУбытка");
			
			Если СтрокаТаблицаУбытков = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			СтрокаТаблицаУбытков.ГодУбыткаПредставление = СтрЗаменить(Строка(СтрокаТаблицаУбытков.ГодУбытка)," ", "");
			СтрокаТаблицаУбытков.Сумма   = УбытокПрошлыхЛет.СуммаНачальныйОстатокДт;
			СтрокаТаблицаУбытков.Остаток = УбытокПрошлыхЛет.СуммаКонечныйОстатокДт;
			СтрокаТаблицаУбытков.РБП     = УбытокПрошлыхЛет.Субконто1;
		
		КонецЦикла;
		
		ТаблицаУбытков.Сортировать("ГодУбытка Возр");
		НомерПоказателя = 4;
		
		Для Каждого СтрокаТаблицаУбытков Из ТаблицаУбытков Цикл
            ПредставлениеПоказателя = Формат(НомерПоказателя, "ЧЦ=2; ЧВН=");
			СтраницаЛист02_4["П0002400" + ПредставлениеПоказателя + "001"] = СтрокаТаблицаУбытков.ГодУбыткаПредставление;
			СтраницаЛист02_4["П0002400" + ПредставлениеПоказателя + "003"] = СтрокаТаблицаУбытков.Сумма;
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П0002400" + ПредставлениеПоказателя + "003", "Сумма убытка, полученного в " + СтрокаТаблицаУбытков.ГодУбыткаПредставление + " году",
				"+", "!СНД"+ПС.РасходыБудущихПериодов.Код, СтрокаТаблицаУбытков.Сумма, "Лист02_4",
				ПолучитьДополнительныеПараметрыСубконто(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов, СтрокаТаблицаУбытков.РБП));
	        НомерПоказателя = НомерПоказателя + 1;
		КонецЦикла;
		
		// Строка 150 - Сумма убытка или части убытка, уменьшающего   
		//              налоговую базу за отчетный  (налоговый)  период
		СуммаПоСтроке050Листа02 = 0;
		СуммаПоСтроке140Листа02 = 0;
		СуммаПоСтроке120Листа05 = 0;
		СуммаПоСтроке120Листа06 = 0;
		СуммаПоСтроке230Листа07 = 0;
		СуммаПоСтроке110Листа08 = 0;
		СуммаПоСтроке590Листа09 = 0;
		
		П002040015003 =  УбыткиПрошлыхЛет.Итог("КО");
		СтраницаЛист02_4.П000240015003 = П002040015003;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								  "П000240015003",
								  "Сумма убытка или части убытка, уменьшающего налоговую базу за отчетный (налоговый) период",
								  "+",
								  "!КО"+ПС.РасходыБудущихПериодов.Код,
								  П002040015003,
								  "Лист02_4");
		
		// Строка 160 -    сумма неперенесенного убытка	
		П002040016003 = УбыткиПрошлыхЛет.Итог("СуммаКонечныйОстатокДт");
		СтраницаЛист02_4.П000240016003 = П002040016003;
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки,
								  "П000240016003",
								  "неперенесенного убытка", "+", "!СКД"+ПС.РасходыБудущихПериодов.Код,
								  П002040016003,
								  "Лист02_4");
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры // ЗаполнитьОтчетПрибыльФормаОтчета2015Кв1

#КонецОбласти

#КонецОбласти

#КонецОбласти

Процедура ОтключитьПрименениеРазличныхСтавокПоНалогуНаПрибыльПРОФ() Экспорт
	
	Если НЕ Константы.ИспользоватьНесколькоОрганизаций.Получить() Тогда
		
		Если Константы.ПрименяютсяРазныеСтавкиНалогаНаПрибыль.Получить() Тогда
			Константы.ПрименяютсяРазныеСтавкиНалогаНаПрибыль.Установить(Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проводки

Функция ЭтоПроводкаПоНачислениюНДС(Проводка) Экспорт
	
	// Рассматриваем только проводки вида Дт 91 Кт 68,
	// потому что на счете 90 есть отдельный субсчет, на котором не ведется налоговый учет.
	
	СчетДт = Проводка.СчетДт;
	СчетКт = Проводка.СчетКт;
	
	Если Не БухгалтерскийУчетВызовСервераПовтИсп.ЭтоСчетУчетаНДС(СчетКт) Тогда
		// Это заведомо не начисление НДС
		Возврат Ложь;
	КонецЕсли;
	
	// Выполним проверку "вида платежа" - должно быть именно начисление налога, а не штрафов, пени...
	Для Каждого Субконто Из Проводка.СубконтоКт Цикл
		Если ТипЗнч(Субконто.Значение) = Тип("ПеречислениеСсылка.ВидыПлатежейВГосБюджет")
			И Субконто.Значение <> Перечисления.ВидыПлатежейВГосБюджет.Налог
			И Субконто.Значение <> Перечисления.ВидыПлатежейВГосБюджет.НалогСам
			И Субконто.Значение <> Перечисления.ВидыПлатежейВГосБюджет.НалогАкт Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если Не БухгалтерскийУчетВызовСервераПовтИсп.ЭтоСчетПрочиеРасходы(СчетДт) Тогда
		// Рассматриваем только проводки вида Дт 91 Кт 68,
		// потому что на счете 90 есть отдельный субсчет, на котором не ведется налоговый учет.
		Возврат Ложь;
	КонецЕсли;
	
	// Как правило, проводка Дт 91 Кт 68 начисляет НДС,
	// но есть исключения:
	Для Каждого Субконто Из Проводка.СубконтоДт Цикл
		Если ТипЗнч(Субконто.Значение) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов")
			И (Субконто.Значение.ВидПрочихРасходов = Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницыПоРасчетамВУЕ Или
			  Субконто.Значение.ВидПрочихРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд)Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	// Это не исключение
	Возврат Истина;
	
КонецФункции

Функция ЭтоПроводкаДоходыНеУчитываемыеДляНалогаНаПрибыль(СчетКт, СубконтоКт) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СчетКт) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СвойстваСчетаКт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СчетКт);
	Если НЕ СвойстваСчетаКт.НалоговыйУчет Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если СубконтоКт.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ БухгалтерскийУчетВызовСервераПовтИсп.ЭтоСчетПрочиеДоходы(СчетКт) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для Каждого Субконто Из СубконтоКт Цикл
		
		Если БухгалтерскийУчетВызовСервераПовтИсп.ЭтоСубконтоПрочиеДоходыИРасходы(Субконто.Ключ)Тогда 

			Если НЕ НалоговыйУчетПовтИсп.ВидДоходовРасходовУчитывается(Субконто.Значение) Тогда
				Возврат Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ЭтоПроводкаРасходыНеУчитываемыеДляНалогаНаПрибыль(СчетДт, СубконтоДт) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СчетДт) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СвойстваСчетаДт = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СчетДт);
	Если НЕ СвойстваСчетаДт.НалоговыйУчет Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если СубконтоДт.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для Каждого Субконто Из СубконтоДт Цикл
		
		Если БухгалтерскийУчетВызовСервераПовтИсп.ЭтоСубконтоПрочиеДоходыИРасходы(Субконто.Ключ) Тогда 
			
			Если Не НалоговыйУчетПовтИсп.ВидДоходовРасходовУчитывается(Субконто.Значение) Тогда
				Возврат Истина;
			КонецЕсли;
			
		ИначеЕсли БухгалтерскийУчетВызовСервераПовтИсп.ЭтоСубконтоСтатьиЗатрат(Субконто.Ключ)  Тогда 
			
			Если Не НалоговыйУчетПовтИсп.СтатьяЗатратУчитывается(Субконто.Значение) Тогда
				Возврат Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ЭтоНепринимаемыйРасходНУ(СубконтоНУ1, СубконтоНУ2, СубконтоНУ3) Экспорт
	
	НеПринимаемыйРасход = Ложь;
	ТипДоходыРасходы    = Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов, ПланВидовХарактеристикСсылка.СтатьиДоходов");
	
	Если Не СубконтоНУ1 = Неопределено И ТипДоходыРасходы.СодержитТип(ТипЗнч(СубконтоНУ1)) Тогда
		НеПринимаемыйРасход = ЭтоНепринимаемаяСтатьяДоходовРасходовПоНУ(СубконтоНУ1);
		
	ИначеЕсли Не СубконтоНУ2 = Неопределено И ТипДоходыРасходы.СодержитТип(ТипЗнч(СубконтоНУ2)) Тогда
		НеПринимаемыйРасход = ЭтоНепринимаемаяСтатьяДоходовРасходовПоНУ(СубконтоНУ2);
		
	ИначеЕсли Не СубконтоНУ3 = Неопределено И ТипДоходыРасходы.СодержитТип(ТипЗнч(СубконтоНУ3)) Тогда
		НеПринимаемыйРасход = ЭтоНепринимаемаяСтатьяДоходовРасходовПоНУ(СубконтоНУ3);
		
	КонецЕсли;
	
	Возврат НеПринимаемыйРасход;
	
КонецФункции

Функция ЭтоРасходНаАмортизацию(СубконтоНУ1, СубконтоНУ2, СубконтоНУ3) Экспорт
	
	РасходНаАмортизацию = Ложь;
	
	Если ТипЗнч(СубконтоНУ1) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда
		РасходНаАмортизацию = НЕ СубконтоНУ1.ЭтоГруппа
			И СубконтоНУ1.ВидРасходов = Перечисления.ВидыРасходовНУ.Амортизация;
	ИначеЕсли ТипЗнч(СубконтоНУ2) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда
		РасходНаАмортизацию = НЕ СубконтоНУ2.ЭтоГруппа
			И СубконтоНУ2.ВидРасходов = Перечисления.ВидыРасходовНУ.Амортизация;
	ИначеЕсли ТипЗнч(СубконтоНУ3) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда
		РасходНаАмортизацию = НЕ СубконтоНУ3.ЭтоГруппа
			И СубконтоНУ3.ВидРасходов = Перечисления.ВидыРасходовНУ.Амортизация;
	КонецЕсли;
		
	Возврат РасходНаАмортизацию;
	
КонецФункции

// Функция анализирует аналитику затрат по кредиту проводки.
// Если статья затрат не принимаемая к НУ, то возвращаемое значение "истина"
//
//	Параметры:
//		Проводка - запись регистра бухгалтерии
//
//	Возвращаемое значение:
//		Булево - Истина, если одно из субконто по кредиту проводки является статьей затрат не принимаемой к НУ (см. функцию НалоговыйУчет.ЭтоНепринимаемаяСтатьяДоходовРасходовПоНУ)
//
Функция ОпределитьНеПринимаемыеДоходы(Проводка) Экспорт
	
	ТипДоходыРасходы = Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов, ПланВидовХарактеристикСсылка.СтатьиДоходов");
	
	Если Не Проводка.СчетКт = ПланыСчетов.Хозрасчетный.ПустаяСсылка()
		И БухгалтерскийУчетПовтИсп.СчетВИерархии(Проводка.СчетКт, ПланыСчетов.Хозрасчетный.ПрочиеДоходы) Тогда
		
		Для Каждого Субконто Из Проводка.СубконтоКт Цикл
			
			Если Не Субконто.Значение = Неопределено И ТипДоходыРасходы.СодержитТип(ТипЗнч(Субконто.Значение)) Тогда
				
				Возврат ЭтоНепринимаемаяСтатьяДоходовРасходовПоНУ(Субконто.Значение);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Функция анализирует аналитику затрат по дебету проводки.
// Если статья затрат не принимаемая к НУ, то возвращаемое значение "истина"
//
Функция ОпределитьНеПринимаемыеРасходы(Проводка) Экспорт
	
	// Расходы на строительство объектов основных средств, не относятся к расходам по производству и реализации
	Если БухгалтерскийУчетПовтИсп.СчетВИерархии(Проводка.СчетДт, ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Субконто1 = Неопределено;
	Субконто2 = Неопределено;
	Субконто3 = Неопределено;
	
	Для каждого Субконто Из Проводка.СубконтоДт Цикл
		
		Если Субконто1 = Неопределено Тогда
			Субконто1 = Субконто.Значение;
		ИначеЕсли Субконто2 = Неопределено Тогда
			Субконто2 = Субконто.Значение;
		ИначеЕсли Субконто3 = Неопределено Тогда
			Субконто3 = Субконто.Значение;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЭтоНепринимаемыйРасходНУ(Субконто1, Субконто2, Субконто3);
	
КонецФункции

Функция ОпределитьВнереализационныеДоходыРасходы(Проводка) Экспорт
	
	// Проверим Кт счета
	Если БухгалтерскийУчетВызовСервераПовтИсп.ЭтоСчетПрочиеДоходы(Проводка.СчетКт) Тогда
		
		Для Каждого Субконто Из Проводка.СубконтоКт Цикл
			
			Если ТипЗнч(Субконто.Значение) = Тип("ПланВидовХарактеристикСсылка.СтатьиДоходов") Тогда
				
				Если НЕ Субконто.Значение.Пустая() Тогда
					
					Возврат НалоговыйУчетПовтИсп.ЭтоСтатьяВнереалиационныхДоходов(Субконто.Значение);
					
				КонецЕсли;
				
				Прервать;
				
			ИначеЕсли ТипЗнч(Субконто.Значение) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда
				
				Если НЕ Субконто.Значение.Пустая() Тогда
					
					Возврат НалоговыйУчетПовтИсп.ЭтоСтатьяВнереалиационныхРасходов(Субконто.Значение);
					
				КонецЕсли;
				
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Возврат Ложь;
		
	КонецЕсли;
	
	
	// Проверим Дт счета
	Если БухгалтерскийУчетВызовСервераПовтИсп.ЭтоСчетПрочиеРасходы(Проводка.СчетДт) Тогда
		
		Для Каждого Субконто Из Проводка.СубконтоДт Цикл
			
			Если ТипЗнч(Субконто.Значение) = Тип("ПланВидовХарактеристикСсылка.СтатьиДоходов") Тогда
				
				Если НЕ Субконто.Значение.Пустая() Тогда
					
					Возврат НалоговыйУчетПовтИсп.ЭтоСтатьяВнереалиационныхДоходов(Субконто.Значение);
					
				КонецЕсли;
				
				Прервать;
				
			ИначеЕсли ТипЗнч(Субконто.Значение) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда
				
				Если НЕ Субконто.Значение.Пустая() Тогда
					
					Возврат НалоговыйУчетПовтИсп.ЭтоСтатьяВнереалиационныхРасходов(Субконто.Значение);
					
				КонецЕсли;
				
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область ВспомогательныеПроцедурыИФункции

// Определяет относится ли статья доходов/расходов к не облагаемой дейтельности по налоговому учету
//
Функция ЭтоНепринимаемаяСтатьяДоходовРасходовПоНУ(СтатьяДоходовРасходов) Экспорт
	
	НеПринимаемаяСтатья = Ложь;
	
	Если Не СтатьяДоходовРасходов.Пустая() Тогда
		
		РеквизитыСтатьи     = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СтатьяДоходовРасходов, "ЭтоГруппа, ПринятиеКналоговомуУчету");
		НеПринимаемаяСтатья = Не РеквизитыСтатьи.ЭтоГруппа И Не РеквизитыСтатьи.ПринятиеКналоговомуУчету;
		
	КонецЕсли;
	
	Возврат НеПринимаемаяСтатья;
	
КонецФункции

// Определяет доли списания нормируемых расходов, 
// транспортных расходов, расходов, распределяемых по видам деятельности
Функция ПолучитьДолюКосвенногоРасхода(ТаблицаДолейКосвенныхРасходов, ВидРасхода) Экспорт
		
	Если ТаблицаДолейКосвенныхРасходов = Неопределено Или ТаблицаДолейКосвенныхРасходов.Количество() = 0 Тогда
		Возврат 1;
	КонецЕсли;
	
	Строка = ТаблицаДолейКосвенныхРасходов[0];
	Если ВидРасхода = Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахование Тогда
		Возврат Строка.ДоляРасходовНаДобровольноеСтрахованиеЖизни;
		
	ИначеЕсли ВидРасхода = Перечисления.ВидыРасходовНУ.ДобровольноеСтрахованиеПоДоговорамДолгосрочногоСтрахованияЖизниРаботников Тогда
		Возврат Строка.ДоляРасходовНаДобровольноеМедицинскоеСтрахование;
		
	ИначеЕсли ВидРасхода = Перечисления.ВидыРасходовНУ.РасходыНаВозмещениеЗатратРаботниковПоУплатеПроцентов Тогда
		Возврат Строка.ДоляРасходовНаВозмещениеПроцентовРаботникам;
		
	ИначеЕсли ВидРасхода = Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахованиеНаСлучайСмертиИлиУтратыРаботоспособности Тогда
		Возврат Строка.ДоляРасходовНаДобровольноеСтрахованиеОтНесчастныхСлучаев;
		
	ИначеЕсли ВидРасхода = Перечисления.ВидыРасходовНУ.ПредставительскиеРасходы Тогда
		Возврат Строка.ДоляПредставительскихРасходов;
		
	ИначеЕсли ВидРасхода = Перечисления.ВидыРасходовНУ.РасходыНаРекламуНормируемые Тогда
		Возврат Строка.ДоляРасходовНаРекламу;
		
	ИначеЕсли ВидРасхода = Перечисления.ВидыРасходовНУ.ТранспортныеРасходы Тогда
		Возврат Строка.ДоляТранспортныхРасходов;
		
	ИначеЕсли ВидРасхода = Неопределено Тогда
		
		Возврат Строка.ДоляЕНВД;
	Иначе	
		
		Возврат 1;
	КонецЕсли;
	
КонецФункции

Функция ОборотыВременныхРазницПоВидуАктивовОбязательствРасчет(Реквизиты,
								ТаблицаРезультатов, ТаблицаРаспределяемыхРасходов, КоличествоОбъектовАналитики) Экспорт
	
	Если ТаблицаРезультатов.Количество() > 0 Тогда
		
		ТаблицаРезультатов.Колонки.Добавить("СуммаДт09");
		ТаблицаРезультатов.Колонки.Добавить("СуммаКт09");
		ТаблицаРезультатов.Колонки.Добавить("СуммаДт77");
		ТаблицаРезультатов.Колонки.Добавить("СуммаКт77");
		ТаблицаРезультатов.Колонки.Добавить("СуммаЕНВД");
		
		Для Каждого Строка Из ТаблицаРезультатов Цикл
			СводноеСальдоКон = ?(Строка.КонОстатокДт = NULL, 0, Строка.КонОстатокДт) - ?(Строка.КонОстатокКт = NULL, 0, Строка.КонОстатокКт);
			СводноеСальдоНач = ?(Строка.НачОстатокДт = NULL, 0, Строка.НачОстатокДт) - ?(Строка.НачОстатокКт = NULL, 0, Строка.НачОстатокКт);
			Разница          = ?(Строка.ОборотДт = NULL, 0, Строка.ОборотДт) - ?(Строка.ОборотКт = NULL, 0, Строка.ОборотКт);
			
			// Определим сумму временных разниц, приходящуюся на деятельность, облагаемую ЕНВД,
			// для распределяемых затрат, связанных с амортизацией и списанием РБП.
			СуммаРаспределяемогоРасхода  = 0;
			СуммаЕНВДРасхода             = 0;
			СтрокаРаспределяемогоРасхода = ?(КоличествоОбъектовАналитики = 0, Неопределено, ТаблицаРаспределяемыхРасходов.Найти(Строка.Субконто1, "КорСубконто1"));
			
			Если СтрокаРаспределяемогоРасхода = Неопределено Тогда
				Строка.СуммаЕНВД = Строка.ОборотЕН;
			Иначе
				СуммаРаспределяемогоРасхода = СтрокаРаспределяемогоРасхода.СуммаЗатрат;
				СуммаЕНВДРасхода = СтрокаРаспределяемогоРасхода.СуммаЗатратЕНВД;
				Строка.СуммаЕНВД = СуммаРаспределяемогоРасхода * Реквизиты.КоэффициентЕНВД + СуммаЕНВДРасхода;
			КонецЕсли;
			
			Если СводноеСальдоНач > 0 Тогда
				Если  СводноеСальдоКон - СводноеСальдоНач > 0 Тогда
					Строка.СуммаКт77 = Разница;
					Строка.СуммаДт77 = 0;
					Строка.СуммаКт09 = 0;
					Строка.СуммаДт09 = 0;
				ИначеЕсли  СводноеСальдоКон - СводноеСальдоНач = 0 Тогда
					Строка.СуммаКт77 = 0;
					Строка.СуммаДт77 = 0;
					Строка.СуммаКт09 = 0;
					Строка.СуммаДт09 = 0;
					Иначе  Если (СводноеСальдоКон < 0) И (СводноеСальдоНач >= 0) Тогда
						Строка.СуммаДт09 = - СводноеСальдоКон;
						Строка.СуммаДт77 = СводноеСальдоНач;
						Строка.СуммаКт09 = 0;
						Строка.СуммаКт77 = 0;
					Иначе
						Строка.СуммаКт77 = 0;
						Строка.СуммаДт77 = -Разница;
						Строка.СуммаКт09 = 0;
						Строка.СуммаДт09 = 0;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Если  СводноеСальдоКон - СводноеСальдоНач < 0 Тогда
					Строка.СуммаКт77 = 0;
					Строка.СуммаДт77 = 0;
					Строка.СуммаКт09 = 0;
					Строка.СуммаДт09 = - СводноеСальдоКон + СводноеСальдоНач;
				ИначеЕсли  СводноеСальдоКон - СводноеСальдоНач = 0 Тогда
					Строка.СуммаКт77 = 0;
					Строка.СуммаДт77 = 0;
					Строка.СуммаКт09 = 0;
					Строка.СуммаДт09 = 0;
					Иначе  Если (СводноеСальдоКон > 0) И (СводноеСальдоНач <= 0) Тогда
						Строка.СуммаКт77 = СводноеСальдоКон;
						Строка.СуммаДт77 = 0;
						Строка.СуммаКт09 = -СводноеСальдоНач;
						Строка.СуммаДт09 = 0;
					Иначе
						Строка.СуммаКт77 = 0;
						Строка.СуммаДт77 = 0;
						Строка.СуммаКт09 = Разница;
						Строка.СуммаДт09 = 0;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат  ТаблицаРезультатов;
	
КонецФункции // ОборотыВременныхРазницПоВидуАктивовОбязательствРасчет()

Функция ПолучитьМассивСчетовУчетаРасходов() Экспорт
	
	СчетаЗатрат = Новый Массив;
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ВспомогательныеПроизводства);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОбслуживающиеПроизводства);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.РасходыНаПродажу);
	
	Возврат СчетаЗатрат;
	
КонецФункции // ПолучитьМассивСчетовУчетаРасходов()

Функция ПолучитьМассивСчетовЕНВД() Экспорт
	
	СчетаЗатрат = Новый Массив;
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ВыручкаЕНВД);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.СебестоимостьПродажЕНВД);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажуЕНВД);
	СчетаЗатрат.Добавить(ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыЕНВД);
	
	Возврат СчетаЗатрат;
	
КонецФункции // ПолучитьМассивСчетовЕНВД()

#КонецОбласти

#Область ПроцедурыИФункцииОтносящиесяКОпределениюДолейСписанияРасходов
// В рамках регламентной операции "Расчет долей" - см. функцию ДолиСписанияРасходов

#Область РасходыПоКоторымЕстьОграничения

Функция ДолиСписанияНормируемыхРасходов(Период, Организация, ДоляСпециальныхРежимов, Протокол = Неопределено)
	
	// Речь идет о тех расходах, которые уже отражены на счетах затрат (20, 25, 44 и т.п.)
	
	Результат = Новый Соответствие;
	
	ОграниченияРасходов      = ОграниченияРасходов(Период, Организация, ДоляСпециальныхРежимов);
	ВидыНормируемыхРасходов  = ОграниченияРасходов.ВыгрузитьКолонку("ВидРасходов");
	СуммыНормируемыхРасходов = СуммыНормируемыхРасходов(Период, Организация, ВидыНормируемыхРасходов);
	
	// Применим ограничения к суммам
	Для Каждого ОписаниеРасхода Из СуммыНормируемыхРасходов Цикл
		
		Ограничение = ОграниченияРасходов.Найти(ОписаниеРасхода.ВидРасходов, "ВидРасходов");
		
		Если Ограничение = Неопределено Тогда
			// Это маловероятно, потому что для создания СуммыНормируемыхРасходов используются только те виды расходов,
			// что есть в ОграниченияРасходов
			Продолжить;
		КонецЕсли;
		
		// Расчет похож на справку-расчет, но иногда задом наперед
		ЗатратыЗаПериод                  = Макс(0, ОписаниеРасхода.ЗаПериод);                        // гр. 2 - за год, с начала года
		Расходы                          = Мин(Ограничение.Лимит, ЗатратыЗаПериод);                  // гр. 4 - уменьшают базу налога
		
		ЗатратыКРаспределению            = ОписаниеРасхода.НаНачалоМесяца + ОписаниеРасхода.ЗаМесяц; // то же, что гр.2 - гр.5
		ВключеноВРасходыНаНачалоМесяца   = ЗатратыЗаПериод - ЗатратыКРаспределению;                  // гр. 5
		РасходыТекущегоМесяца            = Расходы - ВключеноВРасходыНаНачалоМесяца;                 // гр. 6
		Доля                             = ?(ЗатратыКРаспределению = 0, 1, РасходыТекущегоМесяца / ЗатратыКРаспределению); // гр. 7
		Результат.Вставить(Ограничение.ВидРасходов, Доля);
		
		// Заполним протокол (для справки-расчета)
		Если Протокол <> Неопределено Тогда
			
			Запись = Протокол.Добавить();
			Запись.ВидОперации    = Ограничение.ВидРасходов;
			Запись.Организация    = Организация;
			Запись.ПериодРасчета  = Период;
			
			Если ОписаниеРасхода.ВидРасходов = Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахованиеНаСлучайСмертиИлиУтратыРаботоспособности Тогда
				Запись.СуммаБазы  = Ограничение.Лимит; // Унаследованная с прошлых версий особенность справки-расчета
			Иначе
				Запись.СуммаБазы  = Ограничение.База;
			КонецЕсли;
			
			Запись.ЗатратыГод     = ЗатратыЗаПериод;       // гр. 2
			Запись.РасходыГод     = Расходы;               // гр. 4
			Запись.РасходыМесяц   = РасходыТекущегоМесяца; // гр. 6
			
			// гр. 8 - затраты сверх лимита
			Запись.РазницыГод     = ЗатратыЗаПериод - Расходы;
			
			// гр. 10 - изменение затрат сверх лимита
			Запись.РазницыМесяц   = Запись.РазницыГод - ОписаниеРасхода.НаНачалоМесяца;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ОграниченияРасходов(Период, Организация, ДоляСпециальныхРежимов)
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("ВидРасходов",     Новый ОписаниеТипов("ПеречислениеСсылка.ВидыРасходовНУ")); // Для уже учтенных расходов - вид расходов, для не учтенных - вид операции
	Результат.Колонки.Добавить("База",            ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	Результат.Колонки.Добавить("Норма",           Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("Лимит",           ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	Результат.Индексы.Добавить("ВидРасходов");
	
	// Расходы могут быть ограничены:
	// - расходами на оплату труда
	//  -- либо суммой только оплаты труда
	//  -- либо суммой всех выплат в пользу сотрудников, включая страховки
	// - суммой выручки
	// - количеством застрахованных
	
	// Большинство ограничений связано с расходами на оплату труда или выручкой от реализации
	РасходыНаОплатуТруда = РасходыНаОплатуТруда(Период, Организация, ДоляСпециальныхРежимов);
	ВыручкаОтРеализации  = ВыручкаОтРеализации(Период, Организация);
	
	// п. 16, ст. 255 НК РФ 
	// Совокупная сумма взносов работодателей, уплачиваемых ... на накопительную часть трудовой пенсии,
	// по договорам долгосрочного страхования жизни работников, 
	// добровольного пенсионного страхования и (или) негосударственного пенсионного обеспечения работников, 
	// учитывается в целях налогообложения в размере, 
	// не превышающем 12 процентов от суммы расходов на оплату труда.
	Ограничение = Результат.Добавить();
	Ограничение.ВидРасходов    = Перечисления.ВидыРасходовНУ.ДобровольноеСтрахованиеПоДоговорамДолгосрочногоСтрахованияЖизниРаботников;
	Ограничение.База           = РасходыНаОплатуТруда.ОплатаТруда;
	Ограничение.Норма          = 0.12;
	
	// п. 16, ст. 255 НК РФ
	// Добровольное личное страхование
	// Взносы по договорам добровольного личного страхования, предусматривающим оплату страховщиками медицинских расходов 
	// застрахованных работников ... включаются в состав расходов в размере, 
	// не превышающем 6 процентов от суммы расходов на оплату труда.
	Ограничение = Результат.Добавить();
	Ограничение.ВидРасходов    = Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахование;
	Ограничение.База           = РасходыНаОплатуТруда.ОплатаТруда;
	Ограничение.Норма          = 0.06;
	
	// п. 24.1, ст. 255 НК РФ
	// Расходы на возмещение затрат работников по уплате процентов по займам
	// расходы на возмещение затрат работников по уплате процентов по займам (кредитам) 
	// на приобретение и (или) строительство жилого помещения ... признаются в размере, 
	// не превышающем 3 процентов суммы расходов на оплату труда
	Ограничение = Результат.Добавить();
	Ограничение.ВидРасходов    = Перечисления.ВидыРасходовНУ.РасходыНаВозмещениеЗатратРаботниковПоУплатеПроцентов;
	Ограничение.База           = РасходыНаОплатуТруда.ОплатаТруда;
	Ограничение.Норма          = 0.03;
	
	// п. 2, ст. 264 НК РФ
	// Представительские расходы ... включаются в состав прочих расходов в размере, 
	// не превышающем 4 процента от расходов налогоплательщика на оплату труда.
	// Есть разъяснение, что в сумму этих расходов входит не только оплата труда, 
	// но и другие вознаграждения сотрудникам (страхование)
	Ограничение = Результат.Добавить();
	Ограничение.ВидРасходов    = Перечисления.ВидыРасходовНУ.ПредставительскиеРасходы;
	Ограничение.База           = РасходыНаОплатуТруда.Вознаграждение;
	Ограничение.Норма          = 0.04;
	
	// п. 4, ст. 264 НК РФ
	// Расходы на отдельные виды рекламы признаются в размере, не превышающем 1 процента выручки от реализации
	Ограничение = Результат.Добавить();
	Ограничение.ВидРасходов    = Перечисления.ВидыРасходовНУ.РасходыНаРекламуНормируемые;
	Ограничение.База           = ВыручкаОтРеализации;
	Ограничение.Норма          = 0.01;
	
	// п. 16, ст. 255 НК РФ
	// Взносы по договорам добровольного личного страхования, 
	// предусматривающим выплаты исключительно в случаях смерти и (или) причинения вреда здоровью застрахованного лица, 
	// включаются в состав расходов в размере, не превышающем 15 000 рублей в год, 
	// рассчитанном как отношение общей суммы взносов, 
	// уплачиваемых по указанным договорам, к количеству застрахованных работников.
	Ограничение = Результат.Добавить();
	Ограничение.ВидРасходов    = Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахованиеНаСлучайСмертиИлиУтратыРаботоспособности;
	Ограничение.База           = КоличествоЗастрахованныхОтУтратыРаботоспособности(Период, Организация);
	Ограничение.Норма          = 15000;
	
	// Рассчитаем суммы лимитов
	Для Каждого Ограничение Из Результат Цикл
		Ограничение.Лимит = ЛимитРасходов(Ограничение.База, Ограничение.Норма);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ЛимитРасходов(База, Норма)
	
	Возврат Макс(0, Окр(База * Норма, 2, 1));
	
КонецФункции

Функция РасходыНаОплатуТруда(Период, Организация, ДоляСпециальныхРежимов)
	
	Результат = Новый Структура;
	Результат.Вставить("Вознаграждение", 0); // Вся сумма вознаграждений, включая оплату труда и страхование
	Результат.Вставить("ОплатаТруда",    0); // Только оплата труда
	
	// Сумма распределяемых расходов рассчитывается так:
	// 1. За период с начала года до начала текущего месяца уже есть информация о расходах, отнесенных к основной системе налогообложения
	//    (оборот Дт 90.08 Кт 20, 23, 25..., потому что все распределяемые расходы - косвенные).
	// 2. За текущий месяц рассчитываем сумму расходов, учитываемых для исчисления налога на прибыль,
	//    исходя из оборота по Дт 20 и коэффициента распределения.
	// Сумму не распределяемых расходов определяем по оборотам Дт счетов затрат.
	// Во всех случаях исключаем "внутренние" обороты по распределению затрат (Дт счетов затрат Кт счетов затрат).
	
	
	СчетаРезультата = Новый Массив;
	СчетаРезультата.Добавить(ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД);
	СчетаРезультата.Добавить(ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажуНеЕНВД);
	СчетаРезультата.Добавить(ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД);
	
	ПлательщикЕНВД = УчетнаяПолитикаПереопределяемый.ПлательщикЕНВДЗаПериод(Организация, НачалоГода(Период), КонецМесяца(Период));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоГода",              НачалоГода(Период));
	Запрос.УстановитьПараметр("НачалоМесяца",            НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяца",  НачалоМесяца(Период) - 1);
	Запрос.УстановитьПараметр("КонецПериода",            КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",             Организация);
	Запрос.УстановитьПараметр("СчетаРасходов",           ПолучитьМассивСчетовУчетаРасходов());
	Запрос.УстановитьПараметр("СчетаРезультата",         СчетаРезультата);
	Запрос.УстановитьПараметр("ДоляУчитываемыхРасходов", 1 - ДоляСпециальныхРежимов); // Применяется для распределяемых расходов
	Запрос.УстановитьПараметр("ПлательщикЕНВД",          ПлательщикЕНВД);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	(Организации.ГоловнаяОрганизация = &Организация
	|			ИЛИ Организации.Ссылка = &Организация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ СчетаРасходов
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(&СчетаРасходов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ОплатаТруда) КАК ВидРасходов,
	|	ИСТИНА КАК ОплатаТруда
	|ПОМЕСТИТЬ ВидыРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ДобровольноеЛичноеСтрахование),
	|	ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ДобровольноеЛичноеСтрахованиеНаСлучайСмертиИлиУтратыРаботоспособности),
	|	ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ДобровольноеСтрахованиеПоДоговорамДолгосрочногоСтрахованияЖизниРаботников),
	|	ЛОЖЬ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыРасходов.ОплатаТруда,
	|	СтатьиРасходов.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Распределяемая
	|ПОМЕСТИТЬ СтатьиРасходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВидыРасходов КАК ВидыРасходов
	|		ПО СтатьиРасходов.ВидРасходов = ВидыРасходов.ВидРасходов
	|
	|ГДЕ
	|	(&ПлательщикЕНВД 
	|			И СтатьиРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат <> ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения))
	|		ИЛИ НЕ &ПлательщикЕНВД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Вознаграждение.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(Вознаграждение.СуммаПринимаемые + Вознаграждение.СуммаРаспределяемые * &ДоляУчитываемыхРасходов) КАК Сумма
	|ПОМЕСТИТЬ Вознаграждение
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		СуммаРеглПриход - ПостояннаяРазницаПриход - ВременнаяРазницаПриход КАК СуммаПринимаемые,
	|		0 КАК СуммаРаспределяемые
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы.Обороты(
	|				&НачалоГода,
	|				&КонецПериода,
	|				,
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации)
	|					И СтатьяРасходов В
	|						(ВЫБРАТЬ
	|							СтатьиРасходов.Ссылка
	|						ИЗ
	|							СтатьиРасходов
	|						ГДЕ
	|							НЕ СтатьиРасходов.Распределяемая)) КАК ОблагаетсяНалогомНаПрибыль
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		0 КАК СуммаПринимаемые,
	|		СуммаРеглПриход - ПостояннаяРазницаПриход - ВременнаяРазницаПриход КАК СуммаРаспределяемые
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы.Обороты(
	|				&НачалоМесяца,
	|				&КонецПериода,
	|				,
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации)
	|					И СтатьяРасходов В
	|						(ВЫБРАТЬ
	|							СтатьиРасходов.Ссылка
	|						ИЗ
	|							СтатьиРасходов
	|						ГДЕ
	|							СтатьиРасходов.Распределяемая)) КАК РаспределяемыеТекущийМесяц
	|	
	//++ НЕ УТКА
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|		СтоимостьРеглПриход КАК СуммаПринимаемые,
	|		0 КАК СуммаРаспределяемые
	|	ИЗ
	|		РегистрНакопления.ТрудозатратыНезавершенногоПроизводства.Обороты(
	|				&НачалоМесяца,
	|				&КонецПериода,
	|				,
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации)
	|				И ВидФондаВзносов = ЗНАЧЕНИЕ(Перечисление.ВидыФондовВзносов.ПустаяСсылка)) КАК ОблагаетсяНалогомНаПрибыль
	|	
	//-- НЕ УТКА
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Субконто1 КАК СтатьяРасходов,
	|		СуммаНУОборотКт КАК СуммаПринимаемые,
	|		0 КАК СуммаРаспределяемые
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|				&НачалоГода,
	|				ДОБАВИТЬКДАТЕ(&НачалоМесяца, СЕКУНДА, -1),
	|				,
	|				Счет В
	|					(ВЫБРАТЬ
	|						СчетаРасходов.Счет
	|					ИЗ
	|						СчетаРасходов),
	|				ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации)
	|					И Субконто1 В
	|						(ВЫБРАТЬ
	|							СтатьиРасходов.Ссылка
	|						ИЗ
	|							СтатьиРасходов
	|						ГДЕ
	|							СтатьиРасходов.Распределяемая),
	|				КорСчет В (&СчетаРезультата),
	|				) КАК РаспределенныеПредыдущиеМесяцы
	|) КАК Вознаграждение
	|
	|СГРУППИРОВАТЬ ПО
	|	Вознаграждение.СтатьяРасходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтатьяРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(Вознаграждение.Сумма), 0) КАК Вознаграждение,
	|	ЕСТЬNULL(СУММА(ВЫБОР КОГДА ЕСТЬNULL(СтатьиРасходов.ОплатаТруда, ИСТИНА) ТОГДА
	|		Вознаграждение.Сумма
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ), 0) КАК ОплатаТруда
	|ИЗ
	|	Вознаграждение КАК Вознаграждение
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтатьиРасходов КАК СтатьиРасходов
	|		ПО Вознаграждение.СтатьяРасходов = СтатьиРасходов.Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать(); // В выборке всегда 1 запись
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(Результат, Выборка);
	
	Возврат Результат;
	
КонецФункции

Функция ВыручкаОтРеализации(Период, Организация)
	
	// Включаем в выручку часть расходов на счете 91
	ВидыПрочихДоходов = Новый Массив;
	ВидыПрочихДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств);
	ВидыПрочихДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов);
	ВидыПрочихДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОбъектовСтроительства);
	ВидыПрочихДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества);
	ВидыПрочихДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования);
	ВидыПрочихДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств);
	ВидыПрочихДоходов.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",     НачалоГода(Период));
	Запрос.УстановитьПараметр("КонецПериода",      КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",       Организация);
	Запрос.УстановитьПараметр("ВидыПрочихДоходов", ВидыПрочихДоходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ГоловнаяОрганизация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиПрочихДоходов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ СтатьиПрочихДоходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиДоходов КАК СтатьиПрочихДоходов
	|ГДЕ
	|	СтатьиПрочихДоходов.ВидПрочихДоходов В(&ВидыПрочихДоходов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючиАналитикиУчетаПоПартнерам.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ КлючиАналитикиУчетаПоПартнерам
	|ИЗ
	|	Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
	|ГДЕ
	|	КлючиАналитикиУчетаПоПартнерам.Организация В
	|			(ВЫБРАТЬ
	|				Организации.Ссылка
	|			ИЗ
	|				Организации)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(Выручка.Сумма), 0) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		Выручка.СуммаВыручкиРеглОборот КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				АналитикаУчетаПоПартнерам В
	|						(ВЫБРАТЬ
	|							КлючиАналитикиУчетаПоПартнерам.Ссылка
	|						ИЗ
	|							КлючиАналитикиУчетаПоПартнерам)
	|					И НЕ ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|					И НЕ ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)) КАК Выручка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПрочиеДоходы.СуммаРеглБезНДСОборот
	|	ИЗ
	|		РегистрНакопления.ДвиженияКонтрагентДоходыРасходы.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Ссылка
	|						ИЗ
	|							Организации)
	|					И СтатьяДоходовРасходов В
	|						(ВЫБРАТЬ
	|							СтатьиПрочихДоходов.Ссылка
	|						ИЗ
	|							СтатьиПрочихДоходов)) КАК ПрочиеДоходы) КАК Выручка";
	
	Выборка = Запрос.Выполнить().Выбрать(); // В выборке всегда 1 запись
	Выборка.Следующий();
	Возврат Выборка.Сумма;
	
КонецФункции

Функция КоличествоЗастрахованныхОтУтратыРаботоспособности(Период, Организация)
	
	Возврат 0;
	
КонецФункции

Функция СуммыНормируемыхРасходов(Период, Организация, ВидыНормируемыхРасходов)
	
	// По статьям расходов, у которых указаны нормируемые виды расходов, не следует отражать расходы по деятельности,
	// для обложения налогами которой применяются специальные налоговые режимы
	
	// ЗаПериод
	// ЗаМесяц
	// НаНачалоМесяца
	
	// Формируем запрос по виду затрат
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоГода",              НачалоГода(Период));
	Запрос.УстановитьПараметр("КонецПрошлогоМесяца",     НачалоМесяца(Период) - 1);
	Запрос.УстановитьПараметр("НачалоМесяца",            НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода",            КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",             Организация);
	Запрос.УстановитьПараметр("ВидыНормируемыхРасходов", ВидыНормируемыхРасходов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация
	|ПОМЕСТИТЬ Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ГоловнаяОрганизация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиРасходов.Ссылка КАК Ссылка,
	|	СтатьиРасходов.ВидРасходов КАК ВидРасходов
	|ПОМЕСТИТЬ СтатьиРасходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|ГДЕ
	|	СтатьиРасходов.ВидРасходов В(&ВидыНормируемыхРасходов)
	|	И НЕ СтатьиРасходов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расходы.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(Расходы.НаНачалоМесяца) КАК НаНачалоМесяца,
	|	СУММА(Расходы.ЗаПериод) КАК ЗаПериод,
	|	СУММА(Расходы.ЗаМесяц) КАК ЗаМесяц
	|ПОМЕСТИТЬ Расходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтатьяРасходов КАК СтатьяРасходов,
	|		СуммаРеглОборот - ПостояннаяРазницаОборот - ВременнаяРазницаОборот КАК НаНачалоМесяца,
	|		СуммаРеглПриход - ПостояннаяРазницаПриход - ВременнаяРазницаПриход КАК ЗаПериод,
	|		0 КАК ЗаМесяц
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы.Обороты(
	|				&НачалоГода,
	|				&КонецПрошлогоМесяца,
	|				,
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации)
	|					И СтатьяРасходов В
	|						(ВЫБРАТЬ
	|							СтатьиРасходов.Ссылка
	|						ИЗ
	|							СтатьиРасходов)) КАК ПредыдущиеМесяцы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТекущийМесяц.СтатьяРасходов,
	|		0,
	|		СуммаРеглПриход - ПостояннаяРазницаПриход - ВременнаяРазницаПриход,
	|		СуммаРеглПриход - ПостояннаяРазницаПриход - ВременнаяРазницаПриход
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы.Обороты(
	|				&НачалоМесяца,
	|				&КонецПериода,
	|				,
	|				Организация В
	|						(ВЫБРАТЬ
	|							Организации.Организация
	|						ИЗ
	|							Организации)
	|					И СтатьяРасходов В
	|						(ВЫБРАТЬ
	|							СтатьиРасходов.Ссылка
	|						ИЗ
	|							СтатьиРасходов)) КАК ТекущийМесяц
	|	
	|) КАК Расходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Расходы.СтатьяРасходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтатьяРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиРасходов.ВидРасходов КАК ВидРасходов,
	|	СУММА(Расходы.НаНачалоМесяца) КАК НаНачалоМесяца,
	|	СУММА(Расходы.ЗаПериод) КАК ЗаПериод,
	|	СУММА(Расходы.ЗаМесяц) КАК ЗаМесяц
	|ИЗ
	|	Расходы КАК Расходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СтатьиРасходов КАК СтатьиРасходов
	|		ПО Расходы.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатьиРасходов.ВидРасходов";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
Конецфункции

#КонецОбласти

#Область РасчетТранспортныхРасходовТекущегоМесяца

Функция ДоляТранспортныхРасходовТекущегоМесяца(Период, Организация)
	
	// Исходные данные для расчета:
	// - СуммаРасходов (транспортных)
	// - РеализацияТоваров
	// - СальдоТоваровКонечное
	
	// Получим их.
	
	// Для расчета коэффициента используем данные НУ (по налогу на прибыль).
	// Потому, что организация 
	// - должна их использовать для НУ (ст. 320 НК)
	// - может их использовать для БУ
	ИспользоватьДанныеНалоговогоУчета = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Период);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",       НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода",        КонецМесяца(Период));
	Запрос.УстановитьПараметр("ГраницаКонецПериода", Новый Граница(КонецМесяца(Период), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация",         Организация);
	Запрос.УстановитьПараметр("ИспользоватьДанныеНалоговогоУчета", ИспользоватьДанныеНалоговогоУчета);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Организация КАК Организация
	|ПОМЕСТИТЬ Организации
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Организации.Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ГоловнаяОрганизация = &Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокОтражения.Организация,
	|	ПорядокОтражения.Склад,
	|	ПорядокОтражения.ГруппаФинансовогоУчета,
	|	ПорядокОтражения.СчетУчетаНаСкладе
	|ПОМЕСТИТЬ НастройкиИсключений
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияНоменклатуры КАК ПорядокОтражения
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Организации КАК Организации
	|	ПО
	|		ПорядокОтражения.Организация = Организации.Организация 
	|ГДЕ
	|	ПорядокОтражения.СчетУчетаНаСкладе <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Склад,
	|	ГруппаФинансовогоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГруппыФинУчетаНоменклатуры.Ссылка КАК ГруппаФинансовогоУчета,
	|	ГруппыФинУчетаНоменклатуры.СчетУчетаНаСкладе КАК СчетУчетаНаСкладе
	|ПОМЕСТИТЬ НастройкиПоУмолчанию
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГруппыФинУчетаНоменклатуры
	|	
	|ОБЪЕДИНИТЬ ВСЕ	
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаФинансовогоУчета,
	|	ПорядокОтраженияНоменклатуры.СчетУчетаНаСкладе
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияНоменклатуры КАК ПорядокОтраженияНоменклатуры
	|ГДЕ
	|	ПорядокОтраженияНоменклатуры.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	И ПорядокОтраженияНоменклатуры.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	И ПорядокОтраженияНоменклатуры.ГруппаФинансовогоУчета = ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГруппаФинансовогоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета
	|ПОМЕСТИТЬ РазделыУчетаТоваров
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Аналитика.КлючАналитики КАК Ключ,
	|	РазделыУчетаТоваров.РазделУчета КАК РазделУчета,
	|	ЕСТЬNULL(НастройкиИсключений.Организация, Организации.Организация) КАК Организация
	|ПОМЕСТИТЬ АналитикиТоваров
	|ИЗ
	|	РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РазделыУчетаТоваров	КАК РазделыУчетаТоваров
	|	ПО
	|		ИСТИНА
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО 
	|		Аналитика.Номенклатура = СпрНоменклатура.Ссылка
	|		И СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		НастройкиИсключений КАК НастройкиИсключений
	|	ПО 
	|		Аналитика.Склад = НастройкиИсключений.Склад
	|		И СпрНоменклатура.ГруппаФинансовогоУчета = НастройкиИсключений.ГруппаФинансовогоУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		НастройкиПоУмолчанию КАК НастройкиПоУмолчанию
	|	ПО 
	|		СпрНоменклатура.ГруппаФинансовогоУчета = НастройкиПоУмолчанию.ГруппаФинансовогоУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Организации КАК Организации
	|	ПО
	|		НастройкиИсключений.Организация ЕСТЬ NULL
	|
	|ГДЕ
	|	ЕСТЬNULL(НастройкиИсключений.СчетУчетаНаСкладе, НастройкиПоУмолчанию.СчетУчетаНаСкладе) В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Товары))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ,
	|	Организация,
	|	РазделУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиРасходов.Ссылка
	|ПОМЕСТИТЬ СтатьиТранспортныхРасходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|ГДЕ
	|	СтатьиРасходов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовНУ.ТранспортныеРасходы)
	|	И НЕ СтатьиРасходов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ИсходныеДанные.СуммаРасходов) КАК СуммаРасходов,
	|	СУММА(ИсходныеДанные.РеализацияТоваров) КАК РеализацияТоваров,
	|	СУММА(ИсходныеДанные.СальдоТоваровКонечное) КАК СальдоТоваровКонечное
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР КОГДА &ИспользоватьДанныеНалоговогоУчета = ИСТИНА ТОГДА
	|			СуммаРеглОстаток - ПостояннаяРазницаОстаток - ВременнаяРазницаОстаток
	|		ИНАЧЕ
	|			СуммаРеглОстаток
	|		КОНЕЦ КАК СуммаРасходов,
	|		0 КАК РеализацияТоваров,
	|		0 КАК СальдоТоваровКонечное
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы.Остатки(
	|				&НачалоПериода,
	|				Организация В (ВЫБРАТЬ Т.Организация ИЗ Организации КАК Т)
	|				И СтатьяРасходов В (ВЫБРАТЬ Т.Ссылка ИЗ СтатьиТранспортныхРасходов КАК Т)
	|		) КАК Расходы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР КОГДА &ИспользоватьДанныеНалоговогоУчета = ИСТИНА ТОГДА
	|			СуммаРеглПриход - ПостояннаяРазницаПриход - ВременнаяРазницаПриход
	|		ИНАЧЕ
	|			СуммаРеглПриход
	|		КОНЕЦ КАК СуммаРасходов,
	|		0 КАК РеализацияТоваров,
	|		0 КАК СальдоТоваровКонечное
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы.Обороты(
	|				&НачалоПериода, &КонецПериода, ,
	|				Организация В (ВЫБРАТЬ Т.Организация ИЗ Организации КАК Т)
	|				И СтатьяРасходов В (ВЫБРАТЬ Т.Ссылка ИЗ СтатьиТранспортныхРасходов КАК Т)
	|		) КАК Расходы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		0 КАК СуммаРасходов,
	|		ВЫБОР КОГДА &ИспользоватьДанныеНалоговогоУчета = ИСТИНА ТОГДА
	|			ВыручкаИСебестоимостьПродаж.СебестоимостьРегл 
	|				- ВыручкаИСебестоимостьПродаж.ПостояннаяРазница 
	|				- ВыручкаИСебестоимостьПродаж.ВременнаяРазница
	|		ИНАЧЕ
	|			СебестоимостьРегл
	|		КОНЕЦ КАК РеализацияТоваров,
	|		0 КАК СальдоТоваровКонечное
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			АналитикиТоваров КАК АналитикиТоваров
	|		ПО 
	|			ВыручкаИСебестоимостьПродаж.АналитикаУчетаНоменклатуры = АналитикиТоваров.Ключ
	|		    И ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам.Организация = АналитикиТоваров.Организация
	|		    И АналитикиТоваров.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	ГДЕ
	|		ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ВыручкаИСебестоимостьПродаж.РасчетСебестоимости
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		0 КАК СуммаРасходов,
	|		0 КАК РеализацияТоваров,
	|		ВЫБОР КОГДА &ИспользоватьДанныеНалоговогоУчета = ИСТИНА ТОГДА
	|			Товары.СтоимостьРеглОстаток - Товары.ПостояннаяРазницаОстаток - Товары.ВременнаяРазницаОстаток
	|		ИНАЧЕ
	|			Товары.СтоимостьРеглОстаток
	|		КОНЕЦ КАК СальдоТоваровКонечное
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров.Остатки(
	|				&ГраницаКонецПериода,
	|				(АналитикаУчетаНоменклатуры, РазделУчета, Организация) В (
	|					ВЫБРАТЬ 
	|						Т.Ключ,
	|						Т.РазделУчета, 
	|						Т.Организация 
	|					ИЗ 
	|						АналитикиТоваров КАК Т)
	|		) КАК Товары
	|	) КАК ИсходныеДанные
	|";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
		
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
		
	// Требования статьи 320 следующие:
	// Сумма прямых расходов в части транспортных расходов, 
	// относящаяся к остаткам нереализованных товаров, 
	// определяется по среднему проценту за текущий месяц 
	// с учетом переходящего остатка на начало месяца в следующем порядке:
	// 1) определяется сумма прямых расходов, 
	//    приходящихся на остаток нереализованных товаров на начало месяца и осуществленных в текущем месяце;
	
	СуммаРасходов = Выборка.СуммаРасходов;
	Если СуммаРасходов = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	// 2) определяется стоимость приобретения товаров, реализованных в текущем месяце,
	//    и стоимость приобретения остатка нереализованных товаров на конец месяца;
	
	РеализацияТоваров     = Выборка.РеализацияТоваров;
	СальдоТоваровКонечное = Выборка.СальдоТоваровКонечное;
	СтоимостьТоваров      = РеализацияТоваров + СальдоТоваровКонечное;
	
	Если РеализацияТоваров = 0 Или СтоимостьТоваров = 0 Тогда
		// В текущем месяце транспортные расходы принять нельзя - все расходы приходятся на остаток товаров
		Возврат 0;
	КонецЕсли;
	
	// 3) рассчитывается средний процент как отношение суммы прямых расходов (пункт 1 настоящей части)
	//    к стоимости товаров (пункт 2 настоящей части);
	
	ПроцентРасходов = Окр(СуммаРасходов / СтоимостьТоваров, 8);
	
	// 4) определяется сумма прямых расходов, относящаяся к остатку нереализованных товаров, 
	//    как произведение среднего процента и стоимости остатка товаров на конец месяца.
	СальдоРасходовКонечное = Окр(ПроцентРасходов * СальдоТоваровКонечное, 2);
	
	// <конец цитаты ст.320>
	// Функция должна вернуть не сальдо расходов, а долю расходов текущего месяца
	РасходыТекущегоПериода      = СуммаРасходов - СальдоРасходовКонечное;
	Возврат РасходыТекущегоПериода / СуммаРасходов;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ПроцедурыИФункцииОтносящиесяКЗаполнениюРегламентированныхОтчетов

#Область ЗаполнениеДекларацииПоПрибыли

Процедура ДобавитьСтрокуРасшифровки(ТаблицаРасшифровок, ИмяПоказателя, НаименованиеПоказателя, ЗнакОперации, НаименованиеСлагаемого,
										Сумма, ИмяРаздела, ДополнительныеПараметры = Неопределено)
										
	ЗаполнениеРасшифровкаРегламентированнойОтчетности.ДобавитьСтрокуРасшифровки(ТаблицаРасшифровок,
																				ИмяПоказателя,
																				НаименованиеПоказателя,
																				ЗнакОперации,
																				НаименованиеСлагаемого,
																				Сумма,
																				ИмяРаздела,
																				ДополнительныеПараметры);
																				
КонецПроцедуры

Функция ПолучитьМассивВнереализационныхРасходов()
	
	Массив = Новый Массив;
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ВозмещениеУбытковКПолучениюУплате);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДолевоеУчастиеВИностранныхОрганизациях);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДолевоеУчастиеВРоссийскихОрганизациях);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ОперацииСФинансовымиИнструментамиСрочныхСделок);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ОперацииСФинансовымиИнструментамиСрочныхСделокОР);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.СдачаИмуществаВАрендуИлиСубаренду);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.УчастиеВДругихОрганизациях);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницы);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницыПоРасчетамВУЕ);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.НДСПоСписаннойКредиторскойЗадолженности);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ОтчисленияВОценочныеРезервы);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПремияПокупателю);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыКПолучениюУплате);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыНачисленныеПоСт269);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыПоГосударственнымЦеннымБумагам);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РасходыНаУслугиБанков);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РасходыОтСниженияСтоимостиАктивов);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ВосстановлениеАмортизационнойПремии);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.КорректировкаПрибылиДоРыночныхЦен);
	Массив.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам);
	
	Возврат Массив;
	
КонецФункции

Функция БухИтогиНайти(ИмяЗначения, КлючСтроки, ТаблицаПоиска, ПолучениеИтогов = Истина)
	
	КлючКолонки = "Счет";
	
	Если ТипЗнч(КлючСтроки) = Тип("Массив") Тогда
		
		// Если в качестве возвращаемого значения необходимы итоги, то возвращаем число, иначе - массив найденных значений
		НайденноеЗначение = ?(ПолучениеИтогов, 0, Новый Массив);
		
		Если КлючСтроки.Количество() > 0 Тогда
			
			КлючСтрокиДляПоиска = Новый Массив;
			Для Каждого ЗначениеКлюча Из КлючСтроки Цикл
				КлючСтрокиДляПоиска.Добавить(ЗначениеКлюча);
			КонецЦикла;
			
			Для Каждого СтрТЗ Из ТаблицаПоиска Цикл
				
				ИндексКлюча = КлючСтрокиДляПоиска.Найти(СтрТЗ[КлючКолонки]);
				
				Если Не ИндексКлюча = Неопределено Тогда
					
					Если ПолучениеИтогов Тогда
						
						// Суммируем полученное значение в итогах к возврату
						ЗначениеВСтроке = СтрТЗ[ИмяЗначения];
						ЗначениеВСтрокеЯвляетсяЧислом = (ТипЗнч(ЗначениеВСтроке) = Тип("Число"));
						НайденноеЗначение = НайденноеЗначение + ?(Не ЗначениеВСтрокеЯвляетсяЧислом, 0, ЗначениеВСтроке);
						
					Иначе
						
						// Добавляем значение в массив, если оно было найдено
						ЗначениеВСтроке = СтрТЗ[ИмяЗначения];
						Если Не ЗначениеВСтроке = Неопределено И Не ЗначениеВСтроке = NULL Тогда
							НайденноеЗначение.Добавить(ЗначениеВСтроке);
						КонецЕсли;
						
					КонецЕсли;
					
					// Считаем, что ключи строк уникальны в таблице поиска
					КлючСтрокиДляПоиска.Удалить(ИндексКлюча);
					Если КлючСтрокиДляПоиска.Количество() = 0 Тогда
						Прервать;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		
	Иначе
		
		// Ищем строку по ключу строки и колонки
		НайденнаяСтрока   = ТаблицаПоиска.Найти(КлючСтроки, КлючКолонки);
		НайденноеЗначение = ?(НайденнаяСтрока = Неопределено, Неопределено, НайденнаяСтрока[ИмяЗначения]);
		
	КонецЕсли;
	
	// Возвращаем найденное значение
	Если НайденноеЗначение = Неопределено
		ИЛИ НайденноеЗначение = NULL
		ИЛИ (ТипЗнч(НайденноеЗначение) = Тип("Массив") И НайденноеЗначение.Количество() = 0) Тогда
		Возврат ?(ПолучениеИтогов, 0, ""); // Если значений не найдено, то для итогов возвращаем 0, для остального поиска возвращаем пустую строку
		
	Иначе
		Возврат НайденноеЗначение;
		
	КонецЕсли;
	
КонецФункции

Функция МассивСписковВОбщийСписок(МассивСписков)
	
	ОбщийСписок = Новый СписокЗначений;
	
	Для Каждого ЧастныйСписок из МассивСписков Цикл
		Для Каждого ЭлементСписка из ЧастныйСписок Цикл
			ОбщийСписок.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление, ЭлементСписка.Пометка, ЭлементСписка.Картинка);
		КонецЦикла;
	КонецЦикла;
	
	Возврат ОбщийСписок;
	
КонецФункции

Функция ПолучитьДополнительныеПараметрыСубконто(ВидСубконто1 = Неопределено, Субконто1 = Неопределено,
												ВидСубконто2 = Неопределено, Субконто2 = Неопределено,
												ВидСубконто3 = Неопределено, Субконто3 = Неопределено)
	
	Если ТипЗнч(Субконто1) = Тип("Массив") Тогда
		Субконто1 = МассивСписковВОбщийСписок(Субконто1);
	КонецЕсли;
	Если ТипЗнч(Субконто2) = Тип("Массив") Тогда
		Субконто2 = МассивСписковВОбщийСписок(Субконто2);
	КонецЕсли;
	Если ТипЗнч(Субконто3) = Тип("Массив") Тогда
		Субконто3 = МассивСписковВОбщийСписок(Субконто3);
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	
	Если ВидСубконто1 <> Неопределено Тогда
		ДополнительныеПараметры.Вставить("Субконто1", Новый Структура("ВидСубконто, ЗначениеСубконто", ВидСубконто1, Субконто1));
	КонецЕсли;
	
	Если ВидСубконто2 <> Неопределено Тогда
		ДополнительныеПараметры.Вставить("Субконто2", Новый Структура("ВидСубконто, ЗначениеСубконто", ВидСубконто2, Субконто2));
	КонецЕсли;
	
	Если ВидСубконто3 <> Неопределено Тогда
		ДополнительныеПараметры.Вставить("Субконто3", Новый Структура("ВидСубконто, ЗначениеСубконто", ВидСубконто3, Субконто3));
	КонецЕсли;
	
	Возврат ДополнительныеПараметры;
	
КонецФункции

Процедура ВставитьРасшифровкуКосвенныхРасходов(ТаблицаРасшифровки, Запрос, СписокСтатейЗатрат, ИмяПоказателя, ВидРасходовНУ = Неопределено)
	
	ПС = ПланыСчетов.Хозрасчетный;
	
	СчетаКосвенныхЗатрат = Новый Массив;
	
	СчетаКосвенныхЗатрат.Добавить(ПС.ОсновноеПроизводство);
	СчетаКосвенныхЗатрат.Добавить(ПС.ВспомогательныеПроизводства);
	СчетаКосвенныхЗатрат.Добавить(ПС.ОбщепроизводственныеРасходы);
	СчетаКосвенныхЗатрат.Добавить(ПС.ОбщехозяйственныеРасходы);
	СчетаКосвенныхЗатрат.Добавить(ПС.ОбслуживающиеПроизводства);
	СчетаКосвенныхЗатрат.Добавить(ПС.БракВПроизводстве);
	СчетаКосвенныхЗатрат.Добавить(ПС.РасходыНаПродажу);
	
	КорСчета = Новый Массив;
	КорСчета.Добавить(ПланыСчетов.Хозрасчетный.Продажи_РасходыНаПродажуНеЕНВД);
	КорСчета.Добавить(ПланыСчетов.Хозрасчетный.Продажи_УправленческиеРасходыНеЕНВД);
	
	Запрос.УстановитьПараметр("Счет", 				 СчетаКосвенныхЗатрат);
	Запрос.УстановитьПараметр("КорСчет", 			 КорСчета);
	Запрос.УстановитьПараметр("ВидСубконто", 		 ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
	Запрос.УстановитьПараметр("ТранспортныеРасходы", Перечисления.ВидыРасходовНУ.ТранспортныеРасходы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК КО,
	|	ХозрасчетныйОбороты.Счет,
	|	ХозрасчетныйОбороты.Счет.Код КАК СчетКод,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.КорСчет.Код КАК КорСчетКод
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаНач, &ДатаКон, , Счет В ИЕРАРХИИ (&Счет), &ВидСубконто, Организация В (&СписокОрганизаций), КорСчет В ИЕРАРХИИ (&КорСчет), ) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидРасходов <> &ТранспортныеРасходы
	|	//ОтборПоВидуРасходов И ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидРасходов = &ВидРасходовНУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Счет,
	|	ХозрасчетныйОбороты.КорСчет,
	|	ХозрасчетныйОбороты.Счет.Код,
	|	ХозрасчетныйОбороты.КорСчет.Код";
	
	Если Не ВидРасходовНУ = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ОтборПоВидуРасходов ", "");
		Запрос.УстановитьПараметр("ВидРасходовНУ", ВидРасходовНУ);
		
	КонецЕсли;
	
	ВыборкаКосвЗатрат = Запрос.Выполнить().Выгрузить();
	
	ВидСубконтоПрочиеДоходыРасходы = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы;
	
	Для Каждого Выборка Из ВыборкаКосвЗатрат Цикл
		
		Если ВидРасходовНУ = Неопределено Тогда
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяПоказателя, "", "+", "!ОБ" + Выборка.СчетКод + " " + Выборка.КорСчетКод,
										Выборка.КО, "Лист02_Прил2");
		Иначе
			ЗначениеСубконто = БухИтогиНайти("СписокЗатрат", ВидРасходовНУ, СписокСтатейЗатрат, Ложь);
			ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоПрочиеДоходыРасходы, ЗначениеСубконто);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяПоказателя, "", "+", "!ОБ" + Выборка.СчетКод + " " + Выборка.КорСчетКод,
										Выборка.КО, "Лист02_Прил2", ДополнительныеПараметры);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВставитьРасшифровкуВнереализационныхДоходовРасходов(ТаблицаРасшифровки, Запрос, ИмяПоказателя, ВидСуммы, СписокПрочихДоходовИРасходов)
	
	ПС = ПланыСчетов.Хозрасчетный;
	
	Запрос.УстановитьПараметр("Счет",               ПС.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ВидСубконто",        ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("ВидДоходовРасходов", ПолучитьМассивВнереализационныхРасходов());
	Запрос.УстановитьПараметр("Распределяемые",     Перечисления.ВариантыРаздельногоУчетаНДС.Распределение);
	Запрос.УстановитьПараметр("ЕНВД",               Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотДт * ВЫБОР
	|			КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|				И ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаздельногоУчетаНДС = &Распределяемые
	|				ТОГДА 1 - ЕСТЬNULL(ДолиЕНВД.ДоляЕНВД, 0)
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов
	|	КОНЕЦ КАК ВидДоходаРасхода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			Месяц,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			&ВидСубконто,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫБОР
	|					КОГДА Субконто1 Ссылка ПланВидовХарактеристик.СтатьиРасходов
	|						//ДО И НЕ ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов В (&ВидДоходовРасходовИсключаемые)
	|						ТОГДА ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов В (&ВидДоходовРасходов)
	|					КОГДА Субконто1 Ссылка ПланВидовХарактеристик.СтатьиДоходов
	|						//ДО И НЕ ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов В (&ВидДоходовРасходовИсключаемые)
	|						ТОГДА ВЫРАЗИТЬ(Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов В (&ВидДоходовРасходов)
	|					ИНАЧЕ
	|						ЛОЖЬ
	|				КОНЕЦ
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДолиЕНВД КАК ДолиЕНВД
	|		ПО (НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, МЕСЯЦ) = ДолиЕНВД.МесяцЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиРасходов).ВидПрочихРасходов
	|		КОГДА ТИПЗНАЧЕНИЯ(Субконто1) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|			ТОГДА ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1 КАК ПланВидовХарактеристик.СтатьиДоходов).ВидПрочихДоходов
	|	КОНЕЦ";
	
	Если ВидСуммы = "КО" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "СуммаНУОборотДт", "СуммаНУОборотКт");
		Счет = ПС.ПрочиеДОходы.Код;
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ДО ", "");
		МассивКИсключению = Новый Массив;
		МассивКИсключению.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет);
		МассивКИсключению.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности);
		МассивКИсключению.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам);
		Запрос.УстановитьПараметр("ВидДоходовРасходовИсключаемые", МассивКИсключению);
		Счет = ПС.ПрочиеРасходы.Код;
	КонецЕсли;
	
	ВидСубконтоПрочиеДоходыРасходы = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы;
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Выборка Из Результат Цикл
		
		ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(
			ВидСубконтоПрочиеДоходыРасходы,
			БухИтогиНайти("СписокЗатрат", Выборка.ВидДоходаРасхода, СписокПрочихДоходовИРасходов, Ложь));
		
		Заголовок  = ?(ВидСуммы = "КО",
						НСтр("ru = 'Строка 100 ""Внереализационные доходы - всего""'"),
						НСтр("ru = 'Строка 200 ""Внереализационные расходы - всего""'"));
						
		Приложение = ?(ВидСуммы = "КО", "Лист02_Прил1", "Лист02_Прил2");
		
		ДобавитьСтрокуРасшифровки(
			ТаблицаРасшифровки,
			ИмяПоказателя,
			Заголовок,
			"+",
			"!" + ВидСуммы + Счет,
			Выборка.Сумма,
			Приложение,
			ДополнительныеПараметры);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьДолиЕНВД(МенеджерВременныхТаблиц, НачалоПериода, КонецПериода, Организации) Экспорт
	
	Месяцы = Новый ТаблицаЗначений;
	Месяцы.Колонки.Добавить("Месяц", Новый ОписаниеТипов("Дата"));
	ТекущийМесяц = НачалоМесяца(НачалоПериода);
	Пока ТекущийМесяц <= КонецПериода Цикл
		Месяцы.Добавить().Месяц = ТекущийМесяц;
		ТекущийМесяц = ДобавитьМесяц(ТекущийМесяц, 1);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	Запрос.УстановитьПараметр("Организации",   Организации);
	Запрос.УстановитьПараметр("Месяцы",        Месяцы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Месяцы.Месяц КАК Месяц
	|ПОМЕСТИТЬ ВТ_Месяцы
	|ИЗ
	|	&Месяцы КАК Месяцы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ДолиЕНВД.ДоляЕНВД) КАК Доля,
	|	НАЧАЛОПЕРИОДА(ДолиЕНВД.ПериодРасчета, МЕСЯЦ) КАК Месяц
	|ПОМЕСТИТЬ ВТ_ДолиСписанияКосвенныхРасходов
	|ИЗ
	|	РегистрСведений.ДолиСписанияКосвенныхРасходов КАК ДолиЕНВД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|	ПО ДолиЕНВД.Регистратор = РегламентнаяОперация.Ссылка
	|		И РегламентнаяОперация.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.СписаниеКосвенныхРасходов)
	|ГДЕ
	|	ДолиЕНВД.Организация В(&Организации)
	|	И ДолиЕНВД.Активность
	|	И ДолиЕНВД.ПериодРасчета МЕЖДУ &НачалоПериода И &КонецПериода
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ДолиЕНВД.ПериодРасчета, МЕСЯЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДолиЕНВД.Доля КАК ДоляЕНВД,
	|	ДолиЕНВД.Месяц КАК МесяцЕНВД
	|ПОМЕСТИТЬ ДолиЕНВД
	|ИЗ
	|	ВТ_ДолиСписанияКосвенныхРасходов КАК ДолиЕНВД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	Месяцы.Месяц
	|ИЗ
	|	ВТ_Месяцы КАК Месяцы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолиСписанияКосвенныхРасходов КАК ДолиЕНВД
	|		ПО Месяцы.Месяц = ДолиЕНВД.Месяц
	|ГДЕ
	|	ДолиЕНВД.Месяц ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	МесяцЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Месяцы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ДолиСписанияКосвенныхРасходов";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ДопПараметрыСубконтоПрочихДоходовИРасходов(ИмяЗначенияПеречисления, ТаблицаДляПоиска, СИтогами = Истина)
	
	ВидСубконтоПрочиеДоходыИРасходы = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы;
	ПараметрПоиска = Перечисления.ВидыПрочихДоходовИРасходов[ИмяЗначенияПеречисления];
	ЗначениеСубконто = БухИтогиНайти("СписокЗатрат", ПараметрПоиска, ТаблицаДляПоиска, СИтогами);
	ДополнительныеПараметры = ПолучитьДополнительныеПараметрыСубконто(ВидСубконтоПрочиеДоходыИРасходы, ЗначениеСубконто);
	
	Возврат ДополнительныеПараметры;
	
КонецФункции

#КонецОбласти

// 4D:ERP для Беларуси, Екатерина, 26.11.2015 17:41:24 
// , №10629
// {
// Процедуры заполнения регламентированных отчетов

Процедура ПолучитьСведенияОПоказателяхОтчетаРегистрНалоговогоУчета1ФормаОтчета2012(ПоказателиОтчета) Экспорт
	
	// Регистр налогового учета №1
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П0103", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П0104", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П0106", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П0203", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П0204", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П0206", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П0303", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П0304", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П0306", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П0403", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П0404", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П0406", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П0503", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П0504", Истина, Истина);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П0506", Истина, Истина);
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаРегистрНалоговогоУчета2ФормаОтчета2012(ПоказателиОтчета) Экспорт
	
	// Регистр налогового учета №2
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001102_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001103_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001105_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001107_1", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001102_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001103_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001105_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001107_2", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001102_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001103_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001105_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001107_3", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001102_4", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001103_4", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001105_4", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001107_4", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001102_5", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001103_5", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001105_5", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001107_5", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001102_6", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001103_6", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001105_6", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001107_6", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001102_7", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001103_7", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001105_7", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001107_7", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001102_8", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001103_8", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001105_8", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001107_8", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001102_9", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001103_9", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001105_9", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001107_9", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001102_10", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001103_10", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001105_10", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001107_10", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001102_11", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001103_11", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001105_11", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010010001107_11", Истина, Ложь);  	
	
КонецПроцедуры

Процедура ЗаполнитьОтчетРегистрНалоговогоУчета1ФормаОтчета2012(ПараметрыОтчета, Контейнер) Экспорт
	
	Перем ТаблицаРасшифровки; // Таблица для сбора сведений о расшифровке
	
	П13 = 0;
    П14 = 0;
    П15 = 0;
	П16 = 0;
	
	П23 = 0;
	П24 = 0;
	П25 = 0;
	П26 = 0;
	
	П33 = 0;
    П34 = 0;
    П35 = 0;
	П36 = 0;
	
	П233 = 0;
	П234 = 0;
	П235 = 0;
    П236 = 0;	
	
	П43 = 0;
	П44 = 0;
    П45 = 0;
    П46 = 0;

	П53 = 0;
	П54 = 0;
    П55 = 0;
    П56 = 0;

	
	ДатаКон = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	ДатаНач = ПараметрыОтчета.мДатаНачалаПериодаОтчета;

	Год2009 = НачалоМесяца(ДатаНач) >=Дата(2009,1,1);
	Запрос = Новый Запрос;
	СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Счет = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
	Запрос.УстановитьПараметр("Счет", Счет);
	Запрос.УстановитьПараметр("НачПериода", НачалоГода(ДатаНач));
	Запрос.УстановитьПараметр("КонПериода", КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Субконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОбороты.Субконто1 КАК Субконто,
	|	НалоговыйОбороты.Период,
	|	СУММА(НалоговыйОбороты.СуммаНУОборотКт) КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Месяц, Счет = &Счет, &Субконто, Организация В (&СписокОрганизаций), , ) КАК НалоговыйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НалоговыйОбороты.Субконто1,
	|	НалоговыйОбороты.Период
	|ИТОГИ ПО
	|	Субконто";
	
	ПоСубконто = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ПоСубконто.Следующий()Цикл
		Субконто = ПоСубконто.Субконто;
		Если Субконто=Неопределено  Тогда
			Продолжить;
		КонецЕсли;
		Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов
			ИЛИ Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств
			//ИЛИ Субконто.ВидПрочихДоходовИРасходов =  Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка()
			Тогда
			П26 = П26 +  ПоСубконто.Оборот;
			ПоПериодам = ПоСубконто.Выбрать();
			Если ПоПериодам.НайтиСледующий( Новый Структура("Период", НачалоМесяца(ДатаКон)) ) Тогда
				П25 = П25 + ПоПериодам.Оборот; 
			КонецЕсли; 
		КонецЕсли;
	
		Если Год2009 Тогда 
			Если Субконто.ВидПрочихДоходовИРасходов =
				Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг
				//					ИЛИ Субконто.ВидПрочихДоходовИРасходов =  Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка()
				Тогда 
				П236 = П236 +  ПоСубконто.Оборот;
				ПоПериодам = ПоСубконто.Выбрать();
				Если ПоПериодам.НайтиСледующий( Новый Структура("Период", НачалоМесяца(ДатаКон))) Тогда
					П235 = П235 + ПоПериодам.Оборот; 
				КонецЕсли; 
			КонецЕсли; 			
		КонецЕсли;
		//Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества
		//	ИЛИ Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыПоКуплеПродажеИностраннойВалюты
		//	//ИЛИ  Субконто.ВидПрочихДоходовИРасходов =  Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка()
		//	Тогда
		//	П36 = П36 +  ПоСубконто.оборот;
		//	ПоПериодам = ПоСубконто.Выбрать();
		//	Если ПоПериодам.НайтиСледующий(Новый Структура("Период", НачалоМесяца(ДатаКон))) Тогда
		//		П35 = П35 + ПоПериодам.Оборот; 
		//	КонецЕсли; 
		//КонецЕсли;
	
      
		//Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования
		//	ИЛИ Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПредоставленныеПраваПоНМА
		//	//				ИЛИ Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка()
		//	Тогда
		//	П46 = П46 +  ПоСубконто.оборот;
		//	ПоПериодам = ПоСубконто.Выбрать();
		//	Если ПоПериодам.НайтиСледующий( Новый Структура("Период", НачалоМесяца(ДатаКон)) ) Тогда
		//		П45 = П45 + ПоПериодам.Оборот; 
		//	КонецЕсли; 
		//КонецЕсли;	
	КонецЦикла;		
	
	///////счет 90.01 по БУ
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Период КАК Период,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Месяц, Счет В ИЕРАРХИИ(&Счет), , Организация В(&СписокОрганизаций), , ) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Период";
	
	Запрос.УстановитьПараметр("НачПериода",  НачалоГода(ДатаНач));
	Запрос.УстановитьПараметр("КонПериода",  КонецДня(ДатаКон));
	СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.Выручка);
	
	ПоПериодам = Запрос.Выполнить().Выбрать();
	Пока ПоПериодам.НайтиСледующий(Новый Структура("Период", НачалоМесяца(ДатаКон)) ) Цикл
		П13 = П13 + ПоПериодам.Оборот; 
	КонецЦикла;
		         	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК Субконто,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Оборот,
	|	ХозрасчетныйОбороты.Период
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Месяц, Счет В ИЕРАРХИИ (&Счет), , Организация В(&СписокОрганизаций), , ) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто1,
	|	ХозрасчетныйОбороты.Период
	|ИТОГИ ПО
	|	Субконто";
	
	Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.ПрочиеДоходы);     //91.1
	Запрос.УстановитьПараметр("НачПериода",  НачалоГода(ДатаНач));
	Запрос.УстановитьПараметр("КонПериода",  КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	
	ПоСубконто = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ПоСубконто.Следующий() Цикл
		Субконто = ПоСубконто.Субконто;
		 Если Субконто=Неопределено  Тогда
			Продолжить;
		 КонецЕсли;
         Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов
			ИЛИ Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств Тогда
			ПоПериоду = ПоСубконто.Выбрать();
			Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(ДатаКон)) ) Тогда
				П23 = П23 + ПоПериоду.Оборот; 
			КонецЕсли;
		ИначеЕсли Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества
			ИЛИ (Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг 
			И Не Год2009)Тогда
			ПоПериоду = ПоСубконто.Выбрать();
			Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(ДатаКон)) ) Тогда
				П33 = П33 + ПоПериоду.Оборот; 
			КонецЕсли
		ИначеЕсли Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг 
			И  Год2009 Тогда
			ПоПериоду = ПоСубконто.Выбрать();
			Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(ДатаКон)) ) Тогда
				П233 = П233 + ПоПериоду.Оборот; 
			КонецЕсли
		ИначеЕсли Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования
			//ИЛИ Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПредоставленныеПраваПоНМА 
			ИЛИ Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияДоНаступленияСрокаПлатежа 
			ИЛИ Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияКакОказанияФинансовыхУслуг
			ИЛИ Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа Тогда
			ПоПериоду = ПоСубконто.Выбрать();
			Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(ДатаКон)) ) Тогда
				П43 = П43 + ПоПериоду.Оборот; 
			КонецЕсли
		КонецЕсли;
	КонецЦикла;
	
	// 2012  +90.7
	//*****************************************
	//****ПрочиеДоходыПоТекущейДеятельности 90.7
	//БУ
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаОборотКт КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			&Субконто,
	|			Организация В (&СписокОрганизаций)
	|				И НЕ Субконто1.ВНУВнереализационныеДоходыРасходы,
	|			,
	|			) КАК ХозрасчетныйОбороты";
	
	//Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.ПрочиеДоходыПоТекущейДеятельности);     //90.7
	Запрос.УстановитьПараметр("НачПериода",  НачалоМесяца(ДатаКон));	
	Запрос.УстановитьПараметр("КонПериода",  КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	
	ПоСубконто = Запрос.Выполнить().Выбрать();
	Пока ПоСубконто.Следующий() Цикл
		П33 = П33 + ПоСубконто.Оборот; 
	КонецЦикла;		
	
	//НУ
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОбороты.Субконто1 КАК Субконто,
	|	СУММА(НалоговыйОбороты.СуммаНУОборотКт) КАК Оборот,
	|	НалоговыйОбороты.Период
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			Месяц,
	|			Счет В (&Счета),
	|			&Субконто,
	|			Организация В(&СписокОрганизаций)
	|				И НЕ Субконто1.ВНУВнереализационныеДоходыРасходы,
	|			,
	|			) КАК НалоговыйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НалоговыйОбороты.Субконто1,
	|	НалоговыйОбороты.Период
	|ИТОГИ ПО
	|	Субконто
	|";
	
	//Запрос.УстановитьПараметр("Счета",       ПланыСчетов.Хозрасчетный.ПрочиеДоходыПоТекущейДеятельности);  //90.7
	Запрос.УстановитьПараметр("НачПериода",  НачалоГода(ДатаНач));
	Запрос.УстановитьПараметр("КонПериода",  КонецДня(ДатаКон));
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);			
	
	ПоСубконто = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ПоСубконто.Следующий() Цикл
		П36 = П36 +  ПоСубконто.оборот;
		ПоПериодам = ПоСубконто.Выбрать();
		Если ПоПериодам.НайтиСледующий(Новый Структура("Период", НачалоМесяца(ДатаКон))) Тогда
			П35 = П35 + ПоПериодам.Оборот; 
		КонецЕсли;  				
	КонецЦикла;	
	
	//******************	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НалоговыйОбороты.Период КАК Период,
	|	НалоговыйОбороты.СуммаНУОборотКт КАК СуммаОборотКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Месяц, Счет В ИЕРАРХИИ (&Счет), , Организация В (&СписокОрганизаций), , ) КАК НалоговыйОбороты
	|ИТОГИ
	|	СУММА(СуммаОборотКт)
	|ПО
	|	ОБЩИЕ";
	Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.Выручка);     //90.1
	Запрос.УстановитьПараметр("НачПериода",  НачалоГода(ДатаНач));
	Запрос.УстановитьПараметр("КонПериода",  КонецДня(ДатаКон));
	СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);	
	Общие = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если Общие.Следующий() Тогда
		П16 =  Общие.СуммаОборотКт;	
		ПоПериодам = Запрос.Выполнить().Выбрать();
		Пока ПоПериодам.НайтиСледующий(Новый Структура("Период", НачалоМесяца(ДатаКон)) ) Цикл
			П15 = П15 + ПоПериодам.СуммаОборотКт; 
		КонецЦикла;
	КонецЕсли;	
	Если Год2009 Тогда
		
		П234 =  П235-П233;
	КонецЕсли;
	
	//Область
	П14 = П15-П13;
	П24 = П25-П23;
	П34 = П35-П33;
	П44 = П45-П43;
	
	П53 = П13+П23+П33+П43+ ?(Год2009, П233,0);
	П54 = П14+П24+П34+П44+ ?(Год2009, П234,0);
	П55 = П15+П25+П35+П45+ ?(Год2009, П235,0);
	П56 = П16+П26+П36+П46+ ?(Год2009, П236,0);
	
	
	////////////////////////////////////////////////////////////////////////////////////
	Раздел1 = Контейнер.Раздел1;
	
	Раздел1.П0103  = П13; 
	Раздел1.П0104  = П14; 
	Раздел1.П0105  = П15; 
	Раздел1.П0106  = П16; 
	
	Раздел1.П0203  = П23; 
	Раздел1.П0204  = П24; 
	Раздел1.П0205  = П25; 
	Раздел1.П0206  = П26; 
	
	Раздел1.П0403  = П33; 
	Раздел1.П0404  = П34; 
	Раздел1.П0405  = П35; 
	Раздел1.П0406  = П36; 
	
	Раздел1.П0503  = П43; 
	Раздел1.П0504  = П44; 
	Раздел1.П0505  = П45; 
	Раздел1.П0506  = П46; 
	
	Если Год2009 Тогда
		Раздел1.П0303  = П233; 
		Раздел1.П0304  = П234; 
		Раздел1.П0305  = П235; 
		Раздел1.П0306  = П236; 
	КонецЕсли;
	
	Раздел1.П0603  = П53; 
	Раздел1.П0604  = П54; 
	Раздел1.П0605  = П55; 
	Раздел1.П0606  = П56;   
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Контейнер", Контейнер);
		
	ПоместитьВоВременноеХранилище(СтруктураДанных, ПараметрыОтчета.АдресВоВременномХранилище);

КонецПроцедуры

Процедура ЗаполнитьОтчетРегистрНалоговогоУчета2ФормаОтчета2012(ПараметрыОтчета, Контейнер) Экспорт
	
	П2013 = 0;
	П2014 = 0;
	П2015 = 0;
	П2016 = 0;
	
	П2023 = 0;
	П2024 = 0;
	П2025 = 0;
	П2026 = 0;
	
	П2033 = 0;
	П2034 = 0;
	П2035 = 0;
	П2036 = 0;
	
	П2043 = 0;
	П2044 = 0;
	П2045 = 0;
	П2046 = 0;
	
	П2053 =  0;
	П20531 = 0;
	П2054 =  0;
	П2055 =  0;
	П2056 =  0;
	
	П2063 = 0;
	П2064 = 0;
	П2065 = 0;
	П2066 = 0;
	
	П2073 = 0;
	П2074 = 0;
	П2075 = 0;
	П2076 = 0;
	
	П2083 = 0;
	П2084 = 0;
	П2085 = 0;
	П2086 = 0;
	
	П2093 = 0;
	П2094 = 0;
	П2095 = 0;
	П2096 = 0;
	
	П2103 = 0;
	П2104 = 0;
	П2105 = 0;
	П2106 = 0;
	
	П2113 = 0;
	П2114 = 0;
	П2115 = 0;
	П2116 = 0;
	
	П2123 = 0;
	П2124 = 0;
	П2125 = 0;
	П2126 = 0;
	
	П2133 = 0;
	П2134 = 0;
	П2135 = 0;
	П2136 = 0;
	
	П131 = 0;
	П141 = 0;
	П151 = 0;
	П161 = 0;
	
	ПИ3 = 0; ПИ4 = 0; ПИ5 = 0; ПИ6 = 0; 
	Ном = 1;
	
	КонПериода = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	НачПериода = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	
	СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(ПараметрыОтчета.Организация);
	
	//********** Хозрасчетный 92.1 до 01.01.2012 г. и 91.1 с 01.01.2012 г.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК Субконто,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Оборот,
	|	ХозрасчетныйОбороты.Период
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Месяц, Счет В ИЕРАРХИИ (&Счет), &Субконто, Организация В (&Организация), , ) КАК ХозрасчетныйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто1,
	|	ХозрасчетныйОбороты.Период
	|ИТОГИ ПО
	|	Субконто";
	
	Запрос.УстановитьПараметр("Счет",       ПланыСчетов.Хозрасчетный.ПрочиеДоходы); // счет 91.1 план счетов 2012
	Запрос.УстановитьПараметр("НачПериода", НачалоГода(НачПериода));
	Запрос.УстановитьПараметр("КонПериода", КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Субконто",   ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("Организация",СписокОрганизаций);
	
	ПоСубконто = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ПоСубконто.Следующий() Цикл
		Субконто = ПоСубконто.Субконто;
		Если Субконто=Неопределено  Тогда
			Продолжить;
		КонецЕсли;
		Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате
			Тогда
			ПоПериоду = ПоСубконто.Выбрать();
			Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
				П2013 = П2013 + ПоПериоду.Оборот; 
			КонецЕсли;
		КонецЕсли;
		//Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.БлаготворительнаяПомощь
		//	ИЛИ Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав 
		//	Тогда
		//	ПоПериоду = ПоСубконто.Выбрать();
		//	Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
		//		П2023 = П2023 + ПоПериоду.Оборот; 
		//	КонецЕсли;
		//КонецЕсли;
		//Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.НедостачиПотериАктивов
		//	Тогда
		//	ПоПериоду = ПоСубконто.Выбрать();
		//	Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
		//		П2033 = П2033 + ПоПериоду.Оборот; 
		//	КонецЕсли;
		//КонецЕсли;
		Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ВозмещениеУбытковКПолучениюУплате
			Тогда
			ПоПериоду = ПоСубконто.Выбрать();
			Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
				П2043 = П2043 + ПоПериоду.Оборот; 
			КонецЕсли;
		КонецЕсли;
		Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет
			Тогда
			ПоПериоду = ПоСубконто.Выбрать();
			Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
				П2053 = П2053 + ПоПериоду.Оборот; 
			КонецЕсли;
		КонецЕсли;
		Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности
			Тогда
			ПоПериоду = ПоСубконто.Выбрать();
			Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
				П2063 = П2063 + ПоПериоду.Оборот; 
			КонецЕсли;
		КонецЕсли;
		Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницы
			Тогда
			ПоПериоду = ПоСубконто.Выбрать();
			Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
				П2073 = П2073 + ПоПериоду.Оборот; 
			КонецЕсли;
		КонецЕсли;
		Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницыПоРасчетамВУЕ
			Тогда
			ПоПериоду = ПоСубконто.Выбрать();
			Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
				П2083 = П2083 + ПоПериоду.Оборот; 
			КонецЕсли;
		КонецЕсли;
		//Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДооценкаУценкаАктивов
		//	Тогда
		//	ПоПериоду = ПоСубконто.Выбрать();
		//	Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
		//		П2093 = П2093 + ПоПериоду.Оборот; 
		//	КонецЕсли;
		//КонецЕсли;
		Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.УчастиеВДругихОрганизациях
			Тогда
			ПоПериоду = ПоСубконто.Выбрать();
			Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
				П2133 = П2133 + ПоПериоду.Оборот; 
			КонецЕсли;
		КонецЕсли;
		Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.СдачаИмуществаВАрендуИлиСубаренду
			Тогда
			ПоПериоду = ПоСубконто.Выбрать();
			Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
				П2103 = П2103 + ПоПериоду.Оборот; 
			КонецЕсли;
		КонецЕсли;
		Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств
			Тогда
			ПоПериоду = ПоСубконто.Выбрать();
			Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
				П2113 = П2113 + ПоПериоду.Оборот; 
			КонецЕсли;
		КонецЕсли;
		Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыКПолучениюУплате
			Тогда
			ПоПериоду = ПоСубконто.Выбрать();
			Если ПоПериоду.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
				П2123 = П2123 + ПоПериоду.Оборот; 
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	//**************** 92.1 по налоговому до 01.01.2012 г. и 91.1 с 01.01.2012 г.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОбороты.Субконто1 КАК Субконто,
	|	СУММА(НалоговыйОбороты.СуммаНУОборотКт) КАК Оборот,
	|	НалоговыйОбороты.Период,
	|	НалоговыйОбороты.Счет КАК Счет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Месяц, Счет В ИЕРАРХИИ (&Счет), &Субконто, Организация В (&Организация), , ) КАК НалоговыйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НалоговыйОбороты.Субконто1,
	|	НалоговыйОбороты.Период,
	|	НалоговыйОбороты.Счет
	|ИТОГИ ПО
	|	Счет,
	|	Субконто";
	
	Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.ПрочиеДоходы); //счет 91.1  план счетов 2012
	Запрос.УстановитьПараметр("НачПериода",  НачалоГода(НачПериода));
	Запрос.УстановитьПараметр("КонПериода",  КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("Организация", СписокОрганизаций);
	
	ПоСчетам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ПоСчетам.Следующий()Цикл
		
		ПоСубконто = ПоСчетам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ПоСубконто.Следующий() Цикл
			Субконто = ПоСубконто.Субконто;
			Если Субконто=Неопределено  Тогда
				Продолжить;
			КонецЕсли;
			Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате
				Тогда
				П2016 = П2016 +  ПоСубконто.Оборот;
				ПоПериодам = ПоСубконто.Выбрать();
				Если ПоПериодам.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
					П2015 = П2015 + ПоПериодам.Оборот; 
				КонецЕсли; 
			КонецЕсли;
			//Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.БлаготворительнаяПомощь
			//	ИЛИ Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав
			//	Тогда
			//	П2026 = П2026 +  ПоСубконто.Оборот;
			//	ПоПериодам = ПоСубконто.Выбрать();
			//	Если ПоПериодам.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
			//		П2025 = П2025 + ПоПериодам.Оборот; 
			//	КонецЕсли; 
			//КонецЕсли;
			//Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.НедостачиПотериАктивов
			//	Тогда
			//	П2036 = П2036 +  ПоСубконто.Оборот;
			//	ПоПериодам = ПоСубконто.Выбрать();
			//	Если ПоПериодам.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
			//		П2035 = П2035 + ПоПериодам.Оборот; 
			//	КонецЕсли; 
			//КонецЕсли;
			Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ВозмещениеУбытковКПолучениюУплате
				Тогда
				П2046 = П2046 +  ПоСубконто.Оборот;
				ПоПериодам = ПоСубконто.Выбрать();
				Если ПоПериодам.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
					П2045 = П2045 + ПоПериодам.Оборот; 
				КонецЕсли; 
			КонецЕсли;
			Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет
				Тогда
				П2056 = П2056 +  ПоСубконто.Оборот;
				ПоПериодам = ПоСубконто.Выбрать();
				Если ПоПериодам.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
					П2055 = П2055 + ПоПериодам.Оборот; 
				КонецЕсли; 
			КонецЕсли;
			Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности
				Тогда
				П2066 = П2066 +  ПоСубконто.Оборот;
				ПоПериодам = ПоСубконто.Выбрать();
				Если ПоПериодам.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
					П2065 = П2065 + ПоПериодам.Оборот; 
				КонецЕсли; 
			КонецЕсли;
			Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницы
				Тогда
				П2076 = П2076 +  ПоСубконто.Оборот;
				ПоПериодам = ПоСубконто.Выбрать();
				Если ПоПериодам.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
					П2075 = П2075 + ПоПериодам.Оборот; 
				КонецЕсли; 
			КонецЕсли;
			Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницыПоРасчетамВУЕ
				Тогда
				П2086 = П2086 +  ПоСубконто.Оборот;
				ПоПериодам = ПоСубконто.Выбрать();
				Если ПоПериодам.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
					П2085 = П2085 + ПоПериодам.Оборот; 
				КонецЕсли; 
			КонецЕсли;
			//Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДооценкаУценкаАктивов
			//	Тогда
			//	П2096 = П2096 +  ПоСубконто.Оборот;
			//	ПоПериодам = ПоСубконто.Выбрать();
			//	Если ПоПериодам.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
			//		П2095 = П2095 + ПоПериодам.Оборот; 
			//	КонецЕсли; 
			//КонецЕсли;
			Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.УчастиеВДругихОрганизациях
				Тогда
				П2136 = П2136 +  ПоСубконто.Оборот;
				ПоПериодам = ПоСубконто.Выбрать();
				Если ПоПериодам.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
					П2135 = П2135 + ПоПериодам.Оборот; 
				КонецЕсли; 
			КонецЕсли;
			Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.СдачаИмуществаВАрендуИлиСубаренду
				Тогда
				П2106 = П2106 +  ПоСубконто.Оборот;
				ПоПериодам = ПоСубконто.Выбрать();
				Если ПоПериодам.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
					П2105 = П2105 + ПоПериодам.Оборот; 
				КонецЕсли; 
			КонецЕсли;
			Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ЛиквидацияОсновныхСредств
				Тогда
				П2116 = П2116 +  ПоСубконто.Оборот;
				ПоПериодам = ПоСубконто.Выбрать();
				Если ПоПериодам.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
					П2115 = П2115 + ПоПериодам.Оборот; 
				КонецЕсли; 
			КонецЕсли;
			Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПроцентыКПолучениюУплате
				Тогда
				П2126 = П2126 +  ПоСубконто.Оборот;
				ПоПериодам = ПоСубконто.Выбрать();
				Если ПоПериодам.НайтиСледующий( Новый Структура("Период", НачалоМесяца(КонПериода)) ) Тогда
					П2125 = П2125 + ПоПериодам.Оборот; 
				КонецЕсли; 
			КонецЕсли;
			
		КонецЦикла;	
	КонецЦикла;	
	
	П2024 = П2025 - П2023;
	
	мФормаОтчета = Контейнер.ФормаОтчета;
	
	мФормаОтчета.П010010001103_1 = П2023;
	мФормаОтчета.П010010001104_1 = П2024;
	мФормаОтчета.П010010001105_1 = П2025;
	мФормаОтчета.П010010001106_1 = П2026;
	
	П2034 = П2035 - П2033;
	
	мФормаОтчета.П010010001103_2 = П2033;
	мФормаОтчета.П010010001104_2 = П2034;
	мФормаОтчета.П010010001105_2 = П2035;
	мФормаОтчета.П010010001106_2 = П2036;
	
	П2044 = П2045 - П2043;
	
	мФормаОтчета.П010010001103_3 = П2043;
	мФормаОтчета.П010010001104_3 = П2044;
	мФормаОтчета.П010010001105_3 = П2045;
	мФормаОтчета.П010010001106_3 = П2046;
	
	П2053 = П2053 + П20531;
	П2054 = П2055 - П2053;
	
	мФормаОтчета.П010010001103_4 = П2053;
	мФормаОтчета.П010010001104_4 = П2054;
	мФормаОтчета.П010010001105_4 = П2055;
	мФормаОтчета.П010010001106_4 = П2056;
	
	П2074 = П2075 - П2073;
	
	мФормаОтчета.П010010001103_5 = П2073;
	мФормаОтчета.П010010001104_5 = П2074;
	мФормаОтчета.П010010001105_5 = П2075;
	мФормаОтчета.П010010001106_5 = П2076;
	
	П2084 = П2085 - П2083;
	мФормаОтчета.П010010001103_6 = П2083;
	мФормаОтчета.П010010001104_6 = П2084;
	мФормаОтчета.П010010001105_6 = П2085;
	мФормаОтчета.П010010001106_6 = П2086;
	
	П2094 = П2095 - П2093;
	
	мФормаОтчета.П010010001103_7 = П2093;
	мФормаОтчета.П010010001104_7 = П2094;
	мФормаОтчета.П010010001105_7 = П2095;
	мФормаОтчета.П010010001106_7 = П2096;
	
	П2104 = П2105 - П2103;
	мФормаОтчета.П010010001103_8 = П2103;
	мФормаОтчета.П010010001104_8 = П2104;
	мФормаОтчета.П010010001105_8 = П2105;
	мФормаОтчета.П010010001106_8 = П2106;
	
	П2114 = П2115 - П2113;
	мФормаОтчета.П010010001103_9 = П2113;
	мФормаОтчета.П010010001104_9 = П2114;
	мФормаОтчета.П010010001105_9 = П2115;
	мФормаОтчета.П010010001106_9 = П2116;
	
	П2124 = П2125 - П2123;
	мФормаОтчета.П010010001103_10 = П2123;
	мФормаОтчета.П010010001104_10 = П2124;
	мФормаОтчета.П010010001105_10 = П2125;
	мФормаОтчета.П010010001106_10 = П2126;
	
	П2134 = П2135 - П2133;
	мФормаОтчета.П010010001103_11 = П2133;
	мФормаОтчета.П010010001104_11 = П2134;
	мФормаОтчета.П010010001105_11 = П2135;
	мФормаОтчета.П010010001106_11 = П2136;
	
	//**********************для остальных строк  //Прочие доходы
	
	П131 = 0;
	П151 = 0;
	П161 = 0;
	П141 = 0;
	П132 = 0;
	П152 = 0;
	П162 = 0;
	П142 = 0;	
	Ном = 13;
	
	//Хозрасчетный
	РезТаблица = Новый ТаблицаЗначений();
	РезТаблица.Колонки.Добавить("ПрочиеДиР"); 
	ОписаниеТипаЧисла15_2 = ОбщегоНазначенияБПКлиентСервер.ПолучитьОписаниеТиповЧисла(15, 2);
	
	РезТаблица.Колонки.Добавить("П131", ОписаниеТипаЧисла15_2);//БУ за месяц
	РезТаблица.Колонки.Добавить("П141", ОписаниеТипаЧисла15_2);//разница
	РезТаблица.Колонки.Добавить("П151", ОписаниеТипаЧисла15_2);//НУ за месяц
	РезТаблица.Колонки.Добавить("П161", ОписаниеТипаЧисла15_2);//НУ за год
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот,
	|	ХозрасчетныйОборотыДтКт.Период КАК Период,
	|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Месяц, , , СчетКт В ИЕРАРХИИ (&СчетаКт), &Субконто, Организация В(&Организация)) КАК ХозрасчетныйОборотыДтКт
	|ИТОГИ
	|	СУММА(СуммаОборот)
	|ПО
	|	СчетКт,
	|	СубконтоКт1";
	СчетаКт = Новый Массив();
	СчетаКт.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходы);//91.1
	Запрос.УстановитьПараметр("СчетаКт",     СчетаКт);
	Запрос.УстановитьПараметр("НачПериода",  НачалоГода(НачПериода));
	Запрос.УстановитьПараметр("КонПериода",  КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("Организация", СписокОрганизаций);
	
	ВыборкаБУПоСчету =   Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	СтуктураПоиска = Новый Структура("Период", НачалоМесяца(КонПериода));
	
	Пока ВыборкаБУПоСчету.Следующий() Цикл
		ВыборкаБУ =  ВыборкаБУПоСчету.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам) ;
		Пока ВыборкаБУ.Следующий() Цикл
			Субконто = ВыборкаБУ.СубконтоКт1;
			Если Субконто=Неопределено  Тогда
				Продолжить;
			КонецЕсли;
			
			Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.УчастиеВДругихОрганизациях 
				ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств
				ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ОперацииСФинансовымиИнструментамиСрочныхСделок
				ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ОперацииСФинансовымиИнструментамиСрочныхСделокОР
				ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы
				ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеОперационныеДоходыРасходы
				ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам
				//ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ЧрезвычайныеОбстоятельства
				//ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыПоОперациямСТарой
				//ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСВыбытиемАктивов
				//ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльПоСовместнойДеятельности
				//ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.НеУчитываемыеВЦеляхНалогообложения
				//ИЛИ  (Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыПоКуплеПродажеИностраннойВалюты
				//И ВыборкаБУ.СчетКт = ПланыСчетов.Хозрасчетный.ПрочиеДоходы)
								
				Тогда ПоСубконто = ВыборкаБУ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Если ПоСубконто.НайтиСледующий(СтуктураПоиска) Тогда  	
					РезСтрока = РезТаблица.Добавить();
					РезСтрока.ПрочиеДиР = Субконто; 
					РезСтрока.П131 = ПоСубконто.СуммаОборот;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Прочие доходы по данным налогового учета сч. 91.1//
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	НалоговыйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1,
	|	НалоговыйОборотыДтКт.СуммаНУОборотКт КАК СуммаОборот,
	|	НалоговыйОборотыДтКт.Период КАК Период,
	|	НалоговыйОборотыДтКт.СчетКт КАК СчетКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Месяц, , , СчетКт В ИЕРАРХИИ (&СчетаКт), , Организация В (&Организация)) КАК НалоговыйОборотыДтКт
	|ИТОГИ
	|	СУММА(СуммаОборот)
	|ПО
	|	СчетКт,
	|	СубконтоКт1";
	
	СчетаКт = Новый Массив();
	СчетаКт.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходы); //91.1 БУ
	
	Запрос.УстановитьПараметр("СчетаКт", СчетаКт);
	Запрос.УстановитьПараметр("НачПериода", НачалоГода(НачПериода));
	Запрос.УстановитьПараметр("КонПериода", КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Субконто", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	Запрос.УстановитьПараметр("Организация", СписокОрганизаций);
	ВыборкаНУПоСчету = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНУПоСчету.Следующий() Цикл
		ВыборкаНУ =  ВыборкаНУПоСчету.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНУ.Следующий() Цикл
			Субконто = ВыборкаНУ.СубконтоКт1;
			Если Субконто=Неопределено  Тогда
				Продолжить;
			КонецЕсли;
			
			Если Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.УчастиеВДругихОрганизациях 
				ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств
				ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ОперацииСФинансовымиИнструментамиСрочныхСделок
				ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ОперацииСФинансовымиИнструментамиСрочныхСделокОР
				ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы
				ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеОперационныеДоходыРасходы
				ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам
				//ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ЧрезвычайныеОбстоятельства
				//ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыПоОперациямСТарой
				//ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыСвязанныеСВыбытиемАктивов
				//ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльПоСовместнойДеятельности
				//ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыПоКуплеПродажеИностраннойВалюты
				ИЛИ  Субконто.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ВосстановлениеАмортизационнойПремии 
				Тогда
				
				НайденнаяСтрока = РезТаблица.Найти(Субконто,"ПрочиеДиР");
				РезСтрока = ?(НайденнаяСтрока = Неопределено, РезТаблица.Добавить(), НайденнаяСтрока);
				
				Если  НайденнаяСтрока = Неопределено Тогда
					РезСтрока.ПрочиеДиР = Субконто;
				КонецЕсли;
				
				РезСтрока.П161 = ВыборкаНУ.СуммаОборот;
				ПоСубконто = ВыборкаНУ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Если ПоСубконто.НайтиСледующий(СтуктураПоиска) Тогда  	
					РезСтрока.П151 = ПоСубконто.СуммаОборот;
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;	
	
	//*****************************
	//ПрочиеДоходыПоТекущейДеятельности
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1,
	|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК СуммаОборот,
	|	ХозрасчетныйОборотыДтКт.Период КАК Период,
	|	ХозрасчетныйОборотыДтКт.СчетКт КАК СчетКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Месяц, , , СчетКт В ИЕРАРХИИ (&СчетаКт), &Субконто, Организация В (&Организация)) КАК ХозрасчетныйОборотыДтКт
	|ГДЕ
	|	ХозрасчетныйОборотыДтКт.СубконтоКт1.ВНУВнереализационныеДоходыРасходы
	|	И НЕ ХозрасчетныйОборотыДтКт.СубконтоКт1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты)
	|ИТОГИ
	|	СУММА(СуммаОборот)
	|ПО
	|	СчетКт,
	|	СубконтоКт1";
	
	СчетаКт = Новый Массив();
	//СчетаКт.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходыПоТекущейДеятельности);//90.7
	Запрос.УстановитьПараметр("СчетаКт",     СчетаКт);
	Запрос.УстановитьПараметр("НачПериода",  НачалоГода(НачПериода));
	Запрос.УстановитьПараметр("КонПериода",  КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Запрос.УстановитьПараметр("Организация", СписокОрганизаций);
	
	ВыборкаБУПоСчету = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	СтуктураПоиска   = Новый Структура("Период", НачалоМесяца(КонПериода));
	
	Пока ВыборкаБУПоСчету.Следующий() Цикл
		ВыборкаБУ =  ВыборкаБУПоСчету.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам) ;
		Пока ВыборкаБУ.Следующий() Цикл
			Субконто = ВыборкаБУ.СубконтоКт1;
			Если Субконто=Неопределено  Тогда
				Продолжить;
			КонецЕсли;
			
			ПоСубконто = ВыборкаБУ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Если ПоСубконто.НайтиСледующий(СтуктураПоиска) Тогда  	
				РезСтрока = РезТаблица.Добавить();
				РезСтрока.ПрочиеДиР = Субконто; 
				РезСтрока.П131 = ПоСубконто.СуммаОборот;
			КонецЕсли; 	
			
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	НалоговыйОборотыДтКт.СубконтоКт1 КАК СубконтоКт1,
	|	НалоговыйОборотыДтКт.СуммаНУОборотКт КАК СуммаОборот,
	|	НалоговыйОборотыДтКт.Период КАК Период,
	|	НалоговыйОборотыДтКт.СчетКт КАК СчетКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Месяц, , , СчетКт В ИЕРАРХИИ (&СчетаКт), , Организация В (&Организация)) КАК НалоговыйОборотыДтКт
	|ГДЕ
	|	НалоговыйОборотыДтКт.СубконтоКт1.ВНУВнереализационныеДоходыРасходы
	|	И НЕ НалоговыйОборотыДтКт.СубконтоКт1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты)
	|ИТОГИ
	|	СУММА(СуммаОборот)
	|ПО
	|	СчетКт,
	|	СубконтоКт1";
	
	СчетаКт = Новый Массив();
	//СчетаКт.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходыПоТекущейДеятельности); //90.7 НУ
	Запрос.УстановитьПараметр("СчетаКт",     СчетаКт);
	Запрос.УстановитьПараметр("НачПериода",  НачалоГода(НачПериода));
	Запрос.УстановитьПараметр("КонПериода",  КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Запрос.УстановитьПараметр("Организация", СписокОрганизаций);
	
	ВыборкаНУПоСчету = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНУПоСчету.Следующий() Цикл
		ВыборкаНУ =  ВыборкаНУПоСчету.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНУ.Следующий() Цикл
			Субконто = ВыборкаНУ.СубконтоКт1;
			Если Субконто=Неопределено  Тогда
				Продолжить;
			КонецЕсли;
			
			НайденнаяСтрока = РезТаблица.Найти(Субконто,"ПрочиеДиР");
			РезСтрока = ?(НайденнаяСтрока = Неопределено, РезТаблица.Добавить(), НайденнаяСтрока);
			
			Если  НайденнаяСтрока = Неопределено Тогда
				РезСтрока.ПрочиеДиР = Субконто;
			КонецЕсли;
			
			РезСтрока.П161 = ВыборкаНУ.СуммаОборот;
			ПоСубконто = ВыборкаНУ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Если ПоСубконто.НайтиСледующий(СтуктураПоиска) Тогда  	
				РезСтрока.П151 = ПоСубконто.СуммаОборот;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;	
	
	//************************************************
	//Доходы (расходы), связанные с продажей валюты
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	Обороты.СуммаОборотКт - Обороты.СуммаОборотДт КАК Доход,
	|	Обороты.Период КАК Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК СуммаОборотКт,
	|		0 КАК СуммаОборотДт,
	|		ХозрасчетныйОборотыДтКт.Период КАК Период
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Месяц, , , СчетКт В ИЕРАРХИИ (&СчетаКт), &Субконто, Организация В (&Организация)) КАК ХозрасчетныйОборотыДтКт
	|	ГДЕ
	|		ХозрасчетныйОборотыДтКт.СубконтоКт1.Предопределенный
	|		И ХозрасчетныйОборотыДтКт.СубконтоКт1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ХозрасчетныйОборотыДтКт.Период
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		0,
	|		СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот),
	|		ХозрасчетныйОборотыДтКт.Период
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Месяц, СчетДт В ИЕРАРХИИ (&СчетаДт), &Субконто, , , Организация В (&Организация)) КАК ХозрасчетныйОборотыДтКт
	|	ГДЕ
	|		ХозрасчетныйОборотыДтКт.СубконтоДт1.Предопределенный
	|		И ХозрасчетныйОборотыДтКт.СубконтоДт1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ХозрасчетныйОборотыДтКт.Период) КАК Обороты
	|ИТОГИ
	|	СУММА(Доход)
	|ПО
	|	Период";
	
	
	СчетаКт = Новый Массив();
	//СчетаКт.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходыПоТекущейДеятельности);//90.7
	Запрос.УстановитьПараметр("СчетаКт",     СчетаКт);
	//Запрос.УстановитьПараметр("СчетаДт",     ПланыСчетов.Хозрасчетный.ПрочиеРасходыПоТекущейДеятельности); // 90.8	
	Запрос.УстановитьПараметр("НачПериода",  НачалоГода(НачПериода));
	Запрос.УстановитьПараметр("КонПериода",  КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Запрос.УстановитьПараметр("Организация", СписокОрганизаций);
	
	СтуктураПоиска = Новый Структура("Период", НачалоМесяца(КонПериода));
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.НайтиСледующий(СтуктураПоиска) Цикл
		Если Выборка.Доход > 0 Тогда  	
			РезСтрока = РезТаблица.Добавить();
			//РезСтрока.ПрочиеДиР =  Справочники.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты; 
			РезСтрока.П131 = Выборка.Доход;
		КонецЕсли;
	КонецЦикла;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	Обороты.СуммаОборотКт - Обороты.СуммаОборотДт КАК Доход,
	|	Обороты.Период КАК Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		СУММА(НалоговыйОборотыДтКт.СуммаНУОборотКт) КАК СуммаОборотКт,
	|		СУММА(НалоговыйОборотыДтКт.СуммаНУОборотДт) КАК СуммаОборотДт,
	|		НалоговыйОборотыДтКт.Период КАК Период
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Месяц, , , СчетКт В ИЕРАРХИИ (&СчетаКт), &Субконто, Организация В (&Организация)) КАК НалоговыйОборотыДтКт
	|	ГДЕ
	|		НалоговыйОборотыДтКт.СубконтоКт1.Предопределенный
	|		И НалоговыйОборотыДтКт.СубконтоКт1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НалоговыйОборотыДтКт.Период
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СУММА(НалоговыйОборотыДтКт.СуммаНУОборотКт),
	|		СУММА(НалоговыйОборотыДтКт.СуммаНУОборотДт),
	|		НалоговыйОборотыДтКт.Период
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, Месяц, СчетДт В ИЕРАРХИИ (&СчетаДт), &Субконто, , , Организация В (&Организация)) КАК НалоговыйОборотыДтКт
	|	ГДЕ
	|		НалоговыйОборотыДтКт.СубконтоДт1.Предопределенный
	|		И НалоговыйОборотыДтКт.СубконтоДт1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НалоговыйОборотыДтКт.Период) КАК Обороты
	|ИТОГИ
	|	СУММА(Доход)
	|ПО
	|	ОБЩИЕ,
	|	Период";
	
	СчетаКт = Новый Массив();
	//СчетаКт.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходыПоТекущейДеятельности); //90.7 НУ
	Запрос.УстановитьПараметр("СчетаКт",     СчетаКт);
	//Запрос.УстановитьПараметр("СчетаДт",     ПланыСчетов.Хозрасчетный.ПрочиеРасходыПоТекущейДеятельности); // 90.8
	Запрос.УстановитьПараметр("НачПериода",  НачалоГода(НачПериода));
	Запрос.УстановитьПараметр("КонПериода",  КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Запрос.УстановитьПараметр("Организация", СписокОрганизаций);
	
	СтуктураПоиска = Новый Структура("Период", НачалоМесяца(КонПериода));
	ВыборкаНУ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНУ.Следующий () Цикл  //..\\НайтиСледующий(СтуктураПоиска) Цикл
		Если ВыборкаНУ.Доход > 0  ТОгда
			//НайденнаяСтрока = РезТаблица.Найти(Справочники.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты,"ПрочиеДиР");
			//РезСтрока = ?(НайденнаяСтрока = Неопределено, РезТаблица.Добавить(), НайденнаяСтрока);
			//Если  НайденнаяСтрока = Неопределено Тогда
			//	РезСтрока.ПрочиеДиР = Справочники.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты;
			//КонецЕсли;
			//РезСтрока.П161 = ?(ВыборкаНУ.Доход > 0, ВыборкаНУ.Доход, 0);
		КонецЕсли;	 	 
		ВыборкаНУПоПериодам = ВыборкаНУ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНУПоПериодам.НайтиСледующий(СтуктураПоиска) Цикл
			Если ВыборкаНУПоПериодам.Доход > 0  Тогда 
				//НайденнаяСтрока = РезТаблица.Найти(Справочники.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты,"ПрочиеДиР");
				////РезСтрока = ?((НайденнаяСтрока = Неопределено И ВыборкаНУПоПериодам.Доход > 0) , РезТаблица.Добавить(), НайденнаяСтрока);
				//РезСтрока = ?(НайденнаяСтрока = Неопределено, РезТаблица.Добавить(), НайденнаяСтрока);
				//Если  НайденнаяСтрока = Неопределено Тогда
				//	РезСтрока.ПрочиеДиР = Справочники.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты;
				//КонецЕсли;
				//РезСтрока.П161 = ?(ВыборкаНУ.Доход > 0, ВыборкаНУ.Доход, 0);
				//РезСтрока.П151 = ?(ВыборкаНУПоПериодам.Доход > 0, ВыборкаНУПоПериодам.Доход, 0);
			КонецЕсли;
		КонецЦикла;	 
	КонецЦикла;		 
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Контейнер", Контейнер);
	СтруктураДанных.Вставить("ТаблицаРезультата", РезТаблица);
	
	ПоместитьВоВременноеХранилище(СтруктураДанных, ПараметрыОтчета.АдресВоВременномХранилище);
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаНалогНаПрибыльФормаОтчета2015(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П01010104",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П01010204",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П01010304",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010104104", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010104204", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П01010504",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П01010604",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010106204", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П01011803",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П04010403",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П04010503",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П04010903",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П04010703",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П040109103", Истина, Ложь);

КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаНалогНаПрибыльФормаОтчета2014Кв2(ПоказателиОтчета) Экспорт
	
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П01010104",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П01010204",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П01010304",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010104104", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П010104204", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П01010504",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П01010604",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П01011803",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П04010403",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П04010503",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П04010903",  Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П04010703",  Истина, Ложь);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетНалогНаПрибыльФормаОтчета2014Кв2(ПараметрыОтчета, Контейнер) Экспорт
	
	НомерМесяца   = Формат(ПараметрыОтчета.мДатаКонцаПериодаОтчета, "ДФ=М");
	НомерГода     = Формат(ПараметрыОтчета.мДатаКонцаПериодаОтчета, "ДФ=гггг");
	ДатаВОтчете   = Дата(НомерГода, 1,1); 
	ГодОтчета     = НомерГода;
	МесяцОтчета   = НомерМесяца;   
	ДатаВМесяце   = Дата( НомерГода, НомерМесяца, 1 );
	
	ПС  = ПланыСчетов["Хозрасчетный"];
		
	Счет90_01 =  ПС.Выручка;
	Счет90_02 =  ПС.себестоимостьПродаж; //90.4
	Счет90_03 =  ПС.Продажи_НДС; //90.2
	//Счет90_05 =  ПС.Реализация_ПрочиеНалогиИСборы_;
	Счет90_07 =  ПС.Продажи_РасходыНаПродажу; //90.6
	Счет90_08 =  ПС.Продажи_УправленческиеРасходы;  // 90.5
	//Счет90_7  =  ПС.ПрочиеДоходыПоТекущейДеятельности;  //90.7
    //Счет90_8  =  ПС.ПрочиеРасходыПоТекущейДеятельности; //90.10
	Счет91_01  = ПС.ПрочиеДоходы;
	
	Счет91_02   = ПС.ПрочиеРасходы;  // 91.4
	Счет91_03   = ПС.Операционные_НДС; // 91.2
	Счет91_04   = ПС.ПрочиеНалогиИСборы; // 91.3
	Счет41      = ПС.Товары;
	Счет45_01   = ПС.ПокупныеТоварыОтгруженные;
	Счет68_02   = ПС.НалогиИзВыручки;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0122)
	|				И ЕСТЬNULL(НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)) В (&СубконтоП0122)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотКт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0122,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0112)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотКт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0112,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0132)
	|					И ЕСТЬNULL(НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)) В (&СубконтоП0132)
	|				ИЛИ НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0132_)
	|					И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП0132_)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотКт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0132,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0142)
	|				И ЕСТЬNULL(НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)) В (&СубконтоП0142)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотКт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0142,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0152)
	|				И ЕСТЬNULL(НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)) В (&СубконтоП0152)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотКт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0152
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация, , ) КАК НалоговыйОбороты
	|ИТОГИ
	|	СУММА(П0122),
	|	СУММА(П0112),
	|	СУММА(П0132),
	|	СУММА(П0142),
	|	СУММА(П0152)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("НачПериода", Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецМесяца(Дата(ГодОтчета, МесяцОтчета, 1)),ВидГраницы.Включая));
	
	Счет = Новый Массив;
	Счет.Добавить(Счет90_01);
	Счет.Добавить(Счет91_01);
	
	Запрос.УстановитьПараметр("Счет", Счет);
	
	СчетП0122 = Новый Массив;
	СчетП0122.Добавить(Счет91_01);	
	Запрос.УстановитьПараметр("СчетП0122",  СчетП0122);
	Запрос.УстановитьПараметр("СчетП0112",  Счет90_01);  
	
	Запрос.УстановитьПараметр("СчетП0132",  Счет91_01); //91.1
	Запрос.УстановитьПараметр("СчетП0132_", Счет91_01); //91.1

	Запрос.УстановитьПараметр("СчетП0142",  Счет91_01); //91.1
	Запрос.УстановитьПараметр("СчетП0152",  Счет91_01); //91.1
	
	СубконтоП0122 = Новый Массив;
	//СубконтоП0122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка());
	СубконтоП0122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств);
	СубконтоП0122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов);
	Запрос.УстановитьПараметр("СубконтоП0122", СубконтоП0122);
	
	СубконтоП0132 = Новый Массив;
	//СубконтоП0132.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка());
	СубконтоП0132.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества);
	Запрос.УстановитьПараметр("СубконтоП0132", СубконтоП0132);
	
	СубконтоП0132_ = Новый Массив;
	СубконтоП0132_.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества);
	Запрос.УстановитьПараметр("СубконтоП0132_", СубконтоП0132_);

    СубконтоП0142 = Новый Массив;
	//СубконтоП0142.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка());
	СубконтоП0142.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования);
	//СубконтоП0142.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПредоставленныеПраваПоНМА);
    Запрос.УстановитьПараметр("СубконтоП0142", СубконтоП0142);
	
	СубконтоП0152 = Новый Массив;
	//СубконтоП0152.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка());
	СубконтоП0152.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг);
	Запрос.УстановитьПараметр("СубконтоП0152", СубконтоП0152);

    Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	П0122 = 0;
	П0112 = 0;
	П0202_ = 0;
	П0203_ = 0;
  	П0132 = 0;
	П0142 = 0;
	П0152 = 0; 
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		П0122 = Выборка.П0122;
		П0112 = Выборка.П0112;
		П0132 = Выборка.П0132;
		П0142 = Выборка.П0142;
		П0152 = Выборка.П0152;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОбороты.СуммаНУОборотКт КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			&Субконто,
	|			Организация = &Организация
	|				И НЕ Субконто1.ВНУВнереализационныеДоходыРасходы
	|				И НЕ Субконто1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты),
	|			,
	|			) КАК НалоговыйОбороты";
	
	//Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.ПрочиеДоходыПоТекущейДеятельности);  
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)), ВидГраницы.Включая));
	
	П0162 = 0;
   	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		П0162 = Выборка.Оборот;
	КонецЦикла;	

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП02221)
	|				И ЕСТЬNULL(НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)) В (&СубконтоП02221)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0222,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП02222)
	|				И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП02222)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0222Н,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП02321)
	|					И ЕСТЬNULL(НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)) В (&СубконтоП02321)
	|				ИЛИ НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП02322)
	|					И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП02322)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0232,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП02222)
	|				И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП02322)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0232Н,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0242)
	|				И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП0242)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0242,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0252)
	|				И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП0252)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0252
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация, , ) КАК НалоговыйОбороты
	|ИТОГИ
	|	СУММА(П0222),
	|	СУММА(П0222Н),
	|	СУММА(П0232),
	|	СУММА(П0232Н),
	|	СУММА(П0242),
	|	СУММА(П0252)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("НачПериода", Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	
	Счет = Новый Массив;
	Счет.Добавить(Счет91_02);   // 91.4
	Счет.Добавить(Счет91_03);   // 91.2
	Счет.Добавить(Счет91_04);   // 91.3
	 
	Запрос.УстановитьПараметр("Счет", Счет);

	СчетП02221 = Новый Массив;
	СчетП02221.Добавить(Счет91_02);  // 91.4
	Запрос.УстановитьПараметр("СчетП02221", СчетП02221);
	
	СубконтоП02221 = Новый Массив;
	СубконтоП02221.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка());                
    СубконтоП02221.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств);
	СубконтоП02221.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов);
	Запрос.УстановитьПараметр("СубконтоП02221", СубконтоП02221);
	
	СчетП02222 = Новый Массив;
	СчетП02222.Добавить(Счет91_03); // 91.2 
	СчетП02222.Добавить(Счет91_04); // 91.3 
	Запрос.УстановитьПараметр("СчетП02222", СчетП02222);
	
	СубконтоП02222 = Новый Массив;
    СубконтоП02222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств);
	СубконтоП02222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов);
    Запрос.УстановитьПараметр("СубконтоП02222", СубконтоП02222);

	СчетП02321 = Новый Массив;
	СчетП02321.Добавить(Счет91_02); // 91.4
	Запрос.УстановитьПараметр("СчетП02321", СчетП02321);
	
	СубконтоП02321 = Новый Массив;
	СубконтоП02321.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка());                 
    СубконтоП02321.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества);
	Запрос.УстановитьПараметр("СубконтоП02321", СубконтоП02321);    
	
	СчетП02322 = Новый Массив;
	СчетП02322.Добавить(Счет91_02); // 91.4 
	Запрос.УстановитьПараметр("СчетП02322", СчетП02322);
	
	СубконтоП02322 = Новый Массив;
    СубконтоП02322.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества);
	Запрос.УстановитьПараметр("СубконтоП02322", СубконтоП02322);

	СчетП0242 = Новый Массив;
	СчетП0242.Добавить(Счет91_02);  // 91.4
	СчетП0242.Добавить(Счет91_03);  // 91.2
	СчетП0242.Добавить(Счет91_04);  // 91.3
	Запрос.УстановитьПараметр("СчетП0242", СчетП0242);
	
	СубконтоП0242 = Новый Массив;
    СубконтоП0242.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования);
	//СубконтоП0242.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПредоставленныеПраваПоНМА);
    Запрос.УстановитьПараметр("СубконтоП0242", СубконтоП0242);
	
	СчетП0252 = Новый Массив;
	СчетП0252.Добавить(Счет91_02);  // 91.4
	СчетП0252.Добавить(Счет91_03);  // 91.2
	СчетП0252.Добавить(Счет91_04);  // 91.3
	Запрос.УстановитьПараметр("СчетП0252", СчетП0252);
	СубконтоП0252 = Новый Массив;
	СубконтоП0252.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг);
	Запрос.УстановитьПараметр("СубконтоП0252", СубконтоП0252);
	
	СчетП0242 = Новый Массив;
	СчетП0242.Добавить(Счет91_02);  // 91.4
	СчетП0242.Добавить(Счет91_03);  // 91.2
	СчетП0242.Добавить(Счет91_04);  // 91.3
	Запрос.УстановитьПараметр("СчетП0242", СчетП0242);

	СчетП0122 = Новый Массив;
	СчетП0122.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
		
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация); 	
	П0222 = 0;
	П0232 = 0;
	П0242 = 0;
	П0252 = 0;
	П0222Н = 0;
	П0232Н = 0; 
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		П0222 = Выборка.П0222;
		П0232 = Выборка.П0232;
		П0242 = Выборка.П0242;
		П0252 = Выборка.П0252;
		П0222Н = Выборка.П0222Н;   //налоги при реализации ОС и НМА
		П0232Н = Выборка.П0232Н;   //налоги при реализации прочего имущества и купле-продаже валюты 
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ(&СчетП0602)
	|				И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП0602)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотКт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0602,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП05122)
	|				И (НЕ НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП05122))
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотКт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П05122
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация, , ) КАК НалоговыйОбороты
	|ИТОГИ
	|	СУММА(П05122),
	|	СУММА(П0602)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("НачПериода", Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	
	Счет = Новый Массив;
	Счет.Добавить(Счет91_01);
	Запрос.УстановитьПараметр("Счет", Счет);
	Запрос.УстановитьПараметр("СчетП05122", Счет91_01); //91.1
	
	СчетП0602 = Новый Массив;
	СчетП0602.Добавить(Счет91_01);//91.1
	
	Запрос.УстановитьПараметр("СчетП0602", СчетП0602);
	
	СубконтоП05122 = Новый Массив;
	//СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыИзЗаРубежа);
	//СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыИРасходыИзЗаРубежаНеПринимаемые);
	//СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.НеУчитываемыеВЦеляхНалогообложения);
	СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов);
	СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств);
	СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества);
	СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг);
	//СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПредоставленныеПраваПоНМА);
	СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования);
	СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате);
	СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности);
	СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.НДСПоСписаннойКредиторскойЗадолженности);
	
	Запрос.УстановитьПараметр("СубконтоП05122", СубконтоП05122);
	//Запрос.УстановитьПараметр("СубконтоП0602",  Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыИзЗаРубежа);
    Запрос.УстановитьПараметр("Организация",    ПараметрыОтчета.Организация);
	
	П05122 = 0;
	П0602 = 0;
	П0512 = 0;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		П05122 = Выборка.П05122;
		П0602 = Выборка.П0602;
	КонецЕсли;
	
	П0512 = П05122;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП05222)
	|				И НЕ НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП05222)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П05222,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0702)
	|				И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП0702)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0702,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП02121)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П02121
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация, , ) КАК НалоговыйОбороты
	|ИТОГИ
	|	СУММА(П05222),
	|	СУММА(П0702),
	|	СУММА(П02121)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("НачПериода", Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	
	Счет = Новый Массив;
	Счет.Добавить(Счет91_02); // 91.4
	Счет.Добавить(Счет91_03); // 91.2
    Счет.Добавить(Счет91_04); // 91.3
	Счет.Добавить(Счет90_02);
	Счет.Добавить(Счет90_07);
    Счет.Добавить(Счет90_08);
	Запрос.УстановитьПараметр("Счет", Счет);

	СчетП05222 = Новый Массив;
	СчетП05222.Добавить(Счет91_02); // 91.4
	СчетП05222.Добавить(Счет91_03); // 91.2
	СчетП05222.Добавить(Счет91_04); // 91.3
	Запрос.УстановитьПараметр("СчетП05222", СчетП05222);
	
	////Для счета 91.4, 91.2, 91.3 - расходы кроме
	СубконтоП05222 = Новый Массив;
	//СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыИзЗаРубежа);
	//СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыИРасходыИзЗаРубежаНеПринимаемые);
	//СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.НеУчитываемыеВЦеляхНалогообложения);
	СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов);
	СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств);
	СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества);
	СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг);
	//СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПредоставленныеПраваПоНМА);
	СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования);
	СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате);
	СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности);
	СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.НДСПоСписаннойКредиторскойЗадолженности);
    Запрос.УстановитьПараметр("СубконтоП05222", СубконтоП05222);
	
	СчетП0702 = Новый Массив;
	СчетП0702.Добавить(Счет91_02);  // 91.4
	СчетП0702.Добавить(Счет91_03);  // 91.2
	СчетП0702.Добавить(Счет91_04);  // 91.3   
   	Запрос.УстановитьПараметр("СчетП0702", СчетП0702);
	
	СубконтоП0702 = Новый Массив;
	//СубконтоП0702.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыИзЗаРубежа);
	Запрос.УстановитьПараметр("СубконтоП0702", СубконтоП0702);
	
	СчетП02121 = Новый Массив;
	СчетП02121.Добавить(Счет90_02);
	СчетП02121.Добавить(Счет90_07);
    СчетП02121.Добавить(Счет90_08);
	Запрос.УстановитьПараметр("СчетП02121", СчетП02121);
   
    Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	П05222 = 0;
	П0702 = 0;
	П02121 = 0;
	П0212 = 0;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		П05222  = Выборка.П05222;
		П02121  = Выборка.П02121;
		П0702   = Выборка.П0702;
	КонецЕсли;	
	П0522 = П05222;	
	
	//********** по проводкам  бухгалтерские  с 2014 БУ 90.4 - 41,42 для НТТ
    П03021 = 0;
    Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Счет КАК Счет,
	|	ХозрасчетныйОбороты.КорСчет КАК КорСчет,
	|	ХозрасчетныйОбороты.СуммаНУОборотДт КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет = &Счет, , Организация = &Организация, КорСчет В (&КорСчет), ) КАК ХозрасчетныйОбороты";
	
	КорСчета = Новый Массив;                
	КорСчета.Добавить(ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахНТТ);  //41.2.2
	КорСчета.Добавить(ПланыСчетов.Хозрасчетный.ТорговаяНаценкаНТТ);          //42.1.2    
	//КорСчета.Добавить(ПланыСчетов.Хозрасчетный.ТорговаяСкидкаНТТ);           //42.2.2
	//КорСчета.Добавить(ПланыСчетов.Хозрасчетный.РозничныйНДСНТТ);             //42.3.2   	
			
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД);   //90.4.1
	Запрос.УстановитьПараметр("КорСчет",     КорСчета);
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);	
	
    ПоСчетам = Запрос.Выполнить().Выбрать();
	Пока ПоСчетам.Следующий() Цикл
		П03021 = П03021 + ПоСчетам.Оборот;
	КонецЦикла;
									
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(НОбороты.СуммаНУОборотКт) КАК СуммаОборотКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачГода,
	|			&КонМесяца,
	|			,
	|			Счет = &Счет,
	|			,
	|			Организация = &Организация
	|				И Субконто1 = &Субконто1,
	|			КорСчет В ИЕРАРХИИ (&КорСчет),
	|			) КАК НОбороты";
	
	Запрос.УстановитьПараметр("НачГода",     Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонМесяца",   Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.НалогНаНедвижимость);
	Запрос.УстановитьПараметр("КорСчет",     ПланыСчетов.Хозрасчетный.ПрибылиИУбытки);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Субконто1",   Перечисления.ВидыПлатежейВГосБюджет.Налог);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		П1002 = Выборка.СуммаОборотКт;
	КонецЕсли;

	// *************** Налог на прибыль *************************************
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК СуммаОборотКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|		&НачГода,
	|		&КонМесяца,
	|		,
	|		Счет = &Счет,
	|		,
	|		Организация = &Организация
	|		    И Субконто1 = &Субконто1,
	|		КорСчет В Иерархии (&КорСчет),
	|		) КАК ХозрасчетныйОбороты";
	
	Запрос.УстановитьПараметр("НачГода",    Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонМесяца",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет",       ПланыСчетов.Хозрасчетный.НалогНаПрибыль);   //68.3.1
	Запрос.УстановитьПараметр("КорСчет",    ПланыСчетов.Хозрасчетный.ПрибылиИУбытки);  //99
	Запрос.УстановитьПараметр("Организация",ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Субконто1",  Перечисления.ВидыПлатежейВГосБюджет.Налог);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		П2002 = Выборка.СуммаОборотКт;
	КонецЕсли;
	
	//********** по проводкам  налоговые	90.4, 90.2, 90.3   2013 90.8, 90.9
	П03022 = 0;
	П0402 = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОбороты.Счет КАК Счет,
	|	НалоговыйОбороты.КорСчет КАК КорСчет,
	|	СУММА(НалоговыйОбороты.СуммаНУОборот) КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация, КорСчет В ИЕРАРХИИ (&КорСчет), ) КАК НалоговыйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НалоговыйОбороты.Счет,
	|	НалоговыйОбороты.КорСчет
	|ИТОГИ ПО
	|	Счет,
	|	КорСчет";
	
	Счета = Новый Массив;
	Счета.Добавить(Счет90_02); // 90.4
	Счета.Добавить(Счет90_03); // 90.2
	//Счета.Добавить(Счет90_05); // 90.3
	
	КорСчета = Новый Массив;                
	КорСчета.Добавить(Счет41);   // 41    
	КорСчета.Добавить(Счет45_01);// 45.1
	КорСчета.Добавить(Счет68_02);// 68.2
		
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
 	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Счет",        Счета);
	Запрос.УстановитьПараметр("КорСчет",     КорСчета);
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);	
	
    ПоСчетам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ПоСчетам.Следующий() Цикл
		
		Если ПоСчетам.Счет = ПланыСчетов.Хозрасчетный.СебестоимостьПродаж                         //90.4
			Тогда
			ПоКорСчетам = ПоСчетам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ПоКорСчетам.Следующий() Цикл
				Если ПоКорСчетам.КорСчет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.Товары)   //41 
					ИЛИ ПоКорСчетам.КорСчет  = ПланыСчетов.Хозрасчетный.Товары  	
					ИЛИ ПоКорСчетам.КорСчет  = ПланыСчетов.Хозрасчетный.ПокупныеТоварыОтгруженные  //45.1
					Тогда  
					П03022 = П03022 + ПоКорСчетам.Оборот;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	П0402 = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОбороты.Счет КАК Счет,
	|	СУММА(НалоговыйОбороты.СуммаНУОборотДт) КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация, , ) КАК НалоговыйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НалоговыйОбороты.Счет
	|ИТОГИ ПО
	|	Счет";
	
	Счета = Новый Массив;
	Счета.Добавить(Счет90_03); // 90.2
	//Счета.Добавить(Счет90_05); // 90.3
				
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
 	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Счет",        Счета);
		
    ПоСчетам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ПоСчетам.Следующий() Цикл
		П0402 = П0402 + ПоСчетам.Оборот;
	КонецЦикла;
	
	П0212 = П02121 + П03021;
	
	// *************** Справочно *************************************************
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.СуммаОстатокДт,
	|	ХозрасчетныйОстатки.СуммаОстатокКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонМесяца, Счет В (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстатки";
	
	Запрос.УстановитьПараметр("КонМесяца", Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Счет = Новый Массив;
	//Счет.Добавить(ПланыСчетов.Хозрасчетный.УставныйКапиталБелУчр);
	//Счет.Добавить(ПланыСчетов.Хозрасчетный.УставныйКапиталИнострУчр);
	Счет.Добавить(ПланыСчетов.Хозрасчетный.ПрибылиИУбытки);
	Счет.Добавить(ПланыСчетов.Хозрасчетный.УставныйКапитал_ПрочийКапитал);
	Запрос.УстановитьПараметр("Счет", Счет);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	П010 = 0;
	П011 = 0;
	П012 = 0;
	П013 = 0;
    П120Кт = 0;	
    П120Дт = 0;	
	П120 = 0;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		//Если Выборка.Счет = ПланыСчетов.Хозрасчетный.УставныйКапиталБелУчр Тогда
		//	П011 = Выборка.СуммаОстатокКт;
		//ИначеЕсли Выборка.Счет = ПланыСчетов.Хозрасчетный.УставныйКапиталИнострУчр Тогда
		//	П012 = Выборка.СуммаОстатокКт;
		//ИначеЕсли Выборка.Счет = ПланыСчетов.Хозрасчетный.УставныйКапитал_ПрочийКапитал Тогда
		//	П013 = Выборка.СуммаОстатокКт;
		//Иначе
		//	П120Дт	= Выборка.СуммаОстатокДт;//по счету 99
		//	П120Кт	= Выборка.СуммаОстатокКт;//по счету 99 
		//КонецЕсли;
	КонецЦикла;
	П120 = П120Кт - П120Дт;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СуммаОстатокДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НачГода, Счет В (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстатки";
	
	ГодОтчета_= ГодОтчета;
	Если МесяцОтчета = 1 Тогда
		НомерМесяца_ = 12;
		ГодОтчета_ = ГодОтчета-1;
	Иначе
		НомерМесяца_ = МесяцОтчета-1;		
	КонецЕсли;   		
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0) КАК СуммаОборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, , (НЕ СчетДт В ИЕРАРХИИ (&Счет69)), , СчетКт В ИЕРАРХИИ (&Счет70), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт";
	
	Запрос.УстановитьПараметр("НачПериода", Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет70", ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
	Запрос.УстановитьПараметр("Счет69", ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
    Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	П130 = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		П130 = Выборка.СуммаОборот;
	КонецЕсли;	
	
    //Подоходный справочно
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0) КАК СуммаОборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, , СчетДт = &Счет70, , СчетКт = &Счет68, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт";
	
	Запрос.УстановитьПараметр("НачПериода", Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет70", ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
	Запрос.УстановитьПараметр("Счет68", ПланыСчетов.Хозрасчетный.НДФЛ);  //68.4.1
    	
    Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	Подоходный = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		Подоходный = Выборка.СуммаОборот;
	КонецЕсли;	  	
	
	//*********2012  + 90.8   2 стр.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НалоговыйОбороты.СуммаНУОборотДт КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			&Субконто,
	|			Организация = &Организация
	|				И НЕ Субконто1.ВНУВнереализационныеДоходыРасходы
	|                И НЕ Субконто1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты)
	|				И Субконто2 = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка),
	|			,
	|			) КАК НалоговыйОбороты";
	
	Запрос.УстановитьПараметр("НачПериода", Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
    Запрос.УстановитьПараметр("Организация",ПараметрыОтчета.Организация);
	//Запрос.УстановитьПараметр("Счет",       ПланыСчетов.Хозрасчетный.ПрочиеРасходыПоТекущейДеятельности);    // 90.8
    Субконто = Новый Массив;
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтавкиНДС);   
	Запрос.УстановитьПараметр("Субконто", Субконто);

    П0262 = 0;
   	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		П0262 = Выборка.Оборот;
	КонецЦикла;	
	
	//*********2012  + 90.8  3 стр.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(НалоговыйОбороты.СуммаНУОборотДт,0) КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			&Субконто,
	|			Организация = &Организация
	|				И НЕ Субконто1.ВНУВнереализационныеДоходыРасходы
	|                И НЕ Субконто1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты)
	|				И НЕ Субконто2 = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка),
	|			,
	|			) КАК НалоговыйОбороты";
	
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	//Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.ПрочиеРасходыПоТекущейДеятельности);    //90.8
	Субконто = Новый Массив;
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтавкиНДС);   
	Запрос.УстановитьПараметр("Субконто",   Субконто);

	П0362 = 0;
	   Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		П0362 = Выборка.Оборот;
	КонецЦикла;	
	
	//*********2013  + 90.8,90.9  3 стр.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НЕ НалоговыйОбороты.Субконто1.ВНУВнереализационныеДоходыРасходы
	|			ТОГДА ЕСТЬNULL(НалоговыйОбороты.СуммаНУОборотДт, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П9089093,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Субконто1.ВНУВнереализационныеДоходыРасходы
	|			ТОГДА ЕСТЬNULL(НалоговыйОбороты.СуммаНУОборотДт, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П9089094
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет В ИЕРАРХИИ (&Счет), &Субконто, Организация = &Организация, , ) КАК НалоговыйОбороты";
	
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Счета = Новый Массив;
	//Счета.Добавить(ПланыСчетов.Хозрасчетный.ПродажиПрочие_НДС);                    //90.8
	//Счета.Добавить(ПланыСчетов.Хозрасчетный.ПродажиПрочие_ПрочиеНалогиИСборы);     //90.9

	Запрос.УстановитьПараметр("Счет",  Счета);    
	Субконто = Новый Массив;
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Запрос.УстановитьПараметр("Субконто",   Субконто);

	П9089093 = 0;
	П9089094 = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий()Цикл 
		П9089093 = П9089093 + Выборка.П9089093;
		П9089094 = П9089094 + Выборка.П9089094;
	КонецЦикла;

	// Для стр.4.1
    //*********2012  + 90.7
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОбороты.СуммаОборотКт КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			&Субконто,
	|			Организация = &Организация
	|				И Субконто1.ВНУВнереализационныеДоходыРасходы
	|                И НЕ Субконто1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты),
	|			,
	|			) КАК НалоговыйОбороты";
	
	//Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.ПрочиеДоходыПоТекущейДеятельности);  
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	
	П0412 = 0;
   	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		П0412 = Выборка.Оборот;
	КонецЦикла;	
	
	П0512 = П0512 + П0412;
	
	// Для стр.4.2
    //*********2012  + 90.8  
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОбороты.СуммаОборотДт КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			&Субконто,
	|			Организация = &Организация
	|				И Субконто1.ВНУВнереализационныеДоходыРасходы
	|				И НЕ Субконто1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты),
	|			,
	|			) КАК НалоговыйОбороты";
	
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	//Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.ПрочиеРасходыПоТекущейДеятельности);    //90.8
    Субконто = Новый Массив;
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Запрос.УстановитьПараметр("Субконто", Субконто);

    П0422 = 0;
   	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		П0422 = Выборка.Оборот;
	КонецЦикла;
	П0522 = П0522 +  П0422;
    // Для стр.4.1 и 4.2
   	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Обороты.СуммаОборотКт - Обороты.СуммаОборотДт КАК Доход
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСТЬNULL(НалоговыйОборотыДтКт.СуммаОборот, 0) КАК СуммаОборотКт,
	|		0 КАК СуммаОборотДт
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, , , , СчетКт В ИЕРАРХИИ (&СчетаКт), &Субконто, Организация = &Организация) КАК НалоговыйОборотыДтКт
	|	ГДЕ
	|		НалоговыйОборотыДтКт.СубконтоКт1.Предопределенный
	|		И НалоговыйОборотыДтКт.СубконтоКт1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		0,
	|		ЕСТЬNULL(НалоговыйОборотыДтКт.СуммаОборот, 0)
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, , СчетДт В ИЕРАРХИИ (&СчетаДт), &Субконто, , , Организация = &Организация) КАК НалоговыйОборотыДтКт
	|	ГДЕ
	|		НалоговыйОборотыДтКт.СубконтоДт1.Предопределенный
	|		И НалоговыйОборотыДтКт.СубконтоДт1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты)) КАК Обороты
	|ИТОГИ
	|	СУММА(Доход)
	|ПО
	|	ОБЩИЕ";
      				  
	//Запрос.УстановитьПараметр("СчетаКт",     ПланыСчетов.Хозрасчетный.ПрочиеДоходыПоТекущейДеятельности);  //90.7 НУ
	//Запрос.УстановитьПараметр("СчетаДт",     ПланыСчетов.Хозрасчетный.ПрочиеРасходыПоТекущейДеятельности); // 90.8
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
 	
	П0413 = 0;
    П0423 = 0;
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока Выборка.Следующий() Цикл
		Если Выборка.Доход > 0 Тогда
			П0413 = Выборка.Доход;
		ИНаче
			П0423 = - Выборка.Доход;
		КонецЕсли;
	КонецЦикла;	
	
	П0512 = П0512 + П0413;
	П0522 = П0522 + П0423 + П9089094;  //стр.4.2 + 2013 ДО 90.8,90.9

	П0102 = П0112 + П0122 + П0132 + П0142 + П0152 + П0162;   //+90.7    1 стр.

	П0202_ = П0212 + П0222 + П0232 + П0242 + П0252 + П0262;   //+90.8  без *, НДС не заполнен  2 стр.
	П0502 = П0512 - П0522;	 
	
	П0203_  = П0202_;	
	
	П0802 = П0602 - П0702;
	П0902 = П0102 - П0202_ - П0402 + П0502 + П0802;

	П1102 = 0;
    П1202 = П0902 - П1002 - П1102;
	П1212 = 0;
    П1302 = 0;	
	П1312 = 0;
    П1402 = Окр(П1202 * ПараметрыОтчета.СтавкаПриб/100);
    П1412 = 0;
    П1502 = 0;
    П1602 = 0;
    П1702 = 0;
    П1802 = 0;
    П1902 = П1402 - П1502 - П1602 - П1702 - П1802;
    П2102 = П1902 - П2002;
    П030 = 0;
    П040 = 0;
	П050 = 0;
    П060 = 0;
    П061 = 0;
    П070 = 0;
    П080 = 0;
    П090 = 0;
    П100 = 0;
    П110 = П070 - П090;

	Раздел1 = Контейнер.Раздел1;	
	Раздел1.П01010104  = П0102; 
	Раздел1.П01010204  = П0202_; 
	
	П0402_ = П0402 + П0222Н + П0232Н + П0362 + П9089093;     // 3 стр. 2013 +  ДО 90.8, 90.9  без НУВнереализац. 
	Раздел1.П01010304   = П0402_; 
	Раздел1.П010104104  = П0512;
	Раздел1.П010104204  = П0522; 
	Раздел1.П01010504   = П0602;
	Раздел1.П01010604   = П0702; 
	Раздел1.П01011803   = П2002; 
	Раздел1.П04010403   = П030; 	
	Раздел1.П04010503   = П040;
	Раздел1.П04010903   = П130;
	Раздел1.П04010703   = Подоходный; 
	
КонецПроцедуры	

Процедура ЗаполнитьОтчетНалогНаПрибыльФормаОтчета2015(ПараметрыОтчета, Контейнер) Экспорт
	
	НомерМесяца   = Формат(ПараметрыОтчета.мДатаКонцаПериодаОтчета, "ДФ=М");
	НомерГода     = Формат(ПараметрыОтчета.мДатаКонцаПериодаОтчета, "ДФ=гггг");
	ДатаВОтчете   = Дата(НомерГода, 1,1); 
	ГодОтчета     = НомерГода;
	МесяцОтчета   = НомерМесяца;   
	ДатаВМесяце   = Дата( НомерГода, НомерМесяца, 1 );
	
	ПС  = ПланыСчетов["Хозрасчетный"];
		
	Счет90_01 =  ПС.Выручка;
	Счет90_02 =  ПС.себестоимостьПродаж; //90.4
	Счет90_03 =  ПС.Продажи_НДС; //90.2
	//Счет90_05 =  ПС.Реализация_ПрочиеНалогиИСборы_;
	Счет90_07 =  ПС.Продажи_РасходыНаПродажу; //90.6
	Счет90_08 =  ПС.Продажи_УправленческиеРасходы;  // 90.5
	//Счет90_7  =  ПС.ПрочиеДоходыПоТекущейДеятельности;  //90.7
	//Счет90_8  =  ПС.ПрочиеРасходыПоТекущейДеятельности; //90.10
	Счет91_01  = ПС.ПрочиеДоходы;
	
	Счет91_02   = ПС.ПрочиеРасходы;  // 91.4
	Счет91_03   = ПС.Операционные_НДС; // 91.2
	Счет91_04   = ПС.ПрочиеНалогиИСборы; // 91.3
	Счет41      = ПС.Товары;
	Счет45_01   = ПС.ПокупныеТоварыОтгруженные;
	Счет68_02   = ПС.НалогиИзВыручки;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0122)
	|				И ЕСТЬNULL(НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)) В (&СубконтоП0122)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотКт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0122,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0112)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотКт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0112,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0132)
	|					И ЕСТЬNULL(НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)) В (&СубконтоП0132)
	|				ИЛИ НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0132_)
	|					И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП0132_)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотКт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0132,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0142)
	|				И ЕСТЬNULL(НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)) В (&СубконтоП0142)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотКт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0142,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0152)
	|				И ЕСТЬNULL(НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)) В (&СубконтоП0152)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотКт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0152
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация, , ) КАК НалоговыйОбороты
	|ИТОГИ
	|	СУММА(П0122),
	|	СУММА(П0112),
	|	СУММА(П0132),
	|	СУММА(П0142),
	|	СУММА(П0152)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("НачПериода", Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецМесяца(Дата(ГодОтчета, МесяцОтчета, 1)),ВидГраницы.Включая));
	
	Счет = Новый Массив;
	Счет.Добавить(Счет90_01);
	Счет.Добавить(Счет91_01);
	
	Запрос.УстановитьПараметр("Счет", Счет);
	
	СчетП0122 = Новый Массив;
	СчетП0122.Добавить(Счет91_01);	
	Запрос.УстановитьПараметр("СчетП0122",  СчетП0122);
	Запрос.УстановитьПараметр("СчетП0112",  Счет90_01);  
	
	Запрос.УстановитьПараметр("СчетП0132",  Счет91_01); //91.1
	Запрос.УстановитьПараметр("СчетП0132_", Счет91_01); //91.1

	Запрос.УстановитьПараметр("СчетП0142",  Счет91_01); //91.1
	Запрос.УстановитьПараметр("СчетП0152",  Счет91_01); //91.1
	
	СубконтоП0122 = Новый Массив;
	//СубконтоП0122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка());
	СубконтоП0122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств);
	СубконтоП0122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов);
	Запрос.УстановитьПараметр("СубконтоП0122", СубконтоП0122);
	
	СубконтоП0132 = Новый Массив;
	//СубконтоП0132.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка());
	СубконтоП0132.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества);
	Запрос.УстановитьПараметр("СубконтоП0132", СубконтоП0132);
	
	СубконтоП0132_ = Новый Массив;
	СубконтоП0132_.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества);
	Запрос.УстановитьПараметр("СубконтоП0132_", СубконтоП0132_);

    СубконтоП0142 = Новый Массив;
	//СубконтоП0142.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка());
	//СубконтоП0142.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования);
	//СубконтоП0142.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПредоставленныеПраваПоНМА);
    Запрос.УстановитьПараметр("СубконтоП0142", СубконтоП0142);
	
	СубконтоП0152 = Новый Массив;
	//СубконтоП0152.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка());
	СубконтоП0152.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг);
	Запрос.УстановитьПараметр("СубконтоП0152", СубконтоП0152);

    Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	П0122 = 0;
	П0112 = 0;
	П0202_ = 0;
	П0203_ = 0;
  	П0132 = 0;
	П0142 = 0;
	П0152 = 0; 
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		П0122 = Выборка.П0122;
		П0112 = Выборка.П0112;
		П0132 = Выборка.П0132;
		П0142 = Выборка.П0142;
		П0152 = Выборка.П0152;
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОбороты.СуммаНУОборотКт КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			&Субконто,
	|			Организация = &Организация
	|				И НЕ Субконто1.ВНУВнереализационныеДоходыРасходы
	|				И НЕ Субконто1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты),
	|			,
	|			) КАК НалоговыйОбороты";
	
	//Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.ПрочиеДоходыПоТекущейДеятельности);  
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)), ВидГраницы.Включая));
	
	П0162 = 0;
   	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		П0162 = Выборка.Оборот;
	КонецЦикла;	

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП02221)
	|				И ЕСТЬNULL(НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)) В (&СубконтоП02221)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0222,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП02222)
	|				И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП02222)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0222Н,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП02321)
	|					И ЕСТЬNULL(НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыПрочихДоходовИРасходов.ПустаяСсылка)) В (&СубконтоП02321)
	|				ИЛИ НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП02322)
	|					И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП02322)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0232,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП02222)
	|				И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП02322)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0232Н,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0242)
	|				И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП0242)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0242,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0252)
	|				И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП0252)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0252
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация, , ) КАК НалоговыйОбороты
	|ИТОГИ
	|	СУММА(П0222),
	|	СУММА(П0222Н),
	|	СУММА(П0232),
	|	СУММА(П0232Н),
	|	СУММА(П0242),
	|	СУММА(П0252)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("НачПериода", Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	
	Счет = Новый Массив;
	Счет.Добавить(Счет91_02);   // 91.4
	Счет.Добавить(Счет91_03);   // 91.2
	Счет.Добавить(Счет91_04);   // 91.3
	 
	Запрос.УстановитьПараметр("Счет", Счет);

	СчетП02221 = Новый Массив;
	СчетП02221.Добавить(Счет91_02);  // 91.4
	Запрос.УстановитьПараметр("СчетП02221", СчетП02221);
	
	СубконтоП02221 = Новый Массив;
	СубконтоП02221.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка());                
    СубконтоП02221.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств);
	СубконтоП02221.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов);
	Запрос.УстановитьПараметр("СубконтоП02221", СубконтоП02221);
	
	СчетП02222 = Новый Массив;
	СчетП02222.Добавить(Счет91_03); // 91.2 
	СчетП02222.Добавить(Счет91_04); // 91.3 
	Запрос.УстановитьПараметр("СчетП02222", СчетП02222);
	
	СубконтоП02222 = Новый Массив;
    СубконтоП02222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств);
	СубконтоП02222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов);
    Запрос.УстановитьПараметр("СубконтоП02222", СубконтоП02222);

	СчетП02321 = Новый Массив;
	СчетП02321.Добавить(Счет91_02); // 91.4
	Запрос.УстановитьПараметр("СчетП02321", СчетП02321);
	
	СубконтоП02321 = Новый Массив;
	СубконтоП02321.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка());                 
    СубконтоП02321.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества);
	Запрос.УстановитьПараметр("СубконтоП02321", СубконтоП02321);    
	
	СчетП02322 = Новый Массив;
	СчетП02322.Добавить(Счет91_02); // 91.4 
	Запрос.УстановитьПараметр("СчетП02322", СчетП02322);
	
	СубконтоП02322 = Новый Массив;
    СубконтоП02322.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества);
	Запрос.УстановитьПараметр("СубконтоП02322", СубконтоП02322);

	СчетП0242 = Новый Массив;
	СчетП0242.Добавить(Счет91_02);  // 91.4
	СчетП0242.Добавить(Счет91_03);  // 91.2
	СчетП0242.Добавить(Счет91_04);  // 91.3
	Запрос.УстановитьПараметр("СчетП0242", СчетП0242);
	
	СубконтоП0242 = Новый Массив;
	//СубконтоП0242.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования);
	//СубконтоП0242.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПредоставленныеПраваПоНМА);
    Запрос.УстановитьПараметр("СубконтоП0242", СубконтоП0242);
	
	СчетП0252 = Новый Массив;
	СчетП0252.Добавить(Счет91_02);  // 91.4
	СчетП0252.Добавить(Счет91_03);  // 91.2
	СчетП0252.Добавить(Счет91_04);  // 91.3
	Запрос.УстановитьПараметр("СчетП0252", СчетП0252);
	СубконтоП0252 = Новый Массив;
	СубконтоП0252.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг);
	Запрос.УстановитьПараметр("СубконтоП0252", СубконтоП0252);
	
	СчетП0242 = Новый Массив;
	СчетП0242.Добавить(Счет91_02);  // 91.4
	СчетП0242.Добавить(Счет91_03);  // 91.2
	СчетП0242.Добавить(Счет91_04);  // 91.3
	Запрос.УстановитьПараметр("СчетП0242", СчетП0242);

	СчетП0122 = Новый Массив;
	СчетП0122.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
		
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация); 	
	П0222 = 0;
	П0232 = 0;
	П0242 = 0;
	П0252 = 0;
	П0222Н = 0;
	П0232Н = 0; 
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		П0222 = Выборка.П0222;
		П0232 = Выборка.П0232;
		П0242 = Выборка.П0242;
		П0252 = Выборка.П0252;
		П0222Н = Выборка.П0222Н;   //налоги при реализации ОС и НМА
		П0232Н = Выборка.П0232Н;   //налоги при реализации прочего имущества и купле-продаже валюты 
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ(&СчетП0602)
	|				И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП0602)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотКт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0602,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП05122)
	|				И (НЕ НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП05122))
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотКт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П05122
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация, , ) КАК НалоговыйОбороты
	|ИТОГИ
	|	СУММА(П05122),
	|	СУММА(П0602)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("НачПериода", Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	
	Счет = Новый Массив;
	Счет.Добавить(Счет91_01);
	Запрос.УстановитьПараметр("Счет", Счет);
	Запрос.УстановитьПараметр("СчетП05122", Счет91_01); //91.1
	
	СчетП0602 = Новый Массив;
	СчетП0602.Добавить(Счет91_01);//91.1
	
	Запрос.УстановитьПараметр("СчетП0602", СчетП0602);
	
	СубконтоП05122 = Новый Массив;
	//СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыИзЗаРубежа);
	//СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыИРасходыИзЗаРубежаНеПринимаемые);
	//СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.НеУчитываемыеВЦеляхНалогообложения);
	СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов);
	СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств);
	СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества);
	СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг);
	//СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПредоставленныеПраваПоНМА);
	СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования);
	СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате);
	СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности);
	СубконтоП05122.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.НДСПоСписаннойКредиторскойЗадолженности);
	
	Запрос.УстановитьПараметр("СубконтоП05122", СубконтоП05122);
	//Запрос.УстановитьПараметр("СубконтоП0602",  Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыИзЗаРубежа);
    Запрос.УстановитьПараметр("Организация",    ПараметрыОтчета.Организация);
	
	П05122 = 0;
	П0602 = 0;
	П0512 = 0;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		П05122 = Выборка.П05122;
		П0602 = Выборка.П0602;
	КонецЕсли;
	
	П0512 = П05122;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП05222)
	|				И НЕ НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП05222)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П05222,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0702)
	|				И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП0702)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0702,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП0702_2)
	|				И НалоговыйОбороты.Субконто1.ВидПрочихДоходовИРасходов В (&СубконтоП0702)
	|			ТОГДА ЕСТЬNULL(НалоговыйОбороты.СуммаНУОборотДт, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П0702_2,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Счет В ИЕРАРХИИ (&СчетП02121)
	|			ТОГДА НалоговыйОбороты.СуммаНУОборотДт
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П02121
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация, , ) КАК НалоговыйОбороты
	|ИТОГИ
	|	СУММА(П05222),
	|	СУММА(П0702),
	|	СУММА(П0702_2),
	|	СУММА(П02121)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("НачПериода", Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	
	Счет = Новый Массив;
	Счет.Добавить(Счет91_02); // 91.4
	Счет.Добавить(Счет91_03); // 91.2
    Счет.Добавить(Счет91_04); // 91.3
	Счет.Добавить(Счет90_02);
	Счет.Добавить(Счет90_07);
    Счет.Добавить(Счет90_08);
	Запрос.УстановитьПараметр("Счет", Счет);

	СчетП05222 = Новый Массив;
	СчетП05222.Добавить(Счет91_02); // 91.4
	СчетП05222.Добавить(Счет91_03); // 91.2
	СчетП05222.Добавить(Счет91_04); // 91.3
	Запрос.УстановитьПараметр("СчетП05222", СчетП05222);
	
	////Для счета 91.4, 91.2, 91.3 - расходы кроме
	СубконтоП05222 = Новый Массив;
	//СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыИзЗаРубежа);
	//СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыИРасходыИзЗаРубежаНеПринимаемые);
	//СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.НеУчитываемыеВЦеляхНалогообложения);
	СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияНематериальныхАктивов);
	СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияОсновныхСредств);
	СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияПрочегоИмущества);
	СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияЦенныхБумаг);
	//СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ПредоставленныеПраваПоНМА);
	СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.РеализацияИмущественныхПравКромеПраваТребования);
	СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ШтрафыПениНеустойкиКПолучениюУплате);
	СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.СписаниеДебиторскойКредиторскойЗадолженности);
	СубконтоП05222.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.НДСПоСписаннойКредиторскойЗадолженности);
    Запрос.УстановитьПараметр("СубконтоП05222", СубконтоП05222);
	
	СчетП0702 = Новый Массив;
	СчетП0702.Добавить(Счет91_02);    // 91.4
   	Запрос.УстановитьПараметр("СчетП0702", СчетП0702);
	
	СчетП0702_2 = Новый Массив;
	СчетП0702_2.Добавить(Счет91_03);  // 91.2
	СчетП0702_2.Добавить(Счет91_04);  // 91.3
	Запрос.УстановитьПараметр("СчетП0702_2", СчетП0702_2);
	
	СубконтоП0702 = Новый Массив;
	//СубконтоП0702.Добавить(Перечисления.ВидыПрочихДоходовИРасходов.ДоходыРасходыИзЗаРубежа);
	Запрос.УстановитьПараметр("СубконтоП0702", СубконтоП0702);
	
	СчетП02121 = Новый Массив;
	СчетП02121.Добавить(Счет90_02);
	СчетП02121.Добавить(Счет90_07);
    СчетП02121.Добавить(Счет90_08);
	Запрос.УстановитьПараметр("СчетП02121", СчетП02121);
   
    Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	П05222 = 0;
	П0702 = 0;
	П0702_2 = 0;
	П02121 = 0;
	П0212 = 0;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		П05222  = Выборка.П05222;
		П02121  = Выборка.П02121;
		П0702   = Выборка.П0702;
		П0702_2 = Выборка.П0702_2;  
	КонецЕсли;	
	П0522 = П05222;	
	
	//********** по проводкам  бухгалтерские  с 2014 БУ 90.4 - 41,42 для НТТ
    П03021 = 0;
    Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Счет КАК Счет,
	|	ХозрасчетныйОбороты.КорСчет КАК КорСчет,
	|	ХозрасчетныйОбороты.СуммаНУОборотДт КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет = &Счет, , Организация = &Организация, КорСчет В (&КорСчет), ) КАК ХозрасчетныйОбороты";
	
	КорСчета = Новый Массив;                
	КорСчета.Добавить(ПланыСчетов.Хозрасчетный.ТоварыВРозничнойТорговлеВПродажныхЦенахНТТ);  //41.2.2
	КорСчета.Добавить(ПланыСчетов.Хозрасчетный.ТорговаяНаценкаНТТ);          //42.1.2    
	//КорСчета.Добавить(ПланыСчетов.Хозрасчетный.ТорговаяСкидкаНТТ);           //42.2.2
	//КорСчета.Добавить(ПланыСчетов.Хозрасчетный.РозничныйНДСНТТ);             //42.3.2   	
			
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД);   //90.4.1
	Запрос.УстановитьПараметр("КорСчет",     КорСчета);
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);	
	
    ПоСчетам = Запрос.Выполнить().Выбрать();
	Пока ПоСчетам.Следующий() Цикл
		П03021 = П03021 + ПоСчетам.Оборот;
	КонецЦикла;
									
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(НОбороты.СуммаНУОборотКт) КАК СуммаОборотКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачГода,
	|			&КонМесяца,
	|			,
	|			Счет = &Счет,
	|			,
	|			Организация = &Организация
	|				И Субконто1 = &Субконто1,
	|			КорСчет В ИЕРАРХИИ (&КорСчет),
	|			) КАК НОбороты";
	
	Запрос.УстановитьПараметр("НачГода",     Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонМесяца",   Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.НалогНаНедвижимость);
	Запрос.УстановитьПараметр("КорСчет",     ПланыСчетов.Хозрасчетный.ПрибылиИУбытки);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Субконто1",   Перечисления.ВидыПлатежейВГосБюджет.Налог);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		П1002 = Выборка.СуммаОборотКт;
	КонецЕсли;

	// *************** Налог на прибыль *************************************
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаНУОборотКт) КАК СуммаОборотКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|		&НачГода,
	|		&КонМесяца,
	|		,
	|		Счет = &Счет,
	|		,
	|		Организация = &Организация
	|		    И Субконто1 = &Субконто1,
	|		КорСчет В Иерархии (&КорСчет),
	|		) КАК ХозрасчетныйОбороты";
	
	Запрос.УстановитьПараметр("НачГода",    Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонМесяца",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет",       ПланыСчетов.Хозрасчетный.НалогНаПрибыль);   //68.3.1
	Запрос.УстановитьПараметр("КорСчет",    ПланыСчетов.Хозрасчетный.ПрибылиИУбытки);  //99
	Запрос.УстановитьПараметр("Организация",ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Субконто1",  Перечисления.ВидыПлатежейВГосБюджет.Налог);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		П2002 = Выборка.СуммаОборотКт;
	КонецЕсли;
	
	//********** по проводкам  налоговые	90.4, 90.2, 90.3   2013 90.8, 90.9
	П03022 = 0;
	П0402 = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОбороты.Счет КАК Счет,
	|	НалоговыйОбороты.КорСчет КАК КорСчет,
	|	СУММА(НалоговыйОбороты.СуммаНУОборот) КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация, КорСчет В ИЕРАРХИИ (&КорСчет), ) КАК НалоговыйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НалоговыйОбороты.Счет,
	|	НалоговыйОбороты.КорСчет
	|ИТОГИ ПО
	|	Счет,
	|	КорСчет";
	
	Счета = Новый Массив;
	Счета.Добавить(Счет90_02); // 90.4
	Счета.Добавить(Счет90_03); // 90.2
	//Счета.Добавить(Счет90_05); // 90.3
	
	КорСчета = Новый Массив;                
	КорСчета.Добавить(Счет41);   // 41    
	КорСчета.Добавить(Счет45_01);// 45.1
	КорСчета.Добавить(Счет68_02);// 68.2
		
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
 	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Счет",        Счета);
	Запрос.УстановитьПараметр("КорСчет",     КорСчета);
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);	
	
    ПоСчетам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ПоСчетам.Следующий() Цикл
		
		Если ПоСчетам.Счет = ПланыСчетов.Хозрасчетный.СебестоимостьПродаж                         //90.4
			Тогда
			ПоКорСчетам = ПоСчетам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ПоКорСчетам.Следующий() Цикл
				Если ПоКорСчетам.КорСчет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.Товары)   //41 
					ИЛИ ПоКорСчетам.КорСчет  = ПланыСчетов.Хозрасчетный.Товары  	
					ИЛИ ПоКорСчетам.КорСчет  = ПланыСчетов.Хозрасчетный.ПокупныеТоварыОтгруженные  //45.1
					Тогда  
					П03022 = П03022 + ПоКорСчетам.Оборот;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	П0402 = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОбороты.Счет КАК Счет,
	|	СУММА(НалоговыйОбороты.СуммаНУОборотДт) КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация, , ) КАК НалоговыйОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НалоговыйОбороты.Счет
	|ИТОГИ ПО
	|	Счет";
	
	Счета = Новый Массив;
	Счета.Добавить(Счет90_03); // 90.2
	//Счета.Добавить(Счет90_05); // 90.3
				
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
 	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Счет",        Счета);
		
    ПоСчетам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ПоСчетам.Следующий() Цикл
		П0402 = П0402 + ПоСчетам.Оборот;
	КонецЦикла;
	
	П0212 = П02121 + П03021;
	
	// *************** Справочно *************************************************
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.СуммаОстатокДт,
	|	ХозрасчетныйОстатки.СуммаОстатокКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонМесяца, Счет В (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстатки";
	
	Запрос.УстановитьПараметр("КонМесяца", Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Счет = Новый Массив;
	//Счет.Добавить(ПланыСчетов.Хозрасчетный.УставныйКапиталБелУчр);
	//Счет.Добавить(ПланыСчетов.Хозрасчетный.УставныйКапиталИнострУчр);
	Счет.Добавить(ПланыСчетов.Хозрасчетный.ПрибылиИУбытки);
	Счет.Добавить(ПланыСчетов.Хозрасчетный.УставныйКапитал_ПрочийКапитал);
	Запрос.УстановитьПараметр("Счет", Счет);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	П010 = 0;
	П011 = 0;
	П012 = 0;
	П013 = 0;
    П120Кт = 0;	
    П120Дт = 0;	
	П120 = 0;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		//Если Выборка.Счет = ПланыСчетов.Хозрасчетный.УставныйКапиталБелУчр Тогда
		//	П011 = Выборка.СуммаОстатокКт;
		////ИначеЕсли Выборка.Счет = ПланыСчетов.Хозрасчетный.УставныйКапиталИнострУчр Тогда
		//	П012 = Выборка.СуммаОстатокКт;
		//ИначеЕсли Выборка.Счет = ПланыСчетов.Хозрасчетный.УставныйКапитал_ПрочийКапитал Тогда
		//	П013 = Выборка.СуммаОстатокКт;
		//Иначе
		//	П120Дт	= Выборка.СуммаОстатокДт;//по счету 99
		//	П120Кт	= Выборка.СуммаОстатокКт;//по счету 99 
		//КонецЕсли;
	КонецЦикла;
	П120 = П120Кт - П120Дт;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СуммаОстатокДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НачГода, Счет В (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстатки";
	
	ГодОтчета_= ГодОтчета;
	Если МесяцОтчета = 1 Тогда
		НомерМесяца_ = 12;
		ГодОтчета_ = ГодОтчета-1;
	Иначе
		НомерМесяца_ = МесяцОтчета-1;		
	КонецЕсли;   		
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0) КАК СуммаОборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, , (НЕ СчетДт В ИЕРАРХИИ (&Счет69)), , СчетКт В ИЕРАРХИИ (&Счет70), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт";
	
	Запрос.УстановитьПараметр("НачПериода", Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет70", ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
	Запрос.УстановитьПараметр("Счет69", ПланыСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	П130 = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		П130 = Выборка.СуммаОборот;
	КонецЕсли;	
	
    //Подоходный справочно
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0) КАК СуммаОборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, , СчетДт = &Счет70, , СчетКт = &Счет68, , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт";
	
	Запрос.УстановитьПараметр("НачПериода", Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет70", ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
	Запрос.УстановитьПараметр("Счет68", ПланыСчетов.Хозрасчетный.НДФЛ);  //68.4.1
    	
    Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	Подоходный = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		Подоходный = Выборка.СуммаОборот;
	КонецЕсли;	  	
	
	//Подоходный остатки
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокКт, 0) КАК СуммаОстатка
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ПериодОстатка, Счет = &Счет68, , Организация = &Организация) КАК ХозрасчетныйОстатки";
	
	Запрос.УстановитьПараметр("ПериодОстатка", Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("Счет68", ПланыСчетов.Хозрасчетный.НДФЛ);  //68.4.1
    Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	ПодоходныйОстатокНач = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		ПодоходныйОстатокНач = Выборка.СуммаОстатка;
	КонецЕсли;	  	
	
	ПодоходныйОстатокКон = 0;
	Запрос.УстановитьПараметр("ПериодОстатка", Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		ПодоходныйОстатокКон = Выборка.СуммаОстатка;
	КонецЕсли;	
	
	// Оборот по проводке Дт 68.4.1 Кт 50,51,52,55 в иерархии с начала года периода формирования отчета
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0) КАК СуммаОборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, , СчетДт = &Счет68, , СчетКт В ИЕРАРХИИ (&Счет50), , Организация = &Организация) КАК ХозрасчетныйОборотыДтКт";
	
	Запрос.УстановитьПараметр("НачПериода", Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Счет50 = Новый Массив;
	Счет50.Добавить(ПланыСчетов.Хозрасчетный.Касса);                      //50
	Счет50.Добавить(ПланыСчетов.Хозрасчетный.РасчетныеСчета);             //51
	Счет50.Добавить(ПланыСчетов.Хозрасчетный.ВалютныеСчета);              //52
	Счет50.Добавить(ПланыСчетов.Хозрасчетный.СпециальныеСчета);           //55

	Запрос.УстановитьПараметр("Счет50", Счет50);
	Запрос.УстановитьПараметр("Счет68", ПланыСчетов.Хозрасчетный.НДФЛ);  //68.4.1
    	
    Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	
	ПодоходныйДт68Кт50 = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		ПодоходныйДт68Кт50 = Выборка.СуммаОборот;
	КонецЕсли;	  	
	
	//*********2012  + 90.8   2 стр.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОбороты.СуммаНУОборотДт КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			&Субконто,
	|			Организация = &Организация
	|				И НЕ Субконто1.ВНУВнереализационныеДоходыРасходы
	|                И НЕ Субконто1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты)
	|				И Субконто2 = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка),
	|			,
	|			) КАК НалоговыйОбороты";
	
	Запрос.УстановитьПараметр("НачПериода", Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
    Запрос.УстановитьПараметр("Организация",ПараметрыОтчета.Организация);
	//Запрос.УстановитьПараметр("Счет",       ПланыСчетов.Хозрасчетный.ПрочиеРасходыПоТекущейДеятельности);    // 90.8
    Субконто = Новый Массив;
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтавкиНДС);   
	Запрос.УстановитьПараметр("Субконто", Субконто);

    П0262 = 0;
   	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		П0262 = Выборка.Оборот;
	КонецЦикла;	
	
	//*********2012  + 90.8  3 стр.
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(НалоговыйОбороты.СуммаНУОборотДт,0) КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			&Субконто,
	|			Организация = &Организация
	|				И НЕ Субконто1.ВНУВнереализационныеДоходыРасходы
	|                И НЕ Субконто1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты)
	|				И НЕ Субконто2 = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка),
	|			,
	|			) КАК НалоговыйОбороты";
	
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	//Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.ПрочиеРасходыПоТекущейДеятельности);    //90.8
	Субконто = Новый Массив;
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтавкиНДС);   
	Запрос.УстановитьПараметр("Субконто",   Субконто);

	П0362 = 0;
	   Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		П0362 = Выборка.Оборот;
	КонецЦикла;	
	
	//*********2013  + 90.8,90.9  3 стр.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НЕ НалоговыйОбороты.Субконто1.ВНУВнереализационныеДоходыРасходы
	|			ТОГДА ЕСТЬNULL(НалоговыйОбороты.СуммаНУОборотДт, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П9089093,
	|	ВЫБОР
	|		КОГДА НалоговыйОбороты.Субконто1.ВНУВнереализационныеДоходыРасходы
	|			ТОГДА ЕСТЬNULL(НалоговыйОбороты.СуммаНУОборотДт, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК П9089094
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет В ИЕРАРХИИ (&Счет), &Субконто, Организация = &Организация, , ) КАК НалоговыйОбороты";
	
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Счета = Новый Массив;
	//Счета.Добавить(ПланыСчетов.Хозрасчетный.ПродажиПрочие_НДС);                    //90.8
	//Счета.Добавить(ПланыСчетов.Хозрасчетный.ПродажиПрочие_ПрочиеНалогиИСборы);     //90.9

	Запрос.УстановитьПараметр("Счет",  Счета);    
	Субконто = Новый Массив;
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Запрос.УстановитьПараметр("Субконто",   Субконто);

	П9089093 = 0;
	П9089094 = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий()Цикл 
		П9089093 = П9089093 + Выборка.П9089093;
		П9089094 = П9089094 + Выборка.П9089094;
	КонецЦикла;

	// Для стр.4.1
	//*********2012  + 90.7
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОбороты.СуммаОборотКт КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			&Субконто,
	|			Организация = &Организация
	|				И Субконто1.ВНУВнереализационныеДоходыРасходы
	|                И НЕ Субконто1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты),
	|			,
	|			) КАК НалоговыйОбороты";
		
	//Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.ПрочиеДоходыПоТекущейДеятельности);  
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	
	П0412 = 0;
   	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		П0412 = Выборка.Оборот;
	КонецЦикла;	
	
	П0512 = П0512 + П0412;
	
	// Для стр.4.2
    //*********2012  + 90.8  
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалоговыйОбороты.СуммаОборотДт КАК Оборот
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачПериода,
	|			&КонПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет),
	|			&Субконто,
	|			Организация = &Организация
	|				И Субконто1.ВНУВнереализационныеДоходыРасходы
	|				И НЕ Субконто1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты),
	|			,
	|			) КАК НалоговыйОбороты";
	
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
	//Запрос.УстановитьПараметр("Счет",        ПланыСчетов.Хозрасчетный.ПрочиеРасходыПоТекущейДеятельности);    //90.8
    Субконто = Новый Массив;
	Субконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Запрос.УстановитьПараметр("Субконто", Субконто);

    П0422 = 0;
   	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		П0422 = Выборка.Оборот;
	КонецЦикла;
	П0522 = П0522 +  П0422;
    // Для стр.4.1 и 4.2
   	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Обороты.СуммаОборотКт - Обороты.СуммаОборотДт КАК Доход
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСТЬNULL(НалоговыйОборотыДтКт.СуммаОборот, 0) КАК СуммаОборотКт,
	|		0 КАК СуммаОборотДт
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, , , , СчетКт В ИЕРАРХИИ (&СчетаКт), &Субконто, Организация = &Организация) КАК НалоговыйОборотыДтКт
	|	ГДЕ
	|		НалоговыйОборотыДтКт.СубконтоКт1.Предопределенный
	|		И НалоговыйОборотыДтКт.СубконтоКт1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		0,
	|		ЕСТЬNULL(НалоговыйОборотыДтКт.СуммаОборот, 0)
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачПериода, &КонПериода, , СчетДт В ИЕРАРХИИ (&СчетаДт), &Субконто, , , Организация = &Организация) КАК НалоговыйОборотыДтКт
	|	ГДЕ
	|		НалоговыйОборотыДтКт.СубконтоДт1.Предопределенный
	|		И НалоговыйОборотыДтКт.СубконтоДт1 = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ДоходыРасходыСвязанныеСПродажейВалюты)) КАК Обороты
	|ИТОГИ
	|	СУММА(Доход)
	|ПО
	|	ОБЩИЕ";
      				  
	//Запрос.УстановитьПараметр("СчетаКт",     ПланыСчетов.Хозрасчетный.ПрочиеДоходыПоТекущейДеятельности);  //90.7 НУ
	//Запрос.УстановитьПараметр("СчетаДт",     ПланыСчетов.Хозрасчетный.ПрочиеРасходыПоТекущейДеятельности); // 90.8
	Запрос.УстановитьПараметр("НачПериода",  Дата(ГодОтчета,1,1));
	Запрос.УстановитьПараметр("КонПериода",  Новый Граница(КонецМесяца(Дата(ГодОтчета,МесяцОтчета,1)),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Субконто",    ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтчета.Организация);
 	
	П0413 = 0;
    П0423 = 0;
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока Выборка.Следующий() Цикл
		Если Выборка.Доход > 0 Тогда
			П0413 = Выборка.Доход;
		ИНаче
			П0423 = - Выборка.Доход;
		КонецЕсли;
	КонецЦикла;	
	
	П0512 = П0512 + П0413;
	П0522 = П0522 + П0423 + П9089094;  //стр.4.2 + 2013 ДО 90.8,90.9

	П0102 = П0112 + П0122 + П0132 + П0142 + П0152 + П0162;   //+90.7    1 стр.

	П0202_ = П0212 + П0222 + П0232 + П0242 + П0252 + П0262;   //+90.8  без *, НДС не заполнен  2 стр.
	П0502 = П0512 - П0522;	 
	
	П0203_  = П0202_;	
	
	П0802 = П0602 - П0702 - П0702_2;
	П0902 = П0102 - П0202_ - П0402 + П0502 + П0802;

	П1102 = 0;
    П1202 = П0902 - П1002 - П1102;
	П1212 = 0;
    П1302 = 0;	
	П1312 = 0;
    П1402 = Окр(П1202 * ПараметрыОтчета.СтавкаПриб/100);
    П1412 = 0;
    П1502 = 0;
    П1602 = 0;
    П1702 = 0;
    П1802 = 0;
    П1902 = П1402 - П1502 - П1602 - П1702 - П1802;
    П2102 = П1902 - П2002;
    П030 = 0;
    П040 = 0;
	П050 = 0;
    П060 = 0;
    П061 = 0;
    П070 = 0;
    П080 = 0;
    П090 = 0;
    П100 = 0;
    П110 = П070 - П090;

	Раздел1 = Контейнер.Раздел1;	
	Раздел1.П01010104  = П0102; 
	Раздел1.П01010204  = П0202_; 
	
	П0402_ = П0402 + П0222Н + П0232Н + П0362 + П9089093;     // 3 стр. 2013 +  ДО 90.8, 90.9  без НУВнереализац. 
	Раздел1.П01010304   = П0402_; 
	Раздел1.П010104104  = П0512;
	Раздел1.П010104204  = П0522; 
	Раздел1.П01010504   = П0602;
	Раздел1.П01010604   = П0702; 
	Раздел1.П010106204  = П0702_2;
	Раздел1.П01011803   = П2002; 
	Раздел1.П04010403   = П030; 	
	Раздел1.П04010503   = П040;
	Раздел1.П04010903   = П130;
	Раздел1.П040109103  = ПодоходныйДт68Кт50;
	Раздел1.П04010703   = ПодоходныйДт68Кт50;

КонецПроцедуры	
// }
// 4D

#КонецОбласти

#КонецОбласти
