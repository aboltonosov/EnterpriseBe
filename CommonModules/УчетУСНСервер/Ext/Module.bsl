
#Область ПрограммныйИнтерфейс

// Процедура формирования движений по регистру "КУДиР".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства, инициализирующиеся при проведении документа
//		(см. метод ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения);
//	Движения - Структура с элементами:
//		* Ключ - Строка - Имя регистра по которому документ делает движения;
//		* Значение - НаборЗаписей - набор записей соответствующего регистра;
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьДоходКУДиР(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	ТаблицаКУДиР = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаКнигаУчетаДоходовИРасходов;
	
	Если Отказ ИЛИ ТаблицаКУДиР.Количество() = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ДвиженияКУДиР = Движения.КнигаУчетаДоходовИРасходов;
	ДвиженияКУДиР.Записывать = Истина;
	ДвиженияКУДиР.Загрузить(ТаблицаКУДиР);	
	
КонецПроцедуры 

// Процедура формирования движений по регистру "КУДиР Раздел 2".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства, инициализирующиеся при проведении документа
//		(см. метод ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения);
//	Движения - Структура с элементами:
//		* Ключ - Строка - Имя регистра по которому документ делает движения;
//		* Значение - НаборЗаписей - набор записей соответствующего регистра;
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьРаздел2КУДиР(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	ТаблицаКУДиР = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаКнигаУчетаДоходовИРасходовРаздел2;
	
	Если Отказ ИЛИ ТаблицаКУДиР.Количество() = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ДвиженияКУДиР = Движения.КнигаУчетаДоходовИРасходовРаздел2;
	ДвиженияКУДиР.Записывать = Истина;
	ДвиженияКУДиР.Загрузить(ТаблицаКУДиР);	
	
КонецПроцедуры

// Возвращает реквизиты первичного документа для занесения в графу 2 КУДиР.
//	Параметры:
//		Документ - ДокументОбъект - документ, для которого делаются движения КУДиР;
//		ТЧ - ТабличнаяЧасть объекта - табличная часть, где содержатся данные о номере и дате первичного документа;
//		Строка - Число - номер строки табличной части документа, где содержатся данные о номере и дате первичного документа;
//		УказыватьВид - Булево - признак необходимости указывать в результате синоним документа (например "Реализация товаров и услуг №1 от 01.01.2001").
//			Значение по умолчанию - Ложь;
//
//	Возвращаемое значение:
//		Строка - строка вида "Реализация товаров и услуг №1 от 01.01.2001" или "№1 от 01.01.2001", в зависимости от признака УказыватьВид.
//
Функция РеквизитыПервичногоДокумента(Документ, ТЧ = "", Строка = 0, УказыватьВид = Ложь) Экспорт
	
	ВидНаПечать		= "";
	НомерНаПечать	= "";
	ДатаНаПечать	= "";
	
	МетаданныеДокумента	= Документ.Метаданные();
	
	// Проверим дату и номер первичного документа в табличной части.
	Если (ЗначениеЗаполнено(ТЧ)) и (Строка > 0) Тогда
		
		Если ОбщегоНазначенияУТ.ЕстьРеквизитТабЧастиОбъекта("НомерВходящегоДокумента", МетаданныеДокумента, ТЧ)
			И ОбщегоНазначенияУТ.ЕстьРеквизитТабЧастиОбъекта("ДатаВходящегоДокумента", МетаданныеДокумента, ТЧ) Тогда
			
			Если НЕ Документ[ТЧ].Количество() < Строка-1 Тогда
				
				НомерНаПечать	= Документ[ТЧ][Строка-1].НомерВходящегоДокумента;
				ДатаНаПечать	= Формат(Документ[ТЧ][Строка-1].ДатаВходящегоДокумента, "ДЛФ=D");
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Проверим дату и номер первичного документа в шапке.
	Если НЕ ЗначениеЗаполнено(НомерНаПечать) И НЕ ЗначениеЗаполнено(ДатаНаПечать) Тогда
		
		Если ОбщегоНазначения.ЕстьРеквизитОбъекта("НомерВходящегоДокумента", МетаданныеДокумента) И
			ОбщегоНазначения.ЕстьРеквизитОбъекта("ДатаВходящегоДокумента", МетаданныеДокумента) Тогда
			
			НомерНаПечать	= Документ.НомерВходящегоДокумента;
			ДатаНаПечать	= Формат(Документ.ДатаВходящегоДокумента, "ДЛФ=D");
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Если дата и номер первичного документа не указаны или не заполнены, используем дату и номер регистрации.
	Если НЕ ЗначениеЗаполнено(НомерНаПечать) Тогда
		
		НомерНаПечать	= ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Документ.Номер, Истина, Истина);
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаНаПечать) Тогда
		
		ДатаНаПечать	= Формат(Документ.Дата, "ДЛФ=D");
		
	КонецЕсли;
	
	Если УказыватьВид Тогда
		
		ВидНаПечать	= МетаданныеДокумента.Синоним + " ";
		
	КонецЕсли;
	
	РеквизитыПервичногоДокумента	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = '%1№ %2 от %3'"), ВидНаПечать, НомерНаПечать, ДатаНаПечать);
	
	Возврат РеквизитыПервичногоДокумента;
	
КонецФункции

#Область АктуальностьДанныхУСН

// Возвращает периоды с которого для операций УСН закрытия месяца данные становятся неактуальными.
// Параметры
//	КонецРасчета - Дата - ищутся записи, сделанные раньше этой даты;
//	СписокОрганизаций - Массив - СправочникСсылка.Организации - ищутся записи, сделанные по переданным организациям;
//								Если значение не заполнено - отбор не учитывается.
// Возвращаемое значение:
//	Структура - содержащая даты начала расчета для каждой из операций УСН, если данные актуальные возвращает КонецРасчета + 1:
//		* НачалоРасчетаПризнаниеРасходовПриУСН - Дата - дата начала расчета, с которой данные по операции признания расходов становятся не актуальными;
//		* НачалоРасчетаСторноДоходовКУДиРПоЕНВД - Дата - дата начала расчета, с которой данные по операции сторно записей КУДиР при ЕНВД становятся не актуальными;
//		* НачалоРасчетаНалогаУСН - Дата - дата начала расчета, с которой данные по операции расчета налога УСН становятся не актуальными.
//
Функция НачалоРасчетаОперацийПоУСН(КонецРасчета, СписокОрганизаций = Неопределено) Экспорт
	
	Если СписокОрганизаций = Неопределено Тогда
		СписокОрганизаций = Новый Массив;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УчетнаяПолитикаОрганизаций.Период КАК НачалоПериода,
	|	УчетнаяПолитикаОрганизаций.Организация КАК Организация,
	|	УчетнаяПолитикаОрганизаций.ПрименяетсяУСН,
	|	УчетнаяПолитикаОрганизаций.ПрименяетсяУСНДоходыМинусРасходы,
	|	МИНИМУМ(ЕстьNULL(УчетнаяПолитикаОрганизацийСледующиеПериоды.Период, ДОБАВИТЬКДАТЕ(&КонецРасчета, СЕКУНДА, 1))) КАК КонецПериода
	|ПОМЕСТИТЬ ОрганизацииНаУСН
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО Константы.ИспользоватьРеглУчет
	|			И НАЧАЛОПЕРИОДА(&КонецРасчета, МЕСЯЦ) >= Константы.ДатаНачалаВеденияРеглУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизацийСледующиеПериоды
	|		ПО УчетнаяПолитикаОрганизаций.Период < УчетнаяПолитикаОрганизацийСледующиеПериоды.Период
	|			И УчетнаяПолитикаОрганизаций.Организация = УчетнаяПолитикаОрганизацийСледующиеПериоды.Организация
	|ГДЕ
	|	УчетнаяПолитикаОрганизаций.Период <= &КонецРасчета
	|	И (УчетнаяПолитикаОрганизаций.Организация В (&СписокОрганизаций)
	|			ИЛИ &ПоВсемОрганизациям)
	|	И УчетнаяПолитикаОрганизаций.ПрименяетсяУСН
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетнаяПолитикаОрганизаций.Организация,
	|	УчетнаяПолитикаОрганизаций.ПрименяетсяУСНДоходыМинусРасходы,
	|	УчетнаяПолитикаОрганизаций.ПрименяетсяУСН,
	|	УчетнаяПолитикаОрганизаций.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НачалоПериода,
	|	КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаданияКЗакрытиюМесяца.Месяц,
	|	ЗаданияКЗакрытиюМесяца.Операция
	|ПОМЕСТИТЬ НеЗаполненныеДатыРасчета
	|ИЗ
	|	РегистрСведений.ЗаданияКЗакрытиюМесяца КАК ЗаданияКЗакрытиюМесяца
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОрганизацииНаУСН КАК УчетныеПолитикиОрганизаций
	|		ПО ЗаданияКЗакрытиюМесяца.Организация = УчетныеПолитикиОрганизаций.Организация
	|			И ЗаданияКЗакрытиюМесяца.Месяц >= УчетныеПолитикиОрганизаций.НачалоПериода
	|			И ЗаданияКЗакрытиюМесяца.Месяц < УчетныеПолитикиОрганизаций.КонецПериода
	|			И (ЗаданияКЗакрытиюМесяца.Операция В (ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ПризнаниеРасходовПриУСН), ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.СторноДоходовКУДиРПоЕНВД), ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РасчетНалогаУСН)))
	|ГДЕ
	|	(ЗаданияКЗакрытиюМесяца.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ПризнаниеРасходовПриУСН)
	|				И УчетныеПолитикиОрганизаций.ПрименяетсяУСНДоходыМинусРасходы
	|			ИЛИ ЗаданияКЗакрытиюМесяца.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.СторноДоходовКУДиРПоЕНВД)
	|				И НЕ УчетныеПолитикиОрганизаций.ПрименяетсяУСНДоходыМинусРасходы
	|			ИЛИ ЗаданияКЗакрытиюМесяца.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РасчетНалогаУСН))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(&КонецРасчета, МЕСЯЦ),
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ПризнаниеРасходовПриУСН)
	|ИЗ
	|	ОрганизацииНаУСН КАК ОрганизацииНаУСН
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|		ПО ОрганизацииНаУСН.Организация = РегламентнаяОперация.Организация
	|			И (РегламентнаяОперация.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&КонецРасчета, МЕСЯЦ) И КОНЕЦПЕРИОДА(&КонецРасчета, МЕСЯЦ))
	|			И (РегламентнаяОперация.Проведен)
	|			И (РегламентнаяОперация.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.ПризнаниеРасходовПриУСН))
	|ГДЕ
	|	РегламентнаяОперация.Ссылка ЕСТЬ NULL 
	|	И ОрганизацииНаУСН.ПрименяетсяУСНДоходыМинусРасходы
	|	И &КонецРасчета МЕЖДУ ОрганизацииНаУСН.НачалоПериода И ОрганизацииНаУСН.КонецПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(&КонецРасчета, МЕСЯЦ),
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РасчетНалогаУСН)
	|ИЗ
	|	ОрганизацииНаУСН КАК ОрганизацииНаУСН
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|		ПО ОрганизацииНаУСН.Организация = РегламентнаяОперация.Организация
	|			И (РегламентнаяОперация.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&КонецРасчета, МЕСЯЦ) И КОНЕЦПЕРИОДА(&КонецРасчета, МЕСЯЦ))
	|			И (РегламентнаяОперация.Проведен)
	|			И (РегламентнаяОперация.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыРегламентныхОпераций.РасчетНалогаУСН))
	|ГДЕ
	|	РегламентнаяОперация.Ссылка ЕСТЬ NULL
	|	И &КонецРасчета МЕЖДУ ОрганизацииНаУСН.НачалоПериода И ОрганизацииНаУСН.КонецПериода 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВЫБОР
	|			КОГДА НеЗаполненныеДатыРасчета.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ПризнаниеРасходовПриУСН)
	|				ТОГДА НеЗаполненныеДатыРасчета.Месяц
	|			ИНАЧЕ ДОБАВИТЬКДАТЕ(&КонецРасчета, СЕКУНДА, 1)
	|		КОНЕЦ) КАК НачалоРасчетаПризнаниеРасходовПриУСН,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА НеЗаполненныеДатыРасчета.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.СторноДоходовКУДиРПоЕНВД)
	|				ТОГДА НеЗаполненныеДатыРасчета.Месяц
	|			ИНАЧЕ ДОБАВИТЬКДАТЕ(&КонецРасчета, СЕКУНДА, 1)
	|		КОНЕЦ) КАК НачалоРасчетаСторноДоходовКУДиРПоЕНВД,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА НеЗаполненныеДатыРасчета.Операция = ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РасчетНалогаУСН)
	|				ТОГДА НеЗаполненныеДатыРасчета.Месяц
	|			ИНАЧЕ ДОБАВИТЬКДАТЕ(&КонецРасчета, СЕКУНДА, 1)
	|		КОНЕЦ) КАК НачалоРасчетаНалогаУСН
	|ИЗ
	|	НеЗаполненныеДатыРасчета КАК НеЗаполненныеДатыРасчета";
	
	Запрос.УстановитьПараметр("КонецРасчета", КонецМесяца(КонецРасчета));
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", Не ЗначениеЗаполнено(СписокОрганизаций));
	
	ЗаданияКРасчету = Запрос.Выполнить();
	ДатыНачалаРасчета = ЗаданияКРасчету.Выбрать();
	
	СтруктураВозврата = Новый Структура("НачалоРасчетаПризнаниеРасходовПриУСН, НачалоРасчетаСторноДоходовКУДиРПоЕНВД, НачалоРасчетаНалогаУСН");
	
	Если ДатыНачалаРасчета.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, ДатыНачалаРасчета);
	КонецЕсли;
	
	Для каждого НачалоРасчета из СтруктураВозврата Цикл
		Если Не ЗначениеЗаполнено(НачалоРасчета.Значение) Тогда
			СтруктураВозврата.Вставить(НачалоРасчета.Ключ, КонецМесяца(КонецРасчета) + 1);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Процедура вызывается из методов регламентных операций для записи в регистр сведений "ЗаданияКЗакрытиюМесяца"
//	данных о необходимости пересчета признания расходов (если изменяются организации с объектом налогообложения "Доходы минус расходы").
// Параметры:
//	Период - Дата - период пересчета;
//	СписокОрганизаций - Массив - СправочникСсылка.Организации - массив организаций, для которых запущена процедура пересчета.
//	ТолькоДляОрганизацийНаЕНВД - Булево - Признак выборки подходящих организаций:
//		если Истина - будут выбираться организации на УСН, применяющие ЕНВД,
//		если Ложь - будут выбираться организации на УСН, с объектом налогообложения "Доходы минус расходы"
//		значение по умолчанию - Ложь;
//	КоличествоОбработанныхЭлементов - Число - Количество данных, обработанных данной процедурой (см. общий модуль "Производительность").
//
Процедура ОбновитьЗаданияКЗакрытиюМесяцаПриВыполненииРеглОперации(Период, СписокОрганизаций, ТолькоДляОрганизацийНаЕНВД = Ложь, КоличествоОбработанныхЭлементов = 0) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация,
	|	&Период,
	|	НЕОПРЕДЕЛЕНО КАК Документ
	|ПОМЕСТИТЬ КонтрольныеДанныеПоУСНДоходыМинусРасходы
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|			&Период,
	|			Организация В (&СписокОрганизаций)
	|				И ВЫБОР
	|					КОГДА &ТолькоДляОрганизацийНаЕНВД
	|						ТОГДА ПрименяетсяУСН
	|					ИНАЧЕ ПрименяетсяУСНДоходыМинусРасходы
	|				КОНЕЦ
	|				И ВЫБОР
	|					КОГДА &ТолькоДляОрганизацийНаЕНВД
	|						ТОГДА ПлательщикЕНВД
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК УчетнаяПолитикаОрганизацийСрезПоследних";
	
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ТолькоДляОрганизацийНаЕНВД", ТолькоДляОрганизацийНаЕНВД);
	
	Запрос.Выполнить();
	
	Операция = ?(ТолькоДляОрганизацийНаЕНВД, Перечисления.ОперацииЗакрытияМесяца.СторноДоходовКУДиРПоЕНВД,
		Перечисления.ОперацииЗакрытияМесяца.ПризнаниеРасходовПриУСН);
	ОбновитьЗаданияКЗакрытиюМесяца(Запрос.МенеджерВременныхТаблиц, Операция, КоличествоОбработанныхЭлементов);
	
КонецПроцедуры

// Процедура записывает в регистр сведений "ЗаданияКЗакрытиюМесяца" данные о необходимости пересчета регл. операций по УСН,
// при отсутствии в регистре записей в этом периоде.
//	Параметры:
//		ВременнаяТаблица - МенеджерВременныхТаблиц - содержит таблицу:
//				* КонтрольныеДанныеПоУСНДоходыМинусРасходы - временная таблица с колонками:
//					** Организация - СправочникСсылка.Организации - организация для которой необходимо обновить данные пересчета;
//					** Документ - ДокументСсылка - документ, который вызвал необходимость обновления данных пересчета;
//					** Период - Дата - новая дата, на которую необходимо установить данные пересчета;
//					** Операция - ПеречислениеСсылка.ОперацииЗакрытияМесяца - операция для которой устанавливаем новые данные пересчета;
//		Операция - ПеречислениеСсылка.ОперацииЗакрытияМесяца - тип операции закрытия месяца, для которой происходит обновление
//					(в данном модуле актуален только для ПризнаниеРасходовПриУСН, РасчетНалогаУСН и СторноДоходовКУДиРПоЕНВД);
//		КоличествоОбработанныхЭлементов - Число - Количество данных, обработанных данной процедурой (см. общий модуль "Производительность").
//
Процедура ОбновитьЗаданияКЗакрытиюМесяца(ВременнаяТаблица, Операция, КоличествоОбработанныхЭлементов = 0) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Операция", Операция);
	Запрос.МенеджерВременныхТаблиц = ВременнаяТаблица;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтрольныеДанныеПоУСНДоходыМинусРасходы.Организация КАК Организация,
	|	КонтрольныеДанныеПоУСНДоходыМинусРасходы.Документ КАК Документ,
	|	НАЧАЛОПЕРИОДА(КонтрольныеДанныеПоУСНДоходыМинусРасходы.Период, МЕСЯЦ) КАК Месяц,
	|	&Операция КАК Операция
	|ИЗ
	|	КонтрольныеДанныеПоУСНДоходыМинусРасходы КАК КонтрольныеДанныеПоУСНДоходыМинусРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО Константы.ИспользоватьРеглУчет
	|			И НАЧАЛОПЕРИОДА(КонтрольныеДанныеПоУСНДоходыМинусРасходы.Период, МЕСЯЦ) >= Константы.ДатаНачалаВеденияРеглУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаданияКЗакрытиюМесяца КАК ЗаданияКЗакрытиюМесяца
	|		ПО КонтрольныеДанныеПоУСНДоходыМинусРасходы.Организация = ЗаданияКЗакрытиюМесяца.Организация
	|			И (ЗаданияКЗакрытиюМесяца.Операция = &Операция)
	|
	|СГРУППИРОВАТЬ ПО
	|	КонтрольныеДанныеПоУСНДоходыМинусРасходы.Организация,
	|	КонтрольныеДанныеПоУСНДоходыМинусРасходы.Документ,
	|	КонтрольныеДанныеПоУСНДоходыМинусРасходы.Период
	|
	|ИМЕЮЩИЕ
	|	КонтрольныеДанныеПоУСНДоходыМинусРасходы.Период < МИНИМУМ(ЕСТЬNULL(ЗаданияКЗакрытиюМесяца.Месяц, ДАТАВРЕМЯ(2099, 1, 1)))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КонтрольныеДанныеПоУСНДоходыМинусРасходы";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(НаборЗаписей, Выборка);
		НаборЗаписей.НомерЗадания = ЗакрытиеМесяцаУТВызовСервера.ТекущийНомерЗадания();
		НаборЗаписей.Записать();
		КоличествоОбработанныхЭлементов = КоличествоОбработанныхЭлементов + 1;
	КонецЦикла;
КонецПроцедуры

// Возвращает признак записи движений по регистру механизмом признания расходов.
//
// Параметры:
//	НаборЗаписей - НаборЗаписей - набор записей регистра.
//
// Возвращаемое значение:
//	Булево - Истина, если движения записываются регламентной операцией признания расходов.
//
Функция ДвиженияЗаписываютсяПризнаниемРасходов(НаборЗаписей) Экспорт
	
	Возврат НаборЗаписей.ДополнительныеСвойства.Свойство(ИмяСлужебногоДополнительногоСвойстваОбъекта());
	
КонецФункции

// Функция вызывается из набора записей регистра накопления для записи в регистр сведений "ЗаданияКЗакрытиюМесяца"
//	данных о необходимости пересчета признания расходов (если в данных регистра есть организации с объектом налогообложения "Доходы минус расходы").
// Параметры:
//	ИмяВременнойТаблицыДляЗаписиВРегистрЗаданий - Строка - имя временной таблицы, куда помещать данные для записи в регистр заданий,
//		если не задана - временная таблица не создается, считается, что текст запроса создается для последующего его объединения;
// Возвращаемое значение:
//	Строка - текст запроса, для последующего его обработку в модуле менеджера набора записей регистра. Запрос содержит в себе:
//	1) проверки по умолчанию: Организация находится на УСН с объектом налогообложения доходы минус расходы;
//	2) дополнительные условия для проверки, свойственные тому регистру, из модуля которого вызвана текущая функция.
//
Функция ТекстЗапросаОбновленияЗаданийКЗакрытиюМесяцаПриЗаписиРегистра(ИмяВременнойТаблицыДляЗаписиВРегистрЗаданий = "") Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ТаблицаИзменений.Период, МЕСЯЦ) КАК Месяц,
	|	ТаблицаИзменений.Регистратор КАК Документ,
	|	ТаблицаИзменений.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ПризнаниеРасходовПриУСН) КАК Операция
	|//СозданиеВременнойТаблицы
	|ИЗ
	|	#ТаблицаИзмененийРегистра КАК ТаблицаИзменений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|		ПО Константы.ИспользоватьРеглУчет
	|			И НАЧАЛОПЕРИОДА(ТаблицаИзменений.Период, МЕСЯЦ) >= Константы.ДатаНачалаВеденияРеглУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизацийПрименяющаяУСНДоходыМинусРасходы
	|		ПО ТаблицаИзменений.Организация = УчетнаяПолитикаОрганизацийПрименяющаяУСНДоходыМинусРасходы.Организация
	|			И ТаблицаИзменений.Период >= УчетнаяПолитикаОрганизацийПрименяющаяУСНДоходыМинусРасходы.Период
	|			И (УчетнаяПолитикаОрганизацийПрименяющаяУСНДоходыМинусРасходы.ПрименяетсяУСНДоходыМинусРасходы)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО (УчетнаяПолитикаОрганизацийПрименяющаяУСНДоходыМинусРасходы.Организация = УчетнаяПолитикаОрганизаций.Организация)
	|			И (УчетнаяПолитикаОрганизацийПрименяющаяУСНДоходыМинусРасходы.Организация < УчетнаяПолитикаОрганизаций.Период)
	|			И (НЕ УчетнаяПолитикаОрганизаций.ПрименяетсяУСНДоходыМинусРасходы)
	|ГДЕ
	|	ЕСТЬNULL(УчетнаяПолитикаОрганизаций.Период, ДАТАВРЕМЯ(1, 1, 1)) <= ТаблицаИзменений.Период
	|	И &ДополнительныеУсловия";
	
	ТекстСозданияВТ = ?(ЗначениеЗаполнено(ИмяВременнойТаблицыДляЗаписиВРегистрЗаданий), "ПОМЕСТИТЬ " + ИмяВременнойТаблицыДляЗаписиВРегистрЗаданий, "");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СозданиеВременнойТаблицы", ТекстСозданияВТ);
	
	Возврат ТекстЗапроса;
	
КонецФункции	

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеРегламентированнойОтчетности

Процедура ПолучитьСведенияОПоказателяхОтчетаУСНФормаОтчета2009Кв1(ПоказателиОтчета) Экспорт
	
	// Раздел 1
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010003003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010004003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000010005003", Истина, Ложь);
	
	// Раздел 2
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020021003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020023003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000020028003", Истина, Ложь);
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаУСНФормаОтчета2014Кв1(ПоказателиОтчета) Экспорт
	
	// Раздел 2.1
	
	// признак налогоплательщика
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210010203", Истина, Ложь);
	
	// доходы
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210011103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210011203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210011303", Истина, Ложь);
	
	// ставка налога
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210012003", Истина, Ложь);
	
	// расходы, уменьшающие налог
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210014103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210014203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000210014303", Истина, Ложь);
	
	// Раздел 2.2
	
	// доходы
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220021003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220021103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220021203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220021303", Истина, Ложь);
	
	// расходы
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220022103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220022203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220022303", Истина, Ложь);
	
	// ставка налога
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220026003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220026103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220026203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220026303", Истина, Ложь);
	
	// убытки прошлых лет
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220023003", Истина, Ложь);
	
КонецПроцедуры

Процедура ПолучитьСведенияОПоказателяхОтчетаУСНФормаОтчета2015Кв1(ПоказателиОтчета) Экспорт

	// Раздел 2.1.1
	
	// признак налогоплательщика
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110010203", Истина, Ложь);
	
	// доходы
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110011103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110011203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110011303", Истина, Ложь);
	
	// ставки налога
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110012003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110012103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110012203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110012303", Истина, Ложь);
	
	// расходы, уменьшающие налог
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110014103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110014203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002110014303", Истина, Ложь);
	
	// Раздел 2.1.2
	
	// доходы ТС
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120011003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120011103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120011203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120011303", Истина, Ложь);
	
	// расходы, уменьшающие налог по ТС
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120014003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120014103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120014203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120014303", Истина, Ложь);
	
	// Уплаченный торговый сбор
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120015003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120015103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120015203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П002120015303", Истина, Ложь);
	
	// Раздел 2.2
	
	// доходы
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220021003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220021103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220021203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220021303", Истина, Ложь);
	
	// расходы
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220022003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220022103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220022203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220022303", Истина, Ложь);
	
	// ставка налога
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220026003", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220026103", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220026203", Истина, Ложь);
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220026303", Истина, Ложь);
	
	// убытки прошлых лет
	РегламентированнаяОтчетность.ВставитьПоказательВСтруктуру(ПоказателиОтчета, "П000220023003", Истина, Ложь);

КонецПроцедуры

Процедура ЗаполнитьОтчетУСНФормаОтчета2009Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Если НЕ УчетнаяПолитика.Существует(ПараметрыОтчета.Организация, ПараметрыОтчета.мДатаКонцаПериодаОтчета, Истина) Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.Организация, "ЮридическоеФизическоеЛицо");
	
	РеквизитыОрганизации.Вставить("РегистрацияВНалоговомОргане", Справочники.Организации.РегистрацияВНалоговомОргане(ПараметрыОтчета.Организация));
	
	РегистрацияВНалоговомОргане = РеквизитыОрганизации.РегистрацияВНалоговомОргане;
	
	Ставка = Контейнер.Раздел2.П000020020103;
	Раздел1 = Контейнер.Раздел1;
	Раздел2 = Контейнер.Раздел2;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамОрганизация",           ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("парамНачалоГода",            НачалоГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("парамКонецОтчетногоПериода", КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа7Оборот
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&парамНачалоГода, &парамКонецОтчетногоПериода, , Организация = &парамОрганизация) КАК КнигаУчетаДоходовИРасходовОбороты";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Доходы = 0;
	Расходы = 0;
	Пока Выборка.Следующий() Цикл
		Доходы = Доходы + ?(Выборка.Графа5Оборот = Null, 0, Выборка.Графа5Оборот);
		Расходы = Расходы + ?(Выборка.Графа7Оборот = Null, 0, Выборка.Графа7Оборот);
	КонецЦикла;
	
	ПрименяетсяУСНДоходы = Ложь;
	
	// Учтем возможные сценарии:
	// 1. Единственная запись в учетной политике организации введена не с начала отчетного года.
	// 2. В течение года организация утратила право на применение УСН.	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ПрименяетсяУСНДоходы КАК ПрименяетсяУСНДоходы
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|			&парамКонецОтчетногоПериода,
	|			Организация = &парамОрганизация
	|				И ПрименяетсяУСН) КАК УчетнаяПолитикаОрганизацийСрезПоследних";
	
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		ПрименяетсяУСНДоходы = ВыборкаДетальныеЗаписи.ПрименяетсяУСНДоходы;	
	КонецЕсли;
	
	Если ПрименяетсяУСНДоходы Тогда // Объект налогообложения "Доходы"
		
		Раздел2.П000020021003 = Доходы;
		Раздел2.П000020022003 = 0;
		
		ВзносыПФ = 0;
		
		Если Год(ПараметрыОтчета.мДатаКонцаПериодаОтчета) >= 2013 Тогда
			
			// взносы и иные выплаты, уменьшающие сумму налога, с 2013 г. отражаются в 4 разделе документа "ЗаписьКУДиР"
			
			ДатаНачалоГода = НачалоГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета);
			ДатаКонецГода  = КонецГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета);
			
			ЭтоИПБезРаботников = Ложь;
			
			Если РеквизитыОрганизации.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо Тогда
				
				// для ИП - проверим, производились ли выплаты работникам и прочим физлицам (письмо Минфина РФ от 21 мая 2013 г. N 03-11-11/17926)
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ХозрасчетныйОбороты.Организация КАК Организация
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоГода, &КонецОтчетногоПериода, , Счет = &СчетЗарплаты, , Организация = &Организация, , ) КАК ХозрасчетныйОбороты
				|ГДЕ
				|	ХозрасчетныйОбороты.СуммаОборотКт <> 0
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	ХозрасчетныйОбороты.Организация
				|ИЗ
				|	РегистрБухгалтерии.Хозрасчетный.Обороты(
				|			&НачалоГода,
				|			&КонецОтчетногоПериода,
				|			,
				|			Счет В (&СчетаВзносов),
				|			&ВидСубконтоВидыПлатежей,
				|			Организация = &Организация
				|				И Субконто1 = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог),
				|			,
				|			) КАК ХозрасчетныйОбороты
				|ГДЕ
				|	ХозрасчетныйОбороты.СуммаОборотКт <> 0"
				;
				
				Запрос.УстановитьПараметр("Организация",             ПараметрыОтчета.Организация);
				Запрос.УстановитьПараметр("НачалоГода",              ДатаНачалоГода);
				Запрос.УстановитьПараметр("КонецОтчетногоПериода",   ДатаКонецГода);
				Запрос.УстановитьПараметр("СчетЗарплаты",            ПланыСчетов.Хозрасчетный.РасчетыСПерсоналомПоОплатеТруда);
				Запрос.УстановитьПараметр("ВидСубконтоВидыПлатежей", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет);
				
				СчетаВзносов = Новый Массив;
				СчетаВзносов.Добавить(ПланыСчетов.Хозрасчетный.ПФР_страх);
				СчетаВзносов.Добавить(ПланыСчетов.Хозрасчетный.ПФР_нак);
				
				Запрос.УстановитьПараметр("СчетаВзносов", СчетаВзносов);
				
				Результат = Запрос.Выполнить();
				
				ЭтоИПБезРаботников = Результат.Пустой();
				
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Организация",           ПараметрыОтчета.Организация);
			Запрос.УстановитьПараметр("НачалоГода",            ДатаНачалоГода);
			Запрос.УстановитьПараметр("КонецОтчетногоПериода", ДатаКонецГода);
			Запрос.УстановитьПараметр("ЭтоИПБезРаботников",    ЭтоИПБезРаботников);
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(СУММА(УменьшениеНалога.ПФР + УменьшениеНалога.ФОМС + ВЫБОР
			|				КОГДА &ЭтоИПБезРаботников
			|					ТОГДА 0
			|				ИНАЧЕ УменьшениеНалога.ФСС + УменьшениеНалога.ФСС_НС + УменьшениеНалога.Больничные + УменьшениеНалога.ДобровольноеСтрахование
			|			КОНЕЦ), 0) КАК СуммаКУменьшениюНалога
			|ИЗ
			|	Документ.ЗаписьКУДиР.УменьшениеНалога КАК УменьшениеНалога
			|ГДЕ
			|	УменьшениеНалога.Ссылка.Дата МЕЖДУ &НачалоГода И &КонецОтчетногоПериода
			|	И УменьшениеНалога.Ссылка.Организация = &Организация
			|	И УменьшениеНалога.Ссылка.Проведен";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ВзносыПФ = Выборка.СуммаКУменьшениюНалога;
			
			Строка080 = Доходы * Ставка / 100;
			Если ЭтоИПБезРаботников Тогда
				// Для ИП, не производивших выплаты работникам и прочим физлицам, ограничение в 50% не действует (Письмо Минфина от 02.04.2013 N 03-11-09/10547)
				ВзносыПФ = Мин(Строка080, ВзносыПФ);
			Иначе
				ВзносыПФ = Мин((Строка080 - 0.5 * Строка080), ВзносыПФ);
			КонецЕсли;
			
		Иначе
			// до 2012 года включительно - старый порядок заполнения
			НачДатаОплаты = НачалоГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета) + 15*86400;
			КонДатаОплаты = КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета) + 15*86400;
			
			Счета = Новый Массив;
			Счета.Добавить(ПланыСчетов.Хозрасчетный.ПФР_нак);
			Счета.Добавить(ПланыСчетов.Хозрасчетный.ПФР_страх);
			
			Если ПараметрыОтчета.мДатаКонцаПериодаОтчета > '20100101' Тогда
				Счета.Добавить(ПланыСчетов.Хозрасчетный.ФСС);
				Счета.Добавить(ПланыСчетов.Хозрасчетный.ФФОМС);
				Счета.Добавить(ПланыСчетов.Хозрасчетный.ТФОМС);
				Счета.Добавить(ПланыСчетов.Хозрасчетный.ФСС_НСиПЗ);
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("парамОрганизация", 	ПараметрыОтчета.Организация);
			Запрос.УстановитьПараметр("парамНачалоГода", 	НачДатаОплаты);
			Запрос.УстановитьПараметр("парамКонецОтчетногоПериода", КонДатаОплаты);
			Запрос.УстановитьПараметр("Счета", Счета);
			Запрос.Текст =                                     
			"ВЫБРАТЬ
			|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
			|			&парамНачалоГода,
			|			&парамКонецОтчетногоПериода,
			|			,
			|			,
			|			Счет В (&Счета),
			|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
			|			Субконто1 = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
			|				И Организация = &парамОрганизация) КАК ХозрасчетныйОстаткиИОбороты";
			
			Выборка = Запрос.Выполнить().Выбрать();
			ВзносыПФ = 0;
			Пока Выборка.Следующий() Цикл
				ВзносыПФ = ВзносыПФ + ?(Выборка.СуммаНачальныйОстатокДт = Null, 0, Выборка.СуммаНачальныйОстатокДт);
				ВзносыПФ = ВзносыПФ + ?(Выборка.СуммаОборотДт = Null, 0, Выборка.СуммаОборотДт);
				ВзносыПФ = ВзносыПФ - ?(Выборка.СуммаКонечныйОстатокДт = Null, 0, Выборка.СуммаКонечныйОстатокДт);
			КонецЦикла;
			
			Строка080 = Доходы * Ставка / 100;
			ВзносыПФ = Мин((Строка080 - 0.5 * Строка080), ВзносыПФ);
			
			// взносы по стоимости страхового года
			Счета = Новый Массив;
			Счета.Добавить(ПланыСчетов.Хозрасчетный.ПФР_Страх_СтраховойГод);
			Счета.Добавить(ПланыСчетов.Хозрасчетный.ПФР_Нак_СтраховойГод);
			Счета.Добавить(ПланыСчетов.Хозрасчетный.ФОМС_СтраховойГод);
			
			Запрос.УстановитьПараметр("Счета", Счета);
			Запрос.Текст =                                     
			"ВЫБРАТЬ
			|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
			|			&парамНачалоГода,
			|			&парамКонецОтчетногоПериода,
			|			,
			|			,
			|			Счет В (&Счета),
			|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
			|			Субконто1 = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
			|				И Организация = &парамОрганизация) КАК ХозрасчетныйОстаткиИОбороты";
			
			Выборка = Запрос.Выполнить().Выбрать();
			ИПВзносыПФ = 0;
			Пока Выборка.Следующий() Цикл
				ИПВзносыПФ = ИПВзносыПФ + ?(Выборка.СуммаНачальныйОстатокДт = Null, 0, Выборка.СуммаНачальныйОстатокДт);
				ИПВзносыПФ = ИПВзносыПФ + ?(Выборка.СуммаОборотДт = Null, 0, Выборка.СуммаОборотДт);
				ИПВзносыПФ = ИПВзносыПФ - ?(Выборка.СуммаКонечныйОстатокДт = Null, 0, Выборка.СуммаКонечныйОстатокДт);
			КонецЦикла;
			
			Если ИПВзносыПФ <> 0 Тогда
				ВзносыПФ = ВзносыПФ + ИПВзносыПФ;
				Если ПараметрыОтчета.мДатаКонцаПериодаОтчета > '20120101' Тогда					
					ВзносыПФ = Мин(Строка080, ВзносыПФ);
				Иначе
					ВзносыПФ = Мин((Строка080 - 0.5 * Строка080), ВзносыПФ);
				КонецЕсли;					
			КонецЕсли;
			
		КонецЕсли;
		
		Раздел2.П000020028003 = ВзносыПФ;
		
	Иначе // Объект налогообложения "Доходы минус расходы"
		
		УбыткиПрошлыхЛет = ПеренесенныеУбыткиПрошлыхЛет(ПараметрыОтчета.Организация,
		НачалоГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета), КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
		
		СуммаНеПеренесенныхУбытков       = УбыткиПрошлыхЛет.ПеренесенныеУбытки;
		УбытокОтУплатыМинимальногоНалога = УбыткиПрошлыхЛет.УбытокОтУплатыМинимальногоНалога;
		
		НалоговаяБазаТекПериод  = Доходы - Расходы - УбытокОтУплатыМинимальногоНалога;
		УменьшениеНалоговойБазы = ?(НалоговаяБазаТекПериод > 0, Мин(НалоговаяБазаТекПериод, СуммаНеПеренесенныхУбытков), 0);
		
		Раздел2.П000020021003 = Доходы;
		Раздел2.П000020022003 = Расходы + УбытокОтУплатыМинимальногоНалога;
		Раздел2.П000020023003 = УменьшениеНалоговойБазы;
		Раздел2.П000020028003 = 0;
		
	КонецЕсли;
	
	// заполним авансовые платежи
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",  ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("НачалоГода",   НачалоГода(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("КонецПериода", КонецКвартала(ДобавитьМесяц(ПараметрыОтчета.мДатаКонцаПериодаОтчета, -3)));
	
	Запрос.УстановитьПараметр("СчетОтраженияНалога",  ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД); // Дт 99.01.1
	Запрос.УстановитьПараметр("СчетНачисленияНалога", ПланыСчетов.Хозрасчетный.ЕНприУСН); // Кт 68.12
	
	ВидыПлатежей = Новый Массив;
	ВидыПлатежей.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Налог);
	ВидыПлатежей.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НалогАкт);
	ВидыПлатежей.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НалогСам);
	Запрос.УстановитьПараметр("ВидыПлатежейВГосБюджет", ВидыПлатежей);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОборотыДтКт.СуммаОборот КАК АвансовыйПлатеж,
	|	КВАРТАЛ(ХозрасчетныйОборотыДтКт.Период) КАК НомерКвартала
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&НачалоГода,
	|			&КонецПериода,
	|			Квартал,
	|			СчетДт = &СчетОтраженияНалога,
	|			,
	|			СчетКт = &СчетНачисленияНалога,
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
	|			Организация = &Организация
	|				И СубконтоКт1 В (&ВидыПлатежейВГосБюджет)) КАК ХозрасчетныйОборотыДтКт
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерКвартала"
	;
	
	АвансовыеПлатежи = Запрос.Выполнить().Выгрузить();
	
	ПлатежиНарастающимИтогом = 0;
	
	Для НомерКвартала = 1 По 3 Цикл
		
		СтрокаПлатежа = АвансовыеПлатежи.Найти(НомерКвартала, "НомерКвартала");
		Если СтрокаПлатежа <> Неопределено Тогда
			ПлатежиНарастающимИтогом = ПлатежиНарастающимИтогом + СтрокаПлатежа.АвансовыйПлатеж;
		КонецЕсли;
		
		НомерГрафы = "П00001000"+ (НомерКвартала + 2) + "003";
		Раздел1[НомерГрафы] = ПлатежиНарастающимИтогом;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьОтчетУСНФормаОтчета2014Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Если НЕ УчетнаяПолитика.Существует(ПараметрыОтчета.Организация, ПараметрыОтчета.мДатаКонцаПериодаОтчета, Истина) Тогда
		Возврат;
	КонецЕсли;
	
	НачалоПериода       = НачалоГода(ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	КонецПериода        = КонецГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	КонецПериодаГраница = Новый Граница(КонецПериода, ВидГраницы.Включая);
	
	ПрименяетсяУСНДоходы = УчетнаяПолитика.ПрименяетсяУСНДоходы(ПараметрыОтчета.Организация, КонецПериода);
	
	// Необходимо учесть, что торговый сбор в 1 квартале уплачивается за квартал, относящийся к предыдущему налоговому периоду
	ПлательщикТорговогоСбора = УчетнаяПолитика.ПлательщикТорговогоСбораЗаПериод(ПараметрыОтчета.Организация, ДобавитьМесяц(НачалоПериода, -12), КонецПериода);
	УменьшатьНалогНаТорговыйСбор = ПрименяетсяУСНДоходы И ПлательщикТорговогоСбора;
	
	ИПИспользуетТрудНаемныхРаботников = Ложь;
	РегламентированнаяОтчетностьПереопределяемый.ПолучитьПризнакИспользованияИПТрудаНаемныхРаботников(ПараметрыОтчета.Организация, ИПИспользуетТрудНаемныхРаботников);
	ЭтоИПБезВыплатФизлицам = НЕ ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(ПараметрыОтчета.Организация) И НЕ ИПИспользуетТрудНаемныхРаботников;
	
	// периоды и ставки налога для поквартальных расчетов
	ДанныеПериодов = Новый ТаблицаЗначений;
	ДанныеПериодов.Колонки.Добавить("НомерКвартала", ОбщегоНазначения.ОписаниеТипаЧисло(1, 0, ДопустимыйЗнак.Неотрицательный));
	ДанныеПериодов.Колонки.Добавить("Период",        ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ДанныеПериодов.Колонки.Добавить("СтавкаНалога",  ОбщегоНазначения.ОписаниеТипаЧисло(5, 2, ДопустимыйЗнак.Неотрицательный));
	
	Если ПрименяетсяУСНДоходы Тогда
		// ставка налога общая для всей декларации
		СтавкаИзУП = УчетнаяПолитика.СтавкаНалогаУСН(ПараметрыОтчета.Организация, КонецПериода);
		Контейнер.Раздел21["П000210012003"] = СтавкаИзУП;
	КонецЕсли;
	
	Для НомерКвартала = 1 По 4 Цикл
		
		ДатаНачалаКвартала = НачалоКвартала(ДобавитьМесяц(НачалоПериода, (НомерКвартала-1)*3));
		СтрокаПериода = ДанныеПериодов.Добавить();
		СтрокаПериода.НомерКвартала = НомерКвартала;
		СтрокаПериода.Период        = ДатаНачалаКвартала;
		
		Если ПрименяетсяУСНДоходы Тогда
			СтрокаПериода.СтавкаНалога = Контейнер.Раздел21["П000210012003"];
		Иначе
			// ставки налога задаются для каждого из отчетных периодов
			ДатаОкончанияКвартала = КонецКвартала(ДобавитьМесяц(НачалоПериода, (НомерКвартала-1)*3));
			СтавкаИзУП = УчетнаяПолитика.СтавкаНалогаУСН(ПараметрыОтчета.Организация, ДатаОкончанияКвартала);
			ИмяЯчейки = "П000220026" + (НомерКвартала - 1) + "03";
			Контейнер.Раздел22[ИмяЯчейки] = СтавкаИзУП;
			СтрокаПериода.СтавкаНалога    = СтавкаИзУП;
		КонецЕсли;
		
	КонецЦикла;
	
	// показатели налоговой базы по данным ИБ
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",       НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",        КонецПериода);
	Запрос.УстановитьПараметр("КонецПериодаГраница", КонецПериодаГраница);
	Запрос.УстановитьПараметр("Организация",         ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДанныеПериодов",      ДанныеПериодов);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеПериодов.Период КАК Период,
	|	ДанныеПериодов.НомерКвартала
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	&ДанныеПериодов КАК ДанныеПериодов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходовОбороты.Период, КВАРТАЛ) КАК Период,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа7Оборот КАК Графа7, 
	|	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот КАК Графа5
	|ПОМЕСТИТЬ КнигаУчетаДоходовИРасходов
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачалоПериода, &КонецПериодаГраница, Квартал, Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.НомерКвартала,
	|	ВТ_Периоды.Период КАК Период,
	|	ЕСТЬNULL(КнигаУчетаДоходовИРасходов.Графа5, 0) КАК Доходы,
	|	ЕСТЬNULL(КнигаУчетаДоходовИРасходов.Графа7, 0) КАК Расходы
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|	ПО 
	|		ВТ_Периоды.Период = КнигаУчетаДоходовИРасходов.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерКвартала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(УменьшениеНалога.Ссылка.Дата, КВАРТАЛ) КАК Период,
	|	СУММА(УменьшениеНалога.ПФР) КАК ПФР,
	|	СУММА(УменьшениеНалога.ФСС) КАК ФСС,
	|	СУММА(УменьшениеНалога.ФОМС) КАК ФОМС,
	|	СУММА(УменьшениеНалога.ФСС_НС) КАК ФСС_НС,
	|	СУММА(УменьшениеНалога.Больничные) КАК Больничные,
	|	СУММА(УменьшениеНалога.ДобровольноеСтрахование) КАК ДобровольноеСтрахование
	|ПОМЕСТИТЬ УменьшениеНалога
	|ИЗ
	|	Документ.ЗаписьКУДиР.УменьшениеНалога КАК УменьшениеНалога
	|ГДЕ
	|	УменьшениеНалога.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И УменьшениеНалога.Ссылка.Организация = &Организация
	|	И УменьшениеНалога.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(УменьшениеНалога.Ссылка.Дата, КВАРТАЛ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|ВЫБРАТЬ
	|	ВТ_Периоды.НомерКвартала КАК НомерКвартала,
	|	ВТ_Периоды.Период,
	|	ЕСТЬNULL(УменьшениеНалога.ПФР, 0) КАК ПФР,
	|	ЕСТЬNULL(УменьшениеНалога.ФСС, 0) КАК ФСС,
	|	ЕСТЬNULL(УменьшениеНалога.ФОМС, 0) КАК ФОМС,
	|	ЕСТЬNULL(УменьшениеНалога.ФСС_НС, 0) КАК ФСС_НС,
	|	ЕСТЬNULL(УменьшениеНалога.Больничные, 0) КАК Больничные,
	|	ЕСТЬNULL(УменьшениеНалога.ДобровольноеСтрахование, 0) КАК ДобровольноеСтрахование
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		УменьшениеНалога КАК УменьшениеНалога
	|	ПО 
	|		ВТ_Периоды.Период = УменьшениеНалога.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерКвартала";
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапросаНалоговаяБаза = Запрос.ВыполнитьПакет();
	
	УбыткиПрошлыхЛет = Неопределено;
	Если НЕ ПрименяетсяУСНДоходы Тогда
		УбыткиПрошлыхЛет = ПеренесенныеУбыткиПрошлыхЛет(ПараметрыОтчета.Организация, НачалоПериода, КонецПериода);
	КонецЕсли;
	
	// заполнение показателей отчета
	
	ИтогоДоходы  = 0;
	ИтогоРасходы = 0;
	ИтогоРасходыУменьшающиеНалог = 0;
	
	ТаблицаДоходыРасходы = РезультатЗапросаНалоговаяБаза[2].Выгрузить();
	
	Если ПрименяетсяУСНДоходы Тогда // объект налогообложения "доходы"
		
		РазрядностьОкругления = РазрядностьОкругленияПоказателейПриРасчетеНалога(КонецПериода);
		
		ЗаполняемыйРаздел = Контейнер.Раздел21;
		
		КоэффМаксУменьшенияНалога = ?(ЭтоИПБезВыплатФизлицам, 1, 0.5);
		ЗаполняемыйРаздел["П000210010203"] = ?(ЭтоИПБезВыплатФизлицам, "2", "1");
		
		ТаблицаРасходыУменьшающиеНалог = РезультатЗапросаНалоговаяБаза[4].Выгрузить();
		
		Для каждого СтрокаПериода Из ДанныеПериодов Цикл
			
			ИдКвартала = Строка(СтрокаПериода.НомерКвартала - 1);
			
			СтрокаДоходов = ТаблицаДоходыРасходы[СтрокаПериода.НомерКвартала-1];
			ИтогоДоходы   = ИтогоДоходы + СтрокаДоходов.Доходы;
			
			СтрокаРасходовУменьшающихНалог = ТаблицаРасходыУменьшающиеНалог[СтрокаПериода.НомерКвартала-1];
			ИтогоРасходыУменьшающиеНалог   = ИтогоРасходыУменьшающиеНалог
				+ СтрокаРасходовУменьшающихНалог.ПФР + СтрокаРасходовУменьшающихНалог.ФОМС
				+?(ЭтоИПБезВыплатФизлицам, 0, СтрокаРасходовУменьшающихНалог.ФСС + СтрокаРасходовУменьшающихНалог.ФСС_НС
				+ СтрокаРасходовУменьшающихНалог.Больничные + СтрокаРасходовУменьшающихНалог.ДобровольноеСтрахование);
			
			НалогОтБазы = Окр(ИтогоДоходы*СтрокаПериода.СтавкаНалога/100, РазрядностьОкругления);
			УменьшениеНалога = Мин(Окр(НалогОтБазы*КоэффМаксУменьшенияНалога, РазрядностьОкругления), ИтогоРасходыУменьшающиеНалог);
			
			ЗаполняемыйРаздел["П000210011" + ИдКвартала + "03"] = ИтогоДоходы;
			ЗаполняемыйРаздел["П000210014" + ИдКвартала + "03"] = УменьшениеНалога;
			
		КонецЦикла;
		
	Иначе // объект налогообложения "доходы минус расходы"
		
		ЗаполняемыйРаздел = Контейнер.Раздел22;
		
		Для каждого СтрокаПериода Из ДанныеПериодов Цикл
			
			ИдКвартала = Строка(СтрокаПериода.НомерКвартала - 1);
			
			СтрокаДоходовРасходов = ТаблицаДоходыРасходы[СтрокаПериода.НомерКвартала-1];
			
			ИтогоДоходы  = ИтогоДоходы + СтрокаДоходовРасходов.Доходы;
			ИтогоРасходы = ИтогоРасходы + СтрокаДоходовРасходов.Расходы;
			
			// в последнем квартела года учтем перенесенные убытки прошлых лет
			Если СтрокаПериода.НомерКвартала = 4 Тогда
				ИтогоРасходы = ИтогоРасходы + УбыткиПрошлыхЛет.УбытокОтУплатыМинимальногоНалога;
				НалоговаяБаза  = ИтогоДоходы - ИтогоРасходы;
				УменьшениеНалоговойБазы = Макс(0, Мин(НалоговаяБаза, УбыткиПрошлыхЛет.ПеренесенныеУбытки));
				ЗаполняемыйРаздел["П000220023003"] = УменьшениеНалоговойБазы;
			КонецЕсли;
			
			ЗаполняемыйРаздел["П000220021" + ИдКвартала + "03"] = ИтогоДоходы;
			ЗаполняемыйРаздел["П000220022" + ИдКвартала + "03"] = ИтогоРасходы;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОтчетУСНФормаОтчета2015Кв1(ПараметрыОтчета, Контейнер) Экспорт

	// Замер длительности автозаполнения: начало
	ВремяНачалаОперации = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	Если НЕ УчетнаяПолитика.Существует(ПараметрыОтчета.Организация, ПараметрыОтчета.мДатаКонцаПериодаОтчета, Истина) Тогда
		Возврат;
	КонецЕсли;

	НачалоПериода       = НачалоГода(ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	КонецПериода        = КонецГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	КонецПериодаГраница = Новый Граница(КонецПериода, ВидГраницы.Включая);

	ПрименяетсяУСНДоходы = УчетнаяПолитика.ПрименяетсяУСНДоходы(ПараметрыОтчета.Организация, КонецПериода);
	
	// Необходимо учесть, что торговый сбор в 1 квартале уплачивается за квартал, относящийся к предыдущему налоговому периоду
	УменьшатьНалогНаТорговыйСбор = ПрименяетсяУСНДоходы
		И УчетнаяПолитика.ПлательщикТорговогоСбораЗаПериод(
			ПараметрыОтчета.Организация,
			ДобавитьМесяц(НачалоПериода, -12),
			КонецПериода);
	
	ИПИспользуетТрудНаемныхРаботников = Ложь;
	РегламентированнаяОтчетностьПереопределяемый.ПолучитьПризнакИспользованияИПТрудаНаемныхРаботников(ПараметрыОтчета.Организация, ИПИспользуетТрудНаемныхРаботников);
	ЭтоИПБезВыплатФизлицам = НЕ ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(ПараметрыОтчета.Организация) И НЕ ИПИспользуетТрудНаемныхРаботников;

	// периоды и ставки налога для поквартальных расчетов
	ДанныеПериодов = Новый ТаблицаЗначений;
	ДанныеПериодов.Колонки.Добавить("НомерКвартала", ОбщегоНазначения.ОписаниеТипаЧисло(1, 0, ДопустимыйЗнак.Неотрицательный));
	ДанныеПериодов.Колонки.Добавить("Период",        ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ДанныеПериодов.Колонки.Добавить("СтавкаНалога",  ОбщегоНазначения.ОписаниеТипаЧисло(5, 2, ДопустимыйЗнак.Неотрицательный));
	
	Для НомерКвартала = 1 По 4 Цикл
		
		ДатаНачалаКвартала = НачалоКвартала(ДобавитьМесяц(НачалоПериода, (НомерКвартала-1)*3));
		СтрокаПериода = ДанныеПериодов.Добавить();
		СтрокаПериода.НомерКвартала = НомерКвартала;
		СтрокаПериода.Период        = ДатаНачалаКвартала;
		
		// ставки налога задаются для каждого из отчетных периодов
		ДатаОкончанияКвартала = КонецКвартала(ДобавитьМесяц(НачалоПериода, (НомерКвартала-1)*3));
		СтавкаИзУП = УчетнаяПолитика.СтавкаНалогаУСН(ПараметрыОтчета.Организация, ДатаОкончанияКвартала);
		СтрокаПериода.СтавкаНалога = СтавкаИзУП;
		
		Если ПрименяетсяУСНДоходы Тогда
			ИмяЯчейки = "П002110013" + (НомерКвартала - 1) + "03";
			Контейнер.Раздел21[ИмяЯчейки] = СтавкаИзУП;
		Иначе
			ИмяЯчейки = "П000220026" + (НомерКвартала - 1) + "03";
			Контейнер.Раздел22[ИмяЯчейки] = СтавкаИзУП;
		КонецЕсли;
		
	КонецЦикла;
	
	// Показатели налоговой базы по данным ИБ
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",       НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",        КонецПериода);
	Запрос.УстановитьПараметр("КонецПериодаГраница", КонецПериодаГраница);
	Запрос.УстановитьПараметр("Организация",         ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("ДанныеПериодов",      ДанныеПериодов);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеПериодов.Период КАК Период,
	|	ДанныеПериодов.НомерКвартала
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	&ДанныеПериодов КАК ДанныеПериодов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходовОбороты.Период, КВАРТАЛ) КАК Период,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа7Оборот КАК Графа7, 
	|	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот КАК Графа5
	|ПОМЕСТИТЬ КнигаУчетаДоходовИРасходов
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачалоПериода, &КонецПериодаГраница, Квартал, Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.НомерКвартала,
	|	ВТ_Периоды.Период КАК Период,
	|	ЕСТЬNULL(КнигаУчетаДоходовИРасходов.Графа5, 0) КАК Доходы,
	|	ЕСТЬNULL(КнигаУчетаДоходовИРасходов.Графа7, 0) КАК Расходы
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|	ПО 
	|		ВТ_Периоды.Период = КнигаУчетаДоходовИРасходов.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерКвартала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(УменьшениеНалога.Ссылка.Дата, КВАРТАЛ) КАК Период,
	|	СУММА(УменьшениеНалога.ПФР) КАК ПФР,
	|	СУММА(УменьшениеНалога.ФСС) КАК ФСС,
	|	СУММА(УменьшениеНалога.ФОМС) КАК ФОМС,
	|	СУММА(УменьшениеНалога.ФСС_НС) КАК ФСС_НС,
	|	СУММА(УменьшениеНалога.Больничные) КАК Больничные,
	|	СУММА(УменьшениеНалога.ДобровольноеСтрахование) КАК ДобровольноеСтрахование
	|ПОМЕСТИТЬ УменьшениеНалога
	|ИЗ
	|	Документ.ЗаписьКУДиР.УменьшениеНалога КАК УменьшениеНалога
	|ГДЕ
	|	УменьшениеНалога.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И УменьшениеНалога.Ссылка.Организация = &Организация
	|	И УменьшениеНалога.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(УменьшениеНалога.Ссылка.Дата, КВАРТАЛ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|ВЫБРАТЬ
	|	ВТ_Периоды.НомерКвартала КАК НомерКвартала,
	|	ВТ_Периоды.Период,
	|	ЕСТЬNULL(УменьшениеНалога.ПФР, 0) КАК ПФР,
	|	ЕСТЬNULL(УменьшениеНалога.ФСС, 0) КАК ФСС,
	|	ЕСТЬNULL(УменьшениеНалога.ФОМС, 0) КАК ФОМС,
	|	ЕСТЬNULL(УменьшениеНалога.ФСС_НС, 0) КАК ФСС_НС,
	|	ЕСТЬNULL(УменьшениеНалога.Больничные, 0) КАК Больничные,
	|	ЕСТЬNULL(УменьшениеНалога.ДобровольноеСтрахование, 0) КАК ДобровольноеСтрахование
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		УменьшениеНалога КАК УменьшениеНалога
	|	ПО 
	|		ВТ_Периоды.Период = УменьшениеНалога.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерКвартала";
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапросаНалоговаяБаза = Запрос.ВыполнитьПакет();

	УбыткиПрошлыхЛет = Неопределено;
	Если НЕ ПрименяетсяУСНДоходы Тогда
		УбыткиПрошлыхЛет = ПеренесенныеУбыткиПрошлыхЛет(ПараметрыОтчета.Организация, НачалоПериода, КонецПериода);
	КонецЕсли;
	
	УплаченныйТорговыйСбор = Неопределено;
	Если УменьшатьНалогНаТорговыйСбор Тогда
		УплаченныйТорговыйСбор = СведенияОбУплатеТорговогоСбораПоКварталамНарастающимИтогом(
			ПараметрыОтчета.Организация,
			НачалоПериода,
			КонецПериода);
	КонецЕсли;
	
	// заполнение показателей отчета
	
	ИтогоДоходы  = 0;
	ИтогоРасходы = 0;
	ИтогоРасходыУменьшающиеНалог = 0;
	
	ИтогоДоходыТС                  = 0;
	ИтогоРасходыУменьшающиеНалогТС = 0;
	
	ТаблицаДоходыРасходы = РезультатЗапросаНалоговаяБаза[2].Выгрузить();
	
	Если ПрименяетсяУСНДоходы Тогда // объект налогообложения "доходы"
		
		ЗаполняемыйРаздел = Контейнер.Раздел21;
		
		КоэффМаксУменьшенияНалога = ?(ЭтоИПБезВыплатФизлицам, 1, 0.5);
		ЗаполняемыйРаздел["П002110010203"] = ?(ЭтоИПБезВыплатФизлицам, "2", "1");
		
		ТаблицаРасходыУменьшающиеНалог = РезультатЗапросаНалоговаяБаза[4].Выгрузить();
				
		Для каждого СтрокаПериода Из ДанныеПериодов Цикл
			
			ИдКвартала = Строка(СтрокаПериода.НомерКвартала - 1);
			
			СтрокаДоходов = ТаблицаДоходыРасходы[СтрокаПериода.НомерКвартала-1];
			ИтогоДоходы   = ИтогоДоходы + СтрокаДоходов.Доходы;
			
			СтрокаРасходовУменьшающихНалог = ТаблицаРасходыУменьшающиеНалог[СтрокаПериода.НомерКвартала-1];
			ИтогоРасходыУменьшающиеНалог   = ИтогоРасходыУменьшающиеНалог
				+ СтрокаРасходовУменьшающихНалог.ПФР + СтрокаРасходовУменьшающихНалог.ФОМС
				+?(ЭтоИПБезВыплатФизлицам, 0, СтрокаРасходовУменьшающихНалог.ФСС + СтрокаРасходовУменьшающихНалог.ФСС_НС
					+ СтрокаРасходовУменьшающихНалог.Больничные + СтрокаРасходовУменьшающихНалог.ДобровольноеСтрахование);
			
			НалоговаяБаза    = Окр(ИтогоДоходы, 0);
			НалогОтБазы      = Окр(НалоговаяБаза*СтрокаПериода.СтавкаНалога/100, 0);
			УменьшениеНалога = Мин(Окр(НалогОтБазы*КоэффМаксУменьшенияНалога, 0), ИтогоРасходыУменьшающиеНалог);
			
			// Плательщики торгового сбора могут уменьшить налог на уплаченный торговый сбор.
			// Уменьшение налога в соответствии с п. 8 статьи 346.21 НК определяется в рамках показателей по деятельности на торговом сборе.
			// В соответствии письмом ФНС от 14 августа 2015 г. N ГД-4-3/14386@ суммы вычитаемого из налога торгового сбора добавляются к строкам 140-143.
			Если УменьшатьНалогНаТорговыйСбор Тогда
				
				СтрокаУплаченногоТорговогоСбора  = УплаченныйТорговыйСбор[СтрокаПериода.НомерКвартала - 1];
				
				ТорговыйСборУплаченоНачислено = СтрокаУплаченногоТорговогоСбора.НачисленоУплаченоСНачалаГода;
				
				ЗаполняемыйРаздел["П002120015" + ИдКвартала + "03"] = ТорговыйСборУплаченоНачислено;
				
			КонецЕсли;
			
			ЗаполняемыйРаздел["П002110011" + ИдКвартала + "03"] = ИтогоДоходы;
			ЗаполняемыйРаздел["П002110014" + ИдКвартала + "03"] = УменьшениеНалога;
			
		КонецЦикла;
		
	Иначе // объект налогообложения "доходы минус расходы"
		
		ЗаполняемыйРаздел = Контейнер.Раздел22;
		
		Для каждого СтрокаПериода Из ДанныеПериодов Цикл
			
			ИдКвартала = Строка(СтрокаПериода.НомерКвартала - 1);
			
			СтрокаДоходовРасходов = ТаблицаДоходыРасходы[СтрокаПериода.НомерКвартала-1];
		
			ИтогоДоходы  = ИтогоДоходы + СтрокаДоходовРасходов.Доходы;
			ИтогоРасходы = ИтогоРасходы + СтрокаДоходовРасходов.Расходы;
			
			// в последнем квартела года учтем перенесенные убытки прошлых лет
			Если СтрокаПериода.НомерКвартала = 4 Тогда
				ИтогоРасходы = ИтогоРасходы + УбыткиПрошлыхЛет.УбытокОтУплатыМинимальногоНалога;
				НалоговаяБаза  = ИтогоДоходы - ИтогоРасходы;
				УменьшениеНалоговойБазы = Макс(0, Мин(НалоговаяБаза, УбыткиПрошлыхЛет.ПеренесенныеУбытки));
				ЗаполняемыйРаздел["П000220023003"] = УменьшениеНалоговойБазы;
			КонецЕсли;
			
			ЗаполняемыйРаздел["П000220021" + ИдКвартала + "03"] = ИтогоДоходы;
			ЗаполняемыйРаздел["П000220022" + ИдКвартала + "03"] = ИтогоРасходы;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Замер длительности автозаполнения: окончание
	ВремяОкончанияОперации = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Длительность = ВремяОкончанияОперации - ВремяНачалаОперации;
	ИмяСобытия = СтрШаблон(
		НСтр("ru = 'Заполнение регламентированных отчетов.Декларация по УСН за %1 год'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), // строка записывается в ИБ),
		Формат(Год(КонецПериода), "ЧГ=0"));
	
	ЗаписьЖурналаРегистрации(ИмяСобытия,
							 УровеньЖурналаРегистрации.Информация,
							 Метаданные.Отчеты.РегламентированныйОтчетУСН.Формы.ФормаОтчета2014Кв1,
							 ,
							 СтрШаблон(НСтр("ru = 'Результат операции (%1 мс)'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), Длительность),
							 РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
	
КонецПроцедуры

#КонецОбласти

#Область НачислениеНалога

// Процедура, вызывающая регламентную операцию по начислению налога УСН.
// Параметры:
//	Параметры - Структура:
//					КонецПериода - дата, по которую необходимо начислить налог УСН;
//					Организация - СправочникСсылка.Организация - организация, для которой необходимо начислить налог УСН;
//	АдресХранилища - строка.
Процедура НачислитьНалогУСН(Параметры, АдресХранилища) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Отказ = Ложь;
	
	Операция = Перечисления.ОперацииЗакрытияМесяца.РасчетНалогаУСН;
	ОперацииДляВыполнения = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Перечисления.ТипыРегламентныхОпераций.РасчетНалогаУСН);
	
	НомерЗадания = ЗакрытиеМесяцаУТВызовСервера.УвеличитьНомерЗадания();
	
	Если НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		НачатьТранзакцию();
		ЗакрытиеМесяцаУТВызовСервера.ЗаблокироватьРегистрЗаданий(НомерЗадания, Параметры.Организация, Операция);
		ДанныеКРасчетуНалогаЗаМесяц = ЗакрытиеМесяцаУТВызовСервера.ЗаданияКРасчетуЗаМесяц(
			НачалоКвартала(Параметры.КонецПериода), КонецКвартала(Параметры.КонецПериода), НомерЗадания, Параметры.Организация, Операция);
		ЗафиксироватьТранзакцию();
	Иначе
		ДанныеКРасчетуНалогаЗаМесяц = ЗакрытиеМесяцаУТВызовСервера.ЗаданияКРасчетуЗаМесяц(
			НачалоКвартала(Параметры.КонецПериода), КонецКвартала(Параметры.КонецПериода), НомерЗадания, Параметры.Организация, Операция);
	КонецЕсли;
	
	Документы.РегламентнаяОперация.РассчитатьРегламентныеОперации(Параметры.КонецПериода, ОперацииДляВыполнения, Параметры.Организация, Отказ);
	
	Если Отказ Тогда
		ВызватьИсключение(НСтр("ru = 'Начисление налога по УСН не выполнено (см. журнал регистрации).'"));
	Иначе
		Если НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
			НачатьТранзакцию();
			ЗакрытиеМесяцаУТВызовСервера.ЗаблокироватьРегистрЗаданий(НомерЗадания, Параметры.Организация, Операция);
			ЗакрытиеМесяцаУТВызовСервера.ЗафиксироватьРасчет(НачалоКвартала(Параметры.КонецПериода), КонецКвартала(Параметры.КонецПериода),
				(КонецКвартала(Параметры.КонецПериода) + 1), НомерЗадания, Операция, ДанныеКРасчетуНалогаЗаМесяц);
			ЗафиксироватьТранзакцию();
		Иначе
			ЗакрытиеМесяцаУТВызовСервера.ЗафиксироватьРасчет(НачалоКвартала(Параметры.КонецПериода), КонецКвартала(Параметры.КонецПериода),
				(КонецКвартала(Параметры.КонецПериода) + 1), НомерЗадания, Операция, ДанныеКРасчетуНалогаЗаМесяц);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Функция вызывается из модуля документа РегламентнаяОперация, служит для подготовки таблиц для записи в движения документа.
// Параметры:
//	ТаблицаРеквизитов - ТаблицаЗначений (см. модуль менеджера Документы.РегламентнаяОперация.ПодготовитьПараметрыНачисленияНалогаУСН);
// Возвращаемое значение:
//	Структура
//		ТаблицаПроводок - таблица значений - таблица, соответствующая будущим записям регистра бухгалтерии "Хозрасчетный";
//		ТаблицаСправкиРасчета - таблица значений - таблица, соответствующая будущим записям регистра сведений "РасчетНалогаУСН".
Функция ПодготовитьТаблицыНачисленияНалогаУСН(ТаблицаРеквизитов) Экспорт
	
	СтруктураТаблиц = Новый Структура();
	СтруктураТаблиц.Вставить("ТаблицаПроводок", Неопределено);
	СтруктураТаблиц.Вставить("ТаблицаСправкиРасчета", Неопределено);
	
	Параметры = ПодготовитьПараметрыТаблицыНачисленияНалогаУСН(ТаблицаРеквизитов);
	Если Параметры.Реквизиты.Количество() = 0 Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	Реквизиты = Параметры.Реквизиты[0];
	Если НЕ Реквизиты.ПрименяетсяУСН Тогда
		Возврат СтруктураТаблиц;
	КонецЕсли;
	
	ТаблицаПроводок  = ПустаяТаблицаОтраженияНалогаУСН();
	ТаблицаСправкиРасчета = ПустаяТаблицаСправкаРасчетНалогаУСН();
	
	Если Реквизиты.ПрименяетсяУСНДоходы Тогда
		РассчитатьНалогУСНОбъектДоходы(Реквизиты, ТаблицаПроводок, ТаблицаСправкиРасчета);
	Иначе
		РассчитатьНалогУСНОбъектДоходыМинусРасходы(Реквизиты, ТаблицаПроводок, ТаблицаСправкиРасчета);
	КонецЕсли;
	
	ТаблицыУпрРегистров = РасходыПоНалогу(Реквизиты, ТаблицаСправкиРасчета);
	
	СтруктураТаблиц.Вставить("ТаблицаПроводок", ТаблицаПроводок);
	СтруктураТаблиц.Вставить("ТаблицаСправкиРасчета", ТаблицаСправкиРасчета);
	СтруктураТаблиц.Вставить("ТаблицаПрочиеАктивыПассивы", ТаблицыУпрРегистров.ПрочиеАктивыПассивы);
	СтруктураТаблиц.Вставить("ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы", ТаблицыУпрРегистров.ДвиженияДоходыРасходыПрочиеАктивыПассивы);
	
	Возврат СтруктураТаблиц;
	
КонецФункции

Функция ПодготовитьПараметрыТаблицыНачисленияНалогаУСН(ТаблицаРеквизитов)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"								// <Дата> - период движений - дата документа
		+ "Регистратор,"						// <ДокументСсылка.РегламентнаяОперация> - документ-регистратор движений
		+ "Организация,"						// <СправочникСсылка.Организации> - организация
		+ "НачалоГода,"							// <Дата> - дата начала года
		+ "КонДата,"							// <Дата> - конец текущего квартала
		+ "СтавкаНалогаУСН,"					// <Число, 5, 2> - налоговая ставка
		+ "ПрименяетсяУСН,"						// <Булево> - признак применения УСН
		+ "ПрименяетсяУСНДоходы,"				// <Булево> - признак применения УСН с объектом налогообложения "Доходы"
		+ "ПрименяетсяУСНДоходыМинусРасходы,"	// <Булево> - признак применения УСН с объектом "Доходы минус расходы"
		+ "ЭтоНачалоГода,"						// <Булево> - признак, что текущее начисление первое в году
		+ "ЭтоКонецГода";						// <Булево> - признак, что текущее начисление последнее в году
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизитов, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

Процедура РассчитатьНалогУСНОбъектДоходы(Реквизиты, ТаблицаПроводок, ТаблицаСправкиРасчета)
	
	СчетНачисленияНалога = ПланыСчетов.Хозрасчетный.ЕНприУСН;			  // Кт 68.12
	СчетОтраженияНалога  = ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД; // Дт 99.01.1
	
	РазрядностьОкругленияПоказателей = РазрядностьОкругленияПоказателейПриРасчетеНалога(Реквизиты.НачалоГода);
	
	ИндивидуальныйПредприниматель = НЕ ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Реквизиты.Организация);
	
	ИПИспользуетТрудНаемныхРаботников = Ложь;
	РегламентированнаяОтчетностьПереопределяемый.ПолучитьПризнакИспользованияИПТрудаНаемныхРаботников(Реквизиты.Организация, ИПИспользуетТрудНаемныхРаботников);
	ЭтоИПБезВыплатФизлицам = НЕ ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Реквизиты.Организация) И НЕ ИПИспользуетТрудНаемныхРаботников;
	
	ЕстьНаемныеРаботники = НЕ ЭтоИПБезВыплатФизлицам;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",          Реквизиты.Организация);
	Запрос.УстановитьПараметр("НачалоПериода",        Реквизиты.НачалоГода);
	Запрос.УстановитьПараметр("КонецПериода",         Реквизиты.КонДата);
	Запрос.УстановитьПараметр("ЕстьНаемныеРаботники", ЕстьНаемныеРаботники);
	
	Если НЕ Реквизиты.ЭтоНачалоГода Тогда
		
		Запрос.УстановитьПараметр("КонецПредыдущегоКвартала", Новый Граница(КонецКвартала(ДобавитьМесяц(Реквизиты.КонДата, -3)), ВидГраницы.Включая));
		
		ВидыПлатежейВБюджет = Новый Массив;
		ВидыПлатежейВБюджет.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Налог);
		ВидыПлатежейВБюджет.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НалогАкт);
		ВидыПлатежейВБюджет.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НалогСам);
		Запрос.УстановитьПараметр("ВидыПлатежейВГосБюджет", ВидыПлатежейВБюджет);
		
		Запрос.УстановитьПараметр("СчетНачисленияНалога", СчетНачисленияНалога);
		Запрос.УстановитьПараметр("СчетОтраженияНалога",  СчетОтраженияНалога);
		
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот КАК Доходы
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачалоПериода, &КонецПериода, , Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(УменьшениеНалога.ПФР + УменьшениеНалога.ФОМС + ВЫБОР
	|		КОГДА &ЕстьНаемныеРаботники
	|			ТОГДА УменьшениеНалога.ФСС + УменьшениеНалога.ФСС_НС + УменьшениеНалога.Больничные + УменьшениеНалога.ДобровольноеСтрахование
	|		ИНАЧЕ 0
	|	КОНЕЦ), 0) КАК РасходыУменьшающиеНалог
	|ИЗ
	|	Документ.ЗаписьКУДиР.УменьшениеНалога КАК УменьшениеНалога
	|ГДЕ
	|	УменьшениеНалога.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И УменьшениеНалога.Ссылка.Организация = &Организация
	|	И УменьшениеНалога.Ссылка.Проведен
	|"
	;
	
	Если НЕ Реквизиты.ЭтоНачалоГода Тогда 
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0) КАК ИсчисленоЗаПредыдущиеПериоды
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПредыдущегоКвартала,
		|			,
		|			СчетДт = &СчетОтраженияНалога,
		|			,
		|			СчетКт = &СчетНачисленияНалога,
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
		|			Организация = &Организация
		|				И СубконтоКт1 В (&ВидыПлатежейВГосБюджет)) КАК ХозрасчетныйОборотыДтКт"
		;
		Запрос.Текст = Запрос.Текст + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() + ТекстЗапроса;
	КонецЕсли;
	
	Результат = Запрос.ВыполнитьПакет();
	
	// расчет налога
	Доходы						 = 0;
	РасходыУменьшающиеНалог		 = 0;
	ИсчисленоЗаПредыдущиеПериоды = 0;
	МаксПроцентУменьшенияНалога  = ?(ЕстьНаемныеРаботники, 50, 100);
	
	ВыборкаНалоговаяБаза = Результат[0].Выбрать();
	Если ВыборкаНалоговаяБаза.Следующий() Тогда
		Доходы = ?(ЗначениеЗаполнено(ВыборкаНалоговаяБаза.Доходы), ВыборкаНалоговаяБаза.Доходы, 0);
		Доходы = Окр(Доходы, РазрядностьОкругленияПоказателей);
	КонецЕсли;
	
	ВыборкаУменьшениеНалога = Результат[1].Выбрать();
	Если ВыборкаУменьшениеНалога.Следующий() Тогда
		РасходыУменьшающиеНалог = ВыборкаУменьшениеНалога.РасходыУменьшающиеНалог;
		РасходыУменьшающиеНалог = Окр(РасходыУменьшающиеНалог, РазрядностьОкругленияПоказателей);
	КонецЕсли;
	
	Если НЕ Реквизиты.ЭтоНачалоГода Тогда
		ВыборкаПредыдущиеПериоды = Результат[2].Выбрать();
		Если ВыборкаПредыдущиеПериоды.Следующий() Тогда
			ИсчисленоЗаПредыдущиеПериоды = ВыборкаПредыдущиеПериоды.ИсчисленоЗаПредыдущиеПериоды;
		КонецЕсли;
	КонецЕсли;
	
	НалогСНачалаГодаВсего = Окр(Доходы * Реквизиты.СтавкаНалогаУСН / 100, РазрядностьОкругленияПоказателей);
	УменьшениеНалога = Мин(РасходыУменьшающиеНалог, Окр(НалогСНачалаГодаВсего * МаксПроцентУменьшенияНалога / 100, РазрядностьОкругленияПоказателей));
	
	НалогСначалаГодаИсчисленный = НалогСНачалаГодаВсего - УменьшениеНалога;
	НалогКУплате = Окр(Макс(НалогСначалаГодаИсчисленный - ИсчисленоЗаПредыдущиеПериоды, 0), 0);
	
	// данные для формирования проводки по начислению налога
	// проводку формируем только при ненулевом налоге
	Если НалогКУплате <> 0 Тогда
		
		СтрокаПроводки = ТаблицаПроводок.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПроводки, Реквизиты);
		
		СтрокаПроводки.СчетДт					= СчетОтраженияНалога;
		СтрокаПроводки.СчетКт					= СчетНачисленияНалога;
		СтрокаПроводки.ПрибылиИУбытки			= Перечисления.ПрибылиИУбытки.НалогНаПрибыль;
		СтрокаПроводки.ВидыПлатежейВГосБюджет	= Перечисления.ВидыПлатежейВГосБюджет.Налог;
		СтрокаПроводки.Сумма					= НалогКУплате;
		СтрокаПроводки.Содержание				= СодержаниеПроводкиНачислениеНалогаУСН(Реквизиты, НалогКУплате);
		
	КонецЕсли;
	
	// данные для справки-расчета
	СтрокаСправки = ТаблицаСправкиРасчета.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаСправки, Реквизиты);
	
	СтрокаСправки.ПериодРасчета				= Реквизиты.Период;
	СтрокаСправки.ОбъектНалогообложения		= Перечисления.ОбъектыНалогообложенияПоУСН.Доходы;
	СтрокаСправки.Доходы					= Доходы;
	СтрокаСправки.НалоговаяБаза				= Доходы;
	СтрокаСправки.НалогВсего				= НалогСНачалаГодаВсего;
	СтрокаСправки.РасходыУменьшающиеНалог	= РасходыУменьшающиеНалог;
	СтрокаСправки.ПроцентУменьшенияНалога	= МаксПроцентУменьшенияНалога;
	СтрокаСправки.УменьшениеНалогаФакт		= УменьшениеНалога;
	СтрокаСправки.НалогИсчисленныйВсего		= НалогСначалаГодаИсчисленный;
	СтрокаСправки.АвансовыеПлатежи			= ИсчисленоЗаПредыдущиеПериоды;
	СтрокаСправки.НалогКУплате				= НалогКУплате;
	
КонецПроцедуры

Процедура РассчитатьНалогУСНОбъектДоходыМинусРасходы(Реквизиты, ТаблицаПроводок, ТаблицаСправкаРасчет)
	
	СчетОтраженияНалога  = ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеЕНВД; // Дт 99.01.1
	СчетНачисленияНалога = ПланыСчетов.Хозрасчетный.ЕНприУСН;			  // Кт 68.12
	
	РазрядностьОкругленияПоказателей = РазрядностьОкругленияПоказателейПриРасчетеНалога(Реквизиты.НачалоГода);
	
	НалоговыеКаникулы = НЕ ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(Реквизиты.Организация)
		И УчетнаяПолитикаПереопределяемый.НалоговыеКаникулыУСН(Реквизиты.Организация, Реквизиты.КонДата);
	
	Доходы						 = 0;
	Расходы						 = 0;
	ИсчисленоЗаПредыдущиеПериоды = 0;
	
	ПеренесенныеУбытки				 = 0;
	УбытокОтУплатыМинимальногоНалога = 0;
	УчтенныеУбытки					 = 0;
	
	МинимальныйНалог	= 0;
	ЭтоМинимальныйНалог = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",   Реквизиты.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", Реквизиты.НачалоГода);
	Запрос.УстановитьПараметр("КонецПериода",  Реквизиты.КонДата);
	
	Если НЕ Реквизиты.ЭтоНачалоГода Тогда
		
		Запрос.УстановитьПараметр("КонецПредыдущегоКвартала", Новый Граница(КонецКвартала(ДобавитьМесяц(Реквизиты.КонДата, -3)), ВидГраницы.Включая));
		
		ВидыПлатежейВБюджет = Новый Массив;
		ВидыПлатежейВБюджет.Добавить(Перечисления.ВидыПлатежейВГосБюджет.Налог);
		ВидыПлатежейВБюджет.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НалогАкт);
		ВидыПлатежейВБюджет.Добавить(Перечисления.ВидыПлатежейВГосБюджет.НалогСам);
		Запрос.УстановитьПараметр("ВидыПлатежейВГосБюджет", ВидыПлатежейВБюджет);
		
		Запрос.УстановитьПараметр("СчетНачисленияНалога", СчетНачисленияНалога);
		Запрос.УстановитьПараметр("СчетОтраженияНалога",  СчетОтраженияНалога);
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот КАК Доходы,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа7Оборот КАК Расходы
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачалоПериода, &КонецПериода, , Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОбороты"
	;
	
	Если НЕ Реквизиты.ЭтоНачалоГода Тогда 
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ХозрасчетныйОборотыДтКт.СуммаОборот, 0) КАК ИсчисленоЗаПредыдущиеПериоды
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			&НачалоПериода,
		|			&КонецПредыдущегоКвартала,
		|			,
		|			СчетДт = &СчетОтраженияНалога,
		|			,
		|			СчетКт = &СчетНачисленияНалога,
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
		|			Организация = &Организация
		|				И СубконтоКт1 В (&ВидыПлатежейВГосБюджет)) КАК ХозрасчетныйОборотыДтКт";
		Запрос.Текст = Запрос.Текст	+ ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета() + ТекстЗапроса;		
	КонецЕсли;
	
	Результат = Запрос.ВыполнитьПакет();
	
	// Перенесенные на текущий период убытки прошлых лет учитываются только при расчете налога по итогам года
	Если Реквизиты.ЭтоКонецГода Тогда
		Убытки = ПеренесенныеУбыткиПрошлыхЛет(Реквизиты.Организация, Реквизиты.НачалоГода, Реквизиты.КонДата);
		ПеренесенныеУбытки = Окр(Убытки.ПеренесенныеУбытки, РазрядностьОкругленияПоказателей);
		УбытокОтУплатыМинимальногоНалога = Убытки.УбытокОтУплатыМинимальногоНалога;
	КонецЕсли;
	
	// Расчет налога
	
	ВыборкаНалоговаяБаза = Результат[0].Выбрать();
	Если ВыборкаНалоговаяБаза.Следующий() Тогда
		
		Доходы  = ?(ЗначениеЗаполнено(ВыборкаНалоговаяБаза.Доходы), ВыборкаНалоговаяБаза.Доходы, 0);
		Доходы  = Окр(Доходы, РазрядностьОкругленияПоказателей);
		
		Расходы = ?(ЗначениеЗаполнено(ВыборкаНалоговаяБаза.Расходы), ВыборкаНалоговаяБаза.Расходы, 0);
		// Округление расходов производится после учета в их составе убытка от уплаты минимального налога
		
	КонецЕсли;
	
	Если НЕ Реквизиты.ЭтоНачалоГода Тогда
		ВыборкаПредыдущиеПериоды = Результат[1].Выбрать();
		Если ВыборкаПредыдущиеПериоды.Следующий() Тогда
			ИсчисленоЗаПредыдущиеПериоды = ВыборкаПредыдущиеПериоды.ИсчисленоЗаПредыдущиеПериоды;
		КонецЕсли;
	КонецЕсли;
	
	// Увеличиваем расходы на сумму разницы между уплаченным в прошлых периодах минимальным налогом и рассчитанным в общем порядке
	Расходы = Окр(Расходы + УбытокОтУплатыМинимальногоНалога, РазрядностьОкругленияПоказателей);
	
	НалоговаяБаза  = Макс(Доходы - Расходы, 0);
	Если Реквизиты.ЭтоКонецГода Тогда
		УчтенныеУбытки = Мин(НалоговаяБаза, ПеренесенныеУбытки);
		НалоговаяБаза  = НалоговаяБаза - УчтенныеУбытки;
		МинимальныйНалог = ?(НалоговыеКаникулы,
			0,                     // для ИП на налоговых каникулах минимальный налог не рассчитывается
			Окр(Доходы / 100, 0)); // 1% от доходов за год
	КонецЕсли;
	
	НалогСНачалаГода = Окр(НалоговаяБаза * Реквизиты.СтавкаНалогаУСН / 100, 0);
	НалогКУплате     = Окр(НалогСначалаГода - ИсчисленоЗаПредыдущиеПериоды, 0);
	
	// Если налог, рассчитанный в общем порядке по итогам года, меньше минимального налога
	// - требуется исчислить минимальный налог (1% от доходов).
	// Минимальный налог уменьшается на сумму исчисленных авансовых платежей за 9 месяцев (с учетом сумм "к уменьшению")
	// и уплачивается только в случае, если получившаяся разница положительная.
	Если Реквизиты.ЭтоКонецГода И МинимальныйНалог > НалогСНачалаГода Тогда
		НалогКУплате = Окр(МинимальныйНалог - ИсчисленоЗаПредыдущиеПериоды, 0);
		ЭтоМинимальныйНалог = НалогКУплате > 0;
	КонецЕсли;
	
	// Данные для проводки по начислению налога
	// (проводку формируем только при ненулевом налоге)
	Если НалогКУплате <> 0 Тогда
		
		СтрокаПроводки = ТаблицаПроводок.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПроводки, Реквизиты);
		
		СтрокаПроводки.СчетДт					= СчетОтраженияНалога;
		СтрокаПроводки.СчетКт					= СчетНачисленияНалога;
		СтрокаПроводки.ПрибылиИУбытки			= Перечисления.ПрибылиИУбытки.НалогНаПрибыль;
		СтрокаПроводки.ВидыПлатежейВГосБюджет	= Перечисления.ВидыПлатежейВГосБюджет.Налог;
		СтрокаПроводки.Сумма					= НалогКУплате;
		СтрокаПроводки.Содержание				= СодержаниеПроводкиНачислениеНалогаУСН(Реквизиты, НалогКУплате, ЭтоМинимальныйНалог);
		
	КонецЕсли;
	
	// Данные для справки-расчета
	СтрокаСправки = ТаблицаСправкаРасчет.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаСправки, Реквизиты);
	
	СтрокаСправки.ПериодРасчета			= Реквизиты.Период;
	СтрокаСправки.ОбъектНалогообложения	= Перечисления.ОбъектыНалогообложенияПоУСН.ДоходыМинусРасходы;
	СтрокаСправки.Доходы				= Доходы;
	СтрокаСправки.Расходы				= Расходы;
	СтрокаСправки.ПеренесенныеУбытки	= УчтенныеУбытки;
	СтрокаСправки.НалоговаяБаза			= НалоговаяБаза;
	СтрокаСправки.НалогВсего			= НалогСНачалаГода;
	СтрокаСправки.НалогИсчисленныйВсего	= НалогСНачалаГода;
	СтрокаСправки.МинимальныйНалог		= МинимальныйНалог;
	СтрокаСправки.АвансовыеПлатежи		= ИсчисленоЗаПредыдущиеПериоды;
	СтрокаСправки.НалогКУплате			= НалогКУплате;
	
КонецПроцедуры

Функция ПустаяТаблицаОтраженияНалогаУСН()
	
	ПустаяТаблица = Новый ТаблицаЗначений;
	
	ПустаяТаблица.Колонки.Добавить("Период",
	ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ПустаяТаблица.Колонки.Добавить("Организация",            Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ПустаяТаблица.Колонки.Добавить("СчетДт",                 Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ПустаяТаблица.Колонки.Добавить("СчетКт",                 Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ПустаяТаблица.Колонки.Добавить("ПрибылиИУбытки",         Новый ОписаниеТипов("ПеречислениеСсылка.ПрибылиИУбытки"));
	ПустаяТаблица.Колонки.Добавить("ВидыПлатежейВГосБюджет", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыПлатежейВГосБюджет"));
	ПустаяТаблица.Колонки.Добавить("Сумма",					 ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	ПустаяТаблица.Колонки.Добавить("Содержание",             ОбщегоНазначения.ОписаниеТипаСтрока(150));
	
	Возврат ПустаяТаблица;
	
КонецФункции

Функция ПустаяТаблицаСправкаРасчетНалогаУСН()
	
	ПустаяТаблица = Новый ТаблицаЗначений;
	
	ПустаяТаблица.Колонки.Добавить("ПериодРасчета",			  ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	ПустаяТаблица.Колонки.Добавить("Организация",			  Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ПустаяТаблица.Колонки.Добавить("ОбъектНалогообложения",	  Новый ОписаниеТипов("ПеречислениеСсылка.ОбъектыНалогообложенияПоУСН"));
	ПустаяТаблица.Колонки.Добавить("Доходы",				  ОбщегоНазначения.ОписаниеТипаЧисло(15, 2, ДопустимыйЗнак.Любой));
	ПустаяТаблица.Колонки.Добавить("Расходы",				  ОбщегоНазначения.ОписаниеТипаЧисло(15, 2, ДопустимыйЗнак.Любой));
	ПустаяТаблица.Колонки.Добавить("ПеренесенныеУбытки",	  ОбщегоНазначения.ОписаниеТипаЧисло(15, 2, ДопустимыйЗнак.Неотрицательный));
	ПустаяТаблица.Колонки.Добавить("НалоговаяБаза",			  ОбщегоНазначения.ОписаниеТипаЧисло(15, 2, ДопустимыйЗнак.Неотрицательный));
	ПустаяТаблица.Колонки.Добавить("СтавкаНалогаУСН",		  ОбщегоНазначения.ОписаниеТипаЧисло(5, 2, ДопустимыйЗнак.Неотрицательный));
	ПустаяТаблица.Колонки.Добавить("НалогВсего",			  ОбщегоНазначения.ОписаниеТипаЧисло(15, 2, ДопустимыйЗнак.Неотрицательный));
	ПустаяТаблица.Колонки.Добавить("РасходыУменьшающиеНалог", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2, ДопустимыйЗнак.Неотрицательный));
	ПустаяТаблица.Колонки.Добавить("ПроцентУменьшенияНалога", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0, ДопустимыйЗнак.Неотрицательный));
	ПустаяТаблица.Колонки.Добавить("УменьшениеНалогаФакт",	  ОбщегоНазначения.ОписаниеТипаЧисло(15, 2, ДопустимыйЗнак.Неотрицательный));
	ПустаяТаблица.Колонки.Добавить("НалогИсчисленныйВсего",	  ОбщегоНазначения.ОписаниеТипаЧисло(15, 2, ДопустимыйЗнак.Неотрицательный));
	ПустаяТаблица.Колонки.Добавить("МинимальныйНалог",		  ОбщегоНазначения.ОписаниеТипаЧисло(15, 2, ДопустимыйЗнак.Неотрицательный));
	ПустаяТаблица.Колонки.Добавить("АвансовыеПлатежи",		  ОбщегоНазначения.ОписаниеТипаЧисло(15, 2, ДопустимыйЗнак.Неотрицательный));
	ПустаяТаблица.Колонки.Добавить("НалогКУплате",			  ОбщегоНазначения.ОписаниеТипаЧисло(15, 2, ДопустимыйЗнак.Неотрицательный));
	
	Возврат ПустаяТаблица;
	
КонецФункции

Функция СодержаниеПроводкиНачислениеНалогаУСН(Реквизиты, НалогКУплате = 0, ЭтоМинимальныйНалог = Ложь)
	
	Содержание = "";
	
	ПредставлениеПериода = ?(Реквизиты.ЭтоКонецГода,
		ПредставлениеПериода(Реквизиты.НачалоГода, Реквизиты.КонДата, "ФП=Истина"),
		ПредставлениеПериода(НачалоКвартала(Реквизиты.КонДата), Реквизиты.КонДата, "ФП=Истина"));
	
	Если НалогКУплате >= 0 Тогда
		Если Реквизиты.ЭтоКонецГода Тогда
			СтрВидНалога = ?(ЭтоМинимальныйНалог, " " + НСтр("ru = 'минимальный'"), "");
			Содержание = НСтр("ru = 'Начислен%1 налог, уплачиваемый в связи с применением УСН, за %2'");
			Содержание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Содержание, СтрВидНалога, ПредставлениеПериода);
		Иначе
			Содержание = НСтр("ru = 'Начислен авансовый платеж по налогу, уплачиваемому в связи с применением УСН, за %1'");
			Содержание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Содержание, ПредставлениеПериода);
		КонецЕсли;
	Иначе
		СтрВидПлатежа = ?(Реквизиты.ЭтоКонецГода, 
			НСтр("ru = 'Налог, уплачиваемый в связи с применением УСН,'"),
			НСтр("ru = 'Авансовый платеж по налогу, уплачиваемому в связи с применением УСН,'"));
		Содержание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 к уменьшению за %2'"), СтрВидПлатежа, ПредставлениеПериода);
	КонецЕсли;
	
	Возврат Содержание;
	
КонецФункции

// Функция вызывается из модуля документа РегламентнаяОперация, служит для записи таблиц в движения документа. (см. функцию ПодготовитьТаблицыНачисленияНалогаУСН)
// Параметры:
//	ТаблицаПроводок - ТаблицаЗначений (см. ПодготовитьТаблицыНачисленияНалогаУСН);
//	ТаблицаСправкиРасчета - ТаблицаЗначений (см. ПодготовитьТаблицыНачисленияНалогаУСН);
//	ТаблицаРеквизитов - ТаблицаЗначений (см. модуль менеджера Документы.РегламентнаяОперация.ПодготовитьПараметрыНачисленияНалогаУСН);
//	Движения - движения документа "РегламентнаяОперация";
//	Отказ - Булево - переменная, влияющая на отказ от проведения документа "РегламентнаяОперация".
Процедура СформироватьДвиженияНачислениеНалогаУСН(ТаблицыНачислениеНалога, ТаблицаРеквизитов, Движения, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыНачисленияНалогаУСН(ТаблицыНачислениеНалога.ТаблицаПроводок, ТаблицыНачислениеНалога.ТаблицаСправкиРасчета, ТаблицаРеквизитов);
	
	Если Параметры.Реквизиты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = Параметры.Реквизиты[0];
	
	// проводка по начислению налога
	Для каждого СтрокаПроводки Из Параметры.Проводки Цикл
		
		Проводка = Движения.Хозрасчетный.Добавить();
		
		ЗаполнитьЗначенияСвойств(Проводка, СтрокаПроводки);
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрибылиИУбытки", СтрокаПроводки.ПрибылиИУбытки);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ВидыПлатежейВГосБюджет", СтрокаПроводки.ВидыПлатежейВГосБюджет);
		
		Движения.Хозрасчетный.Записывать = Истина;
		
	КонецЦикла;
	
	// данные для справки-расчета
	ЗакрытиеМесяца.ЗаписьВоВспомогательныеРегистрыСведений(Движения, Параметры.СправкаРасчет, Параметры.Реквизиты, "РасчетНалогаУСН");
	
	Если ТаблицыНачислениеНалога.ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы.Количество() <> 0 Тогда
		Движения.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Записывать = Истина;
		Движения.ДвиженияДоходыРасходыПрочиеАктивыПассивы.Загрузить(ТаблицыНачислениеНалога.ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы);
	КонецЕсли;
	
	Если ТаблицыНачислениеНалога.ТаблицаПрочиеАктивыПассивы.Количество() <> 0 Тогда
		Движения.ПрочиеАктивыПассивы.Записывать = Истина;
		Движения.ПрочиеАктивыПассивы.Загрузить(ТаблицыНачислениеНалога.ТаблицаПрочиеАктивыПассивы);
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьПараметрыНачисленияНалогаУСН(ТаблицаПроводок, ТаблицаСправкиРасчета, ТаблицаРеквизитов)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
		+ "Период,"								// <Дата> - период движений - дата документа
		+ "Регистратор,"						// <ДокументСсылка.РегламентнаяОперация> - документ-регистратор движений
		+ "Организация,"						// <СправочникСсылка.Организации> - организация
		+ "НачалоГода,"							// <Дата> - дата начала года
		+ "КонДата,"							// <Дата> - конец текущего квартала
		+ "СтавкаНалогаУСН,"					// <Число, 5, 2> - налоговая ставка
		+ "ПрименяетсяУСН,"						// <Булево> - признак применения УСН
		+ "ПрименяетсяУСНДоходы,"				// <Булево> - признак применения УСН с объектом налогообложения "Доходы"
		+ "ПрименяетсяУСНДоходыМинусРасходы";	// <Булево> - признак применения УСН с объектом "Доходы минус расходы"
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизитов, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Проводки
	
	СписокОбязательныхКолонок = ""
		+ "Период,"					// <Дата> - период проводок - дата документа
		+ "Организация,"			// <СправочникСсылка.Организации> - организация
		+ "СчетДт,"					// <ПланСчетовСсылка.Хозрасчетный> - счет дебета
		+ "СчетКт,"					// <ПланСчетовСсылка.Хозрасчетный> - счет кредита
		+ "ПрибылиИУбытки,"			// <ПеречислениеСсылка.ПрибылиИУбытки> - субконто счета дебета
		+ "ВидыПлатежейВГосБюджет,"	// <ПеречислениеСсылка.ВидыПлатежейВГосБюджет> - субконто кредита
		+ "Сумма,"					// <Число, 15, 2> - сумма проводки
		+ "Содержание";				// <Строка, 150> - содержание проводки
	
	Параметры.Вставить("Проводки", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаПроводок, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.СправкаРасчет
	
	СписокОбязательныхКолонок = ""
		+ "ПериодРасчета,"				// <Дата> - период расчета (конец квартала)
		+ "Организация,"				// <СправочникСсылка.Организации> - организация
		+ "ОбъектНалогообложения,"		// <ПеречислениеСсылка.ОбъектыНалогообложенияПоУСН> - объект налогообложения
		+ "Доходы,"						// <<Число, 15, 2>> - сумма доходов за период (с начала года)
		+ "Расходы,"					// <<Число, 15, 2>> - сумма расходов за период (с начала года)
		+ "ПеренесенныеУбытки,"			// <<Число, 15, 2>> - сумма убытков, перенесенных на текущий налоговый период и уменьшающих налоговую базу
		+ "НалоговаяБаза,"				// <<Число, 15, 2>> - налоговая база с начала года
		+ "СтавкаНалогаУСН,"			// <<Число, 5, 2>> - ставка налога УСН
		+ "НалогВсего,"					// <<Число, 15, 2>> - сумма налога, рассчитанного от налоговой базы и ставки с начала года
		+ "РасходыУменьшающиеНалог,"	// <<Число, 15, 2>> - сумма расходов, уменьшающих налог при УСН-доходы (с начала года)
		+ "ПроцентУменьшенияНалога,"	// <<Число, 3, 0>> - максимально допустимый процент уменьшения налога на расходы по взносам, больничным и т.п. при УСН-Доходы
		+ "УменьшениеНалогаФакт,"		// <<Число, 15, 2>> - сумма, на которую фактически уменьшен налог (при УСН-доходы) с учетом процента ограничения
		+ "НалогИсчисленныйВсего,"		// <<Число, 15, 2>> - сумма фактически исчисленного налога с начала года по текущий квартал включительно
		+ "МинимальныйНалог,"			// <<Число, 15, 2>> - сумма минимального налога (при УСН доходы-расходы) по итогам налогового периода
		+ "АвансовыеПлатежи,"			// <Число, 15, 2> - сумма начисленных в предыдущих кварталах (с начала года) авансовых платежей по налогу
		+ "НалогКУплате";				// <Число, 15, 2> - сумма налога (авансового платежа), начисленного к уплате в текущем периоде
	
	Параметры.Вставить("СправкаРасчет", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаСправкиРасчета, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

Функция РасходыПоНалогу(Реквизиты, СправкаРасчет)
	
	ПрочиеАктивыПассивы = РегистрыНакопления.ПрочиеАктивыПассивы.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ДвиженияДоходыРасходыПрочиеАктивыПассивы = РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СправкаРасчет.Организация,
	|	СправкаРасчет.ПериодРасчета,
	|	СправкаРасчет.ОбъектНалогообложения,
	|	СправкаРасчет.НалогКУплате,
	|	СправкаРасчет.МинимальныйНалог,
	|	СправкаРасчет.АвансовыеПлатежи,
	|	&Период,
	|	&Регистратор
	|ПОМЕСТИТЬ ДанныеРасчетаНалога
	|ИЗ
	|	&СправкаРасчет КАК СправкаРасчет
	|ГДЕ
	|	СправкаРасчет.НалогКУплате <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК Активность,
	|	ДанныеРасчетаНалога.Период,
	|	ДанныеРасчетаНалога.Регистратор,
	|	ДанныеРасчетаНалога.Организация,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги) КАК Статья,
	|	ВЫБОР
	|		КОГДА ДанныеРасчетаНалога.ОбъектНалогообложения = ЗНАЧЕНИЕ(Перечисление.ОбъектыНалогообложенияПоУСН.Доходы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_Доходы)
	|		КОГДА ДанныеРасчетаНалога.НалогКУплате = ДанныеРасчетаНалога.МинимальныйНалог - ДанныеРасчетаНалога.АвансовыеПлатежи
	|				И ДанныеРасчетаНалога.НалогКУплате > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_МинимальныйНалог)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_ДоходыМинусРасходы)
	|	КОНЕЦ КАК Аналитика,
	|	ДанныеРасчетаНалога.НалогКУплате * &КоэффициенПересчетаВУпр КАК Сумма,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения
	|ИЗ
	|	ДанныеРасчетаНалога КАК ДанныеРасчетаНалога
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА,
	|	ДанныеРасчетаНалога.Период,
	|	ДанныеРасчетаНалога.Регистратор,
	|	ДанныеРасчетаНалога.Организация,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки),
	|	ЗНАЧЕНИЕ(Справочник.ПрочиеАктивыПассивы.ПустаяСсылка),
	|	ДанныеРасчетаНалога.НалогКУплате * &КоэффициенПересчетаВУпр,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|ИЗ
	|	ДанныеРасчетаНалога КАК ДанныеРасчетаНалога
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК Активность,
	|	ДанныеРасчетаНалога.Период,
	|	ДанныеРасчетаНалога.Регистратор,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНалогаНаПрибыль) КАК ХозяйственнаяОперация,
	|	ДанныеРасчетаНалога.Организация,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги) КАК Статья,
	|	ВЫБОР
	|		КОГДА ДанныеРасчетаНалога.ОбъектНалогообложения = ЗНАЧЕНИЕ(Перечисление.ОбъектыНалогообложенияПоУСН.Доходы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_Доходы)
	|		КОГДА ДанныеРасчетаНалога.НалогКУплате = ДанныеРасчетаНалога.МинимальныйНалог - ДанныеРасчетаНалога.АвансовыеПлатежи
	|				И ДанныеРасчетаНалога.НалогКУплате > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_МинимальныйНалог)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_ДоходыМинусРасходы)
	|	КОНЕЦ КАК АналитикаАктивовПассивов,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КАК КорПодразделение,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки) КАК КорСтатья,
	|	ДанныеРасчетаНалога.НалогКУплате * &КоэффициенПересчетаВУпр КАК Сумма,
	|	ДанныеРасчетаНалога.НалогКУплате КАК СуммаРегл
	|ИЗ
	|	ДанныеРасчетаНалога КАК ДанныеРасчетаНалога";
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();
	
	КоэффициенПересчетаВУпр = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(ВалютаРегл, ВалютаУпр, Реквизиты.Период);
	
	Запрос.УстановитьПараметр("СправкаРасчет", СправкаРасчет);
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("Регистратор", Реквизиты.Регистратор);
	Запрос.УстановитьПараметр("КоэффициенПересчетаВУпр", КоэффициенПересчетаВУпр);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаПрочиеАктивыПассивы = Результат[1].Выбрать();
	ВыборкаДвиженияДоходыРасходыПрочиеАктивыПассивы = Результат[2].Выбрать();
	
	Пока ВыборкаПрочиеАктивыПассивы.Следующий() Цикл
		
		Запись = ПрочиеАктивыПассивы.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаПрочиеАктивыПассивы);
		
	КонецЦикла;
	
	Пока ВыборкаДвиженияДоходыРасходыПрочиеАктивыПассивы.Следующий() Цикл
		
		Запись = ДвиженияДоходыРасходыПрочиеАктивыПассивы.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаДвиженияДоходыРасходыПрочиеАктивыПассивы);
		
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("ПрочиеАктивыПассивы", ПрочиеАктивыПассивы);
	Результат.Вставить("ДвиженияДоходыРасходыПрочиеАктивыПассивы", ДвиженияДоходыРасходыПрочиеАктивыПассивы);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ПризнаниеРасходов

// Процедура выполняет последовательно:
//	Признание расходов - см. метод ПризнатьРасходы;
//	Отражение расходов - см. метод ОтразитьРасходыКУДиР;
//
// Параметры:
//	Параметры - Структура:
//					НачалоПериода - Дата - дата, начиная с которой будут анализироваться данные инф. базы;
//					КонецПериода - Дата - дата, на конец которой будут анализироваться данные инф. базы;
//					Организация - СправочникСсылка.Организация - организация, по которой будут анализироваться данные инф. базы;
//	АдресХранилища - строка.
Процедура ПризнатьИОтразитьРасходыКУДиР(Параметры, АдресХранилища) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Отказ = Ложь;
	
	Операция = Перечисления.ОперацииЗакрытияМесяца.ПризнаниеРасходовПриУСН;
	ОперацииДляВыполнения = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Перечисления.ТипыРегламентныхОпераций.ПризнаниеРасходовПриУСН);
	
	ПериодРегламентнойОперации = КонецМесяца(НачалоКвартала(Параметры.КонецПериода));
	НомерЗадания = ЗакрытиеМесяцаУТВызовСервера.УвеличитьНомерЗадания();
	
	Пока ПериодРегламентнойОперации <= Параметры.КонецПериода И Не Отказ Цикл
		
		Если НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
			НачатьТранзакцию();
			ЗакрытиеМесяцаУТВызовСервера.ЗаблокироватьРегистрЗаданий(НомерЗадания, Параметры.Организация, Операция);
			ДанныеКПризнаниюРасходовЗаМесяц = ЗакрытиеМесяцаУТВызовСервера.ЗаданияКРасчетуЗаМесяц(
				НачалоМесяца(ПериодРегламентнойОперации), ПериодРегламентнойОперации, НомерЗадания, Параметры.Организация, Операция);
			ЗафиксироватьТранзакцию();
		Иначе
			ДанныеКПризнаниюРасходовЗаМесяц = ЗакрытиеМесяцаУТВызовСервера.ЗаданияКРасчетуЗаМесяц(
				НачалоМесяца(ПериодРегламентнойОперации), ПериодРегламентнойОперации, НомерЗадания, Параметры.Организация, Операция);
		КонецЕсли;
			
		Документы.РегламентнаяОперация.РассчитатьРегламентныеОперации(
			ПериодРегламентнойОперации, ОперацииДляВыполнения, Параметры.Организация, Отказ);
			
		Если НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
			НачатьТранзакцию();
			ЗакрытиеМесяцаУТВызовСервера.ЗаблокироватьРегистрЗаданий(НомерЗадания, Параметры.Организация, Операция);
			ЗакрытиеМесяцаУТВызовСервера.ЗафиксироватьРасчет(Дата(1,1,1), ПериодРегламентнойОперации,
				ПериодРегламентнойОперации + 1, НомерЗадания, Операция, ДанныеКПризнаниюРасходовЗаМесяц);
			ЗафиксироватьТранзакцию();
		Иначе
			ЗакрытиеМесяцаУТВызовСервера.ЗафиксироватьРасчет(Дата(1,1,1), ПериодРегламентнойОперации,
				ПериодРегламентнойОперации + 1, НомерЗадания, Операция, ДанныеКПризнаниюРасходовЗаМесяц);
		КонецЕсли;
			
		ПериодРегламентнойОперации = КонецМесяца(ПериодРегламентнойОперации + 1);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Отказ Тогда
		ВызватьИсключение(НСтр("ru = 'Признание расходов в книгу учета доходов и расходов не выполнено (см. журнал регистрации).'"));
	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет анализ данных оперативных регистров и документов, все найденные расходы заносятся в соответствующие регистры УСН
//		с регистраторами, которые были регистраторами у оперативных регистров;
//
// Параметры:
//	ПараметрыРасчета - Структура, см. функцию ЗаполнитьСтруктуруШапкиДокумента менеджера документа "РегламентнаяОперация":
//					НачДата - Дата - дата, начиная с которой будут анализироваться данные инф. базы;
//					КонДата - Дата - дата, на конец которой будут анализироваться данные инф. базы;
//					НачГраница - Граница - граница, начиная с которой будут анализироваться данные инф. базы;
//					КонГраница - Граница - граница, на конец которой будут анализироваться данные инф. базы;
//					Организация - СправочникСсылка.Организация - организация, по которой будут анализироваться данные инф. базы;
Процедура ПризнатьРасходы(ПараметрыРасчета) Экспорт
	
	КлючеваяОперация = "УчетПоУСН.ПризнаниеРасходов";
	ОписаниеЗамера = Производительность.НачатьЗамерВремени(КлючеваяОперация);
	КоличествоОбработанныхДанных = 0;
	
	// Получим исходные данные на основании регистров оперативного учета.
	ВременныеТаблицыДляПризнанияРасходов = ВременныеТаблицыДляЗаполненияРасходов(ПараметрыРасчета);
	
	Производительность.ЗафиксироватьЗамерВремени(ОписаниеЗамера);
	
	// Очистим движения тех документов, которые делали движения за указанный период.
	ОчиститьДвиженияРегистровУСНЗаУказанныйПериод(ПараметрыРасчета, КоличествоОбработанныхДанных);
	
	Производительность.ЗафиксироватьЗамерВремени(ОписаниеЗамера, КоличествоОбработанныхДанных);
	КоличествоОбработанныхДанных = 0;
	
	// Сторнируем записанные доходы в КУДиР по документам, дальнейшая реализация которых прошла по деятельности ЕНВД.
	СторнироватьДоходыОтраженныеПоДеятельностиЕНВД(ПараметрыРасчета, ВременныеТаблицыДляПризнанияРасходов, КоличествоОбработанныхДанных);
	
	Производительность.ЗафиксироватьЗамерВремени(ОписаниеЗамера, КоличествоОбработанныхДанных);
	КоличествоОбработанныхДанных = 0;
	
	КоэффициентОтнесенияРасходовКПрочейДеятельности = КоэффициентОтнесенияРасходовКПрочейДеятельности(ПараметрыРасчета);
	
	// На основании исходных данных оперативных регистров заполним служебные регистры расходов при УСН.
	ЗаполнитьРегистрыРасходовУСН(ВременныеТаблицыДляПризнанияРасходов, КоэффициентОтнесенияРасходовКПрочейДеятельности, КоличествоОбработанныхДанных);
		
	Производительность.ЗакончитьЗамерВремени(ОписаниеЗамера, КоличествоОбработанныхДанных);
	
КонецПроцедуры

// Процедура выполняет анализ регистров УСН, если условия признания расходов соблюдены, расходы списываются и заносятся в регистры КУДиР и КУДиР Раздел 2.
//
// Параметры:
//	ПараметрыРасчета - Структура, см. функцию ЗаполнитьСтруктуруШапкиДокумента менеджера документа "РегламентнаяОперация":
//					КонДата - Дата - дата, на конец которой будут анализироваться данные регистров УСН;
//					Организация - СправочникСсылка.Организация - организация, по которой будут анализироваться данные регистров УСН;
//					Ссылка - ДокументСсылка.РегламентнаяОперация - документ регламентной операции в который будут записываться движения;
//	Движения - движения документа "РегламентнаяОперация";
//	Отказ - булево - переменная, влияющая на отказ от проведения документа "РегламентнаяОперация".
Процедура ОтразитьРасходыКУДиР(ПараметрыРасчета, Движения, Отказ) Экспорт
	
	КлючеваяОперация = "УчетПоУСН.ОтражениеПризнанныхРасходовВКУДиР";
	ОписаниеЗамера = Производительность.НачатьЗамерВремени(КлючеваяОперация);
	
	УстановитьСлужебноеСвойствоДляРегистровУСН(Движения);
	
	КоэффициентОтнесенияРасходовКПрочейДеятельности = КоэффициентОтнесенияРасходовКПрочейДеятельности(ПараметрыРасчета);
	
	ВыборкаПризнанныхРасходовПоРегистрам = ПризнанныеРасходы(ПараметрыРасчета);
	
	Производительность.ЗафиксироватьЗамерВремени(ОписаниеЗамера);
	
	ЗаполнитьКУДиРПризнаннымиРасходами(ВыборкаПризнанныхРасходовПоРегистрам, КоэффициентОтнесенияРасходовКПрочейДеятельности, Движения);
	
	Если Не КонецМесяца(ПараметрыРасчета.КонДата) = КонецКвартала(ПараметрыРасчета.КонДата) Тогда
		Производительность.ЗакончитьЗамерВремени(ОписаниеЗамера, Движения.КнигаУчетаДоходовИРасходов.Количество());
		Возврат;
	КонецЕсли;
	
	Производительность.ЗафиксироватьЗамерВремени(ОписаниеЗамера, Движения.КнигаУчетаДоходовИРасходов.Количество());
	
	ВыборкаПризнанныхРасходовПоАмортизации = ПризнанныеРасходыПоАмортизации(ПараметрыРасчета).Выбрать();
	
	ЗаполнитьКУДиР2ПризнаннымиРасходами(ВыборкаПризнанныхРасходовПоАмортизации, Движения);
	
	Производительность.ЗакончитьЗамерВремени(ОписаниеЗамера, Движения.КнигаУчетаДоходовИРасходовРаздел2.Количество());
	
КонецПроцедуры

Процедура УстановитьСлужебноеСвойствоДляРегистровУСН(Движения) Экспорт
	
	Движения.КнигаУчетаДоходовИРасходов.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
	Движения.КнигаУчетаДоходовИРасходовРаздел2.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
	Движения.РасходыПриУСН.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
	Движения.РасходыПриУСНМатериалы.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
	Движения.РасходыПриУСНОСиНМА.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
	Движения.РасходыПриУСНТовары.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
	
КонецПроцедуры

// Очищает движения служебных регистров УСН за указанный период по указанной организации.
//	Параметры:
//		ПараметрыЗапроса - Структура со следующими свойствами:
//			НачалоПериода - дата - начало периода, в рамках которого будут очищаться движения регистров;
//			КонецПериода - дата - конец периода, в рамках которого будут очищаться движения регистров;
//			Организация - СпаравочникСсылка.Организации  - будут очищаться движения только для данной организации;
//
Процедура ОчиститьДвиженияРегистровУСНЗаУказанныйПериод(ПараметрыЗапроса, КоличествоОбработанныхДанных = 0) Экспорт
	
	#Область ЗапросКУдаляемымРегистраторам
	
	МассивРегистровДляОчистки = Новый Массив;
	МассивРегистровДляОчистки.Добавить("РасходыПриУСН");
	МассивРегистровДляОчистки.Добавить("РасходыПриУСНМатериалы");
	МассивРегистровДляОчистки.Добавить("РасходыПриУСНОСиНМА");
	МассивРегистровДляОчистки.Добавить("РасходыПриУСНТовары");
	МассивРегистровДляОчистки.Добавить("КнигаУчетаДоходовИРасходов");
	
	СтруктураДополнительныхУсловийНаРегистр = Новый Структура;
	СтруктураДополнительныхУсловийНаРегистр.Вставить("КнигаУчетаДоходовИРасходов");
	МассивДополнительныхУсловий = Новый Массив;
	МассивДополнительныхУсловий.Добавить("(ТаблицаДляОчистки.Графа5 < 0 ИЛИ (ТаблицаДляОчистки.Графа5 = 0 И ТаблицаДляОчистки.ДоходЕНВД = 0))");
	МассивДополнительныхУсловий.Добавить("Не ТаблицаДляОчистки.Регистратор ССЫЛКА Документ.ЗаписьКУДиР");
	СтруктураДополнительныхУсловийНаРегистр.КнигаУчетаДоходовИРасходов = МассивДополнительныхУсловий;
	
	ОтступЗапросаКРегистру = Символы.ПС + Символы.ПС + 	"ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС;
	ОтступДополнительногоУсловияКРегистру = Символы.ПС + Символы.Таб + "И ";
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("НачДата", ПараметрыЗапроса.НачДата);
	Запрос.УстановитьПараметр("КонДата", ПараметрыЗапроса.КонДата);
	Запрос.УстановитьПараметр("Организация", ПараметрыЗапроса.Организация);
	
	ШаблонЗапросаКРегистру = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДляОчистки.Регистратор,
	|	""%ИмяРегистра"" КАК ВидРегистра
	|	%СтрокаСозданияВиртуальнойТаблицы
	|ИЗ
	|	РегистрНакопления.%ИмяРегистра КАК ТаблицаДляОчистки
	|ГДЕ
	|	ТаблицаДляОчистки.Период >= &НачДата
	|	И ТаблицаДляОчистки.Период <= &КонДата
	|	И ТаблицаДляОчистки.Организация = &Организация
	|	И Не ТаблицаДляОчистки.Регистратор ССЫЛКА Документ.КорректировкаРегистров";
			
	Для каждого РегистрДляОчистки из МассивРегистровДляОчистки Цикл
		ТекстЗапросаКРегистру = ШаблонЗапросаКРегистру;
		СтрокаСозданияВиртуальнойТаблицы = ?(МассивРегистровДляОчистки.Получить(0) = РегистрДляОчистки, "ПОМЕСТИТЬ УдаляемыеРегистраторы", "");
		ТекстЗапросаКРегистру = СтрЗаменить(ТекстЗапросаКРегистру, "%СтрокаСозданияВиртуальнойТаблицы", СтрокаСозданияВиртуальнойТаблицы);
		ТекстЗапросаКРегистру = СтрЗаменить(ТекстЗапросаКРегистру, "%ИмяРегистра", РегистрДляОчистки);
		МассивДопУсловий = Неопределено;
		Если СтруктураДополнительныхУсловийНаРегистр.Свойство(РегистрДляОчистки, МассивДопУсловий) Тогда
			Для каждого ДополнительноеУсловие из МассивДопУсловий Цикл
				ТекстЗапросаКРегистру = ТекстЗапросаКРегистру + ОтступДополнительногоУсловияКРегистру + ДополнительноеУсловие;
			КонецЦикла;
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + ?(Запрос.Текст = "", "", ОтступЗапросаКРегистру) + ТекстЗапросаКРегистру;
	КонецЦикла;
	
	#КонецОбласти
	
	#Область НеудаляемыеДвиженияДокументов
	
	ШаблонЗапросаКРегистру = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНеудаляемыхЗаписей.*
	|ИЗ
	|	УдаляемыеРегистраторы КАК УдаляемыеРегистраторы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.%ИмяРегистра КАК ТаблицаНеудаляемыхЗаписей
	|		ПО УдаляемыеРегистраторы.Регистратор = ТаблицаНеудаляемыхЗаписей.Регистратор
	|			И УдаляемыеРегистраторы.ВидРегистра = ""%ИмяРегистра""
	|ГДЕ
	|	&НачДата > ТаблицаНеудаляемыхЗаписей.Период
	|		ИЛИ &КонДата < ТаблицаНеудаляемыхЗаписей.Период
	|		ИЛИ ТаблицаНеудаляемыхЗаписей.Организация <> &Организация
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНеудаляемыхЗаписей.Регистратор";
	
	ОтступПакетаЗапросов = Символы.ПС + ";" + Символы.ПС + Символы.ПС + "////////////////////////////////////////////////////////////////////////////////" + Символы.ПС;
	
	Для каждого РегистрДляОчистки из МассивРегистровДляОчистки Цикл
		
		ТекстЗапросаКРегистру = ШаблонЗапросаКРегистру;
		ТекстЗапросаКРегистру = СтрЗаменить(ТекстЗапросаКРегистру, "%ИмяРегистра", РегистрДляОчистки);
		
		Если РегистрДляОчистки = "КнигаУчетаДоходовИРасходов" Тогда
			// Для книги учета доходов и расходов мы должны оставить записи сделанные только в качестве доходов.
			ТекстДопУсловия = Символы.Таб + Символы.Таб + "ИЛИ ТаблицаНеудаляемыхЗаписей.Графа5 > 0"
				+ Символы.ПС + Символы.Таб + Символы.Таб + "ИЛИ ТаблицаНеудаляемыхЗаписей.Графа5 = 0 И ТаблицаНеудаляемыхЗаписей.ДоходЕНВД > 0" + Символы.ПС;
			ТекстЗапросаКРегистру = СтрЗаменить(ТекстЗапросаКРегистру, "УПОРЯДОЧИТЬ", ТекстДопУсловия + "УПОРЯДОЧИТЬ");
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + ОтступПакетаЗапросов + ТекстЗапросаКРегистру;
		
	КонецЦикла;
	
	#КонецОбласти
	
	Запрос.Текст = Запрос.Текст + ОтступПакетаЗапросов + 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УдаляемыеРегистраторы.Регистратор КАК Регистратор,
	|	УдаляемыеРегистраторы.ВидРегистра КАК ВидРегистра
	|ИЗ
	|	УдаляемыеРегистраторы КАК УдаляемыеРегистраторы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор
	|ИТОГИ ПО
	|	ВидРегистра";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаРегистраДляОчистки = Результат.Получить(6).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаРегистраДляОчистки.Следующий() Цикл
		
		ВыборкаДанныхДляОчистки = ВыборкаРегистраДляОчистки.Выбрать();
		ИндексРегистраВМассиве = МассивРегистровДляОчистки.Найти(ВыборкаРегистраДляОчистки.ВидРегистра);
		ВыборкаСохраняемыхДанныхРегистра = Результат.Получить(ИндексРегистраВМассиве + 1).Выбрать();
		ЕстьСохраняемыеДанные = ВыборкаСохраняемыхДанныхРегистра.Следующий();
		
		Пока ВыборкаДанныхДляОчистки.Следующий() Цикл
		
			НаборЗаписей = РегистрыНакопления[ВыборкаДанныхДляОчистки.ВидРегистра].СоздатьНаборЗаписей();
			НаборЗаписей.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДанныхДляОчистки.Регистратор);
			
			Пока ЕстьСохраняемыеДанные И ВыборкаСохраняемыхДанныхРегистра.Регистратор = ВыборкаДанныхДляОчистки.Регистратор Цикл
				СтрокаЗаписи = НаборЗаписей.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаЗаписи, ВыборкаСохраняемыхДанныхРегистра);
				ЕстьСохраняемыеДанные = ВыборкаСохраняемыхДанныхРегистра.Следующий();
			КонецЦикла;
			
			НаборЗаписей.Записать();
			КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + 1;
			
		КонецЦикла;
				
	КонецЦикла;		
	
КонецПроцедуры

// Возвращает имя служебного доп. свойства, устанавливаемого у всех объектов, записываемых этим механизмом.
//
Функция ИмяСлужебногоДополнительногоСвойстваОбъекта()
	Возврат "ПризнаниеРасходовПриУСН";
КонецФункции

#Область СлужебныеПроцедурыИФункцииЗаписиРасходовВКУДиР

Функция ПризнанныеРасходы(ПараметрыЗапроса)
	
	Запрос = ИнициализироватьЗапросПоПараметрам(ПараметрыЗапроса, Новый МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	""РасходыПриУСН"" КАК ВидРегистра,
	|	РасходыПриУСН.Организация,
	|	РасходыПриУСН.ДокументВозникновенияРасходов,
	|	РасходыПриУСН.ВидРасходов,
	|	РасходыПриУСН.СтатьяРасходов,
	|	РасходыПриУСН.Регистратор,
	|	РасходыПриУСН.Период,
	|	РасходыПриУСН.ХозяйственнаяОперация,
	|	ПринимаемыеРасходы.СуммаРасходовОстаток,
	|	ПринимаемыеРасходы.НДСОстаток,
	|	ПринимаемыеРасходы.СуммаОплатыОстаток,
	|	ВЫБОР
	|		КОГДА РасходыПриУСН.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * РасходыПриУСН.СуммаРасходов КАК Расход,
	|	ВЫБОР
	|		КОГДА РасходыПриУСН.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * РасходыПриУСН.СуммаОплаты КАК Оплата,
	|	ПринимаемыеРасходы.СуммаРасходовОстаток КАК СуммаОтгрузкиОстаток,
	|	ВЫБОР
	|		КОГДА РасходыПриУСН.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * РасходыПриУСН.СуммаРасходов КАК Отгрузка,
	|	РасходыПриУСН.МоментВремени
	|ПОМЕСТИТЬ ДокументыЗаПериод
	|ИЗ
	|	РегистрНакопления.РасходыПриУСН.Остатки(&КонГраница, Организация = &Организация) КАК ПринимаемыеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасходыПриУСН КАК РасходыПриУСН
	|		ПО ПринимаемыеРасходы.Организация = РасходыПриУСН.Организация
	|			И ПринимаемыеРасходы.ДокументВозникновенияРасходов = РасходыПриУСН.ДокументВозникновенияРасходов
	|			И ПринимаемыеРасходы.ВидРасходов = РасходыПриУСН.ВидРасходов
	|			И ПринимаемыеРасходы.СтатьяРасходов = РасходыПриУСН.СтатьяРасходов
	|			И (ПринимаемыеРасходы.СуммаРасходовОстаток > 0)
	|			И (ПринимаемыеРасходы.СуммаОплатыОстаток > 0)
	|			И (РасходыПриУСН.Период >= &НачДата)
	|			И (РасходыПриУСН.Период <= &КонДата)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""РасходыПриУСНМатериалы"",
	|	РасходыПриУСН.Организация,
	|	РасходыПриУСН.ДокументВозникновенияРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы),
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка),
	|	РасходыПриУСН.Регистратор,
	|	РасходыПриУСН.Период,
	|	РасходыПриУСН.ХозяйственнаяОперация,
	|	ПринимаемыеРасходы.СуммаРасходовОстаток,
	|	ПринимаемыеРасходы.НДСОстаток,
	|	ПринимаемыеРасходы.СуммаОплатыОстаток,
	|	ВЫБОР
	|		КОГДА РасходыПриУСН.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * РасходыПриУСН.СуммаРасходов,
	|	ВЫБОР
	|		КОГДА РасходыПриУСН.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * РасходыПриУСН.СуммаОплаты,
	|	ПринимаемыеРасходы.СуммаРасходовОстаток,
	|	ВЫБОР
	|		КОГДА РасходыПриУСН.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * РасходыПриУСН.СуммаРасходов,
	|	РасходыПриУСН.МоментВремени
	|ИЗ
	|	РегистрНакопления.РасходыПриУСНМатериалы.Остатки(&КонГраница, Организация = &Организация) КАК ПринимаемыеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасходыПриУСНМатериалы КАК РасходыПриУСН
	|		ПО ПринимаемыеРасходы.Организация = РасходыПриУСН.Организация
	|			И ПринимаемыеРасходы.ДокументВозникновенияРасходов = РасходыПриУСН.ДокументВозникновенияРасходов
	|			И (ПринимаемыеРасходы.СуммаРасходовОстаток > 0)
	|			И (ПринимаемыеРасходы.СуммаОплатыОстаток > 0)
	|			И (РасходыПриУСН.Период >= &НачДата)
	|			И (РасходыПриУСН.Период <= &КонДата)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""РасходыПриУСНТовары"",
	|	РасходыПриУСН.Организация,
	|	РасходыПриУСН.ДокументВозникновенияРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура),
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка),
	|	РасходыПриУСН.Регистратор,
	|	РасходыПриУСН.Период,
	|	РасходыПриУСН.ХозяйственнаяОперация,
	|	ПринимаемыеРасходы.СуммаРасходовОстаток,
	|	ПринимаемыеРасходы.НДСОстаток,
	|	ПринимаемыеРасходы.СуммаОплатыОстаток,
	|	ВЫБОР
	|		КОГДА РасходыПриУСН.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * РасходыПриУСН.СуммаРасходов,
	|	ВЫБОР
	|		КОГДА РасходыПриУСН.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * РасходыПриУСН.СуммаОплаты,
	|	ПринимаемыеРасходы.СуммаОтгрузкиОстаток,
	|	ВЫБОР
	|		КОГДА РасходыПриУСН.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ * РасходыПриУСН.СуммаОтгрузки,
	|	РасходыПриУСН.МоментВремени
	|ИЗ
	|	РегистрНакопления.РасходыПриУСНТовары.Остатки(&КонГраница, Организация = &Организация) КАК ПринимаемыеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасходыПриУСНТовары КАК РасходыПриУСН
	|		ПО ПринимаемыеРасходы.Организация = РасходыПриУСН.Организация
	|			И ПринимаемыеРасходы.ДокументВозникновенияРасходов = РасходыПриУСН.ДокументВозникновенияРасходов
	|			И (ПринимаемыеРасходы.СуммаРасходовОстаток > 0)
	|			И (ПринимаемыеРасходы.СуммаОплатыОстаток > 0)
	|			И (ПринимаемыеРасходы.СуммаОтгрузкиОстаток > 0)
	|			И (РасходыПриУСН.Период >= &НачДата)
	|			И (РасходыПриУСН.Период <= &КонДата)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыЗаПериод.ВидРегистра,
	|	ДокументыЗаПериод.Организация,
	|	ДокументыЗаПериод.ДокументВозникновенияРасходов,
	|	ДокументыЗаПериод.ВидРасходов,
	|	ДокументыЗаПериод.СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА СУММА(ЕСТЬNULL(ТаблицаОпределенияАвансов.Расход, 0)) > 0
	|				И ДокументыЗаПериод.Оплата > 0
	|			ТОГДА ДокументыЗаПериод.ДокументВозникновенияРасходов
	|		ИНАЧЕ ДокументыЗаПериод.Регистратор
	|	КОНЕЦ КАК Регистратор,
	|	ДокументыЗаПериод.Период,
	|	ВЫБОР
	|		КОГДА СУММА(ЕСТЬNULL(ТаблицаОпределенияАвансов.Расход, 0)) > 0
	|				И ДокументыЗаПериод.Оплата > 0
	|			ТОГДА МАКСИМУМ(ТаблицаОпределенияАвансов.ХозяйственнаяОперация)
	|		ИНАЧЕ ДокументыЗаПериод.ХозяйственнаяОперация
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ДокументыЗаПериод.СуммаРасходовОстаток + ДокументыЗаПериод.Расход - СУММА(ЕСТЬNULL(СводныеДанныеЗаПериод.Расход, 0)) + СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(СводныеДанныеЗаПериод.Расход, 0) < 0
	|				ТОГДА СводныеДанныеЗаПериод.Расход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаПризнанияРасходов,
	|	ДокументыЗаПериод.СуммаОплатыОстаток + ДокументыЗаПериод.Оплата - СУММА(ЕСТЬNULL(СводныеДанныеЗаПериод.Оплата, 0)) + СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(СводныеДанныеЗаПериод.Оплата, 0) < 0
	|				ТОГДА СводныеДанныеЗаПериод.Оплата
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаПризнанияОплаты,
	|	ДокументыЗаПериод.НДСОстаток КАК НачальнаяСуммаНДС,
	|	ДокументыЗаПериод.СуммаРасходовОстаток КАК НачальнаяСуммаРасходов,
	|	ДокументыЗаПериод.СуммаОтгрузкиОстаток + ДокументыЗаПериод.Отгрузка - СУММА(ЕСТЬNULL(СводныеДанныеЗаПериод.Отгрузка, 0)) + СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(СводныеДанныеЗаПериод.Отгрузка, 0) < 0
	|				ТОГДА СводныеДанныеЗаПериод.Отгрузка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаПризнанияОтгрузки,
	|	ВЫБОР
	|		КОГДА ДокументыЗаПериод.Регистратор ССЫЛКА Документ.СписаниеЗадолженности
	|				И ДокументыЗаПериод.Оплата > 0
	|				И НЕ ДокументыЗаПериод.Регистратор = ДокументыЗаПериод.ДокументВозникновенияРасходов
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОплатаСписаниемДолга,
	|	ДокументыЗаПериод.СуммаРасходовОстаток - СУММА(ЕСТЬNULL(СводныеДанныеЗаПериод.Расход, 0)) + СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(СводныеДанныеЗаПериод.Расход, 0) < 0
	|				ТОГДА СводныеДанныеЗаПериод.Расход
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачальнаяСуммаПризнанияРасходов,
	|	ДокументыЗаПериод.СуммаОплатыОстаток - СУММА(ЕСТЬNULL(СводныеДанныеЗаПериод.Оплата, 0)) + СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(СводныеДанныеЗаПериод.Оплата, 0) < 0
	|				ТОГДА СводныеДанныеЗаПериод.Оплата
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачальнаяСуммаПризнанияОплаты,
	|	ДокументыЗаПериод.СуммаОтгрузкиОстаток - СУММА(ЕСТЬNULL(СводныеДанныеЗаПериод.Отгрузка, 0)) + СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(СводныеДанныеЗаПериод.Отгрузка, 0) < 0
	|				ТОГДА СводныеДанныеЗаПериод.Отгрузка
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НачальнаяСуммаПризнанияОтгрузки
	|ПОМЕСТИТЬ ПризнаваемыеРасходы
	|ИЗ
	|	ДокументыЗаПериод КАК ДокументыЗаПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыЗаПериод КАК СводныеДанныеЗаПериод
	|		ПО ДокументыЗаПериод.ВидРегистра = СводныеДанныеЗаПериод.ВидРегистра
	|			И ДокументыЗаПериод.Организация = СводныеДанныеЗаПериод.Организация
	|			И ДокументыЗаПериод.ДокументВозникновенияРасходов = СводныеДанныеЗаПериод.ДокументВозникновенияРасходов
	|			И ДокументыЗаПериод.ВидРасходов = СводныеДанныеЗаПериод.ВидРасходов
	|			И ДокументыЗаПериод.СтатьяРасходов = СводныеДанныеЗаПериод.СтатьяРасходов
	|			И ДокументыЗаПериод.МоментВремени <= СводныеДанныеЗаПериод.МоментВремени
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыЗаПериод КАК ТаблицаОпределенияАвансов
	|		ПО ДокументыЗаПериод.ВидРегистра = ТаблицаОпределенияАвансов.ВидРегистра
	|			И ДокументыЗаПериод.Организация = ТаблицаОпределенияАвансов.Организация
	|			И ДокументыЗаПериод.ДокументВозникновенияРасходов = ТаблицаОпределенияАвансов.ДокументВозникновенияРасходов
	|			И (ТаблицаОпределенияАвансов.Регистратор = ТаблицаОпределенияАвансов.ДокументВозникновенияРасходов)
	|			И ДокументыЗаПериод.ВидРасходов = ТаблицаОпределенияАвансов.ВидРасходов
	|			И ДокументыЗаПериод.СтатьяРасходов = ТаблицаОпределенияАвансов.СтатьяРасходов
	|			И ДокументыЗаПериод.Период = ТаблицаОпределенияАвансов.Период
	|			И ДокументыЗаПериод.МоментВремени > ТаблицаОпределенияАвансов.МоментВремени
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыЗаПериод.Регистратор,
	|	ДокументыЗаПериод.Период,
	|	ДокументыЗаПериод.ВидРасходов,
	|	ДокументыЗаПериод.ДокументВозникновенияРасходов,
	|	ДокументыЗаПериод.Организация,
	|	ДокументыЗаПериод.ВидРегистра,
	|	ДокументыЗаПериод.СтатьяРасходов,
	|	ДокументыЗаПериод.ХозяйственнаяОперация,
	|	ДокументыЗаПериод.НДСОстаток,
	|	ДокументыЗаПериод.СуммаРасходовОстаток,
	|	ДокументыЗаПериод.СуммаОплатыОстаток,
	|	ДокументыЗаПериод.СуммаОтгрузкиОстаток,
	|	ВЫБОР
	|		КОГДА ДокументыЗаПериод.Регистратор ССЫЛКА Документ.СписаниеЗадолженности
	|				И ДокументыЗаПериод.Оплата > 0
	|				И НЕ ДокументыЗаПериод.Регистратор = ДокументыЗаПериод.ДокументВозникновенияРасходов
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ДокументыЗаПериод.Расход,
	|	ДокументыЗаПериод.Оплата,
	|	ДокументыЗаПериод.Отгрузка
	|
	|ИМЕЮЩИЕ
	|	ДокументыЗаПериод.СуммаРасходовОстаток + ДокументыЗаПериод.Расход - СУММА(ЕСТЬNULL(СводныеДанныеЗаПериод.Расход, 0)) + СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(СводныеДанныеЗаПериод.Расход, 0) < 0
	|				ТОГДА СводныеДанныеЗаПериод.Расход
	|			ИНАЧЕ 0
	|		КОНЕЦ) > 0 И
	|	ДокументыЗаПериод.СуммаОплатыОстаток + ДокументыЗаПериод.Оплата - СУММА(ЕСТЬNULL(СводныеДанныеЗаПериод.Оплата, 0)) + СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(СводныеДанныеЗаПериод.Оплата, 0) < 0
	|				ТОГДА СводныеДанныеЗаПериод.Оплата
	|			ИНАЧЕ 0
	|		КОНЕЦ) > 0 И
	|	ДокументыЗаПериод.СуммаОтгрузкиОстаток + ДокументыЗаПериод.Отгрузка - СУММА(ЕСТЬNULL(СводныеДанныеЗаПериод.Отгрузка, 0)) + СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(СводныеДанныеЗаПериод.Отгрузка, 0) < 0
	|				ТОГДА СводныеДанныеЗаПериод.Отгрузка
	|			ИНАЧЕ 0
	|		КОНЕЦ) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПризнаваемыеРасходы.Организация КАК Организация,
	|	ПризнаваемыеРасходы.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	СУММА(ВЫБОР
	|		КОГДА ПризнаваемыеРасходы.СуммаПризнанияОплаты <= ПризнаваемыеРасходы.СуммаПризнанияРасходов
	|				И ПризнаваемыеРасходы.СуммаПризнанияОплаты <= ПризнаваемыеРасходы.СуммаПризнанияОтгрузки
	|				И ПризнаваемыеРасходы.СуммаПризнанияОплаты > 0
	|			ТОГДА ПризнаваемыеРасходы.СуммаПризнанияОплаты
	|		КОГДА ПризнаваемыеРасходы.СуммаПризнанияРасходов <= ПризнаваемыеРасходы.СуммаПризнанияОплаты
	|				И ПризнаваемыеРасходы.СуммаПризнанияРасходов <= ПризнаваемыеРасходы.СуммаПризнанияОтгрузки
	|				И ПризнаваемыеРасходы.СуммаПризнанияРасходов > 0
	|			ТОГДА ПризнаваемыеРасходы.СуммаПризнанияРасходов
	|		КОГДА ПризнаваемыеРасходы.СуммаПризнанияОтгрузки <= ПризнаваемыеРасходы.СуммаПризнанияРасходов
	|				И ПризнаваемыеРасходы.СуммаПризнанияОтгрузки <= ПризнаваемыеРасходы.СуммаПризнанияОплаты
	|				И ПризнаваемыеРасходы.СуммаПризнанияОтгрузки > 0
	|			ТОГДА ПризнаваемыеРасходы.СуммаПризнанияОтгрузки
	|		ИНАЧЕ 0
	|	КОНЕЦ - ВЫБОР
	|		КОГДА ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОплаты <= ПризнаваемыеРасходы.НачальнаяСуммаПризнанияРасходов
	|				И ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОплаты <= ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОтгрузки
	|				И ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОплаты > 0
	|			ТОГДА ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОплаты
	|		КОГДА ПризнаваемыеРасходы.НачальнаяСуммаПризнанияРасходов <= ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОплаты
	|				И ПризнаваемыеРасходы.НачальнаяСуммаПризнанияРасходов <= ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОтгрузки
	|				И ПризнаваемыеРасходы.НачальнаяСуммаПризнанияРасходов > 0
	|			ТОГДА ПризнаваемыеРасходы.НачальнаяСуммаПризнанияРасходов
	|		КОГДА ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОтгрузки <= ПризнаваемыеРасходы.НачальнаяСуммаПризнанияРасходов
	|				И ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОтгрузки <= ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОплаты
	|				И ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОтгрузки > 0
	|			ТОГДА ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОтгрузки
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаПризнания,
	|	ПризнаваемыеРасходы.ВидРасходов,
	|	ПризнаваемыеРасходы.ХозяйственнаяОперация,
	|	ПризнаваемыеРасходы.ВидРегистра КАК ВидРегистра,
	|	ПризнаваемыеРасходы.СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА ПризнаваемыеРасходы.ОплатаСписаниемДолга
	|			ТОГДА ЛОЖЬ
	|		КОГДА НЕ ПризнаваемыеРасходы.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|				ИЛИ ПризнаваемыеРасходы.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ВЫРАЗИТЬ(ПризнаваемыеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ПризнаватьРасходамиПриУСН
	|	КОНЕЦ КАК ПризнаватьРасходамиПриУСН,
	|	СРЕДНЕЕ(ПризнаваемыеРасходы.НачальнаяСуммаНДС) КАК НачальнаяСуммаНДС,
	|	СРЕДНЕЕ(ПризнаваемыеРасходы.НачальнаяСуммаРасходов) КАК НачальнаяСуммаРасходов,
	|	ВЫБОР
	|		КОГДА НЕ ПризнаваемыеРасходы.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|				ИЛИ ПризнаваемыеРасходы.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		ИНАЧЕ ВЫРАЗИТЬ(ПризнаваемыеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|	КОНЕЦ КАК ВидДеятельности,
	|	ПризнаваемыеРасходы.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА ПризнаваемыеРасходы.ДокументВозникновенияРасходов ССЫЛКА Документ.ВводОстатков
	|			ТОГДА ПризнаваемыеРасходы.Регистратор
	|		ИНАЧЕ ПризнаваемыеРасходы.ДокументВозникновенияРасходов
	|	КОНЕЦ КАК ДокументДляСвязиСТаблицейПоставщиков
	|ПОМЕСТИТЬ ПризнанныеРасходы
	|ИЗ
	|	ПризнаваемыеРасходы КАК ПризнаваемыеРасходы
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ПризнаваемыеРасходы.СуммаПризнанияОплаты <= ПризнаваемыеРасходы.СуммаПризнанияРасходов
	|					И ПризнаваемыеРасходы.СуммаПризнанияОплаты <= ПризнаваемыеРасходы.СуммаПризнанияОтгрузки
	|				ТОГДА ПризнаваемыеРасходы.СуммаПризнанияОплаты
	|			КОГДА ПризнаваемыеРасходы.СуммаПризнанияРасходов <= ПризнаваемыеРасходы.СуммаПризнанияОплаты
	|					И ПризнаваемыеРасходы.СуммаПризнанияРасходов <= ПризнаваемыеРасходы.СуммаПризнанияОтгрузки
	|				ТОГДА ПризнаваемыеРасходы.СуммаПризнанияРасходов
	|			КОГДА ПризнаваемыеРасходы.СуммаПризнанияОтгрузки <= ПризнаваемыеРасходы.СуммаПризнанияРасходов
	|					И ПризнаваемыеРасходы.СуммаПризнанияОтгрузки <= ПризнаваемыеРасходы.СуммаПризнанияОплаты
	|				ТОГДА ПризнаваемыеРасходы.СуммаПризнанияОтгрузки
	|			ИНАЧЕ 0
	|		КОНЕЦ - ВЫБОР
	|			КОГДА ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОплаты <= ПризнаваемыеРасходы.НачальнаяСуммаПризнанияРасходов
	|					И ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОплаты <= ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОтгрузки
	|				ТОГДА ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОплаты
	|			КОГДА ПризнаваемыеРасходы.НачальнаяСуммаПризнанияРасходов <= ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОплаты
	|					И ПризнаваемыеРасходы.НачальнаяСуммаПризнанияРасходов <= ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОтгрузки
	|				ТОГДА ПризнаваемыеРасходы.НачальнаяСуммаПризнанияРасходов
	|			КОГДА ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОтгрузки <= ПризнаваемыеРасходы.НачальнаяСуммаПризнанияРасходов
	|					И ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОтгрузки <= ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОплаты
	|				ТОГДА ПризнаваемыеРасходы.НачальнаяСуммаПризнанияОтгрузки
	|			ИНАЧЕ 0
	|		КОНЕЦ > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПризнаваемыеРасходы.Организация,
	|	ПризнаваемыеРасходы.ДокументВозникновенияРасходов,
	|	ПризнаваемыеРасходы.ВидРасходов,
	|	ПризнаваемыеРасходы.ХозяйственнаяОперация,
	|	ПризнаваемыеРасходы.ВидРегистра,
	|	ПризнаваемыеРасходы.СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА ПризнаваемыеРасходы.ОплатаСписаниемДолга
	|			ТОГДА ЛОЖЬ
	|		КОГДА НЕ ПризнаваемыеРасходы.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|				ИЛИ ПризнаваемыеРасходы.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ВЫРАЗИТЬ(ПризнаваемыеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ПризнаватьРасходамиПриУСН
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ПризнаваемыеРасходы.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|				ИЛИ ПризнаваемыеРасходы.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		ИНАЧЕ ВЫРАЗИТЬ(ПризнаваемыеРасходы.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВидДеятельностиДляНалоговогоУчетаЗатрат
	|	КОНЕЦ,
	|	ПризнаваемыеРасходы.Регистратор,
	|	ВЫБОР
	|		КОГДА ПризнаваемыеРасходы.ДокументВозникновенияРасходов ССЫЛКА Документ.ВводОстатков
	|			ТОГДА ПризнаваемыеРасходы.Регистратор
	|		ИНАЧЕ ПризнаваемыеРасходы.ДокументВозникновенияРасходов
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Организация,
	|	ДокументДляСвязиСТаблицейПоставщиков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПризнанныеРасходы.Организация,
	|	ПризнанныеРасходы.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	ПризнанныеРасходы.СуммаПризнания,
	|	ВЫБОР КОГДА РасчетыСПоставщикамиПоДокументам.АналитикаУчетаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		ТОГДА РасчетыСПоставщикамиПоДокументам.АналитикаУчетаПоПартнерам.Контрагент
	|		ИНАЧЕ ЕСТЬNULL(РасчетыСПоставщикамиПоДокументам.АналитикаУчетаПоПартнерам.Партнер, ДоговорыКредитовИДепозитов.Партнер)
	|	КОНЕЦ КАК Партнер,
	|	ЕСТЬNULL(РасчетыСПоставщикамиПоДокументам.АналитикаУчетаПоПартнерам.Договор, ДоговорыКредитовИДепозитов.Ссылка) КАК Договор,
	|	ПризнанныеРасходы.ВидРасходов,
	|	ВЫБОР
	|		КОГДА ДанныеПервичныхДокументов.Документ ЕСТЬ NULL
	|			ТОГДА ВЫРАЗИТЬ(ПризнанныеРасходы.Регистратор КАК Документ.КорректировкаРегистров).Номер
	|		КОГДА ДанныеПервичныхДокументов.Номер = """"
	|			ТОГДА ДанныеПервичныхДокументов.НомерРегистратора
	|		ИНАЧЕ ДанныеПервичныхДокументов.Номер
	|	КОНЕЦ КАК НомерПервичногоДокумента,
	|	ВЫБОР
	|		КОГДА ДанныеПервичныхДокументов.Документ ЕСТЬ NULL
	|			ТОГДА ВЫРАЗИТЬ(ПризнанныеРасходы.Регистратор КАК Документ.КорректировкаРегистров).Дата
	|		КОГДА ДанныеПервичныхДокументов.Дата = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДанныеПервичныхДокументов.ДатаРегистратора
	|		ИНАЧЕ ДанныеПервичныхДокументов.Дата
	|	КОНЕЦ КАК ДатаПервичногоДокумента,
	|	&Ссылка КАК Ссылка,
	|	КОНЕЦПЕРИОДА(ВЫБОР
	|		КОГДА ДанныеПервичныхДокументов.Документ ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ПризнанныеРасходы.Регистратор КАК Документ.КорректировкаРегистров).Дата, &КонДата)
	|		КОГДА ДанныеПервичныхДокументов.Дата = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДанныеПервичныхДокументов.ДатаРегистратора
	|		ИНАЧЕ ДанныеПервичныхДокументов.Дата
	|	КОНЕЦ, День) КАК Период,
	|	ПризнанныеРасходы.ХозяйственнаяОперация,
	|	ПризнанныеРасходы.ВидРегистра КАК ВидРегистра,
	|	ТИПЗНАЧЕНИЯ(ПризнанныеРасходы.Регистратор) КАК ТипПервичногоДокумента,
	|	ПризнанныеРасходы.СтатьяРасходов,
	|	ПризнанныеРасходы.ПризнаватьРасходамиПриУСН,
	|	ПризнанныеРасходы.НачальнаяСуммаНДС,
	|	ПризнанныеРасходы.НачальнаяСуммаРасходов,
	|	ПризнанныеРасходы.ВидДеятельности
	|ИЗ
	|	ПризнанныеРасходы КАК ПризнанныеРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщикамиПоДокументам
	|		ПО (ПризнанныеРасходы.ДокументДляСвязиСТаблицейПоставщиков = РасчетыСПоставщикамиПоДокументам.РасчетныйДокумент
	|				ИЛИ ПризнанныеРасходы.ДокументДляСвязиСТаблицейПоставщиков = РасчетыСПоставщикамиПоДокументам.Регистратор)
	|			И ПризнанныеРасходы.Организация = РасчетыСПоставщикамиПоДокументам.АналитикаУчетаПоПартнерам.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПризнанныеРасходы.Регистратор = ДанныеПервичныхДокументов.Документ
	|			И ПризнанныеРасходы.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДоговорыКредитовИДепозитов
	|		ПО ПризнанныеРасходы.ДокументДляСвязиСТаблицейПоставщиков = ДоговорыКредитовИДепозитов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПервичногоДокумента
	|ИТОГИ ПО
	|	ВидРегистра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДокументыЗаПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПризнаваемыеРасходы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПризнанныеРасходы";
	
	Возврат Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
КонецФункции

Процедура ЗаполнитьКУДиРПризнаннымиРасходами(ВыборкаРасходовКПризнанию, КоэффициентОтнесенияРасходовКПрочейДеятельности, Движения)
	
	ВидыДеятельности = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат;
	
	Пока ВыборкаРасходовКПризнанию.Следующий() Цикл
		
		НаборЗаписейРасходов = Движения[ВыборкаРасходовКПризнанию.ВидРегистра];
		
		ВыборкаПризнанныхРасходов = ВыборкаРасходовКПризнанию.Выбрать();
		
		Пока ВыборкаПризнанныхРасходов.Следующий() Цикл
			
			НДС = ВыборкаПризнанныхРасходов.СуммаПризнания * ВыборкаПризнанныхРасходов.НачальнаяСуммаНДС / ВыборкаПризнанныхРасходов.НачальнаяСуммаРасходов;
						
			ЗаписьРасхода = НаборЗаписейРасходов.ДобавитьРасход();
			
			ЗаполнитьЗначенияСвойств(ЗаписьРасхода, ВыборкаПризнанныхРасходов);
			ЗаписьРасхода.НДС = НДС;
			ЗаписьРасхода.СуммаРасходов = ВыборкаПризнанныхРасходов.СуммаПризнания;
			ЗаписьРасхода.СуммаОплаты = ВыборкаПризнанныхРасходов.СуммаПризнания;
			Если ВыборкаРасходовКПризнанию.ВидРегистра = "РасходыПриУСНТовары" Тогда
				ЗаписьРасхода.СуммаОтгрузки = ВыборкаПризнанныхРасходов.СуммаПризнания;
			КонецЕсли;
			
			ЗаписьКУДиР = Движения.КнигаУчетаДоходовИРасходов.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьКУДиР, ВыборкаПризнанныхРасходов);
			
			ЗаписьКУДиР.Графа6 = ВыборкаПризнанныхРасходов.СуммаПризнания;
			ЗаписьКУДиР.Графа7 = ВыборкаПризнанныхРасходов.СуммаПризнания;
			ЗаписьКУДиР.НДС = НДС;
			
			ЗаписьКУДиР.Содержание = СодержаниеРасхода(ВыборкаПризнанныхРасходов.ВидРасходов, ВыборкаПризнанныхРасходов.ХозяйственнаяОперация,
			ВыборкаПризнанныхРасходов.Партнер, ВыборкаПризнанныхРасходов.Договор);
			ЗаписьКУДиР.РеквизитыПервичногоДокумента = СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
				Строка(ВыборкаПризнанныхРасходов.ТипПервичногоДокумента), ВыборкаПризнанныхРасходов.НомерПервичногоДокумента,
				Формат(ВыборкаПризнанныхРасходов.ДатаПервичногоДокумента, "ДЛФ=D"));
			
		КонецЦикла;
		
		НаборЗаписейРасходов.Записать();
		
	КонецЦикла;
	
	Движения.КнигаУчетаДоходовИРасходов.Записать();
	
КонецПроцедуры

Процедура ЗаполнитьКУДиР2ПризнаннымиРасходами(ВыборкаРасходовКПризнанию, Движения)
	
	Пока ВыборкаРасходовКПризнанию.Следующий() Цикл
		
		ЗаписьРасхода = Движения.РасходыПриУСНОСиНМА.ДобавитьРасход();
		
		ЗаполнитьЗначенияСвойств(ЗаписьРасхода, ВыборкаРасходовКПризнанию);
		
		СуммаПризнания = Окр(ВыборкаРасходовКПризнанию.СуммаПризнания, 2);
		
		ОстатокПослеВычетаОкругленнойСуммыПризнания = ВыборкаРасходовКПризнанию.Графа5_ПервоначальнаяСтоимость 
			- СуммаПризнания * ВыборкаРасходовКПризнанию.Графа9_КолКварталовВНалПериоде;
		// В конце года могут остаться копейки (за счет округления признания), учтем их вместе с последним платежом:
		Если ВыборкаРасходовКПризнанию.Период = КонецГода(ВыборкаРасходовКПризнанию.Период)
			И ОстатокПослеВычетаОкругленнойСуммыПризнания <> 0 Тогда
				СуммаПризнания = СуммаПризнания + ОстатокПослеВычетаОкругленнойСуммыПризнания;
		КонецЕсли;
		
		ЗаписьРасхода.СуммаРасходов = СуммаПризнания;
		ЗаписьРасхода.СуммаОплаты = СуммаПризнания;
		ЗаписьРасхода.НДС = ЗаписьРасхода.СуммаРасходов * ВыборкаРасходовКПризнанию.НДС / ВыборкаРасходовКПризнанию.СуммаРасходов;
		
		ЗаписьКУДиР = Движения.КнигаУчетаДоходовИРасходовРаздел2.Добавить();
		ЗаполнитьЗначенияСвойств(ЗаписьКУДиР, ВыборкаРасходовКПризнанию);
		
		Если ВыборкаРасходовКПризнанию.Период = КонецГода(ВыборкаРасходовКПризнанию.Период) Тогда
			ЗаписьКУДиР.Графа12_СуммаРасходовЗаОтчетнПериод = ВыборкаРасходовКПризнанию.Графа5_ПервоначальнаяСтоимость;
		Иначе
			КварталовПрошло = Месяц(ВыборкаРасходовКПризнанию.Период) / 3 - (4 - ВыборкаРасходовКПризнанию.Графа9_КолКварталовВНалПериоде);
			ЗаписьКУДиР.Графа12_СуммаРасходовЗаОтчетнПериод = СуммаПризнания * КварталовПрошло;
		КонецЕсли;
		ЗаписьКУДиР.Графа13_СуммаРасходовЗаКвартал = СуммаПризнания;
		ЗаписьКУДиР.Графа15_ОстатокРасходов = ВыборкаРасходовКПризнанию.Графа5_ПервоначальнаяСтоимость - ЗаписьКУДиР.Графа12_СуммаРасходовЗаОтчетнПериод;
		ЗаписьКУДиР.Графа11_ДоляРасходовЗаКвартал = Окр(ВыборкаРасходовКПризнанию.Графа11_ДоляРасходовЗаКвартал, 2);
		
		ЗаписьКУДиР = Движения.КнигаУчетаДоходовИРасходов.Добавить();
		ЗаполнитьЗначенияСвойств(ЗаписьКУДиР, ВыборкаРасходовКПризнанию);
		ЗаписьКУДиР.Графа6 = СуммаПризнания;
		ЗаписьКУДиР.Графа7 = СуммаПризнания;
		Если ВыборкаРасходовКПризнанию.ВидРасходов = Перечисления.ВидыРасходовУСН.ОС Тогда
			ЗаписьКУДиР.Содержание = НСтр("ru = 'Признание расходов на приобретение основного средства'");
		Иначе
			ЗаписьКУДиР.Содержание = НСтр("ru = 'Признание расходов на приобретение нематериального актива'");
		КонецЕсли;
		ЗаписьКУДиР.Содержание = ЗаписьКУДиР.Содержание + " " + СтрШаблон(НСтр("ru = '""%1"" (дата оплаты: %2).'"),
				Строка(ВыборкаРасходовКПризнанию.ЭлементРасходов), Формат(ВыборкаРасходовКПризнанию.ДатаОплаты, "ДЛФ=D"));
		ЗаписьКУДиР.РеквизитыПервичногоДокумента = СтрШаблон(НСтр("ru = '%1 № %2 от %3'"),
				ВыборкаРасходовКПризнанию.ТипОперации, ВыборкаРасходовКПризнанию.Номер, Формат(ВыборкаРасходовКПризнанию.Период, "ДЛФ=D"));
		
	КонецЦикла;
	
	Движения.РасходыПриУСНОСиНМА.Записать();
	Движения.КнигаУчетаДоходовИРасходовРаздел2.Записать();
	Движения.КнигаУчетаДоходовИРасходов.Записать();
	
КонецПроцедуры

Функция СодержаниеРасхода(ВидРасхода, ХозяйственнаяОперация, Партнер, Договор)
	
	Если ВидРасхода = Перечисления.ВидыРасходовУСН.Номенклатура ИЛИ ВидРасхода = Перечисления.ВидыРасходовУСН.Материалы Тогда
		Информация = НСтр("ru = 'Признаны расходы на приобретение товаров'");
	ИначеЕсли ВидРасхода = Перечисления.ВидыРасходовУСН.Зарплата Тогда
		Информация = НСтр("ru = 'Признаны расходы по зарплате'");
	ИначеЕсли ВидРасхода = Перечисления.ВидыРасходовУСН.Налоги Тогда
		Информация = НСтр("ru = 'Признаны расходы по налогам'");
	Иначе
		Информация = НСтр("ru = 'Признаны расходы'");
	КонецЕсли;
	
	Если ВидРасхода = Перечисления.ВидыРасходовУСН.Зарплата ИЛИ ВидРасхода = Перечисления.ВидыРасходовУСН.Налоги
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеРасходыПодотчетногоЛица
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомиссионераКомиссия
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеНедостачиПриИнкассацииДенежныхСредств
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтражениеНедостачиПриИнвентаризацииДенежныхСредств
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств Тогда
		
		Содержание = Строка(ХозяйственнаяОперация) + ". " + Информация + ".";
		
	Иначе
		
		СтрокаДоговора = СтрШаблон(НСтр("ru = 'по договору ""%1""'"), Договор);
		СтрокаДоговора = ?(ЗначениеЗаполнено(Договор), " " + СтрокаДоговора, "");
		
		Содержание = НСтр("ru = '%1. %2 от поставщика ""%3""%4.'");
		
		Содержание = СтрШаблон(Содержание, ХозяйственнаяОперация, Информация, Партнер, СтрокаДоговора);
		
	КонецЕсли;
	
	Возврат Содержание;
	
КонецФункции

Функция ПризнанныеРасходыПоАмортизации(ПараметрыЗапроса)
	
	Запрос = ИнициализироватьЗапросПоПараметрам(ПараметрыЗапроса, Новый МенеджерВременныхТаблиц);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведенияНМАБухгалтерскийУчет.НематериальныйАктив КАК ЭлементРасходов,
	|	ПервоначальныеСведенияНМАБухгалтерскийУчет.Период КАК ДатаПринятияКУчету,
	|	ПервоначальныеСведенияНМАБухгалтерскийУчет.ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияНМАБухгалтерскийУчет.СрокПолезногоИспользования
	|ПОМЕСТИТЬ ПервоначальныеСведения
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет КАК ПервоначальныеСведенияНМАБухгалтерскийУчет
	|ГДЕ
	|	ПервоначальныеСведенияНМАБухгалтерскийУчет.Организация = &Организация
	|	И (ПервоначальныеСведенияНМАБухгалтерскийУчет.Регистратор ССЫЛКА Документ.ПринятиеКУчетуНМА
	|			ИЛИ ПервоначальныеСведенияНМАБухгалтерскийУчет.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.ОсновноеСредство,
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.Период,
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.ПервоначальнаяСтоимость,
	|	ДАТАВРЕМЯ(1, 1, 1)
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет КАК ПервоначальныеСведенияОСБухгалтерскийУчет
	|ГДЕ
	|	ПервоначальныеСведенияОСБухгалтерскийУчет.Организация = &Организация
	|	И (ПервоначальныеСведенияОСБухгалтерскийУчет.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|			ИЛИ ПервоначальныеСведенияОСБухгалтерскийУчет.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыПриУСНОСиНМА.ЭлементРасходов КАК ЭлементРасходов,
	|	РасходыПриУСНОСиНМА.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА РасходыПриУСНОСиНМА.СуммаОплатыПриход > 0
	|			ТОГДА РасходыПриУСНОСиНМА.Период
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДатаОплаты,
	|	СУММА(РасходыПриУСНОСиНМА.СуммаОплатыПриход) КАК СуммаОплаты,
	|	СУММА(РасходыПриУСНОСиНМА.СуммаОплатыРасход) КАК ПогашеннаяСуммаОплаты,
	|	РасходыПриУСНОСиНМА.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	РасходыПриУСНОСиНМА.ВидРасходов,
	|	СУММА(РасходыПриУСНОСиНМА.СуммаРасходовОборот + РасходыПриУСНОСиНМА.СуммаРасходовНачальныйОстаток) КАК СуммаРасходов,
	|	СУММА(РасходыПриУСНОСиНМА.НДСОборот + РасходыПриУСНОСиНМА.НДСНачальныйОстаток) КАК НДС
	|ПОМЕСТИТЬ ПринимаемыеРасходы
	|ИЗ
	|	РегистрНакопления.РасходыПриУСНОСиНМА.ОстаткиИОбороты(НАЧАЛОПЕРИОДА(&НачДата, ГОД), &КонГраница, Регистратор, ДвиженияИГраницыПериода, Организация = &Организация) КАК РасходыПриУСНОСиНМА
	|ГДЕ
	|	РасходыПриУСНОСиНМА.Период <> &КонДата
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПриУСНОСиНМА.ЭлементРасходов,
	|	РасходыПриУСНОСиНМА.Организация,
	|	РасходыПриУСНОСиНМА.ДокументВозникновенияРасходов,
	|	РасходыПриУСНОСиНМА.ВидРасходов,
	|	ВЫБОР
	|		КОГДА РасходыПриУСНОСиНМА.СуммаОплатыПриход > 0
	|			ТОГДА РасходыПриУСНОСиНМА.Период
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ЭлементРасходов,
	|	ДокументВозникновенияРасходов,
	|	ДатаОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПринимаемыеРасходыОплаты.ЭлементРасходов КАК ЭлементРасходов,
	|	ПринимаемыеРасходыОплаты.Организация,
	|	ПринимаемыеРасходыОплаты.ДатаОплаты,
	|	ПринимаемыеРасходыОплаты.ДокументВозникновенияРасходов,
	|	КОНЕЦПЕРИОДА(&КонДата, МЕСЯЦ) КАК Период,
	|	ПринимаемыеРасходыОплаты.ВидРасходов,
	|	ПервоначальныеСведения.ДатаПринятияКУчету КАК Графа3_ДатаВводаВЭксплуатацию,
	|	ПринимаемыеРасходы.СуммаРасходов,
	|	ПринимаемыеРасходы.НДС,
	|	5 - КВАРТАЛ(ПринимаемыеРасходыОплаты.ДатаОплаты) КАК Графа9_КолКварталовВНалПериоде,
	|	1 КАК Графа8_КолКварталовВОтчетномПериоде,
	|	ПринимаемыеРасходыОплаты.СуммаОплаты КАК Графа5_ПервоначальнаяСтоимость,
	|	ПринимаемыеРасходыОплаты.СуммаОплаты / (5 - КВАРТАЛ(ПринимаемыеРасходыОплаты.ДатаОплаты)) КАК СуммаПризнания,
	|	100 КАК Графа10_ДоляРасходовЗаНалПериод,
	|	100 / (5 - КВАРТАЛ(ПринимаемыеРасходыОплаты.ДатаОплаты)) КАК Графа11_ДоляРасходовЗаКвартал,
	|	&Ссылка КАК Регистратор,
	|	&ТипОперации КАК ТипОперации,
	|	&Номер КАК Номер
	|ИЗ
	|	ПринимаемыеРасходы КАК ПринимаемыеРасходыОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПервоначальныеСведения КАК ПервоначальныеСведения
	|		ПО ПринимаемыеРасходыОплаты.ЭлементРасходов = ПервоначальныеСведения.ЭлементРасходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПринимаемыеРасходы КАК ПринимаемыеРасходы
	|		ПО ПринимаемыеРасходыОплаты.Организация = ПринимаемыеРасходы.Организация
	|			И ПринимаемыеРасходыОплаты.ЭлементРасходов = ПринимаемыеРасходы.ЭлементРасходов
	|			И ПринимаемыеРасходыОплаты.ДокументВозникновенияРасходов = ПринимаемыеРасходы.ДокументВозникновенияРасходов
	|			И (ПринимаемыеРасходы.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1))
	|ГДЕ
	|	НЕ ПринимаемыеРасходыОплаты.ДатаОплаты = ДАТАВРЕМЯ(1, 1, 1)";
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

Функция КоэффициентОтнесенияРасходовКПрочейДеятельности(Параметры)
	
	Запрос = ИнициализироватьЗапросПоПараметрам(Параметры, Новый МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕстьNULL(СУММА(КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот), 0) КАК ДоходУСН,
	|	ЕстьNULL(СУММА(КнигаУчетаДоходовИРасходовОбороты.ДоходЕНВДОборот), 0) КАК ДоходЕНВД
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачГраница, &КонГраница, , Организация = &Организация) КАК КнигаУчетаДоходовИРасходовОбороты";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Коэффициент = 0;
	Если Выборка.Следующий() Тогда
		ОбщийДоход = Выборка.ДоходУСН + Выборка.ДоходЕНВД;
		Коэффициент = ?(ОбщийДоход = 0, 0, Выборка.ДоходЕНВД / ОбщийДоход);
	КонецЕсли;
	
	Возврат Коэффициент;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииПризнанияРасходов

Функция ВременныеТаблицыДляЗаполненияРасходов(Параметры)
	
	ВременныеТаблицы = Новый МенеджерВременныхТаблиц;
	
	СтруктураПараметровЗапроса = Параметры;
	СтруктураПараметровЗапроса.Вставить("ВалютаРегл", ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	СтруктураПараметровЗапроса.Вставить("СчетаМатериалов", БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.Материалы));
	СтруктураПараметровЗапроса.Вставить("ИсключающиесяХозОперации", ИсключающиесяХозОперацииВПрочихРасходах());
	СтруктураПараметровЗапроса.Вставить("СтатьиЗарплатыИНалогов", СтатьиЗарплатыИНалогов());
	СтруктураПараметровЗапроса.Вставить("ТипыНалоговНДФЛ", ТипыНалоговНДФЛ());
	ДатаНачалаАнализаОплатыНалогов = Макс(ДобавитьМесяц(Параметры.НачДата, -12),
										Константы.ДатаНачалаВеденияРеглУчета.Получить(),
										ДатаНачалаВеденияУчетаУСНДоходыМинусРасходы(Параметры.Организация, Параметры.НачДата));
	СтруктураПараметровЗапроса.Вставить("ДатаНачалаАнализаОплатыНалогов", ДатаНачалаАнализаОплатыНалогов);
	
	Запрос = ИнициализироватьЗапросПоПараметрам(СтруктураПараметровЗапроса, ВременныеТаблицы);
	
	ЗапросыВременныхТаблиц = Новый Массив;
	
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаОстатков());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаОстатковДопРасходов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаОпределенияМатериалов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаСоответствияДокументовВозникновенияРасходов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаРасходовПоСебестоимости());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаПрочихРасходовПоТаможне());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаПрочихРасходов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаРасходовПоЗарплатеИНалогам());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаРасходовПоКредитам());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаПоОплатам());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаПоОплатамПодотчетникам());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаПоОплатамЗарплатыИНалогов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаКДокументамВозникновенияРасходов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаКДокументамДопРасходов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаКДокументамСписанияРасходов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаКДокументамОплатыРасходов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаТаблицыРегистраторовРасходов());
	ЗапросыВременныхТаблиц.Добавить(ТекстЗапросаРегистраторовСторноКУДиРДоходы());
	
	Запрос.Текст = СтрСоединить(ЗапросыВременныхТаблиц, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	Запрос.Выполнить();
	
	Возврат Запрос.МенеджерВременныхТаблиц;
	
КонецФункции

Процедура ЗаполнитьРегистрыРасходовУСН(ИсходныеДанные, КоэффициентОтнесенияРасходовКПрочейДеятельности, КоличествоОбработанныхДанных = 0)
	
	ВидыДеятельности = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат;
	ИмяСобытияДляЗаписиОшибкиВЖурналРегистрации = 
		НСтр("ru = 'Признание расходов при УСН. Не выполнена запись расходов в служебный регистр УСН.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()); // строка записывается в ИБ
	
	Результат = ВыборкаДокументовДляЗаполненияРасходов(ИсходныеДанные);
	ВыборкаДокументов = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаОстатков = ВыборкаТаблицыОстатков(ИсходныеДанные);
	ВыборкаСуммыОплатПоДокументам = ВыборкаСуммОплат(ИсходныеДанные);
	
	ТаблицаДляЗаписиВКУДиР = РегистрыНакопления.КнигаУчетаДоходовИРасходов.СоздатьНаборЗаписей().Выгрузить();
	
	Пока ВыборкаДокументов.Следующий() Цикл
		
		Если ВыборкаДокументов.СуммаОплаты > 0 Тогда
			// Это документ оплаты, найдем общую сумму оплаты по этому документу...
			СтруктураПоиска = Новый Структура("ДокументОплаты", ВыборкаДокументов.Регистратор);
			Если ВыборкаСуммыОплатПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда
				СуммаОплатыПоДокументу = ВыборкаСуммыОплатПоДокументам.Сумма;
			Иначе
				ВыборкаСуммыОплатПоДокументам.Сбросить();
				СуммаОплатыПоДокументу = ?(ВыборкаСуммыОплатПоДокументам.НайтиСледующий(СтруктураПоиска), ВыборкаСуммыОплатПоДокументам.Сумма, 0);
			КонецЕсли;
		КонецЕсли;
				
		ВыборкаВидаРегистра = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаВидаРегистра.Следующий() Цикл
			
			НаборЗаписей = РегистрыНакопления[ВыборкаВидаРегистра.ВидРегистра].СоздатьНаборЗаписей();
			НаборЗаписей.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокументов.Регистратор);
			
			Если НЕ ЗначениеЗаполнено(НаборЗаписей.Отбор.Регистратор.Значение) Тогда
				ЗаписьЖурналаРегистрации(ИмяСобытияДляЗаписиОшибкиВЖурналРегистрации,
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.РегистрыНакопления[ВыборкаВидаРегистра.ВидРегистра],
					ВыборкаДокументов.Регистратор,
					НСтр("ru = 'Документ, регистрирующий расходы, не является регистратором для служебного регистра УСН.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),  // строка записывается в ИБ
					РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
										 
				Продолжить;
				
			КонецЕсли;
			
			Выборка = ВыборкаВидаРегистра.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				
				НоваяЗапись = Неопределено; // Очищаем, для корректной обработки случаев, когда новые записи не добавляются.
				
				Если НЕ ЗначениеЗаполнено(Выборка.ДокументВозникновенияРасходов) Тогда
					ЗаписьЖурналаРегистрации(ИмяСобытияДляЗаписиОшибкиВЖурналРегистрации,
						УровеньЖурналаРегистрации.Ошибка,
						Метаданные.РегистрыНакопления[ВыборкаВидаРегистра.ВидРегистра],
						Выборка.Регистратор,
						НСтр("ru = 'Не задан документ возникновения расходов.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),  // строка записывается в ИБ
						РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
											 
					Продолжить;
					
				КонецЕсли;
				
				СтрокаОстатка = СтрокаОстаткаПоПараметрамВыборки(ТаблицаОстатков, Выборка);
				
				Если (Выборка.ВидОперации = "Аванс" ИЛИ Выборка.ВидОперации = "Оплата" ИЛИ Выборка.ВидОперации = "АвансБезРазбивкиПоДокументам"
					ИЛИ Выборка.ВидОперации = "ОплатаБезРазбивкиПоДокументам") Тогда
					
					#Область ОплатаРасходов
										
					ОсталосьОплатитьПоТекущейВыборке = СтрокаОстатка.СуммаРасходов - СтрокаОстатка.СуммаОплаты;
					
					Если ОсталосьОплатитьПоТекущейВыборке > 0 И СуммаОплатыПоДокументу > 0 Тогда
						
						НоваяЗапись = НаборЗаписей.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка, , "СуммаРасходов, НДС, СуммаОплаты");
						НоваяЗапись.СуммаОплаты = Мин(Выборка.СуммаОплаты, СуммаОплатыПоДокументу, ОсталосьОплатитьПоТекущейВыборке);
						СуммаОплатыПоДокументу = СуммаОплатыПоДокументу - НоваяЗапись.СуммаОплаты;
						СтрокаОстатка.СуммаОплаты =  СтрокаОстатка.СуммаОплаты + НоваяЗапись.СуммаОплаты; 
						
					КонецЕсли;
					
					#КонецОбласти
					
				ИначеЕсли Выборка.ВидОперации = "Списание" ИЛИ Выборка.ВидОперации = "ВозвратКлиента" Тогда
					
					#Область ОтгрузкаРасходов
					
					Если Выборка.ВидДеятельности = ВидыДеятельности.РаспределяемыеЗатраты Тогда
						КоэффициентЕНВД = КоэффициентОтнесенияРасходовКПрочейДеятельности;
					Иначе
						КоэффициентЕНВД = ?(Выборка.ВидДеятельности = ВидыДеятельности.ОсновнаяСистемаНалогообложения, 0, 1);
					КонецЕсли;
					КоэффициентСписания = ?(Выборка.ПризнаватьРасходамиПриУСН, КоэффициентЕНВД, 1);
					СуммаСписания = Окр(Выборка.СуммаОтгрузки * КоэффициентСписания, 2);
					
					Если Выборка.ВидОперации = "Списание" И Выборка.ВидРасходов = Перечисления.ВидыРасходовУСН.Номенклатура Тогда
						
						#Область НоменклатураСписаниеРасходы
						НоваяЗапись = НаборЗаписей.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка, , "СуммаРасходов, СуммаОплаты, НДС");
						Если КоэффициентСписания > 0 Тогда
							НоваяЗапись.СуммаРасходов = -СуммаСписания;
							НоваяЗапись.НДС = -Окр(Выборка.НДС * КоэффициентСписания, 2);
							НоваяЗапись.СуммаОплаты = НоваяЗапись.СуммаРасходов;
						КонецЕсли;
						НоваяЗапись.СуммаОтгрузки = Выборка.СуммаОтгрузки - СуммаСписания;
						#КонецОбласти
						
						#Область НоменклатураСписаниеКУДиР
						Если КоэффициентЕНВД > 0 Тогда
							СуммаЕНВД = Окр(Выборка.СуммаОтгрузки * КоэффициентЕНВД, 2);
							ДобавитьСтрокуВТаблицуКУДиР(ТаблицаДляЗаписиВКУДиР.Добавить(), Выборка, 0, 0, СуммаЕНВД);
						КонецЕсли;
						#КонецОбласти
						
						#Область НоменклатураСписаниеОстатки
						СтрокаОстатка.СуммаОтгрузки = СтрокаОстатка.СуммаОтгрузки + Выборка.СуммаОтгрузки;
						СтрокаОстатка.НДС = СтрокаОстатка.НДС + НоваяЗапись.НДС;
						#КонецОбласти
						
					КонецЕсли;
					
					Если Выборка.ВидОперации = "ВозвратКлиента" И Выборка.ВидРасходов = Перечисления.ВидыРасходовУСН.Номенклатура Тогда
						
						СторноПрошлогоРасхода = СтрокаОстатка.СуммаОтгрузки < -Выборка.СуммаОтгрузки;
						
						#Область НоменклатураСторноРасходы
						НоваяЗапись = НаборЗаписей.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка, , "СуммаРасходов, СуммаОплаты, НДС");
						Если КоэффициентСписания > 0 ИЛИ СторноПрошлогоРасхода Тогда
							НоваяЗапись.СуммаРасходов = -?(СторноПрошлогоРасхода, Выборка.СуммаОтгрузки, СуммаСписания);
							НоваяЗапись.НДС = -?(СторноПрошлогоРасхода, Выборка.НДС, -Окр(Выборка.НДС * КоэффициентСписания, 2));
							НоваяЗапись.СуммаОплаты = НоваяЗапись.СуммаРасходов;
						КонецЕсли;
						НоваяЗапись.СуммаОтгрузки = ?(СторноПрошлогоРасхода, 0, Выборка.СуммаОтгрузки - СуммаСписания);
						#КонецОбласти
						
						#Область НоменклатураСторноКУДиР
						Если КоэффициентЕНВД > 0 ИЛИ СторноПрошлогоРасхода Тогда
							СуммаСторно = ?(СторноПрошлогоРасхода, Выборка.СуммаОтгрузки - СуммаСписания, 0);
							СторноНДС = ?(СторноПрошлогоРасхода, Выборка.НДС - Окр(Выборка.НДС * КоэффициентСписания, 2), 0);
							СуммаЕНВД = Окр(Выборка.СуммаОтгрузки * КоэффициентЕНВД, 2);
							ДобавитьСтрокуВТаблицуКУДиР(ТаблицаДляЗаписиВКУДиР.Добавить(), Выборка, СуммаСторно, СторноНДС, СуммаЕНВД);
						КонецЕсли;
						#КонецОбласти
						
						#Область НоменклатураСторноОстатки
						Если СторноПрошлогоРасхода Тогда
							СтрокаОстатка.СуммаРасходов = СтрокаОстатка.СуммаРасходов + НоваяЗапись.СуммаРасходов;
							СтрокаОстатка.СуммаОплаты = СтрокаОстатка.СуммаОплаты + НоваяЗапись.СуммаОплаты;
						КонецЕсли;
						СтрокаОстатка.СуммаОтгрузки = СтрокаОстатка.СуммаОтгрузки + НоваяЗапись.СуммаОтгрузки;
						СтрокаОстатка.НДС = СтрокаОстатка.НДС + НоваяЗапись.НДС;
						#КонецОбласти
						           
					КонецЕсли;
					
					Если Выборка.ВидОперации = "Списание" И Выборка.ВидРасходов = Перечисления.ВидыРасходовУСН.Материалы Тогда
						
						ОстатокВТекущемПериоде = СтрокаОстатка.СуммаРасходов - СтрокаОстатка.СуммаОтгрузки;
						
						#Область МатериалыСписаниеРасходы
						Если КоэффициентСписания > 0 И ОстатокВТекущемПериоде > 0 Тогда
							НоваяЗапись = НаборЗаписей.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка, , "СуммаРасходов, СуммаОплаты, НДС");
							НоваяЗапись.СуммаРасходов = -Мин(ОстатокВТекущемПериоде, СуммаСписания);
							НоваяЗапись.НДС = -Мин(СтрокаОстатка.НДС, Окр(Выборка.НДС * КоэффициентСписания, 2));
							НоваяЗапись.СуммаОплаты = НоваяЗапись.СуммаРасходов;
						КонецЕсли;
						#КонецОбласти
						
						#Область МатериалыСписаниеКУДиР
						Если КоэффициентЕНВД > 0 ИЛИ КоэффициентСписания > 0 И ОстатокВТекущемПериоде < СуммаСписания Тогда
							// Списываем только тогда, когда на регистре расходов была сумма меньшая, чем надо было списать.
							СуммаСторно = -?(ОстатокВТекущемПериоде < СуммаСписания, СуммаСписания - ОстатокВТекущемПериоде, 0); 
							СторноНДС = -?(ОстатокВТекущемПериоде < СуммаСписания, Окр(Выборка.НДС * КоэффициентСписания, 2) - СтрокаОстатка.НДС, 0);
							СуммаЕНВД = Окр(Выборка.СуммаОтгрузки * КоэффициентЕНВД, 2);
							ДобавитьСтрокуВТаблицуКУДиР(ТаблицаДляЗаписиВКУДиР.Добавить(), Выборка, СуммаСторно, СторноНДС, СуммаЕНВД);
						КонецЕсли;
						#КонецОбласти
						
						#Область МатериалыСписаниеОстатки
						Если КоэффициентСписания > 0 И ОстатокВТекущемПериоде > 0 И НоваяЗапись <> Неопределено Тогда
							СтрокаОстатка.НДС = СтрокаОстатка.НДС + НоваяЗапись.НДС;
							СтрокаОстатка.СуммаОтгрузки = СтрокаОстатка.СуммаОтгрузки - НоваяЗапись.СуммаРасходов;
						КонецЕсли;
						#КонецОбласти

					КонецЕсли;
					
					Если Выборка.ВидОперации = "ВозвратКлиента" И Выборка.ВидРасходов = Перечисления.ВидыРасходовУСН.Материалы Тогда
						
						СторноПрошлогоПериода = СтрокаОстатка.СуммаОтгрузки < -Выборка.СуммаОтгрузки;
						
						#Область МатериалыСторноРасходы
						Если КоэффициентСписания > 0 И Не СторноПрошлогоПериода Тогда
							НоваяЗапись = НаборЗаписей.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка, , "СуммаРасходов, СуммаОплаты, НДС");
							НоваяЗапись.СуммаРасходов = Мин(СтрокаОстатка.СуммаОтгрузки, -СуммаСписания);
							НоваяЗапись.НДС = НоваяЗапись.СуммаРасходов * Выборка.НДС / Выборка.СуммаОтгрузки;
							НоваяЗапись.СуммаОплаты = НоваяЗапись.СуммаРасходов
						КонецЕсли;
						#КонецОбласти
						
						#Область МатериалыСторноКУДиР
						Если КоэффициентСписания > 0 ИЛИ СторноПрошлогоПериода Тогда
							СуммаСторно = ?(СторноПрошлогоПериода, -СуммаСписания, 0); 
							СторноНДС = ?(СторноПрошлогоПериода, -Окр(Выборка.НДС * КоэффициентСписания, 2), 0);
							СуммаЕНВД = Окр(Выборка.СуммаОтгрузки * КоэффициентЕНВД, 2);
							ДобавитьСтрокуВТаблицуКУДиР(ТаблицаДляЗаписиВКУДиР.Добавить(), Выборка, СуммаСторно, СторноНДС, СуммаЕНВД);
						КонецЕсли;
						#КонецОбласти
						
						#Область МатериалыСторноОстатки
						Если СтрокаОстатка.СуммаОтгрузки > 0 И НоваяЗапись <> Неопределено Тогда
							СтрокаОстатка.НДС = СтрокаОстатка.НДС + НоваяЗапись.НДС;
							СтрокаОстатка.СуммаОтгрузки = СтрокаОстатка.СуммаОтгрузки - НоваяЗапись.СуммаРасходов;
						КонецЕсли;
						#КонецОбласти
						
					КонецЕсли;
					
					#КонецОбласти
					
				Иначе
					
					#Область Расходы
					
					НоваяЗапись = НаборЗаписей.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
					НоваяЗапись.СуммаРасходов = Окр(Выборка.СуммаРасходов, 2);
					НоваяЗапись.НДС = Окр(Выборка.НДС, 2);
					
					Если Выборка.ВидОперации = "РасходПриОплате" Тогда
						НоваяЗапись.СуммаОплаты = НоваяЗапись.СуммаРасходов;
						СтрокаОстатка.СуммаОплаты = СтрокаОстатка.СуммаОплаты + НоваяЗапись.СуммаОплаты;
					КонецЕсли;
					
					Если Выборка.ВидОперации = "ВозвратПоставщику" Тогда
						Если СтрокаОстатка.СуммаРасходов >= Выборка.СуммаРасходов Тогда
							НоваяЗапись.СуммаОплаты = -Мин(НоваяЗапись.СуммаРасходов, СтрокаОстатка.СуммаОплаты);
							НоваяЗапись.СуммаРасходов = -НоваяЗапись.СуммаРасходов;
							НоваяЗапись.НДС = -НоваяЗапись.НДС;
							СтрокаОстатка.СуммаРасходов = СтрокаОстатка.СуммаРасходов + НоваяЗапись.СуммаРасходов;
							СтрокаОстатка.НДС = СтрокаОстатка.НДС + НоваяЗапись.НДС;
							СтрокаОстатка.СуммаОплаты = СтрокаОстатка.СуммаОплаты + НоваяЗапись.СуммаОплаты;
						Иначе
							НаборЗаписей.Удалить(НоваяЗапись);
							ДобавитьСтрокуВТаблицуКУДиР(ТаблицаДляЗаписиВКУДиР.Добавить(), Выборка, -НоваяЗапись.СуммаРасходов, -НоваяЗапись.НДС, 0);
						КонецЕсли;
					КонецЕсли;
					
					Если (Не Выборка.ВидДеятельности = ВидыДеятельности.ОсновнаяСистемаНалогообложения
						ИЛИ Не Выборка.ПризнаватьРасходамиПриУСН) И Выборка.ВидРегистра = "РасходыПриУСН" Тогда
						// Если услуги не должны признаваться расходами УСН или идут на ЕНВД, сразу спишем их с регистра по аналогии с товарами и материалами. 
						
						КоэффициентЕНВД = 0;
						Если Не Выборка.ВидДеятельности = ВидыДеятельности.ОсновнаяСистемаНалогообложения Тогда
							КоэффициентЕНВД = ?(Выборка.ВидДеятельности = ВидыДеятельности.РаспределяемыеЗатраты, КоэффициентОтнесенияРасходовКПрочейДеятельности, 1);
							Если КоэффициентЕНВД > 0 Тогда
								ДобавитьСтрокуВТаблицуКУДиР(ТаблицаДляЗаписиВКУДиР.Добавить(), Выборка, 0, 0, Окр(Выборка.СуммаРасходов * КоэффициентЕНВД, 2));
							КонецЕсли;
						КонецЕсли;
												
						КоэффициентСписания = ?(Выборка.ПризнаватьРасходамиПриУСН, КоэффициентЕНВД, 1);
						Если КоэффициентСписания > 0 Тогда
							ЗаписьСписанияНеПризнаваемыхРасходов = НаборЗаписей.Добавить();
							ЗаполнитьЗначенияСвойств(ЗаписьСписанияНеПризнаваемыхРасходов, НоваяЗапись);
							// чтобы в отчете по прочим расходом непризнанная сумма отдельно выводилась:
							ЗаписьСписанияНеПризнаваемыхРасходов.ВидДвижения = ВидДвиженияНакопления.Расход;
							ЗаписьСписанияНеПризнаваемыхРасходов.СуммаРасходов = Окр(Выборка.СуммаРасходов * КоэффициентСписания, 2);
							ЗаписьСписанияНеПризнаваемыхРасходов.НДС = Окр(Выборка.НДС * КоэффициентСписания, 2);
							// Списываем в оплату либо всю сумм списания (если уже оплачено больше), либо сумму оплаты за вычетом остающейся суммы для признания:
							ОставшаясяСуммаДляПризнания = СтрокаОстатка.СуммаРасходов - ЗаписьСписанияНеПризнаваемыхРасходов.СуммаРасходов;
							ЗаписьСписанияНеПризнаваемыхРасходов.СуммаОплаты = Мин(ЗаписьСписанияНеПризнаваемыхРасходов.СуммаРасходов,
								?(СтрокаОстатка.СуммаОплаты > ОставшаясяСуммаДляПризнания, СтрокаОстатка.СуммаОплаты - ОставшаясяСуммаДляПризнания, 0));
							
							СтрокаОстатка.СуммаРасходов = СтрокаОстатка.СуммаРасходов - ЗаписьСписанияНеПризнаваемыхРасходов.СуммаРасходов;
							СтрокаОстатка.НДС = СтрокаОстатка.НДС - ЗаписьСписанияНеПризнаваемыхРасходов.НДС;
							СтрокаОстатка.СуммаОплаты = СтрокаОстатка.СуммаОплаты - ЗаписьСписанияНеПризнаваемыхРасходов.СуммаОплаты;
						КонецЕсли;
						
					КонецЕсли;						
					
					#КонецОбласти
									
				КонецЕсли;
				
				Если Выборка.ВидРегистра = "РасходыПриУСНОСиНМА" И НоваяЗапись <> Неопределено Тогда
					НоваяЗапись.ВидРасходов = ?(ТипЗнч(Выборка.ВидРасходов) = Тип("СправочникСсылка.ОбъектыЭксплуатации"),
					Перечисления.ВидыРасходовУСН.ОС, Перечисления.ВидыРасходовУСН.НМА);
					НоваяЗапись.ЭлементРасходов = Выборка.ВидРасходов;
				КонецЕсли;
				
				КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + 1;
				
			КонецЦикла;
			
			НаборЗаписей.Записать(Ложь);
			
		КонецЦикла;
		
		#Область ЗаписьДанныхВКУДиР
		// В процессе записи движений некоторым документам могло понадобиться сторнировать сделанные движения в КУДиР или добавить новые, отразим это:
		
		Если ТаблицаДляЗаписиВКУДиР.Количество() Тогда
			
			РеквизитыПервичногоДокумента = РеквизитыПервичногоДокумента(ВыборкаДокументов.Регистратор,,, Истина);
			
			ЗаписиКУДиР = РегистрыНакопления.КнигаУчетаДоходовИРасходов.СоздатьНаборЗаписей();
			ЗаписиКУДиР.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
			ЗаписиКУДиР.Отбор.Регистратор.Установить(ВыборкаДокументов.Регистратор);
			
			Если НЕ ЗначениеЗаполнено(ЗаписиКУДиР.Отбор.Регистратор.Значение) Тогда
				ЗаписьЖурналаРегистрации(ИмяСобытияДляЗаписиОшибкиВЖурналРегистрации,
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.РегистрыНакопления.КнигаУчетаДоходовИРасходов,
					ВыборкаДокументов.Регистратор,
					НСтр("ru = 'Документ, сторнирующий расходы или регистрирующий расходы по ЕНВД, не является регистратором для регистра КУДиР.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),  // строка записывается в ИБ
					РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
			Иначе
			
				ЗаписиКУДиР.Загрузить(ТаблицаДляЗаписиВКУДиР);
				Для каждого СтрокаЗаписи из ЗаписиКУДиР Цикл
					СтрокаЗаписи.РеквизитыПервичногоДокумента = РеквизитыПервичногоДокумента;
					СтрокаЗаписи.Активность = Истина;
				КонецЦикла;
				
				ЗаписиКУДиР.Записать(Ложь);
				
			КонецЕсли;
			
			ТаблицаДляЗаписиВКУДиР.Очистить();
			
		КонецЕсли;
		
		#КонецОбласти
		
	КонецЦикла;
	
КонецПроцедуры

Функция ИнициализироватьЗапросПоПараметрам(ПараметрыЗапроса, ВременныеТаблицы)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	Для каждого Параметр из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	
	Возврат Запрос;	
	
КонецФункции

Функция ИсключающиесяХозОперацииВПрочихРасходах()
	
	ИсключающиесяХозОперации = Новый Массив;
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыДепозитыПрибыль);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыДепозитыУбыток);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыДСПрибыль);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыДСУбыток);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыЗаймыВыданныеПрибыль);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыЗаймыВыданныеУбыток);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыКлиентыПрибыль);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыКлиентыУбыток);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыКредитыИЗаймыПрибыль);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыКредитыИЗаймыУбыток);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыПоставщикиПрибыль);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыПоставщикиУбыток);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПереоценкаДенежныхСредств);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПереоценкаКредитовИДепозитов);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПереоценкаРасчетовСКлиентами);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПереоценкаРасчетовСПоставщиками);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакрытиеМесяца);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РаспределениеНДС);
	ИсключающиесяХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПустаяСсылка());
	
	Возврат ИсключающиесяХозОперации;
	
КонецФункции

Функция СтатьиЗарплатыИНалогов()
	
	Статьи = Новый Массив;
	
	Статьи.Добавить(ПланыВидовХарактеристик.СтатьиАктивовПассивов.Налоги);
	Статьи.Добавить(ПланыВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда);
	
	Возврат Статьи;
	
КонецФункции

Функция ТипыНалоговНДФЛ()
	
	ТипыНДФЛ = Новый Массив;
	
	ВидыОперацийНДФЛ = Перечисления.ВидыОперацийПоЗарплате.ВидыОперацийПоГруппам("НДФЛ");
	Для каждого ВидОперацииНДФЛ из ВидыОперацийНДФЛ Цикл
		ТипНДФЛ = Перечисления.ТипыНалогов.ТипНалогаОперацииПоЗарплаты(ВидОперацииНДФЛ);
		Если ЗначениеЗаполнено(ТипНДФЛ) Тогда
			ТипыНДФЛ.Добавить(ТипНДФЛ);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТипыНДФЛ;
	
КонецФункции

Функция СтрокаОстаткаПоПараметрамВыборки(ТаблицаОстатков, Выборка)
	
	СтруктураПоиска = Новый Структура("ВидРасходов, ДокументВозникновенияРасходов");
	Если Не Выборка.ВидРасходов = Перечисления.ВидыРасходовУСН.Материалы Тогда
		СтруктураПоиска.Вставить("СтатьяРасходов");
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
	
	СтрокиОстатка = ТаблицаОстатков.НайтиСтроки(СтруктураПоиска);
	Если СтрокиОстатка.Количество() Тогда
		СтрокаОстатка = СтрокиОстатка.Получить(0);
	Иначе
		СтрокаОстатка = ТаблицаОстатков.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаОстатка, СтруктураПоиска);
		СтрокаОстатка.СуммаОплаты = 0;
		СтрокаОстатка.СуммаРасходов = 0;
		СтрокаОстатка.НДС = 0;
		СтрокаОстатка.СуммаОтгрузки = 0;
	КонецЕсли;
	
	Возврат СтрокаОстатка;
					
КонецФункции

Процедура ДобавитьСтрокуВТаблицуКУДиР(СтрокаКУДиР, Выборка, Сумма, НДС, СуммаЕНВД = 0)
	
	ЗаполнитьЗначенияСвойств(СтрокаКУДиР, Выборка);
	
	СтрокаПоясненияСторно = "";
	Если Сумма < 0 Тогда
		
		Если ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Выборка, "ПризнаватьРасходамиПриУСН")
			И ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Выборка, "ВидДеятельности") И Выборка.ПризнаватьРасходамиПриУСН Тогда
			
			Если Выборка.ВидДеятельности = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения Тогда
				СтрокаПоясненияСторно = НСтр("ru = 'Сторнированы расходы в результате списания на деятельность ЕНВД.'");
			ИначеЕсли Выборка.ВидДеятельности = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты Тогда
				СтрокаПоясненияСторно = НСтр("ru = 'Сторнированы расходы в результате распределения УСН/ЕНВД.'");
			Иначе
				СтрокаПоясненияСторно = НСтр("ru = 'Сторнированы расходы.'");
			КонецЕсли;
			
		Иначе
			СтрокаПоясненияСторно = НСтр("ru = 'Сторнированы расходы.'");
		КонецЕсли;
		
	КонецЕсли;
	
	СтрокаКУДиР.Содержание = Строка(Выборка.ХозяйственнаяОперация) + " " + СтрокаПоясненияСторно;
	СтрокаКУДиР.Графа6 = Сумма + СуммаЕНВД;
	СтрокаКУДиР.Графа7 = Сумма;
	СтрокаКУДиР.НДС = НДС;
	СтрокаКУДиР.РасходЕНВД = СуммаЕНВД;
	
КонецПроцедуры

#Область Запросы

Функция ТекстЗапросаОстатков()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РасходыПриУСНМатериалыОстатки.Организация КАК Организация,
	|	РасходыПриУСНМатериалыОстатки.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	РасходыПриУСНМатериалыОстатки.СуммаРасходовОстаток,
	|	РасходыПриУСНМатериалыОстатки.НДСОстаток,
	|	РасходыПриУСНМатериалыОстатки.СуммаОплатыОстаток,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы) КАК ВидРасходов,
	|	0 КАК СуммаОтгрузкиОстаток,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.РасходыПриУСНМатериалы.Остатки(&НачГраница, Организация = &Организация) КАК РасходыПриУСНМатериалыОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыПриУСНТоварыОстатки.Организация,
	|	РасходыПриУСНТоварыОстатки.ДокументВозникновенияРасходов,
	|	РасходыПриУСНТоварыОстатки.СуммаРасходовОстаток,
	|	РасходыПриУСНТоварыОстатки.НДСОстаток,
	|	РасходыПриУСНТоварыОстатки.СуммаОплатыОстаток,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура),
	|	РасходыПриУСНТоварыОстатки.СуммаОтгрузкиОстаток,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|ИЗ
	|	РегистрНакопления.РасходыПриУСНТовары.Остатки(&НачГраница, Организация = &Организация) КАК РасходыПриУСНТоварыОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыПриУСНОстатки.Организация,
	|	РасходыПриУСНОстатки.ДокументВозникновенияРасходов,
	|	РасходыПриУСНОстатки.СуммаРасходовОстаток,
	|	РасходыПриУСНОстатки.НДСОстаток,
	|	РасходыПриУСНОстатки.СуммаОплатыОстаток,
	|	РасходыПриУСНОстатки.ВидРасходов,
	|	0,
	|	РасходыПриУСНОстатки.СтатьяРасходов
	|ИЗ
	|	РегистрНакопления.РасходыПриУСН.Остатки(&НачГраница, Организация = &Организация) КАК РасходыПриУСНОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыПриУСНАмортизацияОстатки.Организация,
	|	РасходыПриУСНАмортизацияОстатки.ДокументВозникновенияРасходов,
	|	РасходыПриУСНАмортизацияОстатки.СуммаРасходовОстаток,
	|	РасходыПриУСНАмортизацияОстатки.НДСОстаток,
	|	РасходыПриУСНАмортизацияОстатки.СуммаОплатыОстаток,
	|	РасходыПриУСНАмортизацияОстатки.ЭлементРасходов,
	|	0,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|ИЗ
	|	РегистрНакопления.РасходыПриУСНОСиНМА.Остатки(&НачГраница, Организация = &Организация) КАК РасходыПриУСНАмортизацияОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументВозникновенияРасходов,
	|	ВидРасходов,
	|	СтатьяРасходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстатковДопРасходов()
	
	ТекстЗапроса = 	
	"ВЫБРАТЬ
	|	Остатки.Организация КАК Организация,
	|	Остатки.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	ДетализацияПартийТоваровДляНДСиУСНОбороты.ДокументПоступления КАК ДокументПоступленияРасходов,
	|	СУММА(ДетализацияПартийТоваровДляНДСиУСНОбороты.СтоимостьБезНДСОборот + ДетализацияПартийТоваровДляНДСиУСНОбороты.НДСОборот) КАК СуммаРасходовОстаток,
	|	СУММА(ДетализацияПартийТоваровДляНДСиУСНОбороты.НДСОборот) КАК НДСОстаток,
	|	Остатки.СуммаОплатыОстаток КАК СуммаОплатыОстаток,
	|	Остатки.ВидРасходов КАК ВидРасходов,
	|	Остатки.СуммаОтгрузкиОстаток КАК СуммаОтгрузкиОстаток,
	|	Остатки.СтатьяРасходов КАК СтатьяРасходов
	|ПОМЕСТИТЬ ОстаткиДопРасходов
	|ИЗ
	|	Остатки КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН.Обороты(
	|				ДОБАВИТЬКДАТЕ(&НачДата, ГОД, -1),
	|				&НачГраница,
	|				Регистратор,
	|				Организация = &Организация
	|					И НЕ Партия = ДокументПоступления) КАК ДетализацияПартийТоваровДляНДСиУСНОбороты
	|		ПО Остатки.Организация = ДетализацияПартийТоваровДляНДСиУСНОбороты.Организация
	|			И Остатки.ДокументВозникновенияРасходов = ДетализацияПартийТоваровДляНДСиУСНОбороты.Партия
	|			И (НЕ ДетализацияПартийТоваровДляНДСиУСНОбороты.Партия = ДетализацияПартийТоваровДляНДСиУСНОбороты.ДокументПоступления)
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.ВидРасходов,
	|	Остатки.ДокументВозникновенияРасходов,
	|	Остатки.Организация,
	|	Остатки.СтатьяРасходов,
	|	Остатки.СуммаОплатыОстаток,
	|	ДетализацияПартийТоваровДляНДСиУСНОбороты.ДокументПоступления,
	|	Остатки.СуммаОтгрузкиОстаток
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Остатки.Организация,
	|	Остатки.ДокументВозникновенияРасходов,
	|	ПартииРасходовНаСебестоимостьТоваровОбороты.ДокументПоступленияРасходов,
	|	СУММА(ПартииРасходовНаСебестоимостьТоваровОбороты.СтоимостьРеглОборот + ПартииРасходовНаСебестоимостьТоваровОбороты.НДСРеглОборот),
	|	СУММА(ПартииРасходовНаСебестоимостьТоваровОбороты.НДСРеглОборот),
	|	Остатки.СуммаОплатыОстаток,
	|	Остатки.ВидРасходов,
	|	Остатки.СуммаОтгрузкиОстаток,
	|	Остатки.СтатьяРасходов
	|ИЗ
	|	Остатки КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров.Обороты(
	|				ДОБАВИТЬКДАТЕ(&НачДата, ГОД, -1),
	|				&НачГраница,
	|				Регистратор,
	|				Организация = &Организация
	|					И НЕ ДокументПоступленияРасходов = ДокументПоступления) КАК ПартииРасходовНаСебестоимостьТоваровОбороты
	|		ПО Остатки.Организация = ПартииРасходовНаСебестоимостьТоваровОбороты.Организация
	|			И Остатки.ДокументВозникновенияРасходов = ПартииРасходовНаСебестоимостьТоваровОбороты.ДокументПоступления
	|			И (НЕ ПартииРасходовНаСебестоимостьТоваровОбороты.ДокументПоступленияРасходов = ПартииРасходовНаСебестоимостьТоваровОбороты.ДокументПоступления)
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.ВидРасходов,
	|	Остатки.ДокументВозникновенияРасходов,
	|	Остатки.Организация,
	|	Остатки.СтатьяРасходов,
	|	Остатки.СуммаОплатыОстаток,
	|	Остатки.СуммаОтгрузкиОстаток,
	|	ПартииРасходовНаСебестоимостьТоваровОбороты.ДокументПоступленияРасходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОпределенияМатериалов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПорядокОтражения.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ПорядокОтражения.Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА ПорядокОтражения.СчетУчетаНаСкладе В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Материалы))
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|	КОНЕЦ КАК ВидРасходов	
	|ПОМЕСТИТЬ ВидыРасходовПорядкаОтражения
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияНоменклатуры КАК ПорядокОтражения
	|ГДЕ
	|	ПорядокОтражения.Организация = &Организация
	|	И ПорядокОтражения.СчетУчетаНаСкладе <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГруппаФинансовогоУчета,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ГруппыФинансовогоУчета.Ссылка КАК ГруппаФинансовогоУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы) КАК ВидРасходов
	|ПОМЕСТИТЬ МатериалыГруппФинансовогоУчета
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаНоменклатуры КАК ГруппыФинансовогоУчета
	|ГДЕ
	|	ГруппыФинансовогоУчета.СчетУчетаНаСкладе В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Материалы))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГруппаФинансовогоУчета";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// При поступлении импортных товаров или сборке товаров, исходные документы поступления заменяются новыми (сборкой или таможенной декларацией)
// в партионном учете, что приводит к тому, что документ возникновения расходов один, а отгрузка уже прошла по другому. Для контроля таких случаев
// будем использовать таблицу, хранящую данные по документу возникновения расходов текущему и исходному, для правильной отработки алгоритма.
Функция ТекстЗапросаСоответствияДокументовВозникновенияРасходов()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыОрганизацийКОформлению.Регистратор КАК НовыйДокументВозникновенияРасходов,
	|	ТоварыОрганизацийКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизацийКОформлению.Организация КАК Организация,
	|	ТоварыОрганизацийКОформлению.ДокументПоступления КАК ИсходныйДокументВозникновенияРасходов,
	|	0 КАК Сумма,
	|	0 КАК НДС
	|ПОМЕСТИТЬ СоответствиеДокументовВозникновенияРасходов
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизацийКОформлению КАК ТоварыОрганизацийКОформлению
	|ГДЕ
	|	ТоварыОрганизацийКОформлению.Период < &КонДата
	|	И ТоварыОрганизацийКОформлению.Организация = &Организация
	|	И ТоварыОрганизацийКОформлению.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПартииЗатратНаВыпуск.Регистратор,
	|	ПартииЗатратНаВыпуск.АналитикаУчетаПродукции КАК АналитикаУчетаНоменклатуры,
	|	ПартииЗатратНаВыпуск.Организация,
	|	ПартииЗатратНаВыпуск.ДокументПоступления,
	|	ПартииЗатратНаВыпуск.СтоимостьРегл КАК Сумма,
	|	ПартииЗатратНаВыпуск.НДСРегл КАК НДС
	|ИЗ
	|	РегистрНакопления.ПартииЗатратНаВыпуск КАК ПартииЗатратНаВыпуск
	|ГДЕ
	|	ПартииЗатратНаВыпуск.Период < &КонДата
	|	И ПартииЗатратНаВыпуск.Организация = &Организация
	|	И ПартииЗатратНаВыпуск.Регистратор ССЫЛКА Документ.СборкаТоваров
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	НовыйДокументВозникновенияРасходов,
	|	АналитикаУчетаНоменклатуры";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасходовПоСебестоимости()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Данные.Организация КАК Организация,
	|	Данные.Регистратор,
	|	Данные.Период КАК Период,
	|	СУММА(Данные.НДС) КАК НДС,
	|	СУММА(Данные.Сумма + Данные.НДС) КАК Сумма,
	|	Данные.ХозяйственнаяОперация,
	|	Данные.ВидОперации,
	|	Данные.ВидРасходов,
	|	Данные.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	ВЫБОР
	|		КОГДА Данные.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)	И Данные.ВидОперации = ""Списание""
	|			ТОГДА Данные.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА Данные.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|		КОГДА Данные.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)	И Данные.ВидОперации = ""Списание"" ТОГДА
	|			ЕСТЬNULL(Данные.СтатьяРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат, ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|	КОНЕЦ КАК ВидДеятельности,
	|	ВЫБОР КОГДА Данные.ВидОперации = ""ВозвратКлиента"" ТОГДА ИСТИНА ИНАЧЕ Данные.ПризнаватьРасходамиПриУСН КОНЕЦ КАК ПризнаватьРасходамиПриУСН
	|ПОМЕСТИТЬ ДанныеПоСебестоимости
	|ИЗ
	|	(ВЫБРАТЬ
	|		Партии.Организация КАК Организация,
	|		Партии.Регистратор КАК Регистратор,
	|		Партии.Период КАК Период,
	|		СУММА(ВЫБОР
	|			КОГДА НЕ ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов ЕСТЬ NULL
	|				И ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов ССЫЛКА Документ.СборкаТоваров
	|			ТОГДА ИсходныеДокументыВозникновенияРасходов.НДС
	|			ИНАЧЕ Партии.НДСРегл
	|		КОНЕЦ) КАК НДС,
	|		СУММА(ВЫБОР
	|			КОГДА НЕ ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов ЕСТЬ NULL
	|				И ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов ССЫЛКА Документ.СборкаТоваров
	|			ТОГДА ИсходныеДокументыВозникновенияРасходов.Сумма
	|			ИНАЧЕ Партии.СтоимостьРегл
	|		КОНЕЦ) КАК Сумма,
	|		Партии.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ВЫБОР
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|				ТОГДА ""Таможня""
	|			КОГДА Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|					ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПоступления)
	|					ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|						И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|						И Партии.СтоимостьРегл > 0
	|				ТОГДА ""ВозвратПоставщику""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И Партии.СтоимостьРегл < 0
	|				ТОГДА ""ВозвратКлиента""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И НЕ Партии.Регистратор = Партии.ДокументПоступления
	|				ТОГДА ""ДопРасходы""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ""Приход""
	|			ИНАЧЕ ""Списание""
	|		КОНЕЦ КАК ВидОперации,
	|		ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(МатериалыГруппФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура))) КАК ВидРасходов,
	|		ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, Партии.ДокументПоступления) КАК ДокументВозникновенияРасходов,
	|		ВЫБОР
	|			КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(Партии.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
	|			ИНАЧЕ Партии.НалогообложениеНДС
	|		КОНЕЦ КАК НалогообложениеНДС,
	|		ЕСТЬNULL(ВЫРАЗИТЬ(Партии.СтатьяРасходовСписания КАК ПланВидовХарактеристик.СтатьиРасходов), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)) КАК СтатьяРасходов,
	|		ЕСТЬNULL(Партии.СтатьяРасходовСписания.ПризнаватьРасходамиПриУСН, ИСТИНА) КАК ПризнаватьРасходамиПриУСН
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО (Партии.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВидыРасходовПорядкаОтражения КАК ВидыРасходовПорядкаОтражения
	|			ПО Партии.Номенклатура.ГруппаФинансовогоУчета = ВидыРасходовПорядкаОтражения.ГруппаФинансовогоУчета
	|				И Аналитика.Склад = ВидыРасходовПорядкаОтражения.Склад
	|			ЛЕВОЕ СОЕДИНЕНИЕ МатериалыГруппФинансовогоУчета КАК МатериалыГруппФинансовогоУчета
	|			ПО Партии.Номенклатура.ГруппаФинансовогоУчета = МатериалыГруппФинансовогоУчета.ГруппаФинансовогоУчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеДокументовВозникновенияРасходов КАК ИсходныеДокументыВозникновенияРасходов
	|			ПО Партии.Организация = ИсходныеДокументыВозникновенияРасходов.Организация
	|				И Партии.ДокументПоступления = ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов
	|				И Партии.АналитикаУчетаНоменклатуры = ИсходныеДокументыВозникновенияРасходов.АналитикаУчетаНоменклатуры
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачДата И &КонДата
	|		И Партии.Организация = &Организация
	|		И НЕ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|		И НЕ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ЗаявлениеОВвозеТоваров
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.КорректировкаНазначенияТоваров
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.КорректировкаНалогообложенияНДСПартийТоваров
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.КорректировкаОбособленногоУчетаЗапасов
	|		И НЕ Партии.ДокументПоступления ССЫЛКА Документ.ОприходованиеИзлишковТоваров
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетКомиссионераОСписании
	|		И НЕ Партии.ДокументПоступления ССЫЛКА Документ.ОтчетКомитентуОСписании
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании
	|		И НЕ Партии.ДокументПоступления ССЫЛКА Документ.ПересортицаТоваров
	|		И НЕ Партии.ДокументПоступления ССЫЛКА Документ.ПрочееОприходованиеТоваров
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.СборкаТоваров
	|		И НЕ Партии.ДокументПоступления ССЫЛКА Документ.ВыпускПродукции
	|		И (НЕ Партии.Регистратор ССЫЛКА Документ.ПередачаМатериаловВПроизводство
	|				ИЛИ ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(МатериалыГруппФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура))) = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы))
	//++ НЕ УТКА
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ВозвратСырьяДавальцу
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ПередачаДавальцу
	|		И НЕ Партии.ДокументПоступления ССЫЛКА Документ.ПоступлениеСырьяОтДавальца
	//-- НЕ УТКА
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Партии.Организация,
	|		Партии.Регистратор,
	|		Партии.Период,
	|		Партии.ХозяйственнаяОперация,
	|		ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(МатериалыГруппФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура))),
	|		ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, Партии.ДокументПоступления),
	|		ВЫБОР
	|			КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(Партии.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
	|			ИНАЧЕ Партии.НалогообложениеНДС
	|		КОНЕЦ,
	|		ЕСТЬNULL(ВЫРАЗИТЬ(Партии.СтатьяРасходовСписания КАК ПланВидовХарактеристик.СтатьиРасходов), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)),
	|		ЕСТЬNULL(Партии.СтатьяРасходовСписания.ПризнаватьРасходамиПриУСН, ИСТИНА),
	|		ВЫБОР
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|				ТОГДА ""Таможня""
	|			КОГДА Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|					ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПоступления)
	|					ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|						И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|						И Партии.СтоимостьРегл > 0
	|				ТОГДА ""ВозвратПоставщику""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И Партии.СтоимостьРегл < 0
	|				ТОГДА ""ВозвратКлиента""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И НЕ Партии.Регистратор = Партии.ДокументПоступления
	|				ТОГДА ""ДопРасходы""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ""Приход""
	|			ИНАЧЕ ""Списание""
	|		КОНЕЦ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Партии.Организация,
	|		Партии.Регистратор,
	|		Партии.Период,
	|		СУММА(Партии.НДСРегл),
	|		СУММА(Партии.СтоимостьРегл),
	|		ВЫБОР
	|			КОГДА Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы)
	|			ИНАЧЕ Партии.ХозяйственнаяОперация
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|				ТОГДА ""Таможня""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И Партии.Регистратор = Партии.ДокументПоступления
	|				ТОГДА ""Приход""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И НЕ Партии.Регистратор = Партии.ДокументПоступления
	|				ТОГДА ""ДопРасходы""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И Партии.СтоимостьРегл < 0
	|				ТОГДА ""ВозвратКлиента""
	|			ИНАЧЕ ""Списание""
	|		КОНЕЦ,
	|		ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(МатериалыГруппФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура))),
	|		ВЫБОР КОГДА Партии.ДокументПоступления ССЫЛКА Документ.СборкаТоваров
	|			ТОГДА Партии.ДокументПоступленияРасходов
	|			ИНАЧЕ Партии.ДокументПоступления КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(Партии.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
	|			ИНАЧЕ Партии.НалогообложениеНДС
	|		КОНЕЦ,
	|		ЕСТЬNULL(ВЫРАЗИТЬ(Партии.СтатьяРасходовСписания КАК ПланВидовХарактеристик.СтатьиРасходов), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)),
	|		ЕСТЬNULL(Партии.СтатьяРасходовСписания.ПризнаватьРасходамиПриУСН, ИСТИНА)
	|	ИЗ
	|		РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК Партии
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО (Партии.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВидыРасходовПорядкаОтражения КАК ВидыРасходовПорядкаОтражения
	|			ПО Аналитика.Номенклатура.ГруппаФинансовогоУчета = ВидыРасходовПорядкаОтражения.ГруппаФинансовогоУчета
	|				И Аналитика.Склад = ВидыРасходовПорядкаОтражения.Склад
	|			ЛЕВОЕ СОЕДИНЕНИЕ МатериалыГруппФинансовогоУчета КАК МатериалыГруппФинансовогоУчета
	|			ПО Аналитика.Номенклатура.ГруппаФинансовогоУчета = МатериалыГруппФинансовогоУчета.ГруппаФинансовогоУчета
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачДата И &КонДата
	|		И Партии.Организация = &Организация
	|		И (Партии.СтоимостьРегл <> 0
	|				ИЛИ Партии.НДСРегл <> 0)
	|		И НЕ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|		И НЕ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.АвансовыйОтчет
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.АктВыполненныхРабот
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ЗаявлениеОВвозеТоваров
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.КорректировкаНазначенияТоваров
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.КорректировкаНалогообложенияНДСПартийТоваров
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.КорректировкаОбособленногоУчетаЗапасов
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.НачислениеОценочныхОбязательствПоОтпускам
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетКомиссионера
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетКомиссионераОСписании
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетПереработчика
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ВыпускПродукции
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.СчетФактураНалоговыйАгент
	|		И (НЕ Партии.Регистратор ССЫЛКА Документ.ПередачаМатериаловВПроизводство
	|				ИЛИ ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(МатериалыГруппФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура))) = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы))
	//++ НЕ УТКА
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ВозвратСырьяДавальцу
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетДавальцу
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ПередачаДавальцу
	//-- НЕ УТКА
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Партии.Организация,
	|		Партии.Регистратор,
	|		Партии.Период,
	|		ВЫБОР
	|			КОГДА Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы)
	|			ИНАЧЕ Партии.ХозяйственнаяОперация
	|		КОНЕЦ,
	|		ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(МатериалыГруппФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура))),
	|		ВЫБОР КОГДА Партии.ДокументПоступления ССЫЛКА Документ.СборкаТоваров
	|			ТОГДА Партии.ДокументПоступленияРасходов
	|			ИНАЧЕ Партии.ДокументПоступления КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(Партии.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
	|			ИНАЧЕ Партии.НалогообложениеНДС
	|		КОНЕЦ,
	|		ЕСТЬNULL(ВЫРАЗИТЬ(Партии.СтатьяРасходовСписания КАК ПланВидовХарактеристик.СтатьиРасходов), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)),
	|		ЕСТЬNULL(Партии.СтатьяРасходовСписания.ПризнаватьРасходамиПриУСН, ИСТИНА),
	|		ВЫБОР
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|				ТОГДА ""Таможня""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И Партии.Регистратор = Партии.ДокументПоступления
	|				ТОГДА ""Приход""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И НЕ Партии.Регистратор = Партии.ДокументПоступления
	|				ТОГДА ""ДопРасходы""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И Партии.СтоимостьРегл < 0
	|				ТОГДА ""ВозвратКлиента""
	|			ИНАЧЕ ""Списание""
	|		КОНЕЦ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Партии.Организация,
	|		Партии.Регистратор,
	|		Партии.Период,
	|		СУММА(ВЫБОР
	|			КОГДА НЕ ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов ЕСТЬ NULL
	|				И ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов ССЫЛКА Документ.СборкаТоваров
	|			ТОГДА ИсходныеДокументыВозникновенияРасходов.НДС
	|			ИНАЧЕ Партии.НДСРегл
	|		КОНЕЦ),
	|		СУММА(ВЫБОР
	|			КОГДА НЕ ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов ЕСТЬ NULL
	|				И ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов ССЫЛКА Документ.СборкаТоваров
	|			ТОГДА ИсходныеДокументыВозникновенияРасходов.Сумма
	|			ИНАЧЕ Партии.СтоимостьРегл
	|		КОНЕЦ),
	|		ВЫБОР
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ОтчетКомиссионера
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями)
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ОтчетКомиссионераОСписании
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионераОСписании)
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациямиОСписании)
	|			ИНАЧЕ Партии.ХозяйственнаяОперация
    |		КОНЕЦ,
	|		""Списание"",
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура),
	|		ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, Партии.ДокументПоступления),
	|		ВЫБОР
	|			КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(Партии.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
	|			ИНАЧЕ Партии.НалогообложениеНДС
	|		КОНЕЦ,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка),
	|		ИСТИНА
	|	ИЗ
	|		РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК Партии
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО (Партии.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВидыРасходовПорядкаОтражения КАК ВидыРасходовПорядкаОтражения
	|			ПО Партии.Номенклатура.ГруппаФинансовогоУчета = ВидыРасходовПорядкаОтражения.ГруппаФинансовогоУчета
	|				И Аналитика.Склад = ВидыРасходовПорядкаОтражения.Склад
	|			ЛЕВОЕ СОЕДИНЕНИЕ МатериалыГруппФинансовогоУчета КАК МатериалыГруппФинансовогоУчета
	|			ПО Партии.Номенклатура.ГруппаФинансовогоУчета = МатериалыГруппФинансовогоУчета.ГруппаФинансовогоУчета
	|			ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеДокументовВозникновенияРасходов КАК ИсходныеДокументыВозникновенияРасходов
	|			ПО Партии.Организация = ИсходныеДокументыВозникновенияРасходов.Организация
	|				И Партии.ДокументПоступления = ИсходныеДокументыВозникновенияРасходов.НовыйДокументВозникновенияРасходов
	|				И Партии.АналитикаУчетаНоменклатуры = ИсходныеДокументыВозникновенияРасходов.АналитикаУчетаНоменклатуры
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачДата И &КонДата
	|		И Партии.Организация = &Организация
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|		И ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(МатериалыГруппФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура))) = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Партии.Организация,
	|		Партии.Регистратор,
	|		Партии.Период,
	|		ВЫБОР
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ОтчетКомиссионера
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями)
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ОтчетКомиссионераОСписании
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионераОСписании)
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациямиОСписании)
	|			ИНАЧЕ Партии.ХозяйственнаяОперация
	|		КОНЕЦ,
	|		ЕСТЬNULL(ИсходныеДокументыВозникновенияРасходов.ИсходныйДокументВозникновенияРасходов, Партии.ДокументПоступления),
	|		ВЫБОР
	|			КОГДА Партии.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(Партии.ВидЗапасов.НалогообложениеНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
	|			ИНАЧЕ Партии.НалогообложениеНДС
	|		КОНЕЦ,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка),
	|		ИСТИНА
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Партии.Организация КАК Организация,
	|		Партии.Регистратор КАК Регистратор,
	|		Партии.Период КАК Период,
	|		СУММА(Партии.НДС) КАК НДС,
	|		СУММА(Партии.СтоимостьБезНДС) КАК Сумма,
	|		Партии.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ВЫБОР
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|				ТОГДА ""Таможня""
	|			КОГДА Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|					ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПоступления)
	|					ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|						И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|						И Партии.СтоимостьБезНДС > 0
	|				ТОГДА ""ВозвратПоставщику""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И Партии.СтоимостьБезНДС < 0
	|				ТОГДА ""ВозвратКлиента""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И (Партии.Регистратор = Партии.Партия
	|				ИЛИ Партии.Партия = Неопределено И Партии.Регистратор = Партии.ДокументПоступления)
	|				ТОГДА ""Приход""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И (Партии.Регистратор = Партии.ДокументПоступления
	|				ИЛИ Партии.Регистратор ССЫЛКА Документ.КорректировкаПоступления)
	|				ТОГДА ""ДопРасходы""
	|			ИНАЧЕ ""Списание""
	|		КОНЕЦ КАК ВидОперации,
	|		ВЫБОР
	|			КОГДА ВидыНоменклатуры.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги)
	|			КОГДА Аналитика.Склад ССЫЛКА Справочник.СтруктураПредприятия
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|			ИНАЧЕ ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(МатериалыГруппФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)))
	|		КОНЕЦ КАК ВидРасходов,
	|		ВЫБОР КОГДА Партии.Партия = НЕОПРЕДЕЛЕНО ИЛИ Партии.Партия ССЫЛКА Документ.СборкаТоваров ТОГДА Партии.ДокументПоступления ИНАЧЕ Партии.Партия КОНЕЦ КАК ДокументВозникновенияРасходов,
	|		ВЫБОР
	|			КОГДА Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Партии.ВидДеятельностиНДС
	|			ИНАЧЕ Партии.КорВидДеятельностиНДС
	|		КОНЕЦ,
	|		ЕСТЬNULL(ВЫРАЗИТЬ(Партии.СтатьяРасходовАктивов КАК ПланВидовХарактеристик.СтатьиРасходов), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)),
	|		ЕСТЬNULL(Партии.СтатьяРасходовАктивов.ПризнаватьРасходамиПриУСН, ИСТИНА) КАК ПризнаватьРасходамиПриУСН
	|	ИЗ
	|		РегистрНакопления.ДетализацияПартийТоваровДляНДСиУСН КАК Партии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО (Партии.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыРасходовПорядкаОтражения КАК ВидыРасходовПорядкаОтражения
	|		ПО Аналитика.Номенклатура.ГруппаФинансовогоУчета = ВидыРасходовПорядкаОтражения.ГруппаФинансовогоУчета
	|			И Аналитика.Склад = ВидыРасходовПорядкаОтражения.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ МатериалыГруппФинансовогоУчета КАК МатериалыГруппФинансовогоУчета
	|		ПО Аналитика.Номенклатура.ГруппаФинансовогоУчета = МатериалыГруппФинансовогоУчета.ГруппаФинансовогоУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|			ПО Аналитика.Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	|
	|	ГДЕ
	|		Партии.Период МЕЖДУ &НачДата И &КонДата
	|		И Партии.Организация = &Организация
	|		И НЕ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|		И НЕ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.АвансовыйОтчет
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.АктВыполненныхРабот
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ВозвратСырьяОтПереработчика
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ЗаявлениеОВвозеТоваров
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.КорректировкаНазначенияТоваров
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.КорректировкаНалогообложенияНДСПартийТоваров
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.КорректировкаОбособленногоУчетаЗапасов
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.НачислениеОценочныхОбязательствПоОтпускам
	|		И НЕ Партии.Партия ССЫЛКА Документ.ОприходованиеИзлишковТоваров
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетКомиссионераОСписании
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетПереработчика
	|		И НЕ Партии.ДокументПоступления ССЫЛКА Документ.ОтчетКомитентуОСписании
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании
	|		И НЕ Партии.ДокументПоступления ССЫЛКА Документ.ПересортицаТоваров
	|		И НЕ Партии.ДокументПоступления ССЫЛКА Документ.ПрочееОприходованиеТоваров
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.СборкаТоваров
	|		И НЕ Партии.ДокументПоступления ССЫЛКА Документ.СборкаТоваров
	|		И НЕ Партии.ДокументПоступления ССЫЛКА Документ.ВыпускПродукции
	|		И НЕ (Партии.Партия ССЫЛКА Документ.ВыпускПродукции И Партии.ДокументПоступления <> Партии.Регистратор)
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.СчетФактураНалоговыйАгент
	|		И (НЕ Партии.Регистратор ССЫЛКА Документ.ПередачаМатериаловВПроизводство
	|				ИЛИ ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(МатериалыГруппФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура))) = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы))
	//++ НЕ УТКА
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ВозвратСырьяДавальцу
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ЭтапПроизводства2_2
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ПроизводствоБезЗаказа
	|		И НЕ Партии.Регистратор ССЫЛКА Документ.ОтчетДавальцу
	|		И НЕ Партии.ДокументПоступления ССЫЛКА Документ.ПоступлениеСырьяОтДавальца
	//-- НЕ УТКА
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Партии.Организация,
	|		Партии.Регистратор,
	|		Партии.Период,
	|		Партии.ХозяйственнаяОперация,
	|		ВЫБОР
	|			КОГДА ВидыНоменклатуры.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги)
	|			КОГДА Аналитика.Склад ССЫЛКА Справочник.СтруктураПредприятия
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|			ИНАЧЕ ЕСТЬNULL(ВидыРасходовПорядкаОтражения.ВидРасходов, ЕСТЬNULL(МатериалыГруппФинансовогоУчета.ВидРасходов, ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)))
	|		КОНЕЦ,
	|		ВЫБОР КОГДА Партии.Партия = НЕОПРЕДЕЛЕНО ИЛИ Партии.Партия ССЫЛКА Документ.СборкаТоваров ТОГДА Партии.ДокументПоступления ИНАЧЕ Партии.Партия КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Партии.ВидДеятельностиНДС
	|			ИНАЧЕ Партии.КорВидДеятельностиНДС
	|		КОНЕЦ,
	|		ЕСТЬNULL(ВЫРАЗИТЬ(Партии.СтатьяРасходовАктивов КАК ПланВидовХарактеристик.СтатьиРасходов), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)),
	|		ЕСТЬNULL(Партии.СтатьяРасходовАктивов.ПризнаватьРасходамиПриУСН, ИСТИНА),
	|		ВЫБОР
	|			КОГДА Партии.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|				ТОГДА ""Таможня""
	|			КОГДА Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|					ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПоступления)
	|					ИЛИ Партии.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|						И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|						И Партии.СтоимостьБезНДС > 0
	|				ТОГДА ""ВозвратПоставщику""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					И Партии.СтоимостьБезНДС < 0
	|				ТОГДА ""ВозвратКлиента""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И (Партии.Регистратор = Партии.Партия
	|				ИЛИ Партии.Партия = Неопределено И Партии.Регистратор = Партии.ДокументПоступления)
	|				ТОГДА ""Приход""
	|			КОГДА Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И (Партии.Регистратор = Партии.ДокументПоступления
	|				ИЛИ Партии.Регистратор ССЫЛКА Документ.КорректировкаПоступления)
	|				ТОГДА ""ДопРасходы""
	|			ИНАЧЕ ""Списание""
	|		КОНЕЦ
	|	) КАК Данные
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.ДокументВозникновенияРасходов,
	|	Данные.ВидОперации,
	|	Данные.ХозяйственнаяОперация,
	|	Данные.ВидРасходов,
	|	Данные.Регистратор,
	|	Данные.Период,
	|	Данные.Организация,
	|	ВЫБОР
	|		КОГДА Данные.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|		КОГДА Данные.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)	И Данные.ВидОперации = ""Списание"" ТОГДА
	|			ЕСТЬNULL(Данные.СтатьяРасходов.ВидДеятельностиДляНалоговогоУчетаЗатрат, ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|	КОНЕЦ,
	|	ВЫБОР КОГДА Данные.ВидОперации = ""ВозвратКлиента"" ТОГДА ИСТИНА ИНАЧЕ Данные.ПризнаватьРасходамиПриУСН КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Данные.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)	И Данные.ВидОперации = ""Списание""
	|			ТОГДА Данные.СтатьяРасходов
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументВозникновенияРасходов,
	|	Период";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПрочихРасходовПоТаможне()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДвиженияКонтрагентДоходыРасходы.Период КАК Период,
	|	ДвиженияКонтрагентДоходыРасходы.Регистратор КАК Регистратор,
	|	ДвиженияКонтрагентДоходыРасходы.Организация КАК Организация,
	|	ДвиженияКонтрагентДоходыРасходы.ХозяйственнаяОперация,
	|	ДвиженияКонтрагентДоходыРасходы.СтатьяДоходовРасходов КАК СтатьяРасходов,
	|	СУММА(ДвиженияКонтрагентДоходыРасходы.СуммаРегл) КАК Сумма,
	|	СУММА(0) КАК НДС,
	|	""Таможня"" КАК ВидОперации,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ТаможенныеПлатежи) КАК ВидРасходов,
	|	ДвиженияКонтрагентДоходыРасходы.Регистратор КАК ДокументВозникновенияРасходов
	|ПОМЕСТИТЬ ПрочиеРасходыТаможня
	|ИЗ
	|	РегистрНакопления.ДвиженияКонтрагентДоходыРасходы КАК ДвиженияКонтрагентДоходыРасходы
	|ГДЕ
	|	ДвиженияКонтрагентДоходыРасходы.Период МЕЖДУ &НачДата И &КонДата
	|	И ДвиженияКонтрагентДоходыРасходы.Организация = &Организация
	|	И ДвиженияКонтрагентДоходыРасходы.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|	И ДвиженияКонтрагентДоходыРасходы.СуммаРегл <> 0
	|	И ДвиженияКонтрагентДоходыРасходы.СтатьяДоходовРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияКонтрагентДоходыРасходы.Регистратор,
	|	ДвиженияКонтрагентДоходыРасходы.Организация,
	|	ДвиженияКонтрагентДоходыРасходы.Период,
	|	ДвиженияКонтрагентДоходыРасходы.ХозяйственнаяОперация,
	|	ДвиженияКонтрагентДоходыРасходы.СтатьяДоходовРасходов,
	|	ДвиженияКонтрагентДоходыРасходы.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументВозникновенияРасходов,
	|	Регистратор";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПрочихРасходов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.Регистратор,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ХозяйственнаяОперация,
	|	ВложенныйЗапрос.СтатьяРасходов,
	|	СУММА(ВЫБОР
	|			КОГДА ВложенныйЗапрос.Сумма < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ * ВложенныйЗапрос.Сумма) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА ВложенныйЗапрос.Сумма < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ * ВложенныйЗапрос.НДС) КАК НДС,
	|	ВложенныйЗапрос.ВидРасходов,
	|	ВложенныйЗапрос.ВидОперации,
	|	ВложенныйЗапрос.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	ВложенныйЗапрос.ВидДеятельности
	|ПОМЕСТИТЬ ПрочиеРасходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДвиженияДенежныеСредстваДоходыРасходыОбороты.Период КАК Период,
	|		ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор КАК Регистратор,
	|		ДвиженияДенежныеСредстваДоходыРасходыОбороты.Организация КАК Организация,
	|		ДвиженияДенежныеСредстваДоходыРасходыОбороты.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДвиженияДенежныеСредстваДоходыРасходыОбороты.СтатьяДоходовРасходов КАК СтатьяРасходов,
	|		ВЫБОР
	|			КОГДА ДвиженияДенежныеСредстваДоходыРасходыОбороты.СуммаРеглОборот < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ * ДвиженияДенежныеСредстваДоходыРасходыОбороты.СуммаРеглОборот КАК Сумма,
	|		ВЫБОР
	|			КОГДА ДвиженияДенежныеСредстваДоходыРасходыОбороты.СуммаРеглОборот < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ * ДвиженияДенежныеСредстваДоходыРасходыОбороты.СуммаНДСРеглОборот КАК НДС,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги) КАК ВидРасходов,
	|		ВЫБОР
	|			КОГДА ДвиженияДенежныеСредстваДоходыРасходыОбороты.ХозяйственнаяОперация В
	|															(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
	|															ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КомиссияПоЭквайрингу),
	|															ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНедостачиПриИнкассацииДенежныхСредств),
	|															ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНедостачиПриИнвентаризацииДенежныхСредств))
	|				ТОГДА ""РасходПриОплате""
	|			КОГДА ДвиженияДенежныеСредстваДоходыРасходыОбороты.СуммаРеглОборот < 0
	|				ТОГДА ""ВозвратПоставщику""
	|			ИНАЧЕ ""Приход""
	|		КОНЕЦ КАК ВидОперации,
	|		ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор КАК ДокументВозникновенияРасходов,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения) КАК ВидДеятельности
	|	ИЗ
	|		РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы.Обороты(
	|				&НачГраница,
	|				&КонГраница,
	|				Регистратор,
	|				Организация = &Организация
	|					И СтатьяДоходовРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|					И НЕ ХозяйственнаяОперация В (&ИсключающиесяХозОперации)) КАК ДвиженияДенежныеСредстваДоходыРасходыОбороты
	|	ГДЕ
	|		НЕ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|		И (НЕ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|				ИЛИ ДвиженияДенежныеСредстваДоходыРасходыОбороты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств))
	|		И (НЕ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
	|				ИЛИ ДвиженияДенежныеСредстваДоходыРасходыОбороты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств))
	|		И НЕ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияКонтрагентДоходыРасходыОбороты.Период,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.Организация,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.ХозяйственнаяОперация,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.СтатьяДоходовРасходов,
	|		СУММА(ДвиженияКонтрагентДоходыРасходыОбороты.СуммаРеглОборот),
	|		ВЫБОР
	|			КОГДА СУММА(ДвиженияКонтрагентДоходыРасходыОбороты.СуммаРеглБезНДСОборот) = 0
	|				ТОГДА 0
	|			ИНАЧЕ СУММА(ДвиженияКонтрагентДоходыРасходыОбороты.СуммаРеглОборот) - СУММА(ДвиженияКонтрагентДоходыРасходыОбороты.СуммаРеглБезНДСОборот)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ДвиженияКонтрагентДоходыРасходыОбороты.СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|					И (ДвиженияКонтрагентДоходыРасходыОбороты.АналитикаРасходов ССЫЛКА Справочник.НематериальныеАктивы
	|						ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.АналитикаРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации)
	|				ТОГДА ДвиженияКонтрагентДоходыРасходыОбороты.АналитикаРасходов
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ДвиженияКонтрагентДоходыРасходыОбороты.СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|					И (ДвиженияКонтрагентДоходыРасходыОбороты.АналитикаРасходов ССЫЛКА Справочник.НематериальныеАктивы
	|						ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.АналитикаРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации)
	|				ТОГДА ""Амортизация""
	|			КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор КАК Документ.ОтчетКомиссионера).УдержатьВознаграждение, ЛОЖЬ)
	|					ИЛИ ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор КАК Документ.ОтчетПоКомиссииМеждуОрганизациями).УдержатьВознаграждение, ЛОЖЬ)
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности)
	|				ТОГДА ""РасходПриОплате""
	|			КОГДА ДвиженияКонтрагентДоходыРасходыОбороты.СуммаРеглОборот < 0
	|				ТОГДА ""ВозвратПоставщику""
	|			ИНАЧЕ ""Приход""
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Документ.ВозвратТоваровПоставщику
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Документ.ЗаказПоставщику
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Документ.ЗаказПереработчику
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Справочник.ПодарочныеСертификаты
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов = НЕОПРЕДЕЛЕНО
	|				ТОГДА ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор
	|			ИНАЧЕ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов
	|		КОНЕЦ,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|	ИЗ
	|		РегистрНакопления.ДвиженияКонтрагентДоходыРасходы.Обороты(
	|				&НачГраница,
	|				&КонГраница,
	|				Регистратор,
	|				Организация = &Организация
	|					И (СтатьяДоходовРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|						ИЛИ ТИПЗНАЧЕНИЯ(Организация) = ТИПЗНАЧЕНИЯ(Контрагент)
	|							И ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионераКомиссия))
	|					И НЕ ХозяйственнаяОперация В (&ИсключающиесяХозОперации)) КАК ДвиженияКонтрагентДоходыРасходыОбороты
	|	ГДЕ
	|		НЕ ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|		И НЕ ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.НачисленияКредитовИДепозитов
	|		И НЕ ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор В
	|					(ВЫБРАТЬ
	|						ДанныеПоСебестоимости.Регистратор
	|					ИЗ
	|						ДанныеПоСебестоимости
	|					ГДЕ
	|						ДанныеПоСебестоимости.ВидОперации = ""ДопРасходы"")
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДвиженияКонтрагентДоходыРасходыОбороты.Период,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.Организация,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.ХозяйственнаяОперация,
	|		ДвиженияКонтрагентДоходыРасходыОбороты.СтатьяДоходовРасходов,
	|		ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ДвиженияКонтрагентДоходыРасходыОбороты.СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|					И (ДвиженияКонтрагентДоходыРасходыОбороты.АналитикаРасходов ССЫЛКА Справочник.НематериальныеАктивы
	|						ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.АналитикаРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации)
	|				ТОГДА ДвиженияКонтрагентДоходыРасходыОбороты.АналитикаРасходов
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ВЫРАЗИТЬ(ДвиженияКонтрагентДоходыРасходыОбороты.СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|					И (ДвиженияКонтрагентДоходыРасходыОбороты.АналитикаРасходов ССЫЛКА Справочник.НематериальныеАктивы
	|						ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.АналитикаРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации)
	|				ТОГДА ""Амортизация""
	|			КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор КАК Документ.ОтчетКомиссионера).УдержатьВознаграждение, ЛОЖЬ)
	|					ИЛИ ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор КАК Документ.ОтчетПоКомиссииМеждуОрганизациями).УдержатьВознаграждение, ЛОЖЬ)
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности)
	|				ТОГДА ""РасходПриОплате""
	|			КОГДА ДвиженияКонтрагентДоходыРасходыОбороты.СуммаРеглОборот < 0
	|				ТОГДА ""ВозвратПоставщику""
	|			ИНАЧЕ ""Приход""
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Документ.ВозвратТоваровПоставщику
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Документ.ЗаказПоставщику
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Документ.ЗаказПереработчику
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыМеждуОрганизациями
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов ССЫЛКА Справочник.ПодарочныеСертификаты
	|					ИЛИ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов = НЕОПРЕДЕЛЕНО
	|				ТОГДА ДвиженияКонтрагентДоходыРасходыОбороты.Регистратор
	|			ИНАЧЕ ДвиженияКонтрагентДоходыРасходыОбороты.ОбъектРасчетов
	|		КОНЕЦ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПартииПроизводственныхЗатратОбороты.Период,
	|		ПартииПроизводственныхЗатратОбороты.Регистратор,
	|		ПартииПроизводственныхЗатратОбороты.Организация,
	|		ВЫБОР
	|			КОГДА ПартииПроизводственныхЗатратОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ПартииПроизводственныхЗатратОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг).ХозяйственнаяОперация
	|			КОГДА ПартииПроизводственныхЗатратОбороты.Регистратор ССЫЛКА Документ.ОтчетПереработчика
	|				ТОГДА ВЫРАЗИТЬ(ПартииПроизводственныхЗатратОбороты.Регистратор КАК Документ.ОтчетПереработчика).ХозяйственнаяОперация
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|		КОНЕЦ,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка),
	|		ПартииПроизводственныхЗатратОбороты.СтоимостьРеглПриход + ПартииПроизводственныхЗатратОбороты.НДСРеглПриход,
	|		ПартииПроизводственныхЗатратОбороты.НДСРеглПриход,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги),
	|		""Приход"",
	|		ПартииПроизводственныхЗатратОбороты.ДокументПоступления,
	|		ВЫБОР
	|			КОГДА ПартииПроизводственныхЗатратОбороты.АналитикаУчетаПартий.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ПартииПроизводственныхЗатрат.Обороты(
	|				&НачГраница,
	|				&КонГраница,
	|				Регистратор,
	|				Организация = &Организация
	|					И ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)) КАК ПартииПроизводственныхЗатратОбороты
	|	ГДЕ
	|		ПартииПроизводственныхЗатратОбороты.СтоимостьРеглПриход > 0
	//++ НЕ УТКА
	|		И НЕ ПартииПроизводственныхЗатратОбороты.Регистратор ССЫЛКА Документ.ПроизводствоБезЗаказа
	//-- НЕ УТКА
	|	) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Регистратор,
	|	ВложенныйЗапрос.ДокументВозникновенияРасходов,
	|	ВложенныйЗапрос.ХозяйственнаяОперация,
	|	ВложенныйЗапрос.ВидРасходов,
	|	ВложенныйЗапрос.ВидДеятельности,
	|	ВложенныйЗапрос.ВидОперации,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.Период,
	|	ВложенныйЗапрос.СтатьяРасходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументВозникновенияРасходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасходовПоЗарплатеИНалогам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Период КАК Период,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор КАК Регистратор,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Организация КАК Организация,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов
	|		ИНАЧЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья
	|	КОНЕЦ КАК СтатьяРасходов,
	|	СУММА(ДвиженияДоходыРасходыПрочиеАктивыПассивы.СуммаРегл) КАК Сумма,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И НЕ ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|	КОНЕЦ КАК ВидРасходов,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ""Оплата""
	|		ИНАЧЕ ""Приход""
	|	КОНЕЦ КАК ВидОперации,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиРасходов).ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)) КАК ВидДеятельности
	|ПОМЕСТИТЬ РасходыПоЗарплатеИНалогамВременнаяТаблица
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|ГДЕ
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Период МЕЖДУ &НачДата И &КонДата
	|	И ДвиженияДоходыРасходыПрочиеАктивыПассивы.Организация = &Организация
	|	И ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов) В (&СтатьиЗарплатыИНалогов)
	|	И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.НачислениеОценочныхОбязательствПоОтпускам
	|	И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_Доходы), ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_МинимальныйНалог), ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.УСН_ДоходыМинусРасходы))
	|	И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.ВидОперацииПоЗарплате В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ДоходыКонтрагентов), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛДоходыКонтрагентов))
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.ХозяйственнаяОперация,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Организация,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов
	|		ИНАЧЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья
	|	КОНЕЦ,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Период,
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И НЕ ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ""Оплата""
	|		ИНАЧЕ ""Приход""
	|	КОНЕЦ,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиРасходов).ВидДеятельностиДляНалоговогоУчетаЗатрат,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасходов,
	|	ВидОперации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыПоНалогамНДФЛ.Период КАК Период,
	|	РасходыПоНалогамНДФЛ.Регистратор КАК Регистратор,
	|	РасходыПоНалогамНДФЛ.Организация КАК Организация,
	|	РасходыПоНалогамНДФЛ.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	РасходыПоНалогамНДФЛ.СтатьяРасходов КАК СтатьяРасходов,
	|	РасходыПоЗарплате.СтатьяРасходов КАК СтатьяРасходовЗарплаты,
	|	РасходыПоНалогамНДФЛ.Сумма * РасходыПоЗарплате.Сумма / СУММА(РасходыПоЗарплатеИтоги.Сумма) КАК Сумма,
	|	РасходыПоНалогамНДФЛ.ВидРасходов КАК ВидРасходов,
	|	0 КАК НДС,
	|	РасходыПоНалогамНДФЛ.Регистратор КАК ДокументВозникновенияРасходов,
	|	РасходыПоНалогамНДФЛ.ВидОперации КАК ВидОперации,
	|	РасходыПоЗарплате.ВидДеятельности КАК ВидДеятельности
	|ПОМЕСТИТЬ РасходыПоНалогамКВычетуИзЗарплаты
	|ИЗ
	|	РасходыПоЗарплатеИНалогамВременнаяТаблица КАК РасходыПоНалогамНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходыПоЗарплатеИНалогамВременнаяТаблица КАК РасходыПоЗарплате
	|		ПО РасходыПоНалогамНДФЛ.Период = РасходыПоЗарплате.Период
	|			И РасходыПоНалогамНДФЛ.Регистратор = РасходыПоЗарплате.Регистратор
	|			И (РасходыПоЗарплате.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата))
	|			И (РасходыПоЗарплате.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходыПоЗарплатеИНалогамВременнаяТаблица КАК РасходыПоЗарплатеИтоги
	|		ПО РасходыПоНалогамНДФЛ.Период = РасходыПоЗарплатеИтоги.Период
	|			И РасходыПоНалогамНДФЛ.Регистратор = РасходыПоЗарплатеИтоги.Регистратор
	|			И (РасходыПоЗарплатеИтоги.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата))
	|			И (РасходыПоЗарплатеИтоги.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов)
	|
	|ГДЕ
	|	РасходыПоНалогамНДФЛ.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|	И РасходыПоНалогамНДФЛ.СтатьяРасходов В (&ТипыНалоговНДФЛ)
	|	И РасходыПоНалогамНДФЛ.ВидОперации = ""Приход""
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоНалогамНДФЛ.Период,
	|	РасходыПоНалогамНДФЛ.Регистратор,
	|	РасходыПоНалогамНДФЛ.Организация,
	|	РасходыПоНалогамНДФЛ.ХозяйственнаяОперация,
	|	РасходыПоНалогамНДФЛ.СтатьяРасходов,
	|	РасходыПоЗарплате.СтатьяРасходов,
	|	РасходыПоНалогамНДФЛ.ВидРасходов,
	|	РасходыПоНалогамНДФЛ.ВидОперации,
	|	РасходыПоЗарплате.ВидДеятельности,
	|	РасходыПоНалогамНДФЛ.Сумма,
	|	РасходыПоЗарплате.Сумма,
	|	РасходыПоНалогамНДФЛ.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Период,
	|	СтатьяРасходовЗарплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыПоЗарплатеИНалогам.Период КАК Период,
	|	РасходыПоЗарплатеИНалогам.Регистратор КАК Регистратор,
	|	РасходыПоЗарплатеИНалогам.Организация КАК Организация,
	|	РасходыПоЗарплатеИНалогам.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	РасходыПоЗарплатеИНалогам.СтатьяРасходов КАК СтатьяРасходов,
	|	РасходыПоЗарплатеИНалогам.Сумма - СУММА(РасходыПоНалогамКВычетуИзЗарплаты.Сумма) КАК Сумма,
	|	РасходыПоЗарплатеИНалогам.ВидРасходов КАК ВидРасходов,
	|	0 КАК НДС,
	|	РасходыПоЗарплатеИНалогам.Регистратор КАК ДокументВозникновенияРасходов,
	|	РасходыПоЗарплатеИНалогам.ВидОперации КАК ВидОперации
	|ПОМЕСТИТЬ РасходыПоЗарплате
	|ИЗ
	|	РасходыПоЗарплатеИНалогамВременнаяТаблица КАК РасходыПоЗарплатеИНалогам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасходыПоНалогамКВычетуИзЗарплаты КАК РасходыПоНалогамКВычетуИзЗарплаты
	|		ПО РасходыПоЗарплатеИНалогам.Регистратор = РасходыПоНалогамКВычетуИзЗарплаты.Регистратор
	|			И РасходыПоЗарплатеИНалогам.Период = РасходыПоНалогамКВычетуИзЗарплаты.Период
	|			И РасходыПоЗарплатеИНалогам.СтатьяРасходов = РасходыПоНалогамКВычетуИзЗарплаты.СтатьяРасходовЗарплаты
	|ГДЕ
	|	РасходыПоЗарплатеИНалогам.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|	И РасходыПоЗарплатеИНалогам.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоЗарплатеИНалогам.Период,
	|	РасходыПоЗарплатеИНалогам.Регистратор,
	|	РасходыПоЗарплатеИНалогам.Организация,
	|	РасходыПоЗарплатеИНалогам.ХозяйственнаяОперация,
	|	РасходыПоЗарплатеИНалогам.СтатьяРасходов,
	|	РасходыПоЗарплатеИНалогам.ВидРасходов,
	|	РасходыПоЗарплатеИНалогам.ВидОперации,
	|	РасходыПоЗарплатеИНалогам.Сумма
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтатьяРасходов,
	|	ВидРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыПоЗарплатеИНалогам.Период КАК Период,
	|	РасходыПоЗарплатеИНалогам.Регистратор КАК Регистратор,
	|	РасходыПоЗарплатеИНалогам.Организация КАК Организация,
	|	РасходыПоЗарплатеИНалогам.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	РасходыПоЗарплатеИНалогам.СтатьяРасходов КАК СтатьяРасходов,
	|	РасходыПоЗарплатеИНалогам.Сумма КАК Сумма,
	|	РасходыПоЗарплатеИНалогам.ВидРасходов КАК ВидРасходов,
	|	0 КАК НДС,
	|	РасходыПоЗарплатеИНалогам.Регистратор КАК ДокументВозникновенияРасходов,
	|	РасходыПоЗарплатеИНалогам.ВидОперации КАК ВидОперации,
	|	РасходыПоЗарплатеИНалогам.ВидДеятельности КАК ВидДеятельности
	|ПОМЕСТИТЬ РасходыПоНалогам
	|ИЗ
	|	РасходыПоЗарплатеИНалогамВременнаяТаблица КАК РасходыПоЗарплатеИНалогам
	|ГДЕ
	|	РасходыПоЗарплатеИНалогам.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|	И НЕ РасходыПоЗарплатеИНалогам.СтатьяРасходов В (&ТипыНалоговНДФЛ)
	|	И РасходыПоЗарплатеИНалогам.ВидОперации = ""Приход""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыПоНалогамНДФЛ.Период,
	|	РасходыПоНалогамНДФЛ.Регистратор,
	|	РасходыПоНалогамНДФЛ.Организация,
	|	РасходыПоНалогамНДФЛ.ХозяйственнаяОперация,
	|	РасходыПоНалогамНДФЛ.СтатьяРасходов,
	|	СУММА(РасходыПоНалогамНДФЛ.Сумма),
	|	РасходыПоНалогамНДФЛ.ВидРасходов,
	|	СУММА(РасходыПоНалогамНДФЛ.НДС),
	|	РасходыПоНалогамНДФЛ.ДокументВозникновенияРасходов,
	|	РасходыПоНалогамНДФЛ.ВидОперации,
	|	РасходыПоНалогамНДФЛ.ВидДеятельности
	|ИЗ
	|	РасходыПоНалогамКВычетуИзЗарплаты КАК РасходыПоНалогамНДФЛ
	|ГДЕ
	|	РасходыПоНалогамНДФЛ.СтатьяРасходов В (&ТипыНалоговНДФЛ)
	|	И РасходыПоНалогамНДФЛ.ВидОперации = ""Приход""
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоНалогамНДФЛ.Период,
	|	РасходыПоНалогамНДФЛ.Регистратор,
	|	РасходыПоНалогамНДФЛ.Организация,
	|	РасходыПоНалогамНДФЛ.ХозяйственнаяОперация,
	|	РасходыПоНалогамНДФЛ.СтатьяРасходов,
	|	РасходыПоНалогамНДФЛ.ВидРасходов,
	|	РасходыПоНалогамНДФЛ.ДокументВозникновенияРасходов,
	|	РасходыПоНалогамНДФЛ.ВидОперации,
	|	РасходыПоНалогамНДФЛ.ВидДеятельности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтатьяРасходов,
	|	ВидРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыПоЗарплатеИНалогам.Период КАК Период,
	|	РасходыПоЗарплатеИНалогам.Регистратор КАК Регистратор,
	|	РасходыПоЗарплатеИНалогам.Организация КАК Организация,
	|	РасходыПоЗарплатеИНалогам.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(РасходыПоЗарплатеИНалогам.Сумма) КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги) КАК ВидРасходов,
	|	СУММА(0) КАК НДС,
	|	""Оплата"" КАК ВидОперации
	|ПОМЕСТИТЬ ОплатыЗаСчетРанееВнесенныхСтраховыхВзносов
	|ИЗ
	|	РасходыПоЗарплатеИНалогамВременнаяТаблица КАК РасходыПоЗарплатеИНалогам
	|ГДЕ
	|	РасходыПоЗарплатеИНалогам.ВидОперации = ""Оплата""
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоЗарплатеИНалогам.Период,
	|	РасходыПоЗарплатеИНалогам.Регистратор,
	|	РасходыПоЗарплатеИНалогам.Организация,
	|	РасходыПоЗарплатеИНалогам.СтатьяРасходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтатьяРасходов,
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РасходыПоЗарплатеИНалогамВременнаяТаблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РасходыПоНалогамКВычетуИзЗарплаты";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРасходовПоКредитам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РасчетыПоДоговорамКредитовИДепозитов.Период,
	|	РасчетыПоДоговорамКредитовИДепозитов.Регистратор,
	|	Аналитика.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоКредитам) КАК ХозяйственнаяОперация,
	|	РасчетыПоДоговорамКредитовИДепозитов.СтатьяАналитики КАК СтатьяРасходов,
	|	СУММА(РасчетыПоДоговорамКредитовИДепозитов.СуммаРегл) КАК Сумма,
	|	РасчетыПоДоговорамКредитовИДепозитов.Договор КАК ДокументВозникновенияРасходов,
	|	СУММА(0) КАК НДС,
	|	ВЫБОР
	|		КОГДА РасчетыПоДоговорамКредитовИДепозитов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ""Приход""
	|		ИНАЧЕ ""Оплата""
	|	КОНЕЦ КАК ВидОперации,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги) КАК ВидРасходов
	|ПОМЕСТИТЬ РасходыПоКредитам
	|ИЗ
	|	РегистрНакопления.РасчетыПоДоговорамКредитовИДепозитов КАК РасчетыПоДоговорамКредитовИДепозитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО РасчетыПоДоговорамКредитовИДепозитов.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|ГДЕ
	|	РасчетыПоДоговорамКредитовИДепозитов.Период МЕЖДУ &НачДата И &КонДата
	|	И Аналитика.Организация = &Организация
	|	И НЕ РасчетыПоДоговорамКредитовИДепозитов.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|	И НЕ РасчетыПоДоговорамКредитовИДепозитов.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ПустаяСсылка)
	|	И РасчетыПоДоговорамКредитовИДепозитов.Договор.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|	И РасчетыПоДоговорамКредитовИДепозитов.СуммаВВалюте <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыПоДоговорамКредитовИДепозитов.Регистратор,
	|	РасчетыПоДоговорамКредитовИДепозитов.Период,
	|	РасчетыПоДоговорамКредитовИДепозитов.СтатьяАналитики,
	|	РасчетыПоДоговорамКредитовИДепозитов.Договор,
	|	ВЫБОР
	|		КОГДА РасчетыПоДоговорамКредитовИДепозитов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ""Приход""
	|		ИНАЧЕ ""Оплата""
	|	КОНЕЦ,
	|	Аналитика.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументВозникновенияРасходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоОплатам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РасчетыСПоставщикамиПоДокументам.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщикамиПоДокументам.Предоплата = 0
	|			ТОГДА РасчетыСПоставщикамиПоДокументам.Регистратор
	|		ИНАЧЕ ЕСТЬNULL(Авансы.Регистратор, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК Регистратор,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщикамиПоДокументам.Предоплата = 0
	|			ТОГДА РасчетыСПоставщикамиПоДокументам.Период
	|		ИНАЧЕ ЕСТЬNULL(Авансы.Период, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ КАК Период,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.Предоплата > 0
	|			ТОГДА РасчетыСПоставщикамиПоДокументам.Регистратор
	|		ИНАЧЕ РасчетыСПоставщикамиПоДокументам.РасчетныйДокумент
	|	КОНЕЦ КАК ДокументВозникновенияРасходов,
	|	СУММА(0) КАК НДС,
	|	СУММА(ВЫБОР
	|			КОГДА РасчетыСПоставщикамиПоДокументам.ДолгРегл > 0
	|				ТОГДА РасчетыСПоставщикамиПоДокументам.ДолгРегл
	|			ИНАЧЕ ВЫБОР
	|					КОГДА РасчетыСПоставщикамиПоДокументам.ПредоплатаРегл < 0
	|						ТОГДА -РасчетыСПоставщикамиПоДокументам.ПредоплатаРегл
	|					ИНАЧЕ РасчетыСПоставщикамиПоДокументам.ПредоплатаРегл
	|				КОНЕЦ
	|		КОНЕЦ) КАК Сумма,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСПоставщикамиПоДокументам.Долг = 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаПоставщику)
	|		ИНАЧЕ РасчетыСПоставщикамиПоДокументам.ХозяйственнаяОперация
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщикамиПоДокументам.Предоплата = 0
	|			ТОГДА ""Оплата""
	|		ИНАЧЕ ""Аванс""
	|	КОНЕЦ КАК ВидОперации
	|ПОМЕСТИТЬ ПлатежныеДокументы
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщикамиПоДокументам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Авансы
	|		ПО РасчетыСПоставщикамиПоДокументам.РасчетныйДокумент = Авансы.РасчетныйДокумент
	|			И (Авансы.АналитикаУчетаПоПартнерам.Организация = &Организация)
	|			И РасчетыСПоставщикамиПоДокументам.Период > Авансы.Период
	|			И РасчетыСПоставщикамиПоДокументам.ЗаказПоставщику = Авансы.ЗаказПоставщику
	|			И (НЕ Авансы.Регистратор ССЫЛКА Документ.ОтчетКомитенту)
	|			И (Авансы.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереоценкаРасчетовСПоставщиками))
	|			И (Авансы.Предоплата > 0)
	|			И (Авансы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|ГДЕ
    |	РасчетыСПоставщикамиПоДокументам.Период МЕЖДУ &НачДата И &КонДата
    |	И РасчетыСПоставщикамиПоДокументам.АналитикаУчетаПоПартнерам.Организация = &Организация
    |	И (РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
    |				И РасчетыСПоставщикамиПоДокументам.Предоплата <= 0
    |				И НЕ РасчетыСПоставщикамиПоДокументам.Долг = 0
    |			ИЛИ РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
    |				И РасчетыСПоставщикамиПоДокументам.Долг = 0
    |				И НЕ РасчетыСПоставщикамиПоДокументам.Предоплата = 0)
    |	И РасчетыСПоставщикамиПоДокументам.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереоценкаРасчетовСПоставщиками)
    |	И НЕ РасчетыСПоставщикамиПоДокументам.Регистратор ССЫЛКА Документ.ОтчетКомитенту
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщикамиПоДокументам.Предоплата = 0
	|			ТОГДА РасчетыСПоставщикамиПоДокументам.Период
	|		ИНАЧЕ ЕСТЬNULL(Авансы.Период, ДАТАВРЕМЯ(1, 1, 1))
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И РасчетыСПоставщикамиПоДокументам.Долг = 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗачетАвансаПоставщику)
	|		ИНАЧЕ РасчетыСПоставщикамиПоДокументам.ХозяйственнаяОперация
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщикамиПоДокументам.Предоплата = 0
	|			ТОГДА РасчетыСПоставщикамиПоДокументам.Регистратор
	|		ИНАЧЕ ЕСТЬNULL(Авансы.Регистратор, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И РасчетыСПоставщикамиПоДокументам.Предоплата = 0
	|			ТОГДА ""Оплата""
	|		ИНАЧЕ ""Аванс""
	|	КОНЕЦ,
	|	РасчетыСПоставщикамиПоДокументам.АналитикаУчетаПоПартнерам.Организация,
	|	ВЫБОР
	|		КОГДА РасчетыСПоставщикамиПоДокументам.Предоплата > 0
	|			ТОГДА РасчетыСПоставщикамиПоДокументам.Регистратор
	|		ИНАЧЕ РасчетыСПоставщикамиПоДокументам.РасчетныйДокумент
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументВозникновенияРасходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоОплатамПодотчетникам()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ДенежныеСредстваУПодотчетныхЛицОстаткиИОбороты.Период) КАК Период,
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.Организация,
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.ПодотчетноеЛицо,
	|	СУММА(ДенежныеСредстваУПодотчетныхЛицОстаткиИОбороты.СуммаОборот) КАК СуммаОборот,
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.СуммаРеглОстаток
	|ПОМЕСТИТЬ ПериодПоследнейЗадолженности
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц.Остатки(&НачГраница, Организация = &Организация) КАК ДенежныеСредстваУПодотчетныхЛицОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц.ОстаткиИОбороты(, &НачГраница, Регистратор, , Организация = &Организация) КАК ДенежныеСредстваУПодотчетныхЛицОстаткиИОбороты
	|		ПО ДенежныеСредстваУПодотчетныхЛицОстатки.Организация = ДенежныеСредстваУПодотчетныхЛицОстаткиИОбороты.Организация
	|			И ДенежныеСредстваУПодотчетныхЛицОстатки.ПодотчетноеЛицо = ДенежныеСредстваУПодотчетныхЛицОстаткиИОбороты.ПодотчетноеЛицо
	|			И (ДенежныеСредстваУПодотчетныхЛицОстаткиИОбороты.СуммаНачальныйОстаток < 0)
	|ГДЕ
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.СуммаРеглОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.Организация,
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.ПодотчетноеЛицо,
	|	ДенежныеСредстваУПодотчетныхЛицОстатки.СуммаРеглОстаток
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДенежныеСредстваУПодотчетныхЛиц.Период,
	|	ДенежныеСредстваУПодотчетныхЛиц.Регистратор,
	|	ДенежныеСредстваУПодотчетныхЛиц.Организация,
	|	ДенежныеСредстваУПодотчетныхЛиц.ХозяйственнаяОперация,
	|	СУММА(ДенежныеСредстваУПодотчетныхЛиц.СуммаРегл) КАК СуммаОплаты,
	|	ДенежныеСредстваУПодотчетныхЛиц.ПодотчетноеЛицо,
	|	ДенежныеСредстваУПодотчетныхЛиц.ВидДвижения,
	|	ПериодПоследнейЗадолженности.СуммаРеглОстаток КАК СуммаОстаток,
	|	СУММА(ДенежныеСредстваУПодотчетныхЛиц.СуммаРегл) КАК Сумма,
	|	ДенежныеСредстваУПодотчетныхЛиц.МоментВремени
	|ПОМЕСТИТЬ ДокументыПериодаПоложительногоАванса
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДенежныеСредстваУПодотчетныхЛиц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодПоследнейЗадолженности КАК ПериодПоследнейЗадолженности
	|		ПО ДенежныеСредстваУПодотчетныхЛиц.Организация = ПериодПоследнейЗадолженности.Организация
	|			И ДенежныеСредстваУПодотчетныхЛиц.ПодотчетноеЛицо = ПериодПоследнейЗадолженности.ПодотчетноеЛицо
	|ГДЕ
	|	ДенежныеСредстваУПодотчетныхЛиц.СуммаРегл <> 0
	|	И ДенежныеСредстваУПодотчетныхЛиц.Период >= ЕСТЬNULL(ПериодПоследнейЗадолженности.Период, ДАТАВРЕМЯ(1,1,1))
	|	И ДенежныеСредстваУПодотчетныхЛиц.Период < &НачДата
	|
	|СГРУППИРОВАТЬ ПО
	|	ДенежныеСредстваУПодотчетныхЛиц.Период,
	|	ДенежныеСредстваУПодотчетныхЛиц.Регистратор,
	|	ДенежныеСредстваУПодотчетныхЛиц.Организация,
	|	ДенежныеСредстваУПодотчетныхЛиц.ХозяйственнаяОперация,
	|	ДенежныеСредстваУПодотчетныхЛиц.ПодотчетноеЛицо,
	|	ДенежныеСредстваУПодотчетныхЛиц.ВидДвижения,
	|	ДенежныеСредстваУПодотчетныхЛиц.МоментВремени,
	|	ПериодПоследнейЗадолженности.СуммаРеглОстаток
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыПериодаПоложительногоАванса.Период КАК Период,
	|	ДокументыПериодаПоложительногоАванса.Регистратор,
	|	ВЫБОР
	|		КОГДА СводныеДанные.СуммаОстаток- СУММА(ВЫБОР
	|					КОГДА СводныеДанные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|							И СводныеДанные.МоментВремени > ДокументыПериодаПоложительногоАванса.МоментВремени
	|						ТОГДА СводныеДанные.Сумма
	|					ИНАЧЕ 0
	|				КОНЕЦ) < ДокументыПериодаПоложительногоАванса.Сумма
	|			ТОГДА СводныеДанные.СуммаОстаток - СУММА(ВЫБОР
	|						КОГДА СводныеДанные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|								И СводныеДанные.МоментВремени > ДокументыПериодаПоложительногоАванса.МоментВремени
	|							ТОГДА СводныеДанные.Сумма
	|						ИНАЧЕ 0
	|					КОНЕЦ)
	|		ИНАЧЕ ДокументыПериодаПоложительногоАванса.Сумма
	|	КОНЕЦ КАК Сумма,
	|	ДокументыПериодаПоложительногоАванса.Организация КАК Организация,
	|	ДокументыПериодаПоложительногоАванса.ХозяйственнаяОперация,
	|	ДокументыПериодаПоложительногоАванса.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги) КАК ВидРасходов
	|ПОМЕСТИТЬ ДокументыОплатыПодотчетникам
	|ИЗ
	|	ДокументыПериодаПоложительногоАванса КАК ДокументыПериодаПоложительногоАванса
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыПериодаПоложительногоАванса КАК СводныеДанные
	|		ПО ДокументыПериодаПоложительногоАванса.Организация = СводныеДанные.Организация
	|			И ДокументыПериодаПоложительногоАванса.ПодотчетноеЛицо = СводныеДанные.ПодотчетноеЛицо
	|ГДЕ
	|	ДокументыПериодаПоложительногоАванса.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыПериодаПоложительногоАванса.Организация,
	|	ДокументыПериодаПоложительногоАванса.ХозяйственнаяОперация,
	|	ДокументыПериодаПоложительногоАванса.Период,
	|	ДокументыПериодаПоложительногоАванса.Регистратор,
	|	ДокументыПериодаПоложительногоАванса.ПодотчетноеЛицо,
	|	СводныеДанные.СуммаОстаток,
	|	ДокументыПериодаПоложительногоАванса.СуммаОплаты,
	|	ДокументыПериодаПоложительногоАванса.Сумма
	|
	|ИМЕЮЩИЕ
	|	СводныеДанные.СуммаОстаток - СУММА(ВЫБОР
	|			КОГДА СводныеДанные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					И СводныеДанные.МоментВремени > ДокументыПериодаПоложительногоАванса.МоментВремени
	|				ТОГДА СводныеДанные.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДенежныеСредстваУПодотчетныхЛиц.Период,
	|	ДенежныеСредстваУПодотчетныхЛиц.Регистратор,
	|	СУММА(ДенежныеСредстваУПодотчетныхЛиц.СуммаРегл),
	|	ДенежныеСредстваУПодотчетныхЛиц.Организация,
	|	ДенежныеСредстваУПодотчетныхЛиц.ХозяйственнаяОперация,
	|	ДенежныеСредстваУПодотчетныхЛиц.ПодотчетноеЛицо,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Услуги)
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц КАК ДенежныеСредстваУПодотчетныхЛиц
	|ГДЕ
	|	ДенежныеСредстваУПодотчетныхЛиц.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ДенежныеСредстваУПодотчетныхЛиц.Организация = &Организация
	|	И ДенежныеСредстваУПодотчетныхЛиц.Период МЕЖДУ &НачДата И &КонДата
	|	И ДенежныеСредстваУПодотчетныхЛиц.СуммаРегл <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ДенежныеСредстваУПодотчетныхЛиц.Регистратор,
	|	ДенежныеСредстваУПодотчетныхЛиц.Период,
	|	ДенежныеСредстваУПодотчетныхЛиц.Организация,
	|	ДенежныеСредстваУПодотчетныхЛиц.ХозяйственнаяОперация,
	|	ДенежныеСредстваУПодотчетныхЛиц.ПодотчетноеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ПодотчетноеЛицо";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоОплатамЗарплатыИНалогов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.Период,
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор КАК Регистратор,
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.Организация КАК Организация,
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДенежныеСредстваДоходыРасходыОбороты.СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|			ТОГДА ДвиженияДенежныеСредстваДоходыРасходыОбороты.СтатьяДоходовРасходов
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДенежныеСредстваДоходыРасходыОбороты.СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДепонированнаяЗарплата)
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|		ИНАЧЕ ДвиженияДенежныеСредстваДоходыРасходыОбороты.АналитикаАктивовПассивов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.СуммаРеглОборот - СУММА(ЕСТЬNULL(РасходыПриУСН.СуммаОплатыПриход, 0)) КАК Сумма,
	|	СУММА(0) КАК НДС,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДенежныеСредстваДоходыРасходыОбороты.СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|	КОНЕЦ КАК ВидРасходов,
	|	""Приход"" КАК ВидОперации,
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор КАК ДокументВозникновенияРасходов
	|ПОМЕСТИТЬ ДокументыОплатыНалогаИЗарплаты
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы.Обороты(
	|			&ДатаНачалаАнализаОплатыНалогов,
	|			&КонГраница,
	|			Регистратор,
	|			Организация = &Организация
	|				И СтатьяДоходовРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|				И ВЫРАЗИТЬ(СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиАктивовПассивов) В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДепонированнаяЗарплата))) КАК ДвиженияДенежныеСредстваДоходыРасходыОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасходыПриУСН.Обороты(
	|				ДОБАВИТЬКДАТЕ(&НачДата, ГОД, -1),
	|				&НачДата,
	|				Регистратор,
	|				Организация = &Организация
	|					И (ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|						ИЛИ ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги))) КАК РасходыПриУСН
	|		ПО ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор = РасходыПриУСН.Регистратор
	|			И ДвиженияДенежныеСредстваДоходыРасходыОбороты.Организация = РасходыПриУСН.Организация
	|			И (ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|				ИЛИ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|				ИЛИ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
	|				ИЛИ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер)
	|			И (РасходыПриУСН.СуммаОплатыПриход > 0)
	|ГДЕ
	|	(ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|			ИЛИ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|			ИЛИ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
	|			ИЛИ ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.Период,
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.ХозяйственнаяОперация,
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.Организация,
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДенежныеСредстваДоходыРасходыОбороты.СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|			ТОГДА ДвиженияДенежныеСредстваДоходыРасходыОбороты.СтатьяДоходовРасходов
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДенежныеСредстваДоходыРасходыОбороты.СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДепонированнаяЗарплата)
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|		ИНАЧЕ ДвиженияДенежныеСредстваДоходыРасходыОбороты.АналитикаАктивовПассивов
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ДвиженияДенежныеСредстваДоходыРасходыОбороты.СтатьяДоходовРасходов КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|	КОНЕЦ,
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.Регистратор,
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.СуммаРеглОборот
	|
	|ИМЕЮЩИЕ
	|	ДвиженияДенежныеСредстваДоходыРасходыОбороты.СуммаРеглОборот - Сумма(ЕСТЬNULL(РасходыПриУСН.СуммаОплатыПриход, 0)) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ВидРасходов,
	|	СтатьяРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОплатыНалогаИЗарплаты.Период,
	|	ДокументыОплатыНалогаИЗарплаты.Регистратор,
	|	ДокументыОплатыНалогаИЗарплаты.Организация КАК Организация,
	|	ДокументыОплатыНалогаИЗарплаты.СтатьяРасходов КАК СтатьяРасходов,
	|	ЕСТЬNULL(РасходныйКассовыйОрдер.ХозяйственнаяОперация, СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ссылка.ХозяйственнаяОперация) КАК ХозяйственнаяОперация,
	|	СУММА(ВЫБОР
	|			КОГДА СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ведомость ЕСТЬ NULL 
	|				ТОГДА ДокументыОплатыНалогаИЗарплаты.Сумма
	|			ИНАЧЕ СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Сумма
	|		КОНЕЦ) КАК Сумма,
	|	ЕСТЬNULL(РасходныйКассовыйОрдер.Ведомость.ПериодРегистрации, СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ведомость.ПериодРегистрации) КАК ПериодРегистрации,
	|	ДокументыОплатыНалогаИЗарплаты.ВидРасходов
	|ПОМЕСТИТЬ ДокументыОплатыЗарплаты
	|ИЗ
	|	ДокументыОплатыНалогаИЗарплаты КАК ДокументыОплатыНалогаИЗарплаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|		ПО ДокументыОплатыНалогаИЗарплаты.Регистратор = РасходныйКассовыйОрдер.Ссылка
	|			И (РасходныйКассовыйОрдер.Проведен)
	|			И (ДокументыОплатыНалогаИЗарплаты.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты
	|		ПО ДокументыОплатыНалогаИЗарплаты.Регистратор = СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ссылка
	|			И (СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ссылка.Проведен)
	|			И (СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ведомость <> НЕОПРЕДЕЛЕНО)
	|			И (ДокументыОплатыНалогаИЗарплаты.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата))
	|ГДЕ
	|	ДокументыОплатыНалогаИЗарплаты.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|	И ВЫБОР
	|			КОГДА СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ведомость ЕСТЬ NULL 
	|				ТОГДА ДокументыОплатыНалогаИЗарплаты.Сумма
	|			ИНАЧЕ СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Сумма
	|		КОНЕЦ > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(РасходныйКассовыйОрдер.Ведомость.ПериодРегистрации, СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ведомость.ПериодРегистрации),
	|	ДокументыОплатыНалогаИЗарплаты.Период,
	|	ДокументыОплатыНалогаИЗарплаты.ВидРасходов,
	|	ДокументыОплатыНалогаИЗарплаты.СтатьяРасходов,
	|	ДокументыОплатыНалогаИЗарплаты.Регистратор,
	|	ДокументыОплатыНалогаИЗарплаты.Организация,
	|	ЕСТЬNULL(РасходныйКассовыйОрдер.ХозяйственнаяОперация, СписаниеБезналичныхДенежныхСредствВедомостиНаВыплатуЗарплаты.Ссылка.ХозяйственнаяОперация)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтатьяРасходов,
	|	ПериодРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыОплатыНалогаИЗарплаты.Организация,
	|	СУММА(ДокументыОплатыНалогаИЗарплаты.Сумма) КАК Сумма,
	|	ДокументыОплатыНалогаИЗарплаты.Период,
	|	ДокументыОплатыНалогаИЗарплаты.Регистратор,
	|	ДокументыОплатыНалогаИЗарплаты.ХозяйственнаяОперация,
	|	ДокументыОплатыНалогаИЗарплаты.СтатьяРасходов,
	|	ДокументыОплатыНалогаИЗарплаты.ВидРасходов
	|ПОМЕСТИТЬ ДокументыОплатыНалога
	|ИЗ
	|	ДокументыОплатыНалогаИЗарплаты КАК ДокументыОплатыНалогаИЗарплаты
	|ГДЕ
	|	ДокументыОплатыНалогаИЗарплаты.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОплатыНалогаИЗарплаты.Регистратор,
	|	ДокументыОплатыНалогаИЗарплаты.Организация,
	|	ДокументыОплатыНалогаИЗарплаты.ХозяйственнаяОперация,
	|	ДокументыОплатыНалогаИЗарплаты.СтатьяРасходов,
	|	ДокументыОплатыНалогаИЗарплаты.ВидРасходов,
	|	ДокументыОплатыНалогаИЗарплаты.Период;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДокументыОплатыНалогаИЗарплаты";
	
	Возврат ТекстЗапроса;
	
КонецФункции
	
Функция ТекстЗапросаКДокументамВозникновенияРасходов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеПоСебестоимости.Организация КАК Организация,
	|	ДанныеПоСебестоимости.Регистратор КАК Регистратор,
	|	ДанныеПоСебестоимости.Период,
	|	ДанныеПоСебестоимости.НДС,
	|	ДанныеПоСебестоимости.Сумма,
	|	0 КАК СуммаОплаты,
	|	ДанныеПоСебестоимости.ХозяйственнаяОперация,
	|	ДанныеПоСебестоимости.ВидОперации,
	|	ДанныеПоСебестоимости.ВидРасходов КАК ВидРасходов,
	|	ДанныеПоСебестоимости.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	ДанныеПоСебестоимости.СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения) КАК ВидДеятельности
	|ПОМЕСТИТЬ ДокументыВозникновенияРасходов
	|ИЗ
	|	ДанныеПоСебестоимости КАК ДанныеПоСебестоимости
	|ГДЕ
	|	НЕ ДанныеПоСебестоимости.ВидОперации = ""Списание""
	|	И НЕ ДанныеПоСебестоимости.ВидОперации = ""ВозвратКлиента""
	|	И НЕ ДанныеПоСебестоимости.ВидОперации = ""ДопРасходы""
	|	И НЕ ДанныеПоСебестоимости.ВидОперации = ""Таможня""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеРасходыТаможня.Организация,
	|	ПрочиеРасходыТаможня.Регистратор,
	|	ПрочиеРасходыТаможня.Период,
	|	ПрочиеРасходыТаможня.НДС,
	|	ПрочиеРасходыТаможня.Сумма,
	|	0 КАК СуммаОплаты,
	|	ПрочиеРасходыТаможня.ХозяйственнаяОперация,
	|	ПрочиеРасходыТаможня.ВидОперации,
	|	ПрочиеРасходыТаможня.ВидРасходов,
	|	ПрочиеРасходыТаможня.ДокументВозникновенияРасходов,
	|	ПрочиеРасходыТаможня.СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|ИЗ
	|	ПрочиеРасходыТаможня КАК ПрочиеРасходыТаможня
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.Период,
	|	СУММА(ПрочиеРасходы.НДС),
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.СтатьяРасходов = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.НДФЛ)
	|				ИЛИ ПрочиеРасходы.СтатьяРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НДФЛ)
	|			ТОГДА СРЕДНЕЕ(ПрочиеРасходы.Сумма)
	|		ИНАЧЕ СУММА(ПрочиеРасходы.Сумма)
	|	КОНЕЦ,
	|	СУММА(0) КАК СуммаОплаты,
	|	ПрочиеРасходы.ХозяйственнаяОперация,
	|	ПрочиеРасходы.ВидОперации,
	|	ПрочиеРасходы.ВидРасходов,
	|	ПрочиеРасходы.ДокументВозникновенияРасходов,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.ВидДеятельности
	|ИЗ
	|	ПрочиеРасходы КАК ПрочиеРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.ХозяйственнаяОперация,
	|	ПрочиеРасходы.ВидРасходов,
	|	ПрочиеРасходы.ДокументВозникновенияРасходов,
	|	ПрочиеРасходы.ВидОперации,
	|	ПрочиеРасходы.ВидДеятельности
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыПоЗарплатеИНалогам.Организация,
	|	РасходыПоЗарплатеИНалогам.Регистратор,
	|	РасходыПоЗарплатеИНалогам.Период,
	|	РасходыПоЗарплатеИНалогам.НДС,
	|	РасходыПоЗарплатеИНалогам.Сумма,
	|	0 КАК СуммаОплаты,
	|	РасходыПоЗарплатеИНалогам.ХозяйственнаяОперация,
	|	РасходыПоЗарплатеИНалогам.ВидОперации,
	|	РасходыПоЗарплатеИНалогам.ВидРасходов,
	|	РасходыПоЗарплатеИНалогам.ДокументВозникновенияРасходов,
	|	РасходыПоЗарплатеИНалогам.СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|ИЗ
	|	РасходыПоЗарплате КАК РасходыПоЗарплатеИНалогам
	|ГДЕ
	|	РасходыПоЗарплатеИНалогам.Сумма > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыПоЗарплатеИНалогам.Организация,
	|	РасходыПоЗарплатеИНалогам.Регистратор,
	|	РасходыПоЗарплатеИНалогам.Период,
	|	РасходыПоЗарплатеИНалогам.НДС,
	|	РасходыПоЗарплатеИНалогам.Сумма,
	|	ВЫБОР КОГДА ЕстьNULL(ОплатаЗаСчетБольничного.Сумма, 0) > РасходыПоЗарплатеИНалогам.Сумма
	|	ТОГДА РасходыПоЗарплатеИНалогам.Сумма
	|	ИНАЧЕ ЕстьNULL(ОплатаЗаСчетБольничного.Сумма, 0) КОНЕЦ КАК СуммаОплаты,
	|	РасходыПоЗарплатеИНалогам.ХозяйственнаяОперация,
	|	РасходыПоЗарплатеИНалогам.ВидОперации,
	|	РасходыПоЗарплатеИНалогам.ВидРасходов,
	|	РасходыПоЗарплатеИНалогам.ДокументВозникновенияРасходов,
	|	РасходыПоЗарплатеИНалогам.СтатьяРасходов,
	|	РасходыПоЗарплатеИНалогам.ВидДеятельности
	|ИЗ
	|	РасходыПоНалогам КАК РасходыПоЗарплатеИНалогам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОплатыЗаСчетРанееВнесенныхСтраховыхВзносов КАК ОплатаЗаСчетБольничного
	|			ПО РасходыПоЗарплатеИНалогам.Организация = ОплатаЗаСчетБольничного.Организация
	|			И РасходыПоЗарплатеИНалогам.СтатьяРасходов = ОплатаЗаСчетБольничного.СтатьяРасходов
	|			И РасходыПоЗарплатеИНалогам.ДокументВозникновенияРасходов = ОплатаЗаСчетБольничного.Регистратор
	|		
	|ГДЕ
	|	РасходыПоЗарплатеИНалогам.Сумма > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходыПоКредитам.Организация,
	|	РасходыПоКредитам.Регистратор,
	|	РасходыПоКредитам.Период,
	|	РасходыПоКредитам.НДС,
	|	РасходыПоКредитам.Сумма,
	|	0 КАК СуммаОплаты,
	|	РасходыПоКредитам.ХозяйственнаяОперация,
	|	РасходыПоКредитам.ВидОперации,
	|	РасходыПоКредитам.ВидРасходов,
	|	РасходыПоКредитам.ДокументВозникновенияРасходов,
	|	РасходыПоКредитам.СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|ИЗ
	|	РасходыПоКредитам КАК РасходыПоКредитам
	|ГДЕ
	|	РасходыПоКредитам.ВидОперации = ""Приход""
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ДокументВозникновенияРасходов,
	|	Регистратор,
	|	ВидРасходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаКДокументамДопРасходов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеПоСебестоимости.Организация КАК Организация,
	|	ДанныеПоСебестоимости.Регистратор КАК Регистратор,
	|	ДанныеПоСебестоимости.Период,
	|	ДанныеПоСебестоимости.НДС,
	|	ДанныеПоСебестоимости.Сумма,
	|	0 КАК СуммаОплаты,
	|	ДанныеПоСебестоимости.ХозяйственнаяОперация,
	|	ДанныеПоСебестоимости.ВидОперации,
	|	ДанныеПоСебестоимости.ВидРасходов КАК ВидРасходов,
	|	ДанныеПоСебестоимости.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	ДанныеПоСебестоимости.СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения) КАК ВидДеятельности
	|ПОМЕСТИТЬ ДокументыДопРасходов
	|ИЗ
	|	ДанныеПоСебестоимости КАК ДанныеПоСебестоимости
	|ГДЕ
	|	ДанныеПоСебестоимости.ВидОперации = ""ДопРасходы""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеПоСебестоимости.Организация,
	|	ДанныеПоСебестоимости.Регистратор,
	|	ДанныеПоСебестоимости.Период,
	|	ДанныеПоСебестоимости.НДС,
	|	ДанныеПоСебестоимости.Сумма,
	|	0,
	|	ДанныеПоСебестоимости.ХозяйственнаяОперация,
	|	ДанныеПоСебестоимости.ВидОперации,
	|	ДанныеПоСебестоимости.ВидРасходов,
	|	ДанныеПоСебестоимости.ДокументВозникновенияРасходов,
	|	ДанныеПоСебестоимости.СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|ИЗ
	|	ДанныеПоСебестоимости КАК ДанныеПоСебестоимости
	|ГДЕ
	|	ДанныеПоСебестоимости.ВидОперации = ""Таможня""
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Регистратор";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаКДокументамСписанияРасходов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеПоСебестоимости.Организация КАК Организация,
	|	ДанныеПоСебестоимости.Регистратор КАК Регистратор,
	|	ДанныеПоСебестоимости.Период,
	|	ДанныеПоСебестоимости.НДС,
	|	ДанныеПоСебестоимости.Сумма,
	|	ДанныеПоСебестоимости.ХозяйственнаяОперация,
	|	ДанныеПоСебестоимости.ВидОперации,
	|	ДанныеПоСебестоимости.ВидРасходов КАК ВидРасходов,
	|	ДанныеПоСебестоимости.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	ДанныеПоСебестоимости.СтатьяРасходов,
	|	ДанныеПоСебестоимости.ВидДеятельности,
	|	ДанныеПоСебестоимости.ПризнаватьРасходамиПриУСН
	|ПОМЕСТИТЬ ДокументыСписанияРасходов
	|ИЗ
	|	ДанныеПоСебестоимости КАК ДанныеПоСебестоимости
	|ГДЕ
	|	(ДанныеПоСебестоимости.ВидОперации = ""Списание""
	|			ИЛИ ДанныеПоСебестоимости.ВидОперации = ""ВозвратКлиента"")
	|	И НЕ ДанныеПоСебестоимости.ДокументВозникновенияРасходов = НЕОПРЕДЕЛЕНО
	|	И НЕ ДанныеПоСебестоимости.ДокументВозникновенияРасходов ЕСТЬ NULL 
	|	И (ДанныеПоСебестоимости.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ИЛИ ДанныеПоСебестоимости.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|				И (НЕ ДанныеПоСебестоимости.ВидДеятельности = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|					ИЛИ НЕ ДанныеПоСебестоимости.ПризнаватьРасходамиПриУСН))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ВидРасходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаКДокументамОплатыРасходов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПлатежныеДокументы.Организация,
	|	ПлатежныеДокументы.Регистратор,
	|	ПлатежныеДокументы.Период,
	|	ПлатежныеДокументы.ДокументВозникновенияРасходов,
	|	ПлатежныеДокументы.НДС,
	|	ПлатежныеДокументы.Сумма,
	|	ПлатежныеДокументы.ХозяйственнаяОперация,
	|	ПлатежныеДокументы.ВидОперации,
	|	Остатки.ВидРасходов,
	|	Остатки.СтатьяРасходов,
	|	Остатки.НДСОстаток КАК НДСРасходов,
	|	Остатки.СуммаРасходовОстаток КАК СуммаРасходов,
	|	ПлатежныеДокументы.Период КАК ПериодОплаты
	|ПОМЕСТИТЬ ДокументыОплаты
	|ИЗ
	|	ПлатежныеДокументы КАК ПлатежныеДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ПлатежныеДокументы.Организация = Остатки.Организация
	|			И ПлатежныеДокументы.ДокументВозникновенияРасходов = Остатки.ДокументВозникновенияРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлатежныеДокументы.Организация,
	|	ПлатежныеДокументы.Регистратор КАК Регистратор,
	|	ВЫБОР
	|		КОГДА ПлатежныеДокументы.Период < ДокументыВозникновенияРасходов.Период
	|			ТОГДА ДокументыВозникновенияРасходов.Период
	|		ИНАЧЕ ПлатежныеДокументы.Период
	|	КОНЕЦ КАК Период,
	|	ПлатежныеДокументы.ДокументВозникновенияРасходов,
	|	ПлатежныеДокументы.НДС,
	|	ПлатежныеДокументы.Сумма,
	|	ПлатежныеДокументы.ХозяйственнаяОперация,
	|	ПлатежныеДокументы.ВидОперации,
	|	ДокументыВозникновенияРасходов.ВидРасходов КАК ВидРасходов,
	|	ДокументыВозникновенияРасходов.СтатьяРасходов,
	|	ДокументыВозникновенияРасходов.НДС КАК НДСРасходов,
	|	ДокументыВозникновенияРасходов.Сумма КАК СуммаРасходов,
	|	ПлатежныеДокументы.Период КАК ПериодОплаты
	|ИЗ
	|	ПлатежныеДокументы КАК ПлатежныеДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыВозникновенияРасходов КАК ДокументыВозникновенияРасходов
	|		ПО ПлатежныеДокументы.Организация = ДокументыВозникновенияРасходов.Организация
	|			И ПлатежныеДокументы.ДокументВозникновенияРасходов = ДокументыВозникновенияРасходов.ДокументВозникновенияРасходов
	|			И (НЕ ДокументыВозникновенияРасходов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата))
	|			И (НЕ ДокументыВозникновенияРасходов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги))
	|			И (НЕ ДокументыВозникновенияРасходов.ВидОперации = ""ВозвратПоставщику"")
	|ГДЕ
	|	НЕ ДокументыВозникновенияРасходов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|	И НЕ ДокументыВозникновенияРасходов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|	И НЕ ДокументыВозникновенияРасходов.ВидОперации = ""ВозвратПоставщику""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлатежныеДокументы.Организация,
	|	ПлатежныеДокументы.Регистратор,
	|	ПлатежныеДокументы.Период,
	|	Остатки.ДокументВозникновенияРасходов,
	|	ПлатежныеДокументы.НДС,
	|	ПлатежныеДокументы.Сумма,
	|	ПлатежныеДокументы.ХозяйственнаяОперация,
	|	ПлатежныеДокументы.ВидОперации,
	|	Остатки.ВидРасходов,
	|	Остатки.СтатьяРасходов,
	|	Остатки.НДСОстаток,
	|	Остатки.СуммаРасходовОстаток,
	|	ПлатежныеДокументы.Период
	|ИЗ
	|	ПлатежныеДокументы КАК ПлатежныеДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиДопРасходов КАК Остатки
	|		ПО ПлатежныеДокументы.Организация = Остатки.Организация
	|			И ПлатежныеДокументы.ДокументВозникновенияРасходов = Остатки.ДокументПоступленияРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлатежныеДокументы.Организация,
	|	ПлатежныеДокументы.Регистратор,
	|	ПлатежныеДокументы.Период,
	|	Остатки.ДокументВозникновенияРасходов,
	|	ВЫБОР КОГДА ПлатежныеДокументы.НДС < Остатки.НДСОстаток ТОГДА ПлатежныеДокументы.НДС ИНАЧЕ Остатки.НДСОстаток КОНЕЦ,
	|	ВЫБОР КОГДА ПлатежныеДокументы.Сумма < Остатки.СуммаРасходовОстаток ТОГДА ПлатежныеДокументы.Сумма ИНАЧЕ Остатки.СуммаРасходовОстаток КОНЕЦ,
	|	ПлатежныеДокументы.ХозяйственнаяОперация,
	|	ПлатежныеДокументы.ВидОперации,
	|	Остатки.ВидРасходов,
	|	Остатки.СтатьяРасходов,
	|	Остатки.НДСОстаток,
	|	Остатки.СуммаРасходовОстаток,
	|	ПлатежныеДокументы.Период
	|ИЗ
	|	ПлатежныеДокументы КАК ПлатежныеДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиДопРасходов КАК Остатки
	|		ПО ПлатежныеДокументы.Организация = Остатки.Организация
	|			И (ВЫРАЗИТЬ(ПлатежныеДокументы.ДокументВозникновенияРасходов КАК Документ.КорректировкаПоступления).ДокументОснование = Остатки.ДокументПоступленияРасходов)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыВозникновенияРасходов КАК ТекущиеРасходы
	|		ПО ПлатежныеДокументы.Организация = ТекущиеРасходы.Организация
	|			И ПлатежныеДокументы.ДокументВозникновенияРасходов = ТекущиеРасходы.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокументыДопРасходов КАК ТекущиеДопРасходы
	|		ПО ПлатежныеДокументы.Организация = ТекущиеДопРасходы.Организация
	|			И ПлатежныеДокументы.ДокументВозникновенияРасходов = ТекущиеДопРасходы.Регистратор
	|ГДЕ
	|	ТекущиеРасходы.Регистратор ЕСТЬ NULL 
	|	И ТекущиеДопРасходы.Регистратор ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПлатежныеДокументы.Организация,
	|	ПлатежныеДокументы.Регистратор,
	|	ВЫБОР
	|		КОГДА ПлатежныеДокументы.Период < ДокументыДопРасходов.Период
	|			ТОГДА ДокументыДопРасходов.Период
	|		ИНАЧЕ ПлатежныеДокументы.Период
	|	КОНЕЦ,
	|	ДокументыДопРасходов.ДокументВозникновенияРасходов,
	|	ВЫБОР КОГДА ПлатежныеДокументы.НДС < ДокументыДопРасходов.НДС ТОГДА ПлатежныеДокументы.НДС ИНАЧЕ ДокументыДопРасходов.НДС КОНЕЦ,
	|	ВЫБОР КОГДА ПлатежныеДокументы.Сумма < ДокументыДопРасходов.Сумма ТОГДА ПлатежныеДокументы.Сумма ИНАЧЕ ДокументыДопРасходов.Сумма КОНЕЦ,
	|	ПлатежныеДокументы.ХозяйственнаяОперация,
	|	ПлатежныеДокументы.ВидОперации,
	|	ДокументыДопРасходов.ВидРасходов,
	|	ДокументыДопРасходов.СтатьяРасходов,
	|	ДокументыДопРасходов.НДС,
	|	ДокументыДопРасходов.Сумма,
	|	ПлатежныеДокументы.Период
	|ИЗ
	|	ПлатежныеДокументы КАК ПлатежныеДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыДопРасходов КАК ДокументыДопРасходов
	|		ПО ПлатежныеДокументы.Организация = ДокументыДопРасходов.Организация
	|			И ПлатежныеДокументы.ДокументВозникновенияРасходов = ДокументыДопРасходов.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходыПоКредитамОплаты.Организация,
	|	РасходыПоКредитамОплаты.Регистратор,
	|	РасходыПоКредитамОплаты.Период,
	|	РасходыПоКредитамОплаты.ДокументВозникновенияРасходов,
	|	РасходыПоКредитамОплаты.НДС,
	|	РасходыПоКредитамОплаты.Сумма,
	|	РасходыПоКредитамОплаты.ХозяйственнаяОперация,
	|	РасходыПоКредитамОплаты.ВидОперации,
	|	РасходыПоКредитамОплаты.ВидРасходов,
	|	Остатки.СтатьяРасходов,
	|	РасходыПоКредитамОплаты.НДС,
	|	РасходыПоКредитамОплаты.Сумма,
	|	РасходыПоКредитамОплаты.Период
	|ИЗ
	|	РасходыПоКредитам КАК РасходыПоКредитамОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО РасходыПоКредитамОплаты.Организация = Остатки.Организация
	|			И РасходыПоКредитамОплаты.ДокументВозникновенияРасходов = Остатки.ДокументВозникновенияРасходов
	|			И РасходыПоКредитамОплаты.ВидРасходов = Остатки.ВидРасходов
	|ГДЕ
	|	РасходыПоКредитамОплаты.ВидОперации = ""Оплата""
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходыПоКредитамОплаты.Организация,
	|	РасходыПоКредитамОплаты.Регистратор,
	|	РасходыПоКредитамОплаты.Период,
	|	РасходыПоКредитамОплаты.ДокументВозникновенияРасходов,
	|	РасходыПоКредитамОплаты.НДС,
	|	РасходыПоКредитамОплаты.Сумма,
	|	РасходыПоКредитамОплаты.ХозяйственнаяОперация,
	|	РасходыПоКредитамОплаты.ВидОперации,
	|	РасходыПоКредитамОплаты.ВидРасходов,
	|	РасходыПоКредитамРасходы.СтатьяРасходов,
	|	СУММА(РасходыПоКредитамРасходы.НДС),
	|	СУММА(РасходыПоКредитамРасходы.Сумма),
	|	РасходыПоКредитамОплаты.Период
	|ИЗ
	|	РасходыПоКредитам КАК РасходыПоКредитамОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходыПоКредитам КАК РасходыПоКредитамРасходы
	|		ПО РасходыПоКредитамОплаты.Организация = РасходыПоКредитамРасходы.Организация
	|			И РасходыПоКредитамОплаты.ДокументВозникновенияРасходов = РасходыПоКредитамРасходы.ДокументВозникновенияРасходов
	|			И (РасходыПоКредитамРасходы.ВидОперации = ""Приход"")
	|			И РасходыПоКредитамОплаты.Период > РасходыПоКредитамРасходы.Период
	|ГДЕ
	|	РасходыПоКредитамОплаты.ВидОперации = ""Оплата""
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоКредитамОплаты.Организация,
	|	РасходыПоКредитамОплаты.ВидОперации,
	|	РасходыПоКредитамОплаты.ДокументВозникновенияРасходов,
	|	РасходыПоКредитамОплаты.Период,
	|	РасходыПоКредитамРасходы.СтатьяРасходов,
	|	РасходыПоКредитамОплаты.Регистратор,
	|	РасходыПоКредитамОплаты.Сумма,
	|	РасходыПоКредитамОплаты.НДС,
	|	РасходыПоКредитамОплаты.ВидРасходов,
	|	РасходыПоКредитамОплаты.ХозяйственнаяОперация,
	|	РасходыПоКредитамОплаты.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОплатыНалога.Организация,
	|	ДокументыОплатыНалога.Регистратор,
	|	ДокументыОплатыНалога.Период,
	|	Остатки.ДокументВозникновенияРасходов,
	|	0,
	|	ДокументыОплатыНалога.Сумма,
	|	ДокументыОплатыНалога.ХозяйственнаяОперация,
	|	""ОплатаБезРазбивкиПоДокументам"",
	|	ДокументыОплатыНалога.ВидРасходов,
	|	ДокументыОплатыНалога.СтатьяРасходов,
	|	Остатки.НДСОстаток,
	|	Остатки.СуммаРасходовОстаток,
	|	ДокументыОплатыНалога.Период
	|ИЗ
	|	ДокументыОплатыНалога КАК ДокументыОплатыНалога
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ДокументыОплатыНалога.Организация = Остатки.Организация
	|			И ДокументыОплатыНалога.СтатьяРасходов = Остатки.СтатьяРасходов
	|			И (Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги))
	|ГДЕ
	|	Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОплатыНалога.Организация,
	|	ДокументыОплатыНалога.Регистратор,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыНалога.Период < ДокументыНачисленияНалогов.Период
	|			ТОГДА ДокументыНачисленияНалогов.Период
	|		ИНАЧЕ ДокументыОплатыНалога.Период
	|	КОНЕЦ,
	|	ДокументыНачисленияНалогов.ДокументВозникновенияРасходов,
	|	0,
	|	ДокументыОплатыНалога.Сумма,
	|	ДокументыОплатыНалога.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыНалога.Период > ДокументыНачисленияНалогов.Период
	|			ТОГДА ""ОплатаБезРазбивкиПоДокументам""
	|		ИНАЧЕ ""АвансБезРазбивкиПоДокументам""
	|	КОНЕЦ,
	|	ДокументыОплатыНалога.ВидРасходов,
	|	ДокументыОплатыНалога.СтатьяРасходов,
	|	ДокументыНачисленияНалогов.НДС,
	|	ДокументыНачисленияНалогов.Сумма,
	|	ДокументыОплатыНалога.Период
	|ИЗ
	|	ДокументыОплатыНалога КАК ДокументыОплатыНалога
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходыПоНалогам КАК ДокументыНачисленияНалогов
	|		ПО ДокументыОплатыНалога.Организация = ДокументыНачисленияНалогов.Организация
	|			И ДокументыОплатыНалога.СтатьяРасходов = ДокументыНачисленияНалогов.СтатьяРасходов
	|			И (ДокументыНачисленияНалогов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги))
	|ГДЕ
	|	ДокументыНачисленияНалогов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОплатыЗарплаты.Организация,
	|	ДокументыОплатыЗарплаты.Регистратор,
	|	ДокументыОплатыЗарплаты.Период,
	|	Остатки.ДокументВозникновенияРасходов,
	|	0,
	|	ДокументыОплатыЗарплаты.Сумма,
	|	ДокументыОплатыЗарплаты.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыЗарплаты.Период > ДокументыОплатыЗарплаты.ПериодРегистрации
	|			ТОГДА ""ОплатаБезРазбивкиПоДокументам""
	|		ИНАЧЕ ""АвансБезРазбивкиПоДокументам""
	|	КОНЕЦ,
	|	ДокументыОплатыЗарплаты.ВидРасходов,
	|	Остатки.СтатьяРасходов,
	|	Остатки.НДСОстаток,
	|	Остатки.СуммаРасходовОстаток,
	|	ДокументыОплатыЗарплаты.Период
	|ИЗ
	|	ДокументыОплатыЗарплаты КАК ДокументыОплатыЗарплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ДокументыОплатыЗарплаты.Организация = Остатки.Организация
	|			И ДокументыОплатыЗарплаты.ВидРасходов = Остатки.ВидРасходов
	|			И (ДокументыОплатыЗарплаты.ПериодРегистрации = ВЫРАЗИТЬ(Остатки.ДокументВозникновенияРасходов КАК Документ.ОтражениеЗарплатыВФинансовомУчете).ПериодРегистрации)
	|			И (Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата))
	|ГДЕ
	|	Остатки.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОплатыЗарплаты.Организация,
	|	ДокументыОплатыЗарплаты.Регистратор,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыЗарплаты.Период < ДокументыНачисленияЗарплаты.Период
	|			ТОГДА ДокументыНачисленияЗарплаты.Период
	|		ИНАЧЕ ДокументыОплатыЗарплаты.Период
	|	КОНЕЦ,
	|	ДокументыНачисленияЗарплаты.ДокументВозникновенияРасходов,
	|	0,
	|	ДокументыОплатыЗарплаты.Сумма,
	|	ДокументыОплатыЗарплаты.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыЗарплаты.Период > ДокументыОплатыЗарплаты.ПериодРегистрации
	|			ТОГДА ""ОплатаБезРазбивкиПоДокументам""
	|		ИНАЧЕ ""АвансБезРазбивкиПоДокументам""
	|	КОНЕЦ,
	|	ДокументыОплатыЗарплаты.ВидРасходов,
	|	ДокументыНачисленияЗарплаты.СтатьяРасходов,
	|	ДокументыНачисленияЗарплаты.НДС,
	|	ДокументыНачисленияЗарплаты.Сумма,
	|	ДокументыОплатыЗарплаты.Период
	|ИЗ
	|	ДокументыОплатыЗарплаты КАК ДокументыОплатыЗарплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходыПоЗарплате КАК ДокументыНачисленияЗарплаты
	|		ПО ДокументыОплатыЗарплаты.Организация = ДокументыНачисленияЗарплаты.Организация
	|			И ДокументыОплатыЗарплаты.ВидРасходов = ДокументыНачисленияЗарплаты.ВидРасходов
	|			И (ДокументыОплатыЗарплаты.ПериодРегистрации = ВЫРАЗИТЬ(ДокументыНачисленияЗарплаты.ДокументВозникновенияРасходов КАК Документ.ОтражениеЗарплатыВФинансовомУчете).ПериодРегистрации)
	|			И (ДокументыНачисленияЗарплаты.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата))
	|			И НЕ ДокументыНачисленияЗарплаты.СтатьяРасходов В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ФСС), ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ФССНС))
	|ГДЕ
	|	ДокументыНачисленияЗарплаты.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|	И НЕ ДокументыНачисленияЗарплаты.СтатьяРасходов В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ФСС), ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ФССНС))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОплатыПодотчетникам.Организация,
	|	ДокументыОплатыПодотчетникам.Регистратор,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыПодотчетникам.Период < ДокументыОтчетовПодотчетников.Период
	|			ТОГДА ДокументыОтчетовПодотчетников.Период
	|		ИНАЧЕ ДокументыОплатыПодотчетникам.Период
	|	КОНЕЦ,
	|	ДокументыОтчетовПодотчетников.ДокументВозникновенияРасходов,
	|	0,
	|	ДокументыОплатыПодотчетникам.Сумма,
	|	ДокументыОплатыПодотчетникам.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ДокументыОплатыПодотчетникам.Период > ДокументыОтчетовПодотчетников.Период
	|			ТОГДА ""ОплатаБезРазбивкиПоДокументам""
	|		ИНАЧЕ ""АвансБезРазбивкиПоДокументам""
	|	КОНЕЦ,
	|	ДокументыОтчетовПодотчетников.ВидРасходов,
	|	ДокументыОтчетовПодотчетников.СтатьяРасходов,
	|	ДокументыОтчетовПодотчетников.НДС,
	|	ДокументыОтчетовПодотчетников.Сумма,
	|	ДокументыОплатыПодотчетникам.Период
	|ИЗ
	|	ДокументыОплатыПодотчетникам КАК ДокументыОплатыПодотчетникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыВозникновенияРасходов КАК ДокументыОтчетовПодотчетников
	|		ПО ДокументыОплатыПодотчетникам.Организация = ДокументыОтчетовПодотчетников.Организация
	|			И (ДокументыОплатыПодотчетникам.ПодотчетноеЛицо = ВЫРАЗИТЬ(ДокументыОтчетовПодотчетников.ДокументВозникновенияРасходов КАК Документ.АвансовыйОтчет).ПодотчетноеЛицо
	|				ИЛИ ДокументыОплатыПодотчетникам.ПодотчетноеЛицо = ВЫРАЗИТЬ(ДокументыОтчетовПодотчетников.ДокументВозникновенияРасходов КАК Документ.ПоступлениеТоваровУслуг).ПодотчетноеЛицо
	|				ИЛИ ДокументыОплатыПодотчетникам.ПодотчетноеЛицо = ВЫРАЗИТЬ(ДокументыОтчетовПодотчетников.ДокументВозникновенияРасходов КАК Документ.ПоступлениеУслугПрочихАктивов).ПодотчетноеЛицо)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОплатыПодотчетникам.Организация,
	|	ДокументыОплатыПодотчетникам.Регистратор,
	|	ДокументыОплатыПодотчетникам.Период,
	|	Остатки.ДокументВозникновенияРасходов,
	|	0,
	|	ДокументыОплатыПодотчетникам.Сумма,
	|	ДокументыОплатыПодотчетникам.ХозяйственнаяОперация,
	|	""ОплатаБезРазбивкиПоДокументам"",
	|	Остатки.ВидРасходов,
	|	Остатки.СтатьяРасходов,
	|	Остатки.НДСОстаток,
	|	Остатки.СуммаРасходовОстаток,
	|	ДокументыОплатыПодотчетникам.Период
	|ИЗ
	|	ДокументыОплатыПодотчетникам КАК ДокументыОплатыПодотчетникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Остатки КАК Остатки
	|		ПО ДокументыОплатыПодотчетникам.Организация = Остатки.Организация
	|			И (ДокументыОплатыПодотчетникам.ПодотчетноеЛицо = ВЫРАЗИТЬ(Остатки.ДокументВозникновенияРасходов КАК Документ.АвансовыйОтчет).ПодотчетноеЛицо
	|				ИЛИ ДокументыОплатыПодотчетникам.ПодотчетноеЛицо = ВЫРАЗИТЬ(Остатки.ДокументВозникновенияРасходов КАК Документ.ПоступлениеТоваровУслуг).ПодотчетноеЛицо
	|				ИЛИ ДокументыОплатыПодотчетникам.ПодотчетноеЛицо = ВЫРАЗИТЬ(Остатки.ДокументВозникновенияРасходов КАК Документ.ПоступлениеУслугПрочихАктивов).ПодотчетноеЛицо)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ВидРасходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицыРегистраторовРасходов()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокументыВозникновенияРасходов.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|	ДокументыВозникновенияРасходов.Регистратор КАК Регистратор,
	|	ДокументыВозникновенияРасходов.СуммаОплаты КАК СуммаОплаты,
	|	0 КАК СуммаОтгрузки,
	|	ДокументыВозникновенияРасходов.ВидОперации,
	|	ДокументыВозникновенияРасходов.ВидРасходов,
	|	ДокументыВозникновенияРасходов.СтатьяРасходов,
	|	ДокументыВозникновенияРасходов.Период КАК Период,
	|	ДокументыВозникновенияРасходов.ХозяйственнаяОперация,
	|	ДокументыВозникновенияРасходов.Организация,
	|	ДокументыВозникновенияРасходов.НДС КАК НДС,
	|	ДокументыВозникновенияРасходов.Сумма КАК СуммаРасходов,
	|	ВЫБОР
	|		КОГДА ДокументыВозникновенияРасходов.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ДокументыВозникновенияРасходов.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВидДеятельностиДляНалоговогоУчетаЗатрат, ДокументыВозникновенияРасходов.ВидДеятельности)
	|		КОГДА ДокументыВозникновенияРасходов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|			ТОГДА ДокументыВозникновенияРасходов.ВидДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|	КОНЕЦ КАК ВидДеятельности,
	|	ВЫБОР
	|		КОГДА ДокументыВозникновенияРасходов.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ДокументыВозникновенияРасходов.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ПризнаватьРасходамиПриУСН, ИСТИНА)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПризнаватьРасходамиПриУСН,
	|	ВЫБОР
	|		КОГДА ДокументыВозникновенияРасходов.ВидРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации
	|				ИЛИ ДокументыВозникновенияРасходов.ВидРасходов ССЫЛКА Справочник.НематериальныеАктивы
	|			ТОГДА ""РасходыПриУСНОСиНМА""
	|		КОГДА ДокументыВозникновенияРасходов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ""РасходыПриУСНТовары""
	|		КОГДА ДокументыВозникновенияРасходов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|			ТОГДА ""РасходыПриУСНМатериалы""
	|		ИНАЧЕ ""РасходыПриУСН""
	|	КОНЕЦ КАК ВидРегистра,
	|	ДОБАВИТЬКДАТЕ(ДокументыВозникновенияРасходов.Период, СЕКУНДА, 1) КАК ДопПериод
	|ПОМЕСТИТЬ ТаблицаРегистраторовРасходов
	|ИЗ
	|	ДокументыВозникновенияРасходов КАК ДокументыВозникновенияРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыВозникновенияРасходов.ДокументВозникновенияРасходов,
	|	ДокументыВозникновенияРасходов.Регистратор,
	|	ДокументыВозникновенияРасходов.СуммаОплаты,
	|	0,
	|	ДокументыВозникновенияРасходов.ВидОперации,
	|	ДокументыВозникновенияРасходов.ВидРасходов,
	|	ДокументыВозникновенияРасходов.СтатьяРасходов,
	|	ДокументыВозникновенияРасходов.Период,
	|	ДокументыВозникновенияРасходов.ХозяйственнаяОперация,
	|	ДокументыВозникновенияРасходов.Организация,
	|	ДокументыВозникновенияРасходов.НДС,
	|	ДокументыВозникновенияРасходов.Сумма,
	|	ВЫБОР
	|		КОГДА ДокументыВозникновенияРасходов.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ДокументыВозникновенияРасходов.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВидДеятельностиДляНалоговогоУчетаЗатрат, ДокументыВозникновенияРасходов.ВидДеятельности)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументыВозникновенияРасходов.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ДокументыВозникновенияРасходов.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ПризнаватьРасходамиПриУСН, ИСТИНА)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументыВозникновенияРасходов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ""РасходыПриУСНТовары""
	|		КОГДА ДокументыВозникновенияРасходов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|			ТОГДА ""РасходыПриУСНМатериалы""
	|		ИНАЧЕ ""РасходыПриУСН""
	|	КОНЕЦ,
	|	ДОБАВИТЬКДАТЕ(ДокументыВозникновенияРасходов.Период, СЕКУНДА, 1)
	|ИЗ
	|	ДокументыДопРасходов КАК ДокументыВозникновенияРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыСписанияРасходов.ДокументВозникновенияРасходов,
	|	ДокументыСписанияРасходов.Регистратор,
	|	0,
	|	ДокументыСписанияРасходов.Сумма,
	|	ДокументыСписанияРасходов.ВидОперации,
	|	ДокументыСписанияРасходов.ВидРасходов,
	|	ДокументыСписанияРасходов.СтатьяРасходов,
	|	ДокументыСписанияРасходов.Период,
	|	ДокументыСписанияРасходов.ХозяйственнаяОперация,
	|	ДокументыСписанияРасходов.Организация,
	|	ДокументыСписанияРасходов.НДС,
	|	0,
	|	ДокументыСписанияРасходов.ВидДеятельности,
	|	ДокументыСписанияРасходов.ПризнаватьРасходамиПриУСН,
	|	ВЫБОР
	|		КОГДА ДокументыСписанияРасходов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ""РасходыПриУСНТовары""
	|		КОГДА ДокументыСписанияРасходов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|			ТОГДА ""РасходыПриУСНМатериалы""
	|		ИНАЧЕ ""РасходыПриУСН""
	|	КОНЕЦ,
	|	ДОБАВИТЬКДАТЕ(ДокументыСписанияРасходов.Период, СЕКУНДА, 2)
	|ИЗ
	|	ДокументыСписанияРасходов КАК ДокументыСписанияРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОплаты.ДокументВозникновенияРасходов,
	|	ДокументыОплаты.Регистратор,
	|	СУММА(ДокументыОплаты.Сумма),
	|	СУММА(0),
	|	ДокументыОплаты.ВидОперации,
	|	ДокументыОплаты.ВидРасходов,
	|	ДокументыОплаты.СтатьяРасходов,
	|	ДокументыОплаты.Период,
	|	ДокументыОплаты.ХозяйственнаяОперация,
	|	ДокументыОплаты.Организация,
	|	СУММА(ДокументыОплаты.НДС),
	|	СУММА(ДокументыОплаты.СуммаРасходов),
	|	ВЫБОР
	|		КОГДА ДокументыОплаты.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ДокументыОплаты.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВидДеятельностиДляНалоговогоУчетаЗатрат, ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументыОплаты.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ДокументыОплаты.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ПризнаватьРасходамиПриУСН, ИСТИНА)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументыОплаты.ВидРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации
	|				ИЛИ ДокументыОплаты.ВидРасходов ССЫЛКА Справочник.НематериальныеАктивы
	|			ТОГДА ""РасходыПриУСНОСиНМА""
	|		КОГДА ДокументыОплаты.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ""РасходыПриУСНТовары""
	|		КОГДА ДокументыОплаты.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|			ТОГДА ""РасходыПриУСНМатериалы""
	|		ИНАЧЕ ""РасходыПриУСН""
	|	КОНЕЦ,
	|	ДокументыОплаты.ПериодОплаты
	|ИЗ
	|	ДокументыОплаты КАК ДокументыОплаты
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОплаты.Регистратор,
	|	ДокументыОплаты.СтатьяРасходов,
	|	ДокументыОплаты.ДокументВозникновенияРасходов,
	|	ДокументыОплаты.ВидРасходов,
	|	ДокументыОплаты.Период,
	|	ДокументыОплаты.Организация,
	|	ДокументыОплаты.ВидОперации,
	|	ДокументыОплаты.ХозяйственнаяОперация,
	|	ДокументыОплаты.ПериодОплаты,
	|	ВЫБОР
	|		КОГДА ДокументыОплаты.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ДокументыОплаты.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВидДеятельностиДляНалоговогоУчетаЗатрат, ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументыОплаты.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ДокументыОплаты.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ПризнаватьРасходамиПриУСН, ИСТИНА)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДокументыОплаты.ВидРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации
	|				ИЛИ ДокументыОплаты.ВидРасходов ССЫЛКА Справочник.НематериальныеАктивы
	|			ТОГДА ""РасходыПриУСНОСиНМА""
	|		КОГДА ДокументыОплаты.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА ""РасходыПриУСНТовары""
	|		КОГДА ДокументыОплаты.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Материалы)
	|			ТОГДА ""РасходыПриУСНМатериалы""
	|		ИНАЧЕ ""РасходыПриУСН""
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВыборкаДокументовДляЗаполненияРасходов(ВременныеТаблицы)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаРегистраторов.ДокументВозникновенияРасходов,
	|	ТаблицаРегистраторов.Регистратор КАК Регистратор,
	|	ТаблицаРегистраторов.СуммаОплаты КАК СуммаОплаты,
	|	ТаблицаРегистраторов.СуммаОтгрузки,
	|	ТаблицаРегистраторов.ВидОперации,
	|	ТаблицаРегистраторов.ВидРасходов,
	|	ТаблицаРегистраторов.СтатьяРасходов,
	|	ТаблицаРегистраторов.Период КАК Период,
	|	ТаблицаРегистраторов.ХозяйственнаяОперация,
	|	ТаблицаРегистраторов.Организация,
	|	ТаблицаРегистраторов.НДС,
	|	ТаблицаРегистраторов.СуммаРасходов,
	|	ВЫБОР
	|		КОГДА ТаблицаРегистраторов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Номенклатура)
	|			ТОГДА 2
	|		КОГДА ТаблицаРегистраторов.ВидРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации
	|				ИЛИ ТаблицаРегистраторов.ВидРасходов ССЫЛКА Справочник.НематериальныеАктивы
	|			ТОГДА 1
	|		КОГДА ТаблицаРегистраторов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Зарплата)
	|			ТОГДА 3
	|		КОГДА ТаблицаРегистраторов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|			ТОГДА 4
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПорядокВидаРасходов,
	|	ВЫБОР
	|		КОГДА ТаблицаРегистраторов.ПризнаватьРасходамиПриУСН
	|				И ТаблицаРегистраторов.ВидДеятельности = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения)
	|			ТОГДА 1
	|		КОГДА ТаблицаРегистраторов.ПризнаватьРасходамиПриУСН
	|				И ТаблицаРегистраторов.ВидДеятельности = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|			ТОГДА 2
	|		КОГДА ТаблицаРегистраторов.ВидДеятельности = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения)
	|			ТОГДА 3
	|		КОГДА ТаблицаРегистраторов.ВидДеятельности = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты)
	|			ТОГДА 4
	|		ИНАЧЕ 10
	|	КОНЕЦ КАК ПорядокСтатьиРасходов,
	|	ВЫБОР
	|		КОГДА ТаблицаРегистраторов.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаРегистраторов.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).РеквизитДопУпорядочивания, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДопПорядокСтатьиРасходов,
	|	ТаблицаРегистраторов.ВидРегистра КАК ВидРегистра,
	|	ТаблицаРегистраторов.ВидДеятельности,
	|	ТаблицаРегистраторов.ПризнаватьРасходамиПриУСН
	|ИЗ
	|	ТаблицаРегистраторовРасходов КАК ТаблицаРегистраторов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	ТаблицаРегистраторов.ДопПериод,
	|	ПорядокВидаРасходов,
	|	ПорядокСтатьиРасходов,
	|	ДопПорядокСтатьиРасходов
	|ИТОГИ
	|	СРЕДНЕЕ(СуммаОплаты)
	|ПО
	|	Регистратор,
	|	ВидРегистра";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
КонецФункции

Функция ВыборкаТаблицыОстатков(ВременныеТаблицы)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.ДокументВозникновенияРасходов,
	|	СУММА(ВложенныйЗапрос.СуммаОплаты) КАК СуммаОплаты,
	|	ВложенныйЗапрос.ВидРасходов,
	|	ВложенныйЗапрос.СтатьяРасходов,
	|	СУММА(ВложенныйЗапрос.СуммаРасходов) КАК СуммаРасходов,
	|	СУММА(ВложенныйЗапрос.НДС) КАК НДС,
	|	СУММА(ВложенныйЗапрос.СуммаОтгрузки) КАК СуммаОтгрузки
	|ИЗ
	|	(ВЫБРАТЬ
	|		Остатки.ДокументВозникновенияРасходов КАК ДокументВозникновенияРасходов,
	|		ВЫБОР
	|			КОГДА СУММА(Остатки.СуммаОплатыОстаток) > СУММА(Остатки.СуммаРасходовОстаток)
	|				ТОГДА СУММА(Остатки.СуммаРасходовОстаток)
	|			ИНАЧЕ СУММА(Остатки.СуммаОплатыОстаток)
	|		КОНЕЦ КАК СуммаОплаты,
	|		Остатки.ВидРасходов КАК ВидРасходов,
	|		Остатки.СтатьяРасходов КАК СтатьяРасходов,
	|		Остатки.СуммаРасходовОстаток КАК СуммаРасходов,
	|		Остатки.НДСОстаток КАК НДС,
	|		Остатки.СуммаОтгрузкиОстаток КАК СуммаОтгрузки
	|	ИЗ
	|		Остатки КАК Остатки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Остатки.ДокументВозникновенияРасходов,
	|		Остатки.ВидРасходов,
	|		Остатки.СтатьяРасходов,
	|		Остатки.СуммаРасходовОстаток,
	|		Остатки.НДСОстаток,
	|		Остатки.СуммаОтгрузкиОстаток
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументыВозникновенияРасходов.ДокументВозникновенияРасходов,
	|		ДокументыВозникновенияРасходов.СуммаОплаты,
	|		ДокументыВозникновенияРасходов.ВидРасходов,
	|		ДокументыВозникновенияРасходов.СтатьяРасходов,
	|		ДокументыВозникновенияРасходов.Сумма,
	|		ДокументыВозникновенияРасходов.НДС,
	|		0
	|	ИЗ
	|		ДокументыВозникновенияРасходов КАК ДокументыВозникновенияРасходов
	|	ГДЕ
	|		НЕ ДокументыВозникновенияРасходов.ВидОперации = ""ВозвратПоставщику""
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументыДопРасходов.ДокументВозникновенияРасходов,
	|		ДокументыДопРасходов.СуммаОплаты,
	|		ДокументыДопРасходов.ВидРасходов,
	|		ДокументыДопРасходов.СтатьяРасходов,
	|		ДокументыДопРасходов.Сумма,
	|		ДокументыДопРасходов.НДС,
	|		0
	|	ИЗ
	|		ДокументыДопРасходов КАК ДокументыДопРасходов) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ВидРасходов,
	|	ВложенныйЗапрос.СтатьяРасходов,
	|	ВложенныйЗапрос.ДокументВозникновенияРасходов";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Результат.Индексы.Добавить("ДокументВозникновенияРасходов, ВидРасходов, СтатьяРасходов");
	
	Возврат Результат;
	
КонецФункции

Функция ВыборкаСуммОплат(ВременныеТаблицы)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПлатежныеДокументы.Регистратор КАК ДокументОплаты,
	|	СУММА(ПлатежныеДокументы.НДС) КАК НДС,
	|	СУММА(ПлатежныеДокументы.Сумма) КАК Сумма
	|ИЗ
	|	ПлатежныеДокументы КАК ПлатежныеДокументы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлатежныеДокументы.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходыПоКредитамОплаты.Регистратор,
	|	СУММА(РасходыПоКредитамОплаты.НДС),
	|	СУММА(РасходыПоКредитамОплаты.Сумма)
	|ИЗ
	|	РасходыПоКредитам КАК РасходыПоКредитамОплаты
	|ГДЕ
	|	РасходыПоКредитамОплаты.ВидОперации = ""Оплата""
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоКредитамОплаты.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОплатыНалога.Регистратор,
	|	СУММА(0),
	|	СУММА(ДокументыОплатыНалога.Сумма)
	|ИЗ
	|	ДокументыОплатыНалога КАК ДокументыОплатыНалога
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОплатыНалога.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОплатыЗарплаты.Регистратор,
	|	СУММА(0),
	|	СУММА(ДокументыОплатыЗарплаты.Сумма)
	|ИЗ
	|	ДокументыОплатыЗарплаты КАК ДокументыОплатыЗарплаты
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОплатыЗарплаты.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыОплатыПодотчетникам.Регистратор,
	|	СУММА(0),
	|	СУММА(ДокументыОплатыПодотчетникам.Сумма)
	|ИЗ
	|	ДокументыОплатыПодотчетникам КАК ДокументыОплатыПодотчетникам
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыОплатыПодотчетникам.Регистратор";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СторноДоходов

// Процедура выполняет сторнирование доходов по деяетельности ЕНВД в КУДиР, ранее записанными приходом ДС.
Процедура СторноДоходовКУДиРПоЕНВД(Параметры, АдресХранилища) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КлючеваяОперация = "УчетПоУСН.СторноДоходовКУДиРПоЕНВД";
	ОписаниеЗамера = Производительность.НачатьЗамерВремени(КлючеваяОперация);
	
	НомерЗадания = ЗакрытиеМесяцаУТВызовСервера.УвеличитьНомерЗадания();

	
	Если НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		НачатьТранзакцию();
		ЗакрытиеМесяцаУТВызовСервера.ЗаблокироватьРегистрЗаданий(НомерЗадания, Параметры.Организация, Перечисления.ОперацииЗакрытияМесяца.СторноДоходовКУДиРПоЕНВД);
		ДанныеКСторнированиюДоходовЗаМесяц = ЗакрытиеМесяцаУТВызовСервера.ЗаданияКРасчетуЗаМесяц(
			Параметры.НачалоПериода, Параметры.КонецПериода, НомерЗадания, Параметры.Организация,
			Перечисления.ОперацииЗакрытияМесяца.СторноДоходовКУДиРПоЕНВД);
		ЗафиксироватьТранзакцию();
	Иначе
		ДанныеКСторнированиюДоходовЗаМесяц = ЗакрытиеМесяцаУТВызовСервера.ЗаданияКРасчетуЗаМесяц(
			Параметры.НачалоПериода, Параметры.КонецПериода, НомерЗадания, Параметры.Организация,
			Перечисления.ОперацииЗакрытияМесяца.СторноДоходовКУДиРПоЕНВД);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	Запрос.УстановитьПараметр("НачДата", Параметры.НачалоПериода);
	Запрос.УстановитьПараметр("КонДата", Параметры.КонецПериода);
	Запрос.УстановитьПараметр("НачГраница", Новый Граница(Параметры.НачалоПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонГраница", Новый Граница(Параметры.КонецПериода, ВидГраницы.Включая));
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ШаблонОтступа = ";"+Символы.ПС+Символы.ПС+СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("/", 20)+Символы.ПС;
	
	Запрос.Текст = Запрос.Текст + ТекстЗапросаРегистраторовСторноКУДиРДоходы() + ШаблонОтступа;
	
	Запрос.Выполнить();
	
	Производительность.ЗафиксироватьЗамерВремени(ОписаниеЗамера);
	КоличествоОбработанныхДанных = 0;
	
	// Очистим движения документов, которые делали движения за указанный период.
	ОчиститьДвиженияРегистровУСНЗаУказанныйПериод(Запрос.Параметры, КоличествоОбработанныхДанных);
	
	Производительность.ЗафиксироватьЗамерВремени(ОписаниеЗамера, КоличествоОбработанныхДанных);
	КоличествоОбработанныхДанных = 0;
	
	СторнироватьДоходыОтраженныеПоДеятельностиЕНВД(Параметры, Запрос.МенеджерВременныхТаблиц, КоличествоОбработанныхДанных);
	
	Если НЕ ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		НачатьТранзакцию();
		ЗакрытиеМесяцаУТВызовСервера.ЗаблокироватьРегистрЗаданий(НомерЗадания, Параметры.Организация, Перечисления.ОперацииЗакрытияМесяца.СторноДоходовКУДиРПоЕНВД);
		ЗакрытиеМесяцаУТВызовСервера.ЗафиксироватьРасчет(Параметры.НачалоПериода, Параметры.КонецПериода,
			(Параметры.КонецПериода + 1), НомерЗадания, Перечисления.ОперацииЗакрытияМесяца.СторноДоходовКУДиРПоЕНВД,
			ДанныеКСторнированиюДоходовЗаМесяц);
		ЗафиксироватьТранзакцию();
	Иначе
		ЗакрытиеМесяцаУТВызовСервера.ЗафиксироватьРасчет(Параметры.НачалоПериода, Параметры.КонецПериода,
			(Параметры.КонецПериода + 1), НомерЗадания, Перечисления.ОперацииЗакрытияМесяца.СторноДоходовКУДиРПоЕНВД,
			ДанныеКСторнированиюДоходовЗаМесяц);
	КонецЕсли;
		
	Производительность.ЗакончитьЗамерВремени(ОписаниеЗамера, КоличествоОбработанныхДанных);
	
КонецПроцедуры

Процедура СторнироватьДоходыОтраженныеПоДеятельностиЕНВД(ПараметрыЗапроса, ВременныеТаблицы, КоличествоОбработанныхДанных = 0)
	
	Результат = РезультатЗапросаДокументовДляЗаполненияСторно(ПараметрыЗапроса, ВременныеТаблицы);
	
	ВыборкаДокументовРеализацииНаЕНВД = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументовРеализацииНаЕНВД.Следующий() Цикл
		
		СуммаЕНВД = ВыборкаДокументовРеализацииНаЕНВД.СуммаДоходаНаЕНВД;
		Выборка = ВыборкаДокументовРеализацииНаЕНВД.Выбрать();
		
		Пока Выборка.Следующий() И СуммаЕНВД <> 0 Цикл
		
			НаборЗаписей = РегистрыНакопления.КнигаУчетаДоходовИРасходов.СоздатьНаборЗаписей();
			НаборЗаписей.ДополнительныеСвойства.Вставить(ИмяСлужебногоДополнительногоСвойстваОбъекта(), Истина);
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			
			Если НЕ ЗначениеЗаполнено(НаборЗаписей.Отбор.Регистратор.Значение) Тогда
				ЗаписьЖурналаРегистрации(
					НСтр("ru = 'Сторно доходов по ЕНВД при УСН. Не выполнена запись доходов в регистр КУДиР.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),  // строка записывается в ИБ
					УровеньЖурналаРегистрации.Ошибка,
					Метаданные.РегистрыНакопления.КнигаУчетаДоходовИРасходов,
					Выборка.Регистратор,
					НСтр("ru = 'Документ, сторнирующий доходы, не является регистратором для служебного регистра УСН.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), // строка записывается в ИБ
					РежимТранзакцииЗаписиЖурналаРегистрации.Независимая);
										 
				Продолжить;
				
			КонецЕсли;
			
			ЗаписьСторно = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьСторно, Выборка);
			
			СуммаСторно = Мин(Выборка.СуммаДохода, СуммаЕНВД);
			ЗаписьСторно.Графа4 = 0;
			ЗаписьСторно.Графа5 = -СуммаСторно;
			ЗаписьСторно.ДоходЕНВД = СуммаСторно;
			СуммаЕНВД = СуммаЕНВД - СуммаСторно;
			
			НаборЗаписей.Записать(Ложь);
			КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + 1;
		
		КонецЦикла;
			
	КонецЦикла;
	
КонецПроцедуры

Функция РезультатЗапросаДокументовДляЗаполненияСторно(СтруктураПараметровЗапроса, ВременныеТаблицы)
	
	Запрос = ИнициализироватьЗапросПоПараметрам(СтруктураПараметровЗапроса, ВременныеТаблицы);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаРегистраторовДоходов.Период,
	|	ТаблицаРегистраторовДоходов.Регистратор,
	|	КнигаУчетаДоходовИРасходов.Содержание,
	|	КнигаУчетаДоходовИРасходов.РеквизитыПервичногоДокумента,
	|	КнигаУчетаДоходовИРасходов.СтрокаДокумента,
	|	КнигаУчетаДоходовИРасходов.ТабличнаяЧасть,
	|	КнигаУчетаДоходовИРасходов.ЭтапПроведения,
	|	КнигаУчетаДоходовИРасходов.Организация,
	|	КнигаУчетаДоходовИРасходов.Графа4,
	|	КнигаУчетаДоходовИРасходов.Графа5,
	|	КнигаУчетаДоходовИРасходов.Графа5 КАК СуммаДохода,
	|	ТаблицаРегистраторовДоходов.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаРегистраторовДоходов.Сумма КАК СуммаДоходаНаЕНВД
	|ИЗ
	|	ТаблицаРегистраторовДоходов КАК ТаблицаРегистраторовДоходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|		ПО ТаблицаРегистраторовДоходов.ДокументВозникновенияДоходов = КнигаУчетаДоходовИРасходов.Регистратор
	|			И (КнигаУчетаДоходовИРасходов.Организация = &Организация)
	|ГДЕ
	|	КнигаУчетаДоходовИРасходов.Графа5 <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаРегистраторовДоходов.Период
	|ИТОГИ
	|	СРЕДНЕЕ(СуммаДоходаНаЕНВД)
	|ПО
	|	ДокументРеализации";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
КонецФункции

Функция ТекстЗапросаРегистраторовСторноКУДиРДоходы()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВыручкаИСебестоимостьПродаж.Период КАК Период,
	|	ВыручкаИСебестоимостьПродаж.Регистратор КАК Регистратор,
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам КАК Аналитика,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл - ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл) КАК НДС,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл) КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения) КАК ВидДеятельности,
	|	ИСТИНА КАК ПризнаватьДоходамиПриУСН
	|ПОМЕСТИТЬ СписанияВлияющиеНаДоходы
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|ГДЕ
	|	Аналитика.Организация = &Организация
	|	И ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &НачДата И &КонДата
	|	И ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимостьПродаж.Период,
	|	ВыручкаИСебестоимостьПродаж.Регистратор,
	|	ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Аналитика,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыСКлиентамиПоДокументам.Период,
	|	РасчетыСКлиентамиПоДокументам.Регистратор,
	|	РасчетыСКлиентамиПоДокументам.РасчетныйДокумент,
	|	РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам КАК Аналитика
	|ПОМЕСТИТЬ ДоходыДляПроверкиНаСторно
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентамиПоДокументам
	|ГДЕ
	|	РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам.Организация = &Организация
	|	И РасчетыСКлиентамиПоДокументам.Период МЕЖДУ &НачДата И &КонДата
	|	И РасчетыСКлиентамиПоДокументам.ЗаказКлиента ССЫЛКА Справочник.ДоговорыКонтрагентов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РасчетныйДокумент,
	|	Аналитика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыСКлиентамиПоДокументам.Период,
	|	РасчетыСКлиентамиПоДокументам.Регистратор,
	|	РасчетыСКлиентамиПоДокументам.РасчетныйДокумент КАК ДокументВозникновенияДоходов,
	|	СписанияВлияющиеНаДоходы.Регистратор КАК ДокументРеализации,
	|	СписанияВлияющиеНаДоходы.НДС,
	|	СписанияВлияющиеНаДоходы.Сумма
	|ПОМЕСТИТЬ ТаблицаРегистраторовДоходов
	|ИЗ
	|	СписанияВлияющиеНаДоходы КАК СписанияВлияющиеНаДоходы
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентамиПоДокументам ПО
	|			СписанияВлияющиеНаДоходы.Регистратор = РасчетыСКлиентамиПоДокументам.Регистратор
	|			И СписанияВлияющиеНаДоходы.Аналитика = РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам
	|           И СписанияВлияющиеНаДоходы.Период = РасчетыСКлиентамиПоДокументам.Период
	|			
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДоходыДляПроверкиНаСторно.Период КАК Период,
	|	ДоходыДляПроверкиНаСторно.Регистратор КАК Регистратор,
	|	ДоходыДляПроверкиНаСторно.Регистратор КАК ДокументВозникновенияДоходов,
	|	ВыручкаИСебестоимостьПродаж.Регистратор КАК ДокументРеализации,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл - ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл) КАК НДС,
	|	СУММА(ВыручкаИСебестоимостьПродаж.СуммаВыручкиСНДСРегл) КАК Сумма
	|ИЗ
	|	ДоходыДляПроверкиНаСторно КАК ДоходыДляПроверкиНаСторно
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж ПО
	|			ДоходыДляПроверкиНаСторно.РасчетныйДокумент = ВыручкаИСебестоимостьПродаж.Регистратор
	|			И ДоходыДляПроверкиНаСторно.Аналитика = ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам
	|			И ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыДляПроверкиНаСторно.Период,
	|	ВыручкаИСебестоимостьПродаж.Регистратор,
	|	ДоходыДляПроверкиНаСторно.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументВозникновенияДоходов";
	
	Возврат ТекстЗапроса;
	
КонецФункции 

#КонецОбласти

#Область ПрочиеПроцедурыИФункции

// Пока не считается.
Функция ПеренесенныеУбыткиПрошлыхЛет(Организация, НачалоПериода, КонецПериода)
	
	СтруктураУбытков = Новый Структура("ПеренесенныеУбытки, УбытокОтУплатыМинимальногоНалога", 0, 0);
	
	Возврат СтруктураУбытков;
	
КонецФункции

Функция СведенияОбУплатеТорговогоСбораПоКварталамНарастающимИтогом(Организация, НачалоПериода, КонецПериода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Приводим период к границам квартала
	НачальнаяДата = НачалоКвартала(НачалоПериода);
	КонечнаяДата  = КонецКвартала(КонецПериода);
	
	Периоды = Новый ТаблицаЗначений;
	Периоды.Колонки.Добавить("НомерКвартала", ОбщегоНазначения.ОписаниеТипаЧисло(1, 0, ДопустимыйЗнак.Неотрицательный));
	Периоды.Колонки.Добавить("Период",        ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	
	ТекущийПериод = НачальнаяДата;
	
	Пока ТекущийПериод < КонечнаяДата Цикл
		
		НоваяСтрока = Периоды.Добавить();
		НоваяСтрока.Период        = ТекущийПериод;
		НоваяСтрока.НомерКвартала = Цел((Месяц(ТекущийПериод) - 1) / 3 + 1);
		
		ТекущийПериод = ИнтерфейсыВзаимодействияБРОКлиентСервер.ДобавитьПериод(ТекущийПериод, Перечисления.Периодичность.Квартал);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("НачалоПериода",   НачальнаяДата);
	Запрос.УстановитьПараметр("КонецПериода",    КонечнаяДата);
	Запрос.УстановитьПараметр("Организация",     Организация);
	Запрос.УстановитьПараметр("ТаблицаПериодов", Периоды);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПериодов.Период КАК Период,
	|	ТаблицаПериодов.НомерКвартала
	|ПОМЕСТИТЬ ВТ_Периоды
	|ИЗ
	|	&ТаблицаПериодов КАК ТаблицаПериодов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОстаткиИОбороты.Период, КВАРТАЛ) КАК Период,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ТорговыйСборУплачено,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток > 0
	|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПереплатаНаНачало,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток > 0
	|			ТОГДА ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПереплатаНаКонец
	|ПОМЕСТИТЬ ВТ_РасчетыПоТорговомуСбору
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Квартал,
	|			,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТорговыйСбор),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет),
	|			Организация = &Организация
	|				И Субконто1 = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)) КАК ХозрасчетныйОстаткиИОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Периоды.Период,
	|	ВТ_Периоды.НомерКвартала КАК НомерКвартала,
	|	ЕСТЬNULL(ВТ_РасчетыПоТорговомуСбору.ТорговыйСборУплачено, 0) КАК ТорговыйСборУплачено,
	|	ЕСТЬNULL(ВТ_РасчетыПоТорговомуСбору.ПереплатаНаНачало, 0) КАК ПереплатаНаНачало,
	|	ЕСТЬNULL(ВТ_РасчетыПоТорговомуСбору.ПереплатаНаКонец, 0) КАК ПереплатаНаКонец
	|ИЗ
	|	ВТ_Периоды КАК ВТ_Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасчетыПоТорговомуСбору КАК ВТ_РасчетыПоТорговомуСбору
	|		ПО ВТ_Периоды.Период = ВТ_РасчетыПоТорговомуСбору.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерКвартала"
	;
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	ТаблицаРезультат.Колонки.Добавить("УплаченоСНачалаГода");
	ТаблицаРезультат.Колонки.Добавить("НачисленоУплаченоСНачалаГода");
	
	УплаченоСНачалаГода = 0;
	НачальнаяПереплата  = 0;
	
	Для каждого СтрокаРезультат Из ТаблицаРезультат Цикл
		
		НачальнаяПереплата  = НачальнаяПереплата + ?(СтрокаРезультат.НомерКвартала = 1, СтрокаРезультат.ПереплатаНаНачало, 0);
		УплаченоСНачалаГода = УплаченоСНачалаГода + СтрокаРезультат.ТорговыйСборУплачено;
		КонечнаяПереплата   = СтрокаРезультат.ПереплатаНаКонец;
		
		СтрокаРезультат.УплаченоСНачалагода = УплаченоСНачалаГода;
		СтрокаРезультат.НачисленоУплаченоСНачалаГода = Мин(УплаченоСНачалаГода,
				УплаченоСНачалаГода - (КонечнаяПереплата - НачальнаяПереплата));
	
	КонецЦикла;
	
	ТаблицаРезультат.Колонки.Удалить("ПереплатаНаНачало");
	ТаблицаРезультат.Колонки.Удалить("ПереплатаНаКонец");
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция ДатаНачалаВеденияУчетаУСНДоходыМинусРасходы(Организация, Период)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Период КАК Период
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ПрименяетсяУСН
	|				И ПрименяетсяУСНДоходыМинусРасходы) КАК УчетнаяПолитикаОрганизацийСрезПоследних";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период", Период);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.Период, Период);
	
КонецФункции

Функция РазрядностьОкругленияПоказателейПриРасчетеНалога(ДатаРасчета)

	// С 1 квартала 2015 года расчет налога при выполнении "Закрытия месяца" производится в соответствии с
	// порядком заполнения деларации по УСН, опубликованным 17 декабря 2014 г. (приказ ФНС РФ № ММВ-7-3/352@):
	// промежуточные показатели, влияющие на налог и на авансовые платежи, перед расчетом округляются до целых рублей.
	//
	// Алгоритм расчета, применявшийся в регламентной операции до конца 2014 г., не изменяется.
	
	Возврат ?(ДатаРасчета >= '20150101', 0, 2);

КонецФункции

#КонецОбласти