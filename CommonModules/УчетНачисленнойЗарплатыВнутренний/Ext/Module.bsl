
#Область СлужебныйПрограммныйИнтерфейс

// Процедура предназначена для выполнения действия, сопряженных с регистрацией отработанного времени.
//
Процедура ПриРегистрацииОтработанногоВремени(Движения, ЗаписыватьДвижения = Ложь) Экспорт
	УчетНачисленнойЗарплатыРасширенный.ЗарегистрироватьКорректировкиОтработанногоВремени(Движения, ЗаписыватьДвижения);
КонецПроцедуры

Процедура ПриРегистрацииНачисленийУдержанийПоСотрудникам(Движения, Отказ, ДобавленныеСтрокиНачислений, ХарактерВыплаты, ПериодРегистрации) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.УправленческаяЗарплата") Тогда
		Модуль = ОбщегоНазначения.ОбщийМодуль("УправленческаяЗарплата");
		Модуль.ПриРегистрацииНачисленийУдержанийПоСотрудникам(Движения, Отказ, ДобавленныеСтрокиНачислений, ХарактерВыплаты, ПериодРегистрации);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПравилаУчетаНачисленийСотрудников() Экспорт

	Возврат УчетНачисленнойЗарплатыРасширенный.ПравилаУчетаНачисленийСотрудников();

КонецФункции

Функция ПрименениеОбособленныхТерриторий() Экспорт
	Возврат УчетНачисленнойЗарплатыРасширенный.ПрименениеОбособленныхТерриторий();
КонецФункции

Процедура СкорректироватьДатыНачисленийБезПериодаДействия(ТаблицаНачислений, ПериодРегистрации, ИмяПоляНачисления = "НачислениеУдержание") Экспорт
	ЗарплатаКадрыРасширенный.СкорректироватьДатыНачисленийБезПериодаДействия(ТаблицаНачислений, ПериодРегистрации, ИмяПоляНачисления);
КонецПроцедуры

#Область ПроцедурыИФункцииРаботыСОтчетами

// Процедура формирования отчетов анализа начислений и удержаний.
//
Процедура ПриКомпоновкеОтчетаАнализНачисленийИУдержаний(Объект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка, КлючВарианта, НаАванс) Экспорт
	УчетНачисленнойЗарплатыРасширенный.ПриКомпоновкеОтчетаАнализНачисленийИУдержаний(Объект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка, КлючВарианта, НаАванс);
КонецПроцедуры

Процедура ДобавитьПользовательскиеПоляДополнительныхНачисленийИУдержаний(ДополнительныеНачисленияИУдержания, НастройкиОтчета, КоличествоНачисленийУдержаний, ВидПолей = "Начисления") Экспорт
	УчетНачисленнойЗарплатыРасширенный.ДобавитьПользовательскиеПоляДополнительныхНачисленийИУдержаний(ДополнительныеНачисленияИУдержания, НастройкиОтчета, КоличествоНачисленийУдержаний, ВидПолей);
КонецПроцедуры

// Возвращает начисления в том порядке, в котором они должны быть выведены в отчете.
//
Функция ПорядокДополнительныхНачислений(Начисления, ДанныеОтчета, СоответствиеПользовательскихПолей, НачальныйНомерКолонки) Экспорт
	Возврат УчетНачисленнойЗарплатыРасширенный.ПорядокДополнительныхНачислений(Начисления, ДанныеОтчета, СоответствиеПользовательскихПолей, НачальныйНомерКолонки);
КонецФункции

// Возвращает удержания в том порядке, в котором они должны быть выведены в отчете.
//
Функция ПорядокДополнительныхУдержаний(Удержания, ДанныеОтчета, СоответствиеПользовательскихПолей, НачальныйНомерКолонки) Экспорт
	Возврат УчетНачисленнойЗарплатыРасширенный.ПорядокДополнительныхУдержаний(Удержания, ДанныеОтчета, СоответствиеПользовательскихПолей, НачальныйНомерКолонки);
КонецФункции

Функция ДополнительныеНачисленияОтчетаАнализНачисленийИУдержанийТ49() Экспорт
	Возврат УчетНачисленнойЗарплатыРасширенный.ДополнительныеНачисленияОтчетаАнализНачисленийИУдержанийТ49();
КонецФункции

Функция ДополнительныеУдержанияОтчетаАнализНачисленийИУдержанийТ49() Экспорт
	Возврат УчетНачисленнойЗарплатыРасширенный.ДополнительныеУдержанияОтчетаАнализНачисленийИУдержанийТ49();
КонецФункции

Процедура ДополнитьАнализНачисленийИУдержаний(ОтчетОбъект) Экспорт
	
	УчетНачисленнойЗарплатыРасширенный.ДополнитьАнализНачисленийИУдержаний(ОтчетОбъект);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
