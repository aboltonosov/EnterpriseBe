////////////////////////////////////////////////////////////////////////////////
// Отражение зарплаты в регламентированном учете.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Функция возвращает процент деятельности ЕНВД зарегистрированный в подсистеме ЗарплатаКадры.
// 
// Параметры:
//  Организация	 - Тип СправочникСсылка.Организации
//  ПериодРегистрации	   - Тип Дата, первое число месяца, месяц по которому надо получить процент ЕНВД.
//
// Возвращаемое значение:
//  Число от 0 до 100, или Неопределено, если в Организации применяется ЕНВД, но процент на месяц еще не задан.
//
Функция ПроцентЕНВД(Организация, ПериодРегистрации) Экспорт  
	
	Если Не ПлательщикЕНВД(Организация, ПериодРегистрации) Тогда
		// В указанном месяце организация не является плательщиком ЕНВД
		// процент принимаем равным нулю.
		Возврат 0;
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПроцентЕНВД.Процент
		|ИЗ
		|	РегистрСведений.ПроцентЕНВДДляУчетаЗатратНаЗарплату КАК ПроцентЕНВД
		|ГДЕ
		|	ПроцентЕНВД.Месяц = &ПериодРегистрации
		|	И ПроцентЕНВД.Организация = &Организация";
		
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			Возврат Выборка.Процент;
			
		Иначе
			// На текущий месяц процент ЕНВД еще не зарегистрирован
			// получим процент ЕНВД по данным бухгалтерского учета и зарегистрируем его
			// функция может вернуть значение Неопределенно, если не удалось вычислить процент.
 
			ПроцентЕНВД = ОтражениеЗарплатыВБухучетеПереопределяемый.ПроцентЕНВД(Организация, ПериодРегистрации);
			Если ПроцентЕНВД <> Неопределено Тогда
				УстановитьПривилегированныйРежим(Истина);
				ЗарегистрироватьПроцентЕНВД(Организация, ПериодРегистрации, ПроцентЕНВД);
				УстановитьПривилегированныйРежим(Ложь);
			КонецЕсли;
			
			Возврат ПроцентЕНВД;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

// Функция возвращает настройку учетной политики, является ли организация в указанном месяце плательщиком ЕНВД.
//
// Параметры:
//  Организация	 - Тип СправочникСсылка.Организации
//  Период	   	 - Тип Дата, месяц по которому надо получить применение ЕНВД в организации.
//
// Возвращаемое значение:
//  Булево
//
Функция ПлательщикЕНВД(Организация, Период) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаСреза", НачалоМесяца(Период));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ПлательщикЕНВД
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&ДатаСреза, Организация = &Организация) КАК УчетнаяПолитикаОрганизацийСрезПоследних";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.ПлательщикЕНВД;

КонецФункции

// Функция возвращает настройку отражения в бухучете из РС ОтражениеВРегламентированномУчетеНастройкиОрганизаций.
//
// Возвращаемое значение:
//	Структура
//	* ФормироватьПроводкиВКонцеПериода - тип Булево, Истина, если хотя бы в одной организации проводки формируются в
//	                                     конце месяца.
//  * ФормироватьПроводкиВКонцеПериодаПоОрганизациям - соответствие, ключ - Организация, значение - значение настройки
//                                                     ФормироватьПроводкиВКонцеПериода.
//
Функция ОтражениеВРегламентированномУчетеНастройкиОрганизаций() Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	НастройкиОтраженияВБухучете = Новый Структура;
	НастройкиОтраженияВБухучете.Вставить("ФормироватьПроводкиВКонцеПериода", Ложь);
	НастройкиОтраженияВБухучете.Вставить("ФормироватьПроводкиВКонцеПериодаПоОрганизациям", Новый Соответствие);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация,
	|	ЕСТЬNULL(ОтражениеВУчете.ФормироватьПроводкиВКонцеПериода, ЛОЖЬ) КАК ФормироватьПроводкиВКонцеПериода
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтражениеВРегламентированномУчетеНастройкиОрганизаций КАК ОтражениеВУчете
	|		ПО Организации.Ссылка = ОтражениеВУчете.Организация";
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат НастройкиОтраженияВБухучете;
	КонецЕсли;
	
	ФормироватьПроводкиВКонцеПериода = Результат.Выгрузить().ВыгрузитьКолонку("ФормироватьПроводкиВКонцеПериода").Найти(Истина) <> Неопределено;
	НастройкиОтраженияВБухучете.ФормироватьПроводкиВКонцеПериода = ФормироватьПроводкиВКонцеПериода;
	
	ФормироватьПроводкиВКонцеПериодаПоОрганизациям = Новый Соответствие;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ФормироватьПроводкиВКонцеПериодаПоОрганизациям.Вставить(Выборка.Организация, Выборка.ФормироватьПроводкиВКонцеПериода);
	КонецЦикла;
	
	НастройкиОтраженияВБухучете.ФормироватьПроводкиВКонцеПериодаПоОрганизациям = ФормироватьПроводкиВКонцеПериодаПоОрганизациям;
	
	Возврат НастройкиОтраженияВБухучете;

КонецФункции

// Возвращает структуру с параметрами для расчета оценочных обязательств по отпускам.
//
// Параметры:
//  Организация - организация
//  ПериодРегистрации - Тип Дата, дата на которую получаем данные.
//
// Возвращаемое значение: Структура, описание см ОтражениеЗарплатыВБухучете.ОписаниеПараметровДляРасчетаОценочныхОбязательствОтпусков
//
Функция ПараметрыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации) Экспорт

	ПараметрыДляРасчета = ОписаниеПараметровДляРасчетаОценочныхОбязательствОтпусков();
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОценочныеОбязательстваЗарплатаКадры") Тогда
		
		МодульРезервОтпусков = ОбщегоНазначения.ОбщийМодуль("РезервОтпусков");
		НастройкиРезервовОтпусков = МодульРезервОтпусков.НастройкиРезервовОтпусков(Организация, ПериодРегистрации);
		Если НастройкиРезервовОтпусков.ФормироватьРезервОтпусковБУ Тогда
			
			НачисленнаяЗарплатаИВзносы = ДанныеДляОтраженияВБухучетеНачисленийИВзносов(Организация, ПериодРегистрации);
			ФондОплатыТрудаИСтраховыеВзносы = ФондОплатыТрудаИСтраховыеВзносыДляРасчетаОценочныхОбязательствОтпусков(Организация, ПериодРегистрации, НачисленнаяЗарплатаИВзносы);
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ФондОплатыТрудаИСтраховыеВзносы, ПараметрыДляРасчета.ФондОплатыТрудаИСтраховыеВзносы);
			
			ОстаткиОтпусковДляРасчетаОценочныхОбязательств = ОстаткиОтпусковДляРасчетаОценочныхОбязательств(Организация, ПериодРегистрации);
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ОстаткиОтпусковДляРасчетаОценочныхОбязательств, ПараметрыДляРасчета.ОстаткиОтпусков);
			
			Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда 
				Модуль = ОбщегоНазначения.ОбщийМодуль("ОрганизационнаяСтруктура");
				ПараметрыДляРасчета.ОстаткиОтпусков.ЗаполнитьЗначения(КонецМесяца(ПериодРегистрации),"ДатаНачала");
				ПараметрыДляРасчета.ФондОплатыТрудаИСтраховыеВзносы.ЗаполнитьЗначения(КонецМесяца(ПериодРегистрации),"ДатаНачала");
				ИменаТаблиц = "ФондОплатыТрудаИСтраховыеВзносы,ОстаткиОтпусков";
				Модуль.ДополнитьДанныеДокументаМестомВСтруктуреПредприятия(ПараметрыДляРасчета, ИменаТаблиц);
			КонецЕсли;
			
			ОтражениеЗарплатыВБухучете.СвернутьДанныеДляОтраженияЗарплатыВБухучете(ПараметрыДляРасчета, "ДатаНачала");
			
		КонецЕсли;
		
	КонецЕсли;

	Возврат ПараметрыДляРасчета;
	
КонецФункции 

// Возвращает таблицу с фондом оплаты труда по организациям.
//
// Параметры:
//  Организации - массив организаций, головная организация и ее филиалы.
//  ПериодРегистрации - Тип Дата, дата на которую получаем данные.
//
// Возвращаемое значение: Таблица значений
//		* Организация
//		* ФондОплатыТруда - сумма начислений, входящих в расчет отпуска.
//
Функция ФондОплатыТрудаПоОрганизациямДляРасчетаОценочныхОбязательствОтпусков(Организации, ПериодРегистрации) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТНачисленияБазаОтпуска(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.УстановитьПараметр("Организации", Организации);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачисленияПоСотрудникам.Организация,
	|	СУММА(НачисленияПоСотрудникам.Сумма) КАК ФондаОплатыТруда
	|ИЗ
	|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияПоСотрудникам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНачисленияБазаОтпуска КАК НачисленияБазаОтпуска
	|		ПО НачисленияПоСотрудникам.НачислениеУдержание = НачисленияБазаОтпуска.Ссылка
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(НачисленияПоСотрудникам.Период, МЕСЯЦ) = &ПериодРегистрации
	|	И НачисленияПоСотрудникам.Организация В(&Организации)
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленияПоСотрудникам.Организация";
	
	Результат = Запрос.Выполнить();
	
	ФондаОплатыТруда = Новый ТаблицаЗначений;
	ФондаОплатыТруда.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ФондаОплатыТруда.Колонки.Добавить("ФондаОплатыТруда", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ФондаОплатыТруда.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат ФондаОплатыТруда;

КонецФункции

// Рассчитывает эффективную ставку страховых взносов по сотрудникам.
//
// Параметры:
//  Организации - массив организаций, головная организация и ее филиалы
//  ПериодРегистрации - Тип Дата, дата на которую получаем данные.
//
// Возвращаемое значение: Структура
//		* СтавкиВзносовФСС_НС
//		* СтавкиСтраховыхВзносов.
//
Функция ПараметрыДляИнвентаризацииОценочныхОбязательствОтпусков(Организация, ПериодРегистрации) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОтложенноеПроведениеДокументов") Тогда 
		Модуль = ОбщегоНазначения.ОбщийМодуль("ОтражениеДокументовВУчетеСтраховыхВзносов");
		Модуль.ОтразитьДокументыВУчетеСтраховыхВзносов(Организация);
	КонецЕсли;
	
	ОписаниеЧисло = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 4));
	
	СтавкиВзносовФСС_НС = Новый ТаблицаЗначений;
	СтавкиВзносовФСС_НС.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	СтавкиВзносовФСС_НС.Колонки.Добавить("Ставка",    ОписаниеЧисло);
	
	СтавкиСтраховыхВзносов = Новый ТаблицаЗначений;
	СтавкиСтраховыхВзносов.Колонки.Добавить("Сотрудник",                             Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	СтавкиСтраховыхВзносов.Колонки.Добавить("ПФРДоПредельнойВеличины",                ОписаниеЧисло);
	СтавкиСтраховыхВзносов.Колонки.Добавить("ПФРСПревышения",                         ОписаниеЧисло);
	СтавкиСтраховыхВзносов.Колонки.Добавить("ПФРПоСуммарномуТарифу",                  ОписаниеЧисло);
	СтавкиСтраховыхВзносов.Колонки.Добавить("ПФРНаДоплатуЛетчикам",                   ОписаниеЧисло);
	СтавкиСтраховыхВзносов.Колонки.Добавить("ПФРНаДоплатуШахтерам",                   ОписаниеЧисло);
	СтавкиСтраховыхВзносов.Колонки.Добавить("ПФРЗаЗанятыхНаПодземныхИВредныхРаботах", ОписаниеЧисло);
	СтавкиСтраховыхВзносов.Колонки.Добавить("ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах",    ОписаниеЧисло);
	СтавкиСтраховыхВзносов.Колонки.Добавить("ПФРСтраховая",                           ОписаниеЧисло);
	СтавкиСтраховыхВзносов.Колонки.Добавить("ПФРНакопительная",                       ОписаниеЧисло);
	СтавкиСтраховыхВзносов.Колонки.Добавить("ФСС",                                    ОписаниеЧисло);
	СтавкиСтраховыхВзносов.Колонки.Добавить("ФФОМС",                                  ОписаниеЧисло);
	СтавкиСтраховыхВзносов.Колонки.Добавить("ТФОМС",                                  ОписаниеЧисло);
	СтавкиСтраховыхВзносов.Колонки.Добавить("ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки", ОписаниеЧисло);
	СтавкиСтраховыхВзносов.Колонки.Добавить("ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка", ОписаниеЧисло);
	СтавкиСтраховыхВзносов.Колонки.Добавить("ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки", ОписаниеЧисло);
	СтавкиСтраховыхВзносов.Колонки.Добавить("ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка", ОписаниеЧисло);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОценочныеОбязательстваЗарплатаКадры") Тогда
		
		МодульРезервОтпусков = ОбщегоНазначения.ОбщийМодуль("РезервОтпусков");
		НастройкиРезервовОтпусков = МодульРезервОтпусков.НастройкиРезервовОтпусков(Организация, ПериодРегистрации);
		
		Если НастройкиРезервовОтпусков.ФормироватьРезервОтпусковБУ Тогда
			
			ПараметрыПолучения = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
			ПараметрыПолучения.Организация      = Организация;
			ПараметрыПолучения.НачалоПериода    = НачалоМесяца(ПериодРегистрации);
			ПараметрыПолучения.ОкончаниеПериода = КонецМесяца(ПериодРегистрации);
			ТаблицаСотрудников = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолучения);
			МассивСотрудников = ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник");
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(ПериодРегистрации));
			Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.УстановитьПараметр("Сотрудники", МассивСотрудников);
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Сотрудники.Ссылка КАК Сотрудник,
			|	Сотрудники.ФизическоеЛицо
			|ПОМЕСТИТЬ ВТСотрудники
			|ИЗ
			|	Справочник.Сотрудники КАК Сотрудники
			|ГДЕ
			|	Сотрудники.Ссылка В(&Сотрудники)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СтраховыеВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СУММА(СтраховыеВзносы.ПФРДоПредельнойВеличины) КАК ПФРДоПредельнойВеличины,
			|	СУММА(СтраховыеВзносы.ПФРСПревышения) КАК ПФРСПревышения,
			|	СУММА(СтраховыеВзносы.ПФРПоСуммарномуТарифу) КАК ПФРПоСуммарномуТарифу,
			|	СУММА(СтраховыеВзносы.ФСС) КАК ФСС,
			|	СУММА(СтраховыеВзносы.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи,
			|	СУММА(СтраховыеВзносы.ФФОМС) КАК ФФОМС,
			|	СУММА(СтраховыеВзносы.ПФРНаДоплатуЛетчикам) КАК ПФРНаДоплатуЛетчикам,
			|	СУММА(СтраховыеВзносы.ПФРНаДоплатуШахтерам) КАК ПФРНаДоплатуШахтерам,
			|	СУММА(СтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
			|	СУММА(СтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
			|	СУММА(СтраховыеВзносы.ПФРСтраховая) КАК ПФРСтраховая,
			|	СУММА(СтраховыеВзносы.ПФРНакопительная) КАК ПФРНакопительная,
			|	СУММА(СтраховыеВзносы.ТФОМС) КАК ТФОМС,
			|	СУММА(СтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки,
			|	СУММА(СтраховыеВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка,
			|	СУММА(СтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки,
			|	СУММА(СтраховыеВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка
			|ПОМЕСТИТЬ ВТВзносы
			|ИЗ
			|	РегистрНакопления.СтраховыеВзносыПоФизическимЛицам КАК СтраховыеВзносы
			|ГДЕ
			|	СтраховыеВзносы.Организация = &Организация
			|	И СтраховыеВзносы.ФизическоеЛицо В
			|			(ВЫБРАТЬ
			|				ВТСотрудники.ФизическоеЛицо
			|			ИЗ
			|				ВТСотрудники)
			|	И СтраховыеВзносы.Период МЕЖДУ &НачалоПериода И &КонецПериода
			|
			|СГРУППИРОВАТЬ ПО
			|	СтраховыеВзносы.ФизическоеЛицо
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизическоеЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СУММА(ВЫБОР
			|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуПФР
			|				ТОГДА СведенияОДоходах.Сумма - СведенияОДоходах.Скидка
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК БазаПФР,
			|	СУММА(ВЫБОР
			|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФСС
			|				ТОГДА СведенияОДоходах.Сумма - СведенияОДоходах.Скидка
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК БазаФСС,
			|	СУММА(ВЫБОР
			|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФСС_НС
			|				ТОГДА СведенияОДоходах.Сумма - СведенияОДоходах.Скидка
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК БазаФСС_НС,
			|	СУММА(ВЫБОР
			|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуФОМС
			|				ТОГДА СведенияОДоходах.Сумма - СведенияОДоходах.Скидка
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК БазаФОМС,
			|	СУММА(ВЫБОР
			|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуПФР
			|					И СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам
			|				ТОГДА СведенияОДоходах.Сумма - СведенияОДоходах.Скидка
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК БазаДоплатаЛетчикам,
			|	СУММА(ВЫБОР
			|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуПФР
			|					И СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам
			|				ТОГДА СведенияОДоходах.Сумма - СведенияОДоходах.Скидка
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК БазаДоплатаШахтерам,
			|	СУММА(ВЫБОР
			|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуПФР
			|					И СведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ТяжелыеИПрочиеРаботы)
			|				ТОГДА СведенияОДоходах.Сумма - СведенияОДоходах.Скидка
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК БазаТяжелыеИПрочиеРаботы,
			|	СУММА(ВЫБОР
			|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуПФР
			|					И СведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПодземныеИВредныеРаботы)
			|				ТОГДА СведенияОДоходах.Сумма - СведенияОДоходах.Скидка
			|			ИНАЧЕ 0
			|		КОНЕЦ) КАК БазаПодземныеИВредныеРаботы
			|ПОМЕСТИТЬ ВТДоходы
			|ИЗ
			|	РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК СведенияОДоходах
			|ГДЕ
			|	СведенияОДоходах.Организация = &Организация
			|	И СведенияОДоходах.ФизическоеЛицо В
			|			(ВЫБРАТЬ
			|				ВТСотрудники.ФизическоеЛицо
			|			ИЗ
			|				ВТСотрудники)
			|	И СведенияОДоходах.Период МЕЖДУ &НачалоПериода И &КонецПериода
			|
			|СГРУППИРОВАТЬ ПО
			|	СведенияОДоходах.ФизическоеЛицо
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ФизическоеЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Сотрудники.Сотрудник,
			|	СУММА(Ставки.ПФРДоПредельнойВеличины) КАК ПФРДоПредельнойВеличины,
			|	СУММА(Ставки.ПФРСПревышения) КАК ПФРСПревышения,
			|	СУММА(Ставки.ПФРПоСуммарномуТарифу) КАК ПФРПоСуммарномуТарифу,
			|	СУММА(Ставки.ПФРСтраховая) КАК ПФРСтраховая,
			|	СУММА(Ставки.ПФРНакопительная) КАК ПФРНакопительная,
			|	СУММА(Ставки.ФСС) КАК ФСС,
			|	СУММА(Ставки.ФССНесчастныеСлучаи) КАК Ставка,
			|	СУММА(Ставки.ФФОМС) КАК ФФОМС,
			|	СУММА(Ставки.ТФОМС) КАК ТФОМС,
			|	СУММА(Ставки.ПФРНаДоплатуЛетчикам) КАК ПФРНаДоплатуЛетчикам,
			|	СУММА(Ставки.ПФРНаДоплатуШахтерам) КАК ПФРНаДоплатуШахтерам,
			|	СУММА(Ставки.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
			|	СУММА(Ставки.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
			|	СУММА(Ставки.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки,
			|	СУММА(Ставки.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка,
			|	СУММА(Ставки.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки,
			|	СУММА(Ставки.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка
			|ИЗ
			|	(ВЫБРАТЬ
			|		ДоходыВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
			|		ВЫБОР
			|			КОГДА ДоходыВзносы.ПФРДоПредельнойВеличины > 0
			|				ТОГДА ВЫРАЗИТЬ(100 * ДоходыВзносы.ПФРДоПредельнойВеличины / ДоходыВзносы.Сумма КАК ЧИСЛО(25, 10))
			|			ИНАЧЕ 0
			|		КОНЕЦ КАК ПФРДоПредельнойВеличины,
			|		ВЫБОР
			|			КОГДА ДоходыВзносы.ПФРСПревышения > 0
			|				ТОГДА ВЫРАЗИТЬ(100 * ДоходыВзносы.ПФРСПревышения / ДоходыВзносы.Сумма КАК ЧИСЛО(25, 10))
			|			ИНАЧЕ 0
			|		КОНЕЦ КАК ПФРСПревышения,
			|		ВЫБОР
			|			КОГДА ДоходыВзносы.ПФРПоСуммарномуТарифу > 0
			|				ТОГДА ВЫРАЗИТЬ(100 * ДоходыВзносы.ПФРПоСуммарномуТарифу / ДоходыВзносы.Сумма КАК ЧИСЛО(25, 10))
			|			ИНАЧЕ 0
			|		КОНЕЦ КАК ПФРПоСуммарномуТарифу,
			|		ВЫБОР
			|			КОГДА ДоходыВзносы.ПФРСтраховая > 0
			|				ТОГДА ВЫРАЗИТЬ(100 * ДоходыВзносы.ПФРСтраховая / ДоходыВзносы.Сумма КАК ЧИСЛО(25, 10))
			|			ИНАЧЕ 0
			|		КОНЕЦ КАК ПФРСтраховая,
			|		ВЫБОР
			|			КОГДА ДоходыВзносы.ПФРНакопительная > 0
			|				ТОГДА ВЫРАЗИТЬ(100 * ДоходыВзносы.ПФРНакопительная / ДоходыВзносы.Сумма КАК ЧИСЛО(25, 10))
			|			ИНАЧЕ 0
			|		КОНЕЦ КАК ПФРНакопительная,
			|		0 КАК ФСС,
			|		0 КАК ФССНесчастныеСлучаи,
			|		0 КАК ФФОМС,
			|		0 КАК ТФОМС,
			|		0 КАК ПФРНаДоплатуЛетчикам,
			|		0 КАК ПФРНаДоплатуШахтерам,
			|		0 КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
			|		0 КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
			|		0 КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки,
			|		0 КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка,
			|		0 КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки,
			|		0 КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка
			|	ИЗ
			|		(ВЫБРАТЬ
			|			Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
			|			СУММА(Взносы.ПФРДоПредельнойВеличины) КАК ПФРДоПредельнойВеличины,
			|			СУММА(Взносы.ПФРСПревышения) КАК ПФРСПревышения,
			|			СУММА(Взносы.ПФРПоСуммарномуТарифу) КАК ПФРПоСуммарномуТарифу,
			|			СУММА(Взносы.ПФРСтраховая) КАК ПФРСтраховая,
			|			СУММА(Взносы.ПФРНакопительная) КАК ПФРНакопительная,
			|			СУММА(Доходы.БазаПФР) КАК Сумма
			|		ИЗ
			|			ВТДоходы КАК Доходы
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВзносы КАК Взносы
			|				ПО Доходы.ФизическоеЛицо = Взносы.ФизическоеЛицо
			|		
			|		СГРУППИРОВАТЬ ПО
			|			Доходы.ФизическоеЛицо
			|		
			|		ИМЕЮЩИЕ
			|			СУММА(Доходы.БазаПФР) > 0) КАК ДоходыВзносы
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДоходыВзносы.ФизическоеЛицо,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		ВЫБОР
			|			КОГДА ДоходыВзносы.ФСС > 0
			|				ТОГДА ВЫРАЗИТЬ(100 * ДоходыВзносы.ФСС / ДоходыВзносы.Сумма КАК ЧИСЛО(25, 10))
			|			ИНАЧЕ 0
			|		КОНЕЦ,
			|		ВЫБОР
			|			КОГДА ДоходыВзносы.ФССНесчастныеСлучаи > 0
			|				ТОГДА ВЫРАЗИТЬ(100 * ДоходыВзносы.ФССНесчастныеСлучаи / ДоходыВзносы.Сумма_НС КАК ЧИСЛО(25, 10))
			|			ИНАЧЕ 0
			|		КОНЕЦ,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0
			|	ИЗ
			|		(ВЫБРАТЬ
			|			Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
			|			СУММА(Доходы.БазаФСС) КАК Сумма,
			|			СУММА(Доходы.БазаФСС_НС) КАК Сумма_НС,
			|			СУММА(Взносы.ФСС) КАК ФСС,
			|			СУММА(Взносы.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи
			|		ИЗ
			|			ВТДоходы КАК Доходы
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВзносы КАК Взносы
			|				ПО Доходы.ФизическоеЛицо = Взносы.ФизическоеЛицо
			|		
			|		СГРУППИРОВАТЬ ПО
			|			Доходы.ФизическоеЛицо
			|		
			|		ИМЕЮЩИЕ
			|			(СУММА(Доходы.БазаФСС) > 0
			|				ИЛИ СУММА(Доходы.БазаФСС_НС) > 0)) КАК ДоходыВзносы
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДоходыВзносы.ФизическоеЛицо,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		ВЫБОР
			|			КОГДА ДоходыВзносы.ФФОМС > 0
			|				ТОГДА ВЫРАЗИТЬ(100 * ДоходыВзносы.ФФОМС / ДоходыВзносы.Сумма КАК ЧИСЛО(25, 10))
			|			ИНАЧЕ 0
			|		КОНЕЦ,
			|		ВЫБОР
			|			КОГДА ДоходыВзносы.ТФОМС > 0
			|				ТОГДА ВЫРАЗИТЬ(100 * ДоходыВзносы.ТФОМС / ДоходыВзносы.Сумма КАК ЧИСЛО(25, 10))
			|			ИНАЧЕ 0
			|		КОНЕЦ,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0
			|	ИЗ
			|		(ВЫБРАТЬ
			|			Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
			|			СУММА(Доходы.БазаФОМС) КАК Сумма,
			|			СУММА(Взносы.ФФОМС) КАК ФФОМС,
			|			СУММА(Взносы.ТФОМС) КАК ТФОМС
			|		ИЗ
			|			ВТДоходы КАК Доходы
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВзносы КАК Взносы
			|				ПО Доходы.ФизическоеЛицо = Взносы.ФизическоеЛицо
			|		
			|		СГРУППИРОВАТЬ ПО
			|			Доходы.ФизическоеЛицо
			|		
			|		ИМЕЮЩИЕ
			|			СУММА(Доходы.БазаФОМС) > 0) КАК ДоходыВзносы
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДоходыВзносы.ФизическоеЛицо,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		ВЫРАЗИТЬ(100 * ДоходыВзносы.ПФРНаДоплатуЛетчикам / ДоходыВзносы.Сумма КАК ЧИСЛО(25, 10)),
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0
			|	ИЗ
			|		(ВЫБРАТЬ
			|			Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
			|			СУММА(Доходы.БазаДоплатаЛетчикам) КАК Сумма,
			|			СУММА(Взносы.ПФРНаДоплатуЛетчикам) КАК ПФРНаДоплатуЛетчикам
			|		ИЗ
			|			ВТДоходы КАК Доходы
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВзносы КАК Взносы
			|				ПО Доходы.ФизическоеЛицо = Взносы.ФизическоеЛицо
			|		
			|		СГРУППИРОВАТЬ ПО
			|			Доходы.ФизическоеЛицо
			|		
			|		ИМЕЮЩИЕ
			|			СУММА(Доходы.БазаДоплатаЛетчикам) > 0 И
			|			СУММА(Взносы.ПФРНаДоплатуЛетчикам) > 0) КАК ДоходыВзносы
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДоходыВзносы.ФизическоеЛицо,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		ВЫРАЗИТЬ(100 * ДоходыВзносы.ПФРНаДоплатуШахтерам / ДоходыВзносы.Сумма КАК ЧИСЛО(25, 10)),
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0
			|	ИЗ
			|		(ВЫБРАТЬ
			|			Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
			|			СУММА(Доходы.БазаДоплатаШахтерам) КАК Сумма,
			|			СУММА(Взносы.ПФРНаДоплатуШахтерам) КАК ПФРНаДоплатуШахтерам
			|		ИЗ
			|			ВТДоходы КАК Доходы
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВзносы КАК Взносы
			|				ПО Доходы.ФизическоеЛицо = Взносы.ФизическоеЛицо
			|		
			|		СГРУППИРОВАТЬ ПО
			|			Доходы.ФизическоеЛицо
			|		
			|		ИМЕЮЩИЕ
			|			СУММА(Доходы.БазаДоплатаШахтерам) > 0 И
			|			СУММА(Взносы.ПФРНаДоплатуШахтерам) > 0) КАК ДоходыВзносы
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДоходыВзносы.ФизическоеЛицо,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		ВЫРАЗИТЬ(100 * ДоходыВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах / ДоходыВзносы.Сумма КАК ЧИСЛО(25, 10)),
			|		0,
			|		0,
			|		0,
			|		0,
			|		0
			|	ИЗ
			|		(ВЫБРАТЬ
			|			Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
			|			СУММА(Доходы.БазаТяжелыеИПрочиеРаботы) КАК Сумма,
			|			СУММА(Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах
			|		ИЗ
			|			ВТДоходы КАК Доходы
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВзносы КАК Взносы
			|				ПО Доходы.ФизическоеЛицо = Взносы.ФизическоеЛицо
			|		
			|		СГРУППИРОВАТЬ ПО
			|			Доходы.ФизическоеЛицо
			|		
			|		ИМЕЮЩИЕ
			|			СУММА(Доходы.БазаТяжелыеИПрочиеРаботы) > 0 И
			|			СУММА(Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах) > 0) КАК ДоходыВзносы
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДоходыВзносы.ФизическоеЛицо,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		ВЫРАЗИТЬ(100 * ДоходыВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах / ДоходыВзносы.Сумма КАК ЧИСЛО(25, 10)),
			|		0,
			|		0,
			|		0,
			|		0
			|	ИЗ
			|		(ВЫБРАТЬ
			|			Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
			|			СУММА(Доходы.БазаПодземныеИВредныеРаботы) КАК Сумма,
			|			СУММА(Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах
			|		ИЗ
			|			ВТДоходы КАК Доходы
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВзносы КАК Взносы
			|				ПО Доходы.ФизическоеЛицо = Взносы.ФизическоеЛицо
			|		
			|		СГРУППИРОВАТЬ ПО
			|			Доходы.ФизическоеЛицо
			|		
			|		ИМЕЮЩИЕ
			|			СУММА(Доходы.БазаПодземныеИВредныеРаботы) > 0 И
			|			СУММА(Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах) > 0) КАК ДоходыВзносы
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДоходыВзносы.ФизическоеЛицо,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		ВЫРАЗИТЬ(100 * ДоходыВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки / ДоходыВзносы.Сумма КАК ЧИСЛО(25, 10)),
			|		0,
			|		0,
			|		0
			|	ИЗ
			|		(ВЫБРАТЬ
			|			Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
			|			СУММА(Доходы.БазаТяжелыеИПрочиеРаботы) КАК Сумма,
			|			СУММА(Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки
			|		ИЗ
			|			ВТДоходы КАК Доходы
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВзносы КАК Взносы
			|				ПО Доходы.ФизическоеЛицо = Взносы.ФизическоеЛицо
			|		
			|		СГРУППИРОВАТЬ ПО
			|			Доходы.ФизическоеЛицо
			|		
			|		ИМЕЮЩИЕ
			|			СУММА(Доходы.БазаТяжелыеИПрочиеРаботы) > 0 И
			|			СУММА(Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки) > 0) КАК ДоходыВзносы
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДоходыВзносы.ФизическоеЛицо,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		ВЫРАЗИТЬ(100 * ДоходыВзносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка / ДоходыВзносы.Сумма КАК ЧИСЛО(25, 10)),
			|		0,
			|		0
			|	ИЗ
			|		(ВЫБРАТЬ
			|			Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
			|			СУММА(Доходы.БазаТяжелыеИПрочиеРаботы) КАК Сумма,
			|			СУММА(Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка
			|		ИЗ
			|			ВТДоходы КАК Доходы
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВзносы КАК Взносы
			|				ПО Доходы.ФизическоеЛицо = Взносы.ФизическоеЛицо
			|		
			|		СГРУППИРОВАТЬ ПО
			|			Доходы.ФизическоеЛицо
			|		
			|		ИМЕЮЩИЕ
			|			СУММА(Доходы.БазаТяжелыеИПрочиеРаботы) > 0 И
			|			СУММА(Взносы.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка) > 0) КАК ДоходыВзносы
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДоходыВзносы.ФизическоеЛицо,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		ВЫРАЗИТЬ(100 * ДоходыВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки / ДоходыВзносы.Сумма КАК ЧИСЛО(25, 10)),
			|		0
			|	ИЗ
			|		(ВЫБРАТЬ
			|			Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
			|			СУММА(Доходы.БазаПодземныеИВредныеРаботы) КАК Сумма,
			|			СУММА(Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки
			|		ИЗ
			|			ВТДоходы КАК Доходы
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВзносы КАК Взносы
			|				ПО Доходы.ФизическоеЛицо = Взносы.ФизическоеЛицо
			|		
			|		СГРУППИРОВАТЬ ПО
			|			Доходы.ФизическоеЛицо
			|		
			|		ИМЕЮЩИЕ
			|			СУММА(Доходы.БазаПодземныеИВредныеРаботы) > 0 И
			|			СУММА(Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки) > 0) КАК ДоходыВзносы
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДоходыВзносы.ФизическоеЛицо,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		0,
			|		ВЫРАЗИТЬ(100 * ДоходыВзносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка / ДоходыВзносы.Сумма КАК ЧИСЛО(25, 10))
			|	ИЗ
			|		(ВЫБРАТЬ
			|			Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
			|			СУММА(Доходы.БазаПодземныеИВредныеРаботы) КАК Сумма,
			|			СУММА(Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка
			|		ИЗ
			|			ВТДоходы КАК Доходы
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВзносы КАК Взносы
			|				ПО Доходы.ФизическоеЛицо = Взносы.ФизическоеЛицо
			|		
			|		СГРУППИРОВАТЬ ПО
			|			Доходы.ФизическоеЛицо
			|		
			|		ИМЕЮЩИЕ
			|			СУММА(Доходы.БазаПодземныеИВредныеРаботы) > 0 И
			|			СУММА(Взносы.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка) > 0) КАК ДоходыВзносы) КАК Ставки
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудники КАК Сотрудники
			|		ПО Ставки.ФизическоеЛицо = Сотрудники.ФизическоеЛицо
			|
			|СГРУППИРОВАТЬ ПО
			|	Сотрудники.Сотрудник";
			
			РезультатЗапроса = Запрос.Выполнить();
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(СтавкиВзносовФСС_НС.Добавить(), Выборка);
				ЗаполнитьЗначенияСвойств(СтавкиСтраховыхВзносов.Добавить(), Выборка);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыДляРасчета = Новый Структура;
	ПараметрыДляРасчета.Вставить("СтавкиВзносовФСС_НС", СтавкиВзносовФСС_НС);
	ПараметрыДляРасчета.Вставить("СтавкиСтраховыхВзносов", СтавкиСтраховыхВзносов);
	
	Возврат ПараметрыДляРасчета;	

КонецФункции 

#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

Процедура СформироватьДвиженияПоДокументу(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения, СтрокаСписокТаблиц) Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.СформироватьДвиженияПоДокументу(Движения, Отказ, Организация, ПериодРегистрации, ДанныеДляПроведения, СтрокаСписокТаблиц)	

КонецПроцедуры

// Процедура регистрирует процент ЕНВД в регистре сведений ПроцентЕНВДДляУчетаЗатратНаЗарплату.
//
// Параметры:
//  Организация	 - Тип СправочникСсылка.Организации
//  Месяц	     - Тип Дата, месяц, на который регистрируется процент ЕНВД.
//  ПроцентЕНВД  - Тип Число, или Неопределено
//		если ПроцентЕНВД = Неопределено, необходимо удалить регистрацию процента на указанный месяц.
//
Процедура ЗарегистрироватьПроцентЕНВД(Организация, Месяц, ПроцентЕНВД) Экспорт
	
	ПериодРегистрации = НачалоМесяца(Месяц);
	
	НаборЗаписей = РегистрыСведений.ПроцентЕНВДДляУчетаЗатратНаЗарплату.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	НаборЗаписей.Отбор.Месяц.Установить(ПериодРегистрации);
	НаборЗаписей.Прочитать();
	
	Если ПроцентЕНВД = Неопределено И НаборЗаписей.Выбран() Тогда
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
	Иначе
		
		// Выполняем запись только если новое значение не равно текущему.
		Если НаборЗаписей.Количество() = 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Организация = Организация;
			НоваяЗапись.Месяц = ПериодРегистрации;
			НоваяЗапись.Процент = ПроцентЕНВД;
			НаборЗаписей.Записать();
		ИначеЕсли НаборЗаписей[0].Процент <> ПроцентЕНВД Тогда
			НаборЗаписей[0].Организация = Организация;
			НаборЗаписей[0].Месяц = ПериодРегистрации;
			НаборЗаписей[0].Процент = ПроцентЕНВД;
			НаборЗаписей.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Формирует временную таблицу СоздатьВТСведенияОБухучетеНачисленийСотрудников, список сотрудников и периодов,
// по которым необходимо получить данные, берутся из временной таблицы в менеджере временных
// таблиц, переданном в качестве параметра. Временная таблица обязательно должна содержать
// колонки Сотрудник и Период.
//		Поля "Сотрудник,Период" можно переопределить в параметре ИменаПолейВременнойТаблицы.
//
//	Структура таблицы ВТСведенияОБухучетеНачисленийСотрудников.
//		Организация
//		Подразделение
//		Сотрудник
//		Период
//		Начисление
//		СтатьяФинансирования
//		СтатьяРасходов
//		СпособОтраженияЗарплатыВБухучете
//		ОтношениеКЕНВД.
//
// Параметры:
//		МенеджерВременныхТаблиц - содержит временную таблицу с именем, указанным в параметре ИмяВременнойТаблицы.
//		Организация - если значение Неопределенно, то должно быть поле Организация в таблице ИмяВременнойТаблицы.
//		Подразделение - если значение Неопределенно, то должно быть поле Подразделение в таблице ИмяВременнойТаблицы.
//		Начисление - если значение Неопределенно, то должно быть поле Начисление в таблице ИмяВременнойТаблицы.
//		ИмяВременнойТаблицы - временная таблица с полями Организация, Подразделение, Начисление, Сотрудник, Период.
//			Поля Организация, Подразделение, Начисление могут отсутствовать, если заполнены параметр Организация,
//			Подразделение, Начисление.
//			Имена полей Сотрудник и Период можно переопределить в параметре ИменаПолейВременнойТаблицы.
//		ИменаПолейВременнойТаблицы - строка, имена полей Сотрудник и Период временной таблицы ИмяВременнойТаблицы.
//
Процедура СоздатьВТСведенияОБухучетеНачисленийСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы = "Сотрудник,Период", Организация = Неопределено, Подразделение = Неопределено, Начисление = Неопределено) Экспорт
	
	СоздатьВТСведенияОБухучетеНачислений(МенеджерВременныхТаблиц);
	СоздатьВТСведенияОБухучетеЗарплатыСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы, Организация, Подразделение);
	
	МассивИменПолейОтбора = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаПолейВременнойТаблицы, ",");
	ИмяПоляСотрудник     = МассивИменПолейОтбора[0];
	ИмяПоляПериод        = МассивИменПолейОтбора[1];
	
	ОрганизацияВТаблице   = Организация = Неопределено;
	ПодразделениеВТаблице = Подразделение = Неопределено;
	НачислениеВТаблице    = Начисление = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Начисление", Начисление);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	" + ?(ОрганизацияВТаблице,"ВременнаяТаблица.Организация","&Организация") + " КАК Организация,
	|	" + ?(ПодразделениеВТаблице,"ВременнаяТаблица.Подразделение","&Подразделение") + " КАК Подразделение,
	|	" + ?(НачислениеВТаблице, "ВременнаяТаблица.Начисление","&Начисление") + " КАК Начисление,
	|	ВременнаяТаблица." + ИмяПоляСотрудник + " КАК Сотрудник,
	|	ВременнаяТаблица." + ИмяПоляПериод + " КАК Период,
	|	ВЫБОР
	|		КОГДА ЕстьNULL(СведенияОБухучетеНачислений.СтатьяФинансирования,ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СтатьяФинансирования
	|		ИНАЧЕ СведенияОБухучетеЗарплатыСотрудников.СтатьяФинансирования
	|	КОНЕЦ КАК СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА ЕстьNULL(СведенияОБухучетеНачислений.СтатьяРасходов,ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)
	|			ТОГДА СведенияОБухучетеНачислений.СтатьяРасходов
	|		ИНАЧЕ СведенияОБухучетеЗарплатыСотрудников.СтатьяРасходов
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА ЕстьNULL(СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете,ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухучете.ПустаяСсылка) 
	|			ТОГДА СведенияОБухучетеНачислений.СпособОтраженияЗарплатыВБухучете
	|		ИНАЧЕ СведенияОБухучетеЗарплатыСотрудников.СпособОтраженияЗарплатыВБухучете
	|	КОНЕЦ КАК СпособОтраженияЗарплатыВБухучете,
	|	ВЫБОР
	|		КОГДА ЕстьNULL(СведенияОБухучетеНачислений.ОтношениеКЕНВД,ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ПустаяСсылка) 
	|			ТОГДА СведенияОБухучетеНачислений.ОтношениеКЕНВД
	|		ИНАЧЕ СведенияОБухучетеЗарплатыСотрудников.ОтношениеКЕНВД
	|	КОНЕЦ КАК ОтношениеКЕНВД
	|ПОМЕСТИТЬ ВТСведенияОБухучетеНачисленийСотрудников
	|ИЗ
	|	" + ИмяВременнойТаблицы + "  КАК ВременнаяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеЗарплатыСотрудников
	|		ПО ВременнаяТаблица." + ИмяПоляСотрудник + " = СведенияОБухучетеЗарплатыСотрудников.Сотрудник
	|			И ВременнаяТаблица." + ИмяПоляПериод + " = СведенияОБухучетеЗарплатыСотрудников.Период
	|			" + ?(ПодразделениеВТаблице,"И ВременнаяТаблица.Подразделение = СведенияОБухучетеЗарплатыСотрудников.Подразделение","") + "
	|			" + ?(ОрганизацияВТаблице,"И ВременнаяТаблица.Организация = СведенияОБухучетеЗарплатыСотрудников.Организация","") + "
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеНачислений КАК СведенияОБухучетеНачислений
	|		ПО " + ?(НачислениеВТаблице,"ВременнаяТаблица.Начисление","&Начисление") + " = СведенияОБухучетеНачислений.Начисление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСведенияОБухучетеЗарплатыСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСведенияОБухучетеНачислений";
	
	Запрос.Выполнить();

КонецПроцедуры

// Формирует временную таблицу ВТСведенияОБухучетеЗарплатыСотрудников, список сотрудников и периодов,
// по которым необходимо получить данные, берутся из временной таблицы в менеджере временных
// таблиц, переданном в качестве параметра. Временная таблица обязательно должна содержать
// колонки Сотрудник и Период.
//		Поля "Сотрудник,Период" можно переопределить в ОписательВременныхТаблиц.
//
//	Структура таблицы ВТСведенияОБухучетеЗарплатыСотрудников.
//		Организация
//		Подразделение
//		Сотрудник
//		Период
//		СтатьяФинансирования
//		СтатьяРасходов
//		СпособОтраженияЗарплатыВБухучете
//		ОтношениеКЕНВД.
//
// Параметры:
//		МенеджерВременныхТаблиц - содержит временную таблицу с именем, указанным в параметре ИмяВременнойТаблицы.
//		Организация - если значение Неопределенно, то должно быть поле Организация в таблице ИмяВременнойТаблицы.
//		Подразделение - если значение Неопределенно, то должно быть поле Подразделение в таблице ИмяВременнойТаблицы.
//		ИмяВременнойТаблицы - временная таблица с полями Организация, Подразделение, Сотрудник, Период.
//			Поля Организация и Подразделение могут отсутствовать, если заполнены параметр Организация, Подразделение.
//			Имена полей Сотрудник и Период можно переопределить в параметре ИменаПолейВременнойТаблицы.
//		ИменаПолейВременнойТаблицы - строка, имена полей Сотрудник и Период временной таблицы ИмяВременнойТаблицы.
//
Процедура СоздатьВТСведенияОБухучетеЗарплатыСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы = "Сотрудник,Период", Организация = Неопределено, Подразделение = Неопределено, ТерриторияВыполненияРаботВОрганизации = Неопределено) Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТСведенияОБухучетеЗарплатыСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы, Организация, Подразделение, ТерриторияВыполненияРаботВОрганизации);

КонецПроцедуры

Процедура СоздатьВТСведенияОБухучетеНачислений(МенеджерВременныхТаблиц) Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТСведенияОБухучетеНачислений(МенеджерВременныхТаблиц);

КонецПроцедуры

// 4D:ERP для Беларуси, Яна, 22.08.2017 14:44:23 
// Результат тестирования конфигурации, №15769
// {
Процедура ПроверитьНеобходимостьЗаполненияПроцентаЕНВДНаТекущийМесяц(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы) Экспорт

		ОтражениеЗарплатыВБухучете.СоздатьВТСведенияОБухучетеНачисленийСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы, Организация);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СведенияОБухучете.ОтношениеКЕНВД
		|ИЗ
		|	ВТСведенияОБухучетеНачисленийСотрудников КАК СведенияОБухучете
		|ГДЕ
		|	СведенияОБухучете.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом)";
		
		Результат = Запрос.Выполнить();
		
		Запрос.Текст = 
		"УНИЧТОЖИТЬ ВТСведенияОБухучетеНачисленийСотрудников";
		Запрос.Выполнить();
		
		Если Не Результат.Пустой() Тогда
			
			// На текущий месяц не задан процент ЕНВД и есть объекты учета, 
			// для которых доля ЕНВД определяется процентом
			// вызываем исключение и сообщаем о проблеме.
			
			ТекстИсключения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Для организации ""%1"" не задан процент деятельности ЕНВД на %2 года.
			|Действие не выполнено.'"),
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "Наименование"), Формат(ПериодРегистрации, "ДФ='ММММ гггг'"));
			
			ВызватьИсключение ТекстИсключения;
			
		КонецЕсли;	

КонецПроцедуры
// }
// 4D

#КонецОбласти


#Область СлужебныеПроцедурыИФункции


#Область ОбслуживаниеОценочныхОбязательств

Функция ОстаткиОтпусковДляРасчетаОценочныхОбязательств(Организация, Период)

	ТаблицаОстаткиОтпусков = НоваяТаблицаОстаткиОтпусков();
	
	ПараметрыПолучения = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолучения.Организация      = Организация;
	ПараметрыПолучения.НачалоПериода    = НачалоМесяца(Период);
	ПараметрыПолучения.ОкончаниеПериода = КонецМесяца(Период);
	ПараметрыПолучения.Вставить("КадровыеДанные", "Подразделение");
	ТаблицаСотрудников = КадровыйУчет.СотрудникиОрганизации(Истина, ПараметрыПолучения);
	МассивСотрудников = ТаблицаСотрудников.ВыгрузитьКолонку("Сотрудник");
	
	ЕстьЕНВД = ПлательщикЕНВД(Организация, Период);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаСотрудников", ТаблицаСотрудников);
	Запрос.УстановитьПараметр("ЕстьЕНВД", ЕстьЕНВД);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаСотрудников.Сотрудник,
	|	ТаблицаСотрудников.Период,
	|	ТаблицаСотрудников.Подразделение
	|ПОМЕСТИТЬ ВТСотрудники
	|ИЗ
	|	&ТаблицаСотрудников КАК ТаблицаСотрудников"; 
	Запрос.Выполнить();
	
	СоздатьВТСведенияОБухучетеЗарплатыСотрудников(Запрос.МенеджерВременныхТаблиц, "ВТСотрудники", "Сотрудник,Период", Организация,,Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	Сотрудники.Подразделение КАК Подразделение,
	|	СведенияОБухучетеНачисленийСотрудников.СпособОтраженияЗарплатыВБухучете,
	|	СведенияОБухучетеНачисленийСотрудников.СтатьяФинансирования,
	|	ВЫБОР
	|		КОГДА &ЕстьЕНВД
	|				И СведенияОБухучетеНачисленийСотрудников.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОблагаетсяЕНВД
	|ИЗ
	|	ВТСотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеНачисленийСотрудников
	|		ПО Сотрудники.Сотрудник = СведенияОБухучетеНачисленийСотрудников.Сотрудник";
	
	БухучетСотрудников = Запрос.Выполнить().Выгрузить();
	БухучетСотрудников.Индексы.Добавить("Сотрудник");
	Отбор = Новый Структура("Сотрудник");
	
	СведенияОбОтпусках = ЗарплатаКадры.СведенияОбОтпускахСотрудниковДляРасчетаОценочныхОбязательств(МассивСотрудников, Период);
	Для каждого СтрокаСведений Из СведенияОбОтпусках Цикл
		
		НоваяСтрока = ТаблицаОстаткиОтпусков.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСведений);
		НоваяСтрока.Организация = Организация;
		
		Отбор.Сотрудник = СтрокаСведений.Сотрудник;
		СтрокиБухучета = БухучетСотрудников.НайтиСтроки(Отбор);
		Если СтрокиБухучета.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокиБухучета[0],"Подразделение,СпособОтраженияЗарплатыВБухучете,СтатьяФинансирования");
		КонецЕсли;
		
	КонецЦикла;	
	
	Возврат ТаблицаОстаткиОтпусков;

КонецФункции

Функция ФондОплатыТрудаИСтраховыеВзносыДляРасчетаОценочныхОбязательствОтпусков(Организация, Период, НачисленнаяЗарплатаИВзносы)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТНачисленияБазаОтпуска(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.УстановитьПараметр("НачисленнаяЗарплатаИВзносы", НачисленнаяЗарплатаИВзносы);
	Запрос.УстановитьПараметр("Организация", Организация);
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.Начисление,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.СтатьяФинансирования,
	|	НачисленияИВзносы.Сумма,
	|	НачисленияИВзносы.ПоляВзносов КАК ПолеВзносов,
	|	НачисленияИВзносы.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
	|	НачисленияИВзносы.ОблагаетсяЕНВД
	|ПОМЕСТИТЬ ВТНачисленнаяЗарплатаИВзносы
	|ИЗ
	|	&НачисленнаяЗарплатаИВзносы КАК НачисленияИВзносы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.СтатьяФинансирования,
	|	СУММА(НачисленияИВзносы.Сумма) КАК ФондОплатыТруда,
	|	СУММА(НачисленияИВзносы.ПолеВзносов) КАК СтраховыеВзносы,
	|	СУММА(НачисленияИВзносы.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи,
	|	НачисленияИВзносы.ОблагаетсяЕНВД
	|ИЗ
	|	ВТНачисленнаяЗарплатаИВзносы КАК НачисленияИВзносы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНачисленияБазаОтпуска КАК ВТНачисленияБазаОтпуска
	|		ПО НачисленияИВзносы.Начисление = ВТНачисленияБазаОтпуска.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.ОблагаетсяЕНВД,
	|	НачисленияИВзносы.СтатьяФинансирования";
	
	ТекстПолейВзносов = "";
	ТекстПоляСуммВзносов = "";
	Для каждого ИмяПоля Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина)) Цикл
		Если ИмяПоля = "ФССНесчастныеСлучаи" Тогда
			Продолжить;
		КонецЕсли;
		ТекстПолейВзносов = ТекстПолейВзносов + "НачисленияИВзносы." + ИмяПоля + " КАК " + ИмяПоля + "," + Символы.ПС;
		ТекстПоляСуммВзносов = ТекстПоляСуммВзносов + ?(ПустаяСтрока(ТекстПоляСуммВзносов),"","+") + " НачисленияИВзносы." + ИмяПоля;
	КонецЦикла;
	ТекстПоляСуммВзносов = "СУММА("+ТекстПоляСуммВзносов+") КАК СтраховыеВзносы,";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НачисленияИВзносы.ПоляВзносов КАК ПолеВзносов,", ТекстПолейВзносов);
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "СУММА(НачисленияИВзносы.ПолеВзносов) КАК СтраховыеВзносы,", ТекстПоляСуммВзносов);  
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ТаблицаФондОплатыТрудаИСтраховыеВзносы = НоваяТаблицаФондОплатыТрудаИСтраховыеВзносы();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаФондОплатыТрудаИСтраховыеВзносы.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат ТаблицаФондОплатыТрудаИСтраховыеВзносы;	
	
КонецФункции 

#КонецОбласти

#Область ДанныеДляОтраженияЗарплатыВБухучете

// Функция формирует структуру с данными отражения зарплаты для бухучета.
//
// Параметры:
//  Организация, тип СправочникСсылка.Организации.
//  ПериодРегистрации - тип дата, первое число месяца.
//  СтрокаСписокТаблиц - Тип Строка, в строке переданы имена таблиц, которые необходимо заполнить
//				         имена таблиц соответствуют именам табличных частей документа ОтражениеЗарплатыВБухучете.
//  Отказ - Булево
//  ДанныеДляПроведения - Структура, ключ - имя регистра, значение - таблица значений с движениями документа
//						это источник данных, если Неопределено, тогда источник данных - движения регистров.
//
// Возвращаемое значение
// 		Структура ДанныеДляОтражения
//			Ключ - имя таблицы, соответствует именам табличных частей документа ОтражениеЗарплатыВБухучете.
//			Значение - таблица значений, соответствующая структуре табличных частей документа ОтражениеЗарплатыВБухучете.
//
Функция ДанныеДляОтраженияЗарплатыВБухучете(ПериодРегистрации, Организация, СтрокаСписокТаблиц = "", РезультатыРасчетаЗарплаты = Неопределено) Экспорт
	
	ДанныеДляОтражения = НоваяСтруктураДанныеДляОтраженияЗарплатыВБухучете();
	
	Если ПустаяСтрока(СтрокаСписокТаблиц) Или СтрНайти(СтрокаСписокТаблиц, "НачисленнаяЗарплатаИВзносы") > 0 Тогда
		
		ТаблицаНачисленнаяЗарплатаИВзносы = ДанныеДляОтраженияВБухучетеНачисленийИВзносов(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты);
		ДанныеДляОтражения.НачисленнаяЗарплатаИВзносы = ТаблицаНачисленнаяЗарплатаИВзносы;
		
	КонецЕсли;
	
	Если ПустаяСтрока(СтрокаСписокТаблиц) Или СтрНайти(СтрокаСписокТаблиц, "НачисленныйНДФЛ") > 0 Тогда
		
		ТаблицаНачисленныйНДФЛ = ДанныеДляОтраженияВБухучетеНДФЛ(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты);
		ДанныеДляОтражения.НачисленныйНДФЛ = ТаблицаНачисленныйНДФЛ;
		
	КонецЕсли;
	
	Если ПустаяСтрока(СтрокаСписокТаблиц) Или СтрНайти(СтрокаСписокТаблиц, "УдержаннаяЗарплата") > 0 Тогда
		
		ТаблицаУдержаннаяЗарплата = ДанныеДляОтраженияВБухучетеУдержаний(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты);
		ДанныеДляОтражения.УдержаннаяЗарплата = ТаблицаУдержаннаяЗарплата;
		
	КонецЕсли;

	Возврат ДанныеДляОтражения;
	
КонецФункции

// Функция возвращает таблицу значений с данными бухучета удержаний.
//		Поля таблицы описаны в НоваяТаблицаБухучетУдержаннаяЗарплата().
//
// Параметры:
//	Организация - СправочникСсылка.Организации
//	ПериодРегистрации - Дата
//	РезультатыРасчетаЗарплаты - структура,  содержит таблицы значений с движениями регистров
//					если структура передается, то таблицы будут источником данных для
//					отражения в учете.
//
Функция ДанныеДляОтраженияВБухучетеУдержаний(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	Если ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата() Тогда
		Возврат ДанныеДляОтраженияВБухучетеУдержанийПоСтатьямФинансирования(Организация, ПериодРегистрации);
	Иначе
		Возврат ДанныеДляОтраженияВБухучетеУдержанийБезСтатейФинансирования(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты);
	КонецЕсли;

КонецФункции

Функция ДанныеДляОтраженияВБухучетеУдержанийБезСтатейФинансирования(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты)

	ТаблицаУдержаннаяЗарплата = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеУдержаний(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	
	УдержаннаяЗарплата = НоваяТаблицаБухучетУдержаннаяЗарплата();
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаУдержаннаяЗарплата", ТаблицаУдержаннаяЗарплата);
	
	// Помещаем таблицу в запрос.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УдержаннаяЗарплата.Организация,
	|	УдержаннаяЗарплата.Сотрудник,
	|	УдержаннаяЗарплата.ФизическоеЛицо,
	|	УдержаннаяЗарплата.Подразделение,
	|	УдержаннаяЗарплата.ДатаНачала,
	|	УдержаннаяЗарплата.Контрагент,
	|	УдержаннаяЗарплата.ВидОперации,
	|	УдержаннаяЗарплата.Сумма
	|ПОМЕСТИТЬ ВТУдержаннаяЗарплата
	|ИЗ
	|	&ТаблицаУдержаннаяЗарплата КАК УдержаннаяЗарплата";
	Запрос.Выполнить();
	
	// Получаем кадровые данные сотрудников с полями для сортировки. 	
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТУдержаннаяЗарплата.Сотрудник КАК Сотрудник,
		|	&ПериодРегистрации КАК Период
		|ПОМЕСТИТЬ ВТСотрудникиПериоды
		|ИЗ
		|	ВТУдержаннаяЗарплата КАК ВТУдержаннаяЗарплата";
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТСотрудникиПериоды");
	КадровыеДанные = "";
	ЗарплатаКадры.ДополнитьКадровымиДаннымиНастройкиПорядкаСписка(КадровыеДанные);
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, КадровыеДанные);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УдержаннаяЗарплата.ФизическоеЛицо,
	|	УдержаннаяЗарплата.Сотрудник,
	|	УдержаннаяЗарплата.Подразделение,
	|	УдержаннаяЗарплата.ДатаНачала,
	|	УдержаннаяЗарплата.ВидОперации КАК ВидОперации,
	|	УдержаннаяЗарплата.Контрагент,
	|	СУММА(УдержаннаяЗарплата.Сумма) КАК Сумма
	|ИЗ
	|	ВТУдержаннаяЗарплата КАК УдержаннаяЗарплата
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК Сотрудники
	|		ПО УдержаннаяЗарплата.Сотрудник = Сотрудники.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО УдержаннаяЗарплата.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО УдержаннаяЗарплата.Подразделение = ПодразделенияОрганизаций.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	УдержаннаяЗарплата.ФизическоеЛицо,
	|	УдержаннаяЗарплата.Подразделение,
	|	УдержаннаяЗарплата.ДатаНачала,
	|	УдержаннаяЗарплата.ВидОперации,
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	УдержаннаяЗарплата.Контрагент,
	|	УдержаннаяЗарплата.Сотрудник
	|
	|ИМЕЮЩИЕ
	|	СУММА(УдержаннаяЗарплата.Сумма) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	ВидОперации";
	
	// Добавляем упорядочивание по настройкам.
	ПсевдонимыТаблиц = Новый Соответствие;
	ПсевдонимыТаблиц.Вставить("Справочник.ПодразделенияОрганизаций", "УдержаннаяЗарплата");
	ПсевдонимыТаблиц.Вставить("Справочник.Должности", "Сотрудники");
	ПсевдонимыТаблиц.Вставить("Справочник.Сотрудники", "Сотрудники");
	ЗарплатаКадры.ДополнитьТекстЗапросаУпорядочиваниемСотрудников(Запрос, ПсевдонимыТаблиц);	
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(УдержаннаяЗарплата.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат УдержаннаяЗарплата;

КонецФункции

Функция ДанныеДляОтраженияВБухучетеУдержанийПоСтатьямФинансирования(Организация, ПериодРегистрации)

	Возврат ОтражениеЗарплатыВБухучетеВнутренний.ДанныеДляОтраженияВБухучетеУдержанийПоСтатьямФинансирования(Организация, ПериодРегистрации);

КонецФункции

// Функция возвращает таблицу значений с данными бухучета НДФЛ.
//		Поля таблицы описаны в НоваяТаблицаБухучетНачисленныйНДФЛ().
//
// Параметры:
//	Организация - СправочникСсылка.Организации
//	ПериодРегистрации - Дата
//	РезультатыРасчетаЗарплаты - структура,  содержит таблицы значений с движениями регистров
//					если структура передается, то таблицы будут источником данных для
//					отражения в учете.
//
Функция ДанныеДляОтраженияВБухучетеНДФЛ(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	Если ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата() Тогда
		Возврат ДанныеДляОтраженияВБухучетеНДФЛПоСтатьямФинансирования(Организация, ПериодРегистрации);
	Иначе
		Возврат ДанныеДляОтраженияВБухучетеНДФЛБезСтатейФинансирования(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты);
	КонецЕсли;
	
КонецФункции

Функция ДанныеДляОтраженияВБухучетеНДФЛБезСтатейФинансирования(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты)

	ТаблицаНДФЛ = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеНДФЛ(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	
	Если ТаблицаНДФЛ.Колонки.Найти("РегистрацияВНалоговомОргане") = Неопределено Тогда
		ТаблицаНДФЛ.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	КонецЕсли;
	ТаблицаНДФЛ.Колонки.Подразделение.Имя = "ПодразделениеСотрудника";
	ТаблицаНДФЛ.Колонки.ТерриторияВыполненияРаботВОрганизации.Имя = "Подразделение";
	УчетНДФЛ.ПроставитьРегистрациюВНалоговомОрганеВТаблице(Организация, ТаблицаНДФЛ, ПериодРегистрации);
	
	НачисленныйНДФЛ = НоваяТаблицаБухучетНачисленныйНДФЛ();
	
	// Добавим сведения ОКАТО и КПП.
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаНДФЛ", ТаблицаНДФЛ);
	
	// Помещаем таблицу в запрос.
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.Организация,
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Сотрудник,
	|	ТаблицаНДФЛ.Сумма,
	|	ТаблицаНДФЛ.РегистрацияВНалоговомОргане,
	|	ТаблицаНДФЛ.ВидОперации
	|ПОМЕСТИТЬ ВТТаблицаНДФЛ
	|ИЗ
	|	&ТаблицаНДФЛ КАК ТаблицаНДФЛ";
	Запрос.Выполнить();
	
	// Получаем кадровые данные сотрудников с полями для сортировки. 	
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТТаблицаНДФЛ.Сотрудник КАК Сотрудник,
		|	&ПериодРегистрации КАК Период
		|ПОМЕСТИТЬ ВТСотрудникиПериоды
		|ИЗ
		|	ВТТаблицаНДФЛ КАК ВТТаблицаНДФЛ";
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТСотрудникиПериоды");
	КадровыеДанные = "";
	ЗарплатаКадры.ДополнитьКадровымиДаннымиНастройкиПорядкаСписка(КадровыеДанные);
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, КадровыеДанные);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ТаблицаНДФЛ.Сотрудник,
	|	СУММА(ТаблицаНДФЛ.Сумма) КАК Сумма,
	|	ТаблицаНДФЛ.ВидОперации КАК ВидОперации,
	|	ТаблицаНДФЛ.РегистрацияВНалоговомОргане,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КодПоОКАТО, """") КАК КодПоОКАТО,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КодПоОКТМО, """") КАК КодПоОКТМО,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КПП, """") КАК КПП,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.Код, """") КАК КодНалоговогоОргана
	|ИЗ
	|	ВТТаблицаНДФЛ КАК ТаблицаНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК Сотрудники
	|		ПО ТаблицаНДФЛ.Сотрудник = Сотрудники.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|		ПО ТаблицаНДФЛ.РегистрацияВНалоговомОргане = РегистрацииВНалоговомОргане.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ТаблицаНДФЛ.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНДФЛ.ФизическоеЛицо,
	|	ФизическиеЛица.Наименование,
	|	ТаблицаНДФЛ.ВидОперации,
	|	ТаблицаНДФЛ.РегистрацияВНалоговомОргане,
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КодПоОКАТО, """"),
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КПП, """"),
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.КодПоОКТМО, """"),
	|	ЕСТЬNULL(РегистрацииВНалоговомОргане.Код, """"),
	|	ТаблицаНДФЛ.Сотрудник
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаНДФЛ.Сумма) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическиеЛица.Наименование,
	|	ВидОперации";
	// Добавляем авто-упорядочивание.
	ЗарплатаКадры.ДополнитьТекстЗапросаУпорядочиваниемСотрудниковПоВТСДаннымиПорядка(Запрос, "Сотрудники");
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(НачисленныйНДФЛ.Добавить(), Выборка);
	КонецЦикла;
	
	Возврат НачисленныйНДФЛ;

КонецФункции

Функция ДанныеДляОтраженияВБухучетеНДФЛПоСтатьямФинансирования(Организация, ПериодРегистрации)

	Возврат ОтражениеЗарплатыВБухучетеВнутренний.ДанныеДляОтраженияВБухучетеНДФЛПоСтатьямФинансирования(Организация, ПериодРегистрации);

КонецФункции

// Функция возвращает таблицу значений с данными бухучета начислений и взносов.
//		Поля таблицы описаны в НоваяТаблицаБухучетНачисленнаяЗарплатаИВзносы().
//
// Параметры:
//	Организация - СправочникСсылка.Организации
//	ПериодРегистрации - Дата
//	РезультатыРасчетаЗарплаты - структура,  содержит таблицы значений с движениями регистров
//					если структура передается, то таблицы будут источником данных для
//					отражения в учете.
//
Функция ДанныеДляОтраженияВБухучетеНачисленийИВзносов(Организация, ПериодРегистрации, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	ТаблицаНачисленнаяЗарплатаИВзносы = НоваяТаблицаБухучетНачисленнаяЗарплатаИВзносы();
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ЗарплатаКадры.ИспользоватьСтатьиФинансированияЗарплата() Тогда
		
		ОтражениеЗарплатыВБухучетеВнутренний.СведенияОБухучетеНачисленийИВзносовПоСтатьямФинансирования(Организация, ПериодРегистрации, МенеджерВременныхТаблиц);
		
	Иначе
		
		ТаблицаНачислений = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеНачислений(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
		
		ПроцентЕНВД = ?(Не ЗначениеЗаполнено(Организация), Неопределено, ОтражениеЗарплатыВБухучете.ПроцентЕНВД(Организация, ПериодРегистрации));
		
		Запрос.УстановитьПараметр("ТаблицаНачислений", ТаблицаНачислений);
		Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	&ПериодРегистрации КАК ПериодРегистрации,
		|	ТаблицаНачислений.ИдентификаторСтроки,
		|	ТаблицаНачислений.Организация,
		|	ТаблицаНачислений.Сотрудник,
		|	ТаблицаНачислений.ФизическоеЛицо,
		|	ТаблицаНачислений.Подразделение,
		|	ТаблицаНачислений.ТерриторияВыполненияРаботВОрганизации,
		|	ТаблицаНачислений.ДатаНачала,
		|	ТаблицаНачислений.ДатаОкончания,
		|	ТаблицаНачислений.ВидОперации,
		|	ТаблицаНачислений.Начисление,
		|	ТаблицаНачислений.ДокументОснование,
		|	ТаблицаНачислений.Сумма
		|ПОМЕСТИТЬ ВТНачисленияДляРаспределения
		|ИЗ
		|	&ТаблицаНачислений КАК ТаблицаНачислений";
		Запрос.Выполнить();
		
		// Получим отражение в бухучете начислений и взносов.
		СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, МенеджерВременныхТаблиц);
		СоздатьВТБухучетСтраховыхВзносов(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, РезультатыРасчетаЗарплаты);
		
	КонецЕсли;
	
	// Получаем кадровые данные сотрудников с полями для сортировки. 	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТБухучетНачислений.Сотрудник КАК Сотрудник,
		|	ВТБухучетНачислений.ПериодПринятияРасходов КАК Период
		|ПОМЕСТИТЬ ВТСотрудникиПериоды
		|ИЗ
		|	ВТБухучетНачислений КАК ВТБухучетНачислений
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТБухучетСтраховыхВзносов.Сотрудник,
		|	ВТБухучетСтраховыхВзносов.ПериодПринятияРасходов
		|ИЗ
		|	ВТБухучетСтраховыхВзносов КАК ВТБухучетСтраховыхВзносов";
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТСотрудникиПериоды");
	КадровыеДанные = "";
	ЗарплатаКадры.ДополнитьКадровымиДаннымиНастройкиПорядкаСписка(КадровыеДанные);
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, КадровыеДанные);
	
	// Собираем финальный запрос.
	ВидыОпераций = Новый Массив;
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ДивидендыСотрудников); 
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.Дивиденды);
	Запрос.УстановитьПараметр("ВидыОпераций", ВидыОпераций);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачисленияИВзносы.ПериодПринятияРасходов,
	|	НачисленияИВзносы.ФизическоеЛицо,
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.ДатаНачала,
	|	НачисленияИВзносы.Начисление,
	|	НачисленияИВзносы.ВидОперации,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|	НачисленияИВзносы.СтатьяРасходов КАК СтатьяРасходов,
	|	СУММА(НачисленияИВзносы.Сумма) КАК Сумма,
	|	НачисленияИВзносы.ВидНачисленияОплатыТрудаДляНУ,
	|	СУММА(НачисленияИВзносы.ПоляВзносов) КАК ПоляВзносов,
	|	НачисленияИВзносы.ОблагаетсяЕНВД
	|ИЗ
	|	(ВЫБРАТЬ
	|		НачисленияИВзносы.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|		НачисленияИВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|		НачисленияИВзносы.Сотрудник КАК Сотрудник,
	|		НачисленияИВзносы.Подразделение КАК Подразделение,
	|		НачисленияИВзносы.ДатаНачала КАК ДатаНачала,
	|		НачисленияИВзносы.ВидОперации КАК ВидОперации,
	|		НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|		НачисленияИВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|		НачисленияИВзносы.СтатьяРасходов КАК СтатьяРасходов,
	|		СУММА(НачисленияИВзносы.Сумма) КАК Сумма,
	|		МАКСИМУМ(НачисленияИВзносы.ВидНачисленияОплатыТрудаДляНУ) КАК ВидНачисленияОплатыТрудаДляНУ,
	|		СУММА(НачисленияИВзносы.ПоляВзносов) КАК ПоляВзносов,
	|		НачисленияИВзносы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		НачисленияИВзносы.Начисление КАК Начисление
	|	ИЗ
	|		(ВЫБРАТЬ
	|			БухучетНачислений.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|			БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|			БухучетНачислений.Сотрудник КАК Сотрудник,
	|			БухучетНачислений.Подразделение КАК Подразделение,
	|			БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|			БухучетНачислений.Начисление КАК Начисление,
	|			БухучетНачислений.ВидОперации КАК ВидОперации,
	|			БухучетНачислений.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|			БухучетНачислений.СтатьяФинансирования КАК СтатьяФинансирования,
	|			БухучетНачислений.СтатьяРасходов КАК СтатьяРасходов,
	|			БухучетНачислений.Сумма КАК Сумма,
	|			БухучетНачислений.ВидНачисленияОплатыТрудаДляНУ КАК ВидНачисленияОплатыТрудаДляНУ,
	|			0 КАК ПоляВзносов,
	|			БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
	|		ИЗ
	|			ВТБухучетНачислений КАК БухучетНачислений
	|		ГДЕ
	|			НЕ БухучетНачислений.ВидОперации В (&ВидыОпераций)
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			БухучетСтраховыхВзносов.ПериодПринятияРасходов,
	|			БухучетСтраховыхВзносов.ФизическоеЛицо,
	|			БухучетСтраховыхВзносов.Сотрудник,
	|			БухучетСтраховыхВзносов.Подразделение,
	|			БухучетСтраховыхВзносов.ДатаНачала,
	|			БухучетСтраховыхВзносов.Начисление,
	|			БухучетСтраховыхВзносов.ВидОперации,
	|			БухучетСтраховыхВзносов.СпособОтраженияЗарплатыВБухучете,
	|			БухучетСтраховыхВзносов.СтатьяФинансирования,
	|			БухучетСтраховыхВзносов.СтатьяРасходов,
	|			0,
	|			ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка),
	|			101,
	|			БухучетСтраховыхВзносов.ОблагаетсяЕНВД
	|		ИЗ
	|			ВТБухучетСтраховыхВзносов КАК БухучетСтраховыхВзносов) КАК НачисленияИВзносы
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|			ПО НачисленияИВзносы.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|			ПО НачисленияИВзносы.Подразделение = ПодразделенияОрганизаций.Ссылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НачисленияИВзносы.ПериодПринятияРасходов,
	|		НачисленияИВзносы.ФизическоеЛицо,
	|		НачисленияИВзносы.Сотрудник,
	|		НачисленияИВзносы.Подразделение,
	|		НачисленияИВзносы.ДатаНачала,
	|		НачисленияИВзносы.ВидОперации,
	|		НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|		НачисленияИВзносы.СтатьяФинансирования,
	|		НачисленияИВзносы.СтатьяРасходов,
	|		НачисленияИВзносы.ОблагаетсяЕНВД,
	|		ФизическиеЛица.Наименование,
	|		ПодразделенияОрганизаций.Наименование,
	|		НачисленияИВзносы.Начисление) КАК НачисленияИВзносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО НачисленияИВзносы.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО НачисленияИВзносы.Подразделение = ПодразделенияОрганизаций.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК Сотрудники
	|		ПО НачисленияИВзносы.Сотрудник = Сотрудники.Сотрудник
	|			И НачисленияИВзносы.ПериодПринятияРасходов = Сотрудники.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	НачисленияИВзносы.ОблагаетсяЕНВД,
	|	НачисленияИВзносы.ВидНачисленияОплатыТрудаДляНУ,
	|	НачисленияИВзносы.СтатьяРасходов,
	|	НачисленияИВзносы.СтатьяФинансирования,
	|	НачисленияИВзносы.ПериодПринятияРасходов,
	|	НачисленияИВзносы.ВидОперации,
	|	НачисленияИВзносы.ФизическоеЛицо,
	|	НачисленияИВзносы.Подразделение,
	|	НачисленияИВзносы.ДатаНачала,
	|	НачисленияИВзносы.СпособОтраженияЗарплатыВБухучете,
	|	НачисленияИВзносы.Сотрудник,
	|	НачисленияИВзносы.Начисление
	|
	|ИМЕЮЩИЕ
	|	(СУММА(НачисленияИВзносы.Сумма) <> 0
	|		ИЛИ СУММА(НачисленияИВзносы.ПоляВзносов) <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	СтатьяФинансирования,
	|	СтатьяРасходов,
	|	СпособОтраженияЗарплатыВБухучете
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	ТекстПолейВзносов = "";
	ТекстПолейНулей = "";
	ТекстПолейСуммВзносов = "";
	ТекстПолейСуммВзносовУсловие = "";
	Для каждого ИмяПоля Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина)) Цикл
		ТекстПолейВзносов = ТекстПолейВзносов + "БухучетСтраховыхВзносов." + ИмяПоля + " КАК " + ИмяПоля + "," + Символы.ПС;
		ТекстПолейСуммВзносов = ТекстПолейСуммВзносов + "СУММА(НачисленияИВзносы." + ИмяПоля + ") КАК " + ИмяПоля + "," + Символы.ПС;
		ТекстПолейСуммВзносовУсловие = ТекстПолейСуммВзносовУсловие + "ИЛИ СУММА(НачисленияИВзносы." + ИмяПоля + ") <> 0" + Символы.ПС;
		ТекстПолейНулей = ТекстПолейНулей + "0 КАК " + ИмяПоля + "," + Символы.ПС;
	КонецЦикла;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "0 КАК ПоляВзносов,", ТекстПолейНулей);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "101,", ТекстПолейВзносов);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИЛИ СУММА(НачисленияИВзносы.ПоляВзносов) <> 0", ТекстПолейСуммВзносовУсловие);
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "СУММА(НачисленияИВзносы.ПоляВзносов) КАК ПоляВзносов,", ТекстПолейСуммВзносов);
	
	// Добавляем упорядочивание по настройкам.
	ПсевдонимыТаблиц = Новый Соответствие;
	ПсевдонимыТаблиц.Вставить("Справочник.ПодразделенияОрганизаций", "НачисленияИВзносы");
	ПсевдонимыТаблиц.Вставить("Справочник.Должности", "Сотрудники");
 	ПсевдонимыТаблиц.Вставить("Справочник.Сотрудники", "Сотрудники");
	ЗарплатаКадры.ДополнитьТекстЗапросаУпорядочиваниемСотрудников(Запрос, ПсевдонимыТаблиц);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаНачисленнаяЗарплатаИВзносы.Добавить(),Выборка);
	КонецЦикла;
	
	Возврат ТаблицаНачисленнаяЗарплатаИВзносы;
	
КонецФункции

// Выполняет свертку таблиц значений структуры ДанныеДляОтражения
// 
//	Параметры
// 		ДанныеДляОтражения - структура, описание см НоваяСтруктураДанныеДляОтраженияЗарплатыВБухучете()
// 		СтрокаКолонкиУдаления - строка, через запятую указаны имена колонок, которые необходимо удалить
//
Процедура СвернутьДанныеДляОтраженияЗарплатыВБухучете(ДанныеДляОтражения, СтрокаКолонкиУдаления) Экспорт

	КолонкиУдаления = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаКолонкиУдаления);
	
	Для каждого ЭлементСтруктуры Из ДанныеДляОтражения Цикл
		
		КолонкиГруппировок  = Новый Массив;
		КолонкиСуммирования = Новый Массив;
		Для каждого КолонкаТЗ Из ЭлементСтруктуры.Значение.Колонки Цикл
			Если КолонкиУдаления.Найти(КолонкаТЗ.Имя) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если КолонкаТЗ.ТипЗначения.СодержитТип(Тип("Число")) Тогда
				КолонкиСуммирования.Добавить(КолонкаТЗ.Имя);
			Иначе
				КолонкиГруппировок.Добавить(КолонкаТЗ.Имя);
			КонецЕсли;
		КонецЦикла;
		КолонкиСуммирования = СтрСоединить(КолонкиСуммирования, ", ");
		КолонкиГруппировок = СтрСоединить(КолонкиГруппировок, ", ");
		ЭлементСтруктуры.Значение.Свернуть(КолонкиГруппировок, КолонкиСуммирования);
		
		// удалим строки с нулевыми суммами
		Отбор = Новый Структура(КолонкиСуммирования);
		Для каждого ЭлементКоллекции Из Отбор Цикл
			Отбор[ЭлементКоллекции.Ключ] = 0;
		КонецЦикла;
		НайденныеСтроки = ЭлементСтруктуры.Значение.НайтиСтроки(Отбор);
		Для каждого СтрокаТЗ Из НайденныеСтроки Цикл
			ЭлементСтруктуры.Значение.Удалить(СтрокаТЗ);
		КонецЦикла;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СозданиеВТНачисленийИВзносов

// Формирует таблицу отражения в бухучете начислений - ВТБухучетНачислений.
//
//	МенеджерВременныхТаблиц должен содержать таблицу ВТНачисленияДляРаспределения.
//	Описание таблицы ВТНачисленияДляРаспределения
// 		ПериодРегистрации.
// 		Организация
// 		Сотрудник
// 		ФизическоеЛицо
// 		Подразделение
// 		Начисление
// 		ВидОперации
// 		ДатаНачала
// 		ДатаОкончания
// 		Сумма
//		ДокументОснование
// 		ИдентификаторСтроки
//
// Поля таблицы ВТБухучетНачислений
// 		ПериодРегистрации
// 		ИдентификаторСтроки
// 		ПериодПринятияРасходов.
// 		Организация
// 		Сотрудник
// 		ФизическоеЛицо
// 		Подразделение
// 		Начисление
// 		ВидОперации
// 		ДатаНачала
// 		ДатаОкончания
// 		ДокументОснование
// 		СпособОтраженияЗарплатыВБухучете
// 		СтатьяФинансирования
// 		СтатьяРасходов.
// 		Сумма
// 		ВидНачисленияОплатыТрудаДляНУ
// 		ОблагаетсяЕНВД.
//
// Параметры:
//		Организация
//		ПериодРегистрации
//		ПроцентЕНВД
//		МенеджерВременныхТаблиц
//		ДополнительныеПараметры - Структура, данные документа, начисления которого распределяем
//						используется при ведении учета по статьям финансирования.
//
Процедура СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, МенеджерВременныхТаблиц)

	ОтражениеЗарплатыВБухучетеВнутренний.СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, МенеджерВременныхТаблиц);
	
КонецПроцедуры

// Формирует таблицу отражения в бухучете страховых взносов - ВТБухучетСтраховыхВзносов.
//
// Менеджер временных таблиц должен содержать таблицу ВТБухучетНачислений, структура описана в процедуре
// СоздатьВТБухучетНачислений.
//
Процедура СоздатьВТБухучетСтраховыхВзносов(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, РезультатыРасчетаЗарплаты = Неопределено) Экспорт

	ТаблицаВзносов = ОтражениеЗарплатыВУчете.ДанныеДляОтражениеВУчетеВзносов(ПериодРегистрации, Организация, РезультатыРасчетаЗарплаты);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаВзносов", ТаблицаВзносов);
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&ПериодРегистрации КАК ПериодРегистрации,
	|	ТаблицаВзносов.ИдентификаторСтроки,
	|	ТаблицаВзносов.Организация,
	|	ТаблицаВзносов.Сотрудник,
	|	ТаблицаВзносов.ФизическоеЛицо,
	|	ТаблицаВзносов.Подразделение,
	|	ТаблицаВзносов.ВидОперации,
	|	ТаблицаВзносов.Начисление,
	|	ТаблицаВзносов.ДатаНачала,
	|	ТаблицаВзносов.ОблагаетсяЕНВД,
	|	ТаблицаВзносов.Сумма
	|ПОМЕСТИТЬ ВТВзносы
	|ИЗ
	|	&ТаблицаВзносов КАК ТаблицаВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Взносы.ФизическоеЛицо
	|ИЗ
	|	ВТВзносы КАК Взносы
	|ГДЕ
	|	Взносы.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|	И Взносы.Начисление ССЫЛКА ПланВидовРасчета.Начисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Взносы.ФизическоеЛицо
	|ИЗ
	|	ВТВзносы КАК Взносы
	|ГДЕ
	|	Взносы.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|	И Взносы.Начисление ССЫЛКА Перечисление.ВидыОсобыхНачисленийИУдержаний";
	
	МассивФизическихЛиц = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	
	Если МассивФизическихЛиц.Количество() > 0 Тогда
		
		КадровыйУчет.СоздатьВТОсновныеСотрудникиФизическихЛиц(МенеджерВременныхТаблиц, Истина, МассивФизическихЛиц, Организация, ПериодРегистрации, КонецМесяца(ПериодРегистрации));
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Сотрудники.Сотрудник,
		|	Сотрудники.ФизическоеЛицо,
		|	КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ) КАК Период
		|ПОМЕСТИТЬ ВТОсновныеСотрудники
		|ИЗ
		|	(ВЫБРАТЬ
		|		МАКСИМУМ(Сотрудники.Сотрудник) КАК Сотрудник,
		|		Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо
		|	ИЗ
		|		ВТОсновныеСотрудникиФизическихЛиц КАК Сотрудники
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Сотрудники.ФизическоеЛицо) КАК Сотрудники";
		Запрос.Выполнить();
		
		ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(МенеджерВременныхТаблиц, "ВТОсновныеСотрудники", "Сотрудник,Период");
		КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина, "Подразделение");
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	&ПериодРегистрации КАК ПериодРегистрации,
		|	ТаблицаВзносов.ИдентификаторСтроки,
		|	ТаблицаВзносов.Организация,
		|	ВЫБОР
		|		КОГДА ТаблицаВзносов.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|				И НЕ ОсновныеСотрудникиФизическихЛиц.Сотрудник ЕСТЬ NULL 
		|			ТОГДА ОсновныеСотрудникиФизическихЛиц.Сотрудник
		|		ИНАЧЕ ТаблицаВзносов.Сотрудник
		|	КОНЕЦ КАК Сотрудник,
		|	ВЫБОР
		|		КОГДА ТаблицаВзносов.Подразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|				И НЕ КадровыеДанныеСотрудников.Подразделение ЕСТЬ NULL 
		|			ТОГДА КадровыеДанныеСотрудников.Подразделение
		|		ИНАЧЕ ТаблицаВзносов.Подразделение
		|	КОНЕЦ КАК Подразделение,
		|	ТаблицаВзносов.ФизическоеЛицо,
		|	ТаблицаВзносов.ВидОперации,
		|	ТаблицаВзносов.Начисление,
		|	ТаблицаВзносов.ДатаНачала,
		|	ТаблицаВзносов.ОблагаетсяЕНВД,
		|	ТаблицаВзносов.Сумма
		|ПОМЕСТИТЬ ВТВзносыВременная
		|ИЗ
		|	ВТВзносы КАК ТаблицаВзносов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОсновныеСотрудники КАК ОсновныеСотрудникиФизическихЛиц
		|		ПО ТаблицаВзносов.ФизическоеЛицо = ОсновныеСотрудникиФизическихЛиц.ФизическоеЛицо
		|			И (ТаблицаВзносов.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
		|		ПО ТаблицаВзносов.ФизическоеЛицо = КадровыеДанныеСотрудников.ФизическоеЛицо
		|			И (ТаблицаВзносов.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВзносы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВзносыВременная.ПериодРегистрации,
		|	ВзносыВременная.ИдентификаторСтроки,
		|	ВзносыВременная.Организация,
		|	ВзносыВременная.Сотрудник,
		|	ВзносыВременная.Подразделение,
		|	ВзносыВременная.ФизическоеЛицо,
		|	ВзносыВременная.ВидОперации,
		|	ВзносыВременная.Начисление,
		|	ВзносыВременная.ДатаНачала,
		|	ВзносыВременная.ОблагаетсяЕНВД,
		|	ВзносыВременная.Сумма
		|ПОМЕСТИТЬ ВТВзносы
		|ИЗ
		|	ВТВзносыВременная КАК ВзносыВременная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВзносыВременная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТОсновныеСотрудники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТОсновныеСотрудникиФизическихЛиц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТКадровыеДанныеСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Взносы.ИдентификаторСтроки,
		|	Взносы.Организация,
		|	Взносы.Сотрудник,
		|	Взносы.Подразделение,
		|	Взносы.ФизическоеЛицо,
		|	Взносы.ВидОперации,
		|	Взносы.Начисление,
		|	Взносы.ДатаНачала,
		|	Взносы.ОблагаетсяЕНВД,
		|	Взносы.Сумма
		|ИЗ
		|	ВТВзносы КАК Взносы";
		
		ТаблицаВзносов = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.ОблагаетсяЕНВД,
	|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетНачисленийСвод
	|ИЗ
	|	ВТБухучетНачислений КАК БухучетНачислений
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|	БухучетНачислений.ПериодПринятияРасходов,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	БухучетНачислений.ВидОперации,
	|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
	|	БухучетНачислений.СтатьяФинансирования,
	|	БухучетНачислений.СтатьяРасходов,
	|	БухучетНачислений.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ВЫБОР
	|		КОГДА БухучетНачислений.Сумма = 0
	|				ИЛИ БухучетНачисленийСвод.Сумма = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(БухучетНачислений.Сумма / БухучетНачисленийСвод.Сумма КАК ЧИСЛО(25, 10))
	|	КОНЕЦ КАК База
	|ПОМЕСТИТЬ ВТБухучетНачисленийБаза
	|ИЗ
	|	ВТБухучетНачислений КАК БухучетНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачисленийСвод КАК БухучетНачисленийСвод
	|		ПО БухучетНачислений.ДатаНачала = БухучетНачисленийСвод.ДатаНачала
	|			И БухучетНачислений.Сотрудник = БухучетНачисленийСвод.Сотрудник
	|			И БухучетНачислений.ФизическоеЛицо = БухучетНачисленийСвод.ФизическоеЛицо
	|			И БухучетНачислений.Подразделение = БухучетНачисленийСвод.Подразделение
	|			И БухучетНачислений.Начисление = БухучетНачисленийСвод.Начисление
	|			И БухучетНачислений.ОблагаетсяЕНВД = БухучетНачисленийСвод.ОблагаетсяЕНВД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник,
	|	ФизическоеЛицо,
	|	Подразделение,
	|	ДатаНачала,
	|	Начисление,
	|	ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносы.ИдентификаторСтроки,
	|	СтраховыеВзносы.Организация,
	|	СтраховыеВзносы.ПериодРегистрации,
	|	СтраховыеВзносы.ФизическоеЛицо,
	|	СтраховыеВзносы.Сотрудник,
	|	СтраховыеВзносы.Подразделение,
	|	СтраховыеВзносы.Начисление,
	|	СтраховыеВзносы.ВидОперации,
	|	СтраховыеВзносы.ДатаНачала,
	|	СтраховыеВзносы.Сумма,
	|	ЕСТЬNULL(БухучетНачислений.СпособОтраженияЗарплатыВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВБухУчете.ПустаяСсылка)) КАК СпособОтраженияЗарплатыВБухучете,
	|	ЕСТЬNULL(БухучетНачислений.СтатьяФинансирования, ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка)) КАК СтатьяФинансирования,
	|	ЕСТЬNULL(БухучетНачислений.СтатьяРасходов, ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка)) КАК СтатьяРасходов,
	|	ЕСТЬNULL(БухучетНачислений.База, СтраховыеВзносы.Сумма) КАК База,
	|	ЕСТЬNULL(БухучетНачислений.ПериодПринятияРасходов, СтраховыеВзносы.ПериодРегистрации) КАК ПериодПринятияРасходов,
	|	ЕСТЬNULL(БухучетНачислений.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)) КАК ВидОперацииНачисления,
	|	СтраховыеВзносы.ОблагаетсяЕНВД,
	|	ВЫБОР
	|		КОГДА БухучетНачислений.ВидОперации ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НетДанныхБухучета
	|ПОМЕСТИТЬ ВТТаблицаКоэффициентов
	|ИЗ
	|	ВТВзносы КАК СтраховыеВзносы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачисленийБаза КАК БухучетНачислений
	|		ПО СтраховыеВзносы.Сотрудник = БухучетНачислений.Сотрудник
	|			И СтраховыеВзносы.ФизическоеЛицо = БухучетНачислений.ФизическоеЛицо
	|			И СтраховыеВзносы.Подразделение = БухучетНачислений.Подразделение
	|			И СтраховыеВзносы.ОблагаетсяЕНВД = БухучетНачислений.ОблагаетсяЕНВД
	|			И СтраховыеВзносы.Начисление = БухучетНачислений.Начисление
	|			И СтраховыеВзносы.ДатаНачала = БухучетНачислений.ДатаНачала
	|			И (БухучетНачислений.База <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленийБаза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТБухучетНачисленийСвод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиБезБухучета.ИдентификаторСтроки,
	|	СтрокиБезБухучета.Организация,
	|	СтрокиБезБухучета.ПериодРегистрации,
	|	СтрокиБезБухучета.ФизическоеЛицо,
	|	СтрокиБезБухучета.Сотрудник,
	|	СтрокиБезБухучета.Подразделение,
	|	СтрокиБезБухучета.Начисление КАК НачислениеУдержание,
	|	СтрокиБезБухучета.ДатаНачала,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОснование,
	|	СтрокиБезБухучета.ОблагаетсяЕНВД,
	|	СтрокиБезБухучета.Сумма
	|ПОМЕСТИТЬ ВТВзносыБезБазы
	|ИЗ
	|	ВТТаблицаКоэффициентов КАК СтрокиБезБухучета
	|ГДЕ
	|	СтрокиБезБухучета.НетДанныхБухучета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВзносыБезБазы.ИдентификаторСтроки
	|ИЗ
	|	ВТВзносыБезБазы КАК ВзносыБезБазы";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		// Есть взносы без распределения.
		
		ОтражениеЗарплатыВУчете.СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтрокиБезБухучета.ИдентификаторСтроки,
		|	СтрокиБезБухучета.Организация,
		|	СтрокиБезБухучета.ПериодРегистрации,
		|	СтрокиБезБухучета.ФизическоеЛицо,
		|	СтрокиБезБухучета.Сотрудник КАК Сотрудник,
		|	СтрокиБезБухучета.Подразделение КАК Подразделение,
		|	ЕСТЬNULL(НачисленияВидОперации.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НачисленоДоход)) КАК ВидОперации,
		|	СтрокиБезБухучета.НачислениеУдержание КАК Начисление,
		|	ВЫБОР
		|		КОГДА СтрокиБезБухучета.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА СтрокиБезБухучета.ПериодРегистрации
		|		ИНАЧЕ СтрокиБезБухучета.ДатаНачала
		|	КОНЕЦ КАК ДатаНачала,
		|	СтрокиБезБухучета.Сумма,
		|	СтрокиБезБухучета.ОблагаетсяЕНВД,
		|	КОНЕЦПЕРИОДА(ВЫБОР
		|			КОГДА СтрокиБезБухучета.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА СтрокиБезБухучета.ПериодРегистрации
		|			ИНАЧЕ СтрокиБезБухучета.ДатаНачала
		|		КОНЕЦ, МЕСЯЦ) КАК ДатаОкончания
		|ИЗ
		|	ВТВзносыБезБазы КАК СтрокиБезБухучета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК НачисленияВидОперации
		|		ПО СтрокиБезБухучета.НачислениеУдержание = НачисленияВидОперации.НачислениеУдержание";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ТаблицаНачислений = ОтражениеЗарплатыВУчете.НоваяТаблицаНачислений();
		ТаблицаНачислений.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
		ТаблицаНачислений.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ТаблицаНачислений.Добавить(), Выборка);
		КонецЦикла;
		
		ЗапросБухучетНачислений = Новый Запрос;
		ЗапросБухучетНачислений.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ЗапросБухучетНачислений.УстановитьПараметр("ТаблицаНачислений", ТаблицаНачислений);
		ЗапросБухучетНачислений.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаНачислений.ИдентификаторСтроки,
		|	ТаблицаНачислений.Организация,
		|	ТаблицаНачислений.ПериодРегистрации,
		|	ТаблицаНачислений.ФизическоеЛицо,
		|	ТаблицаНачислений.Сотрудник,
		|	ТаблицаНачислений.Подразделение,
		|	ТаблицаНачислений.Подразделение КАК ТерриторияВыполненияРаботВОрганизации,
		|	ТаблицаНачислений.ВидОперации,
		|	ТаблицаНачислений.Начисление,
		|	ТаблицаНачислений.ДатаНачала,
		|	ТаблицаНачислений.ДатаОкончания,
		|	ТаблицаНачислений.ДокументОснование,
		|	ТаблицаНачислений.Сумма,
		|	ТаблицаНачислений.ОблагаетсяЕНВД
		|ПОМЕСТИТЬ ВТНачисленияДляРаспределения
		|ИЗ
		|	&ТаблицаНачислений КАК ТаблицаНачислений";
		ЗапросБухучетНачислений.Выполнить();
		
		ПроцентЕНВД = ?(Не ЗначениеЗаполнено(Организация), Неопределено, 
						ОтражениеЗарплатыВБухучете.ПроцентЕНВД(Организация, ПериодРегистрации));
		
		СоздатьВТБухучетНачислений(Организация, ПериодРегистрации, ПроцентЕНВД, ЗапросБухучетНачислений.МенеджерВременныхТаблиц);
		
		ЗапросБухучетНачислений.Текст = 
		"ВЫБРАТЬ
		|	БухучетНачислений.ПериодРегистрации,
		|	БухучетНачислений.ИдентификаторСтроки,
		|	БухучетНачислений.ПериодПринятияРасходов,
		|	БухучетНачислений.Организация,
		|	БухучетНачислений.Сотрудник,
		|	БухучетНачислений.ФизическоеЛицо,
		|	БухучетНачислений.Подразделение,
		|	БухучетНачислений.Начисление,
		|	БухучетНачислений.ВидОперации,
		|	БухучетНачислений.ДатаНачала,
		|	БухучетНачислений.ДатаОкончания,
		|	БухучетНачислений.ДокументОснование,
		|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
		|	БухучетНачислений.СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов,
		|	БухучетНачислений.Сумма,
		|	БухучетНачислений.ВидНачисленияОплатыТрудаДляНУ,
		|	БухучетНачислений.ОблагаетсяЕНВД
		|ИЗ
		|	ВТБухучетНачислений КАК БухучетНачислений";
		БухучетНачислений = ЗапросБухучетНачислений.Выполнить().Выгрузить();
		
		Запрос.УстановитьПараметр("БухучетНачислений", БухучетНачислений);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	БухучетНачислений.ПериодРегистрации,
		|	БухучетНачислений.ИдентификаторСтроки,
		|	БухучетНачислений.ПериодПринятияРасходов,
		|	БухучетНачислений.Организация,
		|	БухучетНачислений.Сотрудник,
		|	БухучетНачислений.ФизическоеЛицо,
		|	БухучетНачислений.Подразделение,
		|	БухучетНачислений.Начисление,
		|	БухучетНачислений.ВидОперации,
		|	БухучетНачислений.ДатаНачала,
		|	БухучетНачислений.ДатаОкончания,
		|	БухучетНачислений.ДокументОснование,
		|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
		|	БухучетНачислений.СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов,
		|	БухучетНачислений.Сумма,
		|	БухучетНачислений.ВидНачисленияОплатыТрудаДляНУ,
		|	БухучетНачислений.ОблагаетсяЕНВД
		|ПОМЕСТИТЬ ВТБухучетНачисленийБезБазы
		|ИЗ
		|	&БухучетНачислений КАК БухучетНачислений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БухучетНачислений.ИдентификаторСтроки,
		|	СУММА(БухучетНачислений.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТБухучетНачисленийСвод
		|ИЗ
		|	ВТБухучетНачисленийБезБазы КАК БухучетНачислений
		|
		|СГРУППИРОВАТЬ ПО
		|	БухучетНачислений.ИдентификаторСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БухучетНачислений.ИдентификаторСтроки,
		|	БухучетНачислений.ВидОперации,
		|	БухучетНачислений.СпособОтраженияЗарплатыВБухучете,
		|	БухучетНачислений.СтатьяФинансирования,
		|	БухучетНачислений.СтатьяРасходов,
		|	ВЫБОР
		|		КОГДА БухучетНачислений.Сумма = 0
		|				ИЛИ БухучетНачисленийСвод.Сумма = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(БухучетНачислений.Сумма / БухучетНачисленийСвод.Сумма КАК ЧИСЛО(25, 10))
		|	КОНЕЦ КАК База
		|ПОМЕСТИТЬ ВТБухучетНачисленийБаза
		|ИЗ
		|	ВТБухучетНачисленийБезБазы КАК БухучетНачислений
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачисленийСвод КАК БухучетНачисленийСвод
		|		ПО БухучетНачислений.ИдентификаторСтроки = БухучетНачисленийСвод.ИдентификаторСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаКоэффициентов.ИдентификаторСтроки,
		|	ЕСТЬNULL(БухучетНачисленийБаза.СпособОтраженияЗарплатыВБухучете, ТаблицаКоэффициентов.СпособОтраженияЗарплатыВБухучете) КАК СпособОтраженияЗарплатыВБухучете,
		|	ЕСТЬNULL(БухучетНачисленийБаза.СтатьяФинансирования, ТаблицаКоэффициентов.СтатьяФинансирования) КАК СтатьяФинансирования,
		|	ЕСТЬNULL(БухучетНачисленийБаза.СтатьяРасходов, ТаблицаКоэффициентов.СтатьяРасходов) КАК СтатьяРасходов,
		|	ЕСТЬNULL(БухучетНачисленийБаза.База, ТаблицаКоэффициентов.База) КАК База,
		|	ТаблицаКоэффициентов.Начисление,
		|	ТаблицаКоэффициентов.ПериодПринятияРасходов,
		|	ЕСТЬNULL(БухучетНачисленийБаза.ВидОперации, ТаблицаКоэффициентов.ВидОперацииНачисления) КАК ВидОперацииНачисления
		|ИЗ
		|	ВТТаблицаКоэффициентов КАК ТаблицаКоэффициентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачисленийБаза КАК БухучетНачисленийБаза
		|		ПО ТаблицаКоэффициентов.ИдентификаторСтроки = БухучетНачисленийБаза.ИдентификаторСтроки";
		ТаблицаКоэффициентов = Запрос.Выполнить().Выгрузить();
		
		Запрос.Текст = 
		"УНИЧТОЖИТЬ ВТБухучетНачисленийБезБазы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТБухучетНачисленийСвод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТБухучетНачисленийБаза";
		Запрос.Выполнить();
							
	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаКоэффициентов.ИдентификаторСтроки,
		|	ТаблицаКоэффициентов.СпособОтраженияЗарплатыВБухучете,
		|	ТаблицаКоэффициентов.СтатьяФинансирования,
		|	ТаблицаКоэффициентов.СтатьяРасходов,
		|	ТаблицаКоэффициентов.База,
		|	ТаблицаКоэффициентов.ПериодПринятияРасходов,
		|	ТаблицаКоэффициентов.Начисление,
		|	ТаблицаКоэффициентов.ВидОперацииНачисления
		|ИЗ
		|	ВТТаблицаКоэффициентов КАК ТаблицаКоэффициентов";
		ТаблицаКоэффициентов = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТВзносы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВзносыБезБазы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТаблицаКоэффициентов";
	Запрос.Выполнить();
	
	ТаблицаКоэффициентов.Индексы.Добавить("ИдентификаторСтроки");
	
	ОтражениеВУчетеСтраховыеВзносы = НоваяТаблицыОтражениеВУчетеСтраховыеВзносы();
	
	Отбор = Новый Структура("ИдентификаторСтроки");
	СвойстваЗаполненияПоВзносам = "ФизическоеЛицо,Сотрудник,Подразделение,ОблагаетсяЕНВД,ИдентификаторСтроки,ДатаНачала,ВидОперации";
	Для каждого СтрокаВзносов Из ТаблицаВзносов Цикл
		
		ИдентификаторСтроки = СтрокаВзносов.ИдентификаторСтроки;
		Отбор.ИдентификаторСтроки = ИдентификаторСтроки;
		СтрокиОтражения = ТаблицаКоэффициентов.НайтиСтроки(Отбор);
		Коэффициенты = ОбщегоНазначения.ВыгрузитьКолонку(СтрокиОтражения,"База");
		Результаты = ЗарплатаКадрыКлиентСервер.РаспределитьПропорциональноКоэффициентам(СтрокаВзносов.Сумма, Коэффициенты);
		
		Индекс = 0;
		Для Каждого СтрокаОтражения Из СтрокиОтражения Цикл
			
			СтрокаТаблицы = ОтражениеВУчетеСтраховыеВзносы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаОтражения);
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаВзносов,СвойстваЗаполненияПоВзносам);
			СтрокаТаблицы.Сумма = Результаты[Индекс];
			СтрокаТаблицы.ПериодПринятияРасходов = СтрокаОтражения.ПериодПринятияРасходов;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ОтражениеВУчетеСтраховыеВзносы", ОтражениеВУчетеСтраховыеВзносы);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеВзносыПоФизическимЛицам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтраховыеВзносыПоФизическимЛицам.Сотрудник КАК Сотрудник,
	|	СтраховыеВзносыПоФизическимЛицам.Подразделение КАК Подразделение,
	|	СтраховыеВзносыПоФизическимЛицам.Начисление КАК Начисление,
	|	СтраховыеВзносыПоФизическимЛицам.ВидОперации,
	|	СтраховыеВзносыПоФизическимЛицам.ВидОперацииНачисления,
	|	СтраховыеВзносыПоФизическимЛицам.ДатаНачала КАК ДатаНачала,
	|	СтраховыеВзносыПоФизическимЛицам.СтатьяФинансирования,
	|	СтраховыеВзносыПоФизическимЛицам.СтатьяРасходов,
	|	СтраховыеВзносыПоФизическимЛицам.СпособОтраженияЗарплатыВБухучете,
	|	СтраховыеВзносыПоФизическимЛицам.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	СтраховыеВзносыПоФизическимЛицам.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТОтражениеВУчетеСтраховыеВзносы
	|ИЗ
	|	&ОтражениеВУчетеСтраховыеВзносы КАК СтраховыеВзносыПоФизическимЛицам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтраховыеВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтраховыеВзносы.Сотрудник КАК Сотрудник,
	|	СтраховыеВзносы.Подразделение КАК Подразделение,
	|	СтраховыеВзносы.Начисление КАК Начисление,
	|	СтраховыеВзносы.ВидОперацииНачисления КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносы.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА &ПериодРегистрации
	|		ИНАЧЕ СтраховыеВзносы.ДатаНачала
	|	КОНЕЦ КАК ДатаНачала,
	|	СтраховыеВзносы.СтатьяФинансирования КАК СтатьяФинансирования,
	|	СтраховыеВзносы.СтатьяРасходов КАК СтатьяРасходов,
	|	СтраховыеВзносы.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	СтраховыеВзносы.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносы.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ СтраховыеВзносы.ДатаНачала < &ПериодРегистрации
	|			ТОГДА &ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(СтраховыеВзносы.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ КАК ПериодПринятияРасходов,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРСПревышения)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРСПревышения,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДоПредельнойВеличины)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРДоПредельнойВеличины,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРПоСуммарномуТарифу)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРПоСуммарномуТарифу,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРСтраховаяЧасть)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРСтраховая,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРНакопительнаяЧасть)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРНакопительная,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФСС)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФСС,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФФОМС)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ТФОМС)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ТФОМС,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФССНС)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФССНесчастныеСлучаи,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифЛЭ)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРНаДоплатуЛетчикам,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифШахтеры)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРНаДоплатуШахтерам,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахБезСпецОценки,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботахСпецОценка,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахБезСпецОценки,	
	// 4D:ERP для Беларуси, Яна, 04.09.2017 13:02:35 
	// Локализовать документ "Отражение зарплаты в финансовом учете", №15826 
	// {	
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФСЗН)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ФСЗН,	
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПенсионныйФонд)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПенсионныйФонд,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.Белгосстрах)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Белгосстрах,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПС)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПС,
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.СС)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СС,	
	// }
	// 4D	
	|	СУММА(ВЫБОР
	|			КОГДА СтраховыеВзносы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка)
	|				ТОГДА СтраховыеВзносы.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботахСпецОценка
	|ПОМЕСТИТЬ ВТБухучетСтраховыхВзносов
	|ИЗ
	|	ВТОтражениеВУчетеСтраховыеВзносы КАК СтраховыеВзносы
	|
	|СГРУППИРОВАТЬ ПО
	|	СтраховыеВзносы.Начисление,
	|	СтраховыеВзносы.Подразделение,
	|	СтраховыеВзносы.СтатьяФинансирования,
	|	СтраховыеВзносы.ФизическоеЛицо,
	|	СтраховыеВзносы.СпособОтраженияЗарплатыВБухучете,
	|	СтраховыеВзносы.ОблагаетсяЕНВД,
	|	СтраховыеВзносы.ДатаНачала,
	|	СтраховыеВзносы.Сотрудник,
	|	СтраховыеВзносы.СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА СтраховыеВзносы.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ СтраховыеВзносы.ДатаНачала < &ПериодРегистрации
	|			ТОГДА &ПериодРегистрации
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(СтраховыеВзносы.ДатаНачала, МЕСЯЦ)
	|	КОНЕЦ,
	|	СтраховыеВзносы.ВидОперацииНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОтражениеВУчетеСтраховыеВзносы";
	
	Запрос.Выполнить();

КонецПроцедуры

// Создает временную таблицу ВТНачислениеВидНачисленияОплатыТрудаДляНУ с полями.
//	Начисление -  тип ПланВидовРасчетаСсылка.Начисление,  ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний
//	ВидНачисленияОплатыТрудаДляНУ - тип ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний.
//
Процедура СоздатьВТНачислениеВидНачисленияОплатыТрудаДляНУ(МенеджерВременныхТаблиц) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Ссылка КАК Начисление,
	|	Начисления.ВидНачисленияДляНУ КАК ВидНачисленияОплатыТрудаДляНУ
	|ПОМЕСТИТЬ ВТНачислениеВидНачисленияОплатыТрудаДляНУ
	|ИЗ
	|	ПланВидовРасчета.Начисления КАК Начисления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыОсобыхНачисленийИУдержаний.Ссылка,
	|	ВЫБОР
	|		КОГДА ВидыОсобыхНачисленийИУдержаний.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДоговорАвторскогоЗаказа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.пп21ст255)
	|		КОГДА ВидыОсобыхНачисленийИУдержаний.Ссылка = ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ДоговорРаботыУслуги)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.пп21ст255)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыНачисленийОплатыТрудаДляНУ.ПустаяСсылка)
	|	КОНЕЦ
	|ИЗ
	|	Перечисление.ВидыОсобыхНачисленийИУдержаний КАК ВидыОсобыхНачисленийИУдержаний
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Начисление";
	Запрос.Выполнить();

КонецПроцедуры

#КонецОбласти

#Область ПолучениеДолиЕНВДСтраховыеВзносы

// Создает временную таблицу ВТНачисленияСДаннымиЕНВД 
//		Поля таблицы ВТНачисленияСДаннымиЕНВД
//			Сотрудник
//			Начисление
//			ДатаНачала
//			ДоляЕНВД, число от 0 до 1
//
// Параметры:
// 		Организация
//		МесяцНачисления
//		МенеджерВременныхТаблиц, содержит временные таблицы
//			ВТНачисления - начисления, которые дополняются долей ЕНВД
//			ВТНачисленияСРаспределением - таблица с результатами распределения начислений, может отсутствовать 
//		НачисленияПоСотрудникам - таблица значений с начислениями сотрудников
//
Процедура СоздатьВТНачисленияСДаннымиЕНВД(Организация, МесяцНачисления, МенеджерВременныхТаблиц, НачисленияПоСотрудникам) Экспорт

	ПлательщикЕНВД = ПлательщикЕНВД(Организация, МесяцНачисления);
	
	Если Не ПлательщикЕНВД Тогда
		// не используется ЕНВД, создадим таблицу с нулевой долей ЕНВД
		СоздатьВТНачисленияСДаннымиЕНВДНулеваяДоляЕНВД(МенеджерВременныхТаблиц);
		Возврат;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплата") И ЗарплатаКадры.ВТСуществует(МенеджерВременныхТаблиц, "ВТНачисленияСРаспределением") Тогда
		// Таблица ВТНачисленияСРаспределением содержит сведения о бухучете начислений.
		СоздатьВТНачисленияСДаннымиЕНВДПоТаблицеБухучетНачислений(МенеджерВременныхТаблиц, "ВТНачисленияСРаспределением", "ВТНачисления");
	Иначе
		
		// Таблица ВТНачисленияСРаспределением не содержит сведения о бухучете начислений,
		// получим отражение в бухучете начислений из таблицы НачисленияПоСотрудникам.
		ОтражениеЗарплатыВУчете.ДобавитьКолонкуИдентификаторСтроки(НачисленияПоСотрудникам);
		Если НачисленияПоСотрудникам.Колонки.Найти("ТерриторияВыполненияРаботВОрганизации") = Неопределено Тогда
			НачисленияПоСотрудникам.Колонки.Добавить("ТерриторияВыполненияРаботВОрганизации", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
		КонецЕсли;
		Если НачисленияПоСотрудникам.Колонки.Найти("ДокументОснование") = Неопределено Тогда
			НачисленияПоСотрудникам.Колонки.Добавить("ДокументОснование", Новый ОписаниеТипов(ОтражениеЗарплатыВУчетеВнутренний.ТипыПоляДокументОснование()));
		КонецЕсли;
		ОтражениеЗарплатыВУчете.СоздатьВТНачислениеУдержаниеВидОперации(МенеджерВременныхТаблиц);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("НачисленияПоСотрудникам", НачисленияПоСотрудникам);
		Запрос.УстановитьПараметр("ПериодРегистрации", МесяцНачисления);
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	&ПериодРегистрации КАК ПериодРегистрации,
		|	&Организация КАК Организация,
		|	НачисленияДляРаспределения.Сотрудник,
		|	НачисленияДляРаспределения.ФизическоеЛицо,
		|	НачисленияДляРаспределения.Подразделение,
		|	НачисленияДляРаспределения.Начисление,
		|	НачисленияДляРаспределения.ДатаНачала,
		|	НачисленияДляРаспределения.ДатаОкончания,
		|	НачисленияДляРаспределения.Сумма,
		|	НачисленияДляРаспределения.ДокументОснование,
		|	НачисленияДляРаспределения.ИдентификаторСтроки,
		|	НачисленияДляРаспределения.ТерриторияВыполненияРаботВОрганизации
		|ПОМЕСТИТЬ ВТНачисленияДляРаспределенияВременная
		|ИЗ
		|	&НачисленияПоСотрудникам КАК НачисленияДляРаспределения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Начисления.ПериодРегистрации,
		|	Начисления.Организация,
		|	Начисления.Сотрудник,
		|	Начисления.ФизическоеЛицо,
		|	Начисления.Подразделение,
		|	Начисления.Начисление,
		|	Начисления.ДатаНачала,
		|	Начисления.ДатаОкончания,
		|	Начисления.Сумма,
		|	Начисления.ДокументОснование,
		|	Начисления.ИдентификаторСтроки,
		|	Начисления.ТерриторияВыполненияРаботВОрганизации,
		|	ЕСТЬNULL(НачисленияВидОперации.ВидОперации, ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПустаяСсылка)) КАК ВидОперации
		|ПОМЕСТИТЬ ВТНачисленияДляРаспределения
		|ИЗ
		|	ВТНачисленияДляРаспределенияВременная КАК Начисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеУдержаниеВидОперации КАК НачисленияВидОперации
		|		ПО Начисления.Начисление = НачисленияВидОперации.НачислениеУдержание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТНачисленияДляРаспределенияВременная";
		Запрос.Выполнить();
		
		ПроцентЕНВД = ПроцентЕНВД(Организация, МесяцНачисления);
		СоздатьВТБухучетНачислений(Организация, МесяцНачисления, ПроцентЕНВД, МенеджерВременныхТаблиц);
		СоздатьВТНачисленияСДаннымиЕНВДПоТаблицеБухучетНачислений(МенеджерВременныхТаблиц, "ВТБухучетНачислений", "ВТНачисления");
		
		ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, "ВТБухучетНачислений");
		
	КонецЕсли;

КонецПроцедуры

// Создает временную таблицу ВТНачисленияСДаннымиЕНВД 
//		Поля таблицы ВТНачисленияСДаннымиЕНВД
//			Сотрудник
//			Начисление
//			ДатаНачала
//			ДоляЕНВД, число от 0 до 1
//
// Параметры:
// 		Организация
//		МесяцНачисления
//		МенеджерВременныхТаблиц, содержит временные таблицы
//			ВТНачисления - начисления, которые дополняются долей ЕНВД
//
Процедура СоздатьВТНачисленияСДаннымиЕНВДПоЕжемесячнойДоле(Организация, МесяцНачисления, МенеджерВременныхТаблиц) Экспорт
	
	ПлательщикЕНВД = ПлательщикЕНВД(Организация, МесяцНачисления);
	
	Если ПлательщикЕНВД Тогда
		
		ЕжемесячнаяДоляЕНВД = 0;
		ПроцентЕНВД = ПроцентЕНВД(Организация, МесяцНачисления);
		Если ПроцентЕНВД = 100 Тогда
			ЕжемесячнаяДоляЕНВД = 1;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Начисления.Сотрудник,
		|	Начисления.Подразделение,
		|	Начисления.ТерриторияВыполненияРаботВОрганизации,
		|	Начисления.ДатаНачала
		|ПОМЕСТИТЬ ВТНачисленияДляРаспределения
		|ИЗ
		|	ВТНачисления КАК Начисления";
		Запрос.Выполнить();
		
		СоздатьВТСведенияОБухучетеЗарплатыСотрудников(МенеджерВременныхТаблиц, "ВТНачисленияДляРаспределения", "Сотрудник,ДатаНачала", Организация);
		
		Запрос.УстановитьПараметр("ЕжемесячнаяДоляЕНВД", ЕжемесячнаяДоляЕНВД);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Начисления.Сотрудник,
		|	Начисления.Начисление,
		|	Начисления.Подразделение,
		|	Начисления.ДатаНачала,
		|	ВЫБОР
		|		КОГДА СведенияОБухучетеЗарплаты.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом)
		|			ТОГДА &ЕжемесячнаяДоляЕНВД
		|		КОГДА СведенияОБухучетеЗарплаты.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ЕНВД)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ДоляЕНВД
		|ПОМЕСТИТЬ ВТНачисленияСДаннымиЕНВД
		|ИЗ
		|	ВТНачисления КАК Начисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияОБухучетеЗарплатыСотрудников КАК СведенияОБухучетеЗарплаты
		|		ПО Начисления.Сотрудник = СведенияОБухучетеЗарплаты.Сотрудник
		|			И Начисления.Подразделение = СведенияОБухучетеЗарплаты.Подразделение
		|			И Начисления.ДатаНачала = СведенияОБухучетеЗарплаты.Период
		|			И (ЕСТЬNULL(Начисления.ТерриторияВыполненияРаботВОрганизации, ИСТИНА) = ЕСТЬNULL(СведенияОБухучетеЗарплаты.ТерриторияВыполненияРаботВОрганизации, ИСТИНА))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСведенияОБухучетеЗарплатыСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТНачисленияДляРаспределения";
		
		Запрос.Выполнить();
		
	Иначе
		
		СоздатьВТНачисленияСДаннымиЕНВДНулеваяДоляЕНВД(МенеджерВременныхТаблиц);
		
	КонецЕсли;

КонецПроцедуры

//МенеджерВременныхТаблиц - содержит временные таблицы
//			ВТБухучетНачисленийДляРегистрацииДоходовСтраховыхВзносов - с именем в свойстве ИмяВТБухучетНачислений
//			ВТНачисленияДляРегистрацииДоходовСтраховыхВзносов -  с именем в свойстве ИмяВТНачисления 
//
Процедура СоздатьВТНачисленияСДаннымиЕНВДПоТаблицеБухучетНачислений(МенеджерВременныхТаблиц, ИмяВТБухучетНачислений, ИмяВТНачисления) Экспорт

	УдалитьВТ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.Сотрудник КАК Сотрудник,
	|	СписокНачислений.ПодразделениеОрганизации КАК Подразделение,
	|	СписокНачислений.Начисление КАК Начисление,
	|	СписокНачислений.ДатаНачала КАК ДатаНачала
	|ПОМЕСТИТЬ ВТНачисленияИсходнаяТаблица
	|ИЗ
	|	ВТНачисленияДляРегистрацииДоходовСтраховыхВзносов КАК СписокНачислений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БухучетНачислений.Сотрудник КАК Сотрудник,
	|	БухучетНачислений.Подразделение КАК Подразделение,
	|	БухучетНачислений.Начисление КАК Начисление,
	|	БухучетНачислений.ДатаНачала КАК ДатаНачала,
	|	БухучетНачислений.ОблагаетсяЕНВД,
	|	СУММА(БухучетНачислений.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетНачисленийПоСотрудникам
	|ИЗ
	|	ВТБухучетНачисленийДляРегистрацииДоходовСтраховыхВзносов КАК БухучетНачислений
	|
	|СГРУППИРОВАТЬ ПО
	|	БухучетНачислений.Сотрудник,
	|	БухучетНачислений.Подразделение,
	|	БухучетНачислений.Начисление,
	|	БухучетНачислений.ДатаНачала,
	|	БухучетНачислений.ОблагаетсяЕНВД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.Подразделение КАК Подразделение,
	|	Начисления.Начисление КАК Начисление,
	|	Начисления.ДатаНачала КАК ДатаНачала,
	|	СУММА(Начисления.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТБухучетНачисленийПоСотрудникамСвод
	|ИЗ
	|	ВТБухучетНачисленийПоСотрудникам КАК Начисления
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.Подразделение,
	|	Начисления.Начисление,
	|	Начисления.Сотрудник,
	|	Начисления.ДатаНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияСвод.Сотрудник КАК Сотрудник,
	|	НачисленияСвод.Подразделение КАК Подразделение,
	|	НачисленияСвод.Начисление КАК Начисление,
	|	НачисленияСвод.ДатаНачала КАК ДатаНачала,
	|	ВЫБОР
	|		КОГДА Начисления.ОблагаетсяЕНВД ЕСТЬ NULL 
	|				ИЛИ НачисленияСвод.Сумма = 0
	|			ТОГДА 0
	|		КОГДА Начисления.Сумма = НачисленияСвод.Сумма
	|			ТОГДА 1
	|		ИНАЧЕ ВЫРАЗИТЬ(Начисления.Сумма / НачисленияСвод.Сумма КАК ЧИСЛО(25, 10))
	|	КОНЕЦ КАК ДоляЕНВД
	|ПОМЕСТИТЬ ВТНачисленияПоСотрудникамДоляЕНВД
	|ИЗ
	|	ВТБухучетНачисленийПоСотрудникамСвод КАК НачисленияСвод
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБухучетНачисленийПоСотрудникам КАК Начисления
	|		ПО НачисленияСвод.Сотрудник = Начисления.Сотрудник
	|			И НачисленияСвод.Подразделение = Начисления.Подразделение
	|			И НачисленияСвод.Начисление = Начисления.Начисление
	|			И НачисленияСвод.ДатаНачала = Начисления.ДатаНачала
	|			И (Начисления.ОблагаетсяЕНВД)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленияИсходная.Сотрудник,
	|	НачисленияИсходная.Подразделение,
	|	НачисленияИсходная.Начисление,
	|	НачисленияИсходная.ДатаНачала,
	|	ВЫБОР
	|		КОГДА НачисленияПоСотрудникамДоляЕНВД.ДоляЕНВД ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ НачисленияПоСотрудникамДоляЕНВД.ДоляЕНВД
	|	КОНЕЦ КАК ДоляЕНВД
	|ПОМЕСТИТЬ ВТНачисленияСДаннымиЕНВД
	|ИЗ
	|	ВТНачисленияИсходнаяТаблица КАК НачисленияИсходная
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияПоСотрудникамДоляЕНВД КАК НачисленияПоСотрудникамДоляЕНВД
	|		ПО НачисленияИсходная.Сотрудник = НачисленияПоСотрудникамДоляЕНВД.Сотрудник
	|			И НачисленияИсходная.Подразделение = НачисленияПоСотрудникамДоляЕНВД.Подразделение
	|			И НачисленияИсходная.Начисление = НачисленияПоСотрудникамДоляЕНВД.Начисление
	|			И НачисленияИсходная.ДатаНачала = НачисленияПоСотрудникамДоляЕНВД.ДатаНачала";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТБухучетНачисленийДляРегистрацииДоходовСтраховыхВзносов", ИмяВТБухучетНачислений);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияДляРегистрацииДоходовСтраховыхВзносов", ИмяВТНачисления);
	Запрос.Выполнить();
	
	УдалитьВТ.Добавить("ВТНачисленияИсходнаяТаблица");
	УдалитьВТ.Добавить("ВТБухучетНачисленийПоСотрудникам");
	УдалитьВТ.Добавить("ВТБухучетНачисленийПоСотрудникамСвод");
	УдалитьВТ.Добавить("ВТНачисленияПоСотрудникамДоляЕНВД");
	
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, УдалитьВТ);

КонецПроцедуры

Процедура СоздатьВТНачисленияСДаннымиЕНВДНулеваяДоляЕНВД(МенеджерВременныхТаблиц, ИмяВТНачисления = "ВТНачисления") Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.Сотрудник КАК Сотрудник,
	|	СписокНачислений.ПодразделениеОрганизации КАК Подразделение,
	|	СписокНачислений.Начисление КАК Начисление,
	|	СписокНачислений.ДатаНачала КАК ДатаНачала,
	|	0 КАК ДоляЕНВД
	|ПОМЕСТИТЬ ВТНачисленияСДаннымиЕНВД
	|ИЗ
	|	ВТНачисленияИсходнаяТаблица КАК СписокНачислений";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТНачисленияИсходнаяТаблица", ИмяВТНачисления);
	Запрос.Выполнить();

КонецПроцедуры

Процедура ПроверитьНеобходимостьРегистрацииПроцентаЕНВДНаТекущийМесяцВызватьИсключение(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы) Экспорт

	ОтражениеЗарплатыВБухучете.СоздатьВТСведенияОБухучетеНачисленийСотрудников(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ИменаПолейВременнойТаблицы, Организация);	

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СведенияОБухучете.ОтношениеКЕНВД
	|ИЗ
	|	ВТСведенияОБухучетеНачисленийСотрудников КАК СведенияОБухучете
	|ГДЕ
	|	СведенияОБухучете.ОтношениеКЕНВД = ЗНАЧЕНИЕ(Перечисление.ОтношениеКЕНВДЗатратНаЗарплату.ОпределяетсяЕжемесячноПроцентом)";
	
	Результат = Запрос.Выполнить();
	
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТСведенияОБухучетеНачисленийСотрудников";
	Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		// На текущий месяц не задан процент ЕНВД и есть объекты учета, 
		// для которых доля ЕНВД определяется процентом,
		// вызываем исключение и сообщаем о проблеме.
		
		ТекстИсключения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Для организации ""%1"" не задан процент деятельности ЕНВД на %2 года.
		|Действие не выполнено.'"),
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "Наименование"), Формат(ПериодРегистрации, "ДФ='ММММ гггг'"));
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОписанияТаблицСтруктур

Функция НоваяСтруктураДанныеДляОтраженияЗарплатыВБухучете()

	ДанныеДляОтражения = Новый Структура;
	ДанныеДляОтражения.Вставить("НачисленнаяЗарплатаИВзносы", НоваяТаблицаБухучетНачисленнаяЗарплатаИВзносы());
	ДанныеДляОтражения.Вставить("НачисленныйНДФЛ", НоваяТаблицаБухучетНачисленныйНДФЛ());
	ДанныеДляОтражения.Вставить("УдержаннаяЗарплата", НоваяТаблицаБухучетУдержаннаяЗарплата());
	
	Возврат ДанныеДляОтражения;

КонецФункции 

Функция НоваяТаблицаБухучетНачисленнаяЗарплатаИВзносы(КолонкиСуммирования = Неопределено) Экспорт
	
	МассивТиповНачисления = Новый Массив;
	МассивТиповНачисления.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТиповНачисления.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьМассивТиповНачисления(МассивТиповНачисления);
	
	КолонкиСуммирования = Новый Массив;
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Начисление", Новый ОписаниеТипов(МассивТиповНачисления));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ВидНачисленияОплатыТрудаДляНУ", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыНачисленийОплатыТрудаДляНУ"));
	Таблица.Колонки.Добавить("ПериодПринятияРасходов", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	КолонкиСуммирования.Добавить("Сумма");
	
	Для каждого ИмяПоля Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносов.ОтражаемыеВУчетеВзносы(Истина)) Цикл
		Таблица.Колонки.Добавить(ИмяПоля, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
		КолонкиСуммирования.Добавить(ИмяПоля);
	КонецЦикла;
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаБухучетНачисленныйНДФЛ() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("КодПоОКАТО", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(11)));
	Таблица.Колонки.Добавить("КодПоОКТМО", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(11)));
	Таблица.Колонки.Добавить("КПП", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(9)));
	Таблица.Колонки.Добавить("КодНалоговогоОргана", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(4)));
	Таблица.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаБухучетУдержаннаяЗарплата() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицыОтражениеВУчетеСтраховыеВзносы() Экспорт
	
	МассивТиповНачисления = Новый Массив;
	МассивТиповНачисления.Добавить(Тип("ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний"));
	МассивТиповНачисления.Добавить(Тип("ПланВидовРасчетаСсылка.Начисления"));
	ОтражениеЗарплатыВУчетеВнутренний.ДополнитьМассивТиповНачисления(МассивТиповНачисления);
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("ВидОперацииНачисления", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("Начисление", Новый ОписаниеТипов(МассивТиповНачисления));
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("СправочникСсылка.СтатьиРасходовЗарплата"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ПериодПринятияРасходов", Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ИдентификаторСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 0)));
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	
	Возврат Таблица;
	
КонецФункции

Функция ОписаниеПараметровДляРасчетаОценочныхОбязательствОтпусков() Экспорт

	ПараметрыДляРасчета = Новый Структура;
	ПараметрыДляРасчета.Вставить("ОстаткиОтпусков", НоваяТаблицаОстаткиОтпусков());
	ПараметрыДляРасчета.Вставить("ФондОплатыТрудаИСтраховыеВзносы", НоваяТаблицаФондОплатыТрудаИСтраховыеВзносы());
	
	Возврат ПараметрыДляРасчета;

КонецФункции 

Функция НоваяТаблицаОстаткиОтпусков() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ОстатокОтпусков", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 2)));
	Таблица.Колонки.Добавить("ОтпускАвансом", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5, 2)));
	Таблица.Колонки.Добавить("СреднийЗаработок", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("МестоВСтруктуреПредприятия", Метаданные.ОпределяемыеТипы.МестоВСтруктуреПредприятия.Тип);
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	
	// вспомогательная колонка
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаФондОплатыТрудаИСтраховыеВзносы() Экспорт
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций"));
	Таблица.Колонки.Добавить("МестоВСтруктуреПредприятия", Метаданные.ОпределяемыеТипы.МестоВСтруктуреПредприятия.Тип);
	Таблица.Колонки.Добавить("СпособОтраженияЗарплатыВБухучете", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("ОблагаетсяЕНВД", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ФондОплатыТруда", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("СтраховыеВзносы", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ФССНесчастныеСлучаи", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	// вспомогательная колонка
	Таблица.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	
	Возврат Таблица;
	
КонецФункции

Функция НоваяТаблицаНачисленныеОтпуска() Экспорт

	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Таблица.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ВидОперации", Новый ОписаниеТипов("ПеречислениеСсылка.ВидыОперацийПоЗарплате"));
	Таблица.Колонки.Добавить("СтатьяФинансирования", Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата"));
	Таблица.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("СтраховыеВзносы", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Таблица.Колонки.Добавить("ФССНесчастныеСлучаи", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	
	Возврат Таблица;

КонецФункции

// 4D:ERP для Беларуси, Яна, 14.07.2017 18:00:13 
// Документ "Доход в натуральной форме" локализация, № 15377 
// {
Функция ДополнительныеПараметрыДляРаспределенияЕНВД() Экспорт

	Параметры = Новый Структура;
	Параметры.Вставить("ДокументОснование", Неопределено); 
	Параметры.Вставить("ПроверятьЕНВД", Ложь);
	Параметры.Вставить("НачисленияПоСотрудникамСРаспределениемПоСтатьям", Неопределено);
	Параметры.Вставить("МенеджерВременныхТаблиц", Неопределено);
	Параметры.Вставить("ПараметрыДляОтраженияВБухучете", ДополнительныеПараметрыДляОтраженияВБухучете());
	
	Возврат Параметры;

КонецФункции

Функция ДополнительныеПараметрыДляОтраженияВБухучете() Экспорт

	Параметры = Новый Структура;
	Параметры.Вставить("ДокументСсылка", Неопределено);
	Параметры.Вставить("БухучетПервичногоДокумента", ОтражениеЗарплатыВБухучетеРасширенный.НоваяТаблицаБухучетЗарплатыПервичныхДокументов());
	Параметры.Вставить("БухучетНачисленийИзФормы", ОтражениеЗарплатыВБухучетеРасширенный.НоваяТаблицаБухучетНачисленияУдержанияПоСотрудникам());
	Параметры.Вставить("КоэффициентыРаспределенияСреднегоЗаработка", ОтражениеЗарплатыВБухучетеРасширенный.НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработка());
	Параметры.Вставить("КоэффициентыРаспределенияСреднегоЗаработкаФСС", ОтражениеЗарплатыВБухучетеРасширенный.НоваяТаблицаКоэффициентыРаспределенияСреднегоЗаработкаФСС());
	
	Возврат Параметры;
	
КонецФункции

// }
// 4D

#КонецОбласти

#Область БлокПроцедурИФункцийДляРедактированияПроцентаЕнвдНаФормеДокумента

Процедура ОбъектПриЧтенииНаСервереПроцентЕНВД(Форма, Организация, МесяцНачисления, ДобавлятьЭлементыФормы = Истина, ДобавлятьРеквизитыФормы = Истина, ОтложенноеИзменение = Ложь) Экспорт

	ДополнитьФормуРеквизитыРедактированияЕНВД(Форма, ДобавлятьЭлементыФормы, ДобавлятьРеквизитыФормы, ОтложенноеИзменение);
	Если ДобавлятьЭлементыФормы Тогда
		ПолучитьФункциональнуюОпциюФормыПлательщикЕНВДЗарплатаКадры(Форма);
		ПрочитатьСведенияПроцентЕНВД(Форма, Организация, МесяцНачисления);
		УстановитьТекстПредупрежденияПроцентЕНВДСтрока(Форма);
		ОтражениеЗарплатыВБухучетеКлиентСервер.ОбновитьИнфонадписьПроцентЕНВД(Форма);
	КонецЕсли;

КонецПроцедуры

Процедура ОбъектПриСозданииНаСервереПроцентЕНВД(Форма, Организация, МесяцНачисления) Экспорт

	ДополнитьФормуРеквизитыРедактированияЕНВД(Форма);
	ПолучитьФункциональнуюОпциюФормыПлательщикЕНВДЗарплатаКадры(Форма);
	ПрочитатьСведенияПроцентЕНВД(Форма, Организация, МесяцНачисления);
	УстановитьТекстПредупрежденияПроцентЕНВДСтрока(Форма);
	ОтражениеЗарплатыВБухучетеКлиентСервер.ОбновитьИнфонадписьПроцентЕНВД(Форма);

КонецПроцедуры

Процедура ДополнитьФормуРеквизитыРедактированияЕНВД(Форма, ДобавлятьЭлементыФормы = Истина, ДобавлятьРеквизитыФормы = Истина, ОтложенноеИзменение = Ложь)
	
	Если ДобавлятьРеквизитыФормы Тогда
		
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ОрганизацияПлательщикЕНВДЗарплатаКадры", Новый ОписаниеТипов("Булево")));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПроцентЕНВД", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(8,5))));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПроцентЕНВДИнфоНадпись", Новый ОписаниеТипов("Строка")));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПроцентЕНВДСтрока", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(9))));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПроцентЕНВДСтрокаПрежнееЗначение", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(9))));
		
		МассивИменРеквизитовФормы = Новый Массив;
		ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(Форма, МассивИменРеквизитовФормы);
		ЗарплатаКадры.ИзменитьРеквизитыФормы(Форма, ДобавляемыеРеквизиты, МассивИменРеквизитовФормы,, НЕ ДобавлятьЭлементыФормы);
	
	КонецЕсли;
	
	Если ДобавлятьЭлементыФормы Тогда
		Если Форма.Элементы.Найти("ПроцентЕНВДСтрока") = Неопределено Тогда
			
			РедактированиеДоступно = Пользователи.РолиДоступны("ДобавлениеИзменениеБухгалтерскогоУчетаЗарплаты",,Ложь);
			
			ЭлементРодитель = Форма.Элементы.ГруппаЕНВД;
			ПолеВвода = Форма.Элементы.Вставить("ПроцентЕНВДСтрока", Тип("ПолеФормы"), ЭлементРодитель);
			ПолеВвода.ПутьКДанным = "ПроцентЕНВДСтрока";
			ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
			ПолеВвода.Заголовок = "% ЕНВД";
			ПолеВвода.Подсказка = НСтр("ru = 'Применяется к начислениям сотрудников, для которых указано отношение к ЕНВД: ""Определяется ежемесячно процентом""'");
			ПолеВвода.КнопкаВыбора = Истина;
			ПолеВвода.ЦветТекстаЗаголовка = ЦветаСтиля.ПоясняющийТекст;
			ПолеВвода.КартинкаКнопкиВыбора = БиблиотекаКартинок.Калькулятор;
			ПолеВвода.Ширина = 6;
			ПолеВвода.УстановитьДействие("НачалоВыбора", "Подключаемый_ПроцентЕНВДСтрокаНачалоВыбора");
			ПолеВвода.УстановитьДействие("ПриИзменении", "Подключаемый_ПроцентЕНВДСтрокаПриИзменении");
			ПолеВвода.ТолькоПросмотр = НЕ РедактированиеДоступно Или Форма.ТолькоПросмотр;
			
			ПолеНадпись = Форма.Элементы.Вставить("ПроцентЕНВДИнфоНадпись", Тип("ПолеФормы"), ЭлементРодитель);
			ПолеНадпись.ПутьКДанным = "ПроцентЕНВДИнфоНадпись";
			ПолеНадпись.Вид = ВидПоляФормы.ПолеНадписи;
			ПолеНадпись.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			ПолеНадпись.ЦветТекста = ЦветаСтиля.ПоясняющийОшибкуТекст;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьФункциональнуюОпциюФормыПлательщикЕНВДЗарплатаКадры(Форма)
	
	Форма.ОрганизацияПлательщикЕНВДЗарплатаКадры = Форма.ПолучитьФункциональнуюОпциюФормы("ПлательщикЕНВДЗарплатаКадры");
	Форма.Элементы.ГруппаЕНВД.Видимость = Форма.ОрганизацияПлательщикЕНВДЗарплатаКадры;

КонецПроцедуры

Процедура ПрочитатьСведенияПроцентЕНВД(Форма, Организация, МесяцНачисления)

	ТекущийПроцентЕНВД = ПроцентЕНВД(Организация, МесяцНачисления);
	Если ТекущийПроцентЕНВД = Неопределено Тогда
		Форма.ПроцентЕНВД = 0;
		Форма.ПроцентЕНВДСтрокаПрежнееЗначение = "";
		Форма.ПроцентЕНВДСтрока = "";
	Иначе
		Форма.ПроцентЕНВД = ТекущийПроцентЕНВД;
		Форма.ПроцентЕНВДСтрока = Формат(Форма.ПроцентЕНВД, "ЧЦ=8; ЧДЦ=5; ЧН=0");
		Форма.ПроцентЕНВДСтрокаПрежнееЗначение = Форма.ПроцентЕНВДСтрока;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьТекстПредупрежденияПроцентЕНВДСтрока(Форма)

	ТекстПредупреждения = Форма.ТекстПредупрежденияПриРедактированииПроцентаЕНВД();
	Форма.Элементы.ПроцентЕНВДСтрока.ПредупреждениеПриРедактировании = ТекстПредупреждения;

КонецПроцедуры

Процедура ОбработатьИзменениеОрганизацииПроцентЕНВД(Форма, Организация, МесяцНачисления) Экспорт
	
	ПолучитьФункциональнуюОпциюФормыПлательщикЕНВДЗарплатаКадры(Форма);
	ПрочитатьСведенияПроцентЕНВД(Форма, Организация, МесяцНачисления);
	
	// Установим текст предупреждения при редактировании.
	УстановитьТекстПредупрежденияПроцентЕНВДСтрока(Форма);
	ОтражениеЗарплатыВБухучетеКлиентСервер.ОбновитьИнфонадписьПроцентЕНВД(Форма);
	
КонецПроцедуры

Процедура ОбработатьИзменениеМесяцНачисленияПроцентЕНВД(Форма, Организация, МесяцНачисления) Экспорт
	
	ПолучитьФункциональнуюОпциюФормыПлательщикЕНВДЗарплатаКадры(Форма);
	ПрочитатьСведенияПроцентЕНВД(Форма, Организация, МесяцНачисления);
	
	// Установим текст предупреждения при редактировании.
	УстановитьТекстПредупрежденияПроцентЕНВДСтрока(Форма);
	ОтражениеЗарплатыВБухучетеКлиентСервер.ОбновитьИнфонадписьПроцентЕНВД(Форма);
	
КонецПроцедуры

Процедура ЗарегистрироватьПроцентЕНВДПослеРедактированияВФорме(Организация, Месяц, ПроцентЕНВД, ПроцентЕНВДСтрока) Экспорт

	Если ПустаяСтрока(ПроцентЕНВДСтрока) Тогда
		ПроцентЕНВДДляРегистрации = Неопределено;
	Иначе
		ПроцентЕНВДДляРегистрации = ПроцентЕНВД;
	КонецЕсли;
	ЗарегистрироватьПроцентЕНВД(Организация, Месяц, ПроцентЕНВДДляРегистрации);

КонецПроцедуры

#КонецОбласти

#Область БлокФункцийПервоначальногоЗаполненияИОбновленияИБ
//

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.4.6";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучете.ПереносМестаХраненияФО";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.10.4";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучете.ОбработатьДокументыОтражениеЗарплатыВБухучете";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.15.9";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучете.ОбновитьВидОперацииУдержаниеПоПрочимОперациямСРаботниками";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.18.17";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучете.ЗаполнитьВидОперацииПоЗарплатеВНачислениях";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.19.9";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучете.ЗаполнитьВидОперацииПоЗарплатеВНачисленияхДляНатуральныхДоходов";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.0.23.14";
	Обработчик.Процедура = "ОтражениеЗарплатыВБухучете.ОбновитьВидОперацииЕжегодныеОтпуска";
	
КонецПроцедуры

Процедура ПереносМестаХраненияФО() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтарыеНастройкиОрганизаций.Организация КАК Организация,
	|	СтарыеНастройкиОрганизаций.УдалитьФормироватьПроводкиВКонцеПериода КАК ФормироватьПроводкиВКонцеПериода
	|ИЗ
	|	РегистрСведений.НастройкиЗарплатаКадры КАК СтарыеНастройкиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтражениеВРегламентированномУчетеНастройкиОрганизаций КАК НовыеНастройкиОрганизаций
	|		ПО СтарыеНастройкиОрганизаций.Организация = НовыеНастройкиОрганизаций.Организация
	|ГДЕ
	|	НовыеНастройкиОрганизаций.ФормироватьПроводкиВКонцеПериода ЕСТЬ NULL 
	|	И СтарыеНастройкиОрганизаций.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Настройки = РегистрыСведений.ОтражениеВРегламентированномУчетеНастройкиОрганизаций.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Настройки, Выборка);
		Настройки.Записать();
		
	КонецЦикла;

КонецПроцедуры

Процедура ОбработатьДокументыОтражениеЗарплатыВБухучете() Экспорт
	
	ТекстЗапроса = ОтражениеЗарплатыВБухучетеВнутренний.ТекстЗапросаДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете();
	
	Если ПустаяСтрока(ТекстЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВидыОпераций = Новый Массив;
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифЛЭ);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифШахтеры);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРНакопительнаяЧасть);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРСтраховаяЧасть);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПФРПоСуммарномуТарифу);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ТФОМС);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ФФОМС);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ФССНС);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ФСС);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВидыОпераций", ВидыОпераций);
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.ФизическоеЛицо,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.ВидОперации КАК ВидОперации,
	|	ДанныеДокумента.СтатьяФинансирования КАК СтатьяФинансирования,
	|	ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	ДанныеДокумента.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|	ДанныеДокумента.ОблагаетсяЕНВД,
	|	МАКСИМУМ(ДанныеДокумента.ВидНачисленияОплатыТрудаДляНУ) КАК ВидНачисленияОплатыТрудаДляНУ,
	|	ДанныеДокумента.ПериодПринятияРасходов,
	|	СУММА(ДанныеДокумента.Сумма) КАК Сумма,
	|	СУММА(ДанныеДокумента.ПФРСтраховая) КАК ПФРСтраховая,
	|	СУММА(ДанныеДокумента.ПФРНакопительная) КАК ПФРНакопительная,
	|	СУММА(ДанныеДокумента.ФСС) КАК ФСС,
	|	СУММА(ДанныеДокумента.ФФОМС) КАК ФФОМС,
	|	СУММА(ДанныеДокумента.ТФОМС) КАК ТФОМС,
	|	СУММА(ДанныеДокумента.ПФРНаДоплатуЛетчикам) КАК ПФРНаДоплатуЛетчикам,
	|	СУММА(ДанныеДокумента.ПФРНаДоплатуШахтерам) КАК ПФРНаДоплатуШахтерам,
	|	СУММА(ДанныеДокумента.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах) КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|	СУММА(ДанныеДокумента.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах) КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|	СУММА(ДанныеДокумента.ФССНесчастныеСлучаи) КАК ФССНесчастныеСлучаи,
	|	СУММА(ДанныеДокумента.ПФРПоСуммарномуТарифу) КАК ПФРПоСуммарномуТарифу
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка,
	|		ДанныеДокумента.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ДанныеДокумента.Подразделение КАК Подразделение,
	|		ДанныеДокумента.ВидОперации КАК ВидОперации,
	|		ДанныеДокумента.СтатьяФинансирования КАК СтатьяФинансирования,
	|		ДанныеДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|		ДанныеДокумента.СпособОтраженияЗарплатыВБухучете КАК СпособОтраженияЗарплатыВБухучете,
	|		ДанныеДокумента.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД,
	|		ДанныеДокумента.ВидНачисленияОплатыТрудаДляНУ КАК ВидНачисленияОплатыТрудаДляНУ,
	|		ДанныеДокумента.ПериодПринятияРасходов КАК ПериодПринятияРасходов,
	|		ДанныеДокумента.Сумма КАК Сумма,
	|		ДанныеДокумента.ПФРСтраховая КАК ПФРСтраховая,
	|		ДанныеДокумента.ПФРНакопительная КАК ПФРНакопительная,
	|		ДанныеДокумента.ФСС КАК ФСС,
	|		ДанныеДокумента.ФФОМС КАК ФФОМС,
	|		ДанныеДокумента.ТФОМС КАК ТФОМС,
	|		ДанныеДокумента.ПФРНаДоплатуЛетчикам КАК ПФРНаДоплатуЛетчикам,
	|		ДанныеДокумента.ПФРНаДоплатуШахтерам КАК ПФРНаДоплатуШахтерам,
	|		ДанныеДокумента.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах КАК ПФРЗаЗанятыхНаПодземныхИВредныхРаботах,
	|		ДанныеДокумента.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах КАК ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах,
	|		ДанныеДокумента.ФССНесчастныеСлучаи КАК ФССНесчастныеСлучаи,
	|		ДанныеДокумента.ПФРПоСуммарномуТарифу КАК ПФРПоСуммарномуТарифу
	|	ИЗ
	|		ВТДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете КАК ДанныеДокумента
	|	ГДЕ
	|		НЕ ДанныеДокумента.ВидОперации В (&ВидыОпераций)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка,
	|		ДанныеДокумента.ФизическоеЛицо,
	|		ДанныеДокумента.Подразделение,
	|		ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.НачисленоДоход),
	|		ДанныеДокумента.СтатьяФинансирования,
	|		ДанныеДокумента.СтатьяРасходов,
	|		ДанныеДокумента.СпособОтраженияЗарплатыВБухучете,
	|		ДанныеДокумента.ОблагаетсяЕНВД,
	|		ДанныеДокумента.ВидНачисленияОплатыТрудаДляНУ,
	|		ДанныеДокумента.ПериодПринятияРасходов,
	|		ДанныеДокумента.Сумма,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРСтраховаяЧасть)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРНакопительнаяЧасть)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФСС)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФФОМС)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ТФОМС)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ФССНС)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифЛЭ)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРДополнительныйТарифШахтеры)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоЗарплате.ПФРПоСуммарномуТарифу)
	|				ТОГДА ДанныеДокумента.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	ИЗ
	|		ВТДанныеДокументаОбработкаДокументовОтражениеЗарплатыВБухучете КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.ВидОперации В(&ВидыОпераций)) КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ДанныеДокумента.ФизическоеЛицо = ФизическиеЛица.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|		ПО ДанныеДокумента.Подразделение = ПодразделенияОрганизаций.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.ФизическоеЛицо,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.ВидОперации,
	|	ДанныеДокумента.СтатьяФинансирования,
	|	ДанныеДокумента.СтатьяРасходов,
	|	ДанныеДокумента.СпособОтраженияЗарплатыВБухучете,
	|	ДанныеДокумента.ОблагаетсяЕНВД,
	|	ДанныеДокумента.ПериодПринятияРасходов,
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ФизическиеЛица.Наименование,
	|	ПодразделенияОрганизаций.Наименование,
	|	ВидОперации,
	|	СтатьяФинансирования,
	|	СтатьяРасходов,
	|	СпособОтраженияЗарплатыВБухучете
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Ссылка = Выборка.Ссылка;
		ДокументОбъект = Ссылка.ПолучитьОбъект();
		ДокументОбъект.НачисленнаяЗарплатаИВзносы.Очистить();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ДокументОбъект.НачисленнаяЗарплатаИВзносы.Добавить(), Выборка);
		КонецЦикла;
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьВидОперацииУдержаниеПоПрочимОперациямСРаботниками() Экспорт
	
	ОтражениеЗарплатыВБухучетеВнутренний.ОбновитьВидОперацииУдержаниеПоПрочимОперациямСРаботниками();
	
КонецПроцедуры

Процедура ЗаполнитьВидОперацииПоЗарплатеВНачислениях() Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.ЗаполнитьВидОперацииПоЗарплатеВНачислениях();	

КонецПроцедуры

Процедура ЗаполнитьВидОперацииПоЗарплатеВНачисленияхДляНатуральныхДоходов() Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.ЗаполнитьВидОперацииПоЗарплатеВНачисленияхДляНатуральныхДоходов();	

КонецПроцедуры

Процедура ОбновитьВидОперацииЕжегодныеОтпуска() Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.ОбновитьВидОперацииЕжегодныеОтпуска();

КонецПроцедуры


#КонецОбласти

#Область Прочие

Процедура УстановитьСписокВыбораОтношениеКЕНВД(ЭлементФормы, ИмяЭлемента) Экспорт

	ОтражениеЗарплатыВБухучетеВнутренний.УстановитьСписокВыбораОтношениеКЕНВД(ЭлементФормы, ИмяЭлемента);

КонецПроцедуры

Процедура ЗаполнитьРегистрациюВНалоговомОрганеВКоллекцииСтрок(Организация, Период, КоллекцияНачисленныйНДФЛ) Экспорт
	
	ГоловнаяОрганизация = ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	УчетНДФЛ.СоздатьВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП(ГоловнаяОрганизация, МенеджерВременныхТаблиц);
	
	ЮридическоеФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ГоловнаяОрганизация,"ЮридическоеФизическоеЛицо");
	ОрганизацияЮрлицо = ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ОрганизацияЮрлицо", ОрганизацияЮрлицо);
	Запрос.УстановитьПараметр("ИспользоватьКодПоОКАТО", Период < УчетНДФЛ.ДатаПереходаНаКодыОКТМО());
	
	Если ТипЗнч(КоллекцияНачисленныйНДФЛ) = Тип("ДанныеФормыКоллекция") Тогда
		Запрос.УстановитьПараметр("НачисленныйНДФЛ", КоллекцияНачисленныйНДФЛ.Выгрузить());
	Иначе
		// передана таблица значений
		
		Если КоллекцияНачисленныйНДФЛ.Колонки.Найти("НомерСтроки") = Неопределено Тогда
			КоллекцияНачисленныйНДФЛ.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
			НомерСтроки = 1;
			Для каждого СтрокаТЗ Из КоллекцияНачисленныйНДФЛ Цикл
				СтрокаТЗ.НомерСтроки = НомерСтроки;
				НомерСтроки = НомерСтроки +1;
			КонецЦикла;
		КонецЕсли;
		
		Если КоллекцияНачисленныйНДФЛ.Колонки.Найти("РегистрацияВНалоговомОргане") = Неопределено Тогда
			КоллекцияНачисленныйНДФЛ.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
		КонецЕсли;
		
		Запрос.УстановитьПараметр("НачисленныйНДФЛ", КоллекцияНачисленныйНДФЛ);
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&ОрганизацияЮрлицо КАК ОрганизацияЮрлицо,
	|	НачисленныйНДФЛ.НомерСтроки,
	|	НачисленныйНДФЛ.КодПоОКАТО,
	|	НачисленныйНДФЛ.КодПоОКТМО,
	|	НачисленныйНДФЛ.КПП,
	|	НачисленныйНДФЛ.КодНалоговогоОргана
	|ПОМЕСТИТЬ ВТНачисленныйНДФЛ
	|ИЗ
	|	&НачисленныйНДФЛ КАК НачисленныйНДФЛ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачисленныйНДФЛ.НомерСтроки,
	|	РегистрацииВНалоговомОргане.РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТНачисленныйНДФЛ КАК НачисленныйНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистрацииВНалоговомОрганеОрганизацииОКАТОКПП КАК РегистрацииВНалоговомОргане
	|		ПО (ВЫБОР
	|				КОГДА НачисленныйНДФЛ.ОрганизацияЮрлицо
	|					ТОГДА НачисленныйНДФЛ.КПП = РегистрацииВНалоговомОргане.КПП
	|				ИНАЧЕ НачисленныйНДФЛ.КодНалоговогоОргана = РегистрацииВНалоговомОргане.КодНалоговогоОргана
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА &ИспользоватьКодПоОКАТО
	|					ТОГДА НачисленныйНДФЛ.КодПоОКАТО = РегистрацииВНалоговомОргане.КодПоОКАТО
	|				ИНАЧЕ НачисленныйНДФЛ.КодПоОКТМО = РегистрацииВНалоговомОргане.КодПоОКТМО
	|			КОНЕЦ)
	|ГДЕ
	|	НЕ РегистрацииВНалоговомОргане.КПП ЕСТЬ NULL ";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		КоллекцияНачисленныйНДФЛ[Выборка.НомерСтроки - 1].РегистрацияВНалоговомОргане = Выборка.РегистрацияВНалоговомОргане;
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьВидимостьКолонокКодовТерриторийДокументОтражениеВУчете(Форма, Месяц, ИмяТаблицыНДФЛ = "НачисленныйНДФЛ") Экспорт

	ДатаПереходаНаКодыОКТМО = УчетНДФЛ.ДатаПереходаНаКодыОКТМО();
	
	ВидимостьКолонок = Новый Соответствие;
	ВидимостьКолонок.Вставить("КодПоОКАТО", Месяц < ДатаПереходаНаКодыОКТМО);
	ВидимостьКолонок.Вставить("КодПоОКТМО",Месяц >= ДобавитьМесяц(ДатаПереходаНаКодыОКТМО, -12));
	
	Для Каждого КлючИЗначение Из ВидимостьКолонок Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы, ИмяТаблицыНДФЛ + КлючИЗначение.Ключ, "Видимость", КлючИЗначение.Значение);
	КонецЦикла;

КонецПроцедуры

Процедура УстановитьВидимостьКолонокКППКодНалоговогоОргана(Форма, Организация, ИмяТаблицы = "НачисленныйНДФЛ") Экспорт

	ЮридическоеФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация,"ЮридическоеФизическоеЛицо");
	ОрганизацияЮрлицо = ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
	
	ВидимостьКолонок = Новый Соответствие;
	ВидимостьКолонок.Вставить("КПП", ОрганизацияЮрлицо);
	ВидимостьКолонок.Вставить("КодНалоговогоОргана",Не ОрганизацияЮрлицо);
	
	Для Каждого КлючИЗначение Из ВидимостьКолонок Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы, ИмяТаблицы + КлючИЗначение.Ключ, "Видимость", КлючИЗначение.Значение);
	КонецЦикла;

КонецПроцедуры

Процедура УстановитьУсловноеОформлениеДокументОтражениеВУчете(Форма) Экспорт
	
	// Таблица НачисленныйНДФЛ, поля ОКАТО, КПП.
	ЭлементОформления = Форма.УсловноеОформление.Элементы.Добавить();
	// Вид оформления
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	// Условие для оформления
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НачисленныйНДФЛ.РегистрацияВНалоговомОргане");
	// Оформляемое поле
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("НачисленныйНДФЛКодПоОКАТО");
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("НачисленныйНДФЛКодПоОКТМО");
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("НачисленныйНДФЛКПП");
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("НачисленныйНДФЛКодНалоговогоОргана");
	
	// Таблица Удержания, поле Контрагент.
	СписокУдержаний = Новый СписокЗначений;
	СписокУдержаний.ЗагрузитьЗначения(ВидыОперацийУдержанийТребующиеВВодаКонтрагента());
	
	ЭлементОформления = Форма.УсловноеОформление.Элементы.Добавить();
	// Вид УдержаннаяЗарплата
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	// Условие для оформления
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеВСписке;
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.УдержаннаяЗарплата.ВидОперации");
	ЭлементОтбора.ПравоеЗначение = СписокУдержаний;
	// Оформляемое поле
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("УдержаннаяЗарплатаКонтрагент");
	
	// Таблица НачисленнаяЗарплатаИВзносы, поле НачисленнаяЗарплатаИВзносыСпособОтраженияЗарплатыВБухучете.
	СписокНачислений = Новый СписокЗначений;
	СписокНачислений.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФСС); 
	СписокНачислений.Добавить(Перечисления.ВидыОперацийПоЗарплате.РасходыПоСтрахованиюФССНС);
	СписокНачислений.Добавить(Перечисления.ВидыОперацийПоЗарплате.КомпенсацияЗаЗадержкуЗарплаты);
	СписокНачислений.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПособиеНаПогребение);
	
	ЭлементОформления = Форма.УсловноеОформление.Элементы.Добавить();
	// Вид оформления
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	// Условие для оформления
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.НачисленнаяЗарплатаИВзносы.ВидОперации");
	ЭлементОтбора.ПравоеЗначение = СписокНачислений;
	// Оформляемое поле
	ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("НачисленнаяЗарплатаИВзносыСпособОтраженияЗарплатыВБухучете");
	
КонецПроцедуры

Функция ВидыОперацийУдержанийТребующиеВВодаКонтрагента() Экспорт

	ВидыОпераций = Новый Массив;
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.АлиментыПрочиеИсполнительныеЛисты); 
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ВознаграждениеПлатежногоАгента);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.Профвзносы);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ДобровольныеВзносыВНПФ);
	ВидыОпераций.Добавить(Перечисления.ВидыОперацийПоЗарплате.ПрочиеУдержания);
	
	Возврат ВидыОпераций;

КонецФункции

#КонецОбласти


#КонецОбласти
