#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//++ НЕ УТ
#Область ПрограммныйИнтерфейс
//++ НЕ УТКА

// Определяет источники уточнения счета, доступные в регистре и их свойства.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ИсточникиУточненияСчета()
//
// Параметры:
//  СвойстваИсточника - Строка - "ИмяПоля" - имя атрибута регистра накопления, из которого планируется получать источник уточнения счета.
//
// Возвращаемое значение:
//  Соответствие - Ключ - название источника уточнения счета. 
//                 Значение - структура свойств источника уточнения счета.
//
Функция ИсточникиУточненияСчета(СвойстваИсточника) Экспорт
	
	ИсточникиУточненияСчета = Новый Соответствие;
	
	ИсточникиУточненияСчета.Вставить(Перечисления.ТипыИсточниковУточненияСчета.ГруппаФинансовогоУчетаРасчетов,
		Новый Структура(СвойстваИсточника, "ГФУРасчетов"));
		
	Возврат ИсточникиУточненияСчета;
	
КонецФункции

// Определяет источники подразделений регистра и их свойства.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ИсточникиПодразделений()
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя источника. 
//                 Значение - структура свойств источника. 
//
Функция ИсточникиПодразделений() Экспорт

	ИсточникиПодразделений = Новый Соответствие;
	
	ИсточникиПодразделений.Вставить(Перечисления.ИсточникиПодразделенийАналитическихРегистров.Заказ, "Подразделение");

	Возврат ИсточникиПодразделений;

КонецФункции

// Определяет источники направлений регистра и их свойства.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ИсточникиНаправлений()
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя источника. 
//                 Значение - структура свойств источника. 
//
Функция ИсточникиНаправлений() Экспорт

	Результат = Новый Соответствие;
	
	ИсточникиНаправлений = Перечисления.ИсточникиНаправленийДеятельностиАналитическихРегистров;
	Результат.Вставить(ИсточникиНаправлений.НаправлениеДеятельностиКонтрагента, "НаправлениеДеятельностиКонтрагента");

	Возврат Результат;

КонецФункции

// Определяет источники заполнения субконто.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ИсточникиСубконто()
//
// Возвращаемое значение:
//  Массив - массив атрибутов регистра.
//
Функция ИсточникиСубконто() Экспорт

	МассивСубконто = Новый Массив;
	МассивСубконто.Добавить("Партнер");
	МассивСубконто.Добавить("Контрагент");
	МассивСубконто.Добавить("Заказ");
	МассивСубконто.Добавить("Договор");

	Возврат Новый Структура("СубконтоДт, СубконтоКт", МассивСубконто, МассивСубконто);

КонецФункции

// Определяет показатели в валюте регистра.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ПоказателиВВалюте()
//
// Параметры:
//  СвойстваПоказателей - Строка - "ИсточникВалюты" - источник валюты для показателя регистра.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция ПоказателиВВалюте(СвойстваПоказателей) Экспорт

	ПоказателиВВалюте = Новый Соответствие;
	
	ПоказателиВВалюте.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаВВалютеВзаиморасчетов, Новый Структура(СвойстваПоказателей, "Валюта"));
	
	Возврат ПоказателиВВалюте;

КонецФункции
//-- НЕ УТКА

// Определяет показатели регистра.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.Показатели()
//
// Параметры:
//  Свойства - Структура - содержащая ключи СвойстваПоказателей, СвойстваРесурсов
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция Показатели(Свойства) Экспорт

	Показатели = Новый Соответствие;
	
	СвойстваПоказателей = Свойства.СвойстваПоказателей;
	СвойстваРесурсов = Свойства.СвойстваРесурсов;
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "ПредоплатаУпр", "ВалютаУпр"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "ПредоплатаРегл", "ВалютаРегл"));
    МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "Предоплата", "Валюта"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.Сумма, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	Возврат Показатели;
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область ОбновлениеИнформационнойБазы

// Регистрирует данные для обработчика обновления
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.РасчетыСПоставщикамиПоДокументам";
	
	#Область ТекстЗапроса
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасчетыСПоставщиками.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ОтраженныеДокументы
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщиками
	|ГДЕ
	|	(РасчетыСПоставщиками.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|		ИЛИ РасчетыСПоставщиками.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровПоставщикуРасшифровкаПлатежа.Ссылка КАК Регистратор,
	|	СУММА(ВозвратТоваровПоставщикуРасшифровкаПлатежа.Сумма) КАК СуммаКРаспределению
	|ПОМЕСТИТЬ ВозвратыТоваровПоставщику
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.РасшифровкаПлатежа КАК ВозвратТоваровПоставщикуРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтраженныеДокументы КАК РасчетыСПоставщиками
	|		ПО РасчетыСПоставщиками.Регистратор = ВозвратТоваровПоставщикуРасшифровкаПлатежа.Ссылка
	|	
	|ГДЕ
	|	НЕ ВозвратТоваровПоставщикуРасшифровкаПлатежа.Заказ В (Неопределено,Значение(Документ.ВозвратТоваровПоставщику.ПустаяСсылка))
	|	И ВозвратТоваровПоставщикуРасшифровкаПлатежа.Ссылка.Проведен
	|	И НЕ РасчетыСПоставщиками.Регистратор ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровПоставщикуРасшифровкаПлатежа.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Сумма) КАК СуммаКРаспределению,
	|	ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка КАК Регистратор
	|ПОМЕСТИТЬ ВозвратыТоваровМеждуОрганизациями
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтраженныеДокументы КАК РасчетыСПоставщиками
	|		ПО РасчетыСПоставщиками.Регистратор = ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка
	|ГДЕ
	|	НЕ ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Заказ = ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка
	|	И ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(РасчетыСПоставщиками.Предоплата) КАК СуммаВзаиморасчетовРаспределенная,
	|	РасчетыСПоставщиками.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ РаспределенныеРасчеты
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщиками
	|ГДЕ
	|	РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И (РасчетыСПоставщиками.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|		ИЛИ РасчетыСПоставщиками.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями)
	|	И РасчетыСПоставщиками.ЗаказПоставщику = РасчетыСПоставщиками.Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПоставщиками.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыКОбработке.Регистратор КАК Регистратор
	|ИЗ (ВЫБРАТЬ
	|		ВозвратыТоваровПоставщику.Регистратор КАК Регистратор
	|	ИЗ
	|		ВозвратыТоваровПоставщику КАК ВозвратыТоваровПоставщику
	|			ЛЕВОЕ СОЕДИНЕНИЕ РаспределенныеРасчеты КАК РаспределенныеРасчеты
	|			ПО (ВозвратыТоваровПоставщику.Регистратор = РаспределенныеРасчеты.Регистратор)
	|				И (ВозвратыТоваровПоставщику.СуммаКРаспределению = РаспределенныеРасчеты.СуммаВзаиморасчетовРаспределенная)
	|	ГДЕ
	|		РаспределенныеРасчеты.Регистратор ЕСТЬ NULL
	|		И ВозвратыТоваровПоставщику.СуммаКРаспределению > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратыТоваровМеждуОрганизациями.Регистратор КАК Регистратор
	|	ИЗ
	|		ВозвратыТоваровМеждуОрганизациями КАК ВозвратыТоваровМеждуОрганизациями
	|			ЛЕВОЕ СОЕДИНЕНИЕ РаспределенныеРасчеты КАК РаспределенныеРасчеты
	|			ПО (ВозвратыТоваровМеждуОрганизациями.Регистратор = РаспределенныеРасчеты.Регистратор)
	|				И (ВозвратыТоваровМеждуОрганизациями.СуммаКРаспределению = РаспределенныеРасчеты.СуммаВзаиморасчетовРаспределенная)
	|	ГДЕ
	|		РаспределенныеРасчеты.Регистратор ЕСТЬ NULL
	|		И ВозвратыТоваровМеждуОрганизациями.СуммаКРаспределению > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Расчеты.Регистратор КАК Регистратор
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|	ГДЕ
	|		Расчеты.УдалитьСтатьяДвиженияДенежныхСредств <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|		И Расчеты.СтатьяДвиженияДенежныхСредств = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Расчеты.Регистратор КАК Регистратор
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|	ГДЕ
	|		ТИПЗНАЧЕНИЯ(Расчеты.Регистратор) = ТИП(Документ.ПереоценкаВалютныхСредств)
	|		И Расчеты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереоценкаРасчетовСПоставщиками)
	|) КАК ДокументыКОбработке
	|";
	#КонецОбласти
	
	Запрос = Новый Запрос(ТекстЗапроса);
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.Вставить("ЭтоДвижения", Истина);
	ДополнительныеПараметры.Вставить("ПолноеИмяРегистра", ПолноеИмяРегистра);
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы, ДополнительныеПараметры);
	РегистрыНакопления.ПрочиеАктивыПассивы.ЗарегистироватьКОбновлениюУправленческогоБаланса(Параметры, Регистраторы, ПолноеИмяРегистра);
	
КонецПроцедуры

// Обработчик обновления УТ 11.3.1
// Переносит статьи движения денежных средств
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.РасчетыСПоставщикамиПоДокументам";
	
	ТекстЗапроса = " 
	|ВЫБРАТЬ
	|	ВозвратТоваровПоставщикуРасшифровкаПлатежа.Ссылка КАК Регистратор,
	|	СУММА(ВозвратТоваровПоставщикуРасшифровкаПлатежа.Сумма) КАК СуммаКРаспределению
	|ПОМЕСТИТЬ ВозвратыТоваровПоставщику
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.РасшифровкаПлатежа КАК ВозвратТоваровПоставщикуРасшифровкаПлатежа
	|ГДЕ
	|	НЕ ВозвратТоваровПоставщикуРасшифровкаПлатежа.Заказ В (Неопределено,Значение(Документ.ВозвратТоваровПоставщику.ПустаяСсылка))
	|	И ВозвратТоваровПоставщикуРасшифровкаПлатежа.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровПоставщикуРасшифровкаПлатежа.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Сумма) КАК СуммаКРаспределению,
	|	ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка КАК Регистратор
	|ПОМЕСТИТЬ ВозвратыТоваровМеждуОрганизациями
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа
	|ГДЕ
	|	НЕ ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Заказ = ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка
	|	И ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(РасчетыСПоставщиками.Предоплата) КАК СуммаВзаиморасчетовРаспределенная,
	|	РасчетыСПоставщиками.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ РаспределенныеРасчеты
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщиками
	|ГДЕ
	|	РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И (РасчетыСПоставщиками.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|		ИЛИ РасчетыСПоставщиками.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями)
	|	И РасчетыСПоставщиками.ЗаказПоставщику = РасчетыСПоставщиками.Регистратор
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПоставщиками.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыКОбработке.Регистратор КАК Регистратор,
	|	ДокументыКОбработке.СуммаКРаспределению КАК СуммаКРаспределению
	|ПОМЕСТИТЬ ВТТребуютДопроведения
	|ИЗ (ВЫБРАТЬ
	|		ВозвратыТоваровПоставщику.Регистратор КАК Регистратор,
	|		ВозвратыТоваровПоставщику.СуммаКРаспределению КАК СуммаКРаспределению
	|	ИЗ
	|		ВозвратыТоваровПоставщику КАК ВозвратыТоваровПоставщику
	|			ЛЕВОЕ СОЕДИНЕНИЕ РаспределенныеРасчеты КАК РаспределенныеРасчеты
	|			ПО (ВозвратыТоваровПоставщику.Регистратор = РаспределенныеРасчеты.Регистратор)
	|				И (ВозвратыТоваровПоставщику.СуммаКРаспределению = РаспределенныеРасчеты.СуммаВзаиморасчетовРаспределенная)
	|	ГДЕ
	|		РаспределенныеРасчеты.Регистратор ЕСТЬ NULL
	|		И ВозвратыТоваровПоставщику.СуммаКРаспределению > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратыТоваровМеждуОрганизациями.Регистратор КАК Регистратор,
	|		ВозвратыТоваровМеждуОрганизациями.СуммаКРаспределению КАК СуммаКРаспределению
	|	ИЗ
	|		ВозвратыТоваровМеждуОрганизациями КАК ВозвратыТоваровМеждуОрганизациями
	|			ЛЕВОЕ СОЕДИНЕНИЕ РаспределенныеРасчеты КАК РаспределенныеРасчеты
	|			ПО (ВозвратыТоваровМеждуОрганизациями.Регистратор = РаспределенныеРасчеты.Регистратор)
	|				И (ВозвратыТоваровМеждуОрганизациями.СуммаКРаспределению = РаспределенныеРасчеты.СуммаВзаиморасчетовРаспределенная)
	|	ГДЕ
	|		РаспределенныеРасчеты.Регистратор ЕСТЬ NULL
	|		И ВозвратыТоваровМеждуОрганизациями.СуммаКРаспределению > 0
	|	) КАК ДокументыКОбработке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыДляОбработки.Регистратор                КАК Регистратор,
	|	ВЫБОР 
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).ВерсияДанных
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).ВерсияДанных
	|		ИНАЧЕ Неопределено
	|	КОНЕЦ КАК РегистраторВерсияДанных,
	|	ВЫБОР
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику 
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).Дата
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями 
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).Дата
	|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1) 
	|	КОНЕЦ КАК Дата,
	|	ВЫБОР
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику 
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).Валюта
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями 
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику 
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).Организация
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями 
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).Организация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику 
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).Контрагент
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|			ТОГДА 
	|				ВЫБОР 
	|					КОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).РасчетыЧерезОтдельногоКонтрагента
	|						ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).Контрагент
	|					ИНАЧЕ ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).ОрганизацияПолучатель
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).Партнер
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями 
	|			ТОГДА ВЫБОР 
	|					КОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).РасчетыЧерезОтдельногоКонтрагента
	|						ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).Партнер
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 
	|	КОНЕЦ КАК Партнер,
	|	ВЫБОР
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).Договор
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями 
	|			ТОГДА
	|				ВЫБОР 
	|					КОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).РасчетыЧерезОтдельногоКонтрагента
	|						ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).ДоговорПокупки
	|					ИНАЧЕ ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).Договор
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК Договор,
	|	ВЫБОР
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).НаправлениеДеятельности
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) 
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).СуммаДокумента
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).СуммаДокумента
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаДокумента
	|ПОМЕСТИТЬ ТаблицаСсылок
	|ИЗ
	|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСсылок.Дата          КАК Дата,
	|	&ВалютаУпр                  КАК Валюта,
	|	МАКСИМУМ(КурсыВалют.Период) КАК ДатаКурса
	|ПОМЕСТИТЬ ДатыКурсовУпр
	|ИЗ
	|	ТаблицаСсылок КАК ТаблицаСсылок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ТаблицаСсылок.Дата >= КурсыВалют.Период
	|ГДЕ 
	|	КурсыВалют.Валюта = &ВалютаУпр
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСсылок.Дата,
	|	ТаблицаСсылок.Валюта
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСсылок.Дата          КАК Дата,
	|	&ВалютаРегл                 КАК Валюта,
	|	МАКСИМУМ(КурсыВалют.Период) КАК ДатаКурса
	|ПОМЕСТИТЬ ДатыКурсовРегл
	|ИЗ
	|	ТаблицаСсылок КАК ТаблицаСсылок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ТаблицаСсылок.Дата >= КурсыВалют.Период
	|ГДЕ 
	|	КурсыВалют.Валюта = &ВалютаРегл
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСсылок.Дата,
	|	ТаблицаСсылок.Валюта
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСсылок.Дата          КАК Дата,
	|	ТаблицаСсылок.Валюта        КАК Валюта,
	|	МАКСИМУМ(КурсыВалют.Период) КАК ДатаКурса
	|ПОМЕСТИТЬ ДатыКурсовВалютДокументов
	|ИЗ
	|	ТаблицаСсылок КАК ТаблицаСсылок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ТаблицаСсылок.Валюта = КурсыВалют.Валюта
	|			И ТаблицаСсылок.Дата >= КурсыВалют.Период
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСсылок.Дата,
	|	ТаблицаСсылок.Валюта
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Дата                    КАК Дата,
	|	ДанныеДляОбработки.Регистратор             КАК Регистратор,
	|	ДанныеДляОбработки.РегистраторВерсияДанных КАК РегистраторВерсияДанных,
	|	ДанныеДляОбработки.Организация             КАК Организация,
	|	ДанныеДляОбработки.Партнер                 КАК Партнер,
	|	ДанныеДляОбработки.Контрагент              КАК Контрагент,
	|	ДанныеДляОбработки.Договор                 КАК Договор,
	|	ДанныеДляОбработки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДляОбработки.Валюта                  КАК Валюта,
	|	ДанныеДляОбработки.СуммаДокумента          КАК СуммаДокумента,
	|	ЕСТЬNULL(ТребуютДопроведения.СуммаКРаспределению,0) КАК СуммаКРаспределению,
	|	ВЫРАЗИТЬ((ДанныеДляОбработки.СуммаДокумента * КурсыВалютыДокумента.Курс * КурсыУпр.Кратность)
	|		/ (КурсыУпр.Курс * КурсыВалютыДокумента.Кратность) КАК ЧИСЛО(15,2)) КАК СуммаУпр,
	|	ВЫРАЗИТЬ((ДанныеДляОбработки.СуммаДокумента * КурсыВалютыДокумента.Курс * КурсыРегл.Кратность) 
	|		/ (КурсыРегл.Курс * КурсыВалютыДокумента.Кратность) КАК ЧИСЛО(15,2)) КАК СуммаРегл,
	|	КурсыВалютыДокумента.Кратность             КАК КратностьВалютыДокумента,
	|	КурсыВалютыДокумента.Курс                  КАК КурсВалютыДокумента,
	|	КурсыУпр.Кратность                         КАК КратностьУпр,
	|	КурсыУпр.Курс                              КАК КурсУпр,
	|	КурсыРегл.Кратность                        КАК КратностьРегл,
	|	КурсыРегл.Курс                             КАК КурсРегл,
	|	ВЫБОР 
	|		КОГДА НЕ ТребуютДопроведения.Регистратор ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                      КАК ТребуетДопроведения
	|ИЗ ТаблицаСсылок КАК ДанныеДляОбработки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДатыКурсовУпр КАК ДатыКурсовУпр
	|			ЛЕВОЕ СОЕДИНЕНИЕ  РегистрСведений.КурсыВалют КАК КурсыУпр
	|			ПО ДатыКурсовУпр.ДатаКурса = КурсыУпр.Период
	|				И ДатыКурсовУпр.Валюта = КурсыУпр.Валюта
	|		ПО ДанныеДляОбработки.Дата = ДатыКурсовУпр.Дата
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДатыКурсовРегл КАК ДатыКурсовРегл
	|			ЛЕВОЕ СОЕДИНЕНИЕ  РегистрСведений.КурсыВалют КАК КурсыРегл
	|			ПО ДатыКурсовРегл.ДатаКурса = КурсыРегл.Период
	|				И ДатыКурсовРегл.Валюта = КурсыРегл.Валюта
	|		ПО ДанныеДляОбработки.Дата = ДатыКурсовРегл.Дата
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДатыКурсовВалютДокументов КАК ДатыКурсовВалютДокументов
	|			ЛЕВОЕ СОЕДИНЕНИЕ  РегистрСведений.КурсыВалют КАК КурсыВалютыДокумента
	|			ПО ДатыКурсовВалютДокументов.ДатаКурса = КурсыВалютыДокумента.Период
	|				И ДатыКурсовВалютДокументов.Валюта = КурсыВалютыДокумента.Валюта
	|		ПО ДанныеДляОбработки.Валюта = ДатыКурсовВалютДокументов.Валюта
	|			И ДанныеДляОбработки.Дата = ДатыКурсовВалютДокументов.Дата
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТТребуютДопроведения КАК ТребуютДопроведения
	|		ПО ДанныеДляОбработки.Регистратор = ТребуютДопроведения.Регистратор";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(Параметры.Очередь, Неопределено, ПолноеИмяРегистра, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ВТОбъектыДляОбработки",Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ВалютаРегл",Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУпр",Константы.ВалютаУправленческогоУчета.Получить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЭтоФайловаяИБ = ОбщегоНазначения.ИнформационнаяБазаФайловая();
	
	КурсовыеРазницыПрибыль = Перечисления.ХозяйственныеОперации.КурсовыеРазницыПоставщикиПрибыль;
	КурсовыеРазницыУбыток = Перечисления.ХозяйственныеОперации.КурсовыеРазницыПоставщикиУбыток;
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Если НЕ ЭтоФайловаяИБ И (ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") 
				ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ВозвратТоваровПоставщику")) Тогда
				
				МетаданныеДокумента = Выборка.Регистратор.Метаданные();
				
				Попытка
			
					Блокировка = Новый БлокировкаДанных;
					ЭлементБлокировки = Блокировка.Добавить("Документ." + МетаданныеДокумента.Имя);
					ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Регистратор);
					ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
					Блокировка.Заблокировать();
					
				Исключение
					
					ОтменитьТранзакцию();
					ТекстСообщения = НСтр("ru = 'Не удалось заблокировать документ: %Ссылка% по причине: %Причина%'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Регистратор);
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
											УровеньЖурналаРегистрации.Предупреждение,
											МетаданныеДокумента,
											Выборка.Регистратор,
											ТекстСообщения);
					Продолжить;
					
				КонецПопытки;
				
				Если Выборка.РегистраторВерсияДанных <> Выборка.Регистратор.ВерсияДанных Тогда
					ОтменитьТранзакцию();
					Продолжить;
				КонецЕсли;
				
			КонецЕсли;
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
			Блокировка.Заблокировать();
			
			Набор = РегистрыНакопления.РасчетыСПоставщикамиПоДокументам.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Выборка.Регистратор);
			Набор.Прочитать();
			
			ЗаписьПриход = Неопределено;
			СуммаРаспределенная = 0;
			
			Для каждого Запись Из Набор Цикл
				Если ЗначениеЗаполнено(Запись.УдалитьСтатьяДвиженияДенежныхСредств) Тогда
					Запись.СтатьяДвиженияДенежныхСредств = Запись.УдалитьСтатьяДвиженияДенежныхСредств;
				КонецЕсли;
				Если Запись.ЗаказПоставщику = Выборка.Регистратор 
					И Запись.РасчетныйДокумент = Выборка.Регистратор Тогда
					Если Запись.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
						ЗаписьПриход = Запись;
					Иначе
						СуммаРаспределенная = СуммаРаспределенная + Запись.Предоплата;
					КонецЕсли;
				КонецЕсли;
				Если ТипЗнч(Запись.Регистратор) = Тип("ДокументСсылка.ПереоценкаВалютныхСредств") Тогда
					Если Запись.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
						Запись.ХозяйственнаяОперация = КурсовыеРазницыПрибыль;
					Иначе
						Запись.ХозяйственнаяОперация = КурсовыеРазницыУбыток;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Если Выборка.ТребуетДопроведения И Выборка.СуммаКРаспределению > СуммаРаспределенная Тогда
				
				СтруктураАналитики = Новый Структура();
				СтруктураАналитики.Вставить("Организация",             Выборка.Организация);
				СтруктураАналитики.Вставить("Партнер",                 Выборка.Партнер);
				СтруктураАналитики.Вставить("Контрагент",              Выборка.Контрагент);
				СтруктураАналитики.Вставить("Договор",                 Выборка.Договор);
				СтруктураАналитики.Вставить("НаправлениеДеятельности", Выборка.НаправлениеДеятельности);
				
				АналитикаВозврата = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураАналитики);
				
				ИмеющиесяЗаписи = Набор.Выгрузить();
				КоличествоЗаписей = Набор.Количество();
				
				Если ЗаписьПриход = Неопределено Тогда
					
					ЗаписьПриход = Набор.Вставить(0);
					ЗаполнитьЗначенияСвойств(ЗаписьПриход, Набор[1]);
					ЗаписьПриход.ВидДвижения               = ВидДвиженияНакопления.Приход;
					ЗаписьПриход.АналитикаУчетаПоПартнерам = АналитикаВозврата;
					ЗаписьПриход.ЗаказПоставщику           = Выборка.Регистратор;
					ЗаписьПриход.РасчетныйДокумент         = Выборка.Регистратор;
					ЗаписьПриход.Валюта                    = Выборка.Валюта;
					ЗаписьПриход.Предоплата                = Выборка.СуммаДокумента;
					ЗаписьПриход.ПредоплатаРегл            = Выборка.СуммаРегл;
					ЗаписьПриход.ПредоплатаУпр             = Выборка.СуммаУпр;
					ЗаписьПриход.Долг                      = 0;
					ЗаписьПриход.ДолгРегл                  = 0;
					ЗаписьПриход.ДолгУпр                   = 0;
					
					ЗаписьРасход = Набор.Вставить(1);
					ЗаполнитьЗначенияСвойств(ЗаписьРасход,ЗаписьПриход);
					ЗаписьРасход.ВидДвижения               = ВидДвиженияНакопления.Расход;
					
				Иначе
					
					ЗаписьРасход = Набор.Вставить(0);
					ЗаполнитьЗначенияСвойств(ЗаписьРасход,ЗаписьПриход);
					ЗаписьРасход.ВидДвижения               = ВидДвиженияНакопления.Расход;
					ЗаписьРасход.Предоплата                = Выборка.СуммаДокумента - ЗаписьПриход.Предоплата;
					ЗаписьРасход.ПредоплатаРегл            = Выборка.СуммаРегл - ЗаписьПриход.ПредоплатаРегл;
					ЗаписьРасход.ПредоплатаУпр             = Выборка.СуммаУпр - ЗаписьПриход.ПредоплатаУпр;
					
					Набор.Удалить(ЗаписьПриход);
					
					ЗаписьПриход = Набор.Вставить(0);
					ЗаполнитьЗначенияСвойств(ЗаписьПриход,ЗаписьРасход);
					ЗаписьПриход.ВидДвижения               = ВидДвиженияНакопления.Приход;
					ЗаписьПриход.Предоплата                = Выборка.СуммаДокумента;
					ЗаписьПриход.ПредоплатаРегл            = Выборка.СуммаРегл;
					ЗаписьПриход.ПредоплатаУпр             = Выборка.СуммаУпр;
					
				КонецЕсли;
				
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			
			ЗафиксироватьТранзакцию();
		
		Исключение
		
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обратать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Выборка.Регистратор.Метаданные(), Выборка.Регистратор, ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли