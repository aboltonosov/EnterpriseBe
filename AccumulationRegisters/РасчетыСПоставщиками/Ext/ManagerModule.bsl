#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Регистрирует данные для обработчика обновления
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВозвратТоваровПоставщикуРасшифровкаПлатежа.Ссылка КАК Регистратор,
	|	СУММА(ВозвратТоваровПоставщикуРасшифровкаПлатежа.Сумма) КАК СуммаКРаспределению
	|ПОМЕСТИТЬ ВозвратыТоваровПоставщику
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.РасшифровкаПлатежа КАК ВозвратТоваровПоставщикуРасшифровкаПлатежа
	|ГДЕ
	|	НЕ ВозвратТоваровПоставщикуРасшифровкаПлатежа.Заказ В (Неопределено,Значение(Документ.ВозвратТоваровПоставщику.ПустаяСсылка))
	|	И ВозвратТоваровПоставщикуРасшифровкаПлатежа.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровПоставщикуРасшифровкаПлатежа.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Сумма) КАК СуммаКРаспределению,
	|	ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка КАК Регистратор
	|ПОМЕСТИТЬ ВозвратыТоваровМеждуОрганизациями
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа
	|ГДЕ
	|	НЕ ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Заказ = ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка
	|	И ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(РасчетыСПоставщиками.Сумма) КАК СуммаВзаиморасчетовРаспределенная,
	|	РасчетыСПоставщиками.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ РаспределенныеРасчеты
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПоставщиками
	|ГДЕ
	|	РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И (РасчетыСПоставщиками.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|		ИЛИ РасчетыСПоставщиками.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПоставщиками.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыКОбработке.Регистратор КАК Регистратор
	|ИЗ (ВЫБРАТЬ
	|		ВозвратыТоваровПоставщику.Регистратор КАК Регистратор
	|	ИЗ
	|		ВозвратыТоваровПоставщику КАК ВозвратыТоваровПоставщику
	|			ЛЕВОЕ СОЕДИНЕНИЕ РаспределенныеРасчеты КАК РаспределенныеРасчеты
	|			ПО (ВозвратыТоваровПоставщику.Регистратор = РаспределенныеРасчеты.Регистратор)
	|				И (ВозвратыТоваровПоставщику.СуммаКРаспределению = РаспределенныеРасчеты.СуммаВзаиморасчетовРаспределенная)
	|	ГДЕ
	|		РаспределенныеРасчеты.Регистратор ЕСТЬ NULL
	|		И ВозвратыТоваровПоставщику.СуммаКРаспределению > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратыТоваровМеждуОрганизациями.Регистратор КАК Регистратор
	|	ИЗ
	|		ВозвратыТоваровМеждуОрганизациями КАК ВозвратыТоваровМеждуОрганизациями
	|			ЛЕВОЕ СОЕДИНЕНИЕ РаспределенныеРасчеты КАК РаспределенныеРасчеты
	|			ПО (ВозвратыТоваровМеждуОрганизациями.Регистратор = РаспределенныеРасчеты.Регистратор)
	|				И (ВозвратыТоваровМеждуОрганизациями.СуммаКРаспределению = РаспределенныеРасчеты.СуммаВзаиморасчетовРаспределенная)
	|	ГДЕ
	|		РаспределенныеРасчеты.Регистратор ЕСТЬ NULL
	|		И ВозвратыТоваровМеждуОрганизациями.СуммаКРаспределению > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Расчеты.Регистратор КАК Регистратор
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщиками КАК Расчеты
	|	ГДЕ
	|		Расчеты.УдалитьСтатьяДвиженияДенежныхСредств <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|		И Расчеты.СтатьяДвиженияДенежныхСредств = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Расчеты.Регистратор КАК Ссылка
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщиками КАК Расчеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК Расшифровка
	|		ПО Расчеты.Регистратор = Расшифровка.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО Расчеты.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|	
	|	ГДЕ
	|		ЕСТЬNULL(Расшифровка.Заказ.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И ЕСТЬNULL(Расшифровка.Заказ.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) <> Аналитика.Организация
	|	) КАК ДокументыКОбработке
	//++ НЕ УТ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Расчеты.Регистратор
	|	
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК Расчеты
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетПереработчика КАК ОтчетПереработчика
	|	ПО Расчеты.Регистратор = ОтчетПереработчика.Ссылка
	|ГДЕ
	|	Расчеты.Период = ДАТАВРЕМЯ(1, 1, 1, 23, 59, 59)
	//-- НЕ УТ
	|");
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.Вставить("ЭтоДвижения", Истина);
	ДополнительныеПараметры.Вставить("ПолноеИмяРегистра", "РегистрНакопления.РасчетыСПоставщиками");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор"), ДополнительныеПараметры);
	
	ИмяРегистра       = "РасчетыСПоставщиками";
	ПолноеИмяРегистра = "РегистрНакопления." + ИмяРегистра;
	
	Регистраторы = Документы.ВзаимозачетЗадолженности.РегистраторыДляПерепроведенияПриОбновлении(ИмяРегистра);
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
КонецПроцедуры

// Обработчик обновления УТ 11.3.1
// Переносит статьи движения денежных средств,
// добавляет необходимые движения для документов "Возврат товаров поставщику" и "Возврат товаров между организациями".
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.РасчетыСПоставщиками";
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ВзаимозачетЗадолженности");
	Регистраторы.Добавить("Документ.ЗаявкаНаРасходованиеДенежныхСредств");
	//++ НЕ УТ
	Регистраторы.Добавить("Документ.ОтчетПереработчика");
	//-- НЕ УТ
	
	ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(Регистраторы, ПолноеИмяРегистра, Параметры.Очередь);
	
	ТекстЗапроса = " 
	|ВЫБРАТЬ
	|	ВозвратТоваровПоставщикуРасшифровкаПлатежа.Ссылка КАК Регистратор,
	|	СУММА(ВозвратТоваровПоставщикуРасшифровкаПлатежа.Сумма) КАК СуммаКРаспределению
	|ПОМЕСТИТЬ ВозвратыТоваровПоставщику
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.РасшифровкаПлатежа КАК ВозвратТоваровПоставщикуРасшифровкаПлатежа
	|ГДЕ
	|	НЕ ВозвратТоваровПоставщикуРасшифровкаПлатежа.Заказ В (Неопределено,Значение(Документ.ВозвратТоваровПоставщику.ПустаяСсылка))
	|	И ВозвратТоваровПоставщикуРасшифровкаПлатежа.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровПоставщикуРасшифровкаПлатежа.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Сумма) КАК СуммаКРаспределению,
	|	ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка КАК Регистратор
	|ПОМЕСТИТЬ ВозвратыТоваровМеждуОрганизациями
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа
	|ГДЕ
	|	НЕ ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Заказ = ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка
	|	И ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(РасчетыСПоставщиками.Сумма) КАК СуммаВзаиморасчетовРаспределенная,
	|	РасчетыСПоставщиками.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ РаспределенныеРасчеты
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПоставщиками
	|ГДЕ
	|	РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И (РасчетыСПоставщиками.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|		ИЛИ РасчетыСПоставщиками.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПоставщиками.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыКОбработке.Регистратор КАК Регистратор,
	|	ДокументыКОбработке.СуммаКРаспределению КАК СуммаКРаспределению
	|ПОМЕСТИТЬ ВТТребуютДопроведения
	|ИЗ (ВЫБРАТЬ
	|		ВозвратыТоваровПоставщику.Регистратор КАК Регистратор,
	|		ВозвратыТоваровПоставщику.СуммаКРаспределению КАК СуммаКРаспределению
	|	ИЗ
	|		ВозвратыТоваровПоставщику КАК ВозвратыТоваровПоставщику
	|			ЛЕВОЕ СОЕДИНЕНИЕ РаспределенныеРасчеты КАК РаспределенныеРасчеты
	|			ПО (ВозвратыТоваровПоставщику.Регистратор = РаспределенныеРасчеты.Регистратор)
	|				И (ВозвратыТоваровПоставщику.СуммаКРаспределению = РаспределенныеРасчеты.СуммаВзаиморасчетовРаспределенная)
	|	ГДЕ
	|		РаспределенныеРасчеты.Регистратор ЕСТЬ NULL
	|		И ВозвратыТоваровПоставщику.СуммаКРаспределению > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратыТоваровМеждуОрганизациями.Регистратор КАК Регистратор,
	|		ВозвратыТоваровМеждуОрганизациями.СуммаКРаспределению КАК СуммаКРаспределению
	|	ИЗ
	|		ВозвратыТоваровМеждуОрганизациями КАК ВозвратыТоваровМеждуОрганизациями
	|			ЛЕВОЕ СОЕДИНЕНИЕ РаспределенныеРасчеты КАК РаспределенныеРасчеты
	|			ПО (ВозвратыТоваровМеждуОрганизациями.Регистратор = РаспределенныеРасчеты.Регистратор)
	|				И (ВозвратыТоваровМеждуОрганизациями.СуммаКРаспределению = РаспределенныеРасчеты.СуммаВзаиморасчетовРаспределенная)
	|	ГДЕ
	|		РаспределенныеРасчеты.Регистратор ЕСТЬ NULL
	|		И ВозвратыТоваровМеждуОрганизациями.СуммаКРаспределению > 0
	|	) КАК ДокументыКОбработке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъектыДляОбработки.Регистратор                КАК Регистратор,
	|	ВЫБОР 
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).ВерсияДанных
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).ВерсияДанных
	|		ИНАЧЕ Неопределено
	|	КОНЕЦ КАК РегистраторВерсияДанных,
	|	ВЫБОР
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику 
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).Дата
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями 
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).Дата
	|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1) 
	|	КОНЕЦ КАК Дата,
	|	ВЫБОР
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику 
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).Валюта
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями 
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Валюта,
	|	ВЫБОР
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику 
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).Организация
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями 
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).Организация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику 
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).Контрагент
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|			ТОГДА 
	|				ВЫБОР 
	|					КОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).РасчетыЧерезОтдельногоКонтрагента
	|						ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).Контрагент
	|					ИНАЧЕ ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).ОрганизацияПолучатель
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).Партнер
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями 
	|			ТОГДА ВЫБОР 
	|					КОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).РасчетыЧерезОтдельногоКонтрагента
	|						ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).Партнер
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) 
	|	КОНЕЦ КАК Партнер,
	|	ВЫБОР
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).Договор
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями 
	|			ТОГДА
	|				ВЫБОР 
	|					КОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).РасчетыЧерезОтдельногоКонтрагента
	|						ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).ДоговорПокупки
	|					ИНАЧЕ ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).Договор
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|	КОНЕЦ КАК Договор,
	|	ВЫБОР
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).НаправлениеДеятельности
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) 
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровПоставщику).СуммаДокумента
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|			ТОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.ВозвратТоваровМеждуОрганизациями).СуммаДокумента
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаДокумента
	|ПОМЕСТИТЬ ТаблицаСсылок
	|ИЗ
	|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСсылок.Дата          КАК Дата,
	|	&ВалютаУпр                  КАК Валюта,
	|	МАКСИМУМ(КурсыВалют.Период) КАК ДатаКурса
	|ПОМЕСТИТЬ ДатыКурсовУпр
	|ИЗ
	|	ТаблицаСсылок КАК ТаблицаСсылок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ТаблицаСсылок.Дата >= КурсыВалют.Период
	|ГДЕ 
	|	КурсыВалют.Валюта = &ВалютаУпр
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСсылок.Дата,
	|	ТаблицаСсылок.Валюта
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСсылок.Дата          КАК Дата,
	|	&ВалютаРегл                 КАК Валюта,
	|	МАКСИМУМ(КурсыВалют.Период) КАК ДатаКурса
	|ПОМЕСТИТЬ ДатыКурсовРегл
	|ИЗ
	|	ТаблицаСсылок КАК ТаблицаСсылок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ТаблицаСсылок.Дата >= КурсыВалют.Период
	|ГДЕ 
	|	КурсыВалют.Валюта = &ВалютаРегл
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСсылок.Дата,
	|	ТаблицаСсылок.Валюта
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСсылок.Дата          КАК Дата,
	|	ТаблицаСсылок.Валюта        КАК Валюта,
	|	МАКСИМУМ(КурсыВалют.Период) КАК ДатаКурса
	|ПОМЕСТИТЬ ДатыКурсовВалютДокументов
	|ИЗ
	|	ТаблицаСсылок КАК ТаблицаСсылок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО ТаблицаСсылок.Валюта = КурсыВалют.Валюта
	|			И ТаблицаСсылок.Дата >= КурсыВалют.Период
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСсылок.Дата,
	|	ТаблицаСсылок.Валюта
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляОбработки.Дата                    КАК Дата,
	|	ДанныеДляОбработки.Регистратор             КАК Регистратор,
	|	ДанныеДляОбработки.РегистраторВерсияДанных КАК РегистраторВерсияДанных,
	|	ДанныеДляОбработки.Организация             КАК Организация,
	|	ДанныеДляОбработки.Партнер                 КАК Партнер,
	|	ДанныеДляОбработки.Контрагент              КАК Контрагент,
	|	ДанныеДляОбработки.Договор                 КАК Договор,
	|	ДанныеДляОбработки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеДляОбработки.Валюта                  КАК Валюта,
	|	ДанныеДляОбработки.СуммаДокумента          КАК СуммаДокумента,
	|	ЕСТЬNULL(ТребуютДопроведения.СуммаКРаспределению,0) КАК СуммаКРаспределению,
	|	ВЫРАЗИТЬ((ДанныеДляОбработки.СуммаДокумента * КурсыВалютыДокумента.Курс * КурсыУпр.Кратность)
	|		/ (КурсыУпр.Курс * КурсыВалютыДокумента.Кратность) КАК ЧИСЛО(15,2)) КАК СуммаУпр,
	|	ВЫРАЗИТЬ((ДанныеДляОбработки.СуммаДокумента * КурсыВалютыДокумента.Курс * КурсыРегл.Кратность) 
	|		/ (КурсыРегл.Курс * КурсыВалютыДокумента.Кратность) КАК ЧИСЛО(15,2)) КАК СуммаРегл,
	|	КурсыВалютыДокумента.Кратность             КАК КратностьВалютыДокумента,
	|	КурсыВалютыДокумента.Курс                  КАК КурсВалютыДокумента,
	|	КурсыУпр.Кратность                         КАК КратностьУпр,
	|	КурсыУпр.Курс                              КАК КурсУпр,
	|	КурсыРегл.Кратность                        КАК КратностьРегл,
	|	КурсыРегл.Курс                             КАК КурсРегл,
	|	ВЫБОР 
	|		КОГДА НЕ ТребуютДопроведения.Регистратор ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                      КАК ТребуетДопроведения
	|ИЗ ТаблицаСсылок КАК ДанныеДляОбработки
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДатыКурсовУпр КАК ДатыКурсовУпр
	|			ЛЕВОЕ СОЕДИНЕНИЕ  РегистрСведений.КурсыВалют КАК КурсыУпр
	|			ПО ДатыКурсовУпр.ДатаКурса = КурсыУпр.Период
	|				И ДатыКурсовУпр.Валюта = КурсыУпр.Валюта
	|		ПО ДанныеДляОбработки.Дата = ДатыКурсовУпр.Дата
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДатыКурсовРегл КАК ДатыКурсовРегл
	|			ЛЕВОЕ СОЕДИНЕНИЕ  РегистрСведений.КурсыВалют КАК КурсыРегл
	|			ПО ДатыКурсовРегл.ДатаКурса = КурсыРегл.Период
	|				И ДатыКурсовРегл.Валюта = КурсыРегл.Валюта
	|		ПО ДанныеДляОбработки.Дата = ДатыКурсовРегл.Дата
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДатыКурсовВалютДокументов КАК ДатыКурсовВалютДокументов
	|			ЛЕВОЕ СОЕДИНЕНИЕ  РегистрСведений.КурсыВалют КАК КурсыВалютыДокумента
	|			ПО ДатыКурсовВалютДокументов.ДатаКурса = КурсыВалютыДокумента.Период
	|				И ДатыКурсовВалютДокументов.Валюта = КурсыВалютыДокумента.Валюта
	|		ПО ДанныеДляОбработки.Валюта = ДатыКурсовВалютДокументов.Валюта
	|			И ДанныеДляОбработки.Дата = ДатыКурсовВалютДокументов.Дата
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТТребуютДопроведения КАК ТребуютДопроведения
	|		ПО ДанныеДляОбработки.Регистратор = ТребуютДопроведения.Регистратор
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ВозвратТоваровПоставщикуРасшифровкаПлатежа.Ссылка               КАК Регистратор,
	|	ВозвратТоваровПоставщикуРасшифровкаПлатежа.Заказ                КАК Заказ,
	|	СУММА(ВозвратТоваровПоставщикуРасшифровкаПлатежа.Сумма)         КАК Сумма,
	|	ВозвратТоваровПоставщикуРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.РасшифровкаПлатежа КАК ВозвратТоваровПоставщикуРасшифровкаПлатежа
	|ГДЕ
	|	ВозвратТоваровПоставщикуРасшифровкаПлатежа.Ссылка В (ВЫБРАТЬ ТаблицаСсылок.Регистратор ИЗ ТаблицаСсылок КАК ТаблицаСсылок)
	|	И НЕ ВозвратТоваровПоставщикуРасшифровкаПлатежа.Заказ В (Неопределено,Значение(Документ.ВозвратТоваровПоставщику.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровПоставщикуРасшифровкаПлатежа.Ссылка,
	|	ВозвратТоваровПоставщикуРасшифровкаПлатежа.Заказ,
	|	ВозвратТоваровПоставщикуРасшифровкаПлатежа.ВалютаВзаиморасчетов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка               КАК Регистратора,
	|	ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Заказ                КАК Заказ,
	|	СУММА(ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Сумма)         КАК Сумма,
	|	ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа
	|ГДЕ
	|	ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка В (ВЫБРАТЬ ТаблицаСсылок.Регистратор ИЗ ТаблицаСсылок КАК ТаблицаСсылок)
	|	И НЕ ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Заказ = ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Ссылка,
	|	ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.Заказ,
	|	ВозвратТоваровМеждуОрганизациямиРасшифровкаПлатежа.ВалютаВзаиморасчетов";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(Параметры.Очередь, Неопределено, ПолноеИмяРегистра, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ВТОбъектыДляОбработки",Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ВалютаРегл",Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУпр",Константы.ВалютаУправленческогоУчета.Получить());
	
	Результат = Запрос.ВыполнитьПакет();
	
	Выборка = Результат[8].Выбрать();
	РасшифровкиПлатежей = Результат[9].Выгрузить();
	
	ЭтоФайловаяИБ = ОбщегоНазначения.ИнформационнаяБазаФайловая();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Если НЕ ЭтоФайловаяИБ И (ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") 
				ИЛИ ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.ВозвратТоваровПоставщику")) Тогда
				
				МетаданныеДокумента = Выборка.Регистратор.Метаданные();
				
				Попытка
			
					Блокировка = Новый БлокировкаДанных;
					ЭлементБлокировки = Блокировка.Добавить("Документ." + МетаданныеДокумента.Имя);
					ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Регистратор);
					ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
					Блокировка.Заблокировать();
					
				Исключение
					
					ОтменитьТранзакцию();
					ТекстСообщения = НСтр("ru = 'Не удалось заблокировать документ: %Ссылка% по причине: %Причина%'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Регистратор);
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
											УровеньЖурналаРегистрации.Предупреждение,
											МетаданныеДокумента,
											Выборка.Регистратор,
											ТекстСообщения);
					Продолжить;
					
				КонецПопытки;
				
				Если Выборка.РегистраторВерсияДанных <> Выборка.Регистратор.ВерсияДанных Тогда
					ОтменитьТранзакцию();
					Продолжить;
				КонецЕсли;
				
			КонецЕсли;
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
			Блокировка.Заблокировать();
			
			Набор = РегистрыНакопления.РасчетыСПоставщиками.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Выборка.Регистратор);
			Набор.Прочитать();
			
			ЗаписьПриход = Неопределено;
			СуммаРаспределенная = 0;
			
			Для каждого Запись Из Набор Цикл
				Если ЗначениеЗаполнено(Запись.УдалитьСтатьяДвиженияДенежныхСредств) Тогда
					Запись.СтатьяДвиженияДенежныхСредств = Запись.УдалитьСтатьяДвиженияДенежныхСредств;
				КонецЕсли;
				Если Запись.ЗаказПоставщику = Выборка.Регистратор Тогда
					Если Запись.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
						ЗаписьПриход = Запись;
					Иначе
						СуммаРаспределенная = СуммаРаспределенная + Запись.Сумма;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Если Выборка.ТребуетДопроведения И Выборка.СуммаКРаспределению > СуммаРаспределенная Тогда
				
				СтруктураАналитики = Новый Структура();
				СтруктураАналитики.Вставить("Организация",             Выборка.Организация);
				СтруктураАналитики.Вставить("Партнер",                 Выборка.Партнер);
				СтруктураАналитики.Вставить("Контрагент",              Выборка.Контрагент);
				СтруктураАналитики.Вставить("Договор",                 Выборка.Договор);
				СтруктураАналитики.Вставить("НаправлениеДеятельности", Выборка.НаправлениеДеятельности);
				
				АналитикаВозврата = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураАналитики);
				
				СтруктураПоиска = Новый Структура("Регистратор", Выборка.Регистратор);
				Расшифровка = РасшифровкиПлатежей.НайтиСтроки(СтруктураПоиска);
				
				КоличествоЗаписей = Расшифровка.Количество();
				
				Если НЕ ЗаписьПриход = Неопределено Тогда
					Набор.Удалить(ЗаписьПриход);
				КонецЕсли;
				
				ЗаписьПриход = Набор.Вставить(0);
				
				ЗаполнитьЗначенияСвойств(ЗаписьПриход, Набор[1]);
				ЗаписьПриход.ВидДвижения               = ВидДвиженияНакопления.Приход;
				ЗаписьПриход.ЗаказПоставщику           = Выборка.Регистратор;
				ЗаписьПриход.Валюта                    = Выборка.Валюта;
				ЗаписьПриход.АналитикаУчетаПоПартнерам = АналитикаВозврата;
				ЗаписьПриход.Сумма                     = Выборка.СуммаДокумента;
				ЗаписьПриход.КОплате                   = Выборка.СуммаДокумента;
				ЗаписьПриход.СуммаРегл                 = Выборка.СуммаРегл;
				ЗаписьПриход.СуммаУпр                  = Выборка.СуммаУпр;
				
				КоэффициентРегл = ?(ЗаписьПриход.Сумма > 0, ЗаписьПриход.СуммаРегл/ЗаписьПриход.Сумма, 0);
				КоэффициентУпр  = ?(ЗаписьПриход.Сумма > 0, ЗаписьПриход.СуммаУпр/ЗаписьПриход.Сумма, 0);
				
				СуммаРегл = ЗаписьПриход.СуммаРегл;
				СуммаУпр  = ЗаписьПриход.СуммаУпр;
				
				Для сч = 0 По КоличествоЗаписей-1 Цикл
					Запись = Расшифровка[сч];
					ЗаписьРасход = Набор.Вставить(1+сч);
					
					ЗаполнитьЗначенияСвойств(ЗаписьРасход,ЗаписьПриход);
					
					ЗаписьРасход.ВидДвижения               = ВидДвиженияНакопления.Расход;
					ЗаписьРасход.АналитикаУчетаПоПартнерам = АналитикаВозврата;
					ЗаписьРасход.ЗаказПоставщику           = Выборка.Регистратор;
					ЗаписьРасход.Валюта                    = Выборка.Валюта;
					ЗаписьРасход.Сумма                     = Запись.Сумма;
					ЗаписьРасход.КОплате                   = Запись.Сумма;
					
					Если Сч = КоличествоЗаписей-1 Тогда
						ЗаписьРасход.СуммаРегл = СуммаРегл;
						ЗаписьРасход.СуммаУпр  = СуммаУпр;
					Иначе
						ЗаписьРасход.СуммаРегл = Запись.Сумма * КоэффициентРегл;
						ЗаписьРасход.СуммаУпр  = Запись.Сумма * КоэффициентУпр;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			
			ЗафиксироватьТранзакцию();
		
		Исключение
		
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обратать документ: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Выборка.Регистратор.Метаданные(), Выборка.Регистратор, ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли