#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Регистрирует данные для обработчика обновления
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.ТребуетсяЗалогЗаТару КАК ТребуетсяЗалогЗаТару,
	|	РеализацияТоваровУслуг.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.РеализацияПоЗаказам
	|	И НЕ РеализацияТоваровУслуг.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоНакладным)
	|	И РеализацияТоваровУслуг.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности))
	|	И РеализацияТоваровУслуг.Проведен
	|	И &ИспользоватьРасширенныеВозможностиЗаказаКлиента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыКОбработке.Регистратор КАК Регистратор
	|ИЗ
	|	(ВЫБРАТЬ 
	|		ВложенныйЗапрос.Ссылка КАК Регистратор
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ДокументыДляОбработки.Ссылка                     КАК Ссылка,
	|			СУММА(ДокументыДляОбработки.ОтгружаетсяДокумент) КАК ОтгружаетсяДокумент,
	|			СУММА(ДокументыДляОбработки.ОтгружаетсяРегистр)  КАК ОтгружаетсяРегистр
	|		ИЗ
	|			(ВЫБРАТЬ 
	|			ТаблицаТовары.Ссылка                     КАК Ссылка,
	|				СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК ОтгружаетсяДокумент,
	|				0                                        КАК ОтгружаетсяРегистр
	|			ИЗ
	|				Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументы КАК ВТДокументы 
	|						ПО ВТДокументы.Ссылка =  ТаблицаТовары.Ссылка
	|			ГДЕ
	|				(ТаблицаТовары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|					ИЛИ ВТДокументы.ТребуетсяЗалогЗаТару
	|					ИЛИ НЕ ВТДокументы.ВернутьМногооборотнуюТару)
	|				И ТаблицаТовары.КодСтроки <> 0
	|			СГРУППИРОВАТЬ ПО 
	|				ТаблицаТовары.Ссылка
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				РасчетыСКлиентами.Регистратор,
	|				0,
	|				СУММА(РасчетыСКлиентами.Отгружается)
	|			ИЗ
	|				РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументы КАК ВТДокументы 
	|						ПО ВТДокументы.Ссылка =  РасчетыСКлиентами.Регистратор
	|			СГРУППИРОВАТЬ ПО
	|				РасчетыСКлиентами.Регистратор) КАК ДокументыДляОбработки
	|		СГРУППИРОВАТЬ ПО
	|			ДокументыДляОбработки.Ссылка) КАК ВложенныйЗапрос
	|	ГДЕ
	|		ВложенныйЗапрос.ОтгружаетсяДокумент < ВложенныйЗапрос.ОтгружаетсяРегистр
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Расчеты.Регистратор КАК Регистратор
	|	ИЗ
	|		РегистрНакопления.РасчетыСКлиентами КАК Расчеты
	|	ГДЕ
	|		Расчеты.УдалитьСтатьяДвиженияДенежныхСредств <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|		И Расчеты.СтатьяДвиженияДенежныхСредств = ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка
	|	ИЗ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.РасчетыСКлиентами КАК Расчеты
	|		ПО
	|			Расчеты.Регистратор = ДанныеДокумента.Ссылка
	|			И Расчеты.Оплачивается <> 0
	|	ГДЕ
	|		ДанныеДокумента.Проведен
	|		И ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)) 
	|		И Расчеты.Регистратор ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка
	|	ИЗ
	|		Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.РасчетыСКлиентами КАК Расчеты
	|		ПО
	|			Расчеты.Регистратор = ДанныеДокумента.Ссылка
	|			И Расчеты.Оплачивается <> 0
	|	ГДЕ
	|		ДанныеДокумента.Проведен
	|		И ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)) 
	|		И Расчеты.Регистратор ЕСТЬ NULL
	|		И (ДанныеДокумента.ПроведеноБанком
	|			ИЛИ НЕ ДанныеДокумента.ОплатаПоЗаявкам)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка
	|	ИЗ
	|		Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.РасчетыСКлиентами КАК Расчеты
	|		ПО
	|			Расчеты.Регистратор = ДанныеДокумента.Ссылка
	|			И Расчеты.Оплачивается <> 0
	|	ГДЕ
	|		ДанныеДокумента.Проведен
	|		И ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)) 
	|		И Расчеты.Регистратор ЕСТЬ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка
	|	ИЗ
	|		Документ.ОперацияПоПлатежнойКарте КАК ДанныеДокумента
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрНакопления.РасчетыСКлиентами КАК Расчеты
	|		ПО
	|			Расчеты.Регистратор = ДанныеДокумента.Ссылка
	|			И Расчеты.Оплачивается <> 0
	|	ГДЕ
	|		ДанныеДокумента.Проведен
	|		И ДанныеДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту)) 
	|		И Расчеты.Регистратор ЕСТЬ NULL
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Расчеты.Регистратор КАК Ссылка
	|	ИЗ
	|		РегистрНакопления.РасчетыСКлиентами КАК Расчеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК Расшифровка
	|		ПО Расчеты.Регистратор = Расшифровка.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО Расчеты.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|	
	|	ГДЕ
	|		ЕСТЬNULL(Расшифровка.Заказ.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И ЕСТЬNULL(Расшифровка.Заказ.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) <> Аналитика.Организация
	|	) КАК ДокументыКОбработке
	//++ НЕ УТКА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Расчеты.Регистратор
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами КАК Расчеты
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетДавальцу КАК ОтчетДавальцу
	|	ПО Расчеты.Регистратор = ОтчетДавальцу.Ссылка
	|ГДЕ
	|	Расчеты.Период = ДАТАВРЕМЯ(1, 1, 1, 23, 59, 59)
	//-- НЕ УТКА
	|");
	
	Запрос.УстановитьПараметр("ИспользоватьРасширенныеВозможностиЗаказаКлиента", ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента"));
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.Вставить("ЭтоДвижения", Истина);
	ДополнительныеПараметры.Вставить("ПолноеИмяРегистра", "РегистрНакопления.РасчетыСКлиентами");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор"), ДополнительныеПараметры);
	
	ИмяРегистра       = "РасчетыСКлиентами";
	ПолноеИмяРегистра = "РегистрНакопления." + ИмяРегистра;
	
	Регистраторы = Документы.ВзаимозачетЗадолженности.РегистраторыДляПерепроведенияПриОбновлении(ИмяРегистра);
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
КонецПроцедуры

// Обработчик обновления УТ 11.3.1
// Переносит статьи движения денежных средств
// Корректирует движения по ресурсу "Отгружается" для реализаций по заказам со строками сверх заказа.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.РасчетыСКлиентами";
	
	Регистраторы = Новый Массив;
	//++ НЕ УТКА
	Регистраторы.Добавить("Документ.ОтчетДавальцу");
	//-- НЕ УТКА
	Регистраторы.Добавить("Документ.ВзаимозачетЗадолженности");
	Регистраторы.Добавить("Документ.ЗаявкаНаРасходованиеДенежныхСредств");
	Регистраторы.Добавить("Документ.СписаниеБезналичныхДенежныхСредств");
	Регистраторы.Добавить("Документ.РасходныйКассовыйОрдер");
	Регистраторы.Добавить("Документ.ОперацияПоПлатежнойКарте");
	
	ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(Регистраторы, ПолноеИмяРегистра, Параметры.Очередь);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(Параметры.Очередь, Неопределено, ПолноеИмяРегистра, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ 
	|	ОбъектыДляОбработки.Регистратор                             КАК Регистратор,
	|	ОбъектыДляОбработки.Регистратор.ВерсияДанных                КАК ВерсияДанных,
	|	ВЫБОР 
	|		КОГДА ОбъектыДляОбработки.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг 
	|			ТОГДА ВЫБОР 
	|					КОГДА ВЫРАЗИТЬ(ОбъектыДляОбработки.Регистратор КАК Документ.РеализацияТоваровУслуг).ПорядокРасчетов 
	|							= ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                       КАК РасчетыПоДоговору
	|ИЗ
	|	ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ 
	|	ДанныеДокумента.Ссылка                     КАК Регистратор,
	|	ДанныеДокумента.ЗаказКлиента               КАК ЗаказКлиента,
	|	СУММА(ДанныеДокумента.СуммаВзаиморасчетов) КАК Отгружается
	|ИЗ 
	|	Документ.РеализацияТоваровУслуг.Товары КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбъектыДляОбработки КАК ОбъектыДляОбработки
	|			ПО ОбъектыДляОбработки.Регистратор = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.КодСтроки <> 0
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.ЗаказКлиента";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТОбъектыДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.ВыполнитьПакет();
	
	Выборка            = Результат[0].Выбрать();
	ТаблицаОтгружается = Результат[1].Выгрузить();
	ТаблицаОтгружается.Индексы.Добавить("Регистратор, ЗаказКлиента");
	
	ЭтоФайловаяИБ = ОбщегоНазначения.ИнформационнаяБазаФайловая();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Если НЕ ЭтоФайловаяИБ И Выборка.ВерсияДанных <> Выборка.Регистратор.ВерсияДанных Тогда
				ОтменитьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
			Блокировка.Заблокировать();
			
			Набор = РегистрыНакопления.РасчетыСКлиентами.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Выборка.Регистратор);
			Набор.Прочитать();
			
			СтруктураПоиска = Новый Структура("Регистратор, ЗаказКлиента");
			
			сч = 0;
			Пока сч < Набор.Количество() Цикл
				Запись = Набор[сч];
				Если Запись.Отгружается <> 0 Тогда
					
					Если Выборка.РасчетыПоДоговору Тогда
						СтруктураПоиска.Регистратор  = Запись.Регистратор;
						СтруктураПоиска.ЗаказКлиента = Запись.ПродажаПоЗаказу;
					Иначе
						ЗаполнитьЗначенияСвойств(СтруктураПоиска, Запись);
					КонецЕсли;
					
					СтрокиОтгружается = ТаблицаОтгружается.НайтиСтроки(СтруктураПоиска);
					
					Если СтрокиОтгружается.Количество() = 0 Тогда
						Набор.Удалить(Запись);
						Продолжить;
					Иначе
						Если СтрокиОтгружается[0].Отгружается <> Запись.Отгружается Тогда
							 Запись.Отгружается = СтрокиОтгружается[0].Отгружается;
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
				Если ЗначениеЗаполнено(Запись.УдалитьСтатьяДвиженияДенежныхСредств) Тогда
					Запись.СтатьяДвиженияДенежныхСредств = Запись.УдалитьСтатьяДвиженияДенежныхСредств;
				КонецЕсли;
				сч = сч + 1;
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			
			ЗафиксироватьТранзакцию();
		
		Исключение
		
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось перенести статью движения денежных средств при обработке документа: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Выборка.Регистратор.Метаданные(), Выборка.Регистратор, ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли