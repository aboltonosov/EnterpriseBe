#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//++ НЕ УТ
#Область ПрограммныйИнтерфейс
//++ НЕ УТКА

// Определяет источники уточнения счета, доступные в регистре и их свойства.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ИсточникиУточненияСчета()
//
// Параметры:
//  СвойстваИсточника - Строка - "ИмяПоля" - имя атрибута регистра накопления, из которого планируется получать источник уточнения счета.
//
// Возвращаемое значение:
//  Соответствие - Ключ - название источника уточнения счета. 
//                 Значение - структура свойств источника уточнения счета.
//
Функция ИсточникиУточненияСчета(СвойстваИсточника) Экспорт
	
	ИсточникиУточненияСчета = Новый Соответствие;
	
	ИсточникиУточненияСчета.Вставить(Перечисления.ТипыИсточниковУточненияСчета.ГруппаФинансовогоУчетаДоходовРасходовКредита,
		Новый Структура(СвойстваИсточника, "ГФУДоходовРасходов"));
		
	ИсточникиУточненияСчета.Вставить(Перечисления.ТипыИсточниковУточненияСчета.ГруппаФинансовогоУчетаДоходовРасходовДебета,
		Новый Структура(СвойстваИсточника, "КорГФУДоходовРасходов"));
	
	Возврат ИсточникиУточненияСчета;
	
КонецФункции

// Определяет источники подразделений регистра и их свойства.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ИсточникиПодразделений()
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя источника. 
//                 Значение - структура свойств источника. 
//
Функция ИсточникиПодразделений() Экспорт

	ИсточникиПодразделений = Новый Соответствие;
	
	ИсточникиПодразделений.Вставить(Перечисления.ИсточникиПодразделенийАналитическихРегистров.ХозяйственнаяОперация, "Подразделение");
	ИсточникиПодразделений.Вставить(Перечисления.ИсточникиПодразделенийАналитическихРегистров.АналитикаУчетаДоходовРасходов, "АналитикаДоходовРасходовПодразделение");
	ИсточникиПодразделений.Вставить(Перечисления.ИсточникиПодразделенийАналитическихРегистров.АналитикаУчетаПрочихАктивовПассивов, "АналитикаАктивовПассивов");
	
	Возврат ИсточникиПодразделений;
	
КонецФункции

// Определяет источники направлений регистра и их свойства.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ИсточникиНаправлений()
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя источника. 
//                 Значение - структура свойств источника. 
//
Функция ИсточникиНаправлений() Экспорт

	Результат = Новый Соответствие;
	
	ИсточникиНаправлений = Перечисления.ИсточникиНаправленийДеятельностиАналитическихРегистров;
	Результат.Вставить(ИсточникиНаправлений.НаправлениеДеятельности, "НаправлениеДеятельности");
	Результат.Вставить(ИсточникиНаправлений.КорНаправлениеДеятельности, "КорНаправлениеДеятельности");

	Возврат Результат;

КонецФункции

// Определяет источники заполнения субконто.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ИсточникиСубконто()
//
// Возвращаемое значение:
//  Массив - массив атрибутов регистра.
//
Функция ИсточникиСубконто() Экспорт

	МассивСубконтоДт = Новый Массив;
	МассивСубконтоДт.Добавить("КорСтатья");
	МассивСубконтоДт.Добавить("КорАналитикаДоходов");
	МассивСубконтоДт.Добавить("КорАналитикаРасходов");
	МассивСубконтоДт.Добавить("КорАналитикаАктивовПассивов");
	МассивСубконтоДт.Добавить("ВидОперацииПоЗарплате");
	
	МассивСубконтоКт = Новый Массив;
	МассивСубконтоКт.Добавить("Статья");
	МассивСубконтоКт.Добавить("АналитикаДоходов");
	МассивСубконтоКт.Добавить("АналитикаРасходов");
	МассивСубконтоКт.Добавить("АналитикаАктивовПассивов");
	МассивСубконтоКт.Добавить("ВидОперацииПоЗарплате");

	Возврат Новый Структура("СубконтоДт, СубконтоКт", МассивСубконтоДт, МассивСубконтоКт);
	
КонецФункции

// Определяет показатели в валюте регистра.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ПоказателиВВалюте()
//
// Параметры:
//  СвойстваПоказателей - Строка - "ИсточникВалюты" - источник валюты для показателя регистра.
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция ПоказателиВВалюте(СвойстваПоказателей) Экспорт

	ПоказателиВВалюте = Новый Соответствие;
	
	ПоказателиВВалюте.Вставить(Перечисления.ПоказателиАналитическихРегистров.СуммаВВалюте, Новый Структура(СвойстваПоказателей, "Валюта"));
	
	Возврат ПоказателиВВалюте;

КонецФункции

// Определяет документы отражаемые в международном учете.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.ДокументыКОтражениюВМеждународномУчете()
//
// Возвращаемое значение:
//  Массив - массив регистраторов регистра отражаемых в международном учете.
//
Функция ДокументыКОтражениюВМеждународномУчете() Экспорт

	ДокументыКОтражению = Новый Массив;
	ДокументыКОтражению.Добавить("ОтражениеЗарплатыВФинансовомУчете");
	ДокументыКОтражению.Добавить("ПрочиеДоходыРасходы");
	ДокументыКОтражению.Добавить("ПоступлениеПредметовЛизинга");
	ДокументыКОтражению.Добавить("НачислениеОценочныхОбязательствПоОтпускам");
	
	Возврат ДокументыКОтражению;

КонецФункции
//-- НЕ УТКА

// Определяет показатели регистра.
// Подробнее см. ОбщийМодуль.МеждународныйУчетСерверПовтИсп.Показатели()
//
// Параметры:
//  Свойства - Структура - содержащая ключи СвойстваПоказателей, СвойстваРесурсов
//
// Возвращаемое значение:
//  Соответствие - Ключ - имя показателя.
//                 Значение - структура свойств показателя.
//
Функция Показатели(Свойства) Экспорт

	Показатели = Новый Соответствие;
	
	СвойстваПоказателей = Свойства.СвойстваПоказателей;
	СвойстваРесурсов = Свойства.СвойстваРесурсов;
	
	МассивРесурсов = Новый Массив;
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "Сумма", "ВалютаУпр"));
    МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаРегл", "ВалютаРегл"));
	МассивРесурсов.Добавить(Новый Структура(СвойстваРесурсов, "СуммаВВалюте", "Валюта"));
	Показатели.Вставить(Перечисления.ПоказателиАналитическихРегистров.Сумма, Новый Структура(СвойстваПоказателей, МассивРесурсов));
	
	Возврат Показатели;
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	МассивАналитик = Новый Массив;
	МассивАналитик.Добавить(Неопределено);
	МассивАналитик.Добавить(Перечисления.ТипыНалогов.ПустаяСсылка());
	
	Запрос = Новый Запрос(
	"// Сформировать новые движения
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДокументыКОбработке
	|ИЗ
	|	Документ.ДвижениеПрочихАктивовПассивов КАК ДД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК Движения
	|		ПО ДД.Ссылка = Движения.Регистратор
	|ГДЕ
	|	ДД.Проведен
	|	И Движения.Регистратор ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Сформировать новые движения
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности КАК ДД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК Движения
	|		ПО ДД.Ссылка = Движения.Регистратор
	|ГДЕ
	|	ДД.Проведен
	|	И Движения.Регистратор ЕСТЬ NULL
	//++ НЕ УТ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Исправить существующие движения - поменять местами АП - ДР
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК Движения
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Движения.Регистратор) = ТИП(Документ.ОтражениеЗарплатыВФинансовомУчете)
	|	И Движения.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.УдержаниеИзЗарплатыСотрудника),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоЗаймамВыданным)
	|	)
	|	И ТИПЗНАЧЕНИЯ(Движения.Статья) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И ТИПЗНАЧЕНИЯ(Движения.Статья) <> ТИПЗНАЧЕНИЯ(Движения.КорСтатья)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Исправить существующие движения - поменять местами ДР - АП
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК Движения
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Движения.Регистратор) = ТИП(Документ.ОтражениеЗарплатыВФинансовомУчете)
	|	И Движения.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеЗаработнойПлаты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНалоговВзносовСЗаработнойПлаты)
	|	)
	|	И ТИПЗНАЧЕНИЯ(Движения.КорСтатья) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И ТИПЗНАЧЕНИЯ(Движения.Статья) <> ТИПЗНАЧЕНИЯ(Движения.КорСтатья)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор) = ТИП(Документ.ОтражениеЗарплатыВФинансовомУчете)
	|	И ((ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов = НЕОПРЕДЕЛЕНО
	|			ИЛИ (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов = НЕОПРЕДЕЛЕНО
	|			ИЛИ (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|				И ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов В (&Аналитики))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК ДвиженияДоходыРасходыПрочиеАктивыПассивы
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Регистратор) = ТИП(Документ.НачислениеОценочныхОбязательствПоОтпускам)
	|	И ((ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов = НЕОПРЕДЕЛЕНО
	|			ИЛИ (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов = НЕОПРЕДЕЛЕНО
	|			ИЛИ (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.Статья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|				И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.АналитикаАктивовПассивов = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ПустаяСсылка)
	|			ИЛИ (ВЫРАЗИТЬ(ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорСтатья КАК ПланВидовХарактеристик.СтатьиАктивовПассивов)) = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|				И НЕ ДвиженияДоходыРасходыПрочиеАктивыПассивы.КорАналитикаАктивовПассивов = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Исправить существующие движения
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы КАК Движения
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Движения.Регистратор) В (
	|		ТИП(Документ.ПоступлениеПредметовЛизинга),
	|		ТИП(Документ.ПоступлениеУслугПоЛизингу)
	|	)
	|	И ТИПЗНАЧЕНИЯ(Движения.КорСтатья) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|	И ТИПЗНАЧЕНИЯ(Движения.Статья) <> ТИПЗНАЧЕНИЯ(Движения.КорСтатья)
	//-- НЕ УТ
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыКОбработке.Ссылка
	|ИЗ
	|	ДокументыКОбработке КАК ДокументыКОбработке");
	
	Запрос.УстановитьПараметр("Аналитики", МассивАналитик);
	
	СписокРегистраторов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ДополнительныеПараметрыОтметки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметрыОтметки.ЭтоДвижения = Истина;
	ДополнительныеПараметрыОтметки.ПолноеИмяРегистра = ПолноеИмяОбъекта;
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, СписокРегистраторов, ДополнительныеПараметрыОтметки);
		
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ДвижениеПрочихАктивовПассивов");
	//++ НЕ УТ
	Регистраторы.Добавить("Документ.ОтражениеЗарплатыВФинансовомУчете");
	Регистраторы.Добавить("Документ.ПоступлениеПредметовЛизинга");
	Регистраторы.Добавить("Документ.ПоступлениеУслугПоЛизингу");
	Регистраторы.Добавить("Документ.НачислениеОценочныхОбязательствПоОтпускам");
	//-- НЕ УТ
	Регистраторы.Добавить("Документ.РаспределениеДоходовИРасходовПоНаправлениямДеятельности");
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		Регистраторы,
		ПолноеИмяРегистра,
		Параметры.Очередь);
		
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли