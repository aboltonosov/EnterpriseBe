#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбновлениеИнформационнойБазы

#Область ОбработчикиОбновления_2_2_2

Процедура ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ФактическиеДанныеБюджетирования";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФактическиеДанныеБюджетирования.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ФактическиеДанныеБюджетирования КАК ФактическиеДанныеБюджетирования
	|ГДЕ
	|	ФактическиеДанныеБюджетирования.Правило.Коэффициент < 0
	|	И ФактическиеДанныеБюджетирования.СуммаВВалюте <> 0 
	|	И (ФактическиеДанныеБюджетирования.СуммаУпр / ФактическиеДанныеБюджетирования.СуммаВВалюте < 0
	|			ИЛИ ФактическиеДанныеБюджетирования.СуммаРегл / ФактическиеДанныеБюджетирования.СуммаВВалюте < 0)";
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(
		Параметры,
		Регистраторы,
		ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ФактическиеДанныеБюджетирования";
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьРегистраторыРегистраДляОбработки(Параметры.Очередь, Неопределено, ПолноеИмяРегистра);
	
	Пока Выборка.Следующий() Цикл
		
		ОбрабатываемыйДокумент = Выборка.Регистратор;
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", ОбрабатываемыйДокумент);
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыНакопления.ФактическиеДанныеБюджетирования.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ОбрабатываемыйДокумент);
			НаборЗаписей.Прочитать();
			
			Для Каждого ТекСтрока Из НаборЗаписей Цикл
				
				// Три ресура должны быть одного знака. "Ведущим" является ресурс "СуммаВВалюте"
				Если ТекСтрока.СуммаВВалюте < 0 Тогда
					Если ТекСтрока.СуммаРегл > 0 Тогда
						ТекСтрока.СуммаРегл = -ТекСтрока.СуммаРегл;
					КонецЕсли;
					Если ТекСтрока.СуммаУпр > 0 Тогда
						ТекСтрока.СуммаУпр = -ТекСтрока.СуммаУпр;
					КонецЕсли;
				ИначеЕсли ТекСтрока.СуммаВВалюте > 0 Тогда
					Если ТекСтрока.СуммаРегл < 0 Тогда
						ТекСтрока.СуммаРегл = -ТекСтрока.СуммаРегл;
					КонецЕсли;
					Если ТекСтрока.СуммаУпр < 0 Тогда
						ТекСтрока.СуммаУпр = -ТекСтрока.СуммаУпр;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось перезаписать движения в регистр %ИмяРегистра% по документу %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ОбрабатываемыйДокумент);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистра%", ПолноеИмяРегистра);
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.НайтиПоПолномуИмени(ПолноеИмяРегистра), 
				ОбрабатываемыйДокумент, ТекстСообщения);
			
		КонецПопытки;

	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли