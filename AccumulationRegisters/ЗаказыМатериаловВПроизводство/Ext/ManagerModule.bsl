#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Обеспечение

// Получает оформленное накладными по заказам количество.
//
// Параметры:
//  ТаблицаОтбора - ТаблицаЗначений - Таблица с полями "Ссылка" и "КодСтроки", строки должны быть уникальными.
//
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица с полями "Ссылка", "КодСтроки", "Количество". Для каждой пары Заказ-КодСтроки содержит
//                    оформленное накладными количество.
//
Функция ТаблицаОформлено(ТаблицаОтбора) Экспорт

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Таблица.Ссылка    КАК Ссылка,
		|	Таблица.КодСтроки КАК КодСтроки
		|ПОМЕСТИТЬ ВтОтбор
		|ИЗ
		|	&ТаблицаОтбора КАК Таблица
		|ГДЕ
		|	Таблица.КодСтроки > 0
		|;
		|
		|////////////////////////////////////////
		|ВЫБРАТЬ
		|	Отбор.КодСтроки КАК КодСтроки,
		|	Отбор.Ссылка    КАК Ссылка,
		|	МАКСИМУМ(РегистрЗаказы.Номенклатура)   КАК Номенклатура,
		|	МАКСИМУМ(РегистрЗаказы.Характеристика) КАК Характеристика,
		|	МАКСИМУМ(РегистрЗаказы.Склад)          КАК Склад,
		|	МАКСИМУМ(РегистрЗаказы.Серия)          КАК Серия,
		|	СУММА(РегистрЗаказы.КОформлению) КАК Количество
		|ИЗ
		|	ВтОтбор КАК Отбор
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыМатериаловВПроизводство КАК РегистрЗаказы
		|		ПО РегистрЗаказы.Распоряжение = Отбор.Ссылка
		|		 И РегистрЗаказы.КодСтроки = Отбор.КодСтроки
		|		 И РегистрЗаказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		 И РегистрЗаказы.КОформлению <> 0
		|		 И РегистрЗаказы.Активность
		|		 И РегистрЗаказы.Распоряжение <> РегистрЗаказы.Регистратор
		|СГРУППИРОВАТЬ ПО
		|	Отбор.Ссылка, Отбор.КодСтроки";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаОтбора", ТаблицаОтбора);
	УстановитьПривилегированныйРежим(Истина);
	Таблица = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	Таблица.Индексы.Добавить("Ссылка, КодСтроки");
	
	Возврат Таблица;
	
КонецФункции

//Возвращает текст запроса заказанного количества из заказов, согласно отборам компоновки.
//Строки заказов с вариантами обеспечения Отгрузить и Отгрузить обособленно не учитываются.
//Текст запроса используется в обработке "Состояние обеспечения" для получения заказанного по заказам количества.
//
//Параметры:
//	ЕстьФильтр - Булево - Признак, определяющий необходимость предварительной фильтрации выборки по заказам,
//	                      передаваемым параметром "Заказы".
//
//Возвращаемое значение:
//	Строка - Текст запроса.
//
Функция ТекстЗапросаЗаказовКОбеспечению(ЕстьФильтр) Экспорт

	ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Т.Распоряжение КАК Заказ,
		|	Т.КодСтроки    КАК КодСтроки,
		|	Т.ЗаказаноОстаток - Т.КОформлениюОстаток КАК Количество
		|ПОМЕСТИТЬ ВтРегистрЗаказыМатериаловВПроизводство
		|ИЗ
		|	РегистрНакопления.ЗаказыМатериаловВПроизводство.Остатки(,
		|		{Склад.* КАК Склад,
		|		Распоряжение.* КАК Заказ} Распоряжение В (&Заказы)) КАК Т
		|ГДЕ
		|	Т.ЗаказаноОстаток > Т.КОформлениюОстаток
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Заказ, КодСтроки
		|;
		|
		|////////////////////////////////////////////
		|";

	Если Не ЕстьФильтр Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, " Распоряжение В (&Заказы)", "");
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

//Возвращает текст запроса заказов, согласно отборам компоновки.
//Строки заказов с вариантами обеспечения Отгрузить и Отгрузить обособленно не учитываются.
//Текст запроса используется в обработке "Состояние обеспечения" для получения заказов,
//содержащих указанную номенклатуру на указанном складе.
//
//Возвращаемое значение:
// Строка - текст запроса.
//
Функция ТекстЗапросаЗаказовНоменклатуры() Экспорт

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Т.Распоряжение КАК Заказ
		|ИЗ
		|	РегистрНакопления.ЗаказыМатериаловВПроизводство.Остатки(,
		|		{Склад.* КАК Склад, Номенклатура.* КАК Номенклатура}) КАК Т
		|ГДЕ
		|	Т.ЗаказаноОстаток > Т.КОформлениюОстаток";

	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

// Текст запроса получает остаток по ресурсам КОформлению и Заказано
// Остаток дополняется движениями, сделанными накладной заданной в параметре Регистратор
//
// Параметры:
//  ИмяВременнойТаблицы	 - Строка - Поместить результат во временную таблицу с заданным именем. 
//  ОтборПоИзмерениям	 - Структура - Ключ - имя измерения, Значение - имя параметра в запросе, например:
//  									Новый Структура("Номенклатура", "Товар") будет преобразовано в тексте запроса в:
//  									Номенклатура В(&Товар)
//  									Для ключа "СписокМатериалов" зарезервирован предопределенный текст отбора.
//  Выражение			 - Строка - Условие для секции ИМЕЮЩИЕ по ресурсам.
//  								Например, строка вида "КОформлению <> 0" будет преобразована в тексте запроса в:
//  								СУММА(Набор.КОформлению) <> 0
// 
// Возвращаемое значение:
//  Строка - Текст запроса
//
Функция ТекстЗапросаОстатки(ИмяВременнойТаблицы = "", ОтборПоИзмерениям = Неопределено, Выражение = "") Экспорт
	
	ИспользоватьСписокМатериалов = ЗначениеЗаполнено(ОтборПоИзмерениям)
									И ОтборПоИзмерениям.Свойство("СписокМатериалов");
	
	ТекстЗапроса = "";
	
	Если ИспользоватьСписокМатериалов Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СписокМатериалов.Номенклатура КАК Номенклатура,
		|	СписокМатериалов.Характеристика КАК Характеристика,
		|	СписокМатериалов.Назначение КАК Назначение
		|ПОМЕСТИТЬ ВтСписокМатериалов
		|ИЗ
		|	&СписокМатериалов КАК СписокМатериалов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса
	+ "ВЫБРАТЬ
	|	Набор.Распоряжение       КАК Распоряжение,
	|	Набор.Номенклатура       КАК Номенклатура,
	|	Набор.Характеристика     КАК Характеристика,
	|	Набор.КодСтроки          КАК КодСтроки,
	|	Набор.Серия              КАК Серия,
	|	Набор.Назначение         КАК Назначение,
	|	Набор.НазначениеОтправителя КАК НазначениеОтправителя,
	|	СУММА(Набор.Заказано)    КАК Заказано,
	|	СУММА(Набор.КОформлению) КАК КОформлению
	|//&ПОМЕСТИТЬ
	|ИЗ(
	|	ВЫБРАТЬ
	|		Таблица.Распоряжение       КАК Распоряжение,
	|		Таблица.Номенклатура       КАК Номенклатура,
	|		Таблица.Характеристика     КАК Характеристика,
	|		Таблица.КодСтроки          КАК КодСтроки,
	|		Таблица.Серия              КАК Серия,
	|		Таблица.Склад              КАК Склад,
	|		Таблица.Подразделение      КАК Подразделение,
	|		Таблица.Назначение         КАК Назначение,
	|		Таблица.НазначениеОтправителя КАК НазначениеОтправителя,
	|		Таблица.ЗаказаноОстаток    КАК Заказано,
	|		Таблица.КОформлениюОстаток КАК КОформлению
	|	ИЗ
	|		РегистрНакопления.ЗаказыМатериаловВПроизводство.Остатки(, 
	|//&ОтборПоИзмерениямРегистр
	|			) КАК Таблица
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Таблица.Распоряжение   КАК Распоряжение,
	|		Таблица.Номенклатура   КАК Номенклатура,
	|		Таблица.Характеристика КАК Характеристика,
	|		Таблица.КодСтроки      КАК КодСтроки,
	|		Таблица.Серия          КАК Серия,
	|		Таблица.Склад          КАК Склад,
	|		Таблица.Подразделение  КАК Подразделение,
	|		Таблица.Назначение     КАК Назначение,
	|		Таблица.НазначениеОтправителя КАК НазначениеОтправителя,
	|		Таблица.Заказано       КАК Заказано,
	|		Таблица.КОформлению    КАК КОформлению
	|	ИЗ
	|		РегистрНакопления.ЗаказыМатериаловВПроизводство КАК Таблица
	|	ГДЕ
	|		Активность
	|		И Регистратор = &Регистратор
	|		И ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Расход)
	|//&ОтборПоИзмерениямСторно
	|	) КАК Набор
	|
	|СГРУППИРОВАТЬ ПО
	|	Набор.Распоряжение,
	|	Набор.Номенклатура,
	|	Набор.Характеристика,
	|	Набор.КодСтроки,
	|	Набор.Серия,
	|	Набор.Назначение,
	|	Набор.НазначениеОтправителя
	|
	|//&ИМЕЮЩИЕ";
	
	Если Не ПустаяСтрока(ИмяВременнойТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ПОМЕСТИТЬ", "ПОМЕСТИТЬ " + ИмяВременнойТаблицы);
		ТекстЗапроса = ТекстЗапроса + 
		"
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Распоряжение, КодСтроки";
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборПоИзмерениям) Тогда
		
		ТекстОтбораПоИзмерениям = "";
		
		Для Каждого КлючЗначение Из ОтборПоИзмерениям Цикл
			
			Если КлючЗначение.Ключ = "СписокМатериалов" Тогда
				
				ТекстОтбораПоИзмерениям = 
					ТекстОтбораПоИзмерениям + 
					" И (Номенклатура, Характеристика, Назначение) В
					|	(ВЫБРАТЬ
					|		Таблица.Номенклатура,
					|		Таблица.Характеристика,
					|		Таблица.Назначение
					|	ИЗ
					|		ВтСписокМатериалов КАК Таблица)";
			Иначе
				
				ТекстОтбораПоИзмерениям = 
					ТекстОтбораПоИзмерениям
					+ ?(ПустаяСтрока(ТекстОтбораПоИзмерениям), "", " И ")
					+ КлючЗначение.Ключ
					+ " В(&"
					+ КлючЗначение.Значение
					+ ")";
				
			КонецЕсли;
			
		КонецЦикла;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ОтборПоИзмерениямРегистр", ТекстОтбораПоИзмерениям);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ОтборПоИзмерениямСторно", Символы.ПС + "И " + ТекстОтбораПоИзмерениям);
		
	КонецЕсли;
	
	Если Не ПустаяСтрока(Выражение) Тогда
		
		Если СтрНайти(Выражение, "КОформлению") <> 0 Тогда
			Выражение = СтрЗаменить(Выражение, "КОформлению", "СУММА(Набор.КОформлению)");
		КонецЕсли;
		Если СтрНайти(Выражение, "Заказано") <> 0 Тогда
			Выражение = СтрЗаменить(Выражение, "Заказано", "СУММА(Набор.Заказано)");
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ИМЕЮЩИЕ", "ИМЕЮЩИЕ " + Выражение);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает остаток к оформлению по переданному списку заказов.
//
// Параметры:
//  МассивЗаказов	 - Массив	- Отбор по заказам.
//  Склад			 - СправочникСсылка.Склады	- Отбор по складу.
//  Получатель		 - СправочникСсылка.СтруктураПредприятия, СправочникСсылка.Склады	 - Отбор по получателю.
//  СписокМатериалов - ТаблицаЗначений	- Отбор по списку материалов в разрезе Номенклатура, Характеристика, Назначение.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Содержит остаток к оформлению. Имеет следующие колонки:
//     * Распоряжение          - ДокументСсылка.ЭтапПроизводства2_2, ДокументСсылка.ЗаказНаПроизводство,
//                               ДокументСсылка.ЗаказМатериаловВПроизводство, ДокументСсылка.ДвижениеПродукцииИМатериалов,
//                               ДокументСсылка.ПередачаМатериаловВПроизводство - 
//     * Номенклатура          - СправочникСсылка.Номенклатура - 
//     * Характеристика        - СправочникСсылка.ХарактеристикиНоменклатуры - 
//     * КодСтроки             - Число - 
//     * Серия                 - СправочникСсылка.СерииНоменклатуры - 
//     * Назначение            - СправочникСсылка.Назначения - 
//     * НазначениеОтправителя - СправочникСсылка.Назначения - 
//     * Количество            - Число - 
//
Функция КОформлениюОстатокРМВнутреннееТовародвижение(МассивЗаказов, Склад = Неопределено, Получатель = Неопределено, СписокМатериалов = Неопределено) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	Если СписокМатериалов <> Неопределено Тогда
		Запрос = Новый Запрос();
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("СписокМатериалов", СписокМатериалов.Выгрузить());
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписокМатериалов.Номенклатура КАК Номенклатура,
		|	СписокМатериалов.Характеристика КАК Характеристика,
		|	СписокМатериалов.Назначение КАК Назначение
		|ПОМЕСТИТЬ ВтСписокМатериалов
		|ИЗ
		|	&СписокМатериалов КАК СписокМатериалов
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Назначение";
		Запрос.Выполнить();
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Заказы", МассивЗаказов);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Получатель", Получатель);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОстатки.Распоряжение,
	|	ТаблицаОстатки.Номенклатура,
	|	ТаблицаОстатки.Характеристика,
	|	ТаблицаОстатки.КодСтроки,
	|	ТаблицаОстатки.Серия,
	|	ТаблицаОстатки.Назначение,
	|	ТаблицаОстатки.НазначениеОтправителя,
	|	ТаблицаОстатки.КОформлениюОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.ЗаказыМатериаловВПроизводство.Остатки(
	|			,
	|			Распоряжение В (&Заказы)
	|				И Склад = &Склад
	|				И Получатель = &Получатель
	|				//&Отбор 
	|				) КАК ТаблицаОстатки";
	
	ОтборПоМатериалам = ? (СписокМатериалов = Неопределено, "", 
		" И (Номенклатура, Характеристика, Назначение) В
		|	(ВЫБРАТЬ
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Назначение
		|	ИЗ
		|		ВтСписокМатериалов КАК Таблица)");
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//&Отбор", ОтборПоМатериалам);
	
	КодыСтрокЗаказов = Запрос.Выполнить().Выгрузить();
	
	Возврат КодыСтрокЗаказов;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ЗаказыМатериаловВПроизводство";
	ИмяРегистра = "ЗаказыМатериаловВПроизводство";
	
	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить("Документ.ЗаказМатериаловВПроизводство");
	СписокДокументов.Добавить("Документ.ПередачаМатериаловВПроизводство");
	//++ НЕ УТКА
	СписокДокументов.Добавить("Документ.ЗаказНаПроизводство");
	СписокДокументов.Добавить("Документ.КорректировкаЗаказаМатериаловВПроизводство");
	//-- НЕ УТКА
	
	Для каждого ПолноеИмяДокумента Из СписокДокументов Цикл
		ИмяДокумента = СтрРазделить(ПолноеИмяДокумента, ".")[1];
		ТекстЗапросаМеханизмаПроведения = Документы[ИмяДокумента].АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
		Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
								ТекстЗапросаМеханизмаПроведения,
								ПолноеИмяРегистра,
								ПолноеИмяДокумента);
								
		ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ЗаказМатериаловВПроизводство");
	Регистраторы.Добавить("Документ.ПередачаМатериаловВПроизводство");
	//++ НЕ УТКА
	Регистраторы.Добавить("Документ.ЗаказНаПроизводство");
	Регистраторы.Добавить("Документ.КорректировкаЗаказаМатериаловВПроизводство");
	//-- НЕ УТКА
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(Регистраторы,
	                                                                                  "РегистрНакопления.ЗаказыМатериаловВПроизводство",
	                                                                                  Параметры.Очередь);
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли