#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область СохранениеДвижений

// Добавляет в дополнительные свойства документа служебное свойство,
// в котором сохраняются дата начала и окончания периода,
// за который необходимо сохранить движения из ИБ в записываемый набор записей регистра.
//
Процедура ИнициализироватьСохранениеДвиженийДокументаЗаПериод(ДополнительныеСвойстваДокумента,
			НачалоПериода = Неопределено, КонецПериода = Неопределено) Экспорт
	
	ДополнительныеСвойстваДокумента.Вставить("ДополнитьДвижениямиИзИБЗаПериод", Новый Структура);
	
	ДополнительныеСвойстваДокумента.ДополнитьДвижениямиИзИБЗаПериод.Вставить(
		"НачалоПериода",
		?(ЗначениеЗаполнено(НачалоПериода), НачалоПериода, Дата(1,1,1)));
	
	ДополнительныеСвойстваДокумента.ДополнитьДвижениямиИзИБЗаПериод.Вставить(
		"КонецПериода", 
		?(ЗначениеЗаполнено(КонецПериода),  КонецПериода,  ДобавитьМесяц(КонецМесяца(ТекущаяДатаСеанса()), 12*100)));
	
КонецПроцедуры

Процедура ИнициализироватьСохранениеДвиженийНабораЗаписейЗаПериод(Движение, ДополнительныеСвойстваДокумента) Экспорт
	
	Если ДополнительныеСвойстваДокумента.Свойство("ДополнитьДвижениямиИзИБЗаПериод") Тогда
		
		Движение.ДополнительныеСвойства.Вставить(
			"ДополнитьДвижениямиИзИБЗаПериод",
			ДополнительныеСвойстваДокумента.ДополнитьДвижениямиИзИБЗаПериод);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УТ 11.3.1
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.ПолноеИмя();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Ссылка,
	|	ДанныеРегистра.ДокументДвижения КАК ДокументДвижения
	|ПОМЕСТИТЬ ВтДанныеРегистра
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВтДанныеРегистра.Ссылка
	|	ИЗ
	|		ВтДанныеРегистра КАК ВтДанныеРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК СборкаТоваров
	|		ПО ВтДанныеРегистра.Ссылка = СборкаТоваров.Ссылка
	|			И СборкаТоваров.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК ДвиженияРасчетаСебестоимости
	|		ПО ВтДанныеРегистра.ДокументДвижения = СборкаТоваров.Ссылка
	|			И СборкаТоваров.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	ГДЕ
	|		НЕ СборкаТоваров.Ссылка ЕСТЬ NULL
	|		ИЛИ НЕ ДвиженияРасчетаСебестоимости.Ссылка ЕСТЬ NULL
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Движения.Регистратор КАК Ссылка
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ГДЕ
	|		Движения.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		И Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Движения.Регистратор КАК Ссылка
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ГДЕ
	|		Движения.РазделУчета В (&ЗабалансовыеРазделыУчета)
	|		И (Движения.Стоимость <> 0 ИЛИ Движения.СтоимостьБезНДС <> 0 ИЛИ Движения.СтоимостьРегл <> 0)
	|	
	|	//%ТекстЗапросаНазначения
	|
	//++ НЕ УТКА
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Движения.Регистратор КАК Ссылка
	|	ИЗ
	|		ВТДляДобавленияДвижений КАК Движения
	//-- НЕ УТКА
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Движения.Регистратор КАК Ссылка
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ГДЕ
	|		Движения.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров),
	|											ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет))
	|		И Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Приход)
	|		И НЕ Движения.Количество = 0
	|		ИЛИ Движения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.УдалитьПеремещениеОбособленно)
	|
	//++ НЕ УТКА
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Движения.Регистратор КАК Ссылка
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов КАК ДвижениеПродукцииИМатериалов
	|			ПО ДвижениеПродукцииИМатериалов.Ссылка = Движения.Регистратор
	|	ГДЕ
	|		Движения.ХозяйственнаяОперация В
	|			(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииНаСклад),
	|			 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства),
	|			 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство))
	//-- НЕ УТКА
	|
	//++ НЕ УТ
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Движения.Регистратор КАК Ссылка
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК Движения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВПроизводство КАК ПередачаМатериаловВПроизводство
	|			ПО ПередачаМатериаловВПроизводство.Ссылка = Движения.Регистратор
	|	ГДЕ
	|		Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство)
	//-- НЕ УТ
	|
	|	) КАК Движения
	|";
	
	Если ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов") Тогда
		
		ТекстЗапросаНазначения = "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|";
		
		ТекстЗапросаНазначения = ТекстЗапросаНазначения + "
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Движения.Регистратор КАК Ссылка
		|	ИЗ
		|		РегистрНакопления.СебестоимостьТоваров КАК Движения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|			ПО Движения.ВидЗапасов = ВидыЗапасов.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
		|			ПО Движения.АналитикаУчетаНоменклатуры = Ключи.Ссылка
		|	ГДЕ
		|		ВидыЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		И Ключи.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		И НЕ Ключи.Склад ССЫЛКА Справочник.Партнеры
		|		И НЕ Ключи.Склад ССЫЛКА Справочник.Организации
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Движения.Регистратор КАК Ссылка
		|	ИЗ
		|		РегистрНакопления.СебестоимостьТоваров КАК Движения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|			ПО Движения.ВидЗапасов = ВидыЗапасов.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
		|			ПО Движения.АналитикаУчетаНоменклатуры = Ключи.Ссылка
		|	ГДЕ
		|		ВидыЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		И ВидыЗапасов.УдалитьНазначение = Ключи.Назначение
		|		И (Ключи.Склад ССЫЛКА Справочник.Партнеры
		|			ИЛИ Ключи.Склад ССЫЛКА Справочник.Организации)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Движения.Регистратор КАК Ссылка
		|	ИЗ
		|		РегистрНакопления.СебестоимостьТоваров КАК Движения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
		|			ПО Движения.КорВидЗапасов = КорВидыЗапасов.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорКлючи
		|			ПО Движения.КорАналитикаУчетаНоменклатуры = КорКлючи.Ссылка
		|	ГДЕ
		|		КорВидыЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		И КорКлючи.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		И НЕ КорКлючи.Склад ССЫЛКА Справочник.Партнеры
		|		И НЕ КорКлючи.Склад ССЫЛКА Справочник.Организации
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Движения.Регистратор КАК Ссылка
		|	ИЗ
		|		РегистрНакопления.СебестоимостьТоваров КАК Движения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
		|			ПО Движения.КорВидЗапасов = КорВидыЗапасов.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорКлючи
		|			ПО Движения.КорАналитикаУчетаНоменклатуры = КорКлючи.Ссылка
		|	ГДЕ
		|		КорВидыЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		И КорВидыЗапасов.УдалитьНазначение = КорКлючи.Назначение
		|		И (КорКлючи.Склад ССЫЛКА Справочник.Партнеры
		|			ИЛИ КорКлючи.Склад ССЫЛКА Справочник.Организации)
		|";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//%ТекстЗапросаНазначения", ТекстЗапросаНазначения);
		
	КонецЕсли;
	
	УстановитьПараметрЗапросаОбработчикаОбновления(Запрос);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	//++ НЕ УТКА
	ТаблицаДополненияДвижений(Запрос.МенеджерВременныхТаблиц);
	//-- НЕ УТКА
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы, ДополнительныеПараметры);
	РегистрыНакопления.ПрочиеАктивыПассивы.ЗарегистироватьКОбновлениюУправленческогоБаланса(Параметры, Регистраторы, ДополнительныеПараметры.ПолноеИмяРегистра);
	
	//++ НЕ УТ
	ЗарегистрироватьОбъектыДляЗаменыСсылок(Параметры, ДополнительныеПараметры);
	//-- НЕ УТ
	
КонецПроцедуры

// Обработчик обновления УТ 11.3.1
// - заполняет новый реквизит "Назначение" в справочнике "Ключи аналитики учета номенклатуры" из вида запасов
// - для документов "Возврат товаров между организациями" заменяет хоз.операцию ВозвратОтКомиссионера на ВозвратПоКомиссииМеждуОрганизациями
// - для документов "Сборка товаров" разделяет хоз.операцию СборкаТоваров на две: СборкаТоваров и РазборкаТоваров
//		(приводит в соответствие с хоз. операцией самого документа)
// - выделяет забалансовую стоимость в новые ресурсы регистра
// - Заполняет тип записи партий (Перемещение обособленно) в движениях документов "ПеремещениеТоваров" (вид операции: ВнутренняяПередачаТоваров),
//		"РеализацияТоваровУслуг" (вид операции: РеализацияКлиентуРеглУчет), по РН СебестоимостьТоваров,
//		которые могли быть потеряны из-за дублирования значения перечисления.
//
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров;
	ПолноеИмяРегистра = МетаданныеРегистра.ПолноеИмя();
	
	Метаданные.РегистрыНакопления.СебестоимостьТоваров.СтандартныеРеквизиты.Регистратор.Тип.Типы();
	ИменаЗаблокированныхОбъектов = Новый Массив;
	
	ИменаЗаблокированныхОбъектов.Добавить("Документ.ПрочееОприходованиеТоваров");
	ИменаЗаблокированныхОбъектов.Добавить("Документ.ПеремещениеТоваров");
	ИменаЗаблокированныхОбъектов.Добавить("Документ.ВнутреннееПотреблениеТоваров");
	ИменаЗаблокированныхОбъектов.Добавить("Документ.РеализацияТоваровУслуг");
	ИменаЗаблокированныхОбъектов.Добавить("Документ.СборкаТоваров");
	ИменаЗаблокированныхОбъектов.Добавить("Документ.КорректировкаНазначенияТоваров");
	ИменаЗаблокированныхОбъектов.Добавить("Документ.ПередачаТоваровМеждуОрганизациями");
	ИменаЗаблокированныхОбъектов.Добавить("Документ.ВозвратТоваровМеждуОрганизациями");
	ИменаЗаблокированныхОбъектов.Добавить("Справочник.КлючиАналитикиУчетаНоменклатуры");
	ИменаЗаблокированныхОбъектов.Добавить("Справочник.ВидыЗапасов");
	ИменаЗаблокированныхОбъектов.Добавить("РегистрНакопления.ПартииПроизводственныхЗатрат");
	
	//++ НЕ УТ
	ИменаЗаблокированныхОбъектов.Добавить("Документ.ПередачаМатериаловВПроизводство");
	ИменаЗаблокированныхОбъектов.Добавить("Документ.ВозвратМатериаловИзПроизводства");
	ИменаЗаблокированныхОбъектов.Добавить("Документ.ВыпускПродукции");
	ИменаЗаблокированныхОбъектов.Добавить("РегистрНакопления.ПартииНезавершенногоПроизводства");
	//-- НЕ УТ
	
	//++ НЕ УТКА
	ИменаЗаблокированныхОбъектов.Добавить("Документ.ДвижениеПродукцииИМатериалов");
	ИменаЗаблокированныхОбъектов.Добавить("Документ.ПередачаДавальцу");
	//-- НЕ УТКА
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(
		Параметры.Очередь,
		Неопределено,
		ПолноеИмяРегистра,
		МенеджерВременныхТаблиц);
		
	ДополнительныеПараметрыПроверкиБлокировки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметрыПроверкиБлокировки.ИмяВременнойТаблицы = "ВтЗаблокированныеСсылки";
	ЗаблокированныеСсылки = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияСсылок(
		Параметры.Очередь,
		ИменаЗаблокированныхОбъектов,
		МенеджерВременныхТаблиц,
		ДополнительныеПараметрыПроверкиБлокировки);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СсылкиДляОбработки.Регистратор КАК Регистратор
	|ИЗ
	|	&ВТДляОбработкиСсылка КАК СсылкиДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтЗаблокированныеСсылки
	|		ПО СсылкиДляОбработки.Регистратор = ВтЗаблокированныеСсылки.Ссылка
	|ГДЕ
	|	ВтЗаблокированныеСсылки.Ссылка ЕСТЬ NULL 
	|
	//++ НЕ УТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СсылкиДляОбработки.Регистратор КАК СсылкаНаОбъект,
	|	СебестоимостьТоваров.ДокументДвижения КАК СтараяСсылка,
	|	ЕСТЬNULL(ПередачаМатериаловВПроизводство.Ссылка, ВозвратМатериаловИзПроизводства.Ссылка) КАК НоваяСсылка
	|ИЗ
	|	&ВТДляОбработкиСсылка КАК СсылкиДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
	|		ПО СсылкиДляОбработки.Регистратор = СебестоимостьТоваров.Регистратор
	
	// ВнутреннееПотреблениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК ВнутреннееПотреблениеТоваров
	|		ПО СебестоимостьТоваров.ДокументДвижения = ВнутреннееПотреблениеТоваров.Ссылка
	|			И (ВнутреннееПотреблениеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВПроизводство КАК ПередачаМатериаловВПроизводство
	|		ПО ПередачаМатериаловВПроизводство.Дата = ВнутреннееПотреблениеТоваров.Дата
	|			И ПередачаМатериаловВПроизводство.Номер = ВнутреннееПотреблениеТоваров.Номер
	
	// ПрочееОприходованиеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК ПрочееОприходованиеТоваров
	|		ПО СебестоимостьТоваров.ДокументДвижения = ПрочееОприходованиеТоваров.Ссылка
	|			И (ПрочееОприходованиеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратМатериаловИзПроизводства КАК ВозвратМатериаловИзПроизводства
	|		ПО ВозвратМатериаловИзПроизводства.Дата = ПрочееОприходованиеТоваров.Дата
	|			И ВозвратМатериаловИзПроизводства.Номер = ПрочееОприходованиеТоваров.Номер
	|ГДЕ
	|	(НЕ ПередачаМатериаловВПроизводство.Ссылка ЕСТЬ NULL 
	|			ИЛИ НЕ ВозвратМатериаловИзПроизводства.Ссылка ЕСТЬ NULL )
	//-- НЕ УТ
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДляОбработкиСсылка", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Результат = Запрос.ВыполнитьПакет();
	ТаблицаРегистраторов = Результат[0].Выгрузить();
	//++ НЕ УТ
	ТаблицаЗамены = Результат[1].Выгрузить();
	ТаблицаЗамены.Индексы.Добавить("СсылкаНаОбъект,СтараяСсылка");
	//-- НЕ УТ
	
	Запрос.Текст = ТекстЗапросаОбновленияДвижений();
	
	Для Каждого СтрокаТаблицы Из ТаблицаРегистраторов Цикл
		
		Регистратор = СтрокаТаблицы.Регистратор;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Если ТипЗнч(Регистратор) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
				ЭлементБлокировки = Блокировка.Добавить("Документ.ПеремещениеТоваров");
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Регистратор);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			//++ НЕ УТ
			ИначеЕсли ТипЗнч(Регистратор) = Тип("ДокументСсылка.ПередачаМатериаловВПроизводство") Тогда
				ЭлементБлокировки = Блокировка.Добавить("Документ.ПередачаМатериаловВПроизводство");
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Регистратор);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ИначеЕсли ТипЗнч(Регистратор) = Тип("ДокументСсылка.ВыпускПродукции") Тогда
				ЭлементБлокировки = Блокировка.Добавить("Документ.ВыпускПродукции");
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Регистратор);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				
				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПартииНезавершенногоПроизводства.НаборЗаписей");
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ИначеЕсли ТипЗнч(Регистратор) = Тип("ДокументСсылка.ВозвратМатериаловИзПроизводства") Тогда
				ЭлементБлокировки = Блокировка.Добавить("Документ.ВозвратМатериаловИзПроизводства");
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Регистратор);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;

				ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ПартииПроизводственныхЗатрат.НаборЗаписей");
				ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			//-- НЕ УТ
			//++ НЕ УТКА
			ИначеЕсли ТипЗнч(Регистратор) = Тип("ДокументСсылка.ПередачаДавальцу") Тогда
				ЭлементБлокировки = Блокировка.Добавить("Документ.ПередачаДавальцу");
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Регистратор);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ИначеЕсли ТипЗнч(Регистратор) = Тип("ДокументСсылка.ДвижениеПродукцииИМатериалов") Тогда
				ЭлементБлокировки = Блокировка.Добавить("Документ.ДвижениеПродукцииИМатериалов");
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Регистратор);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			//-- НЕ УТКА
			ИначеЕсли ТипЗнч(Регистратор) = Тип("ДокументСсылка.КорректировкаНазначенияТоваров") Тогда
				ЭлементБлокировки = Блокировка.Добавить("Документ.КорректировкаНазначенияТоваров");
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Регистратор);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ИначеЕсли ТипЗнч(Регистратор) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				ЭлементБлокировки = Блокировка.Добавить("Документ.РеализацияТоваровУслуг");
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Регистратор);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			КонецЕсли;
			
			Блокировка.Заблокировать();
			
			//++ НЕ УТКА
			
			ТаблицаНовыхДвижений = РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей().ВыгрузитьКолонки();
			ТаблицаДополненияДвижений(Запрос.МенеджерВременныхТаблиц, Регистратор.Ссылка);
			Если ТипЗнч(Регистратор.Ссылка) <> Тип("ДокументСсылка.РасчетСебестоимостиТоваров")
				И ТипЗнч(Регистратор.Ссылка) <> Тип("ДокументСсылка.КорректировкаРегистров") 
				И ТипЗнч(Регистратор.Ссылка) <> Тип("ДокументСсылка.ОтчетДавальцу")
				И ТипЗнч(Регистратор.Ссылка) <> Тип("ДокументСсылка.ПрочееОприходованиеТоваров")
				И ТипЗнч(Регистратор.Ссылка) <> Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров")
				И ТипЗнч(Регистратор.Ссылка) <> Тип("ДокументСсылка.СборкаТоваров")
				И ТипЗнч(Регистратор.Ссылка) <> Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями")
				И ТипЗнч(Регистратор.Ссылка) <> Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") Тогда
				
				ДополнитьДвижения(ТаблицаНовыхДвижений, Регистратор.Ссылка);
				
			КонецЕсли;
			Запрос.УстановитьПараметр("ТаблицаНовыхДвижений", ТаблицаНовыхДвижений);
			
			//-- НЕ УТКА
			
			Запрос.УстановитьПараметр("Регистратор", Регистратор);
			Запрос.УстановитьПараметр("ИспользоватьВидыЗапасов", Константы.УчитыватьСебестоимостьТоваровПоВидамЗапасов.Получить());
			УстановитьПараметрЗапросаОбработчикаОбновления(Запрос);
			
			Набор = РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Регистратор);
			
			Результат = Запрос.Выполнить().Выгрузить();
			Если Результат.Количество() = 0 Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Регистратор, ДополнительныеПараметры);
				ЗафиксироватьТранзакцию();
				Продолжить;
			ИначеЕсли Результат[0].КлючиИнициализированы = 0 Тогда
				ТекстСообщения = НСтр("ru = 'есть необновленные ключи. Необходимо перепровести документ вручную.'");
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
			
			Набор.Загрузить(Результат);
			
			//++ НЕ УТ
			СписокПараметровВыборки = Новый Массив;
			ПараметрыВыборки = ПараметрыВыборкиСвязанныхДанных(
				"РегистрНакопления.СебестоимостьТоваров.Реквизит.ДокументДвижения");
			СписокПараметровВыборки.Добавить(ПараметрыВыборки);
			
			ЗаменитьСсылкиВКоллекции(
					Регистратор, 
					СписокПараметровВыборки, 
					ТаблицаЗамены, 
					Набор);
			//-- НЕ УТ
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				Регистратор.Метаданные(), ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаОбработчикаОбновления(Запрос)
	
	ЗабалансовыеРазделыУчета = Новый Массив;
	ЗабалансовыеРазделыУчета.Добавить(Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию);
	ЗабалансовыеРазделыУчета.Добавить(Перечисления.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку);
	
	Запрос.УстановитьПараметр("ЗабалансовыеРазделыУчета", ЗабалансовыеРазделыУчета);
	Запрос.УстановитьПараметр("ИспользоватьВидыЗапасов",  ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	
КонецПроцедуры

//++ НЕ УТКА

Процедура ТаблицаДополненияДвижений(МенеджерВременныхТаблиц, Регистратор = Неопределено)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Док.Ссылка КАК Регистратор
	|ПОМЕСТИТЬ ВТДляДобавленияДвижений
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Док
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ПО ТаблицаВидыЗапасов.Ссылка = Док.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ПО Док.Ссылка = Движения.Регистратор
	|		И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|ГДЕ
	|	Док.Проведен
	|	И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|	И Движения.Регистратор ЕСТЬ NULL
	|	//%УсловиеОтбора%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Док.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.ПередачаМатериаловВПроизводство КАК Док
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВПроизводство.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ПО ТаблицаВидыЗапасов.Ссылка = Док.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ПО Док.Ссылка = Движения.Регистратор
	|		И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|ГДЕ
	|	Док.Проведен
	|	И (ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|		ИЛИ ТаблицаВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
	|	И Движения.Регистратор ЕСТЬ NULL
	|	//%УсловиеОтбора%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Док.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.ПередачаДавальцу КАК Док
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ПО Док.Ссылка = Движения.Регистратор
	|		И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|ГДЕ
	|	Док.Проведен
	|	И Движения.Регистратор ЕСТЬ NULL
	|	//%УсловиеОтбора%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Док.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.ОтчетДавальцу КАК Док
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииНезавершенногоПроизводства КАК Партии
	|	ПО Док.Ссылка = Партии.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Движения
	|		ПО Партии.Регистратор = Движения.Регистратор
	|		И Партии.АналитикаУчетаНоменклатуры = Движения.АналитикаУчетаНоменклатуры
	|		И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|ГДЕ
	|	Док.Проведен
	|	И Движения.Регистратор ЕСТЬ NULL
	|	//%УсловиеОтбора%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Док.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.КорректировкаНазначенияТоваров КАК Док
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаНазначенияТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ПО ТаблицаВидыЗапасов.Ссылка = Док.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ПО Док.Ссылка = Движения.Регистратор
	|		И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|ГДЕ
	|	Док.Проведен
	|	И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|	И Движения.Регистратор ЕСТЬ NULL
	|	//%УсловиеОтбора%
	| 
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Док.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.ВыпускПродукции КАК Док
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыпускПродукции.Товары КАК ТаблицаТовары
	|	ПО ТаблицаТовары.Ссылка = Док.Ссылка
	|		И ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ПО Док.Ссылка = Движения.Регистратор
	|		И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|ГДЕ
	|	Док.Проведен
	|	И Движения.Регистратор ЕСТЬ NULL
	|	//%УсловиеОтбора%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Док.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.ВозвратМатериаловИзПроизводства КАК Док
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииПроизводственныхЗатрат КАК Партии
	|	ПО Партии.Регистратор = Док.Ссылка
	|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И Партии.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Движения
	|	ПО Док.Ссылка = Движения.Регистратор
	|		И Движения.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|ГДЕ
	|	Док.Проведен
	|	И Движения.Регистратор ЕСТЬ NULL
	|	//%УсловиеОтбора%
	|");
	
	Если Регистратор <> Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "//%УсловиеОтбора%", "И Док.Ссылка = &Регистратор");
		Запрос.УстановитьПараметр("Регистратор", Регистратор);
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
КонецПроцедуры

Процедура ДополнитьДвижения(ТаблицаНовыхДвижений, Ссылка)
	
	ИмяРегистра = "СебестоимостьТоваров";
	ДопСвойства = Новый Структура("ЭтоНовый, РежимЗаписи", Ложь, РежимЗаписиДокумента.Проведение);
	
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДопСвойства, РежимПроведенияДокумента.Неоперативный);
	Документы[ДопСвойства.ДляПроведения.МетаданныеДокумента.Имя].ИнициализироватьДанныеДокумента(Ссылка, ДопСвойства, ИмяРегистра);
	
	Если Не ДопСвойства.ТаблицыДляДвижений.Свойство("Таблица"+ИмяРегистра) Тогда
		Возврат;
	КонецЕсли;
	
	Таблица = ДопСвойства.ТаблицыДляДвижений["Таблица"+ИмяРегистра];
	
	Отбор = Новый Структура("РазделУчета", Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение);
	Строки = Таблица.НайтиСтроки(Отбор);
	Для Каждого ТекущаяСтрока Из Строки Цикл
		Если ТекущаяСтрока.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение Тогда
			НоваяСтрока = ТаблицаНовыхДвижений.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			НоваяСтрока.Регистратор = Ссылка;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//-- НЕ УТКА

Функция ТекстЗапросаОбновленияДвижений()
	
	Возврат "
	//++ НЕ УТКА
	|ВЫБРАТЬ
	|	Таблица.Регистратор            								КАК Регистратор,
	|	Таблица.Период                 								КАК Период,
	|	Таблица.ВидДвижения            								КАК ВидДвижения,
	|	Таблица.АналитикаУчетаНоменклатуры							КАК АналитикаУчетаНоменклатуры,
	|	Таблица.РазделУчета                   						КАК РазделУчета,
	|	Таблица.ВидЗапасов                    						КАК ВидЗапасов,
	|	Таблица.Организация                   						КАК Организация,
	|	Таблица.Партия                   							КАК Партия,
	|	Таблица.АналитикаУчетаПартий                   				КАК АналитикаУчетаПартий,
	|	Таблица.АналитикаФинансовогоУчета                   		КАК АналитикаФинансовогоУчета,
	|	Таблица.ВидДеятельностиНДС                   				КАК ВидДеятельностиНДС,
	|
	|	Таблица.Количество             								КАК Количество,
	|	Таблица.Стоимость											КАК Стоимость,
	|	Таблица.СтоимостьБезНДС										КАК СтоимостьБезНДС,
	|	Таблица.СтоимостьЗабалансовая								КАК СтоимостьЗабалансовая,
	|	Таблица.СуммаДопРасходов       								КАК СуммаДопРасходов,
	|	Таблица.СуммаДопРасходовБезНДС 								КАК СуммаДопРасходовБезНДС,
	|	Таблица.Трудозатраты 										КАК Трудозатраты,
	|	Таблица.ПостатейныеСНДС 									КАК ПостатейныеСНДС,
	|	Таблица.ПостатейныеБезНДС 									КАК ПостатейныеБезНДС,
	|	Таблица.СтоимостьРегл										КАК СтоимостьРегл,
	|	Таблица.СтоимостьЗабалансоваяРегл							КАК СтоимостьЗабалансоваяРегл,
	|	Таблица.ДопРасходыРегл 										КАК ДопРасходыРегл,
	|	Таблица.ТрудозатратыРегл 									КАК ТрудозатратыРегл,
	|	Таблица.ПостатейныеРегл 									КАК ПостатейныеРегл,
	|	Таблица.ПостояннаяРазница      								КАК ПостояннаяРазница,
	|	Таблица.ВременнаяРазница       								КАК ВременнаяРазница,
	|
	|	Таблица.ХозяйственнаяОперация      							КАК ХозяйственнаяОперация,
	|	Таблица.КорАналитикаУчетаНоменклатуры						КАК КорАналитикаУчетаНоменклатуры,
	|	Таблица.КорРазделУчета                						КАК КорРазделУчета,
	|	Таблица.КорВидЗапасов                 						КАК КорВидЗапасов,
	|	Таблица.КорОрганизация                						КАК КорОрганизация,
	|	Таблица.КорСтоимость                  						КАК КорСтоимость,
	|	Таблица.АналитикаУчетаПоПартнерам     						КАК АналитикаУчетаПоПартнерам,
	|	Таблица.ЗаказКлиента                  						КАК ЗаказКлиента,
	|	Таблица.Подразделение                 						КАК Подразделение,
	|	Таблица.АналитикаРасходов             						КАК АналитикаРасходов,
	|	Таблица.СтатьяРасходовСписания        						КАК СтатьяРасходовСписания,
	|	Таблица.СтатьяДоходов                 						КАК СтатьяДоходов,
	|	Таблица.АналитикаДоходов              						КАК АналитикаДоходов,
	|	Таблица.ПериодПродажи                 						КАК ПериодПродажи,
	|	Таблица.СтатьяАктивовПассивов         						КАК СтатьяАктивовПассивов,
	|	Таблица.АналитикаАктивовПассивов      						КАК АналитикаАктивовПассивов,
	|	Таблица.ДокументДвижения              						КАК ДокументДвижения,
	|	Таблица.ИдентификаторСтроки           						КАК ИдентификаторСтроки,
	|	Таблица.ГруппаПродукции               						КАК ГруппаПродукции,
	|	Таблица.РасчетПартий           	  							КАК РасчетПартий,
	|	Таблица.РасчетСебестоимости           						КАК РасчетСебестоимости,
	|	Таблица.КорПартия           		   						КАК КорПартия,
	|	Таблица.КорАналитикаУчетаПартий       						КАК КорАналитикаУчетаПартий,
	|	Таблица.КорАналитикаФинансовогоУчета  						КАК КорАналитикаФинансовогоУчета,
	|	Таблица.КорВидДеятельностиНДС         						КАК КорВидДеятельностиНДС,
	|	Таблица.НДСРегл           			   						КАК НДСРегл,
	|	Таблица.СтатьяКалькуляции             						КАК СтатьяКалькуляции,
	|	Таблица.ТипЗаписи           		   						КАК ТипЗаписи,
	|	Таблица.ДокументИсточник              						КАК ДокументИсточник
	|ПОМЕСТИТЬ ТаблицаНовыхДвижений
	|ИЗ
	|	&ТаблицаНовыхДвижений КАК Таблица
	|;
	|//////////////////////////////////////////////////////////
	// Для документов "Отчет давальцу" и "Возврат материалов из производства"
	// расходные движения по продукции давальца не формируются при проведении документа,
	// а формируются офлайн, при восстановлении партионного учета.
	// Поэтому данные для них берем из регистров партий.
	|ВЫБРАТЬ
	|	Движения.Период КАК Период,
	|	Движения.Регистратор КАК Регистратор,
	|	Движения.ВидДвижения КАК ВидДвижения,
	|	Движения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение) КАК РазделУчета,
	|	ВЫБОР КОГДА &ИспользоватьВидыЗапасов
	|		ТОГДА Движения.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	Движения.Организация КАК Организация,
	|	СУММА(Движения.Количество) КАК Количество,
	|	СУММА(Движения.Стоимость) КАК Стоимость,
	|	СУММА(Движения.СтоимостьБезНДС) КАК СтоимостьБезНДС,
	|	СУММА(Движения.СтоимостьРегл) КАК СтоимостьРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) КАК ХозяйственнаяОперация
	|ПОМЕСТИТЬ ОфлайновыеДвижения
	|ИЗ
	|	ВТДляДобавленияДвижений КАК Таблица
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииНезавершенногоПроизводства КАК Движения
	|	ПО Движения.Регистратор = Таблица.Регистратор
	|ГДЕ
	|	Движения.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|	И Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Движения.Регистратор ССЫЛКА Документ.ОтчетДавальцу
	|
	|СГРУППИРОВАТЬ ПО
	|	Движения.Период,
	|	Движения.Регистратор,
	|	Движения.ВидДвижения,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение),
	|	ВЫБОР КОГДА &ИспользоватьВидыЗапасов
	|		ТОГДА Движения.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	Движения.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Движения.Период КАК Период,
	|	Движения.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Движения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение) КАК РазделУчета,
	|	ВЫБОР КОГДА &ИспользоватьВидыЗапасов
	|		ТОГДА Движения.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	Движения.Организация КАК Организация,
	|	-СУММА(Движения.Количество) КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВТДляДобавленияДвижений КАК Таблица
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииПроизводственныхЗатрат КАК Движения
	|	ПО Движения.Регистратор = Таблица.Регистратор
	|ГДЕ
	|	Движения.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|	И Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Движения.Регистратор ССЫЛКА Документ.ВозвратМатериаловИзПроизводства
	|	И Движения.Количество < 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Движения.Период,
	|	Движения.Регистратор,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА &ИспользоватьВидыЗапасов
	|		ТОГДА Движения.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	Движения.Организация
	|;
	|//////////////////////////////////////////////////////////
	//-- НЕ УТКА
	|ВЫБРАТЬ
	|	Движения.Регистратор            								КАК Регистратор,
	|	Движения.Период                 								КАК Период,
	|	Движения.ВидДвижения            								КАК ВидДвижения,
	|	ВЫБОР КОГДА &ИспользоватьВидыЗапасов
	|		И НЕ Аналитика.КлючАналитики ЕСТЬ NULL
	|		И НЕ ВидыЗапасовДвижений.Ссылка ЕСТЬ NULL
	|		И ВидыЗапасовДвижений.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И ВидыЗапасовДвижений.УдалитьНазначение <> Ключи.Назначение
	|		И НЕ Ключи.Склад ССЫЛКА Справочник.Партнеры
	|		И НЕ Ключи.Склад ССЫЛКА Справочник.Организации
	|		ТОГДА Аналитика.КлючАналитики
	|	КОГДА &ИспользоватьВидыЗапасов
	|		И НЕ АналитикаБезНазначения.КлючАналитики ЕСТЬ NULL
	|		И НЕ ВидыЗапасовДвижений.Ссылка ЕСТЬ NULL
	|		И ВидыЗапасовДвижений.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И ВидыЗапасовДвижений.УдалитьНазначение = Ключи.Назначение
	|		И (Ключи.Склад ССЫЛКА Справочник.Партнеры
	|			ИЛИ Ключи.Склад ССЫЛКА Справочник.Организации)
	|		ТОГДА АналитикаБезНазначения.КлючАналитики 
	|		ИНАЧЕ Движения.АналитикаУчетаНоменклатуры
	|	КОНЕЦ                                  							КАК АналитикаУчетаНоменклатуры,
	|	Движения.РазделУчета                   							КАК РазделУчета,
	|	Движения.ВидЗапасов                    							КАК ВидЗапасов,
	|	Движения.Организация                   							КАК Организация,
	|	Движения.Партия                   								КАК Партия,
	|	Движения.АналитикаУчетаПартий                   				КАК АналитикаУчетаПартий,
	|	Движения.АналитикаФинансовогоУчета                   			КАК АналитикаФинансовогоУчета,
	|	Движения.ВидДеятельностиНДС                   					КАК ВидДеятельностиНДС,
	|
	|	Движения.Количество             								КАК Количество,
	|	ВЫБОР КОГДА Движения.РазделУчета В (&ЗабалансовыеРазделыУчета)
	|		ТОГДА 0
	|		ИНАЧЕ Движения.Стоимость
	|	КОНЕЦ 															КАК Стоимость,
	|	ВЫБОР КОГДА Движения.РазделУчета В (&ЗабалансовыеРазделыУчета)
	|		ТОГДА 0
	|		ИНАЧЕ Движения.СтоимостьБезНДС
	|	КОНЕЦ 															КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА Движения.РазделУчета В (&ЗабалансовыеРазделыУчета)
	|		 И Движения.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|		 И Движения.Количество <> 0
	|			ТОГДА 0
	|		КОГДА Движения.РазделУчета В (&ЗабалансовыеРазделыУчета)
	|		 И Движения.Стоимость <> 0
	|		 И Движения.СтоимостьЗабалансовая = 0
	|			ТОГДА Движения.Стоимость
	|		ИНАЧЕ Движения.СтоимостьЗабалансовая
	|	КОНЕЦ 															КАК СтоимостьЗабалансовая,
	|	Движения.СуммаДопРасходов       								КАК СуммаДопРасходов,
	|	Движения.СуммаДопРасходовБезНДС 								КАК СуммаДопРасходовБезНДС,
	|	Движения.Трудозатраты 											КАК Трудозатраты,
	|	Движения.ПостатейныеСНДС 										КАК ПостатейныеСНДС,
	|	Движения.ПостатейныеБезНДС 										КАК ПостатейныеБезНДС,
	|	ВЫБОР КОГДА Движения.РазделУчета В (&ЗабалансовыеРазделыУчета)
	|		ТОГДА 0
	|		ИНАЧЕ Движения.СтоимостьРегл
	|	КОНЕЦ 															КАК СтоимостьРегл,
	|	ВЫБОР КОГДА Движения.РазделУчета В (&ЗабалансовыеРазделыУчета)
	|	 И Движения.СтоимостьРегл <> 0
	|	 И Движения.СтоимостьЗабалансоваяРегл = 0
	|		ТОГДА Движения.СтоимостьРегл
	|		ИНАЧЕ Движения.СтоимостьЗабалансоваяРегл
	|	КОНЕЦ 															КАК СтоимостьЗабалансоваяРегл,
	|	Движения.ДопРасходыРегл 										КАК ДопРасходыРегл,
	|	Движения.ТрудозатратыРегл 										КАК ТрудозатратыРегл,
	|	Движения.ПостатейныеРегл 										КАК ПостатейныеРегл,
	|	Движения.ПостояннаяРазница      								КАК ПостояннаяРазница,
	|	Движения.ВременнаяРазница       								КАК ВременнаяРазница,
	|
	|	ВЫБОР КОГДА Движения.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|	 И Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
	|	КОГДА Движения.Регистратор ССЫЛКА Документ.СборкаТоваров
	|		ТОГДА СборкаТоваров.ХозяйственнаяОперация
	|	КОГДА Движения.ДокументДвижения ССЫЛКА Документ.СборкаТоваров
	|		ТОГДА Источник.ХозяйственнаяОперация
	//++ НЕ УТКА
	|	КОГДА Движения.Регистратор ССЫЛКА Документ.ДвижениеПродукцииИМатериалов
	|		ТОГДА ДвижениеПродукцииИМатериалов.ХозяйственнаяОперация
	//-- НЕ УТКА
	//++ НЕ УТ
	|	КОГДА НЕ ПередачаМатериаловВПроизводство.ХозяйственнаяОперация ЕСТЬ NULL ТОГДА
	|		ПередачаМатериаловВПроизводство.ХозяйственнаяОперация
	//-- НЕ УТ
	|		ИНАЧЕ Движения.ХозяйственнаяОперация
	|	КОНЕЦ                                  							КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА &ИспользоватьВидыЗапасов
	|		И НЕ КорАналитика.КлючАналитики ЕСТЬ NULL
	|		И НЕ КорВидыЗапасов.Ссылка ЕСТЬ NULL
	|		И КорВидыЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И КорВидыЗапасов.УдалитьНазначение <> КорКлючи.Назначение
	|		И НЕ КорКлючи.Склад ССЫЛКА Справочник.Партнеры
	|		И НЕ КорКлючи.Склад ССЫЛКА Справочник.Организации
	|		ТОГДА КорАналитика.КлючАналитики
	|	КОГДА &ИспользоватьВидыЗапасов
	|		И НЕ КорАналитикаБезНазначения.КлючАналитики ЕСТЬ NULL
	|		И НЕ КорВидыЗапасов.Ссылка ЕСТЬ NULL
	|		И КорВидыЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И КорВидыЗапасов.УдалитьНазначение = КорКлючи.Назначение
	|		И (КорКлючи.Склад ССЫЛКА Справочник.Партнеры
	|			ИЛИ КорКлючи.Склад ССЫЛКА Справочник.Организации)
	|		ТОГДА КорАналитикаБезНазначения.КлючАналитики
	|		ИНАЧЕ Движения.КорАналитикаУчетаНоменклатуры
	|	КОНЕЦ                                  							КАК КорАналитикаУчетаНоменклатуры,
	|	Движения.КорРазделУчета                							КАК КорРазделУчета,
	|	Движения.КорВидЗапасов                 							КАК КорВидЗапасов,
	|	Движения.КорОрганизация                							КАК КорОрганизация,
	|	Движения.КорСтоимость                  							КАК КорСтоимость,
	|	Движения.АналитикаУчетаПоПартнерам     							КАК АналитикаУчетаПоПартнерам,
	|	Движения.ЗаказКлиента                  							КАК ЗаказКлиента,
	|	Движения.Подразделение                 							КАК Подразделение,
	|	Движения.АналитикаРасходов             							КАК АналитикаРасходов,
	|	Движения.СтатьяРасходовСписания        							КАК СтатьяРасходовСписания,
	|	Движения.СтатьяДоходов                 							КАК СтатьяДоходов,
	|	Движения.АналитикаДоходов              							КАК АналитикаДоходов,
	|	Движения.ПериодПродажи                 							КАК ПериодПродажи,
	|	Движения.СтатьяАктивовПассивов         							КАК СтатьяАктивовПассивов,
	|	Движения.АналитикаАктивовПассивов      							КАК АналитикаАктивовПассивов,
	|	Движения.ДокументДвижения              							КАК ДокументДвижения,
	|	Движения.ИдентификаторСтроки           							КАК ИдентификаторСтроки,
	|	Движения.ГруппаПродукции               							КАК ГруппаПродукции,
	|	Движения.РасчетПартий           	  							КАК РасчетПартий,
	|	Движения.РасчетСебестоимости           							КАК РасчетСебестоимости,
	|	Движения.КорПартия           		   							КАК КорПартия,
	|	Движения.КорАналитикаУчетаПартий       							КАК КорАналитикаУчетаПартий,
	|	Движения.КорАналитикаФинансовогоУчета  							КАК КорАналитикаФинансовогоУчета,
	|	Движения.КорВидДеятельностиНДС         							КАК КорВидДеятельностиНДС,
	|	Движения.НДСРегл           			   							КАК НДСРегл,
	|	Движения.СтатьяКалькуляции             							КАК СтатьяКалькуляции,
	|	ВЫБОР
	|		КОГДА Движения.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров),
	|												ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет))
	|				И Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Приход)
	|				И НЕ Движения.Количество = 0
	|				ИЛИ Движения.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.УдалитьПеремещениеОбособленно)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПеремещениеОбособленно)
	|		ИНАЧЕ Движения.ТипЗаписи
	|	КОНЕЦ															КАК ТипЗаписи,
	|	Движения.ДокументИсточник              							КАК ДокументИсточник,
	|
	|	ВЫБОР
	|		КОГДА (Аналитика.КлючАналитики ЕСТЬ NULL
	|			И &ИспользоватьВидыЗапасов
	|			И НЕ ВидыЗапасовДвижений.Ссылка ЕСТЬ NULL
	|			И ВидыЗапасовДвижений.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И Ключи.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И НЕ Ключи.Склад ССЫЛКА Справочник.Партнеры
	|			И НЕ Ключи.Склад ССЫЛКА Справочник.Организации)
	|		ИЛИ (КорАналитика.КлючАналитики ЕСТЬ NULL
	|			И Движения.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|			И &ИспользоватьВидыЗапасов
	|			И НЕ КорВидыЗапасов.Ссылка ЕСТЬ NULL
	|			И КорВидыЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И КорКлючи.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И НЕ КорКлючи.Склад ССЫЛКА Справочник.Партнеры
	|			И НЕ КорКлючи.Склад ССЫЛКА Справочник.Организации)
	|		ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КлючиИнициализированы
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Движения
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовДвижений
	|	ПО Движения.ВидЗапасов = ВидыЗапасовДвижений.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|	ПО Движения.КорВидЗапасов = КорВидыЗапасов.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|	ПО Ключи.Ссылка = Движения.АналитикаУчетаНоменклатуры
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Ключи.Номенклатура = Аналитика.Номенклатура
	|		И Ключи.Характеристика = Аналитика.Характеристика
	|		И Ключи.Серия = Аналитика.Серия
	|		И Ключи.Склад = Аналитика.Склад
	|		И ЕСТЬNULL(ВидыЗапасовДвижений.УдалитьНазначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) = Аналитика.Назначение
	//++ НЕ УТ
	|		И Ключи.СтатьяКалькуляции = Аналитика.СтатьяКалькуляции
	//-- НЕ УТ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|	ПО Ключи.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Ключи.Характеристика = АналитикаБезНазначения.Характеристика
	|		И Ключи.Серия = АналитикаБезНазначения.Серия
	|		И Ключи.Склад = АналитикаБезНазначения.Склад
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаБезНазначения.Назначение
	//++ НЕ УТ
	|		И Ключи.СтатьяКалькуляции = АналитикаБезНазначения.СтатьяКалькуляции
	//-- НЕ УТ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорКлючи
	|	ПО КорКлючи.Ссылка = Движения.КорАналитикаУчетаНоменклатуры
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КорАналитика
	|	ПО КорКлючи.Номенклатура = КорАналитика.Номенклатура
	|		И КорКлючи.Характеристика = КорАналитика.Характеристика
	|		И КорКлючи.Серия = КорАналитика.Серия
	|		И КорКлючи.Склад = КорАналитика.Склад
	|		И ЕСТЬNULL(КорВидыЗапасов.УдалитьНазначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) = КорАналитика.Назначение
	//++ НЕ УТ
	|		И КорКлючи.СтатьяКалькуляции = КорАналитика.СтатьяКалькуляции
	//-- НЕ УТ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КорАналитикаБезНазначения
	|	ПО КорКлючи.Номенклатура = КорАналитикаБезНазначения.Номенклатура
	|		И КорКлючи.Характеристика = КорАналитикаБезНазначения.Характеристика
	|		И КорКлючи.Серия = КорАналитикаБезНазначения.Серия
	|		И КорКлючи.Склад = КорАналитикаБезНазначения.Склад
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = КорАналитикаБезНазначения.Назначение
	//++ НЕ УТ
	|		И КорКлючи.СтатьяКалькуляции = КорАналитикаБезНазначения.СтатьяКалькуляции
	//-- НЕ УТ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК СборкаТоваров
	|	ПО Движения.Регистратор = СборкаТоваров.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Источник
	|	ПО Движения.ДокументДвижения = Источник.Ссылка
	|	
	//++ НЕ УТКА
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДвижениеПродукцииИМатериалов КАК ДвижениеПродукцииИМатериалов
	|	ПО Движения.Регистратор = ДвижениеПродукцииИМатериалов.Ссылка
	//-- НЕ УТКА
	|
//++ НЕ УТ
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВПроизводство КАК ПередачаМатериаловВПроизводство
	|	ПО Движения.Регистратор = ПередачаМатериаловВПроизводство.Ссылка
//-- НЕ УТ
	|
	|ГДЕ
	|	Движения.Регистратор = &Регистратор
	//++ НЕ УТКА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.Регистратор            								КАК Регистратор,
	|	Таблица.Период                 								КАК Период,
	|	Таблица.ВидДвижения            								КАК ВидДвижения,
	|	Таблица.АналитикаУчетаНоменклатуры							КАК АналитикаУчетаНоменклатуры,
	|	Таблица.РазделУчета                   						КАК РазделУчета,
	|	Таблица.ВидЗапасов                    						КАК ВидЗапасов,
	|	Таблица.Организация                   						КАК Организация,
	|	Таблица.Партия                   							КАК Партия,
	|	Таблица.АналитикаУчетаПартий                   				КАК АналитикаУчетаПартий,
	|	Таблица.АналитикаФинансовогоУчета                   		КАК АналитикаФинансовогоУчета,
	|	Таблица.ВидДеятельностиНДС                   				КАК ВидДеятельностиНДС,
	|
	|	Таблица.Количество             								КАК Количество,
	|	Таблица.Стоимость											КАК Стоимость,
	|	Таблица.СтоимостьБезНДС										КАК СтоимостьБезНДС,
	|	Таблица.СтоимостьЗабалансовая								КАК СтоимостьЗабалансовая,
	|	Таблица.СуммаДопРасходов       								КАК СуммаДопРасходов,
	|	Таблица.СуммаДопРасходовБезНДС 								КАК СуммаДопРасходовБезНДС,
	|	Таблица.Трудозатраты 										КАК Трудозатраты,
	|	Таблица.ПостатейныеСНДС 									КАК ПостатейныеСНДС,
	|	Таблица.ПостатейныеБезНДС 									КАК ПостатейныеБезНДС,
	|	Таблица.СтоимостьРегл										КАК СтоимостьРегл,
	|	Таблица.СтоимостьЗабалансоваяРегл							КАК СтоимостьЗабалансоваяРегл,
	|	Таблица.ДопРасходыРегл 										КАК ДопРасходыРегл,
	|	Таблица.ТрудозатратыРегл 									КАК ТрудозатратыРегл,
	|	Таблица.ПостатейныеРегл 									КАК ПостатейныеРегл,
	|	Таблица.ПостояннаяРазница      								КАК ПостояннаяРазница,
	|	Таблица.ВременнаяРазница       								КАК ВременнаяРазница,
	|
	|	Таблица.ХозяйственнаяОперация      							КАК ХозяйственнаяОперация,
	|	Таблица.КорАналитикаУчетаНоменклатуры						КАК КорАналитикаУчетаНоменклатуры,
	|	Таблица.КорРазделУчета                						КАК КорРазделУчета,
	|	Таблица.КорВидЗапасов                 						КАК КорВидЗапасов,
	|	Таблица.КорОрганизация                						КАК КорОрганизация,
	|	Таблица.КорСтоимость                  						КАК КорСтоимость,
	|	Таблица.АналитикаУчетаПоПартнерам     						КАК АналитикаУчетаПоПартнерам,
	|	Таблица.ЗаказКлиента                  						КАК ЗаказКлиента,
	|	Таблица.Подразделение                 						КАК Подразделение,
	|	Таблица.АналитикаРасходов             						КАК АналитикаРасходов,
	|	Таблица.СтатьяРасходовСписания        						КАК СтатьяРасходовСписания,
	|	Таблица.СтатьяДоходов                 						КАК СтатьяДоходов,
	|	Таблица.АналитикаДоходов              						КАК АналитикаДоходов,
	|	Таблица.ПериодПродажи                 						КАК ПериодПродажи,
	|	Таблица.СтатьяАктивовПассивов         						КАК СтатьяАктивовПассивов,
	|	Таблица.АналитикаАктивовПассивов      						КАК АналитикаАктивовПассивов,
	|	Таблица.ДокументДвижения              						КАК ДокументДвижения,
	|	Таблица.ИдентификаторСтроки           						КАК ИдентификаторСтроки,
	|	Таблица.ГруппаПродукции               						КАК ГруппаПродукции,
	|	ЛОЖЬ				           	  							КАК РасчетПартий,
	|	ЛОЖЬ						           						КАК РасчетСебестоимости,
	|	Таблица.КорПартия           		   						КАК КорПартия,
	|	Таблица.КорАналитикаУчетаПартий       						КАК КорАналитикаУчетаПартий,
	|	Таблица.КорАналитикаФинансовогоУчета  						КАК КорАналитикаФинансовогоУчета,
	|	Таблица.КорВидДеятельностиНДС         						КАК КорВидДеятельностиНДС,
	|	Таблица.НДСРегл           			   						КАК НДСРегл,
	|	Таблица.СтатьяКалькуляции             						КАК СтатьяКалькуляции,
	|	ВЫБОР
	|		КОГДА Таблица.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров),
	|												ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет))
	|				И Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Приход)
	|				И НЕ Таблица.Количество = 0
	|				ИЛИ Таблица.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.УдалитьПеремещениеОбособленно)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПеремещениеОбособленно)
	|		ИНАЧЕ Таблица.ТипЗаписи
	|	КОНЕЦ														КАК ТипЗаписи,
	|	Таблица.ДокументИсточник              						КАК ДокументИсточник,
	|
	|	ВЫБОР КОГДА (Таблица.АналитикаУчетаНоменклатуры ЕСТЬ NULL И &ИспользоватьВидыЗапасов И Таблица.ВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
	|		ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КлючиИнициализированы
	|ИЗ
	|	ТаблицаНовыхДвижений КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляДобавленияДвижений КАК ВТДляДобавленияДвижений
	|	ПО Таблица.Регистратор = ВТДляДобавленияДвижений.Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Партии.Регистратор            								КАК Регистратор,
	|	Партии.Период                 								КАК Период,
	|	Партии.ВидДвижения            								КАК ВидДвижения,
	|	Партии.АналитикаУчетаНоменклатуры							КАК АналитикаУчетаНоменклатуры,
	|	Партии.РазделУчета                   						КАК РазделУчета,
	|	Партии.ВидЗапасов                    						КАК ВидЗапасов,
	|	Партии.Организация                   						КАК Организация,
	|	НЕОПРЕДЕЛЕНО                     							КАК Партия,
	|	НЕОПРЕДЕЛЕНО                                 				КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО						                   		КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО                                 				КАК ВидДеятельностиНДС,
	|
	|	Партии.Количество             								КАК Количество,
	|	Партии.Стоимость 											КАК Стоимость,
	|	Партии.СтоимостьБезНДС										КАК СтоимостьБезНДС,
	|	0															КАК СтоимостьЗабалансовая,
	|	0						       								КАК СуммаДопРасходов,
	|	0							 								КАК СуммаДопРасходовБезНДС,
	|	0															КАК Трудозатраты,
	|	0						 									КАК ПостатейныеСНДС,
	|	0						 									КАК ПостатейныеБезНДС,
	|	Партии.СтоимостьРегл										КАК СтоимостьРегл,
	|	0															КАК СтоимостьЗабалансоваяРегл,
	|	0					 										КАК ДопРасходыРегл,
	|	0						 									КАК ТрудозатратыРегл,
	|	0						 									КАК ПостатейныеРегл,
	|	0						      								КАК ПостояннаяРазница,
	|	0						       								КАК ВременнаяРазница,
	|
	|	Партии.ХозяйственнаяОперация     							КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО												КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО		                						КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО		                 						КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО		                						КАК КорОрганизация,
	|	0					                  						КАК КорСтоимость,
	|	НЕОПРЕДЕЛЕНО					     						КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО		                  						КАК ЗаказКлиента,
	|	НЕОПРЕДЕЛЕНО		                 						КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО			             						КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО				        						КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО		                 						КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО			              						КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО		                 						КАК ПериодПродажи,
	|	НЕОПРЕДЕЛЕНО				         						КАК СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО					      						КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО			              						КАК ДокументДвижения,
	|	НЕОПРЕДЕЛЕНО				           						КАК ИдентификаторСтроки,
	|	НЕОПРЕДЕЛЕНО			               						КАК ГруппаПродукции,
	|	ИСТИНА				           	  							КАК РасчетПартий,
	|	ЛОЖЬ						           						КАК РасчетСебестоимости,
	|	НЕОПРЕДЕЛЕНО		           		   						КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО					       						КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО						  						КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО				         						КАК КорВидДеятельностиНДС,
	|	0				           			   						КАК НДСРегл,
	|	НЕОПРЕДЕЛЕНО			             						КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО		           		   						КАК ТипЗаписи,
	|	НЕОПРЕДЕЛЕНО			              						КАК ДокументИсточник,
	|
	|	ВЫБОР КОГДА (Партии.АналитикаУчетаНоменклатуры ЕСТЬ NULL И &ИспользоватьВидыЗапасов И Партии.ВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
	|		ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КлючиИнициализированы
	|ИЗ
	|	ОфлайновыеДвижения КАК Партии
	//-- НЕ УТКА
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючиИнициализированы
	|";
	
КонецФункции

//++ НЕ УТ

Процедура ЗарегистрироватьОбъектыДляЗаменыСсылок(Параметры, ДополнительныеПараметры)

	ПолноеИмяРегистра = "РегистрНакопления.СебестоимостьТоваров";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СебестоимостьТоваров.Регистратор
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК ВнутреннееПотреблениеТоваров
	|		ПО СебестоимостьТоваров.ДокументДвижения = ВнутреннееПотреблениеТоваров.Ссылка
	|			И (ВнутреннееПотреблениеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК ПрочееОприходованиеТоваров
	|		ПО СебестоимостьТоваров.ДокументДвижения = ПрочееОприходованиеТоваров.Ссылка
	|			И (ПрочееОприходованиеТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства))
	|ГДЕ
	|	(НЕ ВнутреннееПотреблениеТоваров.Ссылка ЕСТЬ NULL 
	|			ИЛИ НЕ ПрочееОприходованиеТоваров.Ссылка ЕСТЬ NULL )";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ЗаменитьСсылкиВКоллекции(СсылкаНаОбъект, СписокПараметровВыборки, ТаблицаЗамены, КоллекцияОбъекта)

	Для каждого ДанныеСтроки Из КоллекцияОбъекта Цикл
		Для каждого ПараметрыВыборки Из СписокПараметровВыборки Цикл
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("СсылкаНаОбъект", СсылкаНаОбъект);
			СтруктураПоиска.Вставить("СтараяСсылка", ДанныеСтроки[ПараметрыВыборки.Реквизит]);
			ДанныеДляЗаменыСсылок = ТаблицаЗамены.НайтиСтроки(СтруктураПоиска);
			Если ДанныеДляЗаменыСсылок.Количество() <> 0 Тогда
				НоваяСсылка = ДанныеДляЗаменыСсылок[0].НоваяСсылка;
				Если ЗначениеЗаполнено(НоваяСсылка) Тогда
					ДанныеСтроки[ПараметрыВыборки.Реквизит] = НоваяСсылка;
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла;
	КонецЦикла; 
	
КонецПроцедуры

Функция ПараметрыВыборкиСвязанныхДанных(ПутьКРеквизиту, ВыбратьПорцию = Истина)

	МассивСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПутьКРеквизиту, ".");
	ВидТаблицы = МассивСтрок[0];
	ИмяТаблицы = МассивСтрок[1];
	
	Если МассивСтрок.ВГраница() = 3 Тогда
		ИмяПодчиненнойТаблицы = "";
		Реквизит = МассивСтрок[3];
	Иначе
		ИмяПодчиненнойТаблицы = МассивСтрок[3];
		Реквизит = МассивСтрок[5];
	КонецЕсли; 
	
	ЭтоНезависимыйРегистрСведений = Ложь;
	
	Если ВидТаблицы = "РегистрНакопления" Тогда
		ПолеОтбора = "Регистратор";
	ИначеЕсли ВидТаблицы = "РегистрСведений" Тогда
		Если Метаданные.РегистрыСведений[ИмяТаблицы].РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.ПодчинениеРегистратору Тогда
			ПолеОтбора = "Регистратор";
		Иначе
			ПолеОтбора = Реквизит;
			ЭтоНезависимыйРегистрСведений = Истина;
		КонецЕсли;
	ИначеЕсли ВидТаблицы = "Справочник" ИЛИ ВидТаблицы = "Документ" Тогда
		ПолеОтбора = "Ссылка";
	Иначе
		ПолеОтбора = "";
	КонецЕсли;
	
	ИмяОсновнойТаблицы = ВидТаблицы + "." + ИмяТаблицы + ?(ИмяПодчиненнойТаблицы <> "", "." + ИмяПодчиненнойТаблицы, "");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ " + ?(ВыбратьПорцию, "ПЕРВЫЕ 500", "") + "
	|	Т." + Реквизит + " КАК СтараяСсылка,
	|	" + ?(ЗначениеЗаполнено(ПолеОтбора), "Т." + ПолеОтбора, """") + " КАК СсылкаНаОбъект
	|ИЗ
	|	" + ИмяОсновнойТаблицы + " КАК Т
	|ГДЕ
	|	Т." + Реквизит + " В (&СписокСсылок)";
	
	ПараметрыВыборки = Новый Структура;
	ПараметрыВыборки.Вставить("ТекстЗапроса", ТекстЗапроса);
	ПараметрыВыборки.Вставить("ВидТаблицы", ВидТаблицы);
	ПараметрыВыборки.Вставить("ИмяТаблицы", ИмяТаблицы);
	ПараметрыВыборки.Вставить("Реквизит", Реквизит);
	ПараметрыВыборки.Вставить("ПолеОтбора", ПолеОтбора);
	ПараметрыВыборки.Вставить("ЭтоНезависимыйРегистрСведений", ЭтоНезависимыйРегистрСведений);
	ПараметрыВыборки.Вставить("ИмяОсновнойТаблицы", ИмяОсновнойТаблицы);
	ПараметрыВыборки.Вставить("ИмяПодчиненнойТаблицы", ИмяПодчиненнойТаблицы);
	ПараметрыВыборки.Вставить("ПолноеИмяОбъекта", ВидТаблицы + "." + ИмяТаблицы);
	
	Возврат ПараметрыВыборки;

КонецФункции

//-- НЕ УТ
#КонецОбласти

#КонецОбласти

#КонецЕсли