#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиОбновления

Функция ПолноеИмяРегистра()
	
	Возврат "РегистрНакопления.ПрочиеАктивыПассивы";
	
КонецФункции

Процедура ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МассивАналитик = Новый Массив;
	МассивАналитик.Добавить(Неопределено);
	МассивАналитик.Добавить(Перечисления.ТипыНалогов.ПустаяСсылка());
	
	Запрос = Новый Запрос;
	#Область ТекстЗапроса
	Запрос.Текст=
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочиеДоходыРасходы.ПрочиеРасходы КАК ТЧ
	|		ПО ДанныеРегистра.Регистратор = ТЧ.Ссылка
	|			И (ТЧ.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|			И (ТЧ.КорПодразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрочиеАктивыПассивы.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ПрочиеАктивыПассивы.Регистратор) В 
	|		(ТИП(Документ.РасходныйКассовыйОрдер), 
	//++ НЕ УТ
	|		ТИП(Документ.ДепонированиеЗарплаты),
	|		ТИП(Документ.ОтражениеЗарплатыВФинансовомУчете), 
	//-- НЕ УТ
	|		ТИП(Документ.СписаниеБезналичныхДенежныхСредств))
	|	И (ПрочиеАктивыПассивы.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И НЕ ПрочиеАктивыПассивы.Аналитика = НЕОПРЕДЕЛЕНО
	|			ИЛИ ПрочиеАктивыПассивы.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|				И ПрочиеАктивыПассивы.Аналитика В (&Аналитики))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств КАК Операция
	|		ПО ДанныеРегистра.Регистратор = Операция.Ссылка
	|			И (Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТабличнаяЧасть
	|		ПО ДанныеРегистра.Регистратор = ТабличнаяЧасть.Ссылка
	|			И (ТабличнаяЧасть.СтатьяДоходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств КАК Операция
	|		ПО ДанныеРегистра.Регистратор = Операция.Ссылка
	|			И (Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ТабличнаяЧасть
	|		ПО ДанныеРегистра.Регистратор = ТабличнаяЧасть.Ссылка
	|			И (ТабличнаяЧасть.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПрочихАктивовПассивов КАК Операция
	|		ПО ДанныеРегистра.Регистратор = Операция.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ДвижениеПрочихАктивовПассивов.ДанныеОтражения КАК ТабличнаяЧасть
	|		ПО ДанныеРегистра.Регистратор = ТабличнаяЧасть.Ссылка
	|			И (Операция.Источник В (ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяАктивов), ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяПассивов))
	|					И ТабличнаяЧасть.СтатьяИсточник = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|					И ТабличнаяЧасть.НаправлениеДеятельностиИсточник = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|					И ТабличнаяЧасть.АналитикаАктивовПассивовИсточник <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|				ИЛИ Операция.Получатель В (ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяАктивов), ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяПассивов))
	|					И ТабличнаяЧасть.СтатьяПолучатель = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|					И ТабличнаяЧасть.НаправлениеДеятельностиПолучатель = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|					И ТабличнаяЧасть.АналитикаАктивовПассивовПолучатель <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочиеДоходыРасходы КАК Операция
	|		ПО ДанныеРегистра.Регистратор = Операция.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочиеДоходыРасходы.ПрочиеРасходы КАК ТабличнаяЧасть
	|		ПО (Операция.Ссылка = ТабличнаяЧасть.Ссылка)
	|ГДЕ
	|	ТабличнаяЧасть.СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочиеДоходыРасходы КАК Операция
	|		ПО ДанныеРегистра.Регистратор = Операция.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочиеДоходыРасходы.ПрочиеДоходы КАК ТабличнаяЧасть
	|		ПО (Операция.Ссылка = ТабличнаяЧасть.Ссылка)
	|ГДЕ
	|	ТабличнаяЧасть.СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|
	//++ НЕ УТ
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрочиеАктивыПассивы.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ПрочиеАктивыПассивы.Регистратор) = ТИП(Документ.НачислениеОценочныхОбязательствПоОтпускам) 
	|	И (ПрочиеАктивыПассивы.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОплатаТруда)
	|				И НЕ ПрочиеАктивыПассивы.Аналитика = НЕОПРЕДЕЛЕНО
	|			ИЛИ ПрочиеАктивыПассивы.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
	|				И НЕ ПрочиеАктивыПассивы.Аналитика В (&Аналитики))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движение.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК Движение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АмортизацияНМА КАК Операция
	|		ПО Движение.Регистратор = Операция.Ссылка
	|ГДЕ
	|	Движение.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|	И Движение.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И Движение.Аналитика ССЫЛКА Справочник.НаправленияДеятельности
	|	И Движение.Аналитика <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движение.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК Движение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АмортизацияОС КАК Операция
	|		ПО Движение.Регистратор = Операция.Ссылка
	|ГДЕ
	|	Движение.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|	И Движение.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И Движение.Аналитика ССЫЛКА Справочник.НаправленияДеятельности
	|	И Движение.Аналитика <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движение.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК Движение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратОСОтАрендатора КАК Операция
	|		ПО Движение.Регистратор = Операция.Ссылка
	|ГДЕ
	|	Движение.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|	И Движение.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И Движение.Аналитика ССЫЛКА Справочник.НаправленияДеятельности
	|	И Движение.Аналитика <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движение.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК Движение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС КАК Операция
	|		ПО Движение.Регистратор = Операция.Ссылка
	|ГДЕ
	|	Движение.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|	И Движение.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И Движение.Аналитика ССЫЛКА Справочник.НаправленияДеятельности
	|	И Движение.Аналитика <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движение.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК Движение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС КАК Операция
	|		ПО Движение.Регистратор = Операция.Ссылка
	|ГДЕ
	|	Движение.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|	И Движение.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И Движение.Аналитика ССЫЛКА Справочник.НаправленияДеятельности
	|	И Движение.Аналитика <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движение.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК Движение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаОСАрендатору КАК Операция
	|		ПО Движение.Регистратор = Операция.Ссылка
	|ГДЕ
	|	Движение.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|	И Движение.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И Движение.Аналитика ССЫЛКА Справочник.НаправленияДеятельности
	|	И Движение.Аналитика <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движение.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК Движение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС КАК Операция
	|		ПО Движение.Регистратор = Операция.Ссылка
	|ГДЕ
	|	Движение.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|	И Движение.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И Движение.Аналитика ССЫЛКА Справочник.НаправленияДеятельности
	|	И Движение.Аналитика <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движение.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК Движение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПереоценкаНМА КАК Операция
	|		ПО Движение.Регистратор = Операция.Ссылка
	|ГДЕ
	|	Движение.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|	И Движение.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И Движение.Аналитика ССЫЛКА Справочник.НаправленияДеятельности
	|	И Движение.Аналитика <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движение.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК Движение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПереоценкаОС КАК Операция
	|		ПО Движение.Регистратор = Операция.Ссылка
	|ГДЕ
	|	Движение.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|	И Движение.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И Движение.Аналитика ССЫЛКА Справочник.НаправленияДеятельности
	|	И Движение.Аналитика <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движение.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК Движение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеНМА КАК Операция
	|		ПО Движение.Регистратор = Операция.Ссылка
	|ГДЕ
	|	Движение.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|	И Движение.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И Движение.Аналитика ССЫЛКА Справочник.НаправленияДеятельности
	|	И Движение.Аналитика <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движение.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК Движение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеОС КАК Операция
	|		ПО Движение.Регистратор = Операция.Ссылка
	|ГДЕ
	|	Движение.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|	И Движение.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И Движение.Аналитика ССЫЛКА Справочник.НаправленияДеятельности
	|	И Движение.Аналитика <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движение.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК Движение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеНМА КАК Операция
	|		ПО Движение.Регистратор = Операция.Ссылка
	|ГДЕ
	|	Движение.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|	И Движение.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И Движение.Аналитика ССЫЛКА Справочник.НаправленияДеятельности
	|	И Движение.Аналитика <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движение.Регистратор
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК Движение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС КАК Операция
	|		ПО Движение.Регистратор = Операция.Ссылка
	|ГДЕ
	|	Движение.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|	И Движение.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	И Движение.Аналитика ССЫЛКА Справочник.НаправленияДеятельности
	|	И Движение.Аналитика <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	//-- НЕ УТ
	|";
	#КонецОбласти
	Запрос.УстановитьПараметр("Аналитики", МассивАналитик);
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(
		Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"), ПолноеИмяРегистра());
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = ПолноеИмяРегистра();
	
	// Для основных средств за счет целевого финансирования 
	// перенесем направление деятельности из аналитики статьи актива/пассива в измерение регистра.
	ДляПовторногоОтражения = Новый Массив;
	ДляПовторногоОтражения.Добавить("Документ.ПрочиеДоходыРасходы");
	ДляПовторногоОтражения.Добавить("Документ.ПоступлениеБезналичныхДенежныхСредств");
	ДляПовторногоОтражения.Добавить("Документ.ДвижениеПрочихАктивовПассивов");
	
	// Только для обработчиков написанных до движений по упр. балансу
	
	ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		ДляПовторногоОтражения,
		ПолноеИмяРегистра,
		Параметры.Очередь);
	
	//++ НЕ УТ
	ДляЗаполненияНаправления = Новый Соответствие;
	ДляЗаполненияНаправления.Вставить(Тип("ДокументСсылка.АмортизацияНМА"), Истина);
	ДляЗаполненияНаправления.Вставить(Тип("ДокументСсылка.АмортизацияОС"), Истина);
	ДляЗаполненияНаправления.Вставить(Тип("ДокументСсылка.ВозвратОСОтАрендатора"), Истина);
	ДляЗаполненияНаправления.Вставить(Тип("ДокументСсылка.ИзменениеПараметровОС"), Истина);
	ДляЗаполненияНаправления.Вставить(Тип("ДокументСсылка.МодернизацияОС"), Истина);
	ДляЗаполненияНаправления.Вставить(Тип("ДокументСсылка.ПередачаОСАрендатору"), Истина);
	ДляЗаполненияНаправления.Вставить(Тип("ДокументСсылка.ПеремещениеОС"), Истина);
	ДляЗаполненияНаправления.Вставить(Тип("ДокументСсылка.ПереоценкаНМА"), Истина);
	ДляЗаполненияНаправления.Вставить(Тип("ДокументСсылка.ПереоценкаОС"), Истина);
	ДляЗаполненияНаправления.Вставить(Тип("ДокументСсылка.ПодготовкаКПередачеНМА"), Истина);
	ДляЗаполненияНаправления.Вставить(Тип("ДокументСсылка.ПодготовкаКПередачеОС"), Истина);
	ДляЗаполненияНаправления.Вставить(Тип("ДокументСсылка.СписаниеНМА"), Истина);
	ДляЗаполненияНаправления.Вставить(Тип("ДокументСсылка.СписаниеОС"), Истина);
	//-- НЕ УТ
	
	ДляОчисткиДвижений = Новый Соответствие;
	
	ДляОбновленияАналитик = Новый Соответствие;
	ДляОбновленияАналитик.Вставить(Тип("ДокументСсылка.РасходныйКассовыйОрдер"), "Документ.РасходныйКассовыйОрдер");
	ДляОбновленияАналитик.Вставить(Тип("ДокументСсылка.СписаниеБезналичныхДенежныхСредств"), "Документ.СписаниеБезналичныхДенежныхСредств");
	//++ НЕ УТ
	ДляОбновленияАналитик.Вставить(Тип("ДокументСсылка.ДепонированиеЗарплаты"), "Документ.ДепонированиеЗарплаты");
	ДляОбновленияАналитик.Вставить(Тип("ДокументСсылка.ОтражениеЗарплатыВФинансовомУчете"), "Документ.ОтражениеЗарплатыВФинансовомУчете");
	ДляОбновленияАналитик.Вставить(Тип("ДокументСсылка.НачислениеОценочныхОбязательствПоОтпускам"), "Документ.НачислениеОценочныхОбязательствПоОтпускам");
	//-- НЕ УТ
	
	МетаданныеОбъекта = Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы;
	
	
	МВТ = Новый МенеджерВременныхТаблиц;
	
	//++ НЕ УТ
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ДепонированиеЗарплаты");
	Регистраторы.Добавить("Документ.ОтражениеЗарплатыВФинансовомУчете");
	Регистраторы.Добавить("Документ.НачислениеОценочныхОбязательствПоОтпускам");
	
	ДополнительныеПараметрыПроверкиБлокировки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметрыПроверкиБлокировки.ИмяВременнойТаблицы = "ВтЗаблокированныеСсылки";
	ЗаблокированныеСсылки = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияСсылок(
		Параметры.Очередь,
		Регистраторы,
		МВТ,
		ДополнительныеПараметрыПроверкиБлокировки);
	//-- НЕ УТ
	
	ДопПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДопПараметры.ИмяВременнойТаблицы = "втРегистраторы";
	ДопИсточники = ВлияетНаУправленческийБаланс();
	//++ НЕ УТ
	ДопИсточники.Вставить("РегистрБухгалтерии.Хозрасчетный");
	//-- НЕ УТ
	ДопПараметры.ДополнительныеИсточникиДанных = ДопИсточники;

	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(Параметры.Очередь, Неопределено, ПолноеИмяРегистра, МВТ, ДопПараметры);
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	#Область ТекстЗапроса
	Запрос.Текст =
	"ВЫБРАТЬ
	|	втРегистраторы.Регистратор КАК Регистратор
	|ИЗ
	|	втРегистраторы КАК втРегистраторы
	//++ НЕ УТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтЗаблокированныеСсылки
	|		ПО втРегистраторы.Регистратор = ВтЗаблокированныеСсылки.Ссылка
	|ГДЕ
	|	ВтЗаблокированныеСсылки.Ссылка ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Проводки.Регистратор КАК Регистратор,
	|	Проводки.ПодразделениеДт КАК Подразделение,
	|	Проводки.НаправлениеДеятельностиДт КАК НаправлениеДеятельности,
	|	СУММА(Проводки.Сумма) КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Проводки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втРегистраторы КАК втРегистраторы
	|		ПО Проводки.Регистратор = втРегистраторы.Регистратор
	|ГДЕ
	|	Проводки.СчетДт В (
	// 4D:ERP для Беларуси, Дмитрий, 01.10.2015 17:03:49 
	// Локализация плана счетов, №8969
	// TODO Надо проверить 
	// {
	|		ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыПолученныеВСчетБудущихПериодов))
	// }
	// 4D
	|	И (Проводки.Регистратор ССЫЛКА Документ.АмортизацияНМА
	|			ИЛИ Проводки.Регистратор ССЫЛКА Документ.АмортизацияОС
	|			ИЛИ Проводки.Регистратор ССЫЛКА Документ.ВозвратОСОтАрендатора
	|			ИЛИ Проводки.Регистратор ССЫЛКА Документ.ИзменениеПараметровОС
	|			ИЛИ Проводки.Регистратор ССЫЛКА Документ.МодернизацияОС
	|			ИЛИ Проводки.Регистратор ССЫЛКА Документ.ПередачаОСАрендатору
	|			ИЛИ Проводки.Регистратор ССЫЛКА Документ.ПеремещениеОС
	|			ИЛИ Проводки.Регистратор ССЫЛКА Документ.ПереоценкаНМА
	|			ИЛИ Проводки.Регистратор ССЫЛКА Документ.ПереоценкаОС
	|			ИЛИ Проводки.Регистратор ССЫЛКА Документ.ПодготовкаКПередачеНМА
	|			ИЛИ Проводки.Регистратор ССЫЛКА Документ.ПодготовкаКПередачеОС
	|			ИЛИ Проводки.Регистратор ССЫЛКА Документ.СписаниеНМА
	|			ИЛИ Проводки.Регистратор ССЫЛКА Документ.СписаниеОС)
	|
	|СГРУППИРОВАТЬ ПО
	|	Проводки.Регистратор,
	|	Проводки.ПодразделениеДт,
	|	Проводки.НаправлениеДеятельностиДт
	//-- НЕ УТ
	|";
	#КонецОбласти
	
	Пакет = Запрос.ВыполнитьПакет();
	
	Выборка = Пакет[0].Выбрать();
	//++ НЕ УТ
	ВыборкаПроводки = Пакет[1].Выбрать();
	//-- НЕ УТ
	
	СтруктураПоискаСтрок = Новый Структура("Регистратор", Неопределено);
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	БалансовыеРегистры = Обработки.ДвиженияАктивовПассивов.БалансовыеРегистры();
	
	Пока Выборка.Следующий() Цикл
		
		Регистратор = Выборка.Регистратор;
		ТипДокумента = ТипЗнч(Регистратор);
		МетаданныеДокумента = Регистратор.Метаданные();
		
		НачатьТранзакцию();
		
		#Область БлокировкаИсточниковУпрБаланса
		Если ДляОчисткиДвижений[ТипДокумента] = Неопределено Тогда
			Попытка
				
				Блокировка = Новый БлокировкаДанных;
				
				ИсточникиБаланса = Новый Массив;
				Для Каждого Набор Из МетаданныеДокумента.Движения Цикл
				
					ПолноеИмяНабора = Набор.ПолноеИмя();
					Если СтрНайти(ПолноеИмяНабора, "РегистрНакопления") = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					ИмяНабора = СтрЗаменить(ПолноеИмяНабора, "РегистрНакопления.", "");
					Если ИмяНабора = "ПрочиеАктивыПассивы" Тогда
						ИсточникиБаланса.Добавить(ИмяНабора);
						Продолжить;
					КонецЕсли;
					БалансовыйРегистр = БалансовыеРегистры.Свойство(ИмяНабора);
					Если НЕ БалансовыйРегистр Тогда
						Продолжить;
					КонецЕсли;
					
					ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяНабора + ".НаборЗаписей");
					ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
					ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
					
					ИсточникиБаланса.Добавить(ИмяНабора);
					
				КонецЦикла;
				
				Если Не ДляОбновленияАналитик[ТипДокумента] = Неопределено Тогда
					
					ЭлементБлокировки = Блокировка.Добавить(ДляОбновленияАналитик[ТипДокумента]);
					ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
					ЭлементБлокировки.УстановитьЗначение("Ссылка", Регистратор);
					
				КонецЕсли;
				
				Блокировка.Заблокировать();
				
			Исключение
				ОтменитьТранзакцию();
				ТекстСообщения = НСтр("ru = 'Не удалось заблокировать источники ""Управленческого баланса"" по документу: %1 по причине: %2'");
				ТекстСообщения = СтрШаблон(ТекстСообщения, Регистратор, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(
					ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Предупреждение,
					МетаданныеДокумента,
					Регистратор,
					ТекстСообщения);
				Продолжить;
			КонецПопытки;
		КонецЕсли;
		#КонецОбласти
		
		НаборЗаписей = РегистрыНакопления.ПрочиеАктивыПассивы.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
		
		ОбработаноОбъектов = ОбработаноОбъектов + 1;
		
		Попытка
			
			Если ДляОчисткиДвижений[ТипДокумента] <> Неопределено Тогда
				// НаборЗаписей не заполняем
			ИначеЕсли ДляОбновленияАналитик[ТипДокумента] <> Неопределено Тогда
				
				ПолноеИмяДокумента = ДляОбновленияАналитик[ТипДокумента];
				МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяДокумента);
				
				ДопСвойства = Новый Структура;
				ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Регистратор, ДопСвойства);
				МенеджерДокумента.ИнициализироватьДанныеДокумента(Регистратор, ДопСвойства, "ПрочиеАктивыПассивы");
				
				НаборЗаписей.Загрузить(ДопСвойства.ТаблицыДляДвижений["ТаблицаПрочиеАктивыПассивы"]);
				
			//++ НЕ УТ
			ИначеЕсли ДляЗаполненияНаправления[ТипДокумента] <> Неопределено Тогда
				
				ТребуетсяСвернутьТаблицу = Ложь;
				
				ЗаполнитьЗначенияСвойств(СтруктураПоискаСтрок, Выборка);
				
				ПропорцииПодразделенийПоНаправлениям = Новый Соответствие;
				ВыборкаПроводки.Сбросить();
				Пока ВыборкаПроводки.НайтиСледующий(СтруктураПоискаСтрок) Цикл
					Пропорция = ПропорцииПодразделенийПоНаправлениям.Получить(ВыборкаПроводки.НаправлениеДеятельности);
					Если Пропорция = Неопределено Тогда
						Пропорция = Новый Структура("Подразделения, Суммы", Новый Массив, Новый Массив);
						ПропорцииПодразделенийПоНаправлениям.Вставить(ВыборкаПроводки.НаправлениеДеятельности, Пропорция);
					Иначе
						ТребуетсяСвернутьТаблицу = Истина;
					КонецЕсли;
					Пропорция.Подразделения.Добавить(ВыборкаПроводки.Подразделение);
					Пропорция.Суммы.Добавить(ВыборкаПроводки.Сумма);
				КонецЦикла;
				
				НаборЗаписей.Прочитать();
				ТаблицаНабораЗаписей = НаборЗаписей.Выгрузить();
				
				Если ТребуетсяСвернутьТаблицу Тогда
					ТаблицаНабораЗаписей.Свернуть("Период, ВидДвижения, Организация, Подразделение, НаправлениеДеятельности, Статья, Аналитика", "Сумма");
				КонецЕсли;
				
				НаборЗаписей.Очистить();
				
				Для Каждого Запись Из ТаблицаНабораЗаписей Цикл
					
					Если Запись.Статья = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование Тогда
						Запись.НаправлениеДеятельности = Запись.Аналитика;
						Запись.Аналитика = Перечисления.СтатьиБезАналитики.ПустаяСсылка();
					КонецЕсли;
					
					Если Не ЗначениеЗаполнено(Запись.Подразделение) Тогда
						Пропорция = ПропорцииПодразделенийПоНаправлениям.Получить(Запись.НаправлениеДеятельности);
						Если Пропорция <> Неопределено И Пропорция.Подразделения.Количество() > 0 Тогда
							Запись.Подразделение = Пропорция.Подразделения[0];
							Если Пропорция.Подразделения.Количество() > 1 Тогда
								МассивСумм = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(Запись.Сумма, Пропорция.Суммы);
								Запись.Сумма = МассивСумм[0];
								Для к=1 По Пропорция.Подразделения.Количество()-1 Цикл
									НоваяЗапись = НаборЗаписей.Добавить();
									ЗаполнитьЗначенияСвойств(НоваяЗапись, Запись);
									НоваяЗапись.Подразделение = Пропорция.Подразделения[к];
									НоваяЗапись.Сумма = МассивСумм[к];
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Запись);
					
				КонецЦикла;
			//-- НЕ УТ
			КонецЕсли;
			
			// Обновим даные управленческого баланса
			Если ДляОчисткиДвижений[ТипДокумента] = Неопределено Тогда
				ОбновитьУправленческийБаланс(Регистратор, МетаданныеДокумента, НаборЗаписей, ИсточникиБаланса);
			КонецЕсли;
			
			Если ДляОбновленияАналитик[ТипДокумента] <> Неопределено
				//++ НЕ УТ
				ИЛИ ДляЗаполненияНаправления[ТипДокумента] <> Неопределено
				//-- НЕ УТ
				ИЛИ ДляОчисткиДвижений[ТипДокумента] <> Неопределено Тогда
			
				ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
		Исключение
			
			ОтменитьТранзакцию();
			
			ОбработаноОбъектов = ОбработаноОбъектов - 1;
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = НСтр("ru = 'Не удалось заполнить движения по регистру ""Активы и пассивы"" документа ""%1"" по причине: %2'");
			ТекстСообщения = СтрШаблон(ТекстСообщения, Регистратор, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта,
				Регистратор,
				ТекстСообщения);
			
			Продолжить;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов = 0 И ПроблемныхОбъектов > 0 Тогда
		
		ТекстСообщения = НСтр("ru = 'Не выполнено заполнение движений по регистру ""Активы и пассивы"" нескольких документов (пропущены): %1'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

#Область ОбновлениеУправленческогоБаланса

Процедура ЗарегистироватьКОбновлениюУправленческогоБаланса(Параметры, Регистраторы, ПолноеИмяРегистраИсточника) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ФормироватьУправленческийБаланс")
		ИЛИ НЕ Константы.ЗаполненыДвиженияАктивовПассивов.Получить()
		ИЛИ НЕ ВлияетНаУправленческийБаланс(ПолноеИмяРегистраИсточника) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыУпрБаланса = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(Параметры);
	ПараметрыУпрБаланса.Очередь = ОбновлениеИнформационнойБазыУТ.ОчередьОтложенногоОбработчикаОбновления("РегистрыНакопления.ПрочиеАктивыПассивы.ОбработатьДанныеДляПереходаНаНовуюВерсию");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(ПараметрыУпрБаланса, Регистраторы, ПолноеИмяРегистра());
	
КонецПроцедуры

Процедура ОбновитьУправленческийБаланс(Регистратор, МетаданныеРегистратора, ПрочиеАктивыПассивы, ИсточникиБаланса)
	
	ТаблицыДляДвижений = Новый Структура;
	Для Каждого ИмяРегистра Из ИсточникиБаланса Цикл
		Если ИмяРегистра = "ПрочиеАктивыПассивы" И ПрочиеАктивыПассивы.Количество() > 0 Тогда
			ТаблицыДляДвижений.Вставить("ПрочиеАктивыПассивы", ПрочиеАктивыПассивы.Выгрузить());
		Иначе
			Набор = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Регистратор);
			Набор.Прочитать();
			ТаблицыДляДвижений.Вставить(ИмяРегистра, Набор.Выгрузить());
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыДвижений = Новый Структура("Ссылка", Регистратор);
	ПараметрыДвижений.Вставить("ТаблицыДляДвижений", ТаблицыДляДвижений);
	ПараметрыДвижений.Вставить("ВидОтложенногоРасчета", Перечисления.ВидыИсточниковУправленческогоБаланса.РасчетБаланса);
	ЗапросДвижений = Обработки.ДвиженияАктивовПассивов.ЗапросДвижений(ПараметрыДвижений);
	Если ЗапросДвижений <> Неопределено Тогда
		ДвиженияАктивовПассивов = ЗапросДвижений.Выполнить().Выгрузить();
		Если ПрочиеАктивыПассивы.Количество() > 0 Тогда
			ПрочиеАктивыПассивы.Очистить();
		КонецЕсли;
		Для Каждого Движение Из ДвиженияАктивовПассивов Цикл
			НоваяЗапись = ПрочиеАктивыПассивы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Движение);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Проверяет влияние обновления регистра-источника на управленческий баланс.
// Если в регистре-источник изменились незначимые реквизиты или обработчик обновления отсутствует,
// то после его обновления движения упр. баланса не изменятся.
// Флаги проставляются вручную на основании экспертной оценки.
//
// Параметры:
//  ПолноеИмяРегистра - Строка - полное имя регистра в формате "РегистрНакопления.ИмяРегисра"
//
// Возвращаемое значение:
//  Истина - изменения в источника влияют на упр. баланс
//  Соответствие - если ПолноеИмяРегистра = НЕОПРЕДЕЛНО, возвращается соответствие со всеми влияющими источниками упр. баланса
Функция ВлияетНаУправленческийБаланс(ПолноеИмяРегистра = Неопределено)
	
	ОбновлениеИзменитБаланс = Новый Соответствие;
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.ДенежныеДокументы"                     , Ложь);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.ДенежныеСредстваБезналичные"           , Ложь);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.ДенежныеСредстваВКассахККМ"            , Истина);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.ДенежныеСредстваВПути"                 , Истина);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.ДенежныеСредстваНаличные"              , Ложь);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.ДенежныеСредстваУПодотчетныхЛиц"       , Истина);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.ПартииПрочихРасходов"                  , Ложь);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.ПереданнаяВозвратнаяТара"              , Ложь);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.ПодарочныеСертификаты"                 , Ложь);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.ПринятаяВозвратнаяТара"                , Ложь);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.ПрочиеАктивыПассивы"                   , Истина);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.ПрочиеДоходы"                          , Ложь);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.ПрочиеРасходы"                         , Истина);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.РасчетыПоДоговорамКредитовИДепозитов"  , Ложь);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.РасчетыСКлиентамиПоДокументам"         , Ложь);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.РасчетыСПоставщикамиПоДокументам"      , Истина);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.СебестоимостьТоваров"                  , Истина);
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту"     , Истина);
	//++ НЕ УТ
	ОбновлениеИзменитБаланс.Вставить("РегистрНакопления.ТрудозатратыНезавершенногоПроизводства", Ложь);
	//-- НЕ УТ
	
	Если ПолноеИмяРегистра = Неопределено Тогда
		ВлияющиеИсточники = Новый Соответствие;
		Для Каждого Источник Из ОбновлениеИзменитБаланс Цикл
			Если Источник.Значение Тогда
				ВлияющиеИсточники.Вставить(Источник.Ключ, Истина);
			КонецЕсли;
		КонецЦикла;
		Возврат ВлияющиеИсточники;
	КонецЕсли;
	
	Возврат ОбновлениеИзменитБаланс[ПолноеИмяРегистра];
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
