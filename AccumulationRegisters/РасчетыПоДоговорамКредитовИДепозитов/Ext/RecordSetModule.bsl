#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	// Вместо ОбменДанными.Загрузка используется ДополнительныеСвойства.Свойство("ДляПроведения").
	// Данное свойство устанавливается в модуле ПроведениеСервер при интерактивном проведении документа.
	Если НЕ ДополнительныеСвойства.Свойство("ДляПроведения") ИЛИ ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	БлокироватьДляИзменения = Истина;
	
	// Текущее состояние набора помещается во временную таблицу,
	// чтобы при записи получить изменение нового набора относительно текущего.
	
	ТекстыЗапросовДляПолученияТаблицыИзменений = 
		ЗакрытиеМесяцаУТВызовСервера.ТекстыЗапросовДляПолученияТаблицыИзмененийРегистраНакопления(ЭтотОбъект.Метаданные());
	
	Запрос = Новый Запрос;
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстыЗапросовДляПолученияТаблицыИзменений.ТекстВыборкиНачальныхДанных;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	
	Запрос.Выполнить();
	
	ДополнительныеСвойства.Вставить("ТекстВыборкиТаблицыИзменений", ТекстыЗапросовДляПолученияТаблицыИзменений.ТекстВыборкиТаблицыИзменений);
		
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	// Вместо ОбменДанными.Загрузка используется ДополнительныеСвойства.Свойство("ДляПроведения").
	// Данное свойство устанавливается в модуле ПроведениеСервер при интерактивном проведении документа.
	Если НЕ ДополнительныеСвойства.Свойство("ДляПроведения") ИЛИ ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу для последующей записи в регистрах заданий.
	Запрос = Новый Запрос;
	Запрос.Текст = ДополнительныеСвойства.ТекстВыборкиТаблицыИзменений;
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);	
	Запрос.УстановитьПараметр("ВалютаУпр", Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРегл", Константы.ВалютаРегламентированногоУчета.Получить());
	
	Запрос.Текст = Запрос.Текст + ОбщегоНазначения.РазделительПакетаЗапросов() +
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ТаблицаИзменений.Период, МЕСЯЦ) КАК Месяц,
	|	ТаблицаИзменений.Регистратор КАК Документ,
	|	Аналитика.Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ПереоценкаВалютныхСредств) КАК Операция
	|ПОМЕСТИТЬ РасчетыПоДоговорамКредитовИДепозитовЗаданияКЗакрытиюМесяца
	|ИЗ
	|	ТаблицаИзмененийРасчетыПоДоговорамКредитовИДепозитов КАК ТаблицаИзменений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО ТаблицаИзменений.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|ГДЕ
	|	(ТИПЗНАЧЕНИЯ(ТаблицаИзменений.Регистратор) = ТИП(Документ.ПереоценкаВалютныхСредств)
	|			ИЛИ ТаблицаИзменений.Договор.ВалютаВзаиморасчетов <> &ВалютаУпр
	|			ИЛИ ТаблицаИзменений.Договор.ВалютаВзаиморасчетов <> &ВалютаРегл)";
	//++ НЕ УТ
	Запрос.Текст = Запрос.Текст + Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС;
	
	ТекстАктуализацииРасходовПриУСН = УчетУСНСервер.ТекстЗапросаОбновленияЗаданийКЗакрытиюМесяцаПриЗаписиРегистра();
	ТекстАктуализацииРасходовПриУСН = СтрЗаменить(ТекстАктуализацииРасходовПриУСН,
		"#ТаблицаИзмененийРегистра КАК ТаблицаИзменений",
		"ТаблицаИзмененийРасчетыПоДоговорамКредитовИДепозитов КАК ТаблицаИзменений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО ТаблицаИзменений.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики");
	ТекстАктуализацииРасходовПриУСН = СтрЗаменить(ТекстАктуализацииРасходовПриУСН, "ТаблицаИзменений.Организация", "Аналитика.Организация");
	
	ДопУсловия = "НЕ ТаблицаИзменений.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг)
	|			И НЕ ТаблицаИзменений.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ПустаяСсылка)
	|			И ТаблицаИзменений.Договор.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|			И ТаблицаИзменений.СуммаВВалюте <> 0";
	ТекстАктуализацииРасходовПриУСН = СтрЗаменить(ТекстАктуализацииРасходовПриУСН, "&ДополнительныеУсловия", ДопУсловия);
	
	Запрос.Текст = Запрос.Текст + ТекстАктуализацииРасходовПриУСН;
	//-- НЕ УТ
	
	// Уничтожаем таблицу изменений регистра:
	Запрос.Текст = Запрос.Текст + ОбщегоНазначения.РазделительПакетаЗапросов() + "УНИЧТОЖИТЬ ТаблицаИзмененийРасчетыПоДоговорамКредитовИДепозитов";
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли