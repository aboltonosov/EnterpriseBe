#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает остаток к оформлению по переданному списку заказов.
//
// Параметры:
//  МассивЗаказов	 - Массив	- Массив заказов
//  Операция		 - ПеречислениеСсылка.ХозяйственныеОперации	- Отбор по операции.
//  Получатель		 - СправочникСсылка.СтруктураПредприятия, СправочникСсылка.Склады	- Отбор по получателю.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Содержит остаток к оформлению. Имеет следующие колонки:
//     * Распоряжение          - ДокументСсылка.ЭтапПроизводства2_2 - 
//     * Номенклатура          - СправочникСсылка.Номенклатура - 
//     * Характеристика        - СправочникСсылка.ХарактеристикиНоменклатуры - 
//     * КодСтроки             - Число - 
//     * Назначение            - СправочникСсылка.Назначения - 
//     * НазначениеОтправителя - СправочникСсылка.Назначения - 
//     * Серия                 - СправочникСсылка.СерииНоменклатуры - 
//     * Количество            - Число - 
//
Функция КОформлениюОстатокРМВнутреннееТовародвижение(МассивЗаказов, Операция, Получатель = Неопределено) Экспорт

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Заказы", МассивЗаказов);
	Запрос.УстановитьПараметр("Получатель", Получатель);
	Запрос.УстановитьПараметр("Операция", Операция);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОстатки.Распоряжение,
	|	ТаблицаОстатки.Номенклатура,
	|	ТаблицаОстатки.Характеристика,
	|	ТаблицаОстатки.КодСтроки,
	|	ТаблицаОстатки.Назначение,
	|	ТаблицаОстатки.НазначениеОтправителя,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ТаблицаОстатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.РаспоряженияНаПередачуИзПроизводства.Остатки(
	|			,
	|			Распоряжение В (&Заказы)
	|			И Операция = &Операция
	|				//&Отбор
	|				) КАК ТаблицаОстатки";
	
	ОтборПоПолучателю = ?(Получатель = Неопределено, "", " И Получатель = &Получатель");
	
	Отбор = "";
	Отбор = ?(ЗначениеЗаполнено(ОтборПоПолучателю), Отбор + ОтборПоПолучателю, Отбор);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "//&Отбор", Отбор);
	
	КодыСтрокЗаказов = Запрос.Выполнить().Выгрузить();
	
	Возврат КодыСтрокЗаказов;
	
КонецФункции

// Текст запроса получает остаток по ресурсам КОформлению и Заказано
// Остаток дополняется движениями, сделанными накладной заданной в параметре Регистратор
//
// Параметры:
//  ИмяВременнойТаблицы	 - Строка - Поместить результат во временную таблицу с заданным именем. 
//  Измерения			 - Структура - Ключ - имя измерения, Значение - имя параметра в запросе, например:
//  									Новый Структура("Номенклатура", "Товар") будет преобразовано в тексте запроса в:
//  									Номенклатура В(&Товар)
//  Ресурсы				 - Строка - Условие для секции ИМЕЮЩИЕ по ресурсам.
//  								Например, строка вида "КОформлению <> 0" будет преобразована в тексте запроса в:
//  								СУММА(Набор.КОформлению) <> 0
// 
// Возвращаемое значение:
//  Строка - Текст запроса
//
Функция ТекстЗапросаОстатки(ИмяВременнойТаблицы = "", Измерения = Неопределено, Ресурсы = "") Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Набор.Распоряжение          КАК Распоряжение,
	|	Набор.Номенклатура          КАК Номенклатура,
	|	Набор.Характеристика        КАК Характеристика,
	|	Набор.КодСтроки             КАК КодСтроки,
	|	Набор.Назначение            КАК Назначение,
	|	Набор.НазначениеОтправителя КАК НазначениеОтправителя,
	|   ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	СУММА(Набор.Количество)     КАК КОформлению,
	|	0                           КАК Заказано
	|//&ПОМЕСТИТЬ
	|ИЗ(
	|	ВЫБРАТЬ
	|		Таблица.Распоряжение          КАК Распоряжение,
	|		Таблица.Номенклатура          КАК Номенклатура,
	|		Таблица.Характеристика        КАК Характеристика,
	|		Таблица.КодСтроки             КАК КодСтроки,
	|		Таблица.Назначение            КАК Назначение,
	|		Таблица.НазначениеОтправителя КАК НазначениеОтправителя,
	|		Таблица.КоличествоОстаток     КАК Количество
	|	ИЗ
	|		РегистрНакопления.РаспоряженияНаПередачуИзПроизводства.Остатки(, 
	|//&ОтборПоИзмерениямРегистр
	|			) КАК Таблица
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Таблица.Распоряжение          КАК Распоряжение,
	|		Таблица.Номенклатура          КАК Номенклатура,
	|		Таблица.Характеристика        КАК Характеристика,
	|		Таблица.КодСтроки             КАК КодСтроки,
	|		Таблица.Назначение            КАК Назначение,
	|		Таблица.НазначениеОтправителя КАК НазначениеОтправителя,
	|		Таблица.Количество            КАК Количество
	|	ИЗ
	|		РегистрНакопления.РаспоряженияНаПередачуИзПроизводства КАК Таблица
	|	ГДЕ
	|		Активность
	|		И Регистратор = &Регистратор
	|		И ВидДвижения = ЗНАЧЕНИЕ(ВидДВиженияНакопления.Расход)
	|//&ОтборПоИзмерениямСторно
	|	) КАК Набор
	|
	|СГРУППИРОВАТЬ ПО
	|	Распоряжение,
	|	Номенклатура,
	|	Характеристика,
	|	КодСтроки,
	|	Назначение,
	|	НазначениеОтправителя
	|
	|//&ИМЕЮЩИЕ
	|";
	
	Если Не ПустаяСтрока(ИмяВременнойТаблицы) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ПОМЕСТИТЬ", "ПОМЕСТИТЬ " + ИмяВременнойТаблицы);
		ТекстЗапроса = ТекстЗапроса + 
		"
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Распоряжение,
		|	КодСтроки,
		|	Номенклатура,
		|	Характеристика,
		|	Серия";
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Измерения) Тогда
		
		ТекстОтбораПоИзмерениям = "";
		
		Для Каждого КлючЗначение Из Измерения Цикл
			
			ТекстОтбораПоИзмерениям = 
				ТекстОтбораПоИзмерениям
				+ ?(ПустаяСтрока(ТекстОтбораПоИзмерениям), "", " И ")
				+ КлючЗначение.Ключ
				+ " В(&"
				+ КлючЗначение.Значение
				+ ")";
			
		КонецЦикла;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ОтборПоИзмерениямРегистр", ТекстОтбораПоИзмерениям);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ОтборПоИзмерениямСторно", Символы.ПС + "И " + ТекстОтбораПоИзмерениям);
		
	КонецЕсли;
	
	Если Не ПустаяСтрока(Ресурсы) Тогда
		
		Если СтрНайти(Ресурсы, "Количество") <> 0 Тогда
			Ресурсы = СтрЗаменить(Ресурсы, "Количество", "СУММА(Набор.Количество)");
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&ИМЕЮЩИЕ", "ИМЕЮЩИЕ " + Ресурсы);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Процедура регистрации данных для обработчика обновления ОбработатьДанныеДляПереходаНаВерсию
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.РаспоряженияНаПередачуИзПроизводства";
	ИмяРегистра = "РаспоряженияНаПередачуИзПроизводства";
	
	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить("Документ.ЭтапПроизводства2_2");
	СписокДокументов.Добавить("Документ.ДвижениеПродукцииИМатериалов");
	
	Для Каждого ПолноеИмяДокумента Из СписокДокументов Цикл
		ИмяДокумента = СтрРазделить(ПолноеИмяДокумента, ".")[1];
		ТекстЗапросаМеханизмаПроведения = Документы[ИмяДокумента].АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
		Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
								ТекстЗапросаМеханизмаПроведения,
								ПолноеИмяРегистра,
								ПолноеИмяДокумента);
								
		ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.РаспоряженияНаПередачуИзПроизводства";
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ЭтапПроизводства2_2");
	Регистраторы.Добавить("Документ.ДвижениеПродукцииИМатериалов");
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(Регистраторы,
		ПолноеИмяРегистра,
		Параметры.Очередь);
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти


#КонецЕсли