#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура формирования движений по регистру
//
// Параметры:
//  ДополнительныеСвойства	 - Структура	 - дополнительные свойства объекта, движения которого формируются
//  Движения				 - КоллекцияДвижений - формируемые движения
//  Отказ					 - Булево - признак отказа от записи движений
//
Процедура ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыКОформлениюПоступления;
	
	Если Отказ Или Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияТоварыКОформлениюПоступления = Движения.ТоварыКОформлениюПоступления;
	ДвиженияТоварыКОформлениюПоступления.Записывать = Истина;
	ДвиженияТоварыКОформлениюПоступления.Загрузить(Таблица);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаОсталосьОформить(ДополнитьСериямиИзРегистратора = Ложь, ОтборПоИзмерениям = Неопределено) Экспорт
	
	Если ДополнитьСериямиИзРегистратора Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Таблица.Регистратор         КАК Регистратор,
		|	Таблица.ВидДвижения         КАК ВидДвижения,
		|	Таблица.ДокументПоступления КАК Распоряжение,
		|	Таблица.Номенклатура        КАК Номенклатура,
		|	Таблица.Характеристика      КАК Характеристика,
		|	Таблица.Назначение          КАК Назначение,
		|	Таблица.Склад               КАК Склад,
		|	Таблица.Серия               КАК Серия,
		|	СУММА(Таблица.КОформлению)  КАК Количество
		|ПОМЕСТИТЬ ВтДанныеРегистра
		|ИЗ
		|	РегистрНакопления.ТоварыКОформлениюПоступления КАК Таблица
		|ГДЕ
		|	Таблица.ДокументПоступления В(&Распоряжения)
		|	И НЕ Таблица.Регистратор В (&Регистратор)
		|	И Таблица.Активность
		|	
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Регистратор,
		|	Таблица.ВидДвижения,
		|	Таблица.ДокументПоступления,
		|	Таблица.Характеристика,
		|	Таблица.Серия,
		|	Таблица.Назначение,
		|	Таблица.Склад,
		|	Таблица.Номенклатура
		|
		|ИМЕЮЩИЕ
		|	СУММА(Таблица.КОформлению) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.Ссылка КАК Регистратор,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Назначение,
		|	Таблица.Серия,
		|	Сумма(Таблица.Количество) КАК Количество
		|ПОМЕСТИТЬ ВтДанныеПриходногоОрдера
		|ИЗ Документ.ПриходныйОрдерНаТовары.Товары КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (Выбрать Т.Регистратор Из ВтДанныеРегистра КАК Т)
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Ссылка,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Назначение,
		|	Таблица.Серия
		|;
		|ВЫБРАТЬ
		|	Таблица.Распоряжение,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Назначение,
		|	Таблица.Склад,
		|	ВЫБОР КОГДА Таблица.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) Тогда
		|		ЕстьNull(ДанныеДокументаПоступления.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
		|	ИНАЧЕ
		|		Таблица.Серия
		|	КОНЕЦ КАК Серия,
		|	Сумма(ВЫБОР КОГДА Таблица.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) 
		|			И ДанныеДокументаПоступления.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) Тогда
		|		ДанныеДокументаПоступления.Количество
		|	ИНАЧЕ
		|		Таблица.Количество
		|	КОНЕЦ) КАК Количество
		|ПОМЕСТИТЬ ВтПринято
		|ИЗ
		|	ВтДанныеРегистра КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеПриходногоОрдера КАК ДанныеДокументаПоступления
		|		ПО Таблица.Регистратор = ДанныеДокументаПоступления.Регистратор
		|		И Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		И Таблица.Номенклатура = ДанныеДокументаПоступления.Номенклатура
		|		И Таблица.Характеристика = ДанныеДокументаПоступления.Характеристика
		|		И Таблица.Назначение = ДанныеДокументаПоступления.Назначение
		|		И (Таблица.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|			ИЛИ Таблица.Серия = ДанныеДокументаПоступления.Серия)
		|ГДЕ
		|	НЕ ДанныеДокументаПоступления.Регистратор ЕСТЬ NULL
		|		
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Распоряжение,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Назначение,
		|	ВЫБОР КОГДА Таблица.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) Тогда
		|		ЕстьNull(ДанныеДокументаПоступления.Серия, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
		|	ИНАЧЕ
		|		Таблица.Серия
		|	КОНЕЦ,
		|	Таблица.Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.Ссылка КАК Регистратор,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Назначение,
		|	Таблица.Серия,
		|	Сумма(Таблица.Количество) КАК Количество
		|ПОМЕСТИТЬ ВтДанныеДокументаПоступления
		|ИЗ Документ.ПеремещениеТоваров.Товары КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (Выбрать Т.Регистратор Из ВтДанныеРегистра КАК Т)
		|	И Таблица.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Ссылка,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Назначение,
		|	Таблица.Серия
		|;
		|ВЫБРАТЬ
		|	Таблица.Распоряжение,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Назначение,
		|	Таблица.Склад,
		|	ВЫБОР КОГДА Таблица.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) Тогда
		|		ДанныеДокументаПоступления.Серия
		|	ИНАЧЕ
		|		Таблица.Серия
		|	КОНЕЦ КАК Серия,
		|	Сумма(ВЫБОР КОГДА Таблица.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) Тогда
		|		ДанныеДокументаПоступления.Количество
		|	ИНАЧЕ
		|		Таблица.Количество
		|	КОНЕЦ) КАК Количество
		|ПОМЕСТИТЬ ВтОформлено
		|ИЗ
		|	ВтДанныеРегистра КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеДокументаПоступления КАК ДанныеДокументаПоступления
		|		ПО Таблица.Регистратор = ДанныеДокументаПоступления.Регистратор
		|		И Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Таблица.Номенклатура = ДанныеДокументаПоступления.Номенклатура
		|		И Таблица.Характеристика = ДанныеДокументаПоступления.Характеристика
		|		И Таблица.Назначение = ДанныеДокументаПоступления.Назначение
		|		И (Таблица.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|			ИЛИ Таблица.Серия = ДанныеДокументаПоступления.Серия)
		|ГДЕ
		|	НЕ ДанныеДокументаПоступления.Регистратор ЕСТЬ NULL
		|		
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Распоряжение,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Назначение,
		|	ВЫБОР КОГДА Таблица.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) Тогда
		|		ДанныеДокументаПоступления.Серия
		|	ИНАЧЕ
		|		Таблица.Серия
		|	КОНЕЦ,
		|	Таблица.Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Набор.Распоряжение         КАК Распоряжение,
		|	Набор.Номенклатура         КАК Номенклатура,
		|	Набор.Характеристика       КАК Характеристика,
		|	Набор.Назначение           КАК Назначение,
		|	Набор.Склад                КАК Склад,
		|	Набор.Серия                КАК Серия,
		|	СУММА(Набор.Количество)    КАК Количество
		|ИЗ
		|	(
		|	ВЫБРАТЬ
		|		Таблица.Распоряжение         КАК Распоряжение,
		|		Таблица.Номенклатура         КАК Номенклатура,
		|		Таблица.Характеристика       КАК Характеристика,
		|		Таблица.Назначение           КАК Назначение,
		|		Таблица.Склад                КАК Склад,
		|		Таблица.Серия                КАК Серия,
		|		Таблица.Количество           КАК Количество
		|	ИЗ
		|		ВтПринято КАК Таблица
		|		
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Таблица.Распоряжение         КАК Распоряжение,
		|		Таблица.Номенклатура         КАК Номенклатура,
		|		Таблица.Характеристика       КАК Характеристика,
		|		Таблица.Назначение           КАК Назначение,
		|		Таблица.Склад                КАК Склад,
		|		Таблица.Серия                КАК Серия,
		|		-Таблица.Количество          КАК Количество
		|	ИЗ
		|		ВтОформлено КАК Таблица
		|		
		|	) КАК Набор
		|
		|СГРУППИРОВАТЬ ПО
		|	Распоряжение,
		|	Номенклатура,
		|	Характеристика,
		|	Назначение,
		|	Склад,
		|	Серия";
		
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Таблица.ДокументПоступления КАК Распоряжение,
		|	Таблица.Номенклатура        КАК Номенклатура,
		|	Таблица.Характеристика      КАК Характеристика,
		|	Таблица.Назначение          КАК Назначение,
		|	Таблица.Склад               КАК Склад,
		|	Таблица.Серия               КАК Серия,
		|	Таблица.КОформлениюРасход   КАК КОформлениюРасход,
		|	Таблица.КОформлениюПриход   КАК КОформлениюПриход
		|ПОМЕСТИТЬ ВтДанныеРегистра
		|ИЗ
		|	РегистрНакопления.ТоварыКОформлениюПоступления.Обороты(, , , ДокументПоступления В (&Распоряжения)
		|//&Отбор
		|	)КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Набор.Распоряжение         КАК Распоряжение,
		|	Набор.Номенклатура         КАК Номенклатура,
		|	Набор.Характеристика       КАК Характеристика,
		|	Набор.Назначение           КАК Назначение,
		|	Набор.Склад                КАК Склад,
		|	Набор.Серия                КАК Серия,
		|	СУММА(Набор.Количество)    КАК Количество
		|ИЗ
		|	(
		|	ВЫБРАТЬ
		|		Таблица.Распоряжение         КАК Распоряжение,
		|		Таблица.Номенклатура         КАК Номенклатура,
		|		Таблица.Характеристика       КАК Характеристика,
		|		Таблица.Назначение           КАК Назначение,
		|		Таблица.Склад                КАК Склад,
		|		Таблица.Серия                КАК Серия,
		|		Таблица.КОформлениюПриход    КАК Количество
		|	ИЗ
		|		ВтДанныеРегистра КАК Таблица
		|	ГДЕ
		|		Таблица.КОформлениюПриход > 0
		|		
		|	ОБЪЕДИНИТЬ ВСЕ
		|		
		|	ВЫБРАТЬ
		|		Таблица.Распоряжение         КАК Распоряжение,
		|		Таблица.Номенклатура         КАК Номенклатура,
		|		Таблица.Характеристика       КАК Характеристика,
		|		Таблица.Назначение           КАК Назначение,
		|		Таблица.Склад                КАК Склад,
		|		Таблица.Серия                КАК Серия,
		|		-Таблица.КОформлениюРасход   КАК Количество
		|	ИЗ
		|		ВтДанныеРегистра КАК Таблица
		|	ГДЕ
		|		Таблица.КОформлениюРасход > 0
		|		
		|	ОБЪЕДИНИТЬ ВСЕ
		|		
		|	ВЫБРАТЬ
		|		Таблица.ДокументПоступления  КАК Распоряжение,
		|		Таблица.Номенклатура         КАК Номенклатура,
		|		Таблица.Характеристика       КАК Характеристика,
		|		Таблица.Назначение           КАК Назначение,
		|		Таблица.Склад                КАК Склад,
		|		Таблица.Серия                КАК Серия,
		|		СУММА(Таблица.КОформлению)   КАК Количество
		|	ИЗ
		|		РегистрНакопления.ТоварыКОформлениюПоступления КАК Таблица
		|	ГДЕ
		|		Таблица.Регистратор В(&Регистратор)
		|		И Таблица.ДокументПоступления В(&Распоряжения)
		|		И Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Таблица.КОформлению > 0
		|		И Таблица.Активность
		|		//&Отбор
		|
		|	СГРУППИРОВАТЬ ПО
		|		Таблица.ДокументПоступления,
		|		Таблица.Номенклатура,
		|		Таблица.Характеристика,
		|		Таблица.Назначение,
		|		Таблица.Серия,
		|		Таблица.Склад
		|	) КАК Набор
		|
		|СГРУППИРОВАТЬ ПО
		|	Распоряжение,
		|	Номенклатура,
		|	Характеристика,
		|	Назначение,
		|	Склад,
		|	Серия";
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборПоИзмерениям) Тогда
		
		ТекстОтбора = "";
		
		Для Каждого КлючЗначение Из ОтборПоИзмерениям Цикл
			
			Ключ = КлючЗначение.Ключ;
			
			ТекстОтбора = 
				ТекстОтбора
				+ " И "
				+ Ключ
				+ " В(&"
				+ КлючЗначение.Значение
				+ ")";
			
		КонецЦикла;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//&Отбор", ТекстОтбора);
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ТоварыКОформлениюПоступления";
	ИмяРегистра = "ТоварыКОформлениюПоступления";
	
	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить("Документ.АктОРасхожденияхПослеПеремещения");
	СписокДокументов.Добавить("Документ.АктОРасхожденияхПослеПриемки");
	СписокДокументов.Добавить("Документ.ВозвратТоваровОтКлиента");
	СписокДокументов.Добавить("Документ.ПеремещениеТоваров");
	СписокДокументов.Добавить("Документ.ПоступлениеТоваровУслуг");
	СписокДокументов.Добавить("Документ.ПриходныйОрдерНаТовары");
	СписокДокументов.Добавить("Документ.ПрочееОприходованиеТоваров");
	СписокДокументов.Добавить("Документ.СборкаТоваров");
	//++ НЕ УТ
	СписокДокументов.Добавить("Документ.ВозвратМатериаловИзПроизводства");
	СписокДокументов.Добавить("Документ.ВозвратСырьяОтПереработчика");
	СписокДокументов.Добавить("Документ.ВыпускПродукции");
	СписокДокументов.Добавить("Документ.ПоступлениеОтПереработчика");
	//-- НЕ УТ	
	//++ НЕ УТКА
	СписокДокументов.Добавить("Документ.ДвижениеПродукцииИМатериалов");
	СписокДокументов.Добавить("Документ.ПоступлениеСырьяОтДавальца");
	//-- НЕ УТКА
	
	Для каждого ПолноеИмяДокумента Из СписокДокументов Цикл
		ИмяДокумента = СтрРазделить(ПолноеИмяДокумента, ".")[1];
		ТекстЗапросаМеханизмаПроведения = Документы[ИмяДокумента].АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
		Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
								ТекстЗапросаМеханизмаПроведения,
								ПолноеИмяРегистра,
								ПолноеИмяДокумента);
		
		ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	КонецЦикла;
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	ДополнительныеПараметрыВыборкиДанных = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметрыВыборкиДанных.ВыбиратьПорциями = Ложь;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(Параметры.Очередь,
																								Неопределено,
																								ПолноеИмяРегистра,
																								МенеджерВТ,
																								ДополнительныеПараметрыВыборкиДанных);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыКОформлениюПоступления.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюПоступления КАК ТоварыКОформлениюПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИмяВТ КАК ИмяВТ
	|		ПО ТоварыКОформлениюПоступления.Регистратор = ИмяВТ.Регистратор
	|ГДЕ
	|	ТоварыКОформлениюПоступления.Отправитель = НЕОПРЕДЕЛЕНО
	|	И ИмяВТ.Регистратор ЕСТЬ NULL";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВТ", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = ТекстЗапроса;
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ТоварыКОформлениюПоступления";
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения       = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьРегистраторыРегистраДляОбработки(Параметры.Очередь, "Документ.КорректировкаРегистров",
		ПолноеИмяРегистра);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Движения.Регистратор         КАК Регистратор,
	|	Движения.Период              КАК Период,
	|	Движения.ВидДвижения         КАК ВидДвижения,
	|	Движения.ДокументПоступления КАК ДокументПоступления,
	|	Движения.Отправитель         КАК Отправитель,
	|	Движения.Склад               КАК Склад,
	|	Движения.Номенклатура        КАК Номенклатура,
	|	Движения.Характеристика      КАК Характеристика,
	|	Движения.Назначение          КАК Назначение,
	|	Движения.Серия               КАК Серия,
	|	Движения.КОформлению         КАК КОформлению
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюПоступления КАК Движения
	|ГДЕ
	|	Движения.Регистратор = &Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	Движения.НомерСтроки";
	
	Пока Выборка.Следующий() Цикл
		
		Регистратор = Выборка.Регистратор;
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("Регистратор", Регистратор);
			
			Набор = РегистрыНакопления.ТоварыКОформлениюПоступления.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Регистратор);
			
			Результат = Запрос.Выполнить().Выгрузить();
			
			Если Результат.Количество() = 0 Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Регистратор, ДополнительныеПараметры);
				ЗафиксироватьТранзакцию();
				
				Продолжить;
			КонецЕсли;
			
			Набор.Загрузить(Результат);
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,
				Регистратор.Метаданные(), ТекстСообщения);
		КонецПопытки;
		
	КонецЦикла;
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.АктОРасхожденияхПослеПеремещения");
	Регистраторы.Добавить("Документ.АктОРасхожденияхПослеПриемки");
	Регистраторы.Добавить("Документ.ВозвратТоваровОтКлиента");
	Регистраторы.Добавить("Документ.ПеремещениеТоваров");
	Регистраторы.Добавить("Документ.ПоступлениеТоваровУслуг");
	Регистраторы.Добавить("Документ.ПриходныйОрдерНаТовары");
	Регистраторы.Добавить("Документ.ПрочееОприходованиеТоваров");
	Регистраторы.Добавить("Документ.СборкаТоваров");
	//++ НЕ УТ
	Регистраторы.Добавить("Документ.ВозвратМатериаловИзПроизводства");
	Регистраторы.Добавить("Документ.ВозвратСырьяОтПереработчика");
	Регистраторы.Добавить("Документ.ВыпускПродукции");
	Регистраторы.Добавить("Документ.ПоступлениеОтПереработчика");
	//-- НЕ УТ	
	//++ НЕ УТКА
	Регистраторы.Добавить("Документ.ДвижениеПродукцииИМатериалов");
	Регистраторы.Добавить("Документ.ПоступлениеСырьяОтДавальца");
	//-- НЕ УТКА
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(Регистраторы, ПолноеИмяРегистра,
		Параметры.Очередь);
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
