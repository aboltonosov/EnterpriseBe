#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ПланыПотребленияКомплектующих";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Планы.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ПланыПотребленияКомплектующих КАК Планы
	|ГДЕ
	|	Планы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПланов.ПустаяСсылка)";
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
	// Заполнение нового измерения "ХозяйственнаяОперация"
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Планы.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ПланыПотребленияКомплектующих КАК Планы
	|ГДЕ
	|	Планы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)";
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяДокумента = "Документ.ПланСборкиРазборки";
	ПолноеИмяРегистра = "РегистрНакопления.ПланыПотребленияКомплектующих";
	
	ИмяРегистра = СтрРазделить(ПолноеИмяРегистра,".",Ложь)[1];
	МенеджерРегистра = РегистрыНакопления.ПланыПотребленияКомплектующих;
	МенеджерДокумента = Документы.ПланСборкиРазборки;
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ДополнительныеИсточникиДанных = МенеджерДокумента.ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра);
	
	ВыборкаПоРегистраторам = ОбновлениеИнформационнойБазы.ВыбратьРегистраторыРегистраДляОбработки(Параметры.Очередь,
		ПолноеИмяДокумента,
		ПолноеИмяРегистра,
		ДополнительныеПараметры);
	
	Пока ВыборкаПоРегистраторам.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			// Устанавливаем управляемую блокировку, чтобы провести ответственное чтение объекта
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПоРегистраторам.Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", ВыборкаПоРегистраторам.Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			НаборЗаписей = МенеджерРегистра.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаПоРегистраторам.Регистратор);
			
			//Выполним ответственное чтение реквизитов "Проведен", "Статус" и "ХозяйственнаяОперация"
			ОбъектМетаданных = ВыборкаПоРегистраторам.Регистратор.Метаданные();
			ЕстьХозОперация = ОбщегоНазначения.ЕстьРеквизитОбъекта("ХозяйственнаяОперация", ОбъектМетаданных);
			ЗаполняемыеРеквизиты = ?(ЕстьХозОперация, "Проведен, Статус, ХозяйственнаяОперация", "Проведен, Статус");
			
			Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВыборкаПоРегистраторам.Регистратор, ЗаполняемыеРеквизиты);
			
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() > 0
				И Реквизиты.Проведен Тогда
				
				Для каждого Запись Из НаборЗаписей Цикл
					ЗаполнитьЗначенияСвойств(Запись, Реквизиты); // "Статус" и "ХозяйственнаяОперация"
				КонецЦикла;
				НаборЗаписей.УстановитьАктивность(Истина);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось перезаписать движения в регистр %ИмяРегистра% по документу %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ВыборкаПоРегистраторам.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистра%", ПолноеИмяРегистра);
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.НайтиПоПолномуИмени(ПолноеИмяДокумента), ВыборкаПоРегистраторам.Регистратор, ТекстСообщения);
			
		КонецПопытки;
	КонецЦикла;
	
	ОбработкаЗавершена = НЕ ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли