#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура рассчитывает и записывает итог запланированного поступления по распоряжению а регистр 
// ГрафикПоступленияТоваров (в регистр записи пишутся только из этого модуля).
// Все плановые поступления\отгрузки записываются в регистр движения товаров. Дата поступления\отгрузки
// указывается в "Периоде". При фактическом поступлении\отгрузке по заказу происходит закрытие графика
// поступления\отгрузки по ФИФО. Рассчитанные записи записываются под распоряжение. Если поступило\отгрузили
// больше, чем в заказе - отрицательные остатки в регистр не пишутся.
// 
// Параметры:
//  МассивРаспоряжений - Массив - массив распоряжений (заказов) по которым нужно рассчитать график поступления.
//
Процедура РассчитатьИтогиРегистраОстаткиТоваровПоГрафику(МассивРаспоряжений) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивРаспоряжений", МассивРаспоряжений);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МАКСИМУМ(Движения.ДатаРаспоряжения)    КАК ДатаРаспоряжения,
		|	Движения.Распоряжение                  КАК Распоряжение,
		|	Движения.Номенклатура                  КАК Номенклатура,
		|	Движения.Характеристика                КАК Характеристика,
		|	Движения.Назначение                    КАК Назначение,
		|	Движения.Склад                         КАК Склад,
		|
		|	СУММА(ВЫБОР КОГДА Движения.Корректировка ТОГДА
		|				-Движения.ПланируемоеПоступление
		|			ИНАЧЕ
		|				Движения.ПланируемоеПоступление
		|		КОНЕЦ)                             КАК ПланируемоеПоступлениеОстаток,
		|
		|	СУММА(ВЫБОР КОГДА Движения.Корректировка ТОГДА
		|				- Движения.ПланируемоеПоступлениеПодЗаказ
		|			ИНАЧЕ
		|				Движения.ПланируемоеПоступлениеПодЗаказ
		|		КОНЕЦ)                             КАК ПланируемоеПоступлениеПодЗаказОстаток,
		|
		|	СУММА(ВЫБОР КОГДА Движения.Корректировка ТОГДА
		|				-Движения.ПланируемоеПоступлениеСНеподтвержденными
		|			ИНАЧЕ
		|				Движения.ПланируемоеПоступлениеСНеподтвержденными
		|		КОНЕЦ)                             КАК ПланируемоеПоступлениеСНеподтвержденнымиОстаток,
		|
		|	СУММА(ВЫБОР КОГДА Движения.Корректировка ТОГДА
		|				- Движения.ПланируемоеПоступлениеПодЗаказСНеподтвержденными
		|			ИНАЧЕ
		|				Движения.ПланируемоеПоступлениеПодЗаказСНеподтвержденными
		|		КОНЕЦ)                             КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденнымиОстаток
		|
		|ПОМЕСТИТЬ ОстаткиПоРаспоряжению
		|
		|ИЗ
		|	РегистрНакопления.ДвижениеТоваров КАК Движения
		|ГДЕ
		|	Движения.Распоряжение В(&МассивРаспоряжений)
		|	И Движения.Активность
		|СГРУППИРОВАТЬ ПО
		|	Движения.Распоряжение,
		|	Движения.Номенклатура, Движения.Характеристика, Движения.Склад, Движения.Назначение
		|ИНДЕКСИРОВАТЬ ПО
		|	Распоряжение,
		|	Номенклатура, Характеристика, Склад, Назначение
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(Таблица.Период, ДЕНЬ)   КАК Период,
		|	Таблица.Номенклатура                  КАК Номенклатура,
		|	Таблица.Характеристика                КАК Характеристика,
		|	Таблица.Назначение                    КАК Назначение,
		|	Таблица.Склад                         КАК Склад,
		|	Таблица.Распоряжение                  КАК Распоряжение,
		|
		|	СУММА(Таблица.ПланируемоеПоступление)                           КАК ПланируемоеПоступление,
		|	СУММА(Таблица.ПланируемоеПоступлениеПодЗаказ)                   КАК ПланируемоеПоступлениеПодЗаказ,
		|	СУММА(Таблица.ПланируемоеПоступлениеСНеподтвержденными)         КАК ПланируемоеПоступлениеСНеподтвержденными,
		|	СУММА(Таблица.ПланируемоеПоступлениеПодЗаказСНеподтвержденными) КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
		|
		|ПОМЕСТИТЬ ПланДвижения
		|
		|ИЗ
		|	РегистрНакопления.ДвижениеТоваров КАК Таблица
		|ГДЕ
		|	Таблица.Распоряжение В(&МассивРаспоряжений)
		|	И (Таблица.ПланируемоеПоступление > 0
		|		ИЛИ Таблица.ПланируемоеПоступлениеПодЗаказ > 0
		|		ИЛИ Таблица.ПланируемоеПоступлениеСНеподтвержденными > 0
		|		ИЛИ Таблица.ПланируемоеПоступлениеПодЗаказСНеподтвержденными > 0)
		|	И Таблица.Активность
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(Таблица.Период, ДЕНЬ),
		|	Таблица.Распоряжение,
		|	Таблица.Номенклатура, Таблица.Характеристика, Таблица.Склад, Таблица.Назначение
		|
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	План.Период                                                                         КАК Период,
		|	План.Номенклатура                                                                   КАК Номенклатура,
		|	План.Характеристика                                                                 КАК Характеристика,
		|	План.Склад                                                                          КАК Склад,
		|	План.Назначение                                                                     КАК Назначение,
		|	План.Распоряжение                                                                   КАК Распоряжение,
		|
		|	МАКСИМУМ(План.ПланируемоеПоступление)                                               КАК ПланируемоеПоступление,
		|	МАКСИМУМ(План.ПланируемоеПоступлениеПодЗаказ)                                       КАК ПланируемоеПоступлениеПодЗаказ,
		|	СУММА(ЕСТЬNULL(Остатки.ПланируемоеПоступлениеОстаток, 0))                           КАК ПланируемоеПоступлениеОстаток,
		|	СУММА(ЕСТЬNULL(Остатки.ПланируемоеПоступлениеПодЗаказОстаток, 0))                   КАК ПланируемоеПоступлениеПодЗаказОстаток,
		|
		|	МАКСИМУМ(План.ПланируемоеПоступлениеСНеподтвержденными)                             КАК ПланируемоеПоступлениеСНеподтвержденными,
		|	МАКСИМУМ(План.ПланируемоеПоступлениеПодЗаказСНеподтвержденными)                     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными,
		|	СУММА(ЕСТЬNULL(Остатки.ПланируемоеПоступлениеСНеподтвержденнымиОстаток, 0))         КАК ПланируемоеПоступлениеСНеподтвержденнымиОстаток,
		|	СУММА(ЕСТЬNULL(Остатки.ПланируемоеПоступлениеПодЗаказСНеподтвержденнымиОстаток, 0)) КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденнымиОстаток,
		|
		|	МАКСИМУМ(ЕСТЬNULL(Остатки.ДатаРаспоряжения, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаРаспоряжения
		|
		|ИЗ
		|	ПланДвижения КАК План
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоРаспоряжению КАК Остатки
		|		ПО План.Номенклатура      = Остатки.Номенклатура
		|			И План.Характеристика = Остатки.Характеристика
		|			И План.Склад          = Остатки.Склад
		|			И План.Распоряжение   = Остатки.Распоряжение
		|			И План.Назначение     = Остатки.Назначение
		|
		|СГРУППИРОВАТЬ ПО
		|	План.Период,
		|	План.Номенклатура, План.Характеристика, План.Склад, План.Назначение,
		|	План.Распоряжение
		|
		|УПОРЯДОЧИТЬ ПО
		|	Распоряжение,
		|	Номенклатура, Характеристика, Склад, Назначение,
		|	Период УБЫВ";

	НаборЗаписей = РегистрыНакопления.ГрафикПоступленияТоваров.СоздатьНаборЗаписей();
	Выборка = Запрос.Выполнить().Выбрать();
	ЕстьЗаписиВВыборке = Выборка.Следующий();
	Пока ЕстьЗаписиВВыборке Цикл

		ТекСклад          = Неопределено;
		ТекНоменклатура   = Неопределено;
		ТекХарактеристика = Неопределено;
		ТекНазначение     = Неопределено;
		ТекРаспоряжение   = Выборка.Распоряжение;

		НаборЗаписей.Отбор.Регистратор.Установить(ТекРаспоряжение);
		// Из таблицы удаляем отработанное распоряжение
		МассивРаспоряжений.Удалить(МассивРаспоряжений.Найти(ТекРаспоряжение));

		// Цикл по строкам одного распоряжения на поступление\отгрузку.
		ДатаРаспоряжения = НачалоДня(ТекущаяДатаСеанса());
		Пока ЕстьЗаписиВВыборке И Выборка.Распоряжение = ТекРаспоряжение Цикл

			Если ЗначениеЗаполнено(Выборка.ДатаРаспоряжения) Тогда
				ДатаРаспоряжения = Выборка.ДатаРаспоряжения;
			КонецЕсли;
			
			Если ТекНоменклатура <> Выборка.Номенклатура Или ТекХарактеристика <> Выборка.Характеристика
				Или ТекСклад <> Выборка.Склад Или ТекНазначение <> Выборка.Назначение Тогда

				ТекНоменклатура   = Выборка.Номенклатура;
				ТекХарактеристика = Выборка.Характеристика;
				ТекСклад          = Выборка.Склад;
				ТекНазначение     = Выборка.Назначение;

				ПоступлениеКоличествоОстаток = 0;
				Если Выборка.ПланируемоеПоступлениеОстаток > 0 Тогда
					ПоступлениеКоличествоОстаток = Выборка.ПланируемоеПоступлениеОстаток;
				КонецЕсли;

				ПоступлениеПодЗаказКоличествоОстаток = 0;
				Если Выборка.ПланируемоеПоступлениеПодЗаказОстаток > 0 Тогда
					ПоступлениеПодЗаказКоличествоОстаток = Выборка.ПланируемоеПоступлениеПодЗаказОстаток;
				КонецЕсли;

				ПоступлениеКоличествоСНеподтвержденнымиОстаток = 0;
				Если Выборка.ПланируемоеПоступлениеСНеподтвержденнымиОстаток > 0 Тогда
					ПоступлениеКоличествоСНеподтвержденнымиОстаток = Выборка.ПланируемоеПоступлениеСНеподтвержденнымиОстаток;
				КонецЕсли;

				ПоступлениеПодЗаказКоличествоСНеподтвержденнымиОстаток = 0;
				Если Выборка.ПланируемоеПоступлениеПодЗаказСНеподтвержденнымиОстаток > 0 Тогда
					ПоступлениеПодЗаказКоличествоСНеподтвержденнымиОстаток = Выборка.ПланируемоеПоступлениеПодЗаказСНеподтвержденнымиОстаток;
				КонецЕсли;

			КонецЕсли;

			КоличествоПоступление = 0;
			КоличествоПоступлениеПодЗаказ = 0;
			
			КоличествоПоступлениеСНеподтвержденными = 0;
			КоличествоПоступлениеПодЗаказСНеподтвержденными = 0;

			Если Выборка.ПланируемоеПоступление > 0
				Или Выборка.ПланируемоеПоступлениеПодЗаказ > 0
				Или Выборка.ПланируемоеПоступлениеСНеподтвержденными > 0
				Или Выборка.ПланируемоеПоступлениеПодЗаказСНеподтвержденными > 0 Тогда

				КоличествоПоступление         = Мин(Выборка.ПланируемоеПоступление,         ПоступлениеКоличествоОстаток);
				КоличествоПоступлениеПодЗаказ = Мин(Выборка.ПланируемоеПоступлениеПодЗаказ, ПоступлениеПодЗаказКоличествоОстаток);
				
				КоличествоПоступлениеСНеподтвержденными         = Мин(Выборка.ПланируемоеПоступлениеСНеподтвержденными,         ПоступлениеКоличествоСНеподтвержденнымиОстаток);
				КоличествоПоступлениеПодЗаказСНеподтвержденными = Мин(Выборка.ПланируемоеПоступлениеПодЗаказСНеподтвержденными, ПоступлениеПодЗаказКоличествоСНеподтвержденнымиОстаток);
				
				Если КоличествоПоступление > 0
					Или КоличествоПоступлениеПодЗаказ > 0
					Или КоличествоПоступлениеСНеподтвержденными > 0
					Или КоличествоПоступлениеПодЗаказСНеподтвержденными > 0 Тогда
					
					ДобавитьПриходВГрафик(НаборЗаписей,
					                      Выборка,
					                      КоличествоПоступление,
					                      КоличествоПоступлениеПодЗаказ,
					                      КоличествоПоступлениеСНеподтвержденными,
					                      КоличествоПоступлениеПодЗаказСНеподтвержденными);
				КонецЕсли;
				
				ПоступлениеКоличествоОстаток         = ПоступлениеКоличествоОстаток         - КоличествоПоступление;
				ПоступлениеПодЗаказКоличествоОстаток = ПоступлениеПодЗаказКоличествоОстаток - КоличествоПоступлениеПодЗаказ;
				
				ПоступлениеКоличествоСНеподтвержденнымиОстаток         = ПоступлениеКоличествоСНеподтвержденнымиОстаток         - КоличествоПоступлениеСНеподтвержденными;
				ПоступлениеПодЗаказКоличествоСНеподтвержденнымиОстаток = ПоступлениеПодЗаказКоличествоСНеподтвержденнымиОстаток - КоличествоПоступлениеПодЗаказСНеподтвержденными;

			КонецЕсли;

			// Переход к следующей записи в выборке.
			ЕстьЗаписиВВыборке = Выборка.Следующий();

		КонецЦикла;

		// Запись и очистка набора.
		НаборЗаписей.Записать(Истина);
		ЗаписатьОбеспечениеЗаказов(НаборЗаписей, ДатаРаспоряжения);
		НаборЗаписей.Очистить();

	КонецЦикла;

	// По неотработанным распоряжениям нужно очистить движения.
	НаборЗаписей.Очистить();
	ДатаРаспоряжения = Неопределено;
	Если МассивРаспоряжений.Количество() > 0 Тогда
		Для Каждого Распоряжение Из МассивРаспоряжений Цикл
			
			НаборЗаписей.Отбор.Регистратор.Установить(Распоряжение);
			НаборЗаписей.Записать(Истина);
			ЗаписатьОбеспечениеЗаказов(НаборЗаписей, ДатаРаспоряжения);
			
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ИмяРегистра = "ДвижениеТоваров";
	ПолноеИмяРегистра = "РегистрНакопления.ДвижениеТоваров";
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	// Корректировки поступлений.
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвижениеТоваров.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ДвижениеТоваров КАК ДвижениеТоваров
	|ГДЕ
	|	ДвижениеТоваров.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	|	И ДвижениеТоваров.Активность";
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ДвижениеТоваров";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Обработка корректировок поступления.
	ИмяРегистра = "ДвижениеТоваров";
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(
		Параметры.Очередь,
		"Документ.КорректировкаПоступления",
		ПолноеИмяРегистра,
		МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СсылкиДляОбработки.Регистратор КАК Регистратор
	|ИЗ
	|	&ВТДляОбработкиСсылка КАК СсылкиДляОбработки
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДляОбработкиСсылка", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаРегистраторов = РезультатЗапроса.Выгрузить();
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвижениеТоваров.Распоряжение КАК Распоряжение
	|ПОМЕСТИТЬ ВтРаспоряжения
	|ИЗ
	|	РегистрНакопления.ДвижениеТоваров КАК ДвижениеТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ &ВТДляОбработкиСсылка КАК ВтКорректировки
	|		ПО (ВтКорректировки.Регистратор = ДвижениеТоваров.Регистратор)
	|ГДЕ
	|	ДвижениеТоваров.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказыПоставщикам.ЗаказПоставщику КАК ЗаказПоставщику
	|ПОМЕСТИТЬ ВтОбновленныеЗаказы
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам КАК ЗаказыПоставщикам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРаспоряжения КАК ВтРаспоряжения
	|		ПО (ВтРаспоряжения.Распоряжение = ЗаказыПоставщикам.ЗаказПоставщику
	|				ИЛИ ВтРаспоряжения.Распоряжение.Соглашение = ЗаказыПоставщикам.ЗаказПоставщику.Соглашение)
	|ГДЕ
	|	ЗаказыПоставщикам.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаПоступленияТовары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТРегистраторы
	|ИЗ
	|	Документ.КорректировкаПоступления.Товары КАК КорректировкаПоступленияТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ &ВТДляОбработкиСсылка КАК ВтКорректировки
	|		ПО (ВтКорректировки.Регистратор = КорректировкаПоступленияТовары.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОбновленныеЗаказы КАК ВтОбновленныеЗаказы
	|		ПО (ВтОбновленныеЗаказы.ЗаказПоставщику = КорректировкаПоступленияТовары.ЗаказПоставщику)
	|ГДЕ
	|	НЕ ВтОбновленныеЗаказы.ЗаказПоставщику ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Формирование движений.
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка               КАК Регистратор,
	|	ТаблицаТовары.Ссылка.Представление КАК РегистраторПредставление,
	|	ТаблицаТовары.Ссылка.Дата          КАК Период,
	|	ТаблицаТовары.Ссылка.ВерсияДанных  КАК ВерсияДанных,
	|	ТаблицаТовары.ЗаказПоставщику      КАК Распоряжение,
	|	ТаблицаТовары.ЗаказПоставщику.ВерсияДанных  КАК ВерсияДанныхЗаказ,
	|	ТаблицаТовары.Склад                КАК Склад,
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.Характеристика       КАК Характеристика,
	|	ТаблицаТовары.Назначение           КАК Назначение,
	|	
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			-ТаблицаТовары.Количество
	|		КОНЕЦ КАК ПланируемоеПоступление,
	|	
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			-ТаблицаТовары.Количество
	|		КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказ,
	|	
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			-ТаблицаТовары.Количество
	|		КОНЕЦ КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			-ТаблицаТовары.Количество
	|		КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными,
	|	
	|	ЛОЖЬ КАК Корректировка
	|ИЗ
	|	Документ.КорректировкаПоступления.Расхождения КАК ТаблицаТовары
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистраторы КАК РегистраторыДляОбработки
	|		ПО РегистраторыДляОбработки.Ссылка = ТаблицаТовары.Ссылка
	|ГДЕ
	|	ТаблицаТовары.Ссылка.ПоступлениеПоЗаказам
	|	И НЕ(ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|	И ТаблицаТовары.ВариантОтражения В(
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияКорректировокПоступлений.УвеличитьЗакупкуУчестьПриИнвентаризации),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияКорректировокПоступлений.УвеличитьЗакупкуУвеличитьСкладскиеОстатки))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка               КАК Регистратор,
	|	ТаблицаТовары.Ссылка.Представление КАК РегистраторПредставление,
	|	ТаблицаТовары.Ссылка.Дата          КАК Период,
	|	ТаблицаТовары.Ссылка.ВерсияДанных  КАК ВерсияДанных,
	|	ТаблицаТовары.ЗаказПоставщику      КАК Распоряжение,
	|	ТаблицаТовары.ЗаказПоставщику.ВерсияДанных  КАК ВерсияДанныхЗаказ,
	|	ТаблицаТовары.Склад                КАК Склад,
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.Характеристика       КАК Характеристика,
	|	ТаблицаТовары.Назначение            КАК Назначение,
	|	
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			-ТаблицаТовары.Количество
	|		КОНЕЦ КАК ПланируемоеПоступление,
	|	
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			-ТаблицаТовары.Количество
	|		КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказ,
	|	
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			-ТаблицаТовары.Количество
	|		КОНЕЦ КАК ПланируемоеПоступлениеСНеподтвержденными,
	|	
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			-ТаблицаТовары.Количество
	|		КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными,
	|	
	|	ИСТИНА КАК Корректировка
	|ИЗ
	|	Документ.КорректировкаПоступления.Расхождения КАК ТаблицаТовары
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистраторы КАК РегистраторыДляОбработки
	|		ПО РегистраторыДляОбработки.Ссылка = ТаблицаТовары.Ссылка
	|ГДЕ
	|	ТаблицаТовары.Ссылка.ПоступлениеПоЗаказам
	|	И НЕ(ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|	И ТаблицаТовары.ВариантОтражения В(
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияКорректировокПоступлений.УменьшитьЗакупкуУчестьПриИнвентаризации),
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияКорректировокПоступлений.УменьшитьЗакупкуУменьшитьСкладскиеОстатки))
	|ИТОГИ ПО
	|	Регистратор";
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&ВТДляОбработкиСсылка", Результат.ИмяВременнойТаблицы);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаКорректировка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// Перенос движений из документа Корректировка поступления в документ Корректировка регистров
	Пока ВыборкаКорректировка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
		ЭлементБлокировки.УстановитьЗначение("Регистратор", ВыборкаКорректировка.Регистратор);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		
		Попытка
			Блокировка.Заблокировать();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось установить блокировку на регистр ""Движение товаров"": %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", ВыборкаКорректировка.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				ВыборкаКорректировка.Регистратор.Метаданные(),
				ВыборкаКорректировка.Регистратор,
				ТекстСообщения);
			Параметры.ОбработкаЗавершена = Ложь;
			Возврат;
		КонецПопытки;
		
		ПроверкаПройдена = ПроверитьВерсииДанных(ВыборкаКорректировка);
		Если Не ПроверкаПройдена Тогда
			ОтменитьТранзакцию();
			Продолжить;
		КонецЕсли;
		
		Комментарий = НСтр("ru='Перенесены движения документа %Документ%.
			|Документ создан обработчиком обновления по корректировке движений по регистру накопления ""Движение товаров"".
			|Документ ""Корректировка поступления"" движения по данному регистру больше не делает.'");
			
			
		Попытка
			КорректировкаРегистров = Документы.КорректировкаРегистров.СоздатьДокумент();
			
			КорректировкаРегистров.Дата = ТекущаяДатаСеанса();
			КорректировкаРегистров.УстановитьНовыйНомер();
			КорректировкаРегистров.Комментарий = СтрЗаменить(Комментарий, "%Документ%", ВыборкаКорректировка.РегистраторПредставление);
			
			СтрокаТаблицыРегистров = КорректировкаРегистров.ТаблицаРегистров.Добавить();
			СтрокаТаблицыРегистров.Имя = ИмяРегистра;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(КорректировкаРегистров);
			КорректировкаРегистровСсылка = КорректировкаРегистров.Ссылка;
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось создать документ ""Корректировка регистров"" по причине:
				|%2'"), 
				ВыборкаКорректировка.Регистратор,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				ВыборкаКорректировка.Регистратор.Метаданные(),
				ВыборкаКорректировка.Регистратор,
				ТекстСообщения);
				
			Параметры.ОбработкаЗавершена = Ложь;
			Возврат;
			
		КонецПопытки;
		
		//Перенос движений в Корректировку регистров
		НаборЗаписей = РегистрыНакопления.ДвижениеТоваров.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(КорректировкаРегистровСсылка);
		
		ВыборкаДетали = ВыборкаКорректировка.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			
			СтрокаНабораЗаписей = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНабораЗаписей, ВыборкаДетали,,"Регистратор");
		КонецЦикла;
		
		Попытка
				
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось выполнить запись движений по РН ""Движение товаров"" по документу %1 по причине:
				|%2'"), 
				КорректировкаРегистровСсылка,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				КорректировкаРегистровСсылка.Метаданные(),
				КорректировкаРегистровСсылка,
				ТекстСообщения);
				
			Параметры.ОбработкаЗавершена = Ложь;
			Возврат;
			
		КонецПопытки;
		
		//Очистка старых движений по Корректировкам поступления
		НаборЗаписей = РегистрыНакопления.ДвижениеТоваров.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаКорректировка.Регистратор);
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			НайденнаяСтрока = ТаблицаРегистраторов.Найти(ВыборкаКорректировка.Регистратор, "Регистратор");
			Если НайденнаяСтрока <> Неопределено Тогда
				ТаблицаРегистраторов.Удалить(НайденнаяСтрока);
			КонецЕсли;
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось выполнить запись движений по РН ""Движение товаров"" по документу %1 по причине:
				|%2'"), 
				ВыборкаКорректировка.Регистратор,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				ВыборкаКорректировка.Регистратор.Метаданные(),
				ВыборкаКорректировка.Регистратор,
				ТекстСообщения);
				
			Параметры.ОбработкаЗавершена = Ложь;
			Возврат;
		КонецПопытки;
		
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
	
	// Очистка движений документа Корректировка поступления
	Для каждого СтрокаТаблицы Из ТаблицаРегистраторов Цикл
		НаборЗаписей = РегистрыНакопления.ДвижениеТоваров.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(СтрокаТаблицы.Регистратор);
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
		Исключение
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось выполнить запись движений по РН ""Движение товаров"" по документу %1 по причине:
				|%2'"), 
				СтрокаТаблицы.Регистратор,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				СтрокаТаблицы.Регистратор.Метаданные(),
				СтрокаТаблицы.Регистратор,
				ТекстСообщения);
				
			Параметры.ОбработкаЗавершена = Ложь;
			Возврат;
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию2(Параметры) Экспорт
	
	ИмяРегистра = "ДвижениеТоваров";
	ПолноеИмяРегистра = "РегистрНакопления.ДвижениеТоваров";
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвижениеТоваров.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ДвижениеТоваров КАК ДвижениеТоваров
	|ГДЕ
	|	ДвижениеТоваров.Активность
	|	И (ДвижениеТоваров.ПланируемоеПоступлениеСНеподтвержденными = 0
	|			И ДвижениеТоваров.ПланируемоеПоступлениеПодЗаказСНеподтвержденными = 0)
	|	И НЕ ДвижениеТоваров.Регистратор ССЫЛКА Документ.ЗаказПоставщику
	|	И НЕ ДвижениеТоваров.Регистратор ССЫЛКА Документ.КорректировкаПоступления
	|	И НЕ ДвижениеТоваров.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	//++ НЕ УТКА
	|	И НЕ ДвижениеТоваров.Регистратор ССЫЛКА Документ.ЭтапПроизводства2_2
	|	И НЕ ДвижениеТоваров.Регистратор ССЫЛКА Документ.ДвижениеПродукцииИМатериалов
	|	И НЕ ДвижениеТоваров.Регистратор ССЫЛКА Документ.ЗаказНаПроизводство2_2
	//-- НЕ УТКА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Движения приходного ордера, которые должны быть, но их нет
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДокумента.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары.Товары КАК ТаблицаДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеТоваров КАК ТаблицаРегистра
	|	ПО ТаблицаРегистра.Регистратор = ТаблицаДокумента.Ссылка
	|ГДЕ
	|	ТаблицаРегистра.Регистратор ЕСТЬ NULL
	|	И НЕ ТаблицаДокумента.ЭтоУпаковочныйЛист
	|	И ТаблицаДокумента.Ссылка.Статус = Значение(Перечисление.СтатусыПриходныхОрдеров.Принят)
	|	И ТаблицаДокумента.Количество <> 0
	|	И (
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.Ссылка.Распоряжение ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|				И ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Распоряжение КАК Документ.ПоступлениеТоваровУслуг).ПоступлениеПоЗаказам
	|				И ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Распоряжение КАК Документ.ПоступлениеТоваровУслуг).Соглашение.ВариантПриемкиТоваров, &ВариантПриемкиТоваров) = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
	|			ТОГДА ИСТИНА
	|		КОГДА ТаблицаДокумента.Ссылка.Распоряжение ССЫЛКА Документ.ПеремещениеТоваров
	|				И ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Распоряжение КАК Документ.ПеремещениеТоваров).ПеремещениеПоЗаказам
	|				И &ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
	|			ТОГДА ИСТИНА
	|		КОГДА ТаблицаДокумента.Ссылка.Распоряжение ССЫЛКА Документ.СборкаТоваров
	|				И ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Распоряжение КАК Документ.СборкаТоваров).ЗаказНаСборку <> ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
	|				И &ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
	|			ТОГДА ИСТИНА
	//++ НЕ УТКА
	|		КОГДА ТаблицаДокумента.Ссылка.Распоряжение ССЫЛКА Документ.ВыпускПродукции
	|				И ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Распоряжение КАК Документ.ВыпускПродукции).Распоряжение = ЗНАЧЕНИЕ(Документ.МаршрутныйЛистПроизводства.ПустаяСсылка)
	|				И &ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
	|			ТОГДА ЛОЖЬ
	|		КОГДА ТаблицаДокумента.Ссылка.Распоряжение ССЫЛКА Документ.ДвижениеПродукцииИМатериалов
	|				И ВЫРАЗИТЬ(ТаблицаДокумента.Ссылка.Распоряжение КАК Документ.ДвижениеПродукцииИМатериалов).ПоРаспоряжениям
	|				И &ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
	|			ТОГДА ИСТИНА			
	//-- НЕ УТКА
	//++ НЕ УТ
	|		КОГДА ТаблицаДокумента.Ссылка.Распоряжение ССЫЛКА Документ.ВыпускПродукции
	|				И &ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаТолькоПоНакладным)
	|			ТОГДА ИСТИНА
	//-- НЕ УТ
	|		ИНАЧЕ 
	|			ЛОЖЬ
	|	КОНЕЦ 
	|	ИЛИ ВЫБОР
	|			КОГДА ТаблицаДокумента.Ссылка.Распоряжение ССЫЛКА Документ.ЗаказПоставщику
	|					ИЛИ ТаблицаДокумента.Ссылка.Распоряжение ССЫЛКА Документ.ЗаказНаПеремещение
	|					ИЛИ ТаблицаДокумента.Ссылка.Распоряжение ССЫЛКА Документ.ЗаказНаСборку
	|					ИЛИ ТаблицаДокумента.Ссылка.Распоряжение ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
	|					ИЛИ ТаблицаДокумента.Ссылка.Распоряжение ССЫЛКА Справочник.СоглашенияСПоставщиками
	//++ НЕ УТ
	|					ИЛИ ТаблицаДокумента.Ссылка.Распоряжение ССЫЛКА Документ.ЗаказПереработчику
	//++ НЕ УТКА			
	|					ИЛИ ТаблицаДокумента.Ссылка.Распоряжение ССЫЛКА Документ.ЗаказДавальца
	|					ИЛИ ТаблицаДокумента.Ссылка.Распоряжение ССЫЛКА Документ.ЗаказНаПроизводство
	|					ИЛИ ТаблицаДокумента.Ссылка.Распоряжение ССЫЛКА Документ.ЭтапПроизводства2_2
	|					ИЛИ ТаблицаДокумента.Ссылка.Распоряжение ССЫЛКА Документ.ДвижениеПродукцииИМатериалов
	//-- НЕ УТКА
	//-- НЕ УТ
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) <> ТаблицаДокумента.Ссылка.ЗакрыватьГрафикПоступления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	//++ НЕ УТКА
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвижениеТоваров.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ДвижениеТоваров КАК ДвижениеТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказМатериаловВПроизводство КАК Операция
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказМатериаловВПроизводство.Товары КАК Строки
	|			ПО Операция.Ссылка = Строки.Ссылка
	|				И Операция.Дата <> Строки.НачалоОтгрузки
	|				И (Строки.ОкончаниеПоступления = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|		ПО ДвижениеТоваров.Регистратор = Операция.Ссылка
	|			И ДвижениеТоваров.Период = Операция.Дата
	|			И (Операция.УправлениеПроизводством2_2)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвижениеТоваров.Регистратор
	|ИЗ
	|	РегистрНакопления.ДвижениеТоваров КАК ДвижениеТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказМатериаловВПроизводство КАК Операция
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказМатериаловВПроизводство.Товары КАК Строки
	|			ПО Операция.Ссылка = Строки.Ссылка
	|				И Операция.Дата <> Строки.ОкончаниеПоступления
	|				И (Строки.ОкончаниеПоступления <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))
	|		ПО ДвижениеТоваров.Регистратор = Операция.Ссылка
	|			И ДвижениеТоваров.Период = Операция.Дата
	|			И (Операция.УправлениеПроизводством2_2)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	//-- НЕ УТКА
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Операция.Ссылка
	|ИЗ
	|	Документ.ЗаказПоставщику КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК Строки
	|		ПО Операция.Ссылка = Строки.Ссылка
	|			И Строки.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			И Операция.ДатаПоступления >= Строки.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками КАК СоглашенияСПоставщиками
	|			ПО Операция.Соглашение = СоглашенияСПоставщиками.Ссылка
	|			И СоглашенияСПоставщиками.ВариантПриемкиТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.НеРазделенаПоНакладным)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеТоваров КАК Таблица
	|		ПО Таблица.Регистратор = Операция.Ссылка
	|			И Таблица.Распоряжение ССЫЛКА Документ.ЗаказПоставщику
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	// Аналог механизма адаптированного текста запроса - поиск заказов поставщиков, движения которых необходимо актуализировать
	|ВЫБРАТЬ
	|	Таблица.Ссылка КАК Регистратор
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТовары.Ссылка         КАК Ссылка,
	|		ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.Склад          КАК Склад,
	|		ТаблицаТовары.Назначение     КАК Назначение,
	|
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|					И НЕ ТаблицаТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Согласован)
	|				ТОГДА ТаблицаТовары.Количество
	|		КОНЕЦ КАК ПланируемоеПоступление,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|					И НЕ ТаблицаТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Согласован)
	|				ТОГДА ТаблицаТовары.Количество
	|		КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказ,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА ТаблицаТовары.Количество
	|		КОНЕЦ КАК ПланируемоеПоступлениеСНеподтвержденными,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА ТаблицаТовары.Количество
	|		КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|	ИЗ
	|		Документ.ЗаказПоставщику.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка.Проведен
	|		И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|		И НЕ ТаблицаТовары.Отменено
	|		И ТаблицаТовары.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Согласован), ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Подтвержден), ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Закрыт))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РегистрДвижениеТоваров.Регистратор,
	|		РегистрДвижениеТоваров.Номенклатура,
	|		РегистрДвижениеТоваров.Характеристика,
	|		РегистрДвижениеТоваров.Склад,
	|		РегистрДвижениеТоваров.Назначение,
	|
	|		-РегистрДвижениеТоваров.ПланируемоеПоступление,
	|		-РегистрДвижениеТоваров.ПланируемоеПоступлениеПодЗаказ,
	|		-РегистрДвижениеТоваров.ПланируемоеПоступлениеСНеподтвержденными,
	|		-РегистрДвижениеТоваров.ПланируемоеПоступлениеПодЗаказСНеподтвержденными
	|	ИЗ
	|		РегистрНакопления.ДвижениеТоваров КАК РегистрДвижениеТоваров
	|	ГДЕ
	|		РегистрДвижениеТоваров.Активность
	|		И РегистрДвижениеТоваров.Регистратор ССЫЛКА Документ.ЗаказПоставщику) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Склад,
	|	Таблица.Назначение
	|
	|ИМЕЮЩИЕ
	|	(СУММА(Таблица.ПланируемоеПоступление) <> 0
	|		ИЛИ СУММА(Таблица.ПланируемоеПоступлениеПодЗаказ) <> 0
	|		ИЛИ СУММА(Таблица.ПланируемоеПоступлениеСНеподтвержденными) <> 0
	|		ИЛИ СУММА(Таблица.ПланируемоеПоступлениеПодЗаказСНеподтвержденными) <> 0)";
	
	Запрос.УстановитьПараметр("ВариантПриемкиТоваров", Константы.ВариантПриемкиТоваров.Получить());
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
	//++ НЕ УТ
	СписокДокументов = Новый Массив;
	СписокДокументов.Добавить("Документ.ЗаказПереработчику");
	//++ НЕ УТКА
	СписокДокументов.Добавить("Документ.ЭтапПроизводства2_2");
	СписокДокументов.Добавить("Документ.ДвижениеПродукцииИМатериалов");
	СписокДокументов.Добавить("Документ.ЗаказНаПроизводство2_2");
	//-- НЕ УТКА
	Для Каждого ПолноеИмяДокумента Из СписокДокументов Цикл
		ИмяДокумента = СтрРазделить(ПолноеИмяДокумента, ".")[1];
		ТекстЗапросаМеханизмаПроведения = Документы[ИмяДокумента].АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
		Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
			ТекстЗапросаМеханизмаПроведения,
			ПолноеИмяРегистра,
			ПолноеИмяДокумента);
		
		ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	КонецЦикла;
	//-- НЕ УТ
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию2(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ДвижениеТоваров";
	
	ОбработкаЗавершена = Ложь;
	
	Регистраторы = Новый Массив;
	
	Регистраторы.Добавить("Документ.АктОРасхожденияхПослеПеремещения");
	Регистраторы.Добавить("Документ.АктОРасхожденияхПослеПриемки");
	Регистраторы.Добавить("Документ.ВозвратТоваровОтКлиента");
	Регистраторы.Добавить("Документ.ЗаказНаПеремещение");
	Регистраторы.Добавить("Документ.ЗаказНаСборку");
	Регистраторы.Добавить("Документ.ЗаказПоставщику");
	Регистраторы.Добавить("Документ.ЗаявкаНаВозвратТоваровОтКлиента");
	Регистраторы.Добавить("Документ.ПеремещениеТоваров");
	Регистраторы.Добавить("Документ.ПоступлениеТоваровУслуг");
	Регистраторы.Добавить("Документ.СборкаТоваров");
	Регистраторы.Добавить("Документ.ПриходныйОрдерНаТовары");
	
	//++ НЕ УТ
	Регистраторы.Добавить("Документ.ВыпускПродукции");
	Регистраторы.Добавить("Документ.ЗаказМатериаловВПроизводство");
	Регистраторы.Добавить("Документ.ПоступлениеОтПереработчика");
	Регистраторы.Добавить("Документ.ЗаказПереработчику");
	//-- НЕ УТ
	
	//++ НЕ УТКА
	Регистраторы.Добавить("Документ.МаршрутныйЛистПроизводства");
	Регистраторы.Добавить("Документ.ДвижениеПродукцииИМатериалов");
	Регистраторы.Добавить("Документ.ЗаказНаПроизводство");
	Регистраторы.Добавить("Документ.ЗаказНаПроизводство2_2");
	Регистраторы.Добавить("Документ.ЗаказДавальца");
	Регистраторы.Добавить("Документ.ПоступлениеСырьяОтДавальца");
	//-- НЕ УТКА
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		Регистраторы, ПолноеИмяРегистра, Параметры.Очередь);
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
	//++ НЕ УТКА
	Если Параметры.ОбработкаЗавершена Тогда
		Возврат;
	КонецЕсли;
	
	// Штатное "ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди" не подходит, так как нужно блокировать РС ГрафикЭтаповПроизводства.
	ОбработкаЗавершена = Документы.ЭтапПроизводства2_2.ПерезаписатьДвиженияИзОчередиСОтветственнымЧтениемГрафикаЭтаповПроизводства(
		Параметры.Очередь, ПолноеИмяРегистра);
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	//-- НЕ УТКА
	
КонецПроцедуры

Функция РассчитатьИтогиРегистраОстаткиТоваровПоГрафикуДляОбновленияИБ(Распоряжение) Экспорт

	НаборЗаписей = РегистрыНакопления.ГрафикПоступленияТоваров.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Распоряжение);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	МАКСИМУМ(Движения.ДатаРаспоряжения)    КАК ДатаРаспоряжения,
		|	Движения.Распоряжение                  КАК Распоряжение,
		|	Движения.Номенклатура                  КАК Номенклатура,
		|	Движения.Характеристика                КАК Характеристика,
		|	Движения.Назначение                    КАК Назначение,
		|	Движения.Склад                         КАК Склад,
		|
		|	СУММА(ВЫБОР КОГДА Движения.Корректировка ТОГДА
		|				-Движения.ПланируемоеПоступление
		|			ИНАЧЕ
		|				Движения.ПланируемоеПоступление
		|		КОНЕЦ)                             КАК ПланируемоеПоступлениеОстаток,
		|
		|	СУММА(ВЫБОР КОГДА Движения.Корректировка ТОГДА
		|				- Движения.ПланируемоеПоступлениеПодЗаказ
		|			ИНАЧЕ
		|				Движения.ПланируемоеПоступлениеПодЗаказ
		|		КОНЕЦ)                             КАК ПланируемоеПоступлениеПодЗаказОстаток,
		|
		|	СУММА(ВЫБОР КОГДА Движения.Корректировка ТОГДА
		|				-Движения.ПланируемоеПоступлениеСНеподтвержденными
		|			ИНАЧЕ
		|				Движения.ПланируемоеПоступлениеСНеподтвержденными
		|		КОНЕЦ)                             КАК ПланируемоеПоступлениеСНеподтвержденнымиОстаток,
		|
		|	СУММА(ВЫБОР КОГДА Движения.Корректировка ТОГДА
		|				- Движения.ПланируемоеПоступлениеПодЗаказСНеподтвержденными
		|			ИНАЧЕ
		|				Движения.ПланируемоеПоступлениеПодЗаказСНеподтвержденными
		|		КОНЕЦ)                             КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденнымиОстаток
		|
		|ПОМЕСТИТЬ ОстаткиПоРаспоряжению
		|
		|ИЗ
		|	РегистрНакопления.ДвижениеТоваров КАК Движения
		|ГДЕ
		|	Движения.Распоряжение = &Распоряжение
		|	И Движения.Активность
		|СГРУППИРОВАТЬ ПО
		|	Движения.Распоряжение,
		|	Движения.Номенклатура, Движения.Характеристика, Движения.Склад, Движения.Назначение
		|ИНДЕКСИРОВАТЬ ПО
		|	Распоряжение,
		|	Номенклатура, Характеристика, Склад, Назначение
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(Таблица.Период, ДЕНЬ)   КАК Период,
		|	Таблица.Номенклатура                  КАК Номенклатура,
		|	Таблица.Характеристика                КАК Характеристика,
		|	Таблица.Назначение                    КАК Назначение,
		|	Таблица.Склад                         КАК Склад,
		|	Таблица.Распоряжение                  КАК Распоряжение,
		|
		|	СУММА(Таблица.ПланируемоеПоступление)                           КАК ПланируемоеПоступление,
		|	СУММА(Таблица.ПланируемоеПоступлениеПодЗаказ)                   КАК ПланируемоеПоступлениеПодЗаказ,
		|	СУММА(Таблица.ПланируемоеПоступлениеСНеподтвержденными)         КАК ПланируемоеПоступлениеСНеподтвержденными,
		|	СУММА(Таблица.ПланируемоеПоступлениеПодЗаказСНеподтвержденными) КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными
		|
		|ПОМЕСТИТЬ ПланДвижения
		|
		|ИЗ
		|	РегистрНакопления.ДвижениеТоваров КАК Таблица
		|ГДЕ
		|	Таблица.Распоряжение = &Распоряжение
		|	И (Таблица.ПланируемоеПоступление > 0
		|		ИЛИ Таблица.ПланируемоеПоступлениеПодЗаказ > 0
		|		ИЛИ Таблица.ПланируемоеПоступлениеСНеподтвержденными > 0
		|		ИЛИ Таблица.ПланируемоеПоступлениеПодЗаказСНеподтвержденными > 0)
		|	И Таблица.Активность
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(Таблица.Период, ДЕНЬ),
		|	Таблица.Распоряжение,
		|	Таблица.Номенклатура, Таблица.Характеристика, Таблица.Склад, Таблица.Назначение
		|
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	План.Период                                                                         КАК Период,
		|	План.Номенклатура                                                                   КАК Номенклатура,
		|	План.Характеристика                                                                 КАК Характеристика,
		|	План.Склад                                                                          КАК Склад,
		|	План.Назначение                                                                     КАК Назначение,
		|	План.Распоряжение                                                                   КАК Распоряжение,
		|
		|	МАКСИМУМ(План.ПланируемоеПоступление)                                               КАК ПланируемоеПоступление,
		|	МАКСИМУМ(План.ПланируемоеПоступлениеПодЗаказ)                                       КАК ПланируемоеПоступлениеПодЗаказ,
		|	СУММА(ЕСТЬNULL(Остатки.ПланируемоеПоступлениеОстаток, 0))                           КАК ПланируемоеПоступлениеОстаток,
		|	СУММА(ЕСТЬNULL(Остатки.ПланируемоеПоступлениеПодЗаказОстаток, 0))                   КАК ПланируемоеПоступлениеПодЗаказОстаток,
		|
		|	МАКСИМУМ(План.ПланируемоеПоступлениеСНеподтвержденными)                             КАК ПланируемоеПоступлениеСНеподтвержденными,
		|	МАКСИМУМ(План.ПланируемоеПоступлениеПодЗаказСНеподтвержденными)                     КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденными,
		|	СУММА(ЕСТЬNULL(Остатки.ПланируемоеПоступлениеСНеподтвержденнымиОстаток, 0))         КАК ПланируемоеПоступлениеСНеподтвержденнымиОстаток,
		|	СУММА(ЕСТЬNULL(Остатки.ПланируемоеПоступлениеПодЗаказСНеподтвержденнымиОстаток, 0)) КАК ПланируемоеПоступлениеПодЗаказСНеподтвержденнымиОстаток,
		|
		|	МАКСИМУМ(ЕСТЬNULL(Остатки.ДатаРаспоряжения, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаРаспоряжения
		|
		|ИЗ
		|	ПланДвижения КАК План
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоРаспоряжению КАК Остатки
		|		ПО План.Номенклатура      = Остатки.Номенклатура
		|			И План.Характеристика = Остатки.Характеристика
		|			И План.Склад          = Остатки.Склад
		|			И План.Распоряжение   = Остатки.Распоряжение
		|			И План.Назначение     = Остатки.Назначение
		|
		|СГРУППИРОВАТЬ ПО
		|	План.Период,
		|	План.Номенклатура, План.Характеристика, План.Склад, План.Назначение,
		|	План.Распоряжение
		|
		|УПОРЯДОЧИТЬ ПО
		|	Распоряжение,
		|	Номенклатура, Характеристика, Склад, Назначение,
		|	Период УБЫВ";

	Выборка = Запрос.Выполнить().Выбрать();
	ЕстьЗаписиВВыборке = Выборка.Следующий();

	ТекСклад          = Неопределено;
	ТекНоменклатура   = Неопределено;
	ТекХарактеристика = Неопределено;
	ТекНазначение     = Неопределено;

	// Цикл по строкам одного распоряжения на поступление\отгрузку.
	Пока ЕстьЗаписиВВыборке Цикл
		
		Если ТекНоменклатура <> Выборка.Номенклатура Или ТекХарактеристика <> Выборка.Характеристика
			Или ТекСклад <> Выборка.Склад Или ТекНазначение <> Выборка.Назначение Тогда

			ТекНоменклатура   = Выборка.Номенклатура;
			ТекХарактеристика = Выборка.Характеристика;
			ТекСклад          = Выборка.Склад;
			ТекНазначение     = Выборка.Назначение;

			ПоступлениеКоличествоОстаток = 0;
			Если Выборка.ПланируемоеПоступлениеОстаток > 0 Тогда
				ПоступлениеКоличествоОстаток = Выборка.ПланируемоеПоступлениеОстаток;
			КонецЕсли;

			ПоступлениеПодЗаказКоличествоОстаток = 0;
			Если Выборка.ПланируемоеПоступлениеПодЗаказОстаток > 0 Тогда
				ПоступлениеПодЗаказКоличествоОстаток = Выборка.ПланируемоеПоступлениеПодЗаказОстаток;
			КонецЕсли;
			
			ПоступлениеКоличествоСНеподтвержденнымиОстаток = 0;
			Если Выборка.ПланируемоеПоступлениеСНеподтвержденнымиОстаток > 0 Тогда
				ПоступлениеКоличествоСНеподтвержденнымиОстаток = Выборка.ПланируемоеПоступлениеСНеподтвержденнымиОстаток;
			КонецЕсли;
			
			ПоступлениеПодЗаказКоличествоСНеподтвержденнымиОстаток = 0;
			Если Выборка.ПланируемоеПоступлениеПодЗаказСНеподтвержденнымиОстаток > 0 Тогда
				ПоступлениеПодЗаказКоличествоСНеподтвержденнымиОстаток = Выборка.ПланируемоеПоступлениеПодЗаказСНеподтвержденнымиОстаток;
			КонецЕсли;

		КонецЕсли;

		КоличествоПоступление = 0;
		КоличествоПоступлениеПодЗаказ = 0;
		
		КоличествоПоступлениеСНеподтвержденными = 0;
		КоличествоПоступлениеПодЗаказСНеподтвержденными = 0;

		Если Выборка.ПланируемоеПоступление > 0
			Или Выборка.ПланируемоеПоступлениеПодЗаказ > 0
			Или Выборка.ПланируемоеПоступлениеСНеподтвержденными > 0
			Или Выборка.ПланируемоеПоступлениеПодЗаказСНеподтвержденными > 0 Тогда

			КоличествоПоступление         = Мин(Выборка.ПланируемоеПоступление,         ПоступлениеКоличествоОстаток);
			КоличествоПоступлениеПодЗаказ = Мин(Выборка.ПланируемоеПоступлениеПодЗаказ, ПоступлениеПодЗаказКоличествоОстаток);
			
			КоличествоПоступлениеСНеподтвержденными         = Мин(Выборка.ПланируемоеПоступлениеСНеподтвержденными,         ПоступлениеКоличествоСНеподтвержденнымиОстаток);
			КоличествоПоступлениеПодЗаказСНеподтвержденными = Мин(Выборка.ПланируемоеПоступлениеПодЗаказСНеподтвержденными, ПоступлениеПодЗаказКоличествоСНеподтвержденнымиОстаток);
			
			Если КоличествоПоступление > 0
				Или КоличествоПоступлениеПодЗаказ > 0
				Или КоличествоПоступлениеСНеподтвержденными > 0
				Или КоличествоПоступлениеПодЗаказСНеподтвержденными > 0 Тогда
				
				ДобавитьПриходВГрафик(НаборЗаписей,
				                      Выборка,
				                      КоличествоПоступление,
				                      КоличествоПоступлениеПодЗаказ,
				                      КоличествоПоступлениеСНеподтвержденными,
				                      КоличествоПоступлениеПодЗаказСНеподтвержденными);
			КонецЕсли;
			
			ПоступлениеКоличествоОстаток         = ПоступлениеКоличествоОстаток         - КоличествоПоступление;
			ПоступлениеПодЗаказКоличествоОстаток = ПоступлениеПодЗаказКоличествоОстаток - КоличествоПоступлениеПодЗаказ;
			
			ПоступлениеКоличествоСНеподтвержденнымиОстаток         = ПоступлениеКоличествоСНеподтвержденнымиОстаток         - КоличествоПоступлениеСНеподтвержденными;
			ПоступлениеПодЗаказКоличествоСНеподтвержденнымиОстаток = ПоступлениеПодЗаказКоличествоСНеподтвержденнымиОстаток - КоличествоПоступлениеПодЗаказСНеподтвержденными;
			
		КонецЕсли;

		// Переход к следующей записи в выборке.
		ЕстьЗаписиВВыборке = Выборка.Следующий();

	КонецЦикла;

	Возврат НаборЗаписей;
	
КонецФункции

Функция ПроверитьВерсииДанных(ВыборкаКорректировка)
	
	ТаблицаЗаказов = Новый ТаблицаЗначений;
	ТаблицаЗаказов.Колонки.Добавить("Распоряжение", Новый ОписаниеТипов("ДокументСсылка.ЗаказПоставщику"));
	ТаблицаЗаказов.Колонки.Добавить("ВерсияДанныхЗаказ", ОбщегоНазначения.ОписаниеТипаСтрока(12));
	
	ВыборкаДетали = ВыборкаКорректировка.Выбрать();
	Пока ВыборкаДетали.Следующий() Цикл
		Если ЗначениеЗаполнено(ВыборкаДетали.Распоряжение) Тогда
			
			НоваяСтрока = ТаблицаЗаказов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетали);
		КонецЕсли;
	КонецЦикла;
	ВыборкаДетали.Сбросить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Таблица.Распоряжение КАК Распоряжение,
	|	Таблица.ВерсияДанныхЗаказ КАК ВерсияДанныхЗаказ
	|ПОМЕСТИТЬ
	|	ВтТаблица
	|ИЗ
	|	&ТаблицаЗаказов КАК Таблица;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Распоряжение КАК Распоряжение,
	|	ВЫРАЗИТЬ(Таблица.Распоряжение КАК Документ.ЗаказПоставщику).ВерсияДанных КАК ВерсияДанных,
	|	Таблица.ВерсияДанныхЗаказ
	|ИЗ
	|	ВтТаблица КАК Таблица;
	|
	|ВЫБРАТЬ
	|	ДокументКорректировка.ВерсияДанных
	|ИЗ
	|	Документ.КорректировкаПоступления КАК ДокументКорректировка
	|ГДЕ
	|	ДокументКорректировка.Ссылка = &Ссылка
	|";
	
	Запрос.УстановитьПараметр("ТаблицаЗаказов", ТаблицаЗаказов);
	Запрос.УстановитьПараметр("Ссылка", ВыборкаКорректировка.Регистратор);
	Запрос.УстановитьПараметр("ВерсияДанных", ВыборкаКорректировка.ВерсияДанных);
	
	Результат = Запрос.ВыполнитьПакет();
	ВыборкаВерсия = Результат[2].Выбрать();
	Если ВыборкаВерсия.Следующий() Тогда
		Если ВыборкаВерсия.ВерсияДанных <> ВыборкаКорректировка.ВерсияДанных Тогда
			Возврат Ложь
		КонецЕсли;
	КонецЕсли;
	
	ВерсииЗаказов = Результат[1].Выбрать();
	Пока ВерсииЗаказов.Следующий() Цикл
		Если ВерсииЗаказов.ВерсияДанных <> ВерсииЗаказов.ВерсияДанныхЗаказ Тогда
			Возврат Ложь
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область Прочее

Процедура ДобавитьПриходВГрафик(НаборЗаписей, Выборка, Количество, КоличествоПодЗаказ, КоличествоСНеподтвержденными, КоличествоПодЗаказСНеподтвержденными)
	
	Запись = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(Запись, Выборка);
	Запись.ДатаСобытия = Запись.Период;
	Запись.ВидДвижения = ВидДвиженияНакопления.Приход;
	
	Запись.КоличествоИзЗаказов = Количество;
	Запись.КоличествоПодЗаказ  = КоличествоПодЗаказ;
	Запись.КоличествоИзЗаказовСНеподтвержденными = КоличествоСНеподтвержденными;
	Запись.КоличествоПодЗаказСНеподтвержденными  = КоличествоПодЗаказСНеподтвержденными;
	
КонецПроцедуры

Процедура ЗаписатьОбеспечениеЗаказов(НаборЗаписей, Период)
	
	//++ НЕ УТКА
	Если ТипЗнч(НаборЗаписей.Отбор.Регистратор.Значение) = Тип("ДокументСсылка.ЗаказНаПроизводство2_2") Тогда
		
		НаборЗаписейОбеспечениеЗаказов = РегистрыНакопления.ОбеспечениеЗаказов.СоздатьНаборЗаписей();
		НаборЗаписейОбеспечениеЗаказов.Отбор.Регистратор.Установить(НаборЗаписей.Отбор.Регистратор.Значение);
		Для Каждого Запись Из НаборЗаписей Цикл
			
			Если Не Запись.Назначение.Пустая() Тогда
				
				НоваяЗапись = НаборЗаписейОбеспечениеЗаказов.ДобавитьПриход();
				ЗаполнитьЗначенияСвойств(НоваяЗапись, Запись);
				НоваяЗапись.КЗаказу = -Запись.КоличествоПодЗаказСНеподтвержденными;
				НоваяЗапись.Период = Период;
				
			КонецЕсли;
			
		КонецЦикла;
		НаборЗаписейОбеспечениеЗаказов.Записать(Истина);
		
	КонецЕсли;
	//-- НЕ УТКА
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли