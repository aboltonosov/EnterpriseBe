#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту";
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Ссылка
	|ПОМЕСТИТЬ ВтДанныеРегистра
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВтДанныеРегистра.Ссылка
	|	ИЗ
	|		ВтДанныеРегистра КАК ВтДанныеРегистра
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК СборкаТоваров
	|			ПО ВтДанныеРегистра.Ссылка = СборкаТоваров.Ссылка
	|				И (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров) <> СборкаТоваров.ХозяйственнаяОперация)
	|	ГДЕ
	|		НЕ СборкаТоваров.Ссылка ЕСТЬ NULL
	|
	//++ НЕ УТ
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Движения.Регистратор КАК Ссылка
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК Движения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВПроизводство КАК ПередачаМатериаловВПроизводство
	|			ПО ПередачаМатериаловВПроизводство.Ссылка = Движения.Регистратор
	|	ГДЕ
	|		Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство)
	//-- НЕ УТ
	|
	|	) КАК Движения
	|");
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы, ДополнительныеПараметры);
	РегистрыНакопления.ПрочиеАктивыПассивы.ЗарегистироватьКОбновлениюУправленческогоБаланса(Параметры, Регистраторы, ДополнительныеПараметры.ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту";
	
	//++ НЕ УТ
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ПередачаМатериаловВПроизводство");
	//-- НЕ УТ
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(
		Параметры.Очередь,
		Неопределено,
		ПолноеИмяРегистра,
		МенеджерВременныхТаблиц);
	
	//++ НЕ УТ
	ДополнительныеПараметрыПроверкиБлокировки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметрыПроверкиБлокировки.ИмяВременнойТаблицы = "ВтЗаблокированныеСсылки";
	ЗаблокированныеСсылки = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияСсылок(
		Параметры.Очередь,
		Регистраторы,
		МенеджерВременныхТаблиц,
		ДополнительныеПараметрыПроверкиБлокировки);
	//-- НЕ УТ

	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СсылкиДляОбработки.Регистратор КАК Регистратор
	|ИЗ
	|	&ВТДляОбработкиСсылка КАК СсылкиДляОбработки
	//++ НЕ УТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтЗаблокированныеСсылки
	|		ПО СсылкиДляОбработки.Регистратор = ВтЗаблокированныеСсылки.Ссылка
	|ГДЕ
	|	ВтЗаблокированныеСсылки.Ссылка ЕСТЬ NULL
	//-- НЕ УТ
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДляОбработкиСсылка", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТаблицаРегистраторов = Запрос.Выполнить().Выгрузить();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
	ЭлементБлокировки.ИсточникДанных = ТаблицаРегистраторов;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Движения.Регистратор                КАК Регистратор,
	|	Движения.Период                     КАК Период,
	|	Движения.ВидДвижения                КАК ВидДвижения,
	|	Движения.ВидЗапасов                 КАК ВидЗапасов,
	|	Движения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Движения.Валюта                     КАК Валюта,
	|	Движения.НомерГТД                   КАК НомерГТД,
	|	Движения.Количество        КАК Количество,
	|	Движения.СуммаВыручки      КАК СуммаВыручки,
	|	Движения.КоличествоСписано КАК КоличествоСписано,
	|	ВЫБОР КОГДА НЕ СборкаТоваров.ХозяйственнаяОперация ЕСТЬ NULL ТОГДА
	|		СборкаТоваров.ХозяйственнаяОперация
//++ НЕ УТ
	|	КОГДА НЕ ПередачаМатериаловВПроизводство.ХозяйственнаяОперация ЕСТЬ NULL ТОГДА
	|		ПередачаМатериаловВПроизводство.ХозяйственнаяОперация
//-- НЕ УТ
	|	ИНАЧЕ
	|		Движения.ХозяйственнаяОперация
	|	КОНЕЦ                                  КАК ХозяйственнаяОперация,
	|	Движения.СуммаВознаграждения           КАК СуммаВознаграждения,
	|	Движения.ДокументРеализации            КАК ДокументРеализации,
	|	Движения.ДатаСчетаФактуры              КАК ДатаСчетаФактуры,
	|	Движения.Покупатель                    КАК Покупатель,
	|	Движения.КорВидЗапасов                 КАК КорВидЗапасов,
	|	Движения.Номенклатура                  КАК Номенклатура,
	|	Движения.Характеристика                КАК Характеристика,
	|	Движения.НомерСчетаФактуры             КАК НомерСчетаФактуры,
	|	Движения.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	Движения.НалогообложениеНДС            КАК НалогообложениеНДС
	|ИЗ
	|	&ВТДляОбработкиСсылка КАК СсылкиДляОбработки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК Движения
	|	ПО Движения.Регистратор = СсылкиДляОбработки.Регистратор
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК СборкаТоваров
	|	ПО Движения.Регистратор = СборкаТоваров.Ссылка
	|
//++ НЕ УТ
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВПроизводство КАК ПередачаМатериаловВПроизводство
	|	ПО Движения.Регистратор = ПередачаМатериаловВПроизводство.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтЗаблокированныеСсылки
	|	ПО СсылкиДляОбработки.Регистратор = ВтЗаблокированныеСсылки.Ссылка
	|
	|ГДЕ
	|	ВтЗаблокированныеСсылки.Ссылка ЕСТЬ NULL
//-- НЕ УТ
	|";
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&ВТДляОбработкиСсылка", Результат.ИмяВременнойТаблицы);
	
	ДанныеКЗаписи = Запрос.Выполнить();
	КЗаписи = ДанныеКЗаписи.Выбрать();
	
	Регистратор = Неопределено;
	Набор = Неопределено;

	Замещать = Истина;
	Пока КЗаписи.Следующий() Цикл
		Если Регистратор <> КЗаписи.Регистратор Тогда
			Если Регистратор <> Неопределено Тогда // фиксируем записи по рассчитанному регистратору
				Попытка
					ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
				Исключение
					ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Регистратор);
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
											Метаданные.Документы.СборкаТоваров, ТекстСообщения);
				КонецПопытки;
			КонецЕсли;
			// Переход к следующему регистратору
			Регистратор = КЗаписи.Регистратор;
			
			Набор = РегистрыНакопления.ТоварыКОформлениюОтчетовКомитенту.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Регистратор);
		КонецЕсли;
		
		СтрокаНабора = Набор.Добавить();

		ЗаполнитьЗначенияСвойств(СтрокаНабора, КЗаписи);
	КонецЦикла;
	Если НЕ ДанныеКЗаписи.Пустой() Тогда // не записаны данные по последнему регистратру
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
		Исключение
			ТекстСообщения = НСтр("ru = 'Не удалось обработать документ: %Регистратор% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
									Метаданные.Документы.СборкаТоваров, ТекстСообщения);
		КонецПопытки;
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли