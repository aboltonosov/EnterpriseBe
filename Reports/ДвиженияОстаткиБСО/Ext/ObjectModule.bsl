Перем мСписокОтбора;
Перем ПостроительОстаткиБСО;
Перем ПостроительГлавный;

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗаполнитьНастройки();
	ДокументРезультат.Вывести(СформироватьОтчет());
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНастройки()
	ПостроительОстаткиБСО.Текст =
	"ВЫБРАТЬ
	|	БланкиСтрогойОтчетности.Склад КАК Склад,
	|	БланкиСтрогойОтчетности.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БланкиСтрогойОтчетности.Номенклатура КАК Номенклатура,
	|	БланкиСтрогойОтчетности.Тип КАК Тип,
	|	БланкиСтрогойОтчетности.Серия КАК Серия,
	|	БланкиСтрогойОтчетности.Номер КАК Номер,
	|	БланкиСтрогойОтчетности.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.БланкиСтрогойОтчетности.Остатки(&Дата, {(Склад).* КАК Склад, (ФизическоеЛицо).* КАК ФизическоеЛицо, (Номенклатура).* КАК Номенклатура, (Тип).* КАК Тип, (Серия) КАК Серия}) КАК БланкиСтрогойОтчетности
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склад,
	|	ФизическоеЛицо,
	|	Номенклатура,
	|	Тип,
	|	Серия,
	|	Номер
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Для Каждого ЭлементСписка Из мСписокОтбора Цикл
		Если ПостроительОстаткиБСО.Отбор.Найти(ЭлементСписка.Значение) = Неопределено Тогда
			ПостроительОстаткиБСО.Отбор.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ПостроительГлавный.Текст =
	"ВЫБРАТЬ
	|	БланкиСтрогойОтчетности.Период КАК Дата,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(БланкиСтрогойОтчетности.Регистратор) = ТИП(Документ.СписаниеИзЭксплуатации)
	|				ИЛИ ТИПЗНАЧЕНИЯ(БланкиСтрогойОтчетности.Регистратор) = ТИП(Документ.ВнутреннееПотреблениеТоваров)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСписание,
	|	ВЫБОР
	|		КОГДА БланкиСтрогойОтчетности.КоличествоПриход > 0
	|			ТОГДА ""Приход""
	|		ИНАЧЕ ""Расход""
	|	КОНЕЦ КАК ТипДвижения,
	|	БланкиСтрогойОтчетности.Склад КАК Склад,
	|	БланкиСтрогойОтчетности.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БланкиСтрогойОтчетности.Номенклатура КАК Номенклатура,
	|	БланкиСтрогойОтчетности.Тип КАК Тип,
	|	БланкиСтрогойОтчетности.Серия КАК Серия,
	|	БланкиСтрогойОтчетности.Номер КАК Номер,
	|	ВЫБОР
	|		КОГДА БланкиСтрогойОтчетности.КоличествоПриход <> 0
	|			ТОГДА БланкиСтрогойОтчетности.КоличествоПриход
	|		ИНАЧЕ БланкиСтрогойОтчетности.КоличествоРасход
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	РегистрНакопления.БланкиСтрогойОтчетности.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор, , {(Склад).* КАК Склад, (ФизическоеЛицо).* КАК ФизическоеЛицо, (Номенклатура).* КАК Номенклатура, (Тип).* КАК Тип, (Серия) КАК Серия}) КАК БланкиСтрогойОтчетности
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склад,
	|	ФизическоеЛицо,
	|	Номенклатура,
	|	Тип,
	|	Серия,
	|	Номер
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Для Каждого ЭлементСписка Из мСписокОтбора Цикл
		Если ПостроительГлавный.Отбор.Найти(ЭлементСписка.Значение) = Неопределено Тогда
			ПостроительГлавный.Отбор.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Склад) Тогда
		ПостроительГлавный.Отбор.Склад.Значение = Склад;
		ПостроительГлавный.Отбор.Склад.Использование = Истина;
		ПостроительОстаткиБСО.Отбор.Склад.Значение = Склад;
		ПостроительОстаткиБСО.Отбор.Склад.Использование = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		ПостроительГлавный.Отбор.Номенклатура.Значение = Номенклатура;
		ПостроительГлавный.Отбор.Номенклатура.Использование = Истина;
		ПостроительОстаткиБСО.Отбор.Номенклатура.Значение = Номенклатура;
		ПостроительОстаткиБСО.Отбор.Номенклатура.Использование = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		ПостроительГлавный.Отбор.ФизическоеЛицо.Значение = ФизическоеЛицо;
		ПостроительГлавный.Отбор.ФизическоеЛицо.Использование = Истина;
		ПостроительОстаткиБСО.Отбор.ФизическоеЛицо.Значение = ФизическоеЛицо;
		ПостроительОстаткиБСО.Отбор.ФизическоеЛицо.Использование = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Серия) Тогда
		ПостроительГлавный.Отбор.Серия.Значение = Серия;
		ПостроительГлавный.Отбор.Серия.Использование = Истина;
		ПостроительОстаткиБСО.Отбор.Серия.Значение = Серия;
		ПостроительОстаткиБСО.Отбор.Серия.Использование = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Тип) Тогда
		ПостроительГлавный.Отбор.Тип.Значение = Тип;
		ПостроительГлавный.Отбор.Тип.Использование = Истина;
		ПостроительОстаткиБСО.Отбор.Тип.Значение = Тип;
		ПостроительОстаткиБСО.Отбор.Тип.Использование = Истина;
	КонецЕсли;
КонецПроцедуры

Функция СформироватьОтчет()
	ПоказыватьЗаголовок = Истина;
	ДопПробелы = Символ(32) + Символ(32) + Символ(32);
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Отчет_ДвиженияОстаткиБСО";
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.ПолеСверху = 5;
	ТабДок.ПолеСлева = 10;
	ТабДок.ПолеСнизу = 5;
	ТабДок.ПолеСправа = 5;
	
	Макет = ПолучитьМакет("Макет");
	
	НачДата = НачалоДня(ДатаНачала);
	КонДата = ?(ЗначениеЗаполнено(ДатаОкончания), КонецДня(ДатаОкончания), ТекущаяДата());
	
	ТаблицаОстатков = УчетБланковСтрогойОтчетностиСервер.СтруктураСлужебнойТаблицыБСО();
	
	ПостроительОстаткиБСО.Параметры.Вставить("Дата", Новый Граница(НачДата, ВидГраницы.Включая));
	ПостроительОстаткиБСО.Выполнить();
	НачальныйОстаток = ПостроительОстаткиБСО.Результат.Выгрузить();
	НачальныйОстаток = СвернутьТаблицуПоИнтервалу(НачальныйОстаток);
	НачальныйОстаток.ЗаполнитьЗначения(Формат(НачДата, "ДФ=dd.MM.yy"), "Дата");
	
	ПостроительОстаткиБСО.Параметры.Вставить("Дата", Новый Граница(КонДата, ВидГраницы.Включая));
	ПостроительОстаткиБСО.Выполнить();
	КонечныйОстаток = ПостроительОстаткиБСО.Результат.Выгрузить();
	КонечныйОстаток = СвернутьТаблицуПоИнтервалу(КонечныйОстаток);
	КонечныйОстаток.ЗаполнитьЗначения(Формат(КонДата, "ДФ=dd.MM.yy"), "Дата");
	
	// приход и расход
	ПостроительГлавный.Параметры.Вставить("ДатаНач", НачДата);
	ПостроительГлавный.Параметры.Вставить("ДатаКон", КонДата);
	ПостроительГлавный.Выполнить();
	ТЗПриходРасход = ПостроительГлавный.Результат.Выгрузить();
	
	Отбор = Новый Структура;
	Отбор.Вставить("ТипДвижения", "Приход");
	Приход = ТЗПриходРасход.Скопировать(Отбор);
	Приход = СвернутьТаблицуПоИнтервалу(Приход);
	
	Отбор = Новый Структура;
	Отбор.Вставить("ТипДвижения", "Расход");
	Отбор.Вставить("ЭтоСписание", Истина);
	Списание = ТЗПриходРасход.Скопировать(Отбор);
	Списание = СвернутьТаблицуПоИнтервалу(Списание);
	
	Отбор = Новый Структура;
	Отбор.Вставить("ТипДвижения", "Расход");
	Отбор.Вставить("ЭтоСписание", Ложь);
	Расход = ТЗПриходРасход.Скопировать(Отбор);
	Расход = СвернутьТаблицуПоИнтервалу(Расход);
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрокаОстаток = Макет.ПолучитьОбласть("СтрокаОстаток");
	ОбластьСтрокаЗаголовок = Макет.ПолучитьОбласть("СтрокаЗаголовок");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	Если ПоказыватьЗаголовок Тогда
		ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
		ЗаголовокОтчета.Параметры.ОписаниеПериода = УчетБланковСтрогойОтчетностиСервер.СформироватьСтрокуВыводаПараметровПоДатам(НачДата, КонДата);
		ТабДок.Вывести(ЗаголовокОтчета);
		
		СтрОтбор = УчетБланковСтрогойОтчетностиСервер.СформироватьСтрокуОтборов(ПостроительГлавный.Отбор);
		Если Не ПустаяСтрока(СтрОтбор) Тогда
			ОбластьОтбор = Макет.ПолучитьОбласть("СтрокаОтбор");
			ОбластьОтбор.Параметры.ТекстПроОтбор = "Отбор: " + СтрОтбор;
			ТабДок.Вывести(ОбластьОтбор);
		КонецЕсли;
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьШапкаТаблицы);
	
	ОбластьСтрокаЗаголовок.Параметры.ТекстОснование = "Остаток неиспользованных бланков на " + Формат(НачДата, "ДФ=dd.MM.yyyy");
	ОбластьСтрокаЗаголовок.Параметры.Количество = НачальныйОстаток.Итог("Количество");
	ТабДок.Вывести(ОбластьСтрокаЗаголовок);
	
	Для Каждого СтрокаНачОст Из НачальныйОстаток Цикл
		ОбластьСтрокаОстаток.Параметры.Заполнить(СтрокаНачОст);
		ТабДок.Вывести(ОбластьСтрокаОстаток);
	КонецЦикла;
	
	ОбластьСтрокаЗаголовок.Параметры.ТекстОснование = "Получено за период";
	ОбластьСтрокаЗаголовок.Параметры.Количество = Приход.Итог("Количество");
	ТабДок.Вывести(ОбластьСтрокаЗаголовок);
	
	Для Каждого СтрокаНачОст Из Приход Цикл
		ОбластьСтрокаОстаток.Параметры.Заполнить(СтрокаНачОст);
		ТабДок.Вывести(ОбластьСтрокаОстаток);
	КонецЦикла;
	
	ОбластьСтрокаЗаголовок.Параметры.ТекстОснование = "Израсходовано за период";
	ОбластьСтрокаЗаголовок.Параметры.Количество = Списание.Итог("Количество") + Расход.Итог("Количество");
	ТабДок.Вывести(ОбластьСтрокаЗаголовок);
	
	ОбластьСтрокаЗаголовок.Параметры.ТекстОснование = ДопПробелы + "Израсходовано (списано)";
	ОбластьСтрокаЗаголовок.Параметры.Количество = Списание.Итог("Количество");
	ТабДок.Вывести(ОбластьСтрокаЗаголовок);
	
	Для Каждого СтрокаНачОст Из Списание Цикл
		ОбластьСтрокаОстаток.Параметры.Заполнить(СтрокаНачОст);
		ТабДок.Вывести(ОбластьСтрокаОстаток);
	КонецЦикла;
	
	ОбластьСтрокаЗаголовок.Параметры.ТекстОснование = ДопПробелы + "Передано (внутреннее перемещение)";
	ОбластьСтрокаЗаголовок.Параметры.Количество = Расход.Итог("Количество");
	ТабДок.Вывести(ОбластьСтрокаЗаголовок);
	
	Для Каждого СтрокаНачОст Из Расход Цикл
		ОбластьСтрокаОстаток.Параметры.Заполнить(СтрокаНачОст);
		ТабДок.Вывести(ОбластьСтрокаОстаток);
	КонецЦикла;
	
	ОбластьСтрокаЗаголовок.Параметры.ТекстОснование = "Остаток неиспользованных бланков на " + Формат(КонДата, "ДФ=dd.MM.yyyy");
	ОбластьСтрокаЗаголовок.Параметры.Количество = КонечныйОстаток.Итог("Количество");
	ТабДок.Вывести(ОбластьСтрокаЗаголовок);
	
	Для Каждого СтрокаНачОст Из КонечныйОстаток Цикл
		ОбластьСтрокаОстаток.Параметры.Заполнить(СтрокаНачОст);
		ТабДок.Вывести(ОбластьСтрокаОстаток);
	КонецЦикла;
	
	ОбластьПодвал.Параметры.Исполнитель = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Пользователи.ТекущийПользователь().ФизическоеЛицо);
	ТабДок.Вывести(ОбластьПодвал);
	
	Возврат ТабДок;
КонецФункции

Функция СвернутьТаблицуПоИнтервалу(ИсходнаяТаблица)
	ТЗ = УчетБланковСтрогойОтчетностиСервер.СтруктураСлужебнойТаблицыБСО();
	Для каждого Стр Из ИсходнаяТаблица Цикл
		НоваяСтрока = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
		НоваяСтрока.Серия = СокрЛП(Стр.Серия);
	КонецЦикла;
	
	Если ТЗ.Количество() > 0 Тогда
		ТЗ = УчетБланковСтрогойОтчетностиСервер.СвернутьТаблицуБСО(ТЗ, Ложь);
	КонецЕсли;
	
	ТЗ.Колонки.Добавить("Дата");
	
	Возврат ТЗ;
КонецФункции

#КонецОбласти

#КонецЕсли

мСписокОтбора = Новый СписокЗначений;
мСписокОтбора.Добавить("Склад");
мСписокОтбора.Добавить("ФизическоеЛицо");
мСписокОтбора.Добавить("Номенклатура");
мСписокОтбора.Добавить("Тип");
мСписокОтбора.Добавить("Серия");

ПостроительОстаткиБСО = Новый ПостроительОтчета;
ПостроительГлавный = Новый ПостроительОтчета;