&НаКлиенте
Перем ОбработкаКС Экспорт;

&НаСервере
Перем СписокРасшифровкиПоказателей;

&НаСервере
Перем СписокРасшифровкиформулы;

&НаСервере
Перем мДанныеОтчетаПРП;

&НаСервере
Перем мОбъектОтчета;

&НаКлиенте
Перем ПараметрыОбработчикаОжидания,
      ФормаДлительнойОперации;

&НаСервере
Перем СохраненныеДанныеОтчета;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обход ошибки платформы Параметр сеанса отсутствует или удален.
	ТабличныйДокумент.Очистить();
	
	СформироватьСтруктуруРеквизитовФормы();
	
	СтруктураРеквизитовФормы.мСохраненныйДок = Параметры.мСохраненныйДок;
	
	СтруктураРеквизитовФормы.мВерсияФормы = "01/01/2017";
	
	СтруктураРеквизитовФормы.мВыбраннаяФорма          = Параметры.мВыбраннаяФорма;
	СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета  = Параметры.мДатаКонцаПериодаОтчета;
	СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета = Параметры.мДатаНачалаПериодаОтчета;
	СтруктураРеквизитовФормы.мПериодичность           = Параметры.мПериодичность;
	СтруктураРеквизитовФормы.мСкопированаФорма        = Параметры.мСкопированаФорма;
	СтруктураРеквизитовФормы.Организация              = Параметры.Организация;
	СтруктураРеквизитовФормы.ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417
	= Параметры.ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417;
	СтруктураРеквизитовФормы.СформироватьФормуОтчетаАвтоматически
	= Параметры.СформироватьФормуОтчетаАвтоматически;
	СтруктураРеквизитовФормы.СправочникиВидыКонтактнойИнформацииФактАдресОрганизации
	= Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица;
	
	мСтруктураЦветовРаскраски = Новый Структура;
	мСтруктураЦветовРаскраски.Вставить("_0", Новый Цвет(255, 255, 192));
	мСтруктураЦветовРаскраски.Вставить("_1", Новый Цвет(192, 192, 192));
	мСтруктураЦветовРаскраски.Вставить("_3", Новый Цвет(230, 240, 220));
	мСтруктураЦветовРаскраски.Вставить("_4", Новый Цвет(192, 220, 192));
	мСтруктураЦветовРаскраски.Вставить("_5", Новый Цвет(255, 255, 255));
	
	ПорядкиОкругленияОтчетности = Новый Структура;
	ПорядкиОкругленияОтчетности.Вставить("ПеречислениеПорядкиОкругленияОтчетностиОкр1",
		Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ПорядкиОкругленияОтчетности.Вставить("ПеречислениеПорядкиОкругленияОтчетностиОкр1000",
		Перечисления.ПорядкиОкругленияОтчетности.Окр1000);
	ПорядкиОкругленияОтчетности.Вставить("ПеречислениеПорядкиОкругленияОтчетностиОкр1000000",
		Перечисления.ПорядкиОкругленияОтчетности.Окр1000000);
	
	СоответствиеЕдиницыИзмеренияДелителю = Новый Структура;
	СоответствиеЕдиницыИзмеренияДелителю.Вставить("Окр1", 1);
	СоответствиеЕдиницыИзмеренияДелителю.Вставить("Окр1000", 1000);
	СоответствиеЕдиницыИзмеренияДелителю.Вставить("Окр1000000", 1000000);
	
	ДатаПодписи = ТекущаяДатаСеанса();
	
	Инициализация(Параметры.БезОткрытияФормы);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСтруктуруРеквизитовФормы()
	
	СтруктураРеквизитовФормы = Новый Структура;
	СтруктураРеквизитовФормы.Вставить("ВыводитьСтраницуВТаблДокНаСервере");
	СтруктураРеквизитовФормы.Вставить("НаимТекущегоРаздела");
	СтруктураРеквизитовФормы.Вставить("мАвтоВыборКодов");
	СтруктураРеквизитовФормы.Вставить("мБезОткрытияФормы");
	СтруктураРеквизитовФормы.Вставить("мВерсияФормы");
	СтруктураРеквизитовФормы.Вставить("мЗаписываетсяНовыйДокумент");
	СтруктураРеквизитовФормы.Вставить("СписокПечатаемыхЛистов");
	СтруктураРеквизитовФормы.Вставить("мПечатныеформы");
	СтруктураРеквизитовФормы.Вставить("мРежимПечати");
	СтруктураРеквизитовФормы.Вставить("мСчетчикСтраниц");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы1М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы1М2");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы11131М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы11132М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы1114М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы18М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы19М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы110М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы110М2");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы21М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы321М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы322М1");
	СтруктураРеквизитовФормы.Вставить("ДлинаИмениГруппы");
	СтруктураРеквизитовФормы.Вставить("ДлинаИмениГрафы");
	СтруктураРеквизитовФормы.Вставить("ТочностьЕдиницыИзмерения");
	СтруктураРеквизитовФормы.Вставить("ФлажокОтклАвтоРасчет", Ложь);
	СтруктураРеквизитовФормы.Вставить("ВидДокумента");
	СтруктураРеквизитовФормы.Вставить("ЕдиницаИзмерения");
	СтруктураРеквизитовФормы.Вставить("мВариант");
	СтруктураРеквизитовФормы.Вставить("мСтрокаФормата");
	СтруктураРеквизитовФормы.Вставить("мВыбраннаяФорма");
	СтруктураРеквизитовФормы.Вставить("мДатаКонцаПериодаОтчета");
	СтруктураРеквизитовФормы.Вставить("мДатаНачалаПериодаОтчета");
	СтруктураРеквизитовФормы.Вставить("мПериодичность");
	СтруктураРеквизитовФормы.Вставить("мСкопированаФорма");
	СтруктураРеквизитовФормы.Вставить("мСохраненныйДок");
	СтруктураРеквизитовФормы.Вставить("мПечатьБезШтрихкодаРазрешена");
	СтруктураРеквизитовФормы.Вставить("Организация");
	СтруктураРеквизитовФормы.Вставить("ИП");
	СтруктураРеквизитовФормы.Вставить("НаимОрганизации");
	СтруктураРеквизитовФормы.Вставить("НачальноеЗначениеНаимОрганизации", "");
	СтруктураРеквизитовФормы.Вставить("СтрПериодОтчета");
	СтруктураРеквизитовФормы.Вставить("ТекущаяСтрокаРазделовОтчета");
	СтруктураРеквизитовФормы.Вставить("НомераСтрокМногоуровнегоРаздела");
	СтруктураРеквизитовФормы.Вставить("СтруктураМногострочныхЧастей");
	СтруктураРеквизитовФормы.Вставить("ОтображатьКнопкуЗаполнить", Ложь);
	СтруктураРеквизитовФормы.Вставить("ОтображатьКнопкуРасшифровать", Ложь);
	СтруктураРеквизитовФормы.Вставить("АвтозаполняемыеПоказатели");
	СтруктураРеквизитовФормы.Вставить("ИдентификаторЗадания");
	СтруктураРеквизитовФормы.Вставить("АдресВоВременномХранилище");
	СтруктураРеквизитовФормы.Вставить("ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417");
	СтруктураРеквизитовФормы.Вставить("СправочникиВидыКонтактнойИнформацииФактАдресОрганизации");
	СтруктураРеквизитовФормы.Вставить("ОКВЭД",  "");
	СтруктураРеквизитовФормы.Вставить("ОКВЭД2", "");
	СтруктураРеквизитовФормы.Вставить("ТекстДляЗаголовочнойЧасти");
	СтруктураРеквизитовФормы.Вставить("СформироватьФормуОтчетаАвтоматически");
	
КонецПроцедуры

#Область Инициализация

&НаСервере
Процедура Инициализация(БезОткрытияФормы = Ложь) Экспорт
	
	Перем ИсходноеКоличествоСтрокГруппы;
	
	СтруктураРеквизитовФормы.мБезОткрытияФормы = БезОткрытияФормы;
	
	СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный";
	
	// Очистка для случая повторного запуска инициализации,
	// например, при загрузке отчета из файла выгрузки.
	ТабличныйДокумент.Очистить();
	
	ТабличныйДокумент.Вывести(ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы,
	СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + СтруктураРеквизитовФормы.НаимТекущегоРаздела));
	
	ИнициализироватьМногострочныеЧасти();
	
	ИнициализироватьМногоуровневыеРазделы();
	
	ИнициализироватьОбычныеРазделы();
	
	ЗаполнитьСтруктуруЗависимыхЯчеекДляАвторасчета();
	
	ФормироватьСтруктуруСтраницОтчета();
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	СтруктураРеквизитовФормы.мАвтоВыборКодов = Ложь;
	
	СтруктураРеквизитовФормы.СписокПечатаемыхЛистов = Новый СписокЗначений;
	СтруктураРеквизитовФормы.мПечатныеформы = Новый СписокЗначений;
	СтруктураРеквизитовФормы.мРежимПечати = Ложь;
	
	СтруктураРеквизитовФормы.ВидДокумента = 0;
	НомерКорректировки = 1;
	
	ЗаполнитьЗначенияПоУмолчанию = Ложь;
	ОтчетСкопированОрганизацияНеИзменилась = Ложь;
	ИсходныйОтчетЗаПервыйКвартал = Ложь;
	
	Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
		Если СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
			ВосстановитьСохраненныеДанные();
		Иначе
			СтруктураРеквизитовФормы.ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1;
			СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 0;
			ЗаполнитьЗначенияПоУмолчанию = Истина;
			КопироватьДанныеФормы(мДеревоСтраницОтчета, мДеревоВыбранныхСтраниц);
		КонецЕсли;
		Модифицированность = Истина;
	Иначе
		ВосстановитьСохраненныеДанные();
		Если СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
			ИсходныйОтчетЗаПервыйКвартал
			= (Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 3);
			Если СтруктураРеквизитовФормы.мСохраненныйДок.Организация
				= СтруктураРеквизитовФормы.Организация Тогда
				ОтчетСкопированОрганизацияНеИзменилась = Истина;
			КонецЕсли;
			СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено;
			Модифицированность = Истина;
		КонецЕсли;
		Если НЕ БезОткрытияФормы И НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
			ЗаблокироватьДанныеДляРедактирования(
				СтруктураРеквизитовФормы.мСохраненныйДок, , ЭтаФорма.УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.ИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(
		СтруктураРеквизитовФормы.Организация);
	
	Если ЗаполнитьЗначенияПоУмолчанию Тогда
		
		Если СтруктураРеквизитовФормы.ИП Тогда
			ТабличныйДокумент.Области.ПоМесту.Значение = "120";
		Иначе
			ТабличныйДокумент.Области.ПоМесту.Значение = "214";
		КонецЕсли;
		
		ДеревоПрил1Раздела1 = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил1"]);
		ДеревоПрил1Раздела1.Строки[0].Данные.Вставить("П000110000101", "01");
		ПоместитьВоВременноеХранилище(ДеревоПрил1Раздела1,
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил1"]);
		
		ДеревоПрил2Раздела1 = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил2"]);
		ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120000101", "2");// признак выплат - "зачетная система"
		ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120009001", "1");
		ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120009003", "1");
		ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120009005", "1");
		ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120009007", "1");
		ДеревоПрил2Раздела1.Строки[0].Данные.Вставить("П000120009009", "1");
		ПоместитьВоВременноеХранилище(ДеревоПрил2Раздела1,
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил2"]);
		
	КонецЕсли;
	
	ПолучитьСведенияОПоказателяхОтчета();
	
	Если НЕ СтруктураРеквизитовФормы.ОтображатьКнопкуЗаполнить Тогда
		Элементы.Заполнить.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ СтруктураРеквизитовФормы.ОтображатьКнопкуРасшифровать Тогда
		Элементы.Расшифровать.Видимость = Ложь;
		Элементы.ТабличныйДокументКонтекстноеМенюРасшифровать.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ РегламентированнаяОтчетность.ПерсонифицированныйУчетВедетсяВоВнешнейПрограмме() Тогда
		Элементы.Импортировать.Видимость = Ложь;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.НачальноеЗначениеНаимОрганизации = НачальноеЗначениеНаименованияОрганизации();
	
	Если ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСкопированаФорма) Тогда
		Если СтруктураРеквизитовФормы.ИП
			И ЗначениеЗаполнено(ТабличныйДокумент.Области.КодФормыРеорганизации.Значение)
			И ТабличныйДокумент.Области.КодФормыРеорганизации.Значение <> "0" Тогда
			ТабличныйДокумент.Области.КодФормыРеорганизации.Значение = "";
		КонецЕсли;
	КонецЕсли;
	
	УстановитьДоступностьОбластей(ЭтаФорма, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	ПоказатьПериод();
	
	ЗаполнитьПериодОтчета(ЭтаФорма);
	
	Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено
		ИЛИ СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено
		ИЛИ СтруктураРеквизитовФормы.СформироватьФормуОтчетаАвтоматически Тогда
		
		Если ОтчетСкопированОрганизацияНеИзменилась Тогда
			
			Если НЕ СтруктураРеквизитовФормы.ИП
				И ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСкопированаФорма)
				И ЗначениеЗаполнено(ТабличныйДокумент.Области.КодФормыРеорганизации.Значение)
				И ТабличныйДокумент.Области.КодФормыРеорганизации.Значение <> "0" Тогда
				НаимОргВосстановленное = ТабличныйДокумент.Области.НаимОрг.Значение;
				ЗаполнитьСведенияОбОрганизацииНаСервере();
				ТабличныйДокумент.Области.НаимОрг.Значение = НаимОргВосстановленное;
			Иначе
				РегламентированнаяОтчетность.ПолучитьЗначениеОКВЭД(ДатаПодписи, СтруктураРеквизитовФормы);
			КонецЕсли;
			
		Иначе
			
			ЗаполнитьСведенияОбОрганизацииНаСервере();
			
		КонецЕсли;
		
		Если СтруктураРеквизитовФормы.ИП Тогда
			
			ИзменитьНастройкиРазделаВДеревеРазделов("ФизЛицо", 1, Ложь);
			
			ИзменитьНастройкиРазделаВДеревеРазделов("Раздел1Прил8", 1, Ложь);
			
		Иначе
			
			ИзменитьНастройкиРазделаВДеревеРазделов("ФизЛицо", 0, Ложь);
			МассивИменРазделов = Новый Массив;
			МассивИменРазделов.Добавить("ФизЛицо");
			ИнициализироватьОбычныеРазделы(МассивИменРазделов);
			
			ИзменитьНастройкиВДеревеРазделовИОчиститьМногоуровневыйРаздел("Раздел1Прил8", 0, Ложь);
			
		КонецЕсли;
		
		Если ТабличныйДокумент.Области.ПоМесту.Значение = "124" Тогда
			
			ИзменитьНастройкиРазделаВДеревеРазделов("Раздел2", 1, Ложь);
			
		Иначе
			
			ИзменитьНастройкиВДеревеРазделовИОчиститьМногоуровневыйРаздел("Раздел2", 0, Ложь);
			
		КонецЕсли;
		
		СформироватьДеревоРазделовОтчетаНаСервере();
		
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
		НовыйОтчетЗаПервыйКвартал
		= (Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3);
		Если НЕ ИсходныйОтчетЗаПервыйКвартал И НовыйОтчетЗаПервыйКвартал Тогда
			РасчетНаСервере();
		КонецЕсли;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.НаимОрганизации = СтруктураРеквизитовФормы.Организация.Наименование;
	
	Если НЕ БезОткрытияФормы Тогда
		СформироватьСпискиВыбора();
		РегламентированнаяОтчетностьКлиентСервер.ПоказатьКнопкиПечати(ЭтаФорма);
	КонецЕсли;
	
	ОтобразитьНомерКорректировки(ЭтаФорма);
	
	СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Ложь;
	НомерКорректировки = ?(СтруктураРеквизитовФормы.ВидДокумента = 0, 0, НомерКорректировки);
	ТабличныйДокумент.Области.НомерКорректировки.Значение = Строка(НомерКорректировки);
	ЗаполнитьДатуВЯчейках(ЭтаФорма);
	
	РегламентированнаяОтчетность.ДобавитьКнопкуПрисоединенныеФайлы(ЭтаФорма);
	
	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтаФорма);
	
	Если СтруктураРеквизитовФормы.СформироватьФормуОтчетаАвтоматически Тогда
		ЗаданиеВыполнено = ЗаполнитьАвтоНаСервере();
		Если ЗаданиеВыполнено Тогда
			Если Элементы.Расшифровать.Видимость Тогда
				Элементы.Расшифровать.Доступность = Истина;
				Элементы.ТабличныйДокументКонтекстноеМенюРасшифровать.Доступность = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьМногострочныеЧасти()
	
	// Идентификаторы многострочных групп.
	СтруктураРеквизитовФормы.мИдГруппы1М1     = "П00001М1";
	СтруктураРеквизитовФормы.мИдГруппы1М2     = "П00001М2";
	СтруктураРеквизитовФормы.мИдГруппы11131М1 = "П11131М1";
	СтруктураРеквизитовФормы.мИдГруппы11132М1 = "П11132М1";
	СтруктураРеквизитовФормы.мИдГруппы1114М1  = "П01114М1";
	СтруктураРеквизитовФормы.мИдГруппы18М1    = "П00018М1";
	СтруктураРеквизитовФормы.мИдГруппы19М1    = "П00019М1";
	СтруктураРеквизитовФормы.мИдГруппы110М1   = "П00110М1";
	СтруктураРеквизитовФормы.мИдГруппы110М2   = "П00110М2";
	СтруктураРеквизитовФормы.мИдГруппы21М1    = "П00021М1";
	СтруктураРеквизитовФормы.мИдГруппы321М1   = "П00321М1";
	СтруктураРеквизитовФормы.мИдГруппы322М1   = "П00322М1";
	
	// Свойства, общие для всех многострочных групп.
	СтруктураРеквизитовФормы.ДлинаИмениГруппы = 8;
	СтруктураРеквизитовФормы.ДлинаИмениГрафы  = 13;
	
	// Структура с описанием свойств каждой группы в отдельности.
	СтруктураМногострочныхЧастей = Новый Структура;
	
	// Группа П00001М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00001М106001");
	ИменаГраф.Добавить("П00001М107001");
	ИменаГраф.Добавить("П00001М107101");
	ИменаГраф.Добавить("П00001М107201");
	ИменаГраф.Добавить("П00001М107301");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы1М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00001М2.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00001М208001");
	ИменаГраф.Добавить("П00001М209001");
	ИменаГраф.Добавить("П00001М209101");
	ИменаГраф.Добавить("П00001М209201");
	ИменаГраф.Добавить("П00001М209301");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы1М2, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П11131М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П11131М100101");
	Для НомСтр = 1 По 5 Цикл
		Для НомКол = 1 По 5 Цикл
			ИменаГраф.Добавить("П11131М10" + НомСтр + "00" + НомКол);
		КонецЦикла;
	КонецЦикла;
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы11131М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П11132М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П11132М100101");
	ИменаГраф.Добавить("П11132М100201");
	ИменаГраф.Добавить("П11132М100301");
	Для НомСтр = 1 По 5 Цикл
		Для НомКол = 1 По 5 Цикл
			ИменаГраф.Добавить("П11132М10" + НомСтр + "00" + НомКол);
		КонецЦикла;
	КонецЦикла;
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы11132М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П01114М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П01114М100101");
	Для НомСтр = 1 По 5 Цикл
		Для НомКол = 1 По 5 Цикл
			ИменаГраф.Добавить("П01114М10" + НомСтр + "00" + НомКол);
		КонецЦикла;
	КонецЦикла;
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы1114М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00018М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00018М102001");
	ИменаГраф.Добавить("П00018М103001");
	ИменаГраф.Добавить("П00018М104001");
	ИменаГраф.Добавить("П00018М105001");
	ИменаГраф.Добавить("П00018М106001");
	ИменаГраф.Добавить("П00018М106002");
	ИменаГраф.Добавить("П00018М106003");
	ИменаГраф.Добавить("П00018М106004");
	ИменаГраф.Добавить("П00018М106005");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы18М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00019М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00019М102001");
	ИменаГраф.Добавить("П00019М103001");
	ИменаГраф.Добавить("П00019М104001");
	ИменаГраф.Добавить("П00019М105001");
	ИменаГраф.Добавить("П00019М106001");
	ИменаГраф.Добавить("П00019М107001");
	ИменаГраф.Добавить("П00019М107002");
	ИменаГраф.Добавить("П00019М108001");
	ИменаГраф.Добавить("П00019М108002");
	ИменаГраф.Добавить("П00019М108003");
	ИменаГраф.Добавить("П00019М108004");
	ИменаГраф.Добавить("П00019М108005");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы19М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00110М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00110М102001");
	ИменаГраф.Добавить("П00110М103001");
	ИменаГраф.Добавить("П00110М104001");
	ИменаГраф.Добавить("П00110М105001");
	ИменаГраф.Добавить("П00110М106001");
	ИменаГраф.Добавить("П00110М107001");
	ИменаГраф.Добавить("П00110М108001");
	ИменаГраф.Добавить("П00110М109001");
	ИменаГраф.Добавить("П00110М110001");
	ИменаГраф.Добавить("П00110М110002");
	ИменаГраф.Добавить("П00110М110003");
	ИменаГраф.Добавить("П00110М110004");
	ИменаГраф.Добавить("П00110М110005");
	ИменаПодчиненныхГрупп = Новый Массив;
	ИменаПодчиненныхГрупп.Добавить(СтруктураРеквизитовФормы.мИдГруппы110М2);
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы110М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00110М2.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00110М211001");
	ИменаГраф.Добавить("П00110М212001");
	ИменаГраф.Добавить("П00110М213001");
	ИменаГраф.Добавить("П00110М214001");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы110М2, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 1, ИменаПодчиненныхГрупп));
	
	// Группа П00021М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00021М101001");
	ИменаГраф.Добавить("П00021М102001");
	ИменаГраф.Добавить("П00021М103001");
	ИменаГраф.Добавить("П00021М104001");
	ИменаГраф.Добавить("П00021М105001");
	ИменаГраф.Добавить("П00021М106001");
	ИменаГраф.Добавить("П00021М107001");
	ИменаГраф.Добавить("П00021М108001");
	ИменаГраф.Добавить("П00021М109001");
	ИменаГраф.Добавить("П00021М109002");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы21М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00321М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00321М119001");
	ИменаГраф.Добавить("П00321М120001");
	ИменаГраф.Добавить("П00321М121001");
	ИменаГраф.Добавить("П00321М122001");
	ИменаГраф.Добавить("П00321М123001");
	ИменаГраф.Добавить("П00321М124001");
	
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы321М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00322М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00322М126001");
	ИменаГраф.Добавить("П00322М127001");
	ИменаГраф.Добавить("П00322М128001");
	ИменаГраф.Добавить("П00322М129001");
	
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы322М1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей = СтруктураМногострочныхЧастей;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьМногоуровневыеРазделы()
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = Новый Массив;
	
	// Формирование структуры свойств многоуровневых разделов.
	//
	мСтруктураМногоуровневыхРазделов = Новый Структура;
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы1М1);
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы1М2);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел1", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаПодчиненныхРазделов = Новый Массив;
	ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_1и1_2");
	ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_3_1");
	ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_3_2");
	ИменаПодчиненныхРазделов.Добавить("Раздел1Прил1Подр1_4");
	СтруктураРаздела.Вставить("ИменаПодчиненныхРазделов", ИменаПодчиненныхРазделов);
	СтруктураРаздела.Вставить("Многостраничность");
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
	СтруктураРаздела.Вставить("Подчиненность");
	СтруктураРаздела.Вставить("НаимСтраницы", "Подразделы 1.1, 1.2");
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_1и1_2", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы11131М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
	СтруктураРаздела.Вставить("Подчиненность");
	СтруктураРаздела.Вставить("НаимСтраницы", "Подраздел 1.3.1");
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_3_1", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы11132М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
	СтруктураРаздела.Вставить("Подчиненность");
	СтруктураРаздела.Вставить("НаимСтраницы", "Подраздел 1.3.2");
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_3_2", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы1114М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Раздел1Прил1");
	СтруктураРаздела.Вставить("Подчиненность");
	СтруктураРаздела.Вставить("НаимСтраницы", "Подраздел 1.4");
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил1Подр1_4", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил2", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил3", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил4", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил5_6", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил7", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы18М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил8", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы19М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил9", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы110М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел1Прил10", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы21М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел2", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы321М1);
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы322М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураРаздела.Вставить("Многостраничность");
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел3", СтруктураРаздела);
	
	// Формирование начальной структуры дерева разделов
	// с заполнением каждого уровня пустыми данными.
	//
	ДеревоДанных = Новый ДеревоЗначений;
	ДеревоДанных.Колонки.Добавить("Данные");
	ДеревоДанных.Колонки.Добавить("ДанныеМногострочныхЧастей");
	
	СохрТаблДокумент = Новый ТабличныйДокумент;
	СохрТаблДокумент.Вывести(ТабличныйДокумент);
	
	Для каждого Элем Из мСтруктураМногоуровневыхРазделов Цикл
		Если Элем.Значение.Свойство("Подчиненность") Тогда
			Продолжить;
		КонецЕсли;
		
		ДеревоДанныхРаздела = ДеревоДанных.Скопировать();
		ТекВетка = ДеревоДанныхРаздела.Строки.Добавить();
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + Элем.Ключ));
		
		ДанныеТаблДокумента = ДанныеТабличногоДокумента(Элем.Ключ);
		
		ТекВетка.Данные = ДанныеТаблДокумента.Данные;
		ТекВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
		
		ИнициализироватьПодчиненныеРазделы(Элем.Ключ, ТекВетка);
		
		// Особая обработка текста в строках 020 и 110 Приложения 10 к Разделу 1.
		Если Элем.Ключ = "Раздел1Прил10" Тогда
			МнЧ_П00110М1 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М1];
			МнЧ_П00110М1.Строки[0].Данные.Вставить("П00110М102001", "001");
			МнЧ_П00110М2 = МнЧ_П00110М1.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М2];
			МнЧ_П00110М2.Строки[0].Данные.Вставить("П00110М211001", "001");
		КонецЕсли;
		
		СтруктураРеквизитовФормы.Вставить("АдресВоВрХранилищеДеревоДанных" + Элем.Ключ,
			ПоместитьВоВременноеХранилище(ДеревоДанныхРаздела, УникальныйИдентификатор));
	КонецЦикла;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(СохрТаблДокумент);
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьПодчиненныеРазделы(Знач ИмяРаздела, Ветка)
	
	Если мСтруктураМногоуровневыхРазделов[ИмяРаздела].Свойство("ИменаПодчиненныхРазделов") Тогда
		
		ИменаПодчРазделов = мСтруктураМногоуровневыхРазделов[ИмяРаздела]["ИменаПодчиненныхРазделов"];
		Для каждого ИмяПодчРаздела Из ИменаПодчРазделов Цикл
			ПодчВетка = Ветка.Строки.Добавить().Строки.Добавить();
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + ИмяПодчРаздела));
			
			ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяПодчРаздела);
			
			ПодчВетка.Данные = ДанныеТаблДокумента.Данные;
			ПодчВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
			
			ИнициализироватьПодчиненныеРазделы(ИмяПодчРаздела, ПодчВетка);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьОбычныеРазделы(МассивИменРазделов = Неопределено)
	
	Если МассивИменРазделов = Неопределено Тогда
		
		МассивИменРазделов = Новый Массив;
		МассивИменРазделов.Добавить("Титульный");
		МассивИменРазделов.Добавить("ФизЛицо");
		
	КонецЕсли;
	
	СохрТабличныйДокумент = Новый ТабличныйДокумент;
	СохрТабличныйДокумент.Вывести(ТабличныйДокумент);
	
	Для каждого ИмяРаздела Из МассивИменРазделов Цикл
		
		ЭтаФорма["СтруктураДанных" + ИмяРаздела] = Новый Структура;
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + ИмяРаздела));
		
		СохранитьДанныеРаздела(ИмяРаздела);
		
	КонецЦикла;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(СохрТабличныйДокумент);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСведенияОПоказателяхОтчета()
	
	СтруктураРеквизитовФормы.Вставить("АвтозаполняемыеПоказатели", Новый Структура);
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Организация",              СтруктураРеквизитовФормы.Организация);
	ПараметрыОтчета.Вставить("мДатаНачалаПериодаОтчета", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	ПараметрыОтчета.Вставить("мДатаКонцаПериодаОтчета",  СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	
	АвтозаполняемыеПоказатели
		= РегламентированнаяОтчетностьПереопределяемый.ПолучитьСведенияОПоказателяхОтчета(
		Сред(Лев(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") - 1), 7),
		Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") + 7), ПараметрыОтчета);
	
	Если АвтозаполняемыеПоказатели.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого Показатель Из АвтозаполняемыеПоказатели Цикл
		
		Если Показатель.Значение[0] Тогда
			СтруктураРеквизитовФормы.ОтображатьКнопкуЗаполнить = Истина;
			Если СтруктураРеквизитовФормы.ОтображатьКнопкуРасшифровать Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
		Если Показатель.Значение[1] Тогда
			СтруктураРеквизитовФормы.ОтображатьКнопкуРасшифровать = Истина;
			Если СтруктураРеквизитовФормы.ОтображатьКнопкуЗаполнить Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	СтруктураРеквизитовФормы.Вставить("АвтозаполняемыеПоказатели", АвтозаполняемыеПоказатели);
	
КонецПроцедуры

&НаСервере
Функция НачальноеЗначениеНаименованияОрганизации()
	
	Если НЕ СтруктураРеквизитовФормы.ИП Тогда
		
		СтрокаСведений = "НаимЮЛПол";
		
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
			СтруктураРеквизитовФормы.Организация, ДатаПодписи, СтрокаСведений);
		
		НаимОрганизации = "";
		СведенияОбОрганизации.Свойство("НаимЮлПол", НаимОрганизации);
		
		Возврат СокрЛП(НаимОрганизации);
		
	Иначе
		
		Возврат "";
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ФормироватьСтруктуруСтраницОтчета() Экспорт
	
	мДеревоСтраницОтчета.ПолучитьЭлементы().Очистить();
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Титульный";
	СтрокаУровня1.Представление      = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "ФизЛицо";
	СтрокаУровня1.Представление      = "Сведения о физическом лице";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 0;
	СтрокаУровня1.ПоказатьСтраницу   = 0;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1";
	СтрокаУровня1.Представление      = "Раздел 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил1";
	СтрокаУровня1.Представление      = "Приложение 1 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил2";
	СтрокаУровня1.Представление      = "Приложение 2 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил3";
	СтрокаУровня1.Представление      = "Приложение 3 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил4";
	СтрокаУровня1.Представление      = "Приложение 4 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил5_6";
	СтрокаУровня1.Представление      = "Приложения 5, 6 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил7";
	СтрокаУровня1.Представление      = "Приложение 7 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил8";
	СтрокаУровня1.Представление      = "Приложение 8 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил9";
	СтрокаУровня1.Представление      = "Приложение 9 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1Прил10";
	СтрокаУровня1.Представление      = "Приложение 10 к Разделу 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел2";
	СтрокаУровня1.Представление      = "Раздел 2";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел3";
	СтрокаУровня1.Представление      = "Раздел 3";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСпискиВыбора()
	
	МакетСоставаПоказателей = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет("СпискиВыбора2017Кв1");
	
	КоллекцияСписковВыбора = Новый Соответствие;
	Для Каждого Область Из МакетСоставаПоказателей.Области Цикл
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
			ВерхОбласти = Область.Верх;
			НизОбласти = Область.Низ;
			ТаблСписка = Новый ТаблицаЗначений;
			ТаблСписка.Колонки.Добавить("Код",,,
				МакетСоставаПоказателей.Область(ВерхОбласти, 1, ВерхОбласти, 1).ШиринаКолонки);
			ТаблСписка.Колонки.Добавить("Название",,,
				МакетСоставаПоказателей.Область(ВерхОбласти, 2, ВерхОбласти, 2).ШиринаКолонки);
			Для НомСтр = ВерхОбласти По НизОбласти Цикл
				КодПоказателя = СокрП(МакетСоставаПоказателей.Область(НомСтр, 1).Текст);
				Если КодПоказателя <> "###" Тогда
					НовСтрока = ТаблСписка.Добавить();
					НовСтрока.Код = КодПоказателя;
					НовСтрока.Название = СокрП(МакетСоставаПоказателей.Область(НомСтр, 2).Текст);
				КонецЕсли;
			КонецЦикла;
			КоллекцияСписковВыбора.Вставить(Область.Имя, ТаблСписка);
		КонецЕсли;
	КонецЦикла;
	
	СвойстваПоказателей.Очистить();
	
	//Титульный.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "ПоМесту", 3, ,
	"Выбор места представления", КоллекцияСписковВыбора["МестаПредставления"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "КодФормыРеорганизации", 1, ,
	"Выбор кода формы реорганизации (ликвидации)", КоллекцияСписковВыбора["ФормыРеорганизации"]);
	
	//Сведения о физлице.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "КодВидаДокумента", 2, ,
	"Выбор кода вида документа", КоллекцияСписковВыбора["КодыВидовДокументов"]);
	
	//Разд. 1.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000010002001", 20, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК_Раздел1_Стр020"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000010004001", 20, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК_Раздел1_Стр040"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00001М106001", 20, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК_Раздел1_Стр060"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00001М208001", 20, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК_Раздел1_Стр080"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000010010001", 20, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК_Раздел1_Стр100"]);
	
	//Разд. 1 Прил. 1.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000110000101", 0, ,
	"Выбор кода тарифа плательщика", КоллекцияСписковВыбора["КодыТарифаПлательщикаПрил1Разд1"]);
	
	//Разд. 1 Прил. 1. Подр. 1.3.1.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П11131М100101", 1, ,
	"Выбор признака основания исчисления", КоллекцияСписковВыбора["ПризнакиОснованияИсчисления"]);
	
	//Разд. 1 Прил. 1. Подр. 1.3.2.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П11132М100101", 1, ,
	"Выбор кода основания исчисления", КоллекцияСписковВыбора["КодыОснованияИсчисленияПрил1Разд1Подр1_3_2"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П11132М100201", 1, ,
	"Выбор основания заполнения", КоллекцияСписковВыбора["ОснованияЗаполнения"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П11132М100301", 1, ,
	"Выбор кода класса условий труда", КоллекцияСписковВыбора["КодыКлассаУсловийТруда"]);
	
	//Разд. 1 Прил. 1. Подр. 1.4.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П01114М100101", 1, ,
	"Выбор кода основания исчисления", КоллекцияСписковВыбора["КодыОснованияИсчисленияПрил1Разд1Подр1_4"]);
	
	//Разд. 1 Прил. 2.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000120000101", 1, ,
	"Выбор признака выплат", КоллекцияСписковВыбора["ПризнакиВыплат"]);
	//Признак в графах 1, 3, 5, 7, 9 строки 180.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000120009001", 1, ,
	"Выбор признака", КоллекцияСписковВыбора["ПризнакиСтр180Прил2Разд1"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000120009003", 1, ,
	"Выбор признака", КоллекцияСписковВыбора["ПризнакиСтр180Прил2Разд1"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000120009005", 1, ,
	"Выбор признака", КоллекцияСписковВыбора["ПризнакиСтр180Прил2Разд1"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000120009007", 1, ,
	"Выбор признака", КоллекцияСписковВыбора["ПризнакиСтр180Прил2Разд1"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000120009009", 1, ,
	"Выбор признака", КоллекцияСписковВыбора["ПризнакиСтр180Прил2Разд1"]);
	
	//Разд. 2.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000020002001", 20, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК_Раздел2_Стр020"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000020004001", 20, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК_Раздел2_Стр040"]);
	
	//Разд. 3.1.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000310013001", 1, ,
	"Выбор пола", КоллекцияСписковВыбора["ПризнакиМЖ"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000310014001", 2, ,
	"Выбор кода вида документа", КоллекцияСписковВыбора["КодыВидовДокументов"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000310016001", 1, ,
	"Выбор признака обязательного пенсионного страхования", КоллекцияСписковВыбора["ПризнакиДаНет"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000310017001", 1, ,
	"Выбор признака обязательного медицинского страхования", КоллекцияСписковВыбора["ПризнакиДаНет"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000310018001", 1, ,
	"Выбор признака обязательного социального страхования", КоллекцияСписковВыбора["ПризнакиДаНет"]);
	//Разд. 3.2.1.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00321М120001", 0, ,
	"Выбор кода категории застрахованного лица", КоллекцияСписковВыбора["КодыКатегорииЗастрахованногоЛица"]);
	//Разд. 3.2.2.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00322М127001", 2, ,
	"Выбор кода тарифа плательщика", КоллекцияСписковВыбора["КодыТарифаПлательщикаРазд3"]);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьПериод()
	
	СтруктураРеквизитовФормы.СтрПериодОтчета = ПредставлениеПериода(
		НачалоДня(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета),
		КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета), "ФП = Истина");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьПериодОтчета(Форма)
	
	ЗаполненКодФормыРеорганизации
	= ЗначениеЗаполнено(Форма.ТабличныйДокумент.Области.КодФормыРеорганизации.Значение);
	
	МесяцОкончания = Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	
	Если ЗаполненКодФормыРеорганизации Тогда
		Если МесяцОкончания = 3 Тогда
			КодПериода = 51;
		ИначеЕсли МесяцОкончания = 6 Тогда
			КодПериода = 52;
		ИначеЕсли МесяцОкончания = 9 Тогда
			КодПериода = 53;
		Иначе
			КодПериода = 90;
		КонецЕсли;
	Иначе
		Если МесяцОкончания = 3 Тогда
			КодПериода = 21;
		ИначеЕсли МесяцОкончания = 6 Тогда
			КодПериода = 31;
		ИначеЕсли МесяцОкончания = 9 Тогда
			КодПериода = 33;
		Иначе
			КодПериода = 34;
		КонецЕсли;
	КонецЕсли;
	
	Форма.ТабличныйДокумент.Области.Период.Значение
	= ?(КодПериода > 0, Формат(КодПериода, "ЧЦ=2; ЧВН="), "");
	
	Форма.ТабличныйДокумент.Области.ОтчетГод.Значение = Формат(
		Год(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета), "ЧГ=");
	
КонецПроцедуры

#КонецОбласти

#Область СохранениеДанныхОтчета

&НаКлиенте
Процедура СохранитьОтчет(Команда)
	
	Если Элементы.РазделыОтчета.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь, ВыполняемоеОповещение = Неопределено) Экспорт
	
	Вариант = СтруктураРеквизитовФормы.ВидДокумента * НомерКорректировки;
	
	Если СтруктураДанныхТитульный.Количество() = 0 
	 ИЛИ СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		
		СтруктураДанныхТитульный.Вставить("НалоговыйОрган", ТабличныйДокумент.Области.НалоговыйОрган.Значение);
		СтруктураДанныхТитульный.Вставить("КПП", ТабличныйДокумент.Области.КПП.Значение);
		
	КонецЕсли;
	
	КодИФНС = СтруктураДанныхТитульный.НалоговыйОрган;
	КПП = СтруктураДанныхТитульный.КПП;
	
	Если НЕ РегламентированнаяОтчетностьКлиент.ПриЗаписиРегламентированногоОтчетаНаКлиенте(ЭтаФорма, КодИФНС, Автосохранение, Вариант) Тогда
		Возврат;
	КонецЕсли;
	
	ПодобныйОтчетСуществует = Ложь;
	ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = Ложь;
	
	Если Элементы.РазделыОтчета.ТекущиеДанные = Неопределено Тогда
		НаименованиеТекущегоРаздела = СтруктураРеквизитовФормы.НаимТекущегоРаздела;
	Иначе
		НаименованиеТекущегоРаздела = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
	КонецЕсли;
	
	РезультатСохранения = ПередСохранением(КодИФНС, КПП, ПодобныйОтчетСуществует, Вариант, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, Автосохранение, НаименованиеТекущегоРаздела);
	
	ВидДокументаНомерКорректировкиИзменен = Неопределено;
	
	Если ПодобныйОтчетСуществует И Автосохранение Тогда
		Возврат;
	КонецЕсли;
	
	НуженВопросПередСохранением = (ПодобныйОтчетСуществует ИЛИ ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки);
	
	Если НуженВопросПередСохранением Тогда
		
		СохранитьНаКлиентеСВопросом(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПодобныйОтчетСуществует, КодИФНС, КПП);
		
	Иначе
		
		ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиентеСВопросом(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПодобныйОтчетСуществует, КодИФНС, КПП)
	
	Если ПодобныйОтчетСуществует Тогда
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, "Сохранить");
		Кнопки.Добавить(КодВозвратаДиалога.Нет, "Отмена");
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Отчет с видом %1 уже существует.
			|Сохранить отчет с таким же видом?'"), ?(Вариант = 0, """Первичный""", """Корректирующий/" + Вариант + """"));
		ДополнительныеПараметры = Новый Структура("Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, КодИФНС, КПП", Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, КодИФНС, КПП);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросСохранитьОтчетСТакимЖеВидомЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки, , Кнопки.Получить(1).Значение);
		
	Иначе
		
		СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки,КодИФНС, КПП);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьОтчетСТакимЖеВидомЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Автосохранение = ДополнительныеПараметры.Автосохранение;
	Вариант = ДополнительныеПараметры.Вариант;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	КодИФНС = ДополнительныеПараметры.КодИФНС;
	КПП = ДополнительныеПараметры.КПП;
	ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = ДополнительныеПараметры.ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки;
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки,КодИФНС, КПП);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, КодИФНС, КПП)
	
	Если ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки Тогда
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("ВидОтчета", Вариант);
		
		ФормаВопроса = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени("ВопросПриИзмененииВидаДокументаНомераКорректировки", ПараметрыФормы);
		ФормаВопроса.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ДополнительныеПараметры = Новый Структура("Автосохранение, Вариант, ВыполняемоеОповещение, КодИФНС, КПП", Автосохранение, Вариант, ВыполняемоеОповещение,КодИФНС, КПП );
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПриИзмененииВидаДокументаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ФормаВопроса.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
		ФормаВопроса.Открыть();
	Иначе
		Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Сохраняется %1...'"), ЭтаФорма.Заголовок), , , БиблиотекаКартинок.Записать);
		РезультатСохранения = Сохранить(Автосохранение, КодИФНС, КПП, Вариант, Неопределено, Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
		ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПриИзмененииВидаДокументаЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
	
	Автосохранение = ДополнительныеПараметры.Автосохранение;
	Вариант = ДополнительныеПараметры.Вариант;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	КодИФНС = ДополнительныеПараметры.КодИФНС;
	КПП = ДополнительныеПараметры.КПП;
	Если КодВозврата = КодВозвратаДиалога.Да
		ИЛИ КодВозврата = КодВозвратаДиалога.Нет Тогда
		ВидДокументаНомерКорректировкиИзменен = ?(КодВозврата = КодВозвратаДиалога.Да, Истина, Ложь);
	Иначе
		Возврат;
	КонецЕсли;
	
	Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Сохраняется %1...'"), ЭтаФорма.Заголовок), , , БиблиотекаКартинок.Записать);
	РезультатСохранения = Сохранить(Автосохранение, КодИФНС, КПП, Вариант, ВидДокументаНомерКорректировкиИзменен, Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
	ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения)
	
	КлючУникальности = СтруктураРеквизитовФормы.мСохраненныйДок;
	
	Если РезультатСохранения Тогда
		
		РегламентированнаяОтчетностьКлиент.ПослеЗаписиРегламентированногоОтчета(ЭтаФорма);
		
		Если ВыполняемоеОповещение <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПередСохранением(КодИФНС, КПП, ПодобныйОтчетСуществует, Вариант, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, Автосохранение, НаимТекРаздела)
	
	Если РегламентированнаяОтчетность.БылиИзмененыКлючевыеРеквизитыОтчета(ЭтаФорма, КодИФНС, КПП)
	   И РегламентированнаяОтчетность.СуществуетДокументСАналогичнымиРеквизитами(ЭтаФорма, КодИФНС, КПП) Тогда
		
		ПодобныйОтчетСуществует = Истина;
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.мЗаписываетсяНовыйДокумент = (СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено ИЛИ СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено);
	
	Если Вариант <> Неопределено И ((СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено) ИЛИ (СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено) ИЛИ (Вариант <> СтруктураРеквизитовФормы.мВариант)) Тогда
		
		Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено ИЛИ СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
			
		ИначеЕсли Вариант <> СтруктураРеквизитовФормы.мВариант Тогда
			
			ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = Истина;
			
		КонецЕсли;

	КонецЕсли;
	
	Если ПодобныйОтчетСуществует
	 ИЛИ ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки Тогда
	 
	 	Возврат Ложь;
		
 	КонецЕсли;
		
	Возврат Сохранить(Автосохранение, КодИФНС, КПП, Вариант, , НаимТекРаздела);
		
КонецФункции

&НаСервере
Функция Сохранить(Автосохранение = Ложь, КодИФНС, КПП, Вариант, ВидДокументаНомерКорректировкиИзменен = Неопределено, НаимТекРаздела) Экспорт
	
	ДанныеДляРазблокирования = Неопределено;
	
	Если НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
		Если НЕ СтруктураРеквизитовФормы.мБезОткрытияФормы Тогда
			ДанныеДляРазблокирования = Новый Структура("Ключ,ИдФормы",
			СтруктураРеквизитовФормы.мСохраненныйДок, ЭтаФорма.УникальныйИдентификатор);
		КонецЕсли;
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.ПолучитьОбъект();
	КонецЕсли;
	
	Если НЕ РегламентированнаяОтчетность.ПриЗаписиРегламентированногоОтчетаНаСервере(
		ЭтаФорма, КодИФНС, Автосохранение, Вариант, ВидДокументаНомерКорректировкиИзменен,
		СтруктураРеквизитовФормы.мСохраненныйДок) Тогда
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
		Возврат Ложь;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.мСохраненныйДок.ИсточникОтчета           = Метаданные.Отчеты[Сред(Лев(СтрЗаменить(ЭтаФорма.ИмяФормы, "Внешний", ""), СтрНайти(СтрЗаменить(ЭтаФорма.ИмяФормы, "Внешний", ""), ".Форма.") - 1), 7)].Имя;
	СтруктураРеквизитовФормы.мСохраненныйДок.НаименованиеОтчета       = Метаданные.Отчеты[Сред(Лев(СтрЗаменить(ЭтаФорма.ИмяФормы, "Внешний", ""), СтрНайти(СтрЗаменить(ЭтаФорма.ИмяФормы, "Внешний", ""), ".Форма.") - 1), 7)].ОсновнаяФорма.Синоним;
	СтруктураРеквизитовФормы.мСохраненныйДок.ДатаНачала               = СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета;
	СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания            = СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета;
	СтруктураРеквизитовФормы.мСохраненныйДок.Периодичность            = СтруктураРеквизитовФормы.мПериодичность;
	СтруктураРеквизитовФормы.мСохраненныйДок.ВыбраннаяФорма           = СтруктураРеквизитовФормы.мВыбраннаяФорма;
	СтруктураРеквизитовФормы.мСохраненныйДок.Организация              = СтруктураРеквизитовФормы.Организация;
	СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи              = ДатаПодписи;
	СтруктураРеквизитовФормы.мСохраненныйДок.ЕдиницаИзмерения         = СтруктураРеквизитовФормы.ЕдиницаИзмерения;
	СтруктураРеквизитовФормы.мСохраненныйДок.ТочностьЕдиницыИзмерения = СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения;
	СтруктураРеквизитовФормы.мСохраненныйДок.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	СтруктураРеквизитовФормы.мСохраненныйДок.Комментарий              = Комментарий;
	СтруктураРеквизитовФормы.мСохраненныйДок.КодНалоговогоОргана      = КодИФНС;
	СтруктураРеквизитовФормы.мСохраненныйДок.КПП                      = КПП;
	СтруктураРеквизитовФормы.мСохраненныйДок.Вид                      = Вариант;
	СтруктураРеквизитовФормы.мСохраненныйДок.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(СтруктураРеквизитовФормы.мСохраненныйДок.Вид);
	СтруктураРеквизитовФормы.мВариант                                 = Вариант;
	
	СтруктураРеквизитовФормы.мСохраненныйДок.ФорматВыгрузки = "Автоматически";
	
	СохранитьДанныеРаздела(НаимТекРаздела);
	
	ПоказателиОтчета = Новый Структура();
	ПоказателиОтчета.Вставить("ПолеТабличногоДокументаТитульный", СтруктураДанныхТитульный);
	ПоказателиОтчета.Вставить("ПолеТабличногоДокументаФизЛицо", СтруктураДанныхФизЛицо);
	
	СписокСохранения = Новый Структура();
	
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
	
	// Вставляем данные многоуровневых разделов.
	ДанныеМногоуровневыхРазделов = Новый Структура;
	Для каждого Элем Из мСтруктураМногоуровневыхРазделов Цикл
		СтруктураРаздела = Элем.Значение;
		Если НЕ СтруктураРаздела.Свойство("Подчиненность") Тогда
			ДанныеМногоуровневыхРазделов.Вставить(Элем.Ключ, ПолучитьИзВременногоХранилища(
				СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + Элем.Ключ]));
		КонецЕсли;
	КонецЦикла;
	СписокСохранения.Вставить("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов);
	
	СписокСохранения.Вставить("ВерсияФормы", СтруктураРеквизитовФормы.мВерсияФормы);
	СписокСохранения.Вставить("ФлОтклВыборЗначений", СтруктураРеквизитовФормы.мАвтоВыборКодов);
	СписокСохранения.Вставить("Автозаполнение", СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет);
	СписокСохранения.Вставить("ПечатьБезШтрихкодаРазрешена", СтруктураРеквизитовФормы.мПечатьБезШтрихкодаРазрешена);
	СписокСохранения.Вставить("ФлПодсчетСтраниц", СтруктураРеквизитовФормы.мСчетчикСтраниц);
	
	ХранилищеДанных = Новый ХранилищеЗначения(СписокСохранения);
	СтруктураРеквизитовФормы.мСохраненныйДок.ДанныеОтчета = ХранилищеДанных;
	
	Попытка
		СтруктураРеквизитовФормы.мСохраненныйДок.Записать();
	Исключение
		Если НЕ Автосохранение Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"),
				РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));
			Сообщение.Сообщить();
		КонецЕсли;
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
		Возврат Ложь;
	КонецПопытки;
	
	СохранитьДеревоСтраницОтчета(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	Модифицированность = Ложь;
	
	СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
	
	Если НЕ СтруктураРеквизитовФормы.мБезОткрытияФормы
		И НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
		ЗаблокироватьДанныеДляРедактирования(СтруктураРеквизитовФормы.мСохраненныйДок, , ЭтаФорма.УникальныйИдентификатор);
	КонецЕсли;
	
	Если ДанныеДляРазблокирования <> Неопределено Тогда
		РазблокироватьДанныеДляРедактирования(ДанныеДляРазблокирования.Ключ, ДанныеДляРазблокирования.ИдФормы);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура СохранитьДеревоСтраницОтчета(Знач мСохраненныйДок)
	
	Если мСохраненныйДок <> Неопределено Тогда
		Если ТипЗнч(мСохраненныйДок) = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
			мСохраненныйДок = мСохраненныйДок.ПолучитьОбъект();
		КонецЕсли;
		Если Не мСохраненныйДок.ЭтоНовый() Тогда
			// Сохраняем выбранные листы для печати в хранилище.
			ХранилищеДанных = Новый ХранилищеЗначения(РеквизитФормыВЗначение("мДеревоСтраницОтчета"));
			мСохраненныйДок.ДеревоНастройкиСтраниц = ХранилищеДанных;
			Попытка
				мСохраненныйДок.Записать();
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВосстановлениеСохраненныхДанныхОтчета

&НаСервере
Функция СохраненныеДанныеОтчета()
	
	Если СохраненныеДанныеОтчета = Неопределено Тогда
		
		СохраненныеДанныеОтчета = СтруктураРеквизитовФормы.мСохраненныйДок.ДанныеОтчета.Получить();
		
		Если СохраненныеДанныеОтчета.Свойство("ОкружениеСохранения") Тогда
			ВосстановитьСохраненныеДанныеОтчетаСтарогоОбразца(СохраненныеДанныеОтчета);
		КонецЕсли;
		
		ДеревоРаздела = СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел3;
		Если НЕ ДеревоРаздела.Строки[0].Данные.Свойство("П000030004001") Тогда
			// Заполнение строки 040 раздела 3 (случай сохраненных данных отчета предыдущей версии).
			ЗаполнитьСтроку040Раздела3(ДеревоРаздела);
			СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Вставить("Раздел3", ДеревоРаздела);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СохраненныеДанныеОтчета;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСтроку040Раздела3(ДеревоРаздела)
	
	ЗаполненРаздел = ЗаполненРаздел(ДеревоРаздела, "Раздел3");
	
	Для Инд = 0 По ДеревоРаздела.Строки.Количество() - 1 Цикл
		Если ЗаполненРаздел Тогда
			ДеревоРаздела.Строки[Инд].Данные.Вставить("П000030004001", Формат(Инд + 1, "ЧГ="));
		Иначе
			ДеревоРаздела.Строки[Инд].Данные.Вставить("П000030004001", "");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьСохраненныеДанные()
	Перем ДанныеМногоуровневыхРазделов;
	Перем ПоказателиОтчета;
	Перем Автозаполнение;
	Перем ТаблицаМногостраничногоДокумента;
	
	// В случае, если формы была скопирована по F9, то проверим, не изменилась ли организация.
	Если НЕ ЗначениеЗаполнено(СтруктураРеквизитовФормы.Организация) Тогда
		СтруктураРеквизитовФормы.Организация = СтруктураРеквизитовФормы.мСохраненныйДок.Организация;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.ЕдиницаИзмерения         = СтруктураРеквизитовФормы.мСохраненныйДок.ЕдиницаИзмерения;
	СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = СтруктураРеквизитовФормы.мСохраненныйДок.ТочностьЕдиницыИзмерения;
	ДатаПодписи = СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи;
	Комментарий = СтруктураРеквизитовФормы.мСохраненныйДок.Комментарий;
	
	СписокСохранения = СохраненныеДанныеОтчета();
	
	ДеревоНастройкиСтраниц = СтруктураРеквизитовФормы.мСохраненныйДок.ДеревоНастройкиСтраниц.Получить();
	ЗначениеВРеквизитФормы(ДеревоНастройкиСтраниц.Скопировать(), "мДеревоСтраницОтчета");
	
	СписокСохранения.Свойство("ПоказателиОтчета", ПоказателиОтчета);
	
	Если СписокСохранения.Свойство("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов) Тогда
		Для Каждого ЭлементСтруктуры Из ДанныеМногоуровневыхРазделов Цикл
			Если ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСкопированаФорма)
				И ЭлементСтруктуры.Ключ = "Раздел1Прил7"
				И Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) <> 12 Тогда
				Для каждого ВеткаР1Пр7 Из ЭлементСтруктуры.Значение.Строки Цикл
					Если ВеткаР1Пр7.Данные.Свойство("П000170001002") Тогда
						ВеткаР1Пр7.Данные.Вставить("П000170001002", 0);
					КонецЕсли;
					Если ВеткаР1Пр7.Данные.Свойство("П000170002002") Тогда
						ВеткаР1Пр7.Данные.Вставить("П000170002002", 0);
					КонецЕсли;
					Если ВеткаР1Пр7.Данные.Свойство("П000170003002") Тогда
						ВеткаР1Пр7.Данные.Вставить("П000170003002", 0);
					КонецЕсли;
					Если ВеткаР1Пр7.Данные.Свойство("П000170004002") Тогда
						ВеткаР1Пр7.Данные.Вставить("П000170004002", 0);
					КонецЕсли;
					Если ВеткаР1Пр7.Данные.Свойство("П000170005002") Тогда
						ВеткаР1Пр7.Данные.Вставить("П000170005002", 0);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ЭлементСтруктуры.Ключ]
				= ПоместитьВоВременноеХранилище(ЭлементСтруктуры.Значение, УникальныйИдентификатор);
		КонецЦикла;
	КонецЕсли;
	
	СписокСохранения.Свойство("ФлОтклВыборЗначений", СтруктураРеквизитовФормы.мАвтоВыборКодов);
	Если СтруктураРеквизитовФормы.мАвтоВыборКодов = Неопределено Тогда
		СтруктураРеквизитовФормы.мАвтоВыборКодов = Ложь;
	КонецЕсли;
	
	СписокСохранения.Свойство("Автозаполнение", Автозаполнение);
	СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет = Автозаполнение;
	
	Если НЕ СписокСохранения.Свойство("ПечатьБезШтрихкодаРазрешена", СтруктураРеквизитовФормы.мПечатьБезШтрихкодаРазрешена) Тогда
		СтруктураРеквизитовФормы.мПечатьБезШтрихкодаРазрешена = Ложь;
	КонецЕсли;
	
	Если НЕ СписокСохранения.Свойство("ФлПодсчетСтраниц", СтруктураРеквизитовФормы.мСчетчикСтраниц) Тогда
		СтруктураРеквизитовФормы.мСчетчикСтраниц = Ложь;
	КонецЕсли;
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	СтруктураДанныхТитульный = ПоказателиОтчета["ПолеТабличногоДокументаТитульный"];
	СтруктураДанныхФизЛицо   = ПоказателиОтчета["ПолеТабличногоДокументаФизЛицо"];
	
	ИмяТекРаздела = "Титульный";
	Для Каждого ЭлСтруктуры Из ЭтаФорма["СтруктураДанных" + ИмяТекРаздела] Цикл
		Обл = ТабличныйДокумент.Области.Найти(ЭлСтруктуры.Ключ);
		Если Обл <> Неопределено Тогда
			Обл.Значение = ЭлСтруктуры.Значение;
		КонецЕсли;
	КонецЦикла;
	
	РегламентированнаяОтчетность.ОперацииПриВосстановленииРегламентированногоОтчета(ЭтаФорма);
	
	КопироватьДанныеФормы(мДеревоСтраницОтчета, мДеревоВыбранныхСтраниц);
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьСохраненныеДанныеОтчетаСтарогоОбразца(СписокСохранения)
	
	ПрефиксТД = "ПолеТабличногоДокумента";
	ДанныеМногоуровневыхРазделов = Новый Структура;
	
	// Данные вариантов автозаполнения.
	Если СписокСохранения.Свойство("ДанныеВариантовАвтоЗаполнения") Тогда
		СписокСохранения.Удалить("ДанныеВариантовАвтоЗаполнения");
	КонецЕсли;
	
	// Титульный лист.
	ДанныеТит = СписокСохранения.ПоказателиОтчета[ПрефиксТД + "Титульный"];
	Для Каждого Показатель Из ДанныеТит Цикл
		ИмяПоказателя = Показатель.Ключ;
		Если ИмяПоказателя = "ИНН1_1" Тогда
			ДанныеТит.Вставить("ИНН", "");
			Для Ном = 1 По 12 Цикл
				ДанныеТит.ИНН = ДанныеТит.ИНН + СокрЛП(ДанныеТит["ИНН1_" + Ном]);
				ДанныеТит.Удалить("ИНН1_" + Ном);
			КонецЦикла;
			Если Лев(ДанныеТит.ИНН, 2) = "00" Тогда
				ДанныеТит.ИНН = Сред(ДанныеТит.ИНН, 3);
			КонецЕсли;
			ДанныеТит.ИНН = СтрЗаменить(ДанныеТит.ИНН, "-", "");
		ИначеЕсли ИмяПоказателя = "КПП1_1" Тогда
			ДанныеТит.Вставить("КПП", "");
			Для Ном = 1 По 9 Цикл
				ДанныеТит.КПП = ДанныеТит.КПП + СокрЛП(ДанныеТит["КПП1_" + Ном]);
				ДанныеТит.Удалить("КПП1_" + Ном);
			КонецЦикла;
			ДанныеТит.КПП = СтрЗаменить(ДанныеТит.КПП, "-", "");
		ИначеЕсли ИмяПоказателя = "НалоговыйОрган1" Тогда
			ДанныеТит.Вставить("НалоговыйОрган", "");
			Для Ном = 1 По 4 Цикл
				ДанныеТит.НалоговыйОрган = ДанныеТит.НалоговыйОрган + СокрЛП(ДанныеТит["НалоговыйОрган" + Ном]);
				ДанныеТит.Удалить("НалоговыйОрган" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "НомерКорректировки1" Тогда
			ДанныеТит.Вставить("НомерКорректировки", "");
			Для Ном = 1 По 3 Цикл
				ДанныеТит.НомерКорректировки = ДанныеТит.НомерКорректировки
				+ СтрЗаменить(СокрЛП(ДанныеТит["НомерКорректировки" + Ном]), "-", "");
				ДанныеТит.Удалить("НомерКорректировки" + Ном);
				Если НЕ ЗначениеЗаполнено(ДанныеТит.НомерКорректировки) Тогда
					ДанныеТит.НомерКорректировки = "0";
				КонецЕсли;
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "Период1" Тогда
			ДанныеТит.Вставить("Период", "");
			Для Ном = 1 По 2 Цикл
				ДанныеТит.Период = ДанныеТит.Период + СокрЛП(ДанныеТит["Период" + Ном]);
				ДанныеТит.Удалить("Период" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ОтчетГод1" Тогда
			ДанныеТит.Вставить("ОтчетГод", "");
			Для Ном = 1 По 4 Цикл
				ДанныеТит.ОтчетГод = ДанныеТит.ОтчетГод + СокрЛП(ДанныеТит["ОтчетГод" + Ном]);
				ДанныеТит.Удалить("ОтчетГод" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "ПоМесту1" Тогда
			ДанныеТит.Вставить("ПоМесту", "");
			Для Ном = 1 По 3 Цикл
				ДанныеТит.ПоМесту = ДанныеТит.ПоМесту + СокрЛП(ДанныеТит["ПоМесту" + Ном]);
				ДанныеТит.Удалить("ПоМесту" + Ном);
			КонецЦикла;
		ИначеЕсли ИмяПоказателя = "Прил1" Тогда
			ДанныеТит.Вставить("Прил", "");
			Для Ном = 1 По 3 Цикл
				ДанныеТит.Прил = ДанныеТит.Прил + СокрЛП(ДанныеТит["Прил" + Ном]);
				ДанныеТит.Удалить("Прил" + Ном);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	ДанныеТит.Вставить("ДатаПодписи", ЭтаФорма.ДатаПодписи);
	
	// Сохранение с последующим восстановлением номеров строк многоуровнего раздела.
	// (На случай выгрузки отчета, сохраненного в 2.0, без сохранения в 3.0.)
	СохрНомераСтрокМногоуровнегоРаздела = СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела;
	
	ИнициализироватьМногоуровневыеРазделы();
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = СохрНомераСтрокМногоуровнегоРаздела;
	
	// Раздел 1.
	ИмяРаздела = "Раздел1";
	ИмяГруппы1 = СтруктураРеквизитовФормы.мИдГруппы1М1;
	ИмяГруппы2 = СтруктураРеквизитовФормы.мИдГруппы1М2;
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	// Немногострочные данные.
	Для каждого Пок Из СтарДанные Цикл
		Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы1) ИЛИ СтрНачинаетсяС(Пок.Ключ, ИмяГруппы2) Тогда
			Продолжить;
		КонецЕсли;
		ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
	КонецЦикла;
	// Многострочные данные 060-073.
	ИмяГруппы = ИмяГруппы1;
	СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
	ИменаГраф = СтруктураМнЧ.ИменаГраф;
	НомСтр = 1;
	_НомСтр = "_1";
	Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
		Если НомСтр = 1 Тогда
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
		Иначе
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
		КонецЕсли;
		СтрокаМнЧ.Данные = Новый Структура;
		СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
		Для каждого ИмяГрафы Из ИменаГраф Цикл
			СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
		КонецЦикла;
		НомСтр = НомСтр + 1;
		_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
	КонецЦикла;
	// Многострочные данные 080-093.
	ИмяГруппы = ИмяГруппы2;
	СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
	ИменаГраф = СтруктураМнЧ.ИменаГраф;
	НомСтр = 1;
	_НомСтр = "_1";
	Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
		Если НомСтр = 1 Тогда
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
		Иначе
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
		КонецЕсли;
		СтрокаМнЧ.Данные = Новый Структура;
		СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
		Для каждого ИмяГрафы Из ИменаГраф Цикл
			СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
		КонецЦикла;
		НомСтр = НомСтр + 1;
		_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
	КонецЦикла;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Приложение 1 к разделу 1.
	ИмяРаздела = "Раздел1Прил1";
	ИмяГруппы1    = СтруктураРеквизитовФормы.мИдГруппы11131М1;
	СтруктураМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы1];
	ИменаГраф1    = СтруктураМнЧ1.ИменаГраф;
	ИмяГруппы2    = СтруктураРеквизитовФормы.мИдГруппы11132М1;
	СтруктураМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы2];
	ИменаГраф2    = СтруктураМнЧ2.ИменаГраф;
	ИмяГруппы3    = СтруктураРеквизитовФормы.мИдГруппы1114М1;
	СтруктураМнЧ3 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы3];
	ИменаГраф3    = СтруктураМнЧ3.ИменаГраф;
	СтарТаблица = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
		СтарСтраница = СтарТаблица[Инд];
		СтарДанные = СтарСтраница.Данные;
		Если Инд = 0 Тогда
			СтрокаПриложения1КРазделу1 = ДеревоРаздела.Строки[0];
			СтрокаПодраздела11_12 = СтрокаПриложения1КРазделу1.Строки[0].Строки[0];
			СтрокаПодраздела131 = СтрокаПриложения1КРазделу1.Строки[1].Строки[0];
			СтрокаПодраздела132 = СтрокаПриложения1КРазделу1.Строки[2].Строки[0];
			СтрокаПодраздела14 = СтрокаПриложения1КРазделу1.Строки[3].Строки[0];
		Иначе
			СтрокаПриложения1КРазделу1 = ДеревоРаздела.Строки.Добавить();
			СтрокаПриложения1КРазделу1.Данные = Новый Структура;
			СтрокаПриложения1КРазделу1.ДанныеМногострочныхЧастей = Новый Структура;
			
			СтрокаПодраздела11_12 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
			СтрокаПодраздела11_12.Данные = Новый Структура;
			СтрокаПодраздела11_12.ДанныеМногострочныхЧастей = Новый Структура;
			
			СтрокаПодраздела131 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
			СтрокаПодраздела131.Данные = Новый Структура;
			ДеревоДопСтрок1 = Новый ДеревоЗначений;
			ДеревоДопСтрок1.Колонки.Добавить("Данные");
			ДеревоДопСтрок1.Колонки.Добавить("ДанныеМногострочныхЧастей");
			СтрокаПодраздела131.ДанныеМногострочныхЧастей = Новый Структура;
			СтрокаПодраздела131.ДанныеМногострочныхЧастей.Вставить(ИмяГруппы1, ДеревоДопСтрок1);
			
			СтрокаПодраздела132 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
			СтрокаПодраздела132.Данные = Новый Структура;
			ДеревоДопСтрок2 = Новый ДеревоЗначений;
			ДеревоДопСтрок2.Колонки.Добавить("Данные");
			ДеревоДопСтрок2.Колонки.Добавить("ДанныеМногострочныхЧастей");
			СтрокаПодраздела132.ДанныеМногострочныхЧастей = Новый Структура;
			СтрокаПодраздела132.ДанныеМногострочныхЧастей.Вставить(ИмяГруппы2, ДеревоДопСтрок2);
			
			СтрокаПодраздела14 = СтрокаПриложения1КРазделу1.Строки.Добавить().Строки.Добавить();
			СтрокаПодраздела14.Данные = Новый Структура;
			ДеревоДопСтрок3 = Новый ДеревоЗначений;
			ДеревоДопСтрок3.Колонки.Добавить("Данные");
			ДеревоДопСтрок3.Колонки.Добавить("ДанныеМногострочныхЧастей");
			СтрокаПодраздела14.ДанныеМногострочныхЧастей = Новый Структура;
			СтрокаПодраздела14.ДанныеМногострочныхЧастей.Вставить(ИмяГруппы3, ДеревоДопСтрок3);
		КонецЕсли;
		// Немногострочные данные приложения 1 к разделу 1(единственный показатель).
		СтрокаПриложения1КРазделу1.Данные.Вставить("П000110000101", СтарДанные["П000110000101"]);
		// Немногострочные данные подразделов 1.1, 1.2.
		Для каждого Пок Из СтарДанные Цикл
			Если СтрНачинаетсяС(Пок.Ключ, "П01111") ИЛИ СтрНачинаетсяС(Пок.Ключ, "П01112") Тогда
				СтрокаПодраздела11_12.Данные.Вставить(Пок.Ключ, Пок.Значение);
			КонецЕсли;
		КонецЦикла;
		// Многострочные данные подраздела 1.3.1.
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф1[0] + _НомСтр) Цикл
			Если Инд = 0 И НомСтр = 1 Тогда
				СтрокаМнЧ = СтрокаПодраздела131.ДанныеМногострочныхЧастей[ИмяГруппы1].Строки[0];
			Иначе
				СтрокаМнЧ = СтрокаПодраздела131.ДанныеМногострочныхЧастей[ИмяГруппы1].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф1 Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		// Многострочные данные подраздела 1.3.2.
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф2[0] + _НомСтр) Цикл
			Если Инд = 0 И НомСтр = 1 Тогда
				СтрокаМнЧ = СтрокаПодраздела132.ДанныеМногострочныхЧастей[ИмяГруппы2].Строки[0];
			Иначе
				СтрокаМнЧ = СтрокаПодраздела132.ДанныеМногострочныхЧастей[ИмяГруппы2].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф2 Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		// Многострочные данные подраздела 1.4.
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф3[0] + _НомСтр) Цикл
			Если Инд = 0 И НомСтр = 1 Тогда
				СтрокаМнЧ = СтрокаПодраздела14.ДанныеМногострочныхЧастей[ИмяГруппы3].Строки[0];
			Иначе
				СтрокаМнЧ = СтрокаПодраздела14.ДанныеМногострочныхЧастей[ИмяГруппы3].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф3 Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
	КонецЦикла;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	
	// Приложение 2 к разделу 1.
	ИмяРаздела = "Раздел1Прил2";
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	ДеревоРаздела.Строки[0].Данные = СтарДанные;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Приложение 3 к разделу 1.
	ИмяРаздела = "Раздел1Прил3";
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	ДеревоРаздела.Строки[0].Данные = СтарДанные;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Приложение 4 к разделу 1.
	ИмяРаздела = "Раздел1Прил4";
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	ДеревоРаздела.Строки[0].Данные = СтарДанные;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Приложения 5,6 к разделу 1.
	ИмяРаздела = "Раздел1Прил5_6";
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	ДеревоРаздела.Строки[0].Данные = СтарДанные;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Приложение 7 к разделу 1.
	ИмяРаздела = "Раздел1Прил7";
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	ДеревоРаздела.Строки[0].Данные = СтарДанные;
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) <> 12 Тогда
		ДеревоРаздела.Строки[0].Данные.Вставить("П000170001002", 0);
		ДеревоРаздела.Строки[0].Данные.Вставить("П000170002002", 0);
		ДеревоРаздела.Строки[0].Данные.Вставить("П000170003002", 0);
		ДеревоРаздела.Строки[0].Данные.Вставить("П000170004002", 0);
		ДеревоРаздела.Строки[0].Данные.Вставить("П000170005002", 0);
	КонецЕсли;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Приложение 8 к разделу 1.
	ИмяРаздела = "Раздел1Прил8";
	ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы18М1;
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	// Немногострочные данные.
	Для каждого Пок Из СтарДанные Цикл
		Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
			Продолжить;
		КонецЕсли;
		ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
	КонецЦикла;
	// Многострочные данные 020-060.
	СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
	ИменаГраф = СтруктураМнЧ.ИменаГраф;
	НомСтр = 1;
	_НомСтр = "_1";
	Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
		Если НомСтр = 1 Тогда
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
		Иначе
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
		КонецЕсли;
		СтрокаМнЧ.Данные = Новый Структура;
		СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
		Для каждого ИмяГрафы Из ИменаГраф Цикл
			СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
		КонецЦикла;
		НомСтр = НомСтр + 1;
		_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
	КонецЦикла;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Приложение 9 к разделу 1.
	ИмяРаздела = "Раздел1Прил9";
	ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы19М1;
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	// Немногострочные данные.
	Для каждого Пок Из СтарДанные Цикл
		Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
			Продолжить;
		КонецЕсли;
		ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
	КонецЦикла;
	// Многострочные данные 020-080.
	СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
	ИменаГраф = СтруктураМнЧ.ИменаГраф;
	НомСтр = 1;
	_НомСтр = "_1";
	Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
		Если НомСтр = 1 Тогда
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
		Иначе
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
		КонецЕсли;
		СтрокаМнЧ.Данные = Новый Структура;
		СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
		Для каждого ИмяГрафы Из ИменаГраф Цикл
			СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
		КонецЦикла;
		НомСтр = НомСтр + 1;
		_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
	КонецЦикла;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Приложение 10 к разделу 1.
	ИмяРаздела = "Раздел1Прил10";
	ИмяГруппы    = СтруктураРеквизитовФормы.мИдГруппы110М1;
	СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
	ИменаГраф    = СтруктураМнЧ.ИменаГраф;
	ИмяПодчГруппы    = СтруктураРеквизитовФормы.мИдГруппы110М2;
	СтруктураПодчМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяПодчГруппы];
	ИменаПодчГраф    = СтруктураПодчМнЧ.ИменаГраф;
	СтарТаблица = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
		СтарСтраница = СтарТаблица[Инд];
		СтарДанные = СтарСтраница.Данные;
		// Немногострочные данные.
		Если Инд = 0 Тогда
			Для каждого Пок Из СтарДанные Цикл
				Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы)
					ИЛИ СтрНачинаетсяС(Пок.Ключ, ИмяПодчГруппы) Тогда
					Продолжить;
				КонецЕсли;
				ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
			КонецЦикла;
		КонецЕсли;
		// Многострочные данные 020-100.
		Если Инд = 0 Тогда
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
		Иначе
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
		КонецЕсли;
		СтрокаМнЧ.Данные = Новый Структура;
		Для каждого ИмяГрафы Из ИменаГраф Цикл
			Если ИмяГрафы = "П00110М102001" Тогда
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы,
				СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтарДанные[ИмяГрафы], 3, "0"));
			Иначе
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы]);
			КонецЕсли;
		КонецЦикла;
		// Многострочные данные 110-140, подчиненные
		// строке многострочных данных 020-100.
		НомСтр = 1;
		_НомСтр = "_1";
		ДеревоПодчСтрок = Новый ДеревоЗначений;
		ДеревоПодчСтрок.Колонки.Добавить("Данные");
		ДеревоПодчСтрок.Колонки.Добавить("ДанныеМногострочныхЧастей");
		СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
		СтрокаМнЧ.ДанныеМногострочныхЧастей.Вставить(ИмяПодчГруппы, ДеревоПодчСтрок);
		Пока СтарДанные.Свойство(ИменаПодчГраф[0] + _НомСтр) Цикл
			СтрокаПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяПодчГруппы].Строки.Добавить();
			СтрокаПодчМнЧ.Данные = Новый Структура;
			СтрокаПодчМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяПодчГрафы Из ИменаПодчГраф Цикл
				Если ИмяПодчГрафы = "П00110М211001" Тогда
					СтрокаПодчМнЧ.Данные.Вставить(ИмяПодчГрафы,
					СтроковыеФункцииКлиентСервер.ДополнитьСтроку(СтарДанные[ИмяПодчГрафы + _НомСтр], 3, "0"));
				Иначе
					СтрокаПодчМнЧ.Данные.Вставить(ИмяПодчГрафы, СтарДанные[ИмяПодчГрафы + _НомСтр]);
				КонецЕсли;
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
	КонецЦикла;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	
	// Раздел 2.
	ИмяРаздела = "Раздел2";
	ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы21М1;
	СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	// Немногострочные данные.
	Для каждого Пок Из СтарДанные Цикл
		Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
			Продолжить;
		КонецЕсли;
		ДеревоРаздела.Строки[0].Данные.Вставить(Пок.Ключ, Пок.Значение);
	КонецЦикла;
	// Многострочные данные 010-090.
	СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
	ИменаГраф = СтруктураМнЧ.ИменаГраф;
	НомСтр = 1;
	_НомСтр = "_1";
	Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
		Если НомСтр = 1 Тогда
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
		Иначе
			СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
		КонецЕсли;
		СтрокаМнЧ.Данные = Новый Структура;
		СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
		Для каждого ИмяГрафы Из ИменаГраф Цикл
			СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
		КонецЦикла;
		НомСтр = НомСтр + 1;
		_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
	КонецЦикла;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
	
	// Раздел 3.
	ИмяРаздела = "Раздел3";
	ИмяГруппы1    = СтруктураРеквизитовФормы.мИдГруппы321М1;
	СтруктураМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы1];
	ИменаГраф1    = СтруктураМнЧ1.ИменаГраф;
	ИмяГруппы2    = СтруктураРеквизитовФормы.мИдГруппы322М1;
	СтруктураМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы2];
	ИменаГраф2    = СтруктураМнЧ2.ИменаГраф;
	СтарТаблица = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
		СтарСтраница = СтарТаблица[Инд];
		СтарДанные = СтарСтраница.Данные;
		Если Инд > 0 Тогда
			ДеревоРаздела.Строки.Добавить();
			ДеревоРаздела.Строки[Инд].Данные = Новый Структура;
			ДеревоДопСтрок1 = Новый ДеревоЗначений;
			ДеревоДопСтрок1.Колонки.Добавить("Данные");
			ДеревоДопСтрок1.Колонки.Добавить("ДанныеМногострочныхЧастей");
			ДеревоДопСтрок2 = Новый ДеревоЗначений;
			ДеревоДопСтрок2.Колонки.Добавить("Данные");
			ДеревоДопСтрок2.Колонки.Добавить("ДанныеМногострочныхЧастей");
			ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей = Новый Структура;
			ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей.Вставить(ИмяГруппы1, ДеревоДопСтрок1);
			ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей.Вставить(ИмяГруппы2, ДеревоДопСтрок2);
		КонецЕсли;
		// Немногострочные данные.
		Для каждого Пок Из СтарДанные Цикл
			Если Пок.Ключ = "П000030002001" ИЛИ Пок.Ключ = "П000030003001" ИЛИ Пок.Ключ = "П000030005001"
				ИЛИ СтрНачинаетсяС(Пок.Ключ, ИмяГруппы1) ИЛИ СтрНачинаетсяС(Пок.Ключ, ИмяГруппы2) Тогда
				Продолжить;
			КонецЕсли;
			ДеревоРаздела.Строки[Инд].Данные.Вставить(Пок.Ключ, Пок.Значение);
		КонецЦикла;
		// Многострочные данные 190-240.
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф1[0] + _НомСтр) Цикл
			Если Инд = 0 И НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы1].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы1].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф1 Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		// Многострочные данные 260-290.
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф2[0] + _НомСтр) Цикл
			Если Инд = 0 И НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы2].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы2].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф2 Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
	КонецЦикла;
	ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
	
	СписокСохранения.Вставить("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов);
	
	СписокСохранения.Удалить("ДанныеМногострочныхРазделов");
	СписокСохранения.Удалить("ДанныеМногостраничныхРазделов");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаСобытийВТабличномДокументе

&НаКлиенте
Процедура ТабличныйДокументВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Если СтрЧислоВхождений(Область.Имя, "ДобавитьСтроку") = 1 И Область.Текст <> "" Тогда
		ДобавитьСтроку("");
	ИначеЕсли СтрЧислоВхождений(Область.Имя, "УдалитьСтроку") = 1 И Область.Текст <> "" Тогда
		УдалитьСтроку("");
	ИначеЕсли СтрЧислоВхождений(Область.Имя, "ДобавитьСтраницу") > 0 И Область.Текст <> "" Тогда
		ДобавитьСтраницу("");
	ИначеЕсли СтрЧислоВхождений(Область.Имя, "УдалитьСтраницу") > 0 И Область.Текст <> "" Тогда
		УдалитьСтраницу("");
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "ПечататьСтраницуРаздела3") Тогда
		Печать("ПоказатьБланкСтраницыРаздела3");
	ИначеЕсли Область.Имя = "СобратьДанные" Тогда
		СобратьДанные();
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьКлиент.ВыбраннаяОбластьРегламентированногоОтчетаНеВерна(
		ЭтаФорма, Область, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.Имя = "НалоговыйОрган" Тогда
		
		СтандартнаяОбработка = Ложь;
		ОбработкаВыбораИФНС();
		
	ИначеЕсли Область.Имя = "КодСтраныГражданства"
		ИЛИ СтрНачинаетсяС(Область.Имя, "П00019М107001")
		ИЛИ Область.Имя = "П000310012001" Тогда
		
		СтандартнаяОбработка = Ложь;
		ФормаВыбора = ПолучитьФорму(
			"Справочник.СтраныМира.ФормаВыбора", Новый Структура("РежимВыбора", Истина), ЭтаФорма);
		ФормаВыбора.Заголовок = "Выбор кода страны";
		ДополнительныеПараметры = Новый Структура("Область", Область);
		ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьФормуВыбораСтраныЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ФормаВыбора.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
		ФормаВыбора.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ФормаВыбора.Открыть();
		
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "П00019М107002") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Область.Значение = ?(ЗначениеЗаполнено(Область.Значение), "", "V");
		
		УстановитьДоступностьОбластей(ЭтаФорма, "Раздел1Прил9");
		
		Модифицированность = Истина;
		
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "П00021М106001") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СписокГодов = Новый СписокЗначений;
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ПервоеЧисло", Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета));
		СтруктураПараметров.Вставить("ПоследнееЧисло", 1900);
		СтруктураПараметров.Вставить("ТипСтрока", Истина);
		
		СписокГодов.ЗагрузитьЗначения(МассивЧиселЗаданныйИнтервалом(СтруктураПараметров));
		
		СписокГодов.Вставить(0, "", "Пустое значение");
		
		Оп = Новый ОписаниеОповещения("ВыбратьЧислоИзСпискаЗавершение", ЭтотОбъект, Область);
		
		Элементы.ТабличныйДокумент.Доступность = Ложь;
		
		ПоказатьВыборИзСписка(Оп, СписокГодов, Элементы.ТабличныйДокумент.ТекущаяОбласть,
		СписокГодов.НайтиПоЗначению(СокрЛП(Область.Значение)));
		
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "П00321М119001")
		ИЛИ СтрНачинаетсяС(Область.Имя, "П00322М126001") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПоследнееЧисло = Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		ПервоеЧисло = ПоследнееЧисло - 2;
		
		СписокМесяцев = Новый СписокЗначений;
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ПервоеЧисло", ПервоеЧисло);
		СтруктураПараметров.Вставить("ПоследнееЧисло", ПоследнееЧисло);
		СтруктураПараметров.Вставить("ДлинаСЛидирующимиНулями", 2);
		
		СписокМесяцев.ЗагрузитьЗначения(МассивЧиселЗаданныйИнтервалом(СтруктураПараметров));
		
		Для каждого Эл Из СписокМесяцев Цикл
			Если Эл.Значение = "01" Тогда
				Эл.Представление = НСтр("ru='01 - январь'");
			ИначеЕсли Эл.Значение = "02" Тогда
				Эл.Представление = НСтр("ru='02 - февраль'");
			ИначеЕсли Эл.Значение = "03" Тогда
				Эл.Представление = НСтр("ru='03 - март'");
			ИначеЕсли Эл.Значение = "04" Тогда
				Эл.Представление = НСтр("ru='04 - апрель'");
			ИначеЕсли Эл.Значение = "05" Тогда
				Эл.Представление = НСтр("ru='05 - май'");
			ИначеЕсли Эл.Значение = "06" Тогда
				Эл.Представление = НСтр("ru='06 - июнь'");
			ИначеЕсли Эл.Значение = "07" Тогда
				Эл.Представление = НСтр("ru='07 - июль'");
			ИначеЕсли Эл.Значение = "08" Тогда
				Эл.Представление = НСтр("ru='08 - август'");
			ИначеЕсли Эл.Значение = "09" Тогда
				Эл.Представление = НСтр("ru='09 - сентябрь'");
			ИначеЕсли Эл.Значение = "10" Тогда
				Эл.Представление = НСтр("ru='10 - октябрь'");
			ИначеЕсли Эл.Значение = "11" Тогда
				Эл.Представление = НСтр("ru='11 - ноябрь'");
			ИначеЕсли Эл.Значение = "12" Тогда
				Эл.Представление = НСтр("ru='12 - декабрь'");
			КонецЕсли;
		КонецЦикла;
		
		СписокМесяцев.Вставить(0, "", "Пустое значение");
		
		Оп = Новый ОписаниеОповещения("ВыбратьЧислоИзСпискаЗавершение", ЭтотОбъект, Область);
		
		Элементы.ТабличныйДокумент.Доступность = Ложь;
		
		ПоказатьВыборИзСписка(Оп, СписокМесяцев, Элементы.ТабличныйДокумент.ТекущаяОбласть,
		СписокМесяцев.НайтиПоЗначению(СокрЛП(Область.Значение)));
		
	ИначеЕсли Лев(Область.Имя, 5) = "Адрес" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		РоссийскийАдрес = Новый Соответствие;
		
		РоссийскийАдрес.Вставить("Индекс",	        ТабличныйДокумент.Области.АдресИндекс.Значение);
		РоссийскийАдрес.Вставить("Регион",          ТабличныйДокумент.Области.АдресКодРегиона.Значение);
		РоссийскийАдрес.Вставить("КодРегиона",      ТабличныйДокумент.Области.АдресКодРегиона.Значение);
		РоссийскийАдрес.Вставить("Район",           ТабличныйДокумент.Области.АдресРайон.Значение);
		РоссийскийАдрес.Вставить("Город",           ТабличныйДокумент.Области.АдресГород.Значение);
		РоссийскийАдрес.Вставить("НаселенныйПункт", ТабличныйДокумент.Области.АдресНаселенныйПункт.Значение);
		РоссийскийАдрес.Вставить("Улица",           ТабличныйДокумент.Области.АдресУлица.Значение);
		РоссийскийАдрес.Вставить("Дом",             ТабличныйДокумент.Области.АдресНомерДома.Значение);
		РоссийскийАдрес.Вставить("Корпус",          ТабличныйДокумент.Области.АдресНомерКорпуса.Значение);
		РоссийскийАдрес.Вставить("Квартира",        ТабличныйДокумент.Области.АдресНомерКвартиры.Значение);
		
		Если Регионы.Количество() = 0 Тогда
			ЗаполнитьРегионыНаСервере();
		КонецЕсли;
		
		Регион = Регионы.НайтиСтроки(Новый Структура("Код", СокрЛП(РоссийскийАдрес["Регион"])));
			
		Если Регион.Количество() > 0 Тогда
			
			РоссийскийАдрес["Регион"] = Регион[0].Наим;
			
		КонецЕсли;
		
		ЗначенияПолей = Новый СписокЗначений;
		
		ЗначенияПолей.Добавить(РоссийскийАдрес["Индекс"],          "Индекс");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Регион"],          "Регион");
		ЗначенияПолей.Добавить(РоссийскийАдрес["КодРегиона"],      "КодРегиона");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Район"],           "Район");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Город"],           "Город");
		ЗначенияПолей.Добавить(РоссийскийАдрес["НаселенныйПункт"], "НаселенныйПункт");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Улица"],           "Улица");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Дом"],             "Дом");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Корпус"],          "Корпус");
		ЗначенияПолей.Добавить(РоссийскийАдрес["Квартира"],        "Квартира");
		
		ПредставлениеАдреса = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеАдресаВФормате9Запятых("643," + РоссийскийАдрес["Индекс"] + ","
																												  + РоссийскийАдрес["Регион"] + ","
																												  + РоссийскийАдрес["Район"] + ","
																												  + РоссийскийАдрес["Город"] + ","
																												  + РоссийскийАдрес["НаселенныйПункт"] + ","
																												  + РоссийскийАдрес["Улица"] + ","
																												  + РоссийскийАдрес["Дом"] + ","
																												  + РоссийскийАдрес["Корпус"] + ","
																												  + РоссийскийАдрес["Квартира"]);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Заголовок",               "Ввод адреса");
		ПараметрыФормы.Вставить("ЗначенияПолей", 		   ЗначенияПолей);
		ПараметрыФормы.Вставить("Представление", 		   ПредставлениеАдреса);
		ПараметрыФормы.Вставить("ВидКонтактнойИнформации", СтруктураРеквизитовФормы.СправочникиВидыКонтактнойИнформацииФактАдресОрганизации);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("РоссийскийАдрес", РоссийскийАдрес);
		
		ТипЗначения = Тип("ОписаниеОповещения");
		ПараметрыКонструктора = Новый Массив(3);
		ПараметрыКонструктора[0] = "ОткрытьФормуКонтактнойИнформацииЗавершение";
		ПараметрыКонструктора[1] = ЭтаФорма;
		ПараметрыКонструктора[2] = ДополнительныеПараметры;
		
		Оповещение = Новый (ТипЗначения, ПараметрыКонструктора);
		
		ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент").ОткрытьФормуКонтактнойИнформации(ПараметрыФормы, , Оповещение);
		
	Иначе
		
		ПараметрВводаПоля = РегламентированнаяОтчетностьКлиентСервер.НайтиСвойстваПоказателя(ЭтаФорма, Область.Имя);
		Если ПараметрВводаПоля <> Неопределено И ПараметрВводаПоля.ТаблицаЗначений.Количество() > 0 Тогда
			КодПоказателя = ПараметрВводаПоля.Показатель;
			КопироватьДанныеФормы(ПараметрВводаПоля.ТаблицаЗначений, ТЗВыбора);
			ВвестиПоказатель(Элемент, Область, КодПоказателя, Ложь, ПараметрВводаПоля.ТекстПриВыборе, ТЗВыбора, СтандартнаяОбработка);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	ИмяРаздела = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
	
	ИмяПоказателя = Область.Имя;
	ЗначПоказателя = Область.Значение;
	
	Если ИмяПоказателя = "ДатаПодписи" Тогда
		ДатаПодписи = Область.Значение;
		ЗаполнитьСведенияОбОрганизацииНаСервере(Истина);
		Модифицированность = Истина;
	ИначеЕсли ИмяПоказателя = "НомерКорректировки" Тогда
		ОписаниеТипа = Новый ОписаниеТипов("Число");
		НомерКорректировки = ОписаниеТипа.ПривестиЗначение(Область.Значение);
		СтруктураРеквизитовФормы.ВидДокумента = ?(НомерКорректировки = 0, 0, 1);
		Область.Значение = Строка(НомерКорректировки);
		РегламентированнаяОтчетностьКлиентСервер.УстановитьЗначениеОКВЭД(ДатаПодписи,
															 СтруктураРеквизитовФормы,
															 ТабличныйДокумент.Области.ОКВЭД.Значение);
		Модифицированность = Истина;
	КонецЕсли;
	
	Если ИмяПоказателя = "П000010001001"
		ИЛИ ИмяПоказателя = "П000020001001" Тогда
		ОКТМО = СтрЗаменить(ЗначПоказателя, " ", "");
		ДлинаОКТМО = СтрДлина(ОКТМО);
		Если ДлинаОКТМО = 11 ИЛИ ДлинаОКТМО = 8 ИЛИ ДлинаОКТМО = 0 Тогда
			Область.Значение = ОКТМО;
		Иначе
			Область.Значение = "";
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр(
			"ru='Код по ОКТМО должен состоять из 8 или 11 цифр. Значение очищено.'");
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяПоказателя = "П000010002001"
		ИЛИ ИмяПоказателя = "П000010004001"
		ИЛИ СтрНачинаетсяС(ИмяПоказателя, "П00001М106001")
		ИЛИ СтрНачинаетсяС(ИмяПоказателя, "П00001М208001")
		ИЛИ ИмяПоказателя = "П000010010001"
		ИЛИ ИмяПоказателя = "П000020002001"
		ИЛИ ИмяПоказателя = "П000020004001" Тогда
		КБК = СтрЗаменить(ЗначПоказателя, " ", "");
		ДлинаКБК = СтрДлина(КБК);
		Если ДлинаКБК = 20 ИЛИ ДлинаКБК = 0 Тогда
			Область.Значение = КБК;
		Иначе
			Область.Значение = "";
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр(
			"ru='Код бюджетной классификации должен состоять из 20 цифр. Значение очищено.'");
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяПоказателя = "П000110000101" Тогда
		КодТарифа = СтрЗаменить(ЗначПоказателя, " ", "");
		ДлинаКодТарифа = СтрДлина(КодТарифа);
		Если ДлинаКодТарифа = 2 ИЛИ ДлинаКодТарифа = 0 Тогда
			Область.Значение = КодТарифа;
		Иначе
			Область.Значение = "";
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр(
			"ru='Код тарифа должен состоять из 2 цифр. Значение очищено.'");
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
	
	Если СтрНачинаетсяС(ИмяПоказателя, "П00018М103001") Тогда
		ВидДеятПатент = СтрЗаменить(ЗначПоказателя, " ", "");
		ДлинаВидДеятПатент = СтрДлина(ВидДеятПатент);
		Если ДлинаВидДеятПатент = 6 ИЛИ ДлинаВидДеятПатент = 0 Тогда
			Область.Значение = ВидДеятПатент;
		Иначе
			Область.Значение = "";
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр(
			"ru=' Код вида предпринимательской деятельности, установленный законодательством субъекта Российской Федерации, указанный в заявлении на получение патента должен состоять из 6 цифр. Значение очищено.'");
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
	
	Если СтрНачинаетсяС(ИмяПоказателя, "П00019М105001")
		ИЛИ СтрНачинаетсяС(ИмяПоказателя, "П00021М104001")
		ИЛИ ИмяПоказателя = "П000310006001" Тогда
		ИННФЛ = СтрЗаменить(ЗначПоказателя, " ", "");
		ДлинаИННФЛ = СтрДлина(ИННФЛ);
		Если ДлинаИННФЛ = 12 ИЛИ ДлинаИННФЛ = 0 Тогда
			Область.Значение = ИННФЛ;
		Иначе
			Область.Значение = "";
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр(
			"ru='ИНН физического лица должен состоять из 12 цифр. Значение очищено.'");
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
	
	Если СтрНачинаетсяС(ИмяПоказателя, "П00019М106001")
		ИЛИ СтрНачинаетсяС(ИмяПоказателя, "П00021М105001")
		ИЛИ ИмяПоказателя = "П000310007001" Тогда
		СНИЛС = СокрЛП(ЗначПоказателя);
		ДлинаСНИЛС = СтрДлина(СНИЛС);
		Символ4 = "";
		Символ8 = "";
		Символ12 = "";
		Если ДлинаСНИЛС = 14 Тогда
			Символ4 = Сред(СНИЛС, 4, 1);
			Символ8 = Сред(СНИЛС, 8, 1);
			Символ12 = Сред(СНИЛС, 12, 1);
		КонецЕсли;
		Если ДлинаСНИЛС = 0 ИЛИ (ДлинаСНИЛС = 14
			И Символ4 = "-" И Символ8 = "-" И (Символ12 = " " ИЛИ Символ12 = "-")) Тогда
			Область.Значение = СНИЛС;
		Иначе
			Область.Значение = "";
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр(
			"ru='СНИЛС должен состоять из 14 символов и соответствовать одному из шаблонов: ""ХХХ-ХХХ-ХХХ-ХХ"", ""ХХХ-ХХХ-ХХХ ХХ"" (X - любая цифра). Значение очищено.'");
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяПоказателя = "П000310014001" Тогда
		КодВидаДокумента = СтрЗаменить(ЗначПоказателя, " ", "");
		ДлинаКодВидаДокумента = СтрДлина(КодВидаДокумента);
		Если ДлинаКодВидаДокумента = 2 ИЛИ ДлинаКодВидаДокумента = 0 Тогда
			Область.Значение = КодВидаДокумента;
		Иначе
			Область.Значение = "";
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр(
			"ru='Код вида документа должен состоять из 2 цифр. Значение очищено.'");
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяПоказателя = "П000310015001"
		ИЛИ ИмяПоказателя = "П000310015002" Тогда
		ВведенноеЗначение = СокрЛП(ЗначПоказателя);
		ВведенноеЗначение = СтрЗаменить(ВведенноеЗначение, "№", "");
		
		СерияДокумента = СокрЛП(ТабличныйДокумент.Области.Найти("П000310015001").Значение);
		СерияДокумента = СтрЗаменить(СерияДокумента, "№", "");
		
		НомерДокумента = СокрЛП(ТабличныйДокумент.Области.Найти("П000310015002").Значение);
		НомерДокумента = СтрЗаменить(НомерДокумента, "№", "");
		
		Если СтрДлина(СерияДокумента) + СтрДлина(НомерДокумента) <= 24 Тогда
			Область.Значение = ВведенноеЗначение;
		Иначе
			Область.Значение = "";
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр(
			"ru='Общее количество символов в серии и номере документа не должно превышать 24. Значение очищено.'");
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяПоказателя = "СерияДокумента"
		ИЛИ ИмяПоказателя = "НомерДокумента" Тогда
		ВведенноеЗначение = СтрЗаменить(ЗначПоказателя, " ", "");
		ВведенноеЗначение = СтрЗаменить(ВведенноеЗначение, "№", "");
		
		СерияДокумента = СтрЗаменить(ТабличныйДокумент.Области.Найти("СерияДокумента").Значение, " ", "");
		СерияДокумента = СтрЗаменить(СерияДокумента, "№", "");
		
		НомерДокумента = СтрЗаменить(ТабличныйДокумент.Области.Найти("НомерДокумента").Значение, " ", "");
		НомерДокумента = СтрЗаменить(НомерДокумента, "№", "");
		
		Если СтрДлина(СерияДокумента) + СтрДлина(НомерДокумента) <= 24 Тогда
			Область.Значение = ВведенноеЗначение;
		Иначе
			Область.Значение = "";
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр(
			"ru='Общее количество символов в серии и номере документа не должно превышать 24. Значение очищено.'");
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
	
	Если СтрНачинаетсяС(ИмяПоказателя, "П000010011")
		ИЛИ СтрНачинаетсяС(ИмяПоказателя, "П000010012") Тогда
		ИмяПарногоПоказателя = ?(Лев(ИмяПоказателя, 10)
		= "П000010011", "П000010012", "П000010011") + Сред(ИмяПоказателя, 11);
		ОблПарногоПоказателя = ТабличныйДокумент.Области.Найти(ИмяПарногоПоказателя);
		Если ОблПарногоПоказателя <> Неопределено Тогда
			ЗначПарногоПоказателя = ОблПарногоПоказателя.Значение;
			Если ЗначениеЗаполнено(ЗначПоказателя)
				И ЗначениеЗаполнено(ЗначПарногоПоказателя) Тогда
				ОблПарногоПоказателя.Очистить();
				Стр1 = Сред(ИмяПоказателя, 9, 3);
				Стр2 = Сред(ИмяПарногоПоказателя, 9, 3);
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Не допускается одновременное заполнение строки %1 и строки %2. Значение в строке %2 очищено.'"),
				Стр1, Стр2);
				Сообщение.Сообщить();
				РасчетНаКлиенте(ИмяРаздела, ИмяПарногоПоказателя);
				Мофицированность = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если СтрНачинаетсяС(ИмяПоказателя, "П00110М106")
		ИЛИ СтрНачинаетсяС(ИмяПоказателя, "П00110М107")
		ИЛИ СтрНачинаетсяС(ИмяПоказателя, "П00110М108")
		ИЛИ СтрНачинаетсяС(ИмяПоказателя, "П00110М109") Тогда
		ПодстрокаИзИмениПоказателя = Лев(ИмяПоказателя, 10);
		Если ПодстрокаИзИмениПоказателя = "П00110М106"
			ИЛИ ПодстрокаИзИмениПоказателя = "П00110М107" Тогда
			ИмяПарногоПоказателя1 = "П00110М108" + Сред(ИмяПоказателя, 11);
			ИмяПарногоПоказателя2 = "П00110М109" + Сред(ИмяПоказателя, 11);
		Иначе
			ИмяПарногоПоказателя1 = "П00110М106" + Сред(ИмяПоказателя, 11);
			ИмяПарногоПоказателя2 = "П00110М107" + Сред(ИмяПоказателя, 11);
		КонецЕсли;
		ОблПарногоПоказателя1 = ТабличныйДокумент.Области.Найти(ИмяПарногоПоказателя1);
		ОблПарногоПоказателя2 = ТабличныйДокумент.Области.Найти(ИмяПарногоПоказателя2);
		Если ОблПарногоПоказателя1 <> Неопределено
			И ОблПарногоПоказателя2 <> Неопределено Тогда
			ЗначПарногоПоказателя1 = ОблПарногоПоказателя1.Значение;
			ЗначПарногоПоказателя2 = ОблПарногоПоказателя2.Значение;
			Если ЗначениеЗаполнено(ЗначПоказателя)
				И (ЗначениеЗаполнено(ЗначПарногоПоказателя1)
				ИЛИ ЗначениеЗаполнено(ЗначПарногоПоказателя2)) Тогда
				ОблПарногоПоказателя1.Очистить();
				ОблПарногоПоказателя2.Очистить();
				Стр1 = Сред(ИмяПарногоПоказателя1, 9, 3);
				Стр2 = Сред(ИмяПарногоПоказателя2, 9, 3);
				Если ЗначениеЗаполнено(ЗначПарногоПоказателя1)
					И ЗначениеЗаполнено(ЗначПарногоПоказателя2) Тогда
					ДополнительныйТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Значения в строках %1 и %2 очищены'"), Стр1, Стр2);
				Иначе
					ДополнительныйТекст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Значение в строке %1 очищено'"),
					?(ЗначениеЗаполнено(ЗначПарногоПоказателя1), Стр1, Стр2));
				КонецЕсли;
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Не допускается одновременное указание сведений, подтверждающих членство в студенческом отряде, и сведений, подтверждающих очную форму обучения. %1.'"),
				ДополнительныйТекст);
				Сообщение.Сообщить();
				Мофицированность = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяПоказателя = "П000030004001" Тогда
		
		ВведенХотяБыОдинНулевойСимвол = Ложь;
		СтрокаИзЦифр = "";
		ДлинаСтроки = СтрДлина(Область.Значение);
		Для ПозицияСимвола = 1 По ДлинаСтроки Цикл
			ТекущийСимвол = Сред(Область.Значение, ПозицияСимвола, 1);
			ВведенХотяБыОдинНулевойСимвол = (ВведенХотяБыОдинНулевойСимвол ИЛИ ТекущийСимвол = "0");
			Если СтрНайти("0123456789", ТекущийСимвол) > 0 Тогда
				СтрокаИзЦифр = СтрокаИзЦифр + ТекущийСимвол;
				СтрокаИзЦифр = ?(СтрокаИзЦифр = "0", "", СтрокаИзЦифр);
			КонецЕсли;
		КонецЦикла;
		Если СтрокаИзЦифр = "" И ВведенХотяБыОдинНулевойСимвол Тогда
			СтрокаИзЦифр = "0";
		КонецЕсли;
		
		ПредставлениеСтраницыРаздела3НайденнойПоЗначениюВСтроке040
		= ПредставлениеСтраницыРаздела3НайденнойПоЗначениюВСтроке040(СтрокаИзЦифр);
		
		Если ЗначениеЗаполнено(ПредставлениеСтраницыРаздела3НайденнойПоЗначениюВСтроке040) Тогда
			Область.Очистить();
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
			"ru='Номер %1 уже используется на странице ""%2"". Значение в строке 040 очищено.'"),
			СтрокаИзЦифр, ПредставлениеСтраницыРаздела3НайденнойПоЗначениюВСтроке040);
			Сообщение.Сообщить();
		Иначе
			Область.Значение = СтрокаИзЦифр;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяПоказателя = "П000310008001"
		ИЛИ ИмяПоказателя = "П000310009001"
		ИЛИ ИмяПоказателя = "П000310010001"
		ИЛИ ИмяПоказателя = "П000310011001" Тогда
		
		СтруктПарам = Новый Структура;
		СтруктПарам.Вставить("Фам", ТабличныйДокумент.Область("П000310008001").Значение);
		СтруктПарам.Вставить("Имя", ТабличныйДокумент.Область("П000310009001").Значение);
		СтруктПарам.Вставить("Отч", ТабличныйДокумент.Область("П000310010001").Значение);
		СтруктПарам.Вставить("ДатаРожд", ТабличныйДокумент.Область("П000310011001").Значение);
		СтруктПарам.Вставить("НомерСтраницы",
		Элементы.РазделыОтчета.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
		
		Если Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
			Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьЭлементы()[0].КолонкаРазделыОтчета
			= ПредставлениеСтраницыРаздела3(СтруктПарам);
		Иначе
			Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчета
			= ПредставлениеСтраницыРаздела3(СтруктПарам);
		КонецЕсли;
		
	ИначеЕсли ИмяПоказателя = "П000110000101" Тогда
		
		СтруктПарам = Новый Структура;
		СтруктПарам.Вставить("КодТарифа", ТабличныйДокумент.Область("П000110000101").Значение);
		СтруктПарам.Вставить("НомерСтраницы",
		Элементы.РазделыОтчета.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
		
		Если Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
			Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьЭлементы()[0].КолонкаРазделыОтчета
			= ПредставлениеСтраницыПриложения1КРазделу1(СтруктПарам);
		Иначе
			Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчета
			= ПредставлениеСтраницыПриложения1КРазделу1(СтруктПарам);
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрВводаПоля = РегламентированнаяОтчетностьКлиентСервер.НайтиСвойстваПоказателя(ЭтаФорма, ИмяПоказателя);
	
	Если ПараметрВводаПоля <> Неопределено И ПараметрВводаПоля.ТаблицаЗначений.Количество() > 0 Тогда
		
		КопироватьДанныеФормы(ПараметрВводаПоля.ТаблицаЗначений, ТЗВыбора);
		ЭлТЗВыбора = ТЗВыбора.НайтиСтроки(Новый Структура("Код", ЗначПоказателя));
		
	КонецЕсли;
	
	ИмяОбласти = Область.Имя;
	Если ИмяРаздела <> "Титульный" Тогда
		ПозицияПодстроки = СтрНайти(ИмяОбласти, "_");
		Если ПозицияПодстроки > 0 Тогда
			ИмяОбласти = Лев(ИмяОбласти, ПозицияПодстроки - 1);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыВводаПоля = СвойстваПоказателей.НайтиСтроки(Новый Структура("Показатель", ИмяОбласти));
	Если ПараметрыВводаПоля.Количество() > 0 Тогда
		ПараметрВводаПоля = ПараметрыВводаПоля[0];
		Если СтрДлина(СокрЛП(ЗначПоказателя)) <> 0 И ПараметрВводаПоля.Длина <> 0 И СтрДлина(СокрЛП(ЗначПоказателя)) <> ПараметрВводаПоля.Длина Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru='Длина значения показателя должна быть равна " + ПараметрВводаПоля.Длина + "!'");
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	Если ИмяРаздела = "Титульный" Тогда
		ЗаполнитьПериодОтчета(ЭтаФорма);
	КонецЕсли;
	
	УстановитьДоступностьОбластей(ЭтаФорма, ИмяРаздела);
	
	Если СтруктураЗависимыхЯчеекДляАвторасчета.Свойство(ИмяРаздела) Тогда
		Если СтрНачинаетсяС(Область.Имя, "П00019") Тогда
			РасчетНаСервере(ИмяРаздела, Область.Имя);
		Иначе
			РасчетНаКлиенте(ИмяРаздела, Область.Имя);
		КонецЕсли;
	КонецЕсли;
	
	Если СтрНачинаетсяС(Область.Имя, "П00019М108004") Тогда
		СтруктураРеквизитовФормы.Вставить("БезПереходаВТабличномДокументе");
		Элемент.ТекущаяОбласть = ТабличныйДокумент.Область(СтрЗаменить(Область.Имя, "П00019М108004", "П00019М108005"));
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "П00019М108005") Тогда
		ИмяОбл = "П00019М102001" + СтрокаСИндексомПоказателя(ИндексПоказателя(Область.Имя) + 1);
		Обл = ТабличныйДокумент.Области.Найти(ИмяОбл);
		Если Обл <> Неопределено Тогда
			СтруктураРеквизитовФормы.Вставить("БезПереходаВТабличномДокументе");
			Элемент.ТекущаяОбласть = Обл;
		КонецЕсли;
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "П00019М102001") Тогда
		ТабличныйДокумент.НаправлениеПерехода = ТипНаправленияПереходаТабличногоДокумента.ПоСтрокам;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриАктивизацииОбласти(Элемент)
	
	Элементы.ТабличныйДокументКонтекстноеМенюУдалитьСтроку.Доступность = Ложь;
	Элементы.ТабличныйДокументКонтекстноеМенюДобавитьСтроку.Доступность = Ложь;
	
	ИмяГруппы = МногострочнаяЧастьТекущейОбласти(ЭтаФорма, Элемент.ТекущаяОбласть.Имя);
	
	Если ЗначениеЗаполнено(ИмяГруппы) Тогда
		
		Элементы.ТабличныйДокументКонтекстноеМенюДобавитьСтроку.Доступность = Истина;
		
		ИмяПервойГрафы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"][0];
		ИсхКолСтрок = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИсхКолСтрок"];
		Координаты = СтрокаСКоординатамиПоказателя(Элемент.ТекущаяОбласть.Имя);
		
		ТестИмя = ИмяПервойГрафы + Координаты + СтрокаСИндексомПоказателя(ИсхКолСтрок + 1);
		Если СтрЧислоВхождений(Элемент.ТекущаяОбласть.Имя, "ДобавитьСтроку") = 0
			И ТабличныйДокумент.Области.Найти(ТестИмя) <> Неопределено Тогда
			Элементы.ТабличныйДокументКонтекстноеМенюУдалитьСтроку.Доступность = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	ДопТекст = ДополнительныйТекстПриДобавленииУдаленииСтрок(ИмяГруппы);
	Если ДопТекст <> Неопределено Тогда
		Элементы.ТабличныйДокументКонтекстноеМенюДобавитьСтроку.Заголовок
		= ДопТекст.ЗаголовокКонтекстногоМенюДобавитьСтроку;
		Элементы.ТабличныйДокументКонтекстноеМенюУдалитьСтроку.Заголовок
		= ДопТекст.ЗаголовокКонтекстногоМенюУдалитьСтроку;
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.Свойство("БезПереходаВТабличномДокументе") Тогда
		ТабличныйДокумент.НаправлениеПерехода = ТипНаправленияПереходаТабличногоДокумента.БезПерехода;
		СтруктураРеквизитовФормы.Удалить("БезПереходаВТабличномДокументе");
	Иначе
		Если ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы18М1
			ИЛИ ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы19М1
			ИЛИ ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы110М1
			ИЛИ ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы110М2
			ИЛИ ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы21М1 Тогда
			ТабличныйДокумент.НаправлениеПерехода = ТипНаправленияПереходаТабличногоДокумента.ПоСтрокам;
		Иначе
			ТабличныйДокумент.НаправлениеПерехода = ТипНаправленияПереходаТабличногоДокумента.ПоКолонкам;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПредставлениеСтраницыРаздела3НайденнойПоЗначениюВСтроке040(ПорядковыйНомер)
	
	Если ЗначениеЗаполнено(ПорядковыйНомер) Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел3"]);
		
		Для Инд = 0 По ДеревоДанных.Строки.Количество() - 1 Цикл
			ОбрИнд = ДеревоДанных.Строки.Количество() - 1 - Инд;
			ДанныеСтраницы = ДеревоДанных.Строки[ОбрИнд].Данные;
			Если (ОбрИнд + 1 <> СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0])
				И (ПорядковыйНомер = СокрЛП(ДанныеСтраницы["П000030004001"])) Тогда
				СтруктПарам = Новый Структура;
				СтруктПарам.Вставить("Фам", ДанныеСтраницы.П000310008001);
				СтруктПарам.Вставить("Имя", ДанныеСтраницы.П000310009001);
				СтруктПарам.Вставить("Отч", ДанныеСтраницы.П000310010001);
				СтруктПарам.Вставить("ДатаРожд", ДанныеСтраницы.П000310011001);
				СтруктПарам.Вставить("НомерСтраницы", ОбрИнд + 1);
				Возврат ПредставлениеСтраницыРаздела3(СтруктПарам);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаКлиенте
Процедура ОбработкаВыбораИФНС()
	
	КодИМНС = СокрЛП(ТабличныйДокумент.Области.НалоговыйОрган.Значение);
	КПП     = СокрЛП(ТабличныйДокумент.Области.КПП.Значение); 
	ЗначенияДляОтбора = Новый Массив;
	ЗначенияДляОтбора.Добавить(Новый Структура("КодНО, КПП", КодИМНС, КПП));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", СтруктураРеквизитовФормы.Организация);
	ПараметрыФормы.Вставить("ЗначенияДляОтбора", ЗначенияДляОтбора);
	
	ФормаВыбораНалоговогоОргана = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени(
	"ФормаВыбораНалоговогоОргана", ПараметрыФормы, ЭтаФорма);
	
	Если ФормаВыбораНалоговогоОргана.ТаблицаНО.Количество() <> 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораИФНСЗавершение", ЭтотОбъект);
		ФормаВыбораНалоговогоОргана.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
		ФормаВыбораНалоговогоОргана.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ФормаВыбораНалоговогоОргана.Открыть();
		
	ИначеЕсли НЕ ЗначениеЗаполнено(КодИМНС) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Код налогового органа необходимо задать в справочнике ""Организации"".'");
		Сообщение.Сообщить();
		Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
			УстановитьДоступностьОбластей(ЭтаФорма, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
		КонецЕсли;
		
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Для выбора инспекции, необходимо завести соответствующую запись в справочнике ""Регистрации в налоговом органе"".'");
		Сообщение.Сообщить();
		Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
			УстановитьДоступностьОбластей(ЭтаФорма, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораИФНСЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		ВыбранныйКодНО = РезультатВыбора.КодНО;
		ДлинаКодаНО = СтрДлина(ВыбранныйКодНО);
		
		Для Инд = ДлинаКодаНО + 1 По 4 Цикл
			ВыбранныйКодНО = "0" + ВыбранныйКодНО;
		КонецЦикла;
		
		ТабличныйДокумент.Области["НалоговыйОрган"].Значение = ВыбранныйКодНО;
		ТабличныйДокумент.Области["КПП"].Значение = РезультатВыбора.КПП;
		
		УстановитьКодПоОКТМОИКБКВРазделах1и2ПриАктивномТитульномЛисте_ЗаполнитьСведенияОПодписантах(
		РезультатВыбора.Ссылка);
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		УстановитьДоступностьОбластей(ЭтаФорма, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКодПоОКТМОИКБКВРазделах1и2ПриАктивномТитульномЛисте_ЗаполнитьСведенияОПодписантах(СсылкаНаРегистрациюВНО)
	
	УстановитьКодПоОКТМОИКБКВРазделах1и2ПриАктивномТитульномЛисте(СсылкаНаРегистрациюВНО);
	
	ЗаполнитьСведенияОПодписантах();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСтраныЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Область = ДополнительныеПараметры.Область;
	
	Если Результат <> Неопределено Тогда
		РеквизитыЭлемента = РеквизитыЭлементаСправочника(Результат);
		Если Область.Значение = РеквизитыЭлемента.ЦифровойКод Тогда
			Область.Очистить();
		Иначе
			Область.Значение = РеквизитыЭлемента.ЦифровойКод;
		КонецЕсли;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РеквизитыЭлементаСправочника(Результат)
	
	Возврат Новый Структура("ЦифровойКод", Результат.Код);
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуКонтактнойИнформацииЗавершение(Результат, Параметры) Экспорт
	
	ОбновитьАдресВТабличномДокументе(Результат, Параметры.РоссийскийАдрес);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЧислоИзСпискаЗавершение(ВыбЭлемент, ДополнительныйПараметр) Экспорт
	
	Если ВыбЭлемент <> Неопределено Тогда
		Если ВыбЭлемент.Значение <> ДополнительныйПараметр.Значение Тогда
			ДополнительныйПараметр.Значение = ВыбЭлемент.Значение;
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ТабличныйДокумент.Доступность = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция МассивЧиселЗаданныйИнтервалом(СтруктураПараметров)
	
	МассивЧисел = Новый Массив;
	
	Если ТипЗнч(СтруктураПараметров) = Тип("Структура") Тогда
		
		ПервоеЧисло    = Неопределено;
		ПоследнееЧисло = Неопределено;
		
		Если СтруктураПараметров.Свойство("ПервоеЧисло", ПервоеЧисло)
			И СтруктураПараметров.Свойство("ПоследнееЧисло", ПоследнееЧисло) Тогда
			
			Если ПервоеЧисло <= ПоследнееЧисло Тогда
				ПоУбыванию = Ложь;
			Иначе
				ПоУбыванию = Истина;
				ПромежуточноеЗначение = ПервоеЧисло;
				ПервоеЧисло = ПоследнееЧисло;
				ПоследнееЧисло = ПромежуточноеЗначение;
			КонецЕсли;
			
			ТипСтрока = Ложь;
			СтруктураПараметров.Свойство("ТипСтрока", ТипСтрока);
			ТипСтрока = ТипСтрока = Истина;
			
			ДлинаСЛидирующимиНулями = Неопределено;
			СтруктураПараметров.Свойство("ДлинаСЛидирующимиНулями", ДлинаСЛидирующимиНулями);
			Если ТипЗнч(ДлинаСЛидирующимиНулями) <> Тип("Число")
				ИЛИ ДлинаСЛидирующимиНулями = 0 Тогда
				ДлинаСЛидирующимиНулями = Неопределено;
			КонецЕсли;
			
			Для ТекущееЧисло = ПервоеЧисло По ПоследнееЧисло Цикл
				
				Если ДлинаСЛидирующимиНулями <> Неопределено Тогда
					СтрокаФормата = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						"ЧЦ=%1;ЧГ=;ЧВН=", ДлинаСЛидирующимиНулями);
					ТекущееЗначение = Формат(ТекущееЧисло, СтрокаФормата);
				ИначеЕсли ТипСтрока Тогда
					ТекущееЗначение = Формат(ТекущееЧисло, "ЧГ=");
				Иначе
					ТекущееЗначение = ТекущееЧисло;
				КонецЕсли;
				
				Если ПоУбыванию Тогда
					МассивЧисел.Вставить(0, ТекущееЗначение);
				Иначе
					МассивЧисел.Добавить(ТекущееЗначение);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат МассивЧисел;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьАдресВТабличномДокументе(Результат, РоссийскийАдрес)
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		// Обход ошибки платформы: в веб-клиенте, в результате выполнения процедуры "СформироватьАдрес"
		// общего модуля "РегламентированнаяОтчетностьВызовСервера", не изменяются значения ключей
		// соответствия "РоссийскийАдрес", передаваемого в качестве параметра.
		РоссийскийАдрес_ = РоссийскийАдрес;
		
		РегламентированнаяОтчетностьВызовСервера.СформироватьАдрес(Результат.КонтактнаяИнформация, РоссийскийАдрес_);
		
		Если ТабличныйДокумент.Области.Найти("АдресИндекс") <> Неопределено Тогда
			ТабличныйДокумент.Области.АдресИндекс.Значение = РоссийскийАдрес_["Индекс"];
			ТабличныйДокумент.Области.АдресКодРегиона.Значение = РоссийскийАдрес_["КодРегиона"];
			ТабличныйДокумент.Области.АдресРайон.Значение = РоссийскийАдрес_["Район"];
			ТабличныйДокумент.Области.АдресГород.Значение = РоссийскийАдрес_["Город"];
			ТабличныйДокумент.Области.АдресНаселенныйПункт.Значение = РоссийскийАдрес_["НаселенныйПункт"];
			ТабличныйДокумент.Области.АдресУлица.Значение = РоссийскийАдрес_["Улица"];
			ТабличныйДокумент.Области.АдресНомерДома.Значение = РоссийскийАдрес_["Дом"];
			ТабличныйДокумент.Области.АдресНомерКорпуса.Значение = РоссийскийАдрес_["Корпус"];
			ТабличныйДокумент.Области.АдресНомерКвартиры.Значение = РоссийскийАдрес_["Квартира"];
			Модифицированность = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРегионыНаСервере()
	
	РегламентированнаяОтчетность.ЗаполнитьРегионы(Регионы);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция МногострочнаяЧастьТекущейОбласти(Форма, Знач ИмяОбласти)
	
	Если НЕ ЗначениеЗаполнено(ИмяОбласти) Тогда
		Возврат Неопределено;
	Иначе
		НомПозПодчеркивания = Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы + 1;
		Если НЕ (СтрДлина(ИмяОбласти) > НомПозПодчеркивания
			И Сред(ИмяОбласти, НомПозПодчеркивания, 1) = "_") Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	ИмяОбласти = СтрЗаменить(ИмяОбласти, "ДобавитьСтрокуЗначок", "");
	ИмяОбласти = СтрЗаменить(ИмяОбласти, "ДобавитьСтроку", "");
	ИмяОбласти = СтрЗаменить(ИмяОбласти, "УдалитьСтроку", "");
	
	ИмяГруппы = Лев(ИмяОбласти, Форма.СтруктураРеквизитовФормы.ДлинаИмениГруппы);
	
	Для каждого ЭлемСтруктуры Из Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей Цикл
		Если ЭлемСтруктуры.Ключ = ИмяГруппы Тогда
			Возврат ИмяГруппы;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Функция ДополнительныйТекстПриДобавленииУдаленииСтрок(Знач ИмяГруппы)
	
	Если НЕ ЗначениеЗаполнено(ИмяГруппы) Тогда
		Возврат Неопределено;
	ИначеЕсли НЕ СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей.Свойство(ИмяГруппы) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Подстрока = "строку";
	ТекстВопроса = НСтр("ru='Удалить выбранную строку?'");
	
	ДопТекст = Новый Структура;
	ДопТекст.Вставить("ЗаголовокКонтекстногоМенюДобавитьСтроку", "Добавить " + Подстрока);
	ДопТекст.Вставить("ЗаголовокКонтекстногоМенюУдалитьСтроку", "Удалить " + Подстрока);
	ДопТекст.Вставить("ТекстВопросаПередУдалениемСтроки", ТекстВопроса);
	
	Возврат ДопТекст;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьОбластей(Форма, ИмяРаздела)
	
	АвтоРасчПоказатели = Новый Массив;
	
	Если ИмяРаздела = "Титульный" Тогда
		
		ОблНаимОрг       = Форма.ТабличныйДокумент.Области.НаимОрг;
		ОблКодФормыРеорг = Форма.ТабличныйДокумент.Области.КодФормыРеорганизации;
		ОблКодИННРеорг   = Форма.ТабличныйДокумент.Области.ИННРеорганизованнойОрганизации;
		ОблКодКППРеорг   = Форма.ТабличныйДокумент.Области.КППРеорганизованнойОрганизации;
		
		ЗначПоМесту = СокрЛП(Форма.ТабличныйДокумент.Области.ПоМесту.Значение);
		
		Если НЕ Форма.СтруктураРеквизитовФормы.ИП Тогда
			
			РазрешитьВводДанныхВОбласть(Форма, ОблКодФормыРеорг);
			
			ЗначКодФормыРеорг = СокрЛП(ОблКодФормыРеорг.Значение);
			
			Если ЗначениеЗаполнено(ЗначКодФормыРеорг)
				И ЗначКодФормыРеорг <> "0" Тогда
				
				Если ЗначПоМесту = "217" Тогда
					РазрешитьВводДанныхВОбласть(Форма, ОблНаимОрг);
				Иначе
					ЗапретитьВводДанныхВОбласть(Форма, ОблНаимОрг);
					Форма.ТабличныйДокумент.Области.НаимОрг.Значение
					= Форма.СтруктураРеквизитовФормы.НачальноеЗначениеНаимОрганизации;
				КонецЕсли;
				
				РазрешитьВводДанныхВОбласть(Форма, ОблКодИННРеорг);
				РазрешитьВводДанныхВОбласть(Форма, ОблКодКППРеорг);
				
			Иначе
				
				ЗапретитьВводДанныхВОбласть(Форма, ОблНаимОрг);
				Форма.ТабличныйДокумент.Области.НаимОрг.Значение
				= Форма.СтруктураРеквизитовФормы.НачальноеЗначениеНаимОрганизации;
				
				ЗапретитьВводДанныхВОбласть(Форма, ОблКодИННРеорг);
				ЗапретитьВводДанныхВОбласть(Форма, ОблКодКППРеорг);
				
			КонецЕсли;
			
		Иначе
			
			ЗапретитьВводДанныхВОбласть(Форма, ОблКодФормыРеорг);
			ЗапретитьВводДанныхВОбласть(Форма, ОблКодИННРеорг);
			ЗапретитьВводДанныхВОбласть(Форма, ОблКодКППРеорг);
			
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "ФизЛицо" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.ИП Тогда
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.ДатаРождения);
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.МестоРождения);
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.КодСтраныГражданства);
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.КодВидаДокумента);
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.СерияДокумента);
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.НомерДокумента);
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.КемВыданДокумент);
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.ДатаВыдачи);
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресИндекс);
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресКодРегиона);
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресРайон);
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресГород);
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресНаселенныйПункт);
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресУлица);
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресНомерДома);
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресНомерКорпуса);
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресНомерКвартиры);
		Иначе
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.ДатаРождения);
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.МестоРождения);
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.КодСтраныГражданства);
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.КодВидаДокумента);
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.СерияДокумента);
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.НомерДокумента);
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.КемВыданДокумент);
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.ДатаВыдачи);
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресИндекс);
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресКодРегиона);
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресРайон);
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресГород);
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресНаселенныйПункт);
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресУлица);
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресНомерДома);
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресНомерКорпуса);
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.АдресНомерКвартиры);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
			Если НЕ СтрНачинаетсяС(Пок.Ключ, Форма.СтруктураРеквизитовФормы.мИдГруппы1М1)
				И НЕ СтрНачинаетсяС(Пок.Ключ, Форма.СтруктураРеквизитовФормы.мИдГруппы1М2) Тогда
				АвтоРасчПоказатели.Добавить(Пок.Ключ);
			КонецЕсли;
		КонецЦикла;
		
		Инд = 1;
		Инд_Строка = "_1";
		Обл = Форма.ТабличныйДокумент.Области.Найти("П00001М107101" + Инд_Строка);
		Пока Обл <> Неопределено Цикл
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				Если СтрНачинаетсяС(Пок.Ключ, Форма.СтруктураРеквизитовФормы.мИдГруппы1М1) Тогда
					АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
				КонецЕсли;
			КонецЦикла;
			Инд = Инд + 1;
			Инд_Строка = СтрокаСИндексомПоказателя(Инд);
			Обл = Форма.ТабличныйДокумент.Области.Найти("П00001М107101" + Инд_Строка);
		КонецЦикла;
		
		Инд = 1;
		Инд_Строка = "_1";
		Обл = Форма.ТабличныйДокумент.Области.Найти("П00001М209101" + Инд_Строка);
		Пока Обл <> Неопределено Цикл
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				Если СтрНачинаетсяС(Пок.Ключ, Форма.СтруктураРеквизитовФормы.мИдГруппы1М2) Тогда
					АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
				КонецЕсли;
			КонецЦикла;
			Инд = Инд + 1;
			Инд_Строка = СтрокаСИндексомПоказателя(Инд);
			Обл = Форма.ТабличныйДокумент.Области.Найти("П00001М209101" + Инд_Строка);
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_1и1_2"
		ИЛИ ИмяРаздела = "Раздел1Прил2"
		ИЛИ ИмяРаздела = "Раздел1Прил3"
		ИЛИ ИмяРаздела = "Раздел1Прил4"
		ИЛИ ИмяРаздела = "Раздел1Прил5_6"
		ИЛИ ИмяРаздела = "Раздел1Прил7" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
			АвтоРасчПоказатели.Добавить(Пок.Ключ);
		КонецЦикла;
		
		Если ИмяРаздела = "Раздел1Прил7" Тогда
			Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) <> 12 Тогда
				ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.П000170001002);
				ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.П000170002002);
				ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.П000170003002);
				ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.П000170004002);
				ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.П000170005002);
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_3_1" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Инд = 1;
		Инд_Строка = "_1";
		Обл = Форма.ТабличныйДокумент.Области.Найти("П11131М101002" + Инд_Строка);
		Пока Обл <> Неопределено Цикл
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
			КонецЦикла;
			Инд = Инд + 1;
			Инд_Строка = СтрокаСИндексомПоказателя(Инд);
			Обл = Форма.ТабличныйДокумент.Области.Найти("П11131М101002" + Инд_Строка);
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_3_2" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Инд = 1;
		Инд_Строка = "_1";
		Обл = Форма.ТабличныйДокумент.Области.Найти("П11132М101002" + Инд_Строка);
		Пока Обл <> Неопределено Цикл
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
			КонецЦикла;
			Инд = Инд + 1;
			Инд_Строка = СтрокаСИндексомПоказателя(Инд);
			Обл = Форма.ТабличныйДокумент.Области.Найти("П11132М101002" + Инд_Строка);
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_4" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Инд = 1;
		Инд_Строка = "_1";
		Обл = Форма.ТабличныйДокумент.Области.Найти("П01114М101002" + Инд_Строка);
		Пока Обл <> Неопределено Цикл
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
			КонецЦикла;
			Инд = Инд + 1;
			Инд_Строка = СтрокаСИндексомПоказателя(Инд);
			Обл = Форма.ТабличныйДокумент.Области.Найти("П01114М101002" + Инд_Строка);
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил8" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
			Если Пок.Значение = "Итог" Тогда
				АвтоРасчПоказатели.Добавить(Пок.Ключ);
			КонецЕсли;
		КонецЦикла;
		
		Инд = 1;
		Инд_Строка = "_1";
		Обл = Форма.ТабличныйДокумент.Области.Найти("П00018М106001" + Инд_Строка);
		Пока Обл <> Неопределено Цикл
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				Если Пок.Ключ <> "Итого" И Пок.Значение <> "Итог" Тогда
					АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
				КонецЕсли;
			КонецЦикла;
			Инд = Инд + 1;
			Инд_Строка = СтрокаСИндексомПоказателя(Инд);
			Обл = Форма.ТабличныйДокумент.Области.Найти("П00018М106001" + Инд_Строка);
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил9" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
			Если Пок.Значение = "Итог" Тогда
				АвтоРасчПоказатели.Добавить(Пок.Ключ);
			КонецЕсли;
		КонецЦикла;
		
		Инд = 1;
		Инд_Строка = "_1";
		Обл = Форма.ТабличныйДокумент.Области.Найти("П00019М108001" + Инд_Строка);
		
		Пока Обл <> Неопределено Цикл
			
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				Если Пок.Ключ <> "Итого" И Пок.Значение <> "Итог" Тогда
					АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
				КонецЕсли;
			КонецЦикла;
			
			ОблЛицоБезГр = Форма.ТабличныйДокумент.Области.Найти("П00019М107002" + Инд_Строка);
			ОблКодСтраны = Форма.ТабличныйДокумент.Области.Найти("П00019М107001" + Инд_Строка);
			Если ЗначениеЗаполнено(ОблЛицоБезГр.Значение) Тогда
				ЗапретитьВводДанныхВОбласть(Форма, ОблКодСтраны);
				ОблКодСтраны.Значение = "999";
			Иначе
				РазрешитьВводДанныхВОбласть(Форма, ОблКодСтраны);
				ОблКодСтраны.Значение = ?(ОблКодСтраны.Значение = "999", "", ОблКодСтраны.Значение);
			КонецЕсли;
			
			Инд = Инд + 1;
			Инд_Строка = СтрокаСИндексомПоказателя(Инд);
			Обл = Форма.ТабличныйДокумент.Области.Найти("П00019М108001" + Инд_Строка);
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил10" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
			Если Пок.Значение = "Итог" Тогда
				АвтоРасчПоказатели.Добавить(Пок.Ключ);
			КонецЕсли;
		КонецЦикла;
		
		Инд = 1;
		Инд_Строка = "_1";
		Обл = Форма.ТабличныйДокумент.Области.Найти("П00110М110001" + Инд_Строка);
		Пока Обл <> Неопределено Цикл
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				Если Пок.Ключ <> "Итого" И Пок.Значение <> "Итог" Тогда
					АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
				КонецЕсли;
			КонецЦикла;
			Инд = Инд + 1;
			Инд_Строка = СтрокаСИндексомПоказателя(Инд);
			Обл = Форма.ТабличныйДокумент.Области.Найти("П00110М110001" + Инд_Строка);
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел2" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
			Если Пок.Значение = "Итог" Тогда
				АвтоРасчПоказатели.Добавить(Пок.Ключ);
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
			Если Пок.Значение = "Итог" Тогда
				АвтоРасчПоказатели.Добавить(Пок.Ключ);
			КонецЕсли;
		КонецЦикла;
		
		Инд = 1;
		Инд_Строка = "_1";
		Обл = Форма.ТабличныйДокумент.Области.Найти("П00321М121001" + Инд_Строка);
		Пока Обл <> Неопределено Цикл
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				Если Пок.Ключ <> "Итого280" И Пок.Значение <> "Итог"
					И СтрНачинаетсяС(Пок.Ключ, Форма.СтруктураРеквизитовФормы.мИдГруппы321М1) Тогда
					АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
				КонецЕсли;
			КонецЦикла;
			Инд = Инд + 1;
			Инд_Строка = СтрокаСИндексомПоказателя(Инд);
			Обл = Форма.ТабличныйДокумент.Области.Найти("П00321М121001" + Инд_Строка);
		КонецЦикла;
		
		Инд = 1;
		Инд_Строка = "_1";
		Обл = Форма.ТабличныйДокумент.Области.Найти("П00322М128001" + Инд_Строка);
		Пока Обл <> Неопределено Цикл
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				Если Пок.Ключ <> "Итого330" И Пок.Значение <> "Итог"
					И СтрНачинаетсяС(Пок.Ключ, Форма.СтруктураРеквизитовФормы.мИдГруппы322М1) Тогда
					АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
				КонецЕсли;
			КонецЦикла;
			Инд = Инд + 1;
			Инд_Строка = СтрокаСИндексомПоказателя(Инд);
			Обл = Форма.ТабличныйДокумент.Области.Найти("П00322М128001" + Инд_Строка);
		КонецЦикла;
		
	КонецЕсли;
	
	Для каждого ИмяПок Из АвтоРасчПоказатели Цикл
		Обл = Форма.ТабличныйДокумент.Область(ИмяПок);
		Если Форма.СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет Тогда
			Обл.Защита = Ложь;
			Обл.ЦветФона = Форма.мСтруктураЦветовРаскраски["_0"];
		Иначе
			Обл.Защита = Истина;
			Обл.ЦветФона = Форма.мСтруктураЦветовРаскраски["_4"];
		КонецЕсли;
	КонецЦикла;
	
	ПереопределитьЗначенияСвойствЯчеекТабличногоДокумента(Форма, ИмяРаздела);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗапретитьВводДанныхВОбласть(Форма, ОбрабатываемаяОбласть, ОчищатьЗначение = Истина)
	
	ЦветНедоступнойОбласти = Форма.мСтруктураЦветовРаскраски["_5"];
	
	ОбрабатываемаяОбласть.Защита   = Истина;
	ОбрабатываемаяОбласть.ЦветФона = ЦветНедоступнойОбласти;
	
	Если ОчищатьЗначение Тогда
		ОбрабатываемаяОбласть.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РазрешитьВводДанныхВОбласть(Форма, ОбрабатываемаяОбласть)
	
	ЦветОбластиРучногоВвода = Форма.мСтруктураЦветовРаскраски["_0"];
	
	ОбрабатываемаяОбласть.Защита   = Ложь;
	ОбрабатываемаяОбласть.ЦветФона = ЦветОбластиРучногоВвода;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПереопределитьЗначенияСвойствЯчеекТабличногоДокумента(Форма, ИмяРаздела)
	
	Для каждого Обл Из Форма.ТабличныйДокумент.Области Цикл
		
		Если НЕ (СтрЧислоВхождений(Тип(Обл), "Рисунок") = 0
			И Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			И Обл.СодержитЗначение = Истина
			И НЕ Обл.Защита) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Обл.ЦветФона = Форма.мСтруктураЦветовРаскраски["_4"]
		 ИЛИ Обл.ЦветФона = Форма.мСтруктураЦветовРаскраски["_5"] Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяГруппы = МногострочнаяЧастьТекущейОбласти(Форма, Обл.Имя);
		Если ИмяГруппы = Неопределено Тогда
			ИмяПоиска = Обл.Имя;
		Иначе
			ИмяПоиска = Лев(Обл.Имя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
		КонецЕсли;
		
		Если Форма.СтруктураРеквизитовФормы.АвтозаполняемыеПоказатели.Свойство(ИмяПоиска) Тогда
			Обл.ЦветФона = Форма.мСтруктураЦветовРаскраски["_3"];
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПомещениеДанныхИзТабличногоДокументаВМестаХранения

&НаСервере
Процедура СохранитьДанныеРаздела(НаимРаздела, ВеткаРаздела = Неопределено)
	
	// Многоуровневые разделы.
	Если мСтруктураМногоуровневыхРазделов.Свойство(НаимРаздела) Тогда
		
		Если ВеткаРаздела = Неопределено Тогда
			
			СтруктураРаздела = мСтруктураМногоуровневыхРазделов[НаимРаздела];
			
			ИмяГлРаздела = Неопределено;
			СтруктураРаздела.Свойство("ИмяГлавногоРаздела", ИмяГлРаздела);
			ИмяГлРаздела = ?(ИмяГлРаздела = Неопределено, НаимРаздела, ИмяГлРаздела);
			
			ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
				СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
			
			ТекВетка = ДеревоДанныхРаздела;
			
			Для каждого НомерСтроки Из СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела Цикл
				ТекВетка = ТекВетка.Строки[НомерСтроки - 1];
			КонецЦикла;
			
		Иначе
			
			ТекВетка = ВеткаРаздела;
			
		КонецЕсли;
		
		ДанныеТаблДокумента = ДанныеТабличногоДокумента(НаимРаздела);
		
		ТекВетка.Данные = ДанныеТаблДокумента.Данные;
		ТекВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
		
		СтруктураРеквизитовФормы.Вставить("АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела,
			ПоместитьВоВременноеХранилище(ДеревоДанныхРаздела, УникальныйИдентификатор));
		
		ДеревоДанныхРаздела = Неопределено;
		
	// Обычные разделы.
	Иначе
		
		ЭтаФорма["СтруктураДанных" + НаимРаздела] = ДанныеТабличногоДокумента(НаимРаздела);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДанныеТабличногоДокумента(НаимРаздела)
	
	ДанныеТаблДокумента = Новый Структура;
	
	// Многоуровневые разделы.
	//
	Если мСтруктураМногоуровневыхРазделов.Свойство(НаимРаздела) Тогда
		
		СтруктураРаздела = мСтруктураМногоуровневыхРазделов[НаимРаздела];
		
		ИменаГруппМнЧ = Неопределено;
		СтруктураРаздела.Свойство("ИменаГруппМнЧ", ИменаГруппМнЧ);
		РазделСодержитМнЧ = (ИменаГруппМнЧ <> Неопределено);
		
		СтруктураДанных = Новый Структура();
		Для Каждого ТекущаяОбласть Из ТабличныйДокумент.Области Цикл
			Если СтрЧислоВхождений(Тип(ТекущаяОбласть), "Рисунок") = 0
				И ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И ТекущаяОбласть.СодержитЗначение = Истина Тогда
				Если РазделСодержитМнЧ Тогда
					Если МногострочнаяЧастьТекущейОбласти(ЭтаФорма, ТекущаяОбласть.Имя) = Неопределено Тогда
						СтруктураДанных.Вставить(ТекущаяОбласть.Имя, ТекущаяОбласть.Значение);
					КонецЕсли;
				Иначе
					СтруктураДанных.Вставить(ТекущаяОбласть.Имя, ТекущаяОбласть.Значение);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ДанныеТаблДокумента.Вставить("Данные", СтруктураДанных);
		
		СтруктураДанныхМногострочныхЧастей = Новый Структура;
		Если РазделСодержитМнЧ Тогда
			Для каждого ИмяГруппыМнЧ Из СтруктураРаздела["ИменаГруппМнЧ"] Цикл
				ЭлемСтруктуры = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
				Если ЭлемСтруктуры["УровеньПодчинения"] = 0 Тогда
					ДеревоДанных = Новый ДеревоЗначений;
					ДеревоДанных.Колонки.Добавить("Данные");
					ДеревоДанных.Колонки.Добавить("ДанныеМногострочныхЧастей");
					СформироватьДеревоМногострочнойЧастиПоДаннымТабличногоДокумента(ИмяГруппыМнЧ, ДеревоДанных);
					СтруктураДанныхМногострочныхЧастей.Вставить(ИмяГруппыМнЧ, ДеревоДанных);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ДанныеТаблДокумента.Вставить("ДанныеМногострочныхЧастей", СтруктураДанныхМногострочныхЧастей);
		
	// Обычные разделы.
	//
	Иначе
		
		Для Инд = 0 По ТабличныйДокумент.Области.Количество() - 1 Цикл
			
			ТекОбласть = ТабличныйДокумент.Области[Инд];
			
			Если СтрЧислоВхождений(Тип(ТекОбласть), "Рисунок") = 0
				И ТекОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И ТекОбласть.СодержитЗначение = Истина Тогда
				
				ДанныеТаблДокумента.Вставить(ТекОбласть.Имя, ТекОбласть.Значение);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ДанныеТаблДокумента;
	
КонецФункции

&НаСервере
Процедура СформироватьДеревоМногострочнойЧастиПоДаннымТабличногоДокумента(ИмяГруппы, ДеревоДанных, Координаты = "")
	
	Если НЕ СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей.Свойство(ИмяГруппы) Тогда
		Возврат;
	КонецЕсли;
	
	МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
	ИмяПервойГрафы = МассивИменГраф[0];
	
	Инд_Число = 1;
	Пока ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + Координаты + СтрокаСИндексомПоказателя(Инд_Число)) <> Неопределено Цикл
		НовВетка = ДеревоДанных.Строки.Добавить();
		
		// Заполнение данными из текущей строки многострочной части.
		Данные = Новый Структура;
		Инд = СтрокаСИндексомПоказателя(Инд_Число);
		Для каждого ИмяГрафы Из МассивИменГраф Цикл
			Обл = ТабличныйДокумент.Области.Найти(ИмяГрафы + Координаты + Инд);
			Если Обл <> Неопределено Тогда
				Данные.Вставить(ИмяГрафы, Обл.Значение);
			КонецЕсли;
		КонецЦикла;
		НовВетка.Данные = Данные;
		
		// Заполнение данными из строк многострочных частей, подчиненных текущей строке многострочной части.
		ДанныеМногострочныхЧастей = Новый Структура;
		ИменаПодчГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаПодчиненныхГрупп"];
		Для каждого ИмяПодчГруппы Из ИменаПодчГрупп Цикл
			ДеревоПодчСтрок = Новый ДеревоЗначений;
			ДеревоПодчСтрок.Колонки.Добавить("Данные");
			ДеревоПодчСтрок.Колонки.Добавить("ДанныеМногострочныхЧастей");
			ПодчКоординаты = Координаты + Инд;
			СформироватьДеревоМногострочнойЧастиПоДаннымТабличногоДокумента(
				ИмяПодчГруппы, ДеревоПодчСтрок, ПодчКоординаты);
			ДанныеМногострочныхЧастей.Вставить(ИмяПодчГруппы, ДеревоПодчСтрок);
		КонецЦикла;
		НовВетка.ДанныеМногострочныхЧастей = ДанныеМногострочныхЧастей;
		
		Инд_Число = Инд_Число + 1;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПомещениеДанныхИзМестХраненияВТабличныйДокумент

&НаСервере
Процедура ВывестиДанныеВТабличныйДокументНаСервере(ИмяТекРаздела, НовыеНомераСтрокМногоуровнегоРаздела = Неопределено)
	
	СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	ВывестиДанныеВТабличныйДокумент(ИмяТекРаздела, НовыеНомераСтрокМногоуровнегоРаздела);
	
	СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяТекРаздела;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиДанныеВТабличныйДокумент(ИмяТекРаздела, НовыеНомераСтрокМногоуровнегоРаздела = Неопределено)
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(Отчеты[
		Сред(Лев(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") - 1), 7)].ПолучитьМакет(
		Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела));
	
	// Многоуровневые разделы.
	//
	Если мСтруктураМногоуровневыхРазделов.Свойство(ИмяТекРаздела) Тогда
		
		СтруктураРаздела = мСтруктураМногоуровневыхРазделов[ИмяТекРаздела];
		
		ИмяГлРаздела = Неопределено;
		СтруктураРаздела.Свойство("ИмяГлавногоРаздела", ИмяГлРаздела);
		ИмяГлРаздела = ?(ИмяГлРаздела = Неопределено, ИмяТекРаздела, ИмяГлРаздела);
		
		ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
			СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		ТекВетка = ДеревоДанныхРаздела;
		
		Для каждого НомерСтроки Из НовыеНомераСтрокМногоуровнегоРаздела Цикл
			ТекВетка = ТекВетка.Строки[НомерСтроки - 1];
		КонецЦикла;
		
		// Вывод немногострочных данных.
		Для Каждого ЭлСтруктуры Из ТекВетка.Данные Цикл
			Обл = ТабличныйДокумент.Области.Найти(ЭлСтруктуры.Ключ);
			Если Обл <> Неопределено Тогда
				Обл.Значение = ЭлСтруктуры.Значение;
			КонецЕсли;
		КонецЦикла;
		
		// Отображение данных других разделов.
		Обл = ТабличныйДокумент.Области.Найти("П000110000101");
		Если Обл <> Неопределено И ИмяТекРаздела <> "Раздел1Прил1" Тогда
			Обл.Текст = ДеревоДанныхРаздела.Строки[НовыеНомераСтрокМногоуровнегоРаздела[0] - 1].Данные.П000110000101;
		КонецЕсли;
		Обл = ТабличныйДокумент.Области.Найти("П000030002001");
		Если Обл <> Неопределено Тогда
			Обл.Текст = СтруктураДанныхТитульный.Период;
		КонецЕсли;
		Обл = ТабличныйДокумент.Области.Найти("П000030003001");
		Если Обл <> Неопределено Тогда
			Обл.Текст = СтруктураДанныхТитульный.ОтчетГод;
		КонецЕсли;
		Обл = ТабличныйДокумент.Области.Найти("П000030005001");
		Если Обл <> Неопределено Тогда
			Обл.Текст = Формат(СтруктураДанныхТитульный.ДатаПодписи, "ДФ=dd.MM.yyyy");
		КонецЕсли;
		
		// Добавление в многострочную часть необходимого количества
		// дополнительных строк, вывод многострочных данных.
		ВывестиМногострочныеДанныеВТабличныйДокумент(ТекВетка);
		
		ДеревоДанныхРаздела = Неопределено;
		
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = НовыеНомераСтрокМногоуровнегоРаздела;
		
	// Обычные разделы.
	//
	Иначе
		
		Для Каждого ЭлСтруктуры Из ЭтаФорма["СтруктураДанных" + ИмяТекРаздела] Цикл
			Обл = ТабличныйДокумент.Области.Найти(ЭлСтруктуры.Ключ);
			Если Обл <> Неопределено Тогда
				Обл.Значение = ЭлСтруктуры.Значение;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	УстановитьДоступностьОбластей(ЭтаФорма, ИмяТекРаздела);
	
КонецПроцедуры

&НаСервере
Процедура ВывестиМногострочныеДанныеВТабличныйДокумент(Ветка, Координаты = "")
	
	ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей;
	
	Для каждого ЭлемСтруктуры Из ДанныеМнЧ Цикл
		
		ДеревоМнЧ = ЭлемСтруктуры.Значение;
		
		Для Инд_Число = 0 По ДеревоМнЧ.Строки.Количество() - 1 Цикл
			
			// Добавление необходимого количества доп. строк.
			Если Инд_Число > 0 Тогда
				Инд = СтрокаСИндексомПоказателя(Инд_Число);
				ИмяОбластиПреемника = "ДобавлениеСтроки" + ЭлемСтруктуры.Ключ + Координаты + Инд;
				ВставитьДопСтроку(ЭлемСтруктуры.Ключ, ИмяОбластиПреемника);
			КонецЕсли;
			
			// Обработка гиперссылок удаления строки, если эта строка единственная.
			Если ДеревоМнЧ.Строки.Количество() = 1 Тогда
				Инд = СтрокаСИндексомПоказателя(1);
				ИмяИскомойОбласти = "УдалитьСтроку" + ЭлемСтруктуры.Ключ + Координаты + Инд;
				Обл = ТабличныйДокумент.Области.Найти(ИмяИскомойОбласти);
				Если Обл <> Неопределено Тогда
					Обл.Гиперссылка = Ложь;
					Обл.Текст = "";
				КонецЕсли;
			КонецЕсли;
			
			// Вывод многострочных данных.
			Данные = ДеревоМнЧ.Строки[Инд_Число].Данные;
			Инд = СтрокаСИндексомПоказателя(Инд_Число + 1);
			Для Каждого ЭлСтруктуры Из Данные Цикл
				ИмяИскомойОбласти = ЭлСтруктуры.Ключ + Координаты + Инд;
				Обл = ТабличныйДокумент.Области.Найти(ИмяИскомойОбласти);
				Если Обл <> Неопределено Тогда
					Обл.Значение = ЭлСтруктуры.Значение;
				КонецЕсли;
			КонецЦикла;
			
			// Добавление необходимого количества подчиненных доп. строк.
			ПодчВетка = ДеревоМнЧ.Строки[Инд_Число];
			ПодчКоординаты = Координаты + Инд;
			ВывестиМногострочныеДанныеВТабличныйДокумент(ПодчВетка, ПодчКоординаты);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ДобавлениеУдалениеСтраницМногоуровневыхРазделов

&НаКлиенте
Процедура ДобавитьСтраницу(Команда)
	
	ИмяРаздела = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
	
	Если ИмяРаздела = "Раздел1Прил1"
		ИЛИ ИмяРаздела = "Раздел3" Тогда
		ДобавитьСтраницуУровня0(ИмяРаздела);
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ИмяРаздела = "Раздел3" Тогда
		Обл = ТабличныйДокумент.Области.Найти("СекцияУдалитьСтраницу");
		Если Обл <> Неопределено Тогда
			Обл.Видимость = Истина;
		КонецЕсли;
	Иначе
		Обл = ТабличныйДокумент.Области["УдалитьСтраницуЗначок"];
		Обл.Гиперссылка = Истина;
		Обл.Текст = "х";
		Обл = ТабличныйДокумент.Области["УдалитьСтраницу"];
		Обл.Гиперссылка = Истина;
		Обл.Текст = "Удалить страницу";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтраницуУровня0(ИмяРаздела)
	
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	
	// Нахождение строки в дереве значений, соответствующей текущей странице.
	ТекВетка = ДеревоРаздела.Строки[
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
	// Помещение данных текущей страницы в структуры найденной строки.
	ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяРаздела);
	ТекВетка.Данные = ДанныеТаблДокумента.Данные;
	ТекВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
	
	// Добавление новой страницы.
	// (Добавляется строка в конец коллекции строк дерева значений.)
	НовВетка = ДеревоРаздела.Строки.Добавить();
	// Добавление разделов, подчиненных новой странице.
	ИнициализироватьПодчиненныеРазделы(ИмяРаздела, НовВетка);
	
	НомерНовВетки = ДеревоРаздела.Строки.Количество();
	
	// Вывод и помещение начальных данных новой страницы
	// в структуры вновь добавленной строки дерева значений.
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(Отчеты[Сред(
		Лев(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") - 1), 7)].ПолучитьМакет(Сред(
		ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + ИмяРаздела));
	ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяРаздела);
	НовВетка.Данные = ДанныеТаблДокумента.Данные;
	НовВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
	
	// Сохранение изменений в дереве значений.
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]
		= ПоместитьВоВременноеХранилище(ДеревоРаздела, УникальныйИдентификатор);
	
	ДеревоРаздела = Неопределено;
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] = НомерНовВетки;
	
	Для каждого ИскомыйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
		Если ИскомыйРаздел.КолонкаРазделыОтчетаСокрНаим = ИмяРаздела Тогда
			Для каждого НайденнаяСтраница Из ИскомыйРаздел.ПолучитьЭлементы() Цикл
				Если НайденнаяСтраница.КолонкаНомерСтраницыРазделаОтчета
					= СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] Тогда
					Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтраница.ПолучитьИдентификатор();
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницу(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьСтраницуЗавершение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru='Удалить текущую страницу?'");
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРаздела = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
	
	Если ИмяРаздела = "Раздел1Прил1"
		ИЛИ ИмяРаздела = "Раздел3" Тогда
		УдалитьСтраницуУровня0(ИмяРаздела);
	Иначе
		Возврат;
	КонецЕсли;
	
	СпрятатьСсылкуУдалитьСтраницу();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСтраницуУровня0(ИмяРаздела)
	
	ДеревоДанных = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	
	НомПоследнейСтраницы = ДеревоДанных.Строки.Количество();
	
	// Номер строки дерева значений, соответствующий номеру удаляемой страницы.
	НомУдаляемойСтраницы = СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0];
	
	// Номер строки дерева значений, соответствующий номеру выводимой после удаления страницы.
	НомСтраницыПослеУдаления = ?(НомУдаляемойСтраницы = НомПоследнейСтраницы,
		НомУдаляемойСтраницы - 1, НомУдаляемойСтраницы);
	
	// Удаление страницы.
	ДеревоДанных.Строки.Удалить(НомУдаляемойСтраницы - 1);
	
	// Сохранение изменений в дереве значений.
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]
		= ПоместитьВоВременноеХранилище(ДеревоДанных, УникальныйИдентификатор);
	
	ДеревоДанных = Неопределено;
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] = НомСтраницыПослеУдаления;
	
	// Вывод данных строки дерева значений после удаления страницы.
	ВывестиДанныеВТабличныйДокумент(ИмяРаздела, СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела);
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	Для каждого ИскомыйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
		Если ИскомыйРаздел.КолонкаРазделыОтчетаСокрНаим = ИмяРаздела Тогда
			Для каждого НайденнаяСтраница31 Из ИскомыйРаздел.ПолучитьЭлементы() Цикл
				Если НайденнаяСтраница31.КолонкаНомерСтраницыРазделаОтчета = НомСтраницыПослеУдаления Тогда
					Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтраница31.ПолучитьИдентификатор();
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СпрятатьСсылкуУдалитьСтраницу()
	
	Если Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьРодителя() <> Неопределено Тогда
		ЭлементыРодителя = Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы();
		Если (ЭлементыРодителя.Количество() > 1)
			И (ЭлементыРодителя[0].КолонкаРазделыОтчетаСокрНаим = ЭлементыРодителя[1].КолонкаРазделыОтчетаСокрНаим) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел3" Тогда
		Обл = ТабличныйДокумент.Области.Найти("СекцияУдалитьСтраницу");
		Если Обл <> Неопределено Тогда
			Обл.Видимость = Ложь;
		КонецЕсли;
	Иначе
		ОблУдалитьСтраницу = ТабличныйДокумент.Области.Найти("УдалитьСтраницуЗначок");
		Если ОблУдалитьСтраницу <> Неопределено Тогда
			ОблУдалитьСтраницу.Текст = "";
			ОблУдалитьСтраницу.Гиперссылка = Ложь;
		КонецЕсли;
		ОблУдалитьСтраницу = ТабличныйДокумент.Области.Найти("УдалитьСтраницу");
		Если ОблУдалитьСтраницу <> Неопределено Тогда
			ОблУдалитьСтраницу.Текст = "";
			ОблУдалитьСтраницу.Гиперссылка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДобавлениеУдалениеДополнительныхСтрокМногострочныхЧастейМногоуровневыхРазделов

&НаКлиенте
Процедура ДобавитьСтроку(Команда)
	
	ТекстПредупреждения = "";
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1" Тогда
		
		ИмяОбласти = ТабличныйДокумент.ТекущаяОбласть.Имя;
		ИмяОбласти = СтрЗаменить(ИмяОбласти, "ДобавитьСтрокуЗначок", "");
		ИмяОбласти = СтрЗаменить(ИмяОбласти, "ДобавитьСтроку", "");
		
		Если СтрНачинаетсяС(ИмяОбласти, СтруктураРеквизитовФормы.мИдГруппы1М1) Тогда
			
			ИмяПервойГрафы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
			СтруктураРеквизитовФормы.мИдГруппы1М1]["ИменаГраф"][0];
			
			Если ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + "_4") <> Неопределено Тогда
				ТекстПредупреждения = НСтр(
				"ru = 'Нельзя добавлять более четырех групп строк 060-073 в разделе 1.'");
			КонецЕсли;
			
		ИначеЕсли СтрНачинаетсяС(ИмяОбласти, СтруктураРеквизитовФормы.мИдГруппы1М2) Тогда
			
			ИмяПервойГрафы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
			СтруктураРеквизитовФормы.мИдГруппы1М2]["ИменаГраф"][0];
			
			Если ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + "_2") <> Неопределено Тогда
				ТекстПредупреждения = НСтр(
				"ru = 'Нельзя добавлять более двух групп строк 080-093 в разделе 1.'");
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_3_1" Тогда
		
		ИмяПервойГрафы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
		СтруктураРеквизитовФормы.мИдГруппы11131М1]["ИменаГраф"][0];
		
		Если ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + "_2") <> Неопределено Тогда
			ТекстПредупреждения = НСтр(
			"ru = 'Нельзя добавлять более двух групп строк 001-050 в подразделе 1.3.1 приложения 1 к разделу 1.'");
		КонецЕсли;
		
	ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_3_2" Тогда
		
		ИмяПервойГрафы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
		СтруктураРеквизитовФормы.мИдГруппы11132М1]["ИменаГраф"][0];
		
		Если ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + "_30") <> Неопределено Тогда
			ТекстПредупреждения = НСтр(
			"ru = 'Нельзя добавлять более тридцати групп строк 001-050 в подразделе 1.3.2 приложения 1 к разделу 1.'");
		КонецЕсли;
		
	ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_4" Тогда
		
		ИмяПервойГрафы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
		СтруктураРеквизитовФормы.мИдГруппы1114М1]["ИменаГраф"][0];
		
		Если ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + "_2") <> Неопределено Тогда
			ТекстПредупреждения = НСтр(
			"ru = 'Нельзя добавлять более двух групп строк 001-050 в подразделе 1.4 приложения 1 к разделу 1.'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
		
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
		
	КонецЕсли;
	
	ВставитьДополнительнуюСтроку();
	
КонецПроцедуры

&НаСервере
Процедура ВставитьДополнительнуюСтроку()
	
	ИмяТекОбласти = Элементы.ТабличныйДокумент.ТекущаяОбласть.Имя;
	
	Если СтрНайти(ИмяТекОбласти, "ДобавитьСтроку") Тогда
		ИмяОбластиПреемника = СтрЗаменить(ИмяТекОбласти, "ДобавитьСтроку", "");
		ИмяОбластиПреемника = СтрЗаменить(ИмяОбластиПреемника, "Значок", "");
		ИмяГруппы = Лев(ИмяОбластиПреемника, СтруктураРеквизитовФормы.ДлинаИмениГруппы);
		ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяОбластиПреемника;
	Иначе
		ИмяГруппы = Лев(ИмяТекОбласти, СтруктураРеквизитовФормы.ДлинаИмениГруппы);
		ИмяГрафы = Лев(ИмяТекОбласти, СтруктураРеквизитовФормы.ДлинаИмениГрафы);
		МаксИнд = ИндексПоказателя(ИмяТекОбласти);
		Координаты = СтрокаСКоординатамиПоказателя(ИмяТекОбласти);
		Пока ТабличныйДокумент.Области.Найти(ИмяГрафы + Координаты + СтрокаСИндексомПоказателя(МаксИнд + 1)) <> Неопределено Цикл
			МаксИнд = МаксИнд + 1;
		КонецЦикла;
		ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяГруппы + Координаты + СтрокаСИндексомПоказателя(МаксИнд);
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей.Свойство(ИмяГруппы) Тогда
		ВставитьДопСтроку(ИмяГруппы, ИмяОбластиПреемника);
		
		// Особая обработка текста в строках 020 и 110 Приложения 10 к Разделу 1.
		Если ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы110М1 Тогда
			
			Инд020 = ИндексПоказателя(ИмяОбластиПреемника) + 1;
			Инд020_Строка = СтрокаСИндексомПоказателя(Инд020);
			
			ИмяПокСтр020 = "П00110М102001" + Инд020_Строка;
			Обл020 = ТабличныйДокумент.Области.Найти(ИмяПокСтр020);
			Обл020.Значение = Формат(Инд020, "ЧЦ=3; ЧВН=; ЧГ=");
			
			ИмяПокСтр110 = "П00110М211001" + Инд020_Строка + "_1";
			Обл110 = ТабличныйДокумент.Области.Найти(ИмяПокСтр110);
			Обл110.Значение = Обл020.Значение;
			
		ИначеЕсли ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы110М2 Тогда
			
			СтрокаСКоординатами = СтрокаСКоординатамиПоказателя(ИмяОбластиПреемника);
			
			ИмяПокСтр020 = "П00110М102001" + СтрокаСКоординатами;
			Обл020 = ТабличныйДокумент.Области.Найти(ИмяПокСтр020);
			
			ИмяПокСтр110 = "П00110М211001" + СтрокаСКоординатами
			+ СтрокаСИндексомПоказателя(ИндексПоказателя(ИмяОбластиПреемника) + 1);
			Обл110 = ТабличныйДокумент.Области.Найти(ИмяПокСтр110);
			Обл110.Значение = Обл020.Значение;
			
		КонецЕсли;
		
		СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
		Модифицированность = Истина;
	КонецЕсли;
	
	Если ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы19М1 Тогда
		УстановитьДоступностьОбластей(ЭтаФорма, "Раздел1Прил9");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВставитьДопСтроку(Знач ИмяГруппы, Знач ИмяОбластиПреемника, ЭтоАвтоВставкаПодчиненнойМнЧ = Ложь)
	
	НачИндекс = "_1";
	
	Если СтрНайти(ИмяОбластиПреемника, "ДобавлениеСтроки" + ИмяГруппы) > 0 Тогда
		
		ИскомаяОбласть = ТабличныйДокумент.Области.Найти("МногострочнаяЧасть" + ИмяГруппы);
		
		ВремТаблДок = ТабличныйДокумент.ПолучитьОбласть(ИскомаяОбласть.Имя);
		ВставляемаяОбласть = ВремТаблДок.Область(ИскомаяОбласть.Имя);
		ВставляемаяОбласть.Имя = "";
		
		НовКоординаты = СтрокаСКоординатамиПоказателя(ИмяОбластиПреемника);
		
		КолУровнейПодчиненности = СтрЧислоВхождений(НовКоординаты, "_");
		НачКоординаты = "";
		Для НомУр = 1 По КолУровнейПодчиненности Цикл
			НачКоординаты = НачКоординаты + НачИндекс;
		КонецЦикла;
		
		ПреИндекс_Число = ИндексПоказателя(ИмяОбластиПреемника);
		НовИндекс_Число = ?(ЭтоАвтоВставкаПодчиненнойМнЧ, 1, ПреИндекс_Число + 1);
		
		ПреИндекс = СтрокаСИндексомПоказателя(ПреИндекс_Число);
		НовИндекс = СтрокаСИндексомПоказателя(НовИндекс_Число);
		
		НачПостфикс = ИмяГруппы + НачКоординаты + НачИндекс;
		ПреПостфикс = ИмяГруппы + НовКоординаты + ПреИндекс;
		НовПостфикс = ИмяГруппы + НовКоординаты + НовИндекс;
		
		МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
		
		Для каждого ИмяГрафы Из МассивИменГраф Цикл
			
			НачИмяОбл = ИмяГрафы + НачКоординаты + НачИндекс;
			НовИмяОбл = ИмяГрафы + НовКоординаты + НовИндекс;
			
			ОбластьЯчейки = ВремТаблДок.Области[НачИмяОбл];
			ОбластьЯчейки.Имя = НовИмяОбл;
			
			Если ОбластьЯчейки.СодержитЗначение = Истина Тогда
				ОбластьЯчейки.Очистить();
			КонецЕсли;
			
		КонецЦикла;
		
		Обл = ВремТаблДок.Области.Найти("УдалитьСтроку" + НачПостфикс);
		Если Обл <> Неопределено Тогда
			Обл.Имя = "УдалитьСтроку" + НовПостфикс;
		КонецЕсли;
		
		Если ЭтоАвтоВставкаПодчиненнойМнЧ Тогда
			Обл = ВремТаблДок.Области.Найти("УдалитьСтроку" + НовПостфикс);
			Если Обл <> Неопределено Тогда
				Обл.Гиперссылка = Ложь;
				Обл.Текст = "";
			КонецЕсли;
		Иначе
			Обл = ВремТаблДок.Области.Найти("УдалитьСтроку" + НовПостфикс);
			Если Обл <> Неопределено Тогда
				Обл.Гиперссылка = Истина;
				Обл.Текст = "х";
				Если НовИндекс_Число = 2 Тогда
					Если Обл <> Неопределено Тогда
						Обл = ТабличныйДокумент.Области.Найти("УдалитьСтроку" + ПреПостфикс);
						Обл.Гиперссылка = Истина;
						Обл.Текст = "х";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтроку" + ПреПостфикс);
		Если Обл <> Неопределено Тогда
			Обл.Имя = "ДобавитьСтроку" + НовПостфикс;
		КонецЕсли;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтрокуЗначок" + ПреПостфикс);
		Если Обл <> Неопределено Тогда
			Обл.Имя = "ДобавитьСтрокуЗначок" + НовПостфикс;
		КонецЕсли;
		
		ОблПреемник = ТабличныйДокумент.Области.Найти(ИмяОбластиПреемника);
		ОблПреемник.Имя = "ДобавлениеСтроки" + НовПостфикс;
		
		// Изменения в оформлении ячеек: установка значения "НетЛинии"/"Сплошная" для
		// свойства "ГраницаСнизу" (в случае задания номеров специальных колонок):
		НомераСпецКолонок = Неопределено;
		СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы].Свойство(
			"КолонкиСИзмНижнГраницей", НомераСпецКолонок);
		Если НомераСпецКолонок <> Неопределено Тогда
			Для каждого НомКолонки Из НомераСпецКолонок Цикл
				// Удаление линии в определенных колонках последней (до добавления) строки.
				Если НЕ ЭтоАвтоВставкаПодчиненнойМнЧ Тогда
					Обл = ТабличныйДокумент.Область(
						ОблПреемник.Верх - 1, НомКолонки, ОблПреемник.Верх - 1, НомКолонки);
					Если Обл <> Неопределено Тогда
						Обл.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
					КонецЕсли;
				КонецЕсли;
				// Установка линии в определенных колонках добавляемой строки.
				Обл = ВремТаблДок.Область(
					ВставляемаяОбласть.Низ, НомКолонки, ВставляемаяОбласть.Низ, НомКолонки);
				Если Обл <> Неопределено Тогда
					Обл.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ОблПреемник_ = ТабличныйДокумент.Область(
			ОблПреемник.Верх, , ОблПреемник.Верх + ИскомаяОбласть.Низ - ИскомаяОбласть.Верх, );
		ТабличныйДокумент.ВставитьОбласть(
			ВставляемаяОбласть, ОблПреемник_, ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		Если НЕ ЭтоАвтоВставкаПодчиненнойМнЧ Тогда
			// Установка текущей области после добавления строки.
			НовИмяТекОбл = МассивИменГраф[0] + НовКоординаты + НовИндекс;
			НовТекОбл = ТабличныйДокумент.Области[НовИмяТекОбл];
			Элементы.ТабличныйДокумент.ТекущаяОбласть = НовТекОбл;
		КонецЕсли;
		
	КонецЕсли;
	
	ИменаПодчиненныхГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
		ИмяГруппы]["ИменаПодчиненныхГрупп"];
	Для каждого ИмяПодчГруппы Из ИменаПодчиненныхГрупп Цикл
		НовКоординатыДляПодчОбласти = НовКоординаты + НовИндекс;
		
		КолУровнейПодчиненности = СтрЧислоВхождений(НовКоординатыДляПодчОбласти, "_");
		НачКоординатыДляПодчОбласти = "";
		Для НомУр = 1 По КолУровнейПодчиненности Цикл
			НачКоординатыДляПодчОбласти = НачКоординатыДляПодчОбласти + НачИндекс;
		КонецЦикла;
		
		НачИндВставляемойОбласти = НачИндекс;
		
		ИскомаяОбласть = ТабличныйДокумент.Области.Найти(
			"ДобавлениеСтроки" + ИмяПодчГруппы + НачКоординатыДляПодчОбласти + НачИндВставляемойОбласти);
		
		Если ИскомаяОбласть = Неопределено Тогда
			НачИндВставляемойОбласти = 1;
			Пока ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ИмяПодчГруппы
				+ НачКоординатыДляПодчОбласти + "_" + Формат(НачИндВставляемойОбласти, "ЧГ=")) = Неопределено Цикл
				НачИндВставляемойОбласти = НачИндВставляемойОбласти + 1;
			КонецЦикла;
			НачИндВставляемойОбласти = "_" + Формат(НачИндВставляемойОбласти, "ЧГ=");
			ИскомаяОбласть = ТабличныйДокумент.Области.Найти(
				"ДобавлениеСтроки" + ИмяПодчГруппы + НачКоординатыДляПодчОбласти + НачИндВставляемойОбласти);
		КонецЕсли;
		
		ВремТабличныйДокумент = ТабличныйДокумент.ПолучитьОбласть(ИскомаяОбласть.Имя);
		ВставляемаяОбласть = ВремТабличныйДокумент.Область(ИскомаяОбласть.Имя);
		Для каждого ОбластьЯчейки Из ВремТабличныйДокумент.Области Цикл
			ОбластьЯчейки.Имя = СтрЗаменить(ОбластьЯчейки.Имя,
				ИмяПодчГруппы + НачКоординатыДляПодчОбласти + НачИндВставляемойОбласти,
				ИмяПодчГруппы + НовКоординатыДляПодчОбласти + НачИндекс);
		КонецЦикла;
		ИмяОбластиПреемникаДляПодчОбласти = СтрЗаменить(ИмяОбластиПреемника, ПреПостфикс, НовПостфикс);
		ОбластьПреемник = ТабличныйДокумент.Области.Найти(ИмяОбластиПреемникаДляПодчОбласти);
		
		ТабличныйДокумент.ВставитьОбласть(ВставляемаяОбласть, ОбластьПреемник, ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		ИмяОбластиПреемникаДляПодчОбласти = "ДобавлениеСтроки" + ИмяПодчГруппы + НовКоординатыДляПодчОбласти + НачИндекс;
		
		ВставитьДопСтроку(ИмяПодчГруппы, ИмяОбластиПреемникаДляПодчОбласти, Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтроку(Команда)
	
	ИмяТекОбласти = Элементы.ТабличныйДокумент.ТекущаяОбласть.Имя;
	ИмяТекОбласти = СтрЗаменить(ИмяТекОбласти, "УдалитьСтроку", "");
	
	ИмяГруппы = Лев(ИмяТекОбласти, СтруктураРеквизитовФормы.ДлинаИмениГруппы);
	
	Если НЕ СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей.Свойство(ИмяГруппы) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Не выбрана удаляемая строка многострочного раздела.'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьСтрокуЗавершение", ЭтотОбъект);
	ДопТекст = ДополнительныйТекстПриДобавленииУдаленииСтрок(ИмяГруппы);
	Если ДопТекст <> Неопределено Тогда
		ТекстВопроса = ДопТекст.ТекстВопросаПередУдалениемСтроки;
	Иначе
		ТекстВопроса = НСтр("ru='Удалить выбранную строку?'");
	КонецЕсли;
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьДопСтрокуНаСервере();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДопСтрокуНаСервере()
	
	ИмяТекОбласти = Элементы.ТабличныйДокумент.ТекущаяОбласть.Имя;
	
	УдалитьДопСтроку(ИмяТекОбласти);
	
	СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	Расчет(ЭтаФорма, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДопСтроку(ИмяОбласти)
	
	ИмяГруппы = СтрЗаменить(ИмяОбласти, "УдалитьСтроку", "");
	ИмяГруппы = Лев(ИмяГруппы, СтруктураРеквизитовФормы.ДлинаИмениГруппы);
	
	ТекКоординаты = СтрокаСКоординатамиПоказателя(ИмяОбласти);
	
	ТекИндекс_Число = ИндексПоказателя(ИмяОбласти);
	ТекИндекс = СтрокаСИндексомПоказателя(ТекИндекс_Число);
	ТекПостфикс = ИмяГруппы + ТекКоординаты + ТекИндекс;
	
	МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
	ИмяПервойГрафы = МассивИменГраф[0];
	
	ОблПервУдаляемогоПоказателя = ТабличныйДокумент.Область(ИмяПервойГрафы + ТекКоординаты + ТекИндекс);
	ОблУдалитьСтроку = ТабличныйДокумент.Область("УдалитьСтроку" + ИмяГруппы + ТекКоординаты + ТекИндекс);
	СмещениеОтВерхаМнЧ = ОблПервУдаляемогоПоказателя.Верх - ОблУдалитьСтроку.Верх;
	
	ОблДобавлениеСтроки = ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ТекПостфикс);
	
	// Удаляется последняя строка.
	//
	Если ОблДобавлениеСтроки <> Неопределено Тогда
		
		ПреИндекс_Число = ТекИндекс_Число - 1;
		ПреИндекс = СтрокаСИндексомПоказателя(ПреИндекс_Число);
		ПреПостфикс = ИмяГруппы + ТекКоординаты + ПреИндекс;
		
		ВерхУдОбласти = ОблПервУдаляемогоПоказателя.Верх - СмещениеОтВерхаМнЧ;
		НизУдОбласти  = ОблДобавлениеСтроки.Верх - 1;
		
		УдаляемаяОбласть = ТабличныйДокумент.Область(ВерхУдОбласти, , НизУдОбласти, );
		ТабличныйДокумент.УдалитьОбласть(УдаляемаяОбласть, ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		Обл = ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ТекПостфикс);
		Обл.Имя = "ДобавлениеСтроки" + ПреПостфикс;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтроку" + ТекПостфикс);
		Обл.Имя = "ДобавитьСтроку" + ПреПостфикс;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтрокуЗначок" + ТекПостфикс);
		Обл.Имя = "ДобавитьСтрокуЗначок" + ПреПостфикс;
		
		Если ПреИндекс_Число = 1 Тогда
			Обл = ТабличныйДокумент.Область("УдалитьСтроку" + ПреПостфикс);
			Обл.Гиперссылка = Ложь;
			Обл.Текст = "";
		КонецЕсли;
		
		// Изменения в оформлении ячеек в случае задания номеров специальных колонок.
		НомераСпецКолонок = Неопределено;
		СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы].Свойство(
			"КолонкиСИзмНижнГраницей", НомераСпецКолонок);
		Если НомераСпецКолонок <> Неопределено Тогда
			Для каждого НомКолонки Из НомераСпецКолонок Цикл
				// Установка линии в определенных колонках последней (после удаления) строки.
				Обл = ТабличныйДокумент.Область(
					ВерхУдОбласти - 1, НомКолонки, ВерхУдОбласти - 1, НомКолонки);
				Если Обл <> Неопределено Тогда
					Обл.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		НовИмяТекОбл = ИмяПервойГрафы + ТекКоординаты + ПреИндекс;
		Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Области[НовИмяТекОбл];
		
	// Удаляемая строка не последняя.
	//
	Иначе
		
		НовИндекс_Число = ТекИндекс_Число + 1;
		НовИндекс = СтрокаСИндексомПоказателя(НовИндекс_Число);
		
		ОблСледующегоПоказателя = ТабличныйДокумент.Область(ИмяПервойГрафы + ТекКоординаты + НовИндекс);
		
		ВерхУдОбласти = ОблПервУдаляемогоПоказателя.Верх - СмещениеОтВерхаМнЧ;
		НизУдОбласти  = ОблСледующегоПоказателя.Верх - СмещениеОтВерхаМнЧ - 1;
		
		УдаляемаяОбласть = ТабличныйДокумент.Область(ВерхУдОбласти, , НизУдОбласти, );
		
		// Сохранение свойств "эталонных" областей для последующего восстановления.
		СпОбластейДляВосстановленияПослеУдаления = Новый СписокЗначений;
		ВремТаблДок = ТабличныйДокумент.ПолучитьОбласть(УдаляемаяОбласть.Имя);
		Для каждого ЭлемСтруктуры Из СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей Цикл
			ИмяИскомойобласти = "МногострочнаяЧасть" + ЭлемСтруктуры.Ключ;
			Искомаяобласть = ВремТаблДок.Области.Найти(ИмяИскомойобласти);
			Если Искомаяобласть <> Неопределено Тогда
				ВысотаОбл = Искомаяобласть.Низ - Искомаяобласть.Верх + 1;
				СпОбластейДляВосстановленияПослеУдаления.Добавить(ВысотаОбл, ЭлемСтруктуры.Ключ);
			КонецЕсли;
		КонецЦикла;
		
		ТабличныйДокумент.УдалитьОбласть(УдаляемаяОбласть, ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		НовИндекс_Число = ТекИндекс_Число;
		
		// Реиндексация имен областей текущей многострочной части после удаления строки.
		Пока ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + ТекКоординаты
			+ СтрокаСИндексомПоказателя(НовИндекс_Число + 1)) <> Неопределено Цикл
			
			ПреИндекс = СтрокаСИндексомПоказателя(НовИндекс_Число + 1);
			НовИндекс = СтрокаСИндексомПоказателя(НовИндекс_Число);
			
			Для каждого ИмяГрафы Из МассивИменГраф Цикл
				ПреИмяОбл = ИмяГрафы + ТекКоординаты + ПреИндекс;
				НовИмяОбл = ИмяГрафы + ТекКоординаты + НовИндекс;
				
				ОбластьЯчейки = ТабличныйДокумент.Области[ПреИмяОбл];
				ОбластьЯчейки.Имя = НовИмяОбл;
			КонецЦикла;
			
			ПреПостфикс = ИмяГруппы + ТекКоординаты + ПреИндекс;
			НовПостфикс = ИмяГруппы + ТекКоординаты + НовИндекс;
			
			Обл = ТабличныйДокумент.Области.Найти("УдалитьСтроку" + ПреПостфикс);
			Обл.Имя = "УдалитьСтроку" + НовПостфикс;
			
			// Обновление координат в именах областей подчиненных многострочных частей.
			ИменаПодчиненныхГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
				ИмяГруппы]["ИменаПодчиненныхГрупп"];
			Для каждого ИмяПодчГруппы Из ИменаПодчиненныхГрупп Цикл
				ПарамРеинд = Новый Структура("ИмяГруппы,ПреКоординаты,НовКоординаты",
					ИмяПодчГруппы, ТекКоординаты + ПреИндекс, ТекКоординаты + НовИндекс);
				РеиндексироватьПодчиненныеДопСтроки(ПарамРеинд);
			КонецЦикла;
			
			НовИндекс_Число = НовИндекс_Число + 1;
			
		КонецЦикла;
		
		ПреИндекс = СтрокаСИндексомПоказателя(НовИндекс_Число);
		НовИндекс = СтрокаСИндексомПоказателя(НовИндекс_Число - 1);
		
		ПреПостфикс = ИмяГруппы + ТекКоординаты + ПреИндекс;
		НовПостфикс = ИмяГруппы + ТекКоординаты + НовИндекс;
		
		Обл = ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ПреПостфикс);
		Обл.Имя = "ДобавлениеСтроки" + НовПостфикс;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтроку" + ПреПостфикс);
		Обл.Имя = "ДобавитьСтроку" + НовПостфикс;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтрокуЗначок" + ПреПостфикс);
		Обл.Имя = "ДобавитьСтрокуЗначок" + НовПостфикс;
		
		// Восстановление удаленных "эталонных" областей по предварительно сохраненным свойствам.
		НачИндекс = "_1";
		Для каждого ЭлемСписка Из СпОбластейДляВосстановленияПослеУдаления Цикл
			НачКоординаты = "";
			УровеньПодчиненияГруппы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
				ЭлемСписка.Представление]["УровеньПодчинения"];
			
			Для НомУр = 1 По УровеньПодчиненияГруппы Цикл
				НачКоординаты = НачКоординаты + НачИндекс;
			КонецЦикла;
			
			ИмяГрафыДляПозиционирования = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
				ЭлемСписка.Представление]["ИменаГраф"][0];
			
			ИмяОбластиДляПозиционирования = ИмяГрафыДляПозиционирования + НачКоординаты + НачИндекс;
			ОбластьДляПозиционирования = ТабличныйДокумент.Область(ИмяОбластиДляПозиционирования);
			
			Если ЭлемСписка.Представление = ИмяГруппы Тогда
				ВосстОбластьВерх = ОбластьДляПозиционирования.Верх - СмещениеОтВерхаМнЧ;
			Иначе
				ВосстОбластьВерх = ОбластьДляПозиционирования.Верх;
			КонецЕсли;
			ВосстОбластьНиз  = ВосстОбластьВерх + ЭлемСписка.Значение - 1;
			
			ВосстОбласть = ТабличныйДокумент.Область(ВосстОбластьВерх, , ВосстОбластьНиз, );
			ВосстОбласть.Имя = "МногострочнаяЧасть" + ЭлемСписка.Представление;
		КонецЦикла;
		
		Если НовИндекс = НачИндекс Тогда // после удаления осталась единственная строка
			Обл = ТабличныйДокумент.Область("УдалитьСтроку" + НовПостфикс);
			Обл.Гиперссылка = Ложь;
			Обл.Текст = "";
		КонецЕсли;
		
		// Особая обработка текста в строках 020 и 110 Приложения 10 к Разделу 1.
		Если ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы110М1 Тогда
			
			Инд020 = ТекИндекс_Число;
			Инд020_Строка = СтрокаСИндексомПоказателя(Инд020);
			Обл020 = ТабличныйДокумент.Области.Найти("П00110М102001" + Инд020_Строка);
			
			Пока Обл020 <> Неопределено Цикл
				
				Обл020.Значение = Формат(Инд020, "ЧЦ=3; ЧВН=; ЧГ=");
				
				Инд110 = 1;
				Обл110 = ТабличныйДокумент.Области.Найти(
				"П00110М211001" + Инд020_Строка + СтрокаСИндексомПоказателя(Инд110));
				
				Пока Обл110 <> Неопределено Цикл
					
					Обл110.Значение = Обл020.Значение;
					
					Инд110 = Инд110 + 1;
					Обл110 = ТабличныйДокумент.Области.Найти(
					"П00110М211001" + Инд020_Строка + СтрокаСИндексомПоказателя(Инд110));
					
				КонецЦикла;
				
				Инд020 = Инд020 + 1;
				Инд020_Строка = СтрокаСИндексомПоказателя(Инд020);
				Обл020 = ТабличныйДокумент.Области.Найти("П00110М102001" + Инд020_Строка);
				
			КонецЦикла;
			
		ИначеЕсли ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы110М2 Тогда
			
			Инд020_Строка = ТекКоординаты;
			Обл020 = ТабличныйДокумент.Области.Найти("П00110М102001" + Инд020_Строка);
			
			Инд110 = ТекИндекс_Число;
			Обл110 = ТабличныйДокумент.Области.Найти(
			"П00110М211001" + Инд020_Строка + СтрокаСИндексомПоказателя(Инд110));
			
			Пока Обл110 <> Неопределено Цикл
				
				Обл110.Значение = Обл020.Значение;
				
				Инд110 = Инд110 + 1;
				Обл110 = ТабличныйДокумент.Области.Найти(
				"П00110М211001" + Инд020_Строка + СтрокаСИндексомПоказателя(Инд110));
				
			КонецЦикла;
			
		КонецЕсли;
		
		НовИмяТекОбл = ИмяПервойГрафы + ТекКоординаты + ТекИндекс;
		Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Области[НовИмяТекОбл];
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РеиндексироватьПодчиненныеДопСтроки(ПараметрыРеиндексации)
	
	ИмяГруппы = ПараметрыРеиндексации["ИмяГруппы"];
	ПреКоординаты = ПараметрыРеиндексации["ПреКоординаты"];
	НовКоординаты = ПараметрыРеиндексации["НовКоординаты"];
	
	МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
	ИмяПервойГрафы = МассивИменГраф[0];
	
	Инд_Число = 1;
	Пока ТабличныйДокумент.Области.Найти(ИмяПервойГрафы
		+ ПреКоординаты + СтрокаСИндексомПоказателя(Инд_Число)) <> Неопределено Цикл
		
		Инд = СтрокаСИндексомПоказателя(Инд_Число);
		
		Для каждого ИмяГрафы Из МассивИменГраф Цикл
			ПреИмяОбл = ИмяГрафы + ПреКоординаты + Инд;
			НовИмяОбл = ИмяГрафы + НовКоординаты + Инд;
			
			ОбластьЯчейки = ТабличныйДокумент.Области[ПреИмяОбл];
			ОбластьЯчейки.Имя = НовИмяОбл;
		КонецЦикла;
		
		ПреПостфикс = ИмяГруппы + ПреКоординаты + Инд;
		НовПостфикс = ИмяГруппы + НовКоординаты + Инд;
		
		Обл = ТабличныйДокумент.Области.Найти("УдалитьСтроку" + ПреПостфикс);
		Обл.Имя = "УдалитьСтроку" + НовПостфикс;
		
		ИменаПодчиненныхГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаПодчиненныхГрупп"];
		Для каждого ИмяПодчГруппы Из ИменаПодчиненныхГрупп Цикл
			ПарамРеинд = Новый Структура("ИмяГруппы,ПреКоординаты,НовКоординаты",
				ИмяПодчГруппы, ПреКоординаты + Инд, НовКоординаты + Инд);
			РеиндексироватьПодчиненныеДопСтроки(ПарамРеинд);
		КонецЦикла;
		
		Инд_Число = Инд_Число + 1;
		
	КонецЦикла;
	
	Инд = СтрокаСИндексомПоказателя(Инд_Число - 1);
	
	ПреПостфикс = ИмяГруппы + ПреКоординаты + Инд;
	НовПостфикс = ИмяГруппы + НовКоординаты + Инд;
	
	Обл = ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ПреПостфикс);
	Обл.Имя = "ДобавлениеСтроки" + НовПостфикс;
	Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтроку" + ПреПостфикс);
	Обл.Имя = "ДобавитьСтроку" + НовПостфикс;
	Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтрокуЗначок" + ПреПостфикс);
	Обл.Имя = "ДобавитьСтрокуЗначок" + НовПостфикс;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИндексПоказателя(Знач ИмяОбласти)
	
	МассивСтрок = СтрРазделить(ИмяОбласти, "_");
	
	КолСтрок = МассивСтрок.Количество();
	
	Если КолСтрок = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИндексСтрока = МассивСтрок[КолСтрок - 1];
	Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ИндексСтрока) Тогда
		Возврат Число(ИндексСтрока);
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтрокаСИндексомПоказателя(Знач Индекс)
	
	Если ТипЗнч(Индекс) <> Тип("Число") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат "_" + Формат(Индекс, "ЧГ=");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтрокаСКоординатамиПоказателя(Знач Координаты)
	
	СтрокаСКоординатами = "";
	
	Если ТипЗнч(Координаты) = Тип("Массив") Тогда
		Для каждого КоординатаЧисло Из Координаты Цикл
			Если ТипЗнч(КоординатаЧисло) <> Тип("Число") Тогда
				Возврат Неопределено;
			КонецЕсли;
			СтрокаСКоординатами = СтрокаСКоординатами + "_" + Формат(КоординатаЧисло, "ЧГ=");
		КонецЦикла;
	ИначеЕсли ТипЗнч(Координаты) = Тип("Строка") Тогда
		МассивСтрок = СтрРазделить(Координаты, "_");
		КолСтрок = МассивСтрок.Количество();
		Если КолСтрок = 0 Тогда
			Возврат Неопределено;
		КонецЕсли;
		МассивСтрок.Удалить(КолСтрок - 1);
		МассивСтрок.Удалить(0);
		Для каждого КоординатаСтрока Из МассивСтрок Цикл
			Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(КоординатаСтрока) Тогда
				СтрокаСКоординатами = СтрокаСКоординатами + "_" + Формат(КоординатаСтрока, "ЧГ=");
			Иначе
				Возврат Неопределено;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат СтрокаСКоординатами;
	
КонецФункции

#КонецОбласти

#Область Авторасчет

&НаКлиенте
Процедура РасчетНаКлиенте(ИмяТекущейСтраницыПанели = "", ОбластьИмя = "") Экспорт
	
	Расчет(ЭтаФорма, ИмяТекущейСтраницыПанели, ОбластьИмя);
	
КонецПроцедуры

&НаСервере
Процедура РасчетНаСервере(ИмяТекущейСтраницыПанели = "", ОбластьИмя = "") Экспорт
	
	Расчет(ЭтаФорма, ИмяТекущейСтраницыПанели, ОбластьИмя);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура Расчет(Форма, ИмяРаздела = "", ОбластьИмя = "") Экспорт
	
	Перем ТаблицаБлока;
	
	Если Форма.СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяРаздела = "Раздел1" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
					
					ОбластьИмяБезИнд = Лев(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
					_Инд = Сред(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы + 1);
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000010003001, ОбластьИмяБезИнд) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П000010003001"].Значение
						= Форма.ТабличныйДокумент.Области["П000010003101"].Значение
						+ Форма.ТабличныйДокумент.Области["П000010003201"].Значение
						+ Форма.ТабличныйДокумент.Области["П000010003301"].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000010005001, ОбластьИмяБезИнд) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П000010005001"].Значение
						= Форма.ТабличныйДокумент.Области["П000010005101"].Значение
						+ Форма.ТабличныйДокумент.Области["П000010005201"].Значение
						+ Форма.ТабличныйДокумент.Области["П000010005301"].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00001М107001, ОбластьИмяБезИнд) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П00001М107001" + _Инд].Значение
						= Форма.ТабличныйДокумент.Области["П00001М107101" + _Инд].Значение
						+ Форма.ТабличныйДокумент.Области["П00001М107201" + _Инд].Значение
						+ Форма.ТабличныйДокумент.Области["П00001М107301" + _Инд].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00001М209001, ОбластьИмяБезИнд) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П00001М209001" + _Инд].Значение
						= Форма.ТабличныйДокумент.Области["П00001М209101" + _Инд].Значение
						+ Форма.ТабличныйДокумент.Области["П00001М209201" + _Инд].Значение
						+ Форма.ТабличныйДокумент.Области["П00001М209301" + _Инд].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000010011001, ОбластьИмяБезИнд) > 0
						ИЛИ СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000010012001, ОбластьИмяБезИнд) > 0 Тогда
						
						ПромежуточнаяСумма
						= Форма.ТабличныйДокумент.Области["П000010011101"].Значение
						+ Форма.ТабличныйДокумент.Области["П000010011201"].Значение
						+ Форма.ТабличныйДокумент.Области["П000010011301"].Значение
						- Форма.ТабличныйДокумент.Области["П000010012101"].Значение
						- Форма.ТабличныйДокумент.Области["П000010012201"].Значение
						- Форма.ТабличныйДокумент.Области["П000010012301"].Значение;
						
						Форма.ТабличныйДокумент.Области["П000010011001"].Значение
						= Макс(ПромежуточнаяСумма, 0);
						
						Форма.ТабличныйДокумент.Области["П000010012001"].Значение
						= - Мин(ПромежуточнаяСумма, 0);
						
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_1и1_2" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110003002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011110003002"].Значение
					= Форма.ТабличныйДокумент.Области["П011110003003"].Значение
					+ Форма.ТабличныйДокумент.Области["П011110003004"].Значение
					+ Форма.ТабличныйДокумент.Области["П011110003005"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110004002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011110004002"].Значение
					= Форма.ТабличныйДокумент.Области["П011110004003"].Значение
					+ Форма.ТабличныйДокумент.Области["П011110004004"].Значение
					+ Форма.ТабличныйДокумент.Области["П011110004005"].Значение;
				КонецЕсли;
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110003001, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П011110003001"].Значение
						= Форма.ТабличныйДокумент.Области["П011110003002"].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110004001, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П011110004001"].Значение
						= Форма.ТабличныйДокумент.Области["П011110004002"].Значение;
					КонецЕсли;
					
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110005001, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011110005001"].Значение
					= Форма.ТабличныйДокумент.Области["П011110003001"].Значение
					- Форма.ТабличныйДокумент.Области["П011110004001"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110005002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011110005002"].Значение
					= Форма.ТабличныйДокумент.Области["П011110003002"].Значение
					- Форма.ТабличныйДокумент.Области["П011110004002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110005003, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011110005003"].Значение
					= Форма.ТабличныйДокумент.Области["П011110003003"].Значение
					- Форма.ТабличныйДокумент.Области["П011110004003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110005004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011110005004"].Значение
					= Форма.ТабличныйДокумент.Области["П011110003004"].Значение
					- Форма.ТабличныйДокумент.Области["П011110004004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110005005, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011110005005"].Значение
					= Форма.ТабличныйДокумент.Области["П011110003005"].Значение
					- Форма.ТабличныйДокумент.Области["П011110004005"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110005102, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011110005102"].Значение
					= Форма.ТабличныйДокумент.Области["П011110005103"].Значение
					+ Форма.ТабличныйДокумент.Области["П011110005104"].Значение
					+ Форма.ТабличныйДокумент.Области["П011110005105"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110006102, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011110006102"].Значение
					= Форма.ТабличныйДокумент.Области["П011110006103"].Значение
					+ Форма.ТабличныйДокумент.Области["П011110006104"].Значение
					+ Форма.ТабличныйДокумент.Области["П011110006105"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110006202, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011110006202"].Значение
					= Форма.ТабличныйДокумент.Области["П011110006203"].Значение
					+ Форма.ТабличныйДокумент.Области["П011110006204"].Значение
					+ Форма.ТабличныйДокумент.Области["П011110006205"].Значение;
				КонецЕсли;
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110006101, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П011110006101"].Значение
						= Форма.ТабличныйДокумент.Области["П011110006102"].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110006201, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П011110006201"].Значение
						= Форма.ТабличныйДокумент.Области["П011110006202"].Значение;
					КонецЕсли;
					
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110006001, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011110006001"].Значение
					= Форма.ТабличныйДокумент.Области["П011110006101"].Значение
					+ Форма.ТабличныйДокумент.Области["П011110006201"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110006002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011110006002"].Значение
					= Форма.ТабличныйДокумент.Области["П011110006102"].Значение
					+ Форма.ТабличныйДокумент.Области["П011110006202"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110006003, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011110006003"].Значение
					= Форма.ТабличныйДокумент.Области["П011110006103"].Значение
					+ Форма.ТабличныйДокумент.Области["П011110006203"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110006004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011110006004"].Значение
					= Форма.ТабличныйДокумент.Области["П011110006104"].Значение
					+ Форма.ТабличныйДокумент.Области["П011110006204"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110006005, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011110006005"].Значение
					= Форма.ТабличныйДокумент.Области["П011110006105"].Значение
					+ Форма.ТабличныйДокумент.Области["П011110006205"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120003002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011120003002"].Значение
					= Форма.ТабличныйДокумент.Области["П011120003003"].Значение
					+ Форма.ТабличныйДокумент.Области["П011120003004"].Значение
					+ Форма.ТабличныйДокумент.Области["П011120003005"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120004002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011120004002"].Значение
					= Форма.ТабличныйДокумент.Области["П011120004003"].Значение
					+ Форма.ТабличныйДокумент.Области["П011120004004"].Значение
					+ Форма.ТабличныйДокумент.Области["П011120004005"].Значение;
				КонецЕсли;
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120003001, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П011120003001"].Значение
						= Форма.ТабличныйДокумент.Области["П011120003002"].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120004001, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П011120004001"].Значение
						= Форма.ТабличныйДокумент.Области["П011120004002"].Значение;
					КонецЕсли;
					
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120005001, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011120005001"].Значение
					= Форма.ТабличныйДокумент.Области["П011120003001"].Значение
					- Форма.ТабличныйДокумент.Области["П011120004001"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120005002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011120005002"].Значение
					= Форма.ТабличныйДокумент.Области["П011120003002"].Значение
					- Форма.ТабличныйДокумент.Области["П011120004002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120005003, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011120005003"].Значение
					= Форма.ТабличныйДокумент.Области["П011120003003"].Значение
					- Форма.ТабличныйДокумент.Области["П011120004003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120005004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011120005004"].Значение
					= Форма.ТабличныйДокумент.Области["П011120003004"].Значение
					- Форма.ТабличныйДокумент.Области["П011120004004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120005005, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011120005005"].Значение
					= Форма.ТабличныйДокумент.Области["П011120003005"].Значение
					- Форма.ТабличныйДокумент.Области["П011120004005"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120006002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П011120006002"].Значение
					= Форма.ТабличныйДокумент.Области["П011120006003"].Значение
					+ Форма.ТабличныйДокумент.Области["П011120006004"].Значение
					+ Форма.ТабличныйДокумент.Области["П011120006005"].Значение;
				КонецЕсли;
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110005101, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П011110005101"].Значение
						= Форма.ТабличныйДокумент.Области["П011110005102"].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120006001, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П011120006001"].Значение
						= Форма.ТабличныйДокумент.Области["П011120006002"].Значение;
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_3_1" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				ОбластьИмяБезИнд = Лев(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
				_Инд = Сред(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы + 1);
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М102002, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П11131М102002" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П11131М102003" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П11131М102004" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П11131М102005" + _Инд].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М103002, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П11131М103002" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П11131М103003" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П11131М103004" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П11131М103005" + _Инд].Значение;
				КонецЕсли;
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М102001, ОбластьИмяБезИнд) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П11131М102001" + _Инд].Значение
						= Форма.ТабличныйДокумент.Области["П11131М102002" + _Инд].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М103001, ОбластьИмяБезИнд) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П11131М103001" + _Инд].Значение
						= Форма.ТабличныйДокумент.Области["П11131М103002" + _Инд].Значение;
					КонецЕсли;
					
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М104001, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П11131М104001" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П11131М102001" + _Инд].Значение
					- Форма.ТабличныйДокумент.Области["П11131М103001" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М104002, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П11131М104002" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П11131М102002" + _Инд].Значение
					- Форма.ТабличныйДокумент.Области["П11131М103002" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М104003, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П11131М104003" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П11131М102003" + _Инд].Значение
					- Форма.ТабличныйДокумент.Области["П11131М103003" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М104004, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П11131М104004" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П11131М102004" + _Инд].Значение
					- Форма.ТабличныйДокумент.Области["П11131М103004" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М104005, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П11131М104005" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П11131М102005" + _Инд].Значение
					- Форма.ТабличныйДокумент.Области["П11131М103005" + _Инд].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М105002, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П11131М105002" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П11131М105003" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П11131М105004" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П11131М105005" + _Инд].Значение;
				КонецЕсли;
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М105001, ОбластьИмяБезИнд) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П11131М105001" + _Инд].Значение
						= Форма.ТабличныйДокумент.Области["П11131М105002" + _Инд].Значение;
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_3_2" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				ОбластьИмяБезИнд = Лев(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
				_Инд = Сред(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы + 1);
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М102002, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П11132М102002" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П11132М102003" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П11132М102004" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П11132М102005" + _Инд].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М103002, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П11132М103002" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П11132М103003" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П11132М103004" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П11132М103005" + _Инд].Значение;
				КонецЕсли;
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М102001, ОбластьИмяБезИнд) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П11132М102001" + _Инд].Значение
						= Форма.ТабличныйДокумент.Области["П11132М102002" + _Инд].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М103001, ОбластьИмяБезИнд) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П11132М103001" + _Инд].Значение
						= Форма.ТабличныйДокумент.Области["П11132М103002" + _Инд].Значение;
					КонецЕсли;
					
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М104001, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П11132М104001" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П11132М102001" + _Инд].Значение
					- Форма.ТабличныйДокумент.Области["П11132М103001" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М104002, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П11132М104002" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П11132М102002" + _Инд].Значение
					- Форма.ТабличныйДокумент.Области["П11132М103002" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М104003, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П11132М104003" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П11132М102003" + _Инд].Значение
					- Форма.ТабличныйДокумент.Области["П11132М103003" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М104004, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П11132М104004" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П11132М102004" + _Инд].Значение
					- Форма.ТабличныйДокумент.Области["П11132М103004" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М104005, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П11132М104005" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П11132М102005" + _Инд].Значение
					- Форма.ТабличныйДокумент.Области["П11132М103005" + _Инд].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М105002, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П11132М105002" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П11132М105003" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П11132М105004" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П11132М105005" + _Инд].Значение;
				КонецЕсли;
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М105001, ОбластьИмяБезИнд) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П11132М105001" + _Инд].Значение
						= Форма.ТабличныйДокумент.Области["П11132М105002" + _Инд].Значение;
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_4" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				ОбластьИмяБезИнд = Лев(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
				_Инд = Сред(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы + 1);
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П01114М102002, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П01114М102002" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П01114М102003" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П01114М102004" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П01114М102005" + _Инд].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П01114М103002, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П01114М103002" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П01114М103003" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П01114М103004" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П01114М103005" + _Инд].Значение;
				КонецЕсли;
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П01114М102001, ОбластьИмяБезИнд) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П01114М102001" + _Инд].Значение
						= Форма.ТабличныйДокумент.Области["П01114М102002" + _Инд].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П01114М103001, ОбластьИмяБезИнд) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П01114М103001" + _Инд].Значение
						= Форма.ТабличныйДокумент.Области["П01114М103002" + _Инд].Значение;
					КонецЕсли;
					
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П01114М104001, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П01114М104001" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П01114М102001" + _Инд].Значение
					- Форма.ТабличныйДокумент.Области["П01114М103001" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П01114М104002, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П01114М104002" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П01114М102002" + _Инд].Значение
					- Форма.ТабличныйДокумент.Области["П01114М103002" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П01114М104003, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П01114М104003" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П01114М102003" + _Инд].Значение
					- Форма.ТабличныйДокумент.Области["П01114М103003" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П01114М104004, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П01114М104004" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П01114М102004" + _Инд].Значение
					- Форма.ТабличныйДокумент.Области["П01114М103004" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П01114М104005, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П01114М104005" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П01114М102005" + _Инд].Значение
					- Форма.ТабличныйДокумент.Области["П01114М103005" + _Инд].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П01114М105002, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П01114М105002" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П01114М105003" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П01114М105004" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П01114М105005" + _Инд].Значение;
				КонецЕсли;
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П01114М105001, ОбластьИмяБезИнд) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П01114М105001" + _Инд].Значение
						= Форма.ТабличныйДокумент.Области["П01114М105002" + _Инд].Значение;
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил2" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120002002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120002002"].Значение
					= Форма.ТабличныйДокумент.Области["П000120002003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120002004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120002005"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120003002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120003002"].Значение
					= Форма.ТабличныйДокумент.Области["П000120003003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120003004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120003005"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120004002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120004002"].Значение
					= Форма.ТабличныйДокумент.Области["П000120004003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120004004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120004005"].Значение;
				КонецЕсли;
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120002001, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П000120002001"].Значение
						= Форма.ТабличныйДокумент.Области["П000120002002"].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120003001, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П000120003001"].Значение
						= Форма.ТабличныйДокумент.Области["П000120003002"].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120004001, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П000120004001"].Значение
						= Форма.ТабличныйДокумент.Области["П000120004002"].Значение;
					КонецЕсли;
					
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120005001, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120005001"].Значение
					= Форма.ТабличныйДокумент.Области["П000120002001"].Значение
					- Форма.ТабличныйДокумент.Области["П000120003001"].Значение
					- Форма.ТабличныйДокумент.Области["П000120004001"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120005002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120005002"].Значение
					= Форма.ТабличныйДокумент.Области["П000120002002"].Значение
					- Форма.ТабличныйДокумент.Области["П000120003002"].Значение
					- Форма.ТабличныйДокумент.Области["П000120004002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120005003, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120005003"].Значение
					= Форма.ТабличныйДокумент.Области["П000120002003"].Значение
					- Форма.ТабличныйДокумент.Области["П000120003003"].Значение
					- Форма.ТабличныйДокумент.Области["П000120004003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120005004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120005004"].Значение
					= Форма.ТабличныйДокумент.Области["П000120002004"].Значение
					- Форма.ТабличныйДокумент.Области["П000120003004"].Значение
					- Форма.ТабличныйДокумент.Области["П000120004004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120005005, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120005005"].Значение
					= Форма.ТабличныйДокумент.Области["П000120002005"].Значение
					- Форма.ТабличныйДокумент.Области["П000120003005"].Значение
					- Форма.ТабличныйДокумент.Области["П000120004005"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120005102, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120005102"].Значение
					= Форма.ТабличныйДокумент.Области["П000120005103"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120005104"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120005105"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120005202, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120005202"].Значение
					= Форма.ТабличныйДокумент.Области["П000120005203"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120005204"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120005205"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120005302, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120005302"].Значение
					= Форма.ТабличныйДокумент.Области["П000120005303"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120005304"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120005305"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120005402, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120005402"].Значение
					= Форма.ТабличныйДокумент.Области["П000120005403"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120005404"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120005405"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120006002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120006002"].Значение
					= Форма.ТабличныйДокумент.Области["П000120006003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120006004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120006005"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120007002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120007002"].Значение
					= Форма.ТабличныйДокумент.Области["П000120007003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120007004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120007005"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120008002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120008002"].Значение
					= Форма.ТабличныйДокумент.Области["П000120008003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120008004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000120008005"].Значение;
				КонецЕсли;
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120006001, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П000120006001"].Значение
						= Форма.ТабличныйДокумент.Области["П000120006002"].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120007001, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П000120007001"].Значение
						= Форма.ТабличныйДокумент.Области["П000120007002"].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120008001, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П000120008001"].Значение
						= Форма.ТабличныйДокумент.Области["П000120008002"].Значение;
					КонецЕсли;
					
				КонецЕсли;
				
				Сумма090 = Форма.ТабличныйДокумент.Области["П000120006001"].Значение
						 - Форма.ТабличныйДокумент.Области["П000120007001"].Значение
						 + Форма.ТабличныйДокумент.Области["П000120008001"].Значение;
				Если Сумма090 < 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120009001"].Значение = "2";
					Форма.ТабличныйДокумент.Области["П000120009002"].Значение = - Сумма090;
				Иначе
					Форма.ТабличныйДокумент.Области["П000120009001"].Значение = "1";
					Форма.ТабличныйДокумент.Области["П000120009002"].Значение = Сумма090;
				КонецЕсли;
				Сумма090 = Форма.ТабличныйДокумент.Области["П000120006002"].Значение
						 - Форма.ТабличныйДокумент.Области["П000120007002"].Значение
						 + Форма.ТабличныйДокумент.Области["П000120008002"].Значение;
				Если Сумма090 < 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120009003"].Значение = "2";
					Форма.ТабличныйДокумент.Области["П000120009004"].Значение = - Сумма090;
				Иначе
					Форма.ТабличныйДокумент.Области["П000120009003"].Значение = "1";
					Форма.ТабличныйДокумент.Области["П000120009004"].Значение = Сумма090;
				КонецЕсли;
				Сумма090 = Форма.ТабличныйДокумент.Области["П000120006003"].Значение
						 - Форма.ТабличныйДокумент.Области["П000120007003"].Значение
						 + Форма.ТабличныйДокумент.Области["П000120008003"].Значение;
				Если Сумма090 < 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120009005"].Значение = "2";
					Форма.ТабличныйДокумент.Области["П000120009006"].Значение = - Сумма090;
				Иначе
					Форма.ТабличныйДокумент.Области["П000120009005"].Значение = "1";
					Форма.ТабличныйДокумент.Области["П000120009006"].Значение = Сумма090;
				КонецЕсли;
				Сумма090 = Форма.ТабличныйДокумент.Области["П000120006004"].Значение
						 - Форма.ТабличныйДокумент.Области["П000120007004"].Значение
						 + Форма.ТабличныйДокумент.Области["П000120008004"].Значение;
				Если Сумма090 < 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120009007"].Значение = "2";
					Форма.ТабличныйДокумент.Области["П000120009008"].Значение = - Сумма090;
				Иначе
					Форма.ТабличныйДокумент.Области["П000120009007"].Значение = "1";
					Форма.ТабличныйДокумент.Области["П000120009008"].Значение = Сумма090;
				КонецЕсли;
				Сумма090 = Форма.ТабличныйДокумент.Области["П000120006005"].Значение
						 - Форма.ТабличныйДокумент.Области["П000120007005"].Значение
						 + Форма.ТабличныйДокумент.Области["П000120008005"].Значение;
				Если Сумма090 < 0 Тогда
					Форма.ТабличныйДокумент.Области["П000120009009"].Значение = "2";
					Форма.ТабличныйДокумент.Области["П000120009010"].Значение = - Сумма090;
				Иначе
					Форма.ТабличныйДокумент.Области["П000120009009"].Значение = "1";
					Форма.ТабличныйДокумент.Области["П000120009010"].Значение = Сумма090;
				КонецЕсли;
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120005101, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П000120005101"].Значение
						= Форма.ТабличныйДокумент.Области["П000120005102"].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120005201, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П000120005201"].Значение
						= Форма.ТабличныйДокумент.Области["П000120005202"].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120005301, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П000120005301"].Значение
						= Форма.ТабличныйДокумент.Области["П000120005302"].Значение;
					КонецЕсли;
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120005401, ОбластьИмя) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П000120005401"].Значение
						= Форма.ТабличныйДокумент.Области["П000120005402"].Значение;
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил3" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000130006002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000130006002"].Значение
					= Форма.ТабличныйДокумент.Области["П000130006102"].Значение
					+ Форма.ТабличныйДокумент.Области["П000130006202"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000130006003, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000130006003"].Значение
					= Форма.ТабличныйДокумент.Области["П000130006103"].Значение
					+ Форма.ТабличныйДокумент.Области["П000130006203"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000130006004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000130006004"].Значение
					= Форма.ТабличныйДокумент.Области["П000130006104"].Значение
					+ Форма.ТабличныйДокумент.Области["П000130006204"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000130010003, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000130010003"].Значение
					= Форма.ТабличныйДокумент.Области["П000130001003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000130002003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000130003003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000130004003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000130005003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000130006003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000130007003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000130008003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000130009003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000130010004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000130010004"].Значение
					= Форма.ТабличныйДокумент.Области["П000130001004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000130003004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000130006004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000130007004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000130008004"].Значение;
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил4" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140004003, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140004003"].Значение
					= Форма.ТабличныйДокумент.Области["П000140005003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140006003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140004004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140004004"].Значение
					= Форма.ТабличныйДокумент.Области["П000140005004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140006004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140001002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140001002"].Значение
					= Форма.ТабличныйДокумент.Области["П000140002002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140003002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140004002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140001004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140001004"].Значение
					= Форма.ТабличныйДокумент.Области["П000140002004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140003004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140004004"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140010003, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140010003"].Значение
					= Форма.ТабличныйДокумент.Области["П000140011003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140012003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140010004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140010004"].Значение
					= Форма.ТабличныйДокумент.Области["П000140011004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140012004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140007002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140007002"].Значение
					= Форма.ТабличныйДокумент.Области["П000140008002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140009002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140010002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140007004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140007004"].Значение
					= Форма.ТабличныйДокумент.Области["П000140008004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140009004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140010004"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140013002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140013002"].Значение
					= Форма.ТабличныйДокумент.Области["П000140014002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140013004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140013004"].Значение
					= Форма.ТабличныйДокумент.Области["П000140014004"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140018003, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140018003"].Значение
					= Форма.ТабличныйДокумент.Области["П000140019003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140020003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140018004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140018004"].Значение
					= Форма.ТабличныйДокумент.Области["П000140019004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140020004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140015002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140015002"].Значение
					= Форма.ТабличныйДокумент.Области["П000140016002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140017002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140018002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140015004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140015004"].Значение
					= Форма.ТабличныйДокумент.Области["П000140016004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140017004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140018004"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140021002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140021002"].Значение
					= Форма.ТабличныйДокумент.Области["П000140022002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140023002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140021004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140021004"].Значение
					= Форма.ТабличныйДокумент.Области["П000140022004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140023004"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140029002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140029002"].Значение
					= Форма.ТабличныйДокумент.Области["П000140006002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140012002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140020002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140029003, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140029003"].Значение
					= Форма.ТабличныйДокумент.Области["П000140006003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140012003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140020003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140029004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140029004"].Значение
					= Форма.ТабличныйДокумент.Области["П000140006004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140012004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140020004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140028002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140028002"].Значение
					= Форма.ТабличныйДокумент.Области["П000140005002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140011002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140019002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140028003, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140028003"].Значение
					= Форма.ТабличныйДокумент.Области["П000140005003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140011003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140019003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140028004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140028004"].Значение
					= Форма.ТабличныйДокумент.Области["П000140005004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140011004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140019004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140027002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140027002"].Значение
					= Форма.ТабличныйДокумент.Области["П000140004002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140010002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140018002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140027003, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140027003"].Значение
					= Форма.ТабличныйДокумент.Области["П000140028003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140029003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140027004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140027004"].Значение
					= Форма.ТабличныйДокумент.Области["П000140028004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140029004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140026002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140026002"].Значение
					= Форма.ТабличныйДокумент.Области["П000140003002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140009002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140017002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140023002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140026003, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140026003"].Значение
					= Форма.ТабличныйДокумент.Области["П000140003003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140009003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140017003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140023003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140026004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140026004"].Значение
					= Форма.ТабличныйДокумент.Области["П000140003004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140009004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140017004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140023004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140025002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140025002"].Значение
					= Форма.ТабличныйДокумент.Области["П000140002002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140008002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140014002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140016002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140022002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140025003, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140025003"].Значение
					= Форма.ТабличныйДокумент.Области["П000140002003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140008003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140014003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140016003"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140022003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140025004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140025004"].Значение
					= Форма.ТабличныйДокумент.Области["П000140002004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140008004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140014004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140016004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140022004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140024002, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140024002"].Значение
					= Форма.ТабличныйДокумент.Области["П000140025002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140026002"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140027002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140024004, ОбластьИмя) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П000140024004"].Значение
					= Форма.ТабличныйДокумент.Области["П000140025004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140026004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140027004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140030004"].Значение
					+ Форма.ТабличныйДокумент.Области["П000140031004"].Значение;
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил5_6" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000150004002, ОбластьИмя) > 0 Тогда
					Знаменатель = Форма.ТабличныйДокумент.Области["П000150002002"].Значение;
					Если Знаменатель = 0 Тогда
						Форма.ТабличныйДокумент.Области["П000150004002"].Значение = 0;
					Иначе
						Форма.ТабличныйДокумент.Области["П000150004002"].Значение
						= Форма.ТабличныйДокумент.Области["П000150003002"].Значение
						/ Знаменатель * 100;
					КонецЕсли;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000150004003, ОбластьИмя) > 0 Тогда
					Знаменатель = Форма.ТабличныйДокумент.Области["П000150002003"].Значение;
					Если Знаменатель = 0 Тогда
						Форма.ТабличныйДокумент.Области["П000150004003"].Значение = 0;
					Иначе
						Форма.ТабличныйДокумент.Области["П000150004003"].Значение
						= Форма.ТабличныйДокумент.Области["П000150003003"].Значение
						/ Знаменатель * 100;
					КонецЕсли;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000160008002, ОбластьИмя) > 0 Тогда
					Знаменатель = Форма.ТабличныйДокумент.Области["П000160006002"].Значение;
					Если Знаменатель = 0 Тогда
						Форма.ТабличныйДокумент.Области["П000160008002"].Значение = 0;
					Иначе
						Форма.ТабличныйДокумент.Области["П000160008002"].Значение
						= Форма.ТабличныйДокумент.Области["П000160007002"].Значение
						/ Знаменатель * 100;
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил7" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000170005001, ОбластьИмя) > 0 Тогда
					Знаменатель = Форма.ТабличныйДокумент.Области["П000170001001"].Значение;
					Если Знаменатель = 0 Тогда
						Форма.ТабличныйДокумент.Области["П000170005001"].Значение = 0;
					Иначе
						Форма.ТабличныйДокумент.Области["П000170005001"].Значение
						= (Форма.ТабличныйДокумент.Области["П000170002001"].Значение
						+ Форма.ТабличныйДокумент.Области["П000170003001"].Значение
						+ Форма.ТабличныйДокумент.Области["П000170004001"].Значение)
						/ Знаменатель * 100;
					КонецЕсли;
				КонецЕсли;
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 12 Тогда
					
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000170005002, ОбластьИмя) > 0 Тогда
						Знаменатель = Форма.ТабличныйДокумент.Области["П000170001002"].Значение;
						Если Знаменатель = 0 Тогда
							Форма.ТабличныйДокумент.Области["П000170005002"].Значение = 0;
						Иначе
							Форма.ТабличныйДокумент.Области["П000170005002"].Значение
							= (Форма.ТабличныйДокумент.Области["П000170002002"].Значение
							+ Форма.ТабличныйДокумент.Области["П000170003002"].Значение
							+ Форма.ТабличныйДокумент.Области["П000170004002"].Значение)
							/ Знаменатель * 100;
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил8" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				ОбластьИмяБезИнд = Лев(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
				_Инд = Сред(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы + 1);
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00018М106002, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П00018М106002" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П00018М106003" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П00018М106004" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П00018М106005" + _Инд].Значение;
				КонецЕсли;
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00018М106001, ОбластьИмяБезИнд) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П00018М106001" + _Инд].Значение
						= Форма.ТабличныйДокумент.Области["П00018М106002" + _Инд].Значение;
					КонецЕсли;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.Итого, ОбластьИмяБезИнд) > 0 Тогда
					П000180001001 = 0;
					П000180001002 = 0;
					П000180001003 = 0;
					П000180001004 = 0;
					П000180001005 = 0;
					Инд = 1;
					Инд_Строка = СтрокаСИндексомПоказателя(Инд);
					Обл = Форма.ТабличныйДокумент.Области.Найти("П00018М106001" + Инд_Строка);
					Пока Обл <> Неопределено Цикл
						П000180001001 = П000180001001 + Обл.Значение;
						П000180001002 = П000180001002 + Форма.ТабличныйДокумент.Области.Найти("П00018М106002" + Инд_Строка).Значение;
						П000180001003 = П000180001003 + Форма.ТабличныйДокумент.Области.Найти("П00018М106003" + Инд_Строка).Значение;
						П000180001004 = П000180001004 + Форма.ТабличныйДокумент.Области.Найти("П00018М106004" + Инд_Строка).Значение;
						П000180001005 = П000180001005 + Форма.ТабличныйДокумент.Области.Найти("П00018М106005" + Инд_Строка).Значение;
						Инд = Инд + 1;
						Инд_Строка = СтрокаСИндексомПоказателя(Инд);
						Обл = Форма.ТабличныйДокумент.Области.Найти("П00018М106001" + Инд_Строка);
					КонецЦикла;
					Форма.ТабличныйДокумент.Области.Найти("П000180001001").Значение = П000180001001;
					Форма.ТабличныйДокумент.Области.Найти("П000180001002").Значение = П000180001002;
					Форма.ТабличныйДокумент.Области.Найти("П000180001003").Значение = П000180001003;
					Форма.ТабличныйДокумент.Области.Найти("П000180001004").Значение = П000180001004;
					Форма.ТабличныйДокумент.Области.Найти("П000180001005").Значение = П000180001005;
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил9" Тогда
		
		РасчетВДеревеЗначений(Форма, ИмяРаздела);
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил10" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				ОбластьИмяБезИнд = Лев(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
				_Инд = Сред(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы + 1);
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00110М110002, ОбластьИмяБезИнд) > 0 Тогда
					Форма.ТабличныйДокумент.Области["П00110М110002" + _Инд].Значение
					= Форма.ТабличныйДокумент.Области["П00110М110003" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П00110М110004" + _Инд].Значение
					+ Форма.ТабличныйДокумент.Области["П00110М110005" + _Инд].Значение;
				КонецЕсли;
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00110М110001, ОбластьИмяБезИнд) > 0 Тогда
						Форма.ТабличныйДокумент.Области["П00110М110001" + _Инд].Значение
						= Форма.ТабличныйДокумент.Области["П00110М110002" + _Инд].Значение;
					КонецЕсли;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.Итого, ОбластьИмяБезИнд) > 0 Тогда
					П001100001001 = 0;
					П001100001002 = 0;
					П001100001003 = 0;
					П001100001004 = 0;
					П001100001005 = 0;
					Инд = 1;
					Инд_Строка = СтрокаСИндексомПоказателя(Инд);
					Обл = Форма.ТабличныйДокумент.Области.Найти("П00110М110001" + Инд_Строка);
					Пока Обл <> Неопределено Цикл
						П001100001001 = П001100001001 + Обл.Значение;
						П001100001002 = П001100001002 + Форма.ТабличныйДокумент.Области.Найти("П00110М110002" + Инд_Строка).Значение;
						П001100001003 = П001100001003 + Форма.ТабличныйДокумент.Области.Найти("П00110М110003" + Инд_Строка).Значение;
						П001100001004 = П001100001004 + Форма.ТабличныйДокумент.Области.Найти("П00110М110004" + Инд_Строка).Значение;
						П001100001005 = П001100001005 + Форма.ТабличныйДокумент.Области.Найти("П00110М110005" + Инд_Строка).Значение;
						Инд = Инд + 1;
						Инд_Строка = СтрокаСИндексомПоказателя(Инд);
						Обл = Форма.ТабличныйДокумент.Области.Найти("П00110М110001" + Инд_Строка);
					КонецЦикла;
					Форма.ТабличныйДокумент.Области.Найти("П001100001001").Значение = П001100001001;
					Форма.ТабличныйДокумент.Области.Найти("П001100001002").Значение = П001100001002;
					Форма.ТабличныйДокумент.Области.Найти("П001100001003").Значение = П001100001003;
					Форма.ТабличныйДокумент.Области.Найти("П001100001004").Значение = П001100001004;
					Форма.ТабличныйДокумент.Области.Найти("П001100001005").Значение = П001100001005;
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел2" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				ОбластьИмяБезИнд = Лев(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.Итого, ОбластьИмяБезИнд) > 0 Тогда
					П000020003001 = 0;
					П000020005001 = 0;
					Инд = 1;
					Инд_Строка = СтрокаСИндексомПоказателя(Инд);
					Обл = Форма.ТабличныйДокумент.Области.Найти("П00021М109001" + Инд_Строка);
					Пока Обл <> Неопределено Цикл
						П000020003001 = П000020003001 + Обл.Значение;
						П000020005001 = П000020005001 + Форма.ТабличныйДокумент.Области.Найти("П00021М109002" + Инд_Строка).Значение;
						Инд = Инд + 1;
						Инд_Строка = СтрокаСИндексомПоказателя(Инд);
						Обл = Форма.ТабличныйДокумент.Области.Найти("П00021М109001" + Инд_Строка);
					КонецЦикла;
					Форма.ТабличныйДокумент.Области.Найти("П000020003001").Значение = П000020003001;
					Форма.ТабличныйДокумент.Области.Найти("П000020005001").Значение = П000020005001;
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				ОбластьИмяБезИнд = Лев(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
				_Инд = Сред(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы + 1);
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.Итого280, ОбластьИмяБезИнд) > 0 Тогда
					П003210025001 = 0;
					П003210025002 = 0;
					П003210025003 = 0;
					П003210025004 = 0;
					Инд = 1;
					Инд_Строка = СтрокаСИндексомПоказателя(Инд);
					Обл = Форма.ТабличныйДокумент.Области.Найти("П00321М121001" + Инд_Строка);
					Пока Обл <> Неопределено Цикл
						П003210025001 = П003210025001 + Обл.Значение;
						П003210025002 = П003210025002 + Форма.ТабличныйДокумент.Области.Найти("П00321М122001" + Инд_Строка).Значение;
						П003210025003 = П003210025003 + Форма.ТабличныйДокумент.Области.Найти("П00321М123001" + Инд_Строка).Значение;
						П003210025004 = П003210025004 + Форма.ТабличныйДокумент.Области.Найти("П00321М124001" + Инд_Строка).Значение;
						Инд = Инд + 1;
						Инд_Строка = СтрокаСИндексомПоказателя(Инд);
						Обл = Форма.ТабличныйДокумент.Области.Найти("П00321М121001" + Инд_Строка);
					КонецЦикла;
					Форма.ТабличныйДокумент.Области.Найти("П003210025001").Значение = П003210025001;
					Форма.ТабличныйДокумент.Области.Найти("П003210025002").Значение = П003210025002;
					Форма.ТабличныйДокумент.Области.Найти("П003210025003").Значение = П003210025003;
					Форма.ТабличныйДокумент.Области.Найти("П003210025004").Значение = П003210025004;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.Итого330, ОбластьИмяБезИнд) > 0 Тогда
					П003220030001 = 0;
					П003220030002 = 0;
					Инд = 1;
					Инд_Строка = СтрокаСИндексомПоказателя(Инд);
					Обл = Форма.ТабличныйДокумент.Области.Найти("П00322М128001" + Инд_Строка);
					Пока Обл <> Неопределено Цикл
						П003220030001 = П003220030001 + Обл.Значение;
						П003220030002 = П003220030002 + Форма.ТабличныйДокумент.Области.Найти("П00322М129001" + Инд_Строка).Значение;
						Инд = Инд + 1;
						Инд_Строка = СтрокаСИндексомПоказателя(Инд);
						Обл = Форма.ТабличныйДокумент.Области.Найти("П00322М128001" + Инд_Строка);
					КонецЦикла;
					Форма.ТабличныйДокумент.Области.Найти("П003220030001").Значение = П003220030001;
					Форма.ТабличныйДокумент.Области.Найти("П003220030002").Значение = П003220030002;
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "" Тогда
		
		Для каждого Раздел Из Форма.СтруктураЗависимыхЯчеекДляАвторасчета Цикл
			Расчет(Форма, Раздел.Ключ);
		КонецЦикла;
		
	КонецЕсли;
	
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РасчетВДеревеЗначений(Форма, ИмяРаздела)
	
	ИмяГлРаздела = ИмяРаздела;
	СтруктураРаздела = Форма.мСтруктураМногоуровневыхРазделов[ИмяРаздела];
	Если СтруктураРаздела.Свойство("ИмяГлавногоРаздела") Тогда
		ИмяГлРаздела = СтруктураРаздела["ИмяГлавногоРаздела"];
	КонецЕсли;
	
	ДеревоДанных = Неопределено;
	
	Если ИмяРаздела = "Раздел1" Тогда
		
		Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
			
			ДеревоДанных = ПолучитьИзВременногоХранилища(
				Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
			
			АктивнаяВетка = Неопределено;
			Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
				АктивнаяВетка = ДеревоДанных.Строки[
				Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
			КонецЕсли;
			
			ИмяГруппыМнЧ1 = Форма.СтруктураРеквизитовФормы.мИдГруппы1М1;
			СтруктураГруппыМнЧ1 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ1];
			ИменаГрафМнЧ1 = СтруктураГруппыМнЧ1["ИменаГраф"];
			
			ИмяГруппыМнЧ2 = Форма.СтруктураРеквизитовФормы.мИдГруппы1М2;
			СтруктураГруппыМнЧ2 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ2];
			ИменаГрафМнЧ2 = СтруктураГруппыМнЧ2["ИменаГраф"];
			
			Для каждого ВеткаР1 Из ДеревоДанных.Строки Цикл
				
				ВеткаР1.Данные.Вставить("П000010003001"
				, ВеткаР1.Данные["П000010003101"]
				+ ВеткаР1.Данные["П000010003201"]
				+ ВеткаР1.Данные["П000010003301"]);
				
				ВеткаР1.Данные.Вставить("П000010005001"
				, ВеткаР1.Данные["П000010005101"]
				+ ВеткаР1.Данные["П000010005201"]
				+ ВеткаР1.Данные["П000010005301"]);
				
				// Многострочная часть 060-073.
				ДеревоМнЧ1 = ВеткаР1.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ1];
				Если ВеткаР1 = АктивнаяВетка Тогда
					Для каждого СтрокаМнЧ Из ДеревоМнЧ1.Строки Цикл
						ИндСтроки = Формат(ДеревоМнЧ1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
						Для каждого ИмяГрафы Из ИменаГрафМнЧ1 Цикл
							СтрокаМнЧ.Данные.Вставить(
							ИмяГрафы, Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение);
						КонецЦикла;
					КонецЦикла;
				КонецЕсли;
				Для каждого СтрокаМнЧ Из ДеревоМнЧ1.Строки Цикл
					СтрокаМнЧ.Данные.Вставить("П00001М107001"
					, СтрокаМнЧ.Данные["П00001М107101"]
					+ СтрокаМнЧ.Данные["П00001М107201"]
					+ СтрокаМнЧ.Данные["П00001М107301"]);
				КонецЦикла;
				
				// Многострочная часть 080-093.
				ДеревоМнЧ2 = ВеткаР1.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ2];
				Если ВеткаР1 = АктивнаяВетка Тогда
					Для каждого СтрокаМнЧ Из ДеревоМнЧ2.Строки Цикл
						ИндСтроки = Формат(ДеревоМнЧ2.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
						Для каждого ИмяГрафы Из ИменаГрафМнЧ2 Цикл
							СтрокаМнЧ.Данные.Вставить(
							ИмяГрафы, Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение);
						КонецЦикла;
					КонецЦикла;
				КонецЕсли;
				Для каждого СтрокаМнЧ Из ДеревоМнЧ2.Строки Цикл
					СтрокаМнЧ.Данные.Вставить("П00001М209001"
					, СтрокаМнЧ.Данные["П00001М209101"]
					+ СтрокаМнЧ.Данные["П00001М209201"]
					+ СтрокаМнЧ.Данные["П00001М209301"]);
				КонецЦикла;
				
				ПромежуточнаяСумма
				= ВеткаР1.Данные["П000010011101"]
				+ ВеткаР1.Данные["П000010011201"]
				+ ВеткаР1.Данные["П000010011301"]
				- ВеткаР1.Данные["П000010012101"]
				- ВеткаР1.Данные["П000010012201"]
				- ВеткаР1.Данные["П000010012301"];
				ВеткаР1.Данные.Вставить("П000010011001", Макс(ПромежуточнаяСумма, 0));
				ВеткаР1.Данные.Вставить("П000010012001", - Мин(ПромежуточнаяСумма, 0));
				
				Если ВеткаР1 = АктивнаяВетка Тогда
					Для каждого Пок Из ВеткаР1.Данные Цикл
						Форма.ТабличныйДокумент.Области[Пок.Ключ].Значение = Пок.Значение;
					КонецЦикла;
					Для каждого СтрокаМнЧ Из ДеревоМнЧ1.Строки Цикл
						ИндСтроки = Формат(ДеревоМнЧ1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
						Для каждого ИмяГрафы Из ИменаГрафМнЧ1 Цикл
							Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение
							= СтрокаМнЧ.Данные[ИмяГрафы];
						КонецЦикла;
					КонецЦикла;
					Для каждого СтрокаМнЧ Из ДеревоМнЧ2.Строки Цикл
						ИндСтроки = Формат(ДеревоМнЧ2.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
						Для каждого ИмяГрафы Из ИменаГрафМнЧ2 Цикл
							Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение
							= СтрокаМнЧ.Данные[ИмяГрафы];
						КонецЦикла;
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_1и1_2" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
			Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[1] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[2] - 1];
		КонецЕсли;
		
		Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
			
			ВеткаР1Пр1Подр11_12 = ВеткаР1Пр1.Строки[0].Строки[0];
			
			Если ВеткаР1Пр1Подр11_12 = АктивнаяВетка Тогда
				Для каждого Пок Из ВеткаР1Пр1Подр11_12.Данные Цикл
					ВеткаР1Пр1Подр11_12.Данные.Вставить(
					Пок.Ключ, Форма.ТабличныйДокумент.Области[Пок.Ключ].Значение);
				КонецЦикла;
			КонецЕсли;
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110003002",
			  ВеткаР1Пр1Подр11_12.Данные["П011110003003"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110003004"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110003005"]);
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110004002",
			  ВеткаР1Пр1Подр11_12.Данные["П011110004003"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110004004"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110004005"]);
			
			Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				
				ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110003001", ВеткаР1Пр1Подр11_12.Данные["П011110003002"]);
				ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110004001", ВеткаР1Пр1Подр11_12.Данные["П011110004002"]);
				
			КонецЕсли;
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005001",
			  ВеткаР1Пр1Подр11_12.Данные["П011110003001"]
			- ВеткаР1Пр1Подр11_12.Данные["П011110004001"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005002",
			  ВеткаР1Пр1Подр11_12.Данные["П011110003002"]
			- ВеткаР1Пр1Подр11_12.Данные["П011110004002"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005003",
			  ВеткаР1Пр1Подр11_12.Данные["П011110003003"]
			- ВеткаР1Пр1Подр11_12.Данные["П011110004003"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005004",
			  ВеткаР1Пр1Подр11_12.Данные["П011110003004"]
			- ВеткаР1Пр1Подр11_12.Данные["П011110004004"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005005",
			  ВеткаР1Пр1Подр11_12.Данные["П011110003005"]
			- ВеткаР1Пр1Подр11_12.Данные["П011110004005"]);
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005102",
			  ВеткаР1Пр1Подр11_12.Данные["П011110005103"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110005104"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110005105"]);
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006102",
			  ВеткаР1Пр1Подр11_12.Данные["П011110006103"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006104"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006105"]);
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006202",
			  ВеткаР1Пр1Подр11_12.Данные["П011110006203"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006204"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006205"]);
			
			Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				
				ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006101", ВеткаР1Пр1Подр11_12.Данные["П011110006102"]);
				ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006201", ВеткаР1Пр1Подр11_12.Данные["П011110006202"]);
				
			КонецЕсли;
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006001",
			  ВеткаР1Пр1Подр11_12.Данные["П011110006101"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006201"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006002",
			  ВеткаР1Пр1Подр11_12.Данные["П011110006102"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006202"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006003",
			  ВеткаР1Пр1Подр11_12.Данные["П011110006103"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006203"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006004",
			  ВеткаР1Пр1Подр11_12.Данные["П011110006104"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006204"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110006005",
			  ВеткаР1Пр1Подр11_12.Данные["П011110006105"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011110006205"]);
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120003002",
			  ВеткаР1Пр1Подр11_12.Данные["П011120003003"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011120003004"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011120003005"]);
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120004002",
			  ВеткаР1Пр1Подр11_12.Данные["П011120004003"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011120004004"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011120004005"]);
			
			Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				
				ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120003001", ВеткаР1Пр1Подр11_12.Данные["П011120003002"]);
				ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120004001", ВеткаР1Пр1Подр11_12.Данные["П011120004002"]);
				
			КонецЕсли;
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120005001",
			  ВеткаР1Пр1Подр11_12.Данные["П011120003001"]
			- ВеткаР1Пр1Подр11_12.Данные["П011120004001"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120005002",
			  ВеткаР1Пр1Подр11_12.Данные["П011120003002"]
			- ВеткаР1Пр1Подр11_12.Данные["П011120004002"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120005003",
			  ВеткаР1Пр1Подр11_12.Данные["П011120003003"]
			- ВеткаР1Пр1Подр11_12.Данные["П011120004003"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120005004",
			  ВеткаР1Пр1Подр11_12.Данные["П011120003004"]
			- ВеткаР1Пр1Подр11_12.Данные["П011120004004"]);
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120005005",
			  ВеткаР1Пр1Подр11_12.Данные["П011120003005"]
			- ВеткаР1Пр1Подр11_12.Данные["П011120004005"]);
			
			ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120006002",
			  ВеткаР1Пр1Подр11_12.Данные["П011120006003"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011120006004"]
			+ ВеткаР1Пр1Подр11_12.Данные["П011120006005"]);
			
			Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				
				ВеткаР1Пр1Подр11_12.Данные.Вставить("П011110005101", ВеткаР1Пр1Подр11_12.Данные["П011110005102"]);
				ВеткаР1Пр1Подр11_12.Данные.Вставить("П011120006001", ВеткаР1Пр1Подр11_12.Данные["П011120006002"]);
				
			КонецЕсли;
			
			Если ВеткаР1Пр1Подр11_12 = АктивнаяВетка Тогда
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
					Обл = Форма.ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = ВеткаР1Пр1Подр11_12.Данные[Пок.Ключ];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_3_1" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
			Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[1] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[2] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧ = Форма.СтруктураРеквизитовФормы.мИдГруппы11131М1;
		СтруктураГруппыМнЧ = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
			
			ВеткаР1Пр1Подр131 = ВеткаР1Пр1.Строки[1].Строки[0];
			
			ДеревоМнЧ = ВеткаР1Пр1Подр131.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			
			Если ВеткаР1Пр1Подр131 = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						СтрокаМнЧ.Данные.Вставить(
						ИмяГрафы, Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				
				СтрокаМнЧ.Данные.Вставить("П11131М102002", СтрокаМнЧ.Данные["П11131М102003"]
				+ СтрокаМнЧ.Данные["П11131М102004"] + СтрокаМнЧ.Данные["П11131М102005"]);
				
				СтрокаМнЧ.Данные.Вставить("П11131М103002", СтрокаМнЧ.Данные["П11131М103003"]
				+ СтрокаМнЧ.Данные["П11131М103004"] + СтрокаМнЧ.Данные["П11131М103005"]);
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					СтрокаМнЧ.Данные.Вставить("П11131М102001", СтрокаМнЧ.Данные["П11131М102002"]);
					СтрокаМнЧ.Данные.Вставить("П11131М103001", СтрокаМнЧ.Данные["П11131М103002"]);
					
				КонецЕсли;
				
				СтрокаМнЧ.Данные.Вставить("П11131М104001",
				СтрокаМнЧ.Данные["П11131М102001"] - СтрокаМнЧ.Данные["П11131М103001"]);
				СтрокаМнЧ.Данные.Вставить("П11131М104002",
				СтрокаМнЧ.Данные["П11131М102002"] - СтрокаМнЧ.Данные["П11131М103002"]);
				СтрокаМнЧ.Данные.Вставить("П11131М104003",
				СтрокаМнЧ.Данные["П11131М102003"] - СтрокаМнЧ.Данные["П11131М103003"]);
				СтрокаМнЧ.Данные.Вставить("П11131М104004",
				СтрокаМнЧ.Данные["П11131М102004"] - СтрокаМнЧ.Данные["П11131М103004"]);
				СтрокаМнЧ.Данные.Вставить("П11131М104005",
				СтрокаМнЧ.Данные["П11131М102005"] - СтрокаМнЧ.Данные["П11131М103005"]);
				
				СтрокаМнЧ.Данные.Вставить("П11131М105002", СтрокаМнЧ.Данные["П11131М105003"]
				+ СтрокаМнЧ.Данные["П11131М105004"] + СтрокаМнЧ.Данные["П11131М105005"]);
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					СтрокаМнЧ.Данные.Вставить("П11131М105001", СтрокаМнЧ.Данные["П11131М105002"]);
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ВеткаР1Пр1Подр131 = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение
						= СтрокаМнЧ.Данные[ИмяГрафы];
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_3_2" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
			Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[1] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[2] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧ = Форма.СтруктураРеквизитовФормы.мИдГруппы11132М1;
		СтруктураГруппыМнЧ = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
			
			ВеткаР1Пр1Подр132 = ВеткаР1Пр1.Строки[2].Строки[0];
			
			ДеревоМнЧ = ВеткаР1Пр1Подр132.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			
			Если ВеткаР1Пр1Подр132 = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						СтрокаМнЧ.Данные.Вставить(
						ИмяГрафы, Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				
				СтрокаМнЧ.Данные.Вставить("П11132М102002", СтрокаМнЧ.Данные["П11132М102003"]
				+ СтрокаМнЧ.Данные["П11132М102004"] + СтрокаМнЧ.Данные["П11132М102005"]);
				
				СтрокаМнЧ.Данные.Вставить("П11132М103002", СтрокаМнЧ.Данные["П11132М103003"]
				+ СтрокаМнЧ.Данные["П11132М103004"] + СтрокаМнЧ.Данные["П11132М103005"]);
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					СтрокаМнЧ.Данные.Вставить("П11132М102001", СтрокаМнЧ.Данные["П11132М102002"]);
					СтрокаМнЧ.Данные.Вставить("П11132М103001", СтрокаМнЧ.Данные["П11132М103002"]);
					
				КонецЕсли;
				
				СтрокаМнЧ.Данные.Вставить("П11132М104001",
				СтрокаМнЧ.Данные["П11132М102001"] - СтрокаМнЧ.Данные["П11132М103001"]);
				СтрокаМнЧ.Данные.Вставить("П11132М104002",
				СтрокаМнЧ.Данные["П11132М102002"] - СтрокаМнЧ.Данные["П11132М103002"]);
				СтрокаМнЧ.Данные.Вставить("П11132М104003",
				СтрокаМнЧ.Данные["П11132М102003"] - СтрокаМнЧ.Данные["П11132М103003"]);
				СтрокаМнЧ.Данные.Вставить("П11132М104004",
				СтрокаМнЧ.Данные["П11132М102004"] - СтрокаМнЧ.Данные["П11132М103004"]);
				СтрокаМнЧ.Данные.Вставить("П11132М104005",
				СтрокаМнЧ.Данные["П11132М102005"] - СтрокаМнЧ.Данные["П11132М103005"]);
				
				СтрокаМнЧ.Данные.Вставить("П11132М105002", СтрокаМнЧ.Данные["П11132М105003"]
				+ СтрокаМнЧ.Данные["П11132М105004"] + СтрокаМнЧ.Данные["П11132М105005"]);
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					СтрокаМнЧ.Данные.Вставить("П11132М105001", СтрокаМнЧ.Данные["П11132М105002"]);
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ВеткаР1Пр1Подр132 = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение
						= СтрокаМнЧ.Данные[ИмяГрафы];
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_4" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
			Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[1] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[2] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧ = Форма.СтруктураРеквизитовФормы.мИдГруппы1114М1;
		СтруктураГруппыМнЧ = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
			
			ВеткаР1Пр1Подр14 = ВеткаР1Пр1.Строки[3].Строки[0];
			
			ДеревоМнЧ = ВеткаР1Пр1Подр14.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			
			Если ВеткаР1Пр1Подр14 = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						СтрокаМнЧ.Данные.Вставить(
						ИмяГрафы, Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				
				СтрокаМнЧ.Данные.Вставить("П01114М102002", СтрокаМнЧ.Данные["П01114М102003"]
				+ СтрокаМнЧ.Данные["П01114М102004"] + СтрокаМнЧ.Данные["П01114М102005"]);
				
				СтрокаМнЧ.Данные.Вставить("П01114М103002", СтрокаМнЧ.Данные["П01114М103003"]
				+ СтрокаМнЧ.Данные["П01114М103004"] + СтрокаМнЧ.Данные["П01114М103005"]);
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					СтрокаМнЧ.Данные.Вставить("П01114М102001", СтрокаМнЧ.Данные["П01114М102002"]);
					СтрокаМнЧ.Данные.Вставить("П01114М103001", СтрокаМнЧ.Данные["П01114М103002"]);
					
				КонецЕсли;
				
				СтрокаМнЧ.Данные.Вставить("П01114М104001",
				СтрокаМнЧ.Данные["П01114М102001"] - СтрокаМнЧ.Данные["П01114М103001"]);
				СтрокаМнЧ.Данные.Вставить("П01114М104002",
				СтрокаМнЧ.Данные["П01114М102002"] - СтрокаМнЧ.Данные["П01114М103002"]);
				СтрокаМнЧ.Данные.Вставить("П01114М104003",
				СтрокаМнЧ.Данные["П01114М102003"] - СтрокаМнЧ.Данные["П01114М103003"]);
				СтрокаМнЧ.Данные.Вставить("П01114М104004",
				СтрокаМнЧ.Данные["П01114М102004"] - СтрокаМнЧ.Данные["П01114М103004"]);
				СтрокаМнЧ.Данные.Вставить("П01114М104005",
				СтрокаМнЧ.Данные["П01114М102005"] - СтрокаМнЧ.Данные["П01114М103005"]);
				
				СтрокаМнЧ.Данные.Вставить("П01114М105002", СтрокаМнЧ.Данные["П01114М105003"]
				+ СтрокаМнЧ.Данные["П01114М105004"] + СтрокаМнЧ.Данные["П01114М105005"]);
				
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					
					СтрокаМнЧ.Данные.Вставить("П01114М105001", СтрокаМнЧ.Данные["П01114М105002"]);
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ВеткаР1Пр1Подр14 = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение
						= СтрокаМнЧ.Данные[ИмяГрафы];
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил2" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
			Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		Для каждого ВеткаР1Пр2 Из ДеревоДанных.Строки Цикл
			
			Если ВеткаР1Пр2 = АктивнаяВетка Тогда
				Для каждого Пок Из ВеткаР1Пр2.Данные Цикл
					ВеткаР1Пр2.Данные.Вставить(
					Пок.Ключ, Форма.ТабличныйДокумент.Области[Пок.Ключ].Значение);
				КонецЦикла;
			КонецЕсли;
			
			ВеткаР1Пр2.Данные.Вставить("П000120002002",
			  ВеткаР1Пр2.Данные["П000120002003"]
			+ ВеткаР1Пр2.Данные["П000120002004"]
			+ ВеткаР1Пр2.Данные["П000120002005"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120003002",
			  ВеткаР1Пр2.Данные["П000120003003"]
			+ ВеткаР1Пр2.Данные["П000120003004"]
			+ ВеткаР1Пр2.Данные["П000120003005"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120004002",
			  ВеткаР1Пр2.Данные["П000120004003"]
			+ ВеткаР1Пр2.Данные["П000120004004"]
			+ ВеткаР1Пр2.Данные["П000120004005"]);
			
			Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				ВеткаР1Пр2.Данные.Вставить("П000120002001", ВеткаР1Пр2.Данные["П000120002002"]);
				ВеткаР1Пр2.Данные.Вставить("П000120003001", ВеткаР1Пр2.Данные["П000120003002"]);
				ВеткаР1Пр2.Данные.Вставить("П000120004001", ВеткаР1Пр2.Данные["П000120004002"]);
			КонецЕсли;
			
			ВеткаР1Пр2.Данные.Вставить("П000120005001",
			  ВеткаР1Пр2.Данные["П000120002001"]
			- ВеткаР1Пр2.Данные["П000120003001"]
			- ВеткаР1Пр2.Данные["П000120004001"]);
			ВеткаР1Пр2.Данные.Вставить("П000120005002",
			  ВеткаР1Пр2.Данные["П000120002002"]
			- ВеткаР1Пр2.Данные["П000120003002"]
			- ВеткаР1Пр2.Данные["П000120004002"]);
			ВеткаР1Пр2.Данные.Вставить("П000120005003",
			  ВеткаР1Пр2.Данные["П000120002003"]
			- ВеткаР1Пр2.Данные["П000120003003"]
			- ВеткаР1Пр2.Данные["П000120004003"]);
			ВеткаР1Пр2.Данные.Вставить("П000120005004",
			  ВеткаР1Пр2.Данные["П000120002004"]
			- ВеткаР1Пр2.Данные["П000120003004"]
			- ВеткаР1Пр2.Данные["П000120004004"]);
			ВеткаР1Пр2.Данные.Вставить("П000120005005",
			  ВеткаР1Пр2.Данные["П000120002005"]
			- ВеткаР1Пр2.Данные["П000120003005"]
			- ВеткаР1Пр2.Данные["П000120004005"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120005102",
			  ВеткаР1Пр2.Данные["П000120005103"]
			+ ВеткаР1Пр2.Данные["П000120005104"]
			+ ВеткаР1Пр2.Данные["П000120005105"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120005202",
			  ВеткаР1Пр2.Данные["П000120005203"]
			+ ВеткаР1Пр2.Данные["П000120005204"]
			+ ВеткаР1Пр2.Данные["П000120005205"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120005302",
			  ВеткаР1Пр2.Данные["П000120005303"]
			+ ВеткаР1Пр2.Данные["П000120005304"]
			+ ВеткаР1Пр2.Данные["П000120005305"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120005402",
			  ВеткаР1Пр2.Данные["П000120005403"]
			+ ВеткаР1Пр2.Данные["П000120005404"]
			+ ВеткаР1Пр2.Данные["П000120005405"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120006002",
			  ВеткаР1Пр2.Данные["П000120006003"]
			+ ВеткаР1Пр2.Данные["П000120006004"]
			+ ВеткаР1Пр2.Данные["П000120006005"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120007002",
			  ВеткаР1Пр2.Данные["П000120007003"]
			+ ВеткаР1Пр2.Данные["П000120007004"]
			+ ВеткаР1Пр2.Данные["П000120007005"]);
			
			ВеткаР1Пр2.Данные.Вставить("П000120008002",
			  ВеткаР1Пр2.Данные["П000120008003"]
			+ ВеткаР1Пр2.Данные["П000120008004"]
			+ ВеткаР1Пр2.Данные["П000120008005"]);
			
			Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				ВеткаР1Пр2.Данные.Вставить("П000120006001", ВеткаР1Пр2.Данные["П000120006002"]);
				ВеткаР1Пр2.Данные.Вставить("П000120007001", ВеткаР1Пр2.Данные["П000120007002"]);
				ВеткаР1Пр2.Данные.Вставить("П000120008001", ВеткаР1Пр2.Данные["П000120008002"]);
			КонецЕсли;
			
			Сумма090 = ВеткаР1Пр2.Данные.П000120006001
					 - ВеткаР1Пр2.Данные.П000120007001
					 + ВеткаР1Пр2.Данные.П000120008001;
			Если Сумма090 < 0 Тогда
				ВеткаР1Пр2.Данные.Вставить("П000120009001", "2");
				ВеткаР1Пр2.Данные.Вставить("П000120009002", - Сумма090);
			Иначе
				ВеткаР1Пр2.Данные.Вставить("П000120009001", "1");
				ВеткаР1Пр2.Данные.Вставить("П000120009002", Сумма090);
			КонецЕсли;
			Сумма090 = ВеткаР1Пр2.Данные.П000120006002
					 - ВеткаР1Пр2.Данные.П000120007002
					 + ВеткаР1Пр2.Данные.П000120008002;
			Если Сумма090 < 0 Тогда
				ВеткаР1Пр2.Данные.Вставить("П000120009003", "2");
				ВеткаР1Пр2.Данные.Вставить("П000120009004", - Сумма090);
			Иначе
				ВеткаР1Пр2.Данные.Вставить("П000120009003", "1");
				ВеткаР1Пр2.Данные.Вставить("П000120009004", Сумма090);
			КонецЕсли;
			Сумма090 = ВеткаР1Пр2.Данные.П000120006003
					 - ВеткаР1Пр2.Данные.П000120007003
					 + ВеткаР1Пр2.Данные.П000120008003;
			Если Сумма090 < 0 Тогда
				ВеткаР1Пр2.Данные.Вставить("П000120009005", "2");
				ВеткаР1Пр2.Данные.Вставить("П000120009006", - Сумма090);
			Иначе
				ВеткаР1Пр2.Данные.Вставить("П000120009005", "1");
				ВеткаР1Пр2.Данные.Вставить("П000120009006", Сумма090);
			КонецЕсли;
			Сумма090 = ВеткаР1Пр2.Данные.П000120006004
					 - ВеткаР1Пр2.Данные.П000120007004
					 + ВеткаР1Пр2.Данные.П000120008004;
			Если Сумма090 < 0 Тогда
				ВеткаР1Пр2.Данные.Вставить("П000120009007", "2");
				ВеткаР1Пр2.Данные.Вставить("П000120009008", - Сумма090);
			Иначе
				ВеткаР1Пр2.Данные.Вставить("П000120009007", "1");
				ВеткаР1Пр2.Данные.Вставить("П000120009008", Сумма090);
			КонецЕсли;
			Сумма090 = ВеткаР1Пр2.Данные.П000120006005
					 - ВеткаР1Пр2.Данные.П000120007005
					 + ВеткаР1Пр2.Данные.П000120008005;
			Если Сумма090 < 0 Тогда
				ВеткаР1Пр2.Данные.Вставить("П000120009009", "2");
				ВеткаР1Пр2.Данные.Вставить("П000120009010", - Сумма090);
			Иначе
				ВеткаР1Пр2.Данные.Вставить("П000120009009", "1");
				ВеткаР1Пр2.Данные.Вставить("П000120009010", Сумма090);
			КонецЕсли;
			
			Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
				ВеткаР1Пр2.Данные.Вставить("П000120005101", ВеткаР1Пр2.Данные["П000120005102"]);
				ВеткаР1Пр2.Данные.Вставить("П000120005201", ВеткаР1Пр2.Данные["П000120005202"]);
				ВеткаР1Пр2.Данные.Вставить("П000120005301", ВеткаР1Пр2.Данные["П000120005302"]);
				ВеткаР1Пр2.Данные.Вставить("П000120005401", ВеткаР1Пр2.Данные["П000120005402"]);
			КонецЕсли;
			
			Если ВеткаР1Пр2 = АктивнаяВетка Тогда
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
					Обл = Форма.ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = ВеткаР1Пр2.Данные[Пок.Ключ];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил3" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
			Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		Для каждого ВеткаР1Пр3 Из ДеревоДанных.Строки Цикл
			
			Если ВеткаР1Пр3 = АктивнаяВетка Тогда
				Для каждого Пок Из ВеткаР1Пр3.Данные Цикл
					ВеткаР1Пр3.Данные.Вставить(
					Пок.Ключ, Форма.ТабличныйДокумент.Области[Пок.Ключ].Значение);
				КонецЦикла;
			КонецЕсли;
			
			ВеткаР1Пр3.Данные.Вставить("П000130006002"
			, ВеткаР1Пр3.Данные["П000130006102"]
			+ ВеткаР1Пр3.Данные["П000130006202"]);
			ВеткаР1Пр3.Данные.Вставить("П000130006003"
			, ВеткаР1Пр3.Данные["П000130006103"]
			+ ВеткаР1Пр3.Данные["П000130006203"]);
			ВеткаР1Пр3.Данные.Вставить("П000130006004"
			, ВеткаР1Пр3.Данные["П000130006104"]
			+ ВеткаР1Пр3.Данные["П000130006204"]);
			
			ВеткаР1Пр3.Данные.Вставить("П000130010003"
			, ВеткаР1Пр3.Данные["П000130001003"]
			+ ВеткаР1Пр3.Данные["П000130002003"]
			+ ВеткаР1Пр3.Данные["П000130003003"]
			+ ВеткаР1Пр3.Данные["П000130004003"]
			+ ВеткаР1Пр3.Данные["П000130005003"]
			+ ВеткаР1Пр3.Данные["П000130006003"]
			+ ВеткаР1Пр3.Данные["П000130007003"]
			+ ВеткаР1Пр3.Данные["П000130008003"]
			+ ВеткаР1Пр3.Данные["П000130009003"]);
			ВеткаР1Пр3.Данные.Вставить("П000130010004"
			, ВеткаР1Пр3.Данные["П000130001004"]
			+ ВеткаР1Пр3.Данные["П000130003004"]
			+ ВеткаР1Пр3.Данные["П000130006004"]
			+ ВеткаР1Пр3.Данные["П000130007004"]
			+ ВеткаР1Пр3.Данные["П000130008004"]);
			
			Если ВеткаР1Пр3 = АктивнаяВетка Тогда
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
					Обл = Форма.ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = ВеткаР1Пр3.Данные[Пок.Ключ];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил4" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
			Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		Для каждого ВеткаР1Пр4 Из ДеревоДанных.Строки Цикл
			
			Если ВеткаР1Пр4 = АктивнаяВетка Тогда
				Для каждого Пок Из ВеткаР1Пр4.Данные Цикл
					ВеткаР1Пр4.Данные.Вставить(
					Пок.Ключ, Форма.ТабличныйДокумент.Области[Пок.Ключ].Значение);
				КонецЦикла;
			КонецЕсли;
			
			ВеткаР1Пр4.Данные.Вставить("П000140004003"
			, ВеткаР1Пр4.Данные["П000140005003"]
			+ ВеткаР1Пр4.Данные["П000140006003"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140004004"
			, ВеткаР1Пр4.Данные["П000140005004"]
			+ ВеткаР1Пр4.Данные["П000140006004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140001002"
			, ВеткаР1Пр4.Данные["П000140002002"]
			+ ВеткаР1Пр4.Данные["П000140003002"]
			+ ВеткаР1Пр4.Данные["П000140004002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140001004"
			, ВеткаР1Пр4.Данные["П000140002004"]
			+ ВеткаР1Пр4.Данные["П000140003004"]
			+ ВеткаР1Пр4.Данные["П000140004004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140010003"
			, ВеткаР1Пр4.Данные["П000140011003"]
			+ ВеткаР1Пр4.Данные["П000140012003"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140010004"
			, ВеткаР1Пр4.Данные["П000140011004"]
			+ ВеткаР1Пр4.Данные["П000140012004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140007002"
			, ВеткаР1Пр4.Данные["П000140008002"]
			+ ВеткаР1Пр4.Данные["П000140009002"]
			+ ВеткаР1Пр4.Данные["П000140010002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140007004"
			, ВеткаР1Пр4.Данные["П000140008004"]
			+ ВеткаР1Пр4.Данные["П000140009004"]
			+ ВеткаР1Пр4.Данные["П000140010004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140013002"
			, ВеткаР1Пр4.Данные["П000140014002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140013004"
			, ВеткаР1Пр4.Данные["П000140014004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140018003"
			, ВеткаР1Пр4.Данные["П000140019003"]
			+ ВеткаР1Пр4.Данные["П000140020003"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140018004"
			, ВеткаР1Пр4.Данные["П000140019004"]
			+ ВеткаР1Пр4.Данные["П000140020004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140015002"
			, ВеткаР1Пр4.Данные["П000140016002"]
			+ ВеткаР1Пр4.Данные["П000140017002"]
			+ ВеткаР1Пр4.Данные["П000140018002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140015004"
			, ВеткаР1Пр4.Данные["П000140016004"]
			+ ВеткаР1Пр4.Данные["П000140017004"]
			+ ВеткаР1Пр4.Данные["П000140018004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140021002"
			, ВеткаР1Пр4.Данные["П000140022002"]
			+ ВеткаР1Пр4.Данные["П000140023002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140021004"
			, ВеткаР1Пр4.Данные["П000140022004"]
			+ ВеткаР1Пр4.Данные["П000140023004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140029002"
			, ВеткаР1Пр4.Данные["П000140006002"]
			+ ВеткаР1Пр4.Данные["П000140012002"]
			+ ВеткаР1Пр4.Данные["П000140020002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140029003"
			, ВеткаР1Пр4.Данные["П000140006003"]
			+ ВеткаР1Пр4.Данные["П000140012003"]
			+ ВеткаР1Пр4.Данные["П000140020003"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140029004"
			, ВеткаР1Пр4.Данные["П000140006004"]
			+ ВеткаР1Пр4.Данные["П000140012004"]
			+ ВеткаР1Пр4.Данные["П000140020004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140028002"
			, ВеткаР1Пр4.Данные["П000140005002"]
			+ ВеткаР1Пр4.Данные["П000140011002"]
			+ ВеткаР1Пр4.Данные["П000140019002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140028003"
			, ВеткаР1Пр4.Данные["П000140005003"]
			+ ВеткаР1Пр4.Данные["П000140011003"]
			+ ВеткаР1Пр4.Данные["П000140019003"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140028004"
			, ВеткаР1Пр4.Данные["П000140005004"]
			+ ВеткаР1Пр4.Данные["П000140011004"]
			+ ВеткаР1Пр4.Данные["П000140019004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140027002"
			, ВеткаР1Пр4.Данные["П000140004002"]
			+ ВеткаР1Пр4.Данные["П000140010002"]
			+ ВеткаР1Пр4.Данные["П000140018002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140027003"
			, ВеткаР1Пр4.Данные["П000140028003"]
			+ ВеткаР1Пр4.Данные["П000140029003"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140027004"
			, ВеткаР1Пр4.Данные["П000140028004"]
			+ ВеткаР1Пр4.Данные["П000140029004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140026002"
			, ВеткаР1Пр4.Данные["П000140003002"]
			+ ВеткаР1Пр4.Данные["П000140009002"]
			+ ВеткаР1Пр4.Данные["П000140017002"]
			+ ВеткаР1Пр4.Данные["П000140023002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140026003"
			, ВеткаР1Пр4.Данные["П000140003003"]
			+ ВеткаР1Пр4.Данные["П000140009003"]
			+ ВеткаР1Пр4.Данные["П000140017003"]
			+ ВеткаР1Пр4.Данные["П000140023003"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140026004"
			, ВеткаР1Пр4.Данные["П000140003004"]
			+ ВеткаР1Пр4.Данные["П000140009004"]
			+ ВеткаР1Пр4.Данные["П000140017004"]
			+ ВеткаР1Пр4.Данные["П000140023004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140025002"
			, ВеткаР1Пр4.Данные["П000140002002"]
			+ ВеткаР1Пр4.Данные["П000140008002"]
			+ ВеткаР1Пр4.Данные["П000140014002"]
			+ ВеткаР1Пр4.Данные["П000140016002"]
			+ ВеткаР1Пр4.Данные["П000140022002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140025003"
			, ВеткаР1Пр4.Данные["П000140002003"]
			+ ВеткаР1Пр4.Данные["П000140008003"]
			+ ВеткаР1Пр4.Данные["П000140014003"]
			+ ВеткаР1Пр4.Данные["П000140016003"]
			+ ВеткаР1Пр4.Данные["П000140022003"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140025004"
			, ВеткаР1Пр4.Данные["П000140002004"]
			+ ВеткаР1Пр4.Данные["П000140008004"]
			+ ВеткаР1Пр4.Данные["П000140014004"]
			+ ВеткаР1Пр4.Данные["П000140016004"]
			+ ВеткаР1Пр4.Данные["П000140022004"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140024002"
			, ВеткаР1Пр4.Данные["П000140025002"]
			+ ВеткаР1Пр4.Данные["П000140026002"]
			+ ВеткаР1Пр4.Данные["П000140027002"]);
			
			ВеткаР1Пр4.Данные.Вставить("П000140024004"
			, ВеткаР1Пр4.Данные["П000140025004"]
			+ ВеткаР1Пр4.Данные["П000140026004"]
			+ ВеткаР1Пр4.Данные["П000140027004"]
			+ ВеткаР1Пр4.Данные["П000140030004"]
			+ ВеткаР1Пр4.Данные["П000140031004"]);
			
			Если ВеткаР1Пр4 = АктивнаяВетка Тогда
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
					Обл = Форма.ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = ВеткаР1Пр4.Данные[Пок.Ключ];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил5_6" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
			Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		Для каждого ВеткаР1Пр5_6 Из ДеревоДанных.Строки Цикл
			
			Если ВеткаР1Пр5_6 = АктивнаяВетка Тогда
				Для каждого Пок Из ВеткаР1Пр5_6.Данные Цикл
					ВеткаР1Пр5_6.Данные.Вставить(
					Пок.Ключ, Форма.ТабличныйДокумент.Области[Пок.Ключ].Значение);
				КонецЦикла;
			КонецЕсли;
			
			Знаменатель = ВеткаР1Пр5_6.Данные["П000150002002"];
			Если Знаменатель = 0 Тогда
				ВеткаР1Пр5_6.Данные.Вставить("П000150004002", 0);
			Иначе
				ВеткаР1Пр5_6.Данные.Вставить("П000150004002",
				ВеткаР1Пр5_6.Данные["П000150003002"] / Знаменатель * 100);
			КонецЕсли;
			
			Знаменатель = ВеткаР1Пр5_6.Данные["П000150002003"];
			Если Знаменатель = 0 Тогда
				ВеткаР1Пр5_6.Данные.Вставить("П000150004003", 0);
			Иначе
				ВеткаР1Пр5_6.Данные.Вставить("П000150004003",
				ВеткаР1Пр5_6.Данные["П000150003003"] / Знаменатель * 100);
			КонецЕсли;
			
			Знаменатель = ВеткаР1Пр5_6.Данные["П000160006002"];
			Если Знаменатель = 0 Тогда
				ВеткаР1Пр5_6.Данные.Вставить("П000160008002", 0);
			Иначе
				ВеткаР1Пр5_6.Данные.Вставить("П000160008002",
				ВеткаР1Пр5_6.Данные["П000160007002"]
				/ Знаменатель * 100);
			КонецЕсли;
		
			Если ВеткаР1Пр5_6 = АктивнаяВетка Тогда
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
					Обл = Форма.ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = ВеткаР1Пр5_6.Данные[Пок.Ключ];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил7" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
			Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		Для каждого ВеткаР1Пр7 Из ДеревоДанных.Строки Цикл
			
			Если ВеткаР1Пр7 = АктивнаяВетка Тогда
				Для каждого Пок Из ВеткаР1Пр7.Данные Цикл
					ВеткаР1Пр7.Данные.Вставить(
					Пок.Ключ, Форма.ТабличныйДокумент.Области[Пок.Ключ].Значение);
				КонецЦикла;
			КонецЕсли;
			
			Знаменатель = ВеткаР1Пр7.Данные["П000170001001"];
			Если Знаменатель = 0 Тогда
				ВеткаР1Пр7.Данные.Вставить("П000170005001", 0);
			Иначе
				ВеткаР1Пр7.Данные.Вставить("П000170005001",
				(ВеткаР1Пр7.Данные["П000170002001"]
				+ ВеткаР1Пр7.Данные["П000170003001"]
				+ ВеткаР1Пр7.Данные["П000170004001"])
				/ Знаменатель * 100);
			КонецЕсли;
			
			Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 12 Тогда
				Знаменатель = ВеткаР1Пр7.Данные["П000170001002"];
				Если Знаменатель = 0 Тогда
					ВеткаР1Пр7.Данные.Вставить("П000170005002", 0);
				Иначе
					ВеткаР1Пр7.Данные.Вставить("П000170005002",
					(ВеткаР1Пр7.Данные["П000170002002"]
					+ ВеткаР1Пр7.Данные["П000170003002"]
					+ ВеткаР1Пр7.Данные["П000170004002"])
					/ Знаменатель * 100);
				КонецЕсли;
			КонецЕсли;
			
			Если ВеткаР1Пр7 = АктивнаяВетка Тогда
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
					Обл = Форма.ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = ВеткаР1Пр7.Данные[Пок.Ключ];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил8" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
			Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧ = Форма.СтруктураРеквизитовФормы.мИдГруппы18М1;
		СтруктураГруппыМнЧ = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР1Пр8 Из ДеревоДанных.Строки Цикл
			
			ДеревоМнЧ = ВеткаР1Пр8.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			Если ВеткаР1Пр8 = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						СтрокаМнЧ.Данные.Вставить(
						ИмяГрафы, Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			П000180001001 = 0;
			П000180001002 = 0;
			П000180001003 = 0;
			П000180001004 = 0;
			П000180001005 = 0;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				СтрокаМнЧ.Данные.Вставить("П00018М106002"
				, СтрокаМнЧ.Данные["П00018М106003"]
				+ СтрокаМнЧ.Данные["П00018М106004"]
				+ СтрокаМнЧ.Данные["П00018М106005"]);
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					СтрокаМнЧ.Данные.Вставить("П00018М106001"
					, СтрокаМнЧ.Данные["П00018М106002"]);
				КонецЕсли;
				П000180001001 = П000180001001 + СтрокаМнЧ.Данные["П00018М106001"];
				П000180001002 = П000180001002 + СтрокаМнЧ.Данные["П00018М106002"];
				П000180001003 = П000180001003 + СтрокаМнЧ.Данные["П00018М106003"];
				П000180001004 = П000180001004 + СтрокаМнЧ.Данные["П00018М106004"];
				П000180001005 = П000180001005 + СтрокаМнЧ.Данные["П00018М106005"];
			КонецЦикла;
			ВеткаР1Пр8.Данные.Вставить("П000180001001", П000180001001);
			ВеткаР1Пр8.Данные.Вставить("П000180001002", П000180001002);
			ВеткаР1Пр8.Данные.Вставить("П000180001003", П000180001003);
			ВеткаР1Пр8.Данные.Вставить("П000180001004", П000180001004);
			ВеткаР1Пр8.Данные.Вставить("П000180001005", П000180001005);
			
			Если ВеткаР1Пр8 = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение
						= СтрокаМнЧ.Данные[ИмяГрафы];
					КонецЦикла;
				КонецЦикла;
				Для каждого Пок Из ВеткаР1Пр8.Данные Цикл
					Форма.ТабличныйДокумент.Области[Пок.Ключ].Значение = Пок.Значение;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил9" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
			Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧ = Форма.СтруктураРеквизитовФормы.мИдГруппы19М1;
		СтруктураГруппыМнЧ = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР1Пр9 Из ДеревоДанных.Строки Цикл
			
			ДеревоМнЧ = ВеткаР1Пр9.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			Если ВеткаР1Пр9 = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						СтрокаМнЧ.Данные.Вставить(
						ИмяГрафы, Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			П000190001001 = 0;
			П000190001002 = 0;
			П000190001003 = 0;
			П000190001004 = 0;
			П000190001005 = 0;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				СтрокаМнЧ.Данные.Вставить("П00019М108002"
				, СтрокаМнЧ.Данные["П00019М108003"]
				+ СтрокаМнЧ.Данные["П00019М108004"]
				+ СтрокаМнЧ.Данные["П00019М108005"]);
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					СтрокаМнЧ.Данные.Вставить("П00019М108001"
					, СтрокаМнЧ.Данные["П00019М108002"]);
				КонецЕсли;
				П000190001001 = П000190001001 + СтрокаМнЧ.Данные["П00019М108001"];
				П000190001002 = П000190001002 + СтрокаМнЧ.Данные["П00019М108002"];
				П000190001003 = П000190001003 + СтрокаМнЧ.Данные["П00019М108003"];
				П000190001004 = П000190001004 + СтрокаМнЧ.Данные["П00019М108004"];
				П000190001005 = П000190001005 + СтрокаМнЧ.Данные["П00019М108005"];
			КонецЦикла;
			ВеткаР1Пр9.Данные.Вставить("П000190001001", П000190001001);
			ВеткаР1Пр9.Данные.Вставить("П000190001002", П000190001002);
			ВеткаР1Пр9.Данные.Вставить("П000190001003", П000190001003);
			ВеткаР1Пр9.Данные.Вставить("П000190001004", П000190001004);
			ВеткаР1Пр9.Данные.Вставить("П000190001005", П000190001005);
			
			Если ВеткаР1Пр9 = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение
						= СтрокаМнЧ.Данные[ИмяГрафы];
					КонецЦикла;
				КонецЦикла;
				Для каждого Пок Из ВеткаР1Пр9.Данные Цикл
					Форма.ТабличныйДокумент.Области[Пок.Ключ].Значение = Пок.Значение;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил10" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
			Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧ = Форма.СтруктураРеквизитовФормы.мИдГруппы110М1;
		СтруктураГруппыМнЧ = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР1Пр10 Из ДеревоДанных.Строки Цикл
			
			ДеревоМнЧ = ВеткаР1Пр10.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			Если ВеткаР1Пр10 = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						СтрокаМнЧ.Данные.Вставить(
						ИмяГрафы, Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			П001100001001 = 0;
			П001100001002 = 0;
			П001100001003 = 0;
			П001100001004 = 0;
			П001100001005 = 0;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				СтрокаМнЧ.Данные.Вставить("П00110М110002"
				, СтрокаМнЧ.Данные["П00110М110003"]
				+ СтрокаМнЧ.Данные["П00110М110004"]
				+ СтрокаМнЧ.Данные["П00110М110005"]);
				Если Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
					СтрокаМнЧ.Данные.Вставить("П00110М110001"
					, СтрокаМнЧ.Данные["П00110М110002"]);
				КонецЕсли;
				П001100001001 = П001100001001 + СтрокаМнЧ.Данные["П00110М110001"];
				П001100001002 = П001100001002 + СтрокаМнЧ.Данные["П00110М110002"];
				П001100001003 = П001100001003 + СтрокаМнЧ.Данные["П00110М110003"];
				П001100001004 = П001100001004 + СтрокаМнЧ.Данные["П00110М110004"];
				П001100001005 = П001100001005 + СтрокаМнЧ.Данные["П00110М110005"];
			КонецЦикла;
			ВеткаР1Пр10.Данные.Вставить("П001100001001", П001100001001);
			ВеткаР1Пр10.Данные.Вставить("П001100001002", П001100001002);
			ВеткаР1Пр10.Данные.Вставить("П001100001003", П001100001003);
			ВеткаР1Пр10.Данные.Вставить("П001100001004", П001100001004);
			ВеткаР1Пр10.Данные.Вставить("П001100001005", П001100001005);
			
			Если ВеткаР1Пр10 = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение
						= СтрокаМнЧ.Данные[ИмяГрафы];
					КонецЦикла;
				КонецЦикла;
				Для каждого Пок Из ВеткаР1Пр10.Данные Цикл
					Форма.ТабличныйДокумент.Области[Пок.Ключ].Значение = Пок.Значение;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел2" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
			Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧ = Форма.СтруктураРеквизитовФормы.мИдГруппы21М1;
		СтруктураГруппыМнЧ = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР2 Из ДеревоДанных.Строки Цикл
			
			ДеревоМнЧ = ВеткаР2.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			Если ВеткаР2 = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						СтрокаМнЧ.Данные.Вставить(
						ИмяГрафы, Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			П000020003001 = 0;
			П000020005001 = 0;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				П000020003001 = П000020003001 + СтрокаМнЧ.Данные["П00021М109001"];
				П000020005001 = П000020005001 + СтрокаМнЧ.Данные["П00021М109002"];
			КонецЦикла;
			ВеткаР2.Данные.Вставить("П000020003001", П000020003001);
			ВеткаР2.Данные.Вставить("П000020005001", П000020005001);
			
			Если ВеткаР2 = АктивнаяВетка Тогда
				Для каждого Пок Из ВеткаР2.Данные Цикл
					Форма.ТабличныйДокумент.Области[Пок.Ключ].Значение = Пок.Значение;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
			Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧ321 = Форма.СтруктураРеквизитовФормы.мИдГруппы321М1;
		СтруктураГруппыМнЧ321 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ321];
		ИменаГрафМнЧ321 = СтруктураГруппыМнЧ321["ИменаГраф"];
		
		ИмяГруппыМнЧ322 = Форма.СтруктураРеквизитовФормы.мИдГруппы322М1;
		СтруктураГруппыМнЧ322 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ322];
		ИменаГрафМнЧ322 = СтруктураГруппыМнЧ322["ИменаГраф"];
		
		Для каждого ВеткаР3 Из ДеревоДанных.Строки Цикл
			
			// Многострочная часть 3.2.1.
			ДеревоМнЧ = ВеткаР3.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ321];
			Если ВеткаР3 = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ321 Цикл
						СтрокаМнЧ.Данные.Вставить(
						ИмяГрафы, Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			П003210025001 = 0;
			П003210025002 = 0;
			П003210025003 = 0;
			П003210025004 = 0;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				П003210025001 = П003210025001 + СтрокаМнЧ.Данные["П00321М121001"];
				П003210025002 = П003210025002 + СтрокаМнЧ.Данные["П00321М122001"];
				П003210025003 = П003210025003 + СтрокаМнЧ.Данные["П00321М123001"];
				П003210025004 = П003210025004 + СтрокаМнЧ.Данные["П00321М124001"];
			КонецЦикла;
			ВеткаР3.Данные.Вставить("П003210025001", П003210025001);
			ВеткаР3.Данные.Вставить("П003210025002", П003210025002);
			ВеткаР3.Данные.Вставить("П003210025003", П003210025003);
			ВеткаР3.Данные.Вставить("П003210025004", П003210025004);
			
			// Многострочная часть 3.2.2.
			ДеревоМнЧ = ВеткаР3.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ322];
			Если ВеткаР3 = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ322 Цикл
						СтрокаМнЧ.Данные.Вставить(
						ИмяГрафы, Форма.ТабличныйДокумент.Области[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			П003220030001 = 0;
			П003220030002 = 0;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				П003220030001 = П003220030001 + СтрокаМнЧ.Данные["П00322М128001"];
				П003220030002 = П003220030002 + СтрокаМнЧ.Данные["П00322М129001"];
			КонецЦикла;
			ВеткаР3.Данные.Вставить("П003220030001", П003220030001);
			ВеткаР3.Данные.Вставить("П003220030002", П003220030002);
			
			Если ВеткаР3 = АктивнаяВетка Тогда
				Для каждого Пок Из ВеткаР3.Данные Цикл
					Форма.ТабличныйДокумент.Области[Пок.Ключ].Значение = Пок.Значение;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ДеревоДанных <> Неопределено Тогда
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]
		= ПоместитьВоВременноеХранилище(ДеревоДанных, Форма.УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СобратьДанные()
	
	СформироватьРаздел1();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьРаздел1()
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1" Тогда
		СохрОКТМО = СокрЛП(ТабличныйДокумент.Области.Найти("П000010001001").Значение);
	Иначе
		СохрОКТМО = СокрЛП(ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы[
		"АдресВоВрХранилищеДеревоДанныхРаздел1"]).Строки[0].Данные.П000010001001);
	КонецЕсли;
	
	ИнициализироватьМногоуровневыйРаздел("Раздел1");
	
	ДеревоРаздела1 = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]);
	
	ВеткаРаздел1 = ДеревоРаздела1.Строки[0];
	
	ВеткаРаздел1.Данные.Вставить("П000010001001", СохрОКТМО);
	
	ДеревоДанныхРаздел1Прил1 = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил1"]);
	
	Стр070_Код1 = 0;
	Стр071_Код1 = 0;
	Стр072_Код1 = 0;
	Стр073_Код1 = 0;
	
	Стр070_Код2 = 0;
	Стр071_Код2 = 0;
	Стр072_Код2 = 0;
	Стр073_Код2 = 0;
	
	Стр070_Код3 = 0;
	Стр071_Код3 = 0;
	Стр072_Код3 = 0;
	Стр073_Код3 = 0;
	
	Стр070_Код4 = 0;
	Стр071_Код4 = 0;
	Стр072_Код4 = 0;
	Стр073_Код4 = 0;
	
	Стр090_Код1 = 0;
	Стр091_Код1 = 0;
	Стр092_Код1 = 0;
	Стр093_Код1 = 0;
	
	Стр090_Код2 = 0;
	Стр091_Код2 = 0;
	Стр092_Код2 = 0;
	Стр093_Код2 = 0;
	
	Для каждого ВеткаРаздел1Прил1 Из ДеревоДанныхРаздел1Прил1.Строки Цикл
		
		ДанныеПодр1_1и1_2 = ВеткаРаздел1Прил1.Строки[0].Строки[0].Данные;
		
		ВеткаРаздел1.Данные["П000010003001"]
		= ВеткаРаздел1.Данные["П000010003001"] + ДанныеПодр1_1и1_2["П011110006001"];
		ВеткаРаздел1.Данные["П000010003101"]
		= ВеткаРаздел1.Данные["П000010003101"] + ДанныеПодр1_1и1_2["П011110006003"];
		ВеткаРаздел1.Данные["П000010003201"]
		= ВеткаРаздел1.Данные["П000010003201"] + ДанныеПодр1_1и1_2["П011110006004"];
		ВеткаРаздел1.Данные["П000010003301"]
		= ВеткаРаздел1.Данные["П000010003301"] + ДанныеПодр1_1и1_2["П011110006005"];
		
		ВеткаРаздел1.Данные["П000010005001"]
		= ВеткаРаздел1.Данные["П000010005001"] + ДанныеПодр1_1и1_2["П011120006001"];
		ВеткаРаздел1.Данные["П000010005101"]
		= ВеткаРаздел1.Данные["П000010005101"] + ДанныеПодр1_1и1_2["П011120006003"];
		ВеткаРаздел1.Данные["П000010005201"]
		= ВеткаРаздел1.Данные["П000010005201"] + ДанныеПодр1_1и1_2["П011120006004"];
		ВеткаРаздел1.Данные["П000010005301"]
		= ВеткаРаздел1.Данные["П000010005301"] + ДанныеПодр1_1и1_2["П011120006005"];
		
		МногострочныеДанныеПодр1_3_1
		= ВеткаРаздел1Прил1.Строки[1].Строки[0].ДанныеМногострочныхЧастей[
		СтруктураРеквизитовФормы.мИдГруппы11131М1];
		Для каждого Строка1_3_1 Из МногострочныеДанныеПодр1_3_1.Строки Цикл
			Стр001 = СокрЛП(Строка1_3_1.Данные["П11131М100101"]);
			Если Стр001 = "1" Тогда
				Стр070_Код1 = Стр070_Код1 + Строка1_3_1.Данные["П11131М105001"];
				Стр071_Код1 = Стр071_Код1 + Строка1_3_1.Данные["П11131М105003"];
				Стр072_Код1 = Стр072_Код1 + Строка1_3_1.Данные["П11131М105004"];
				Стр073_Код1 = Стр073_Код1 + Строка1_3_1.Данные["П11131М105005"];
			ИначеЕсли Стр001 = "2" Тогда
				Стр070_Код3 = Стр070_Код3 + Строка1_3_1.Данные["П11131М105001"];
				Стр071_Код3 = Стр071_Код3 + Строка1_3_1.Данные["П11131М105003"];
				Стр072_Код3 = Стр072_Код3 + Строка1_3_1.Данные["П11131М105004"];
				Стр073_Код3 = Стр073_Код3 + Строка1_3_1.Данные["П11131М105005"];
			КонецЕсли;
		КонецЦикла;
		
		МногострочныеДанныеПодр1_3_2
		= ВеткаРаздел1Прил1.Строки[2].Строки[0].ДанныеМногострочныхЧастей[
		СтруктураРеквизитовФормы.мИдГруппы11132М1];
		Для каждого Строка1_3_2 Из МногострочныеДанныеПодр1_3_2.Строки Цикл
			Стр001 = СокрЛП(Строка1_3_2.Данные["П11132М100101"]);
			Если Стр001 = "1" Тогда
				Стр070_Код2 = Стр070_Код2 + Строка1_3_2.Данные["П11132М105001"];
				Стр071_Код2 = Стр071_Код2 + Строка1_3_2.Данные["П11132М105003"];
				Стр072_Код2 = Стр072_Код2 + Строка1_3_2.Данные["П11132М105004"];
				Стр073_Код2 = Стр073_Код2 + Строка1_3_2.Данные["П11132М105005"];
			ИначеЕсли Стр001 = "2" Тогда
				Стр070_Код4 = Стр070_Код4 + Строка1_3_2.Данные["П11132М105001"];
				Стр071_Код4 = Стр071_Код4 + Строка1_3_2.Данные["П11132М105003"];
				Стр072_Код4 = Стр072_Код4 + Строка1_3_2.Данные["П11132М105004"];
				Стр073_Код4 = Стр073_Код4 + Строка1_3_2.Данные["П11132М105005"];
			КонецЕсли;
		КонецЦикла;
		
		МногострочныеДанныеПодр1_4
		= ВеткаРаздел1Прил1.Строки[3].Строки[0].ДанныеМногострочныхЧастей[
		СтруктураРеквизитовФормы.мИдГруппы1114М1];
		Для каждого Строка1_4 Из МногострочныеДанныеПодр1_4.Строки Цикл
			Стр001 = СокрЛП(Строка1_4.Данные["П01114М100101"]);
			Если Стр001 = "1" Тогда
				Стр090_Код1 = Стр090_Код1 + Строка1_4.Данные["П01114М105001"];
				Стр091_Код1 = Стр091_Код1 + Строка1_4.Данные["П01114М105003"];
				Стр092_Код1 = Стр092_Код1 + Строка1_4.Данные["П01114М105004"];
				Стр093_Код1 = Стр093_Код1 + Строка1_4.Данные["П01114М105005"];
			ИначеЕсли Стр001 = "2" Тогда
				Стр090_Код2 = Стр090_Код2 + Строка1_4.Данные["П01114М105001"];
				Стр091_Код2 = Стр091_Код2 + Строка1_4.Данные["П01114М105003"];
				Стр092_Код2 = Стр092_Код2 + Строка1_4.Данные["П01114М105004"];
				Стр093_Код2 = Стр093_Код2 + Строка1_4.Данные["П01114М105005"];
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	МногострочныеДанные060_073
	= ВеткаРаздел1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М1];
	ИндексСтроки = 0;
	Если ЗначениеЗаполнено(Стр070_Код1)
		ИЛИ ЗначениеЗаполнено(Стр071_Код1)
		ИЛИ ЗначениеЗаполнено(Стр072_Код1)
		ИЛИ ЗначениеЗаполнено(Стр073_Код1) Тогда
		Данные060_073 = МногострочныеДанные060_073.Строки[0].Данные;
		Данные060_073.Вставить("П00001М106001", "18210202131061010160");
		Данные060_073.Вставить("П00001М107001", Стр070_Код1);
		Данные060_073.Вставить("П00001М107101", Стр071_Код1);
		Данные060_073.Вставить("П00001М107201", Стр072_Код1);
		Данные060_073.Вставить("П00001М107301", Стр073_Код1);
		ИндексСтроки = ИндексСтроки + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(Стр070_Код2)
		ИЛИ ЗначениеЗаполнено(Стр071_Код2)
		ИЛИ ЗначениеЗаполнено(Стр072_Код2)
		ИЛИ ЗначениеЗаполнено(Стр073_Код2) Тогда
		Если ИндексСтроки > 0 Тогда
			Строка060_073 = МногострочныеДанные060_073.Строки.Добавить();
			Строка060_073.Данные = Новый Структура;
			Строка060_073.ДанныеМногострочныхЧастей = Новый Структура;
			Данные060_073 = Строка060_073.Данные;
		Иначе
			Данные060_073 = МногострочныеДанные060_073.Строки[0].Данные;
		КонецЕсли;
		Данные060_073.Вставить("П00001М106001", "18210202131061020160");
		Данные060_073.Вставить("П00001М107001", Стр070_Код2);
		Данные060_073.Вставить("П00001М107101", Стр071_Код2);
		Данные060_073.Вставить("П00001М107201", Стр072_Код2);
		Данные060_073.Вставить("П00001М107301", Стр073_Код2);
		ИндексСтроки = ИндексСтроки + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(Стр070_Код3)
		ИЛИ ЗначениеЗаполнено(Стр071_Код3)
		ИЛИ ЗначениеЗаполнено(Стр072_Код3)
		ИЛИ ЗначениеЗаполнено(Стр073_Код3) Тогда
		Если ИндексСтроки > 0 Тогда
			Строка060_073 = МногострочныеДанные060_073.Строки.Добавить();
			Строка060_073.Данные = Новый Структура;
			Строка060_073.ДанныеМногострочныхЧастей = Новый Структура;
			Данные060_073 = Строка060_073.Данные;
		Иначе
			Данные060_073 = МногострочныеДанные060_073.Строки[0].Данные;
		КонецЕсли;
		Данные060_073.Вставить("П00001М106001", "18210202132061010160");
		Данные060_073.Вставить("П00001М107001", Стр070_Код3);
		Данные060_073.Вставить("П00001М107101", Стр071_Код3);
		Данные060_073.Вставить("П00001М107201", Стр072_Код3);
		Данные060_073.Вставить("П00001М107301", Стр073_Код3);
		ИндексСтроки = ИндексСтроки + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(Стр070_Код4)
		ИЛИ ЗначениеЗаполнено(Стр071_Код4)
		ИЛИ ЗначениеЗаполнено(Стр072_Код4)
		ИЛИ ЗначениеЗаполнено(Стр073_Код4) Тогда
		Если ИндексСтроки > 0 Тогда
			Строка060_073 = МногострочныеДанные060_073.Строки.Добавить();
			Строка060_073.Данные = Новый Структура;
			Строка060_073.ДанныеМногострочныхЧастей = Новый Структура;
			Данные060_073 = Строка060_073.Данные;
		Иначе
			Данные060_073 = МногострочныеДанные060_073.Строки[0].Данные;
		КонецЕсли;
		Данные060_073.Вставить("П00001М106001", "18210202132061020160");
		Данные060_073.Вставить("П00001М107001", Стр070_Код4);
		Данные060_073.Вставить("П00001М107101", Стр071_Код4);
		Данные060_073.Вставить("П00001М107201", Стр072_Код4);
		Данные060_073.Вставить("П00001М107301", Стр073_Код4);
		ИндексСтроки = ИндексСтроки + 1;
	КонецЕсли;
	
	МногострочныеДанные080_093
	= ВеткаРаздел1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М2];
	ИндексСтроки = 0;
	Если ЗначениеЗаполнено(Стр090_Код1)
		ИЛИ ЗначениеЗаполнено(Стр091_Код1)
		ИЛИ ЗначениеЗаполнено(Стр092_Код1)
		ИЛИ ЗначениеЗаполнено(Стр093_Код1) Тогда
		Данные080_093 = МногострочныеДанные080_093.Строки[0].Данные;
		Данные080_093.Вставить("П00001М208001", "18210202080061000160");
		Данные080_093.Вставить("П00001М209001", Стр090_Код1);
		Данные080_093.Вставить("П00001М209101", Стр091_Код1);
		Данные080_093.Вставить("П00001М209201", Стр092_Код1);
		Данные080_093.Вставить("П00001М209301", Стр093_Код1);
		ИндексСтроки = ИндексСтроки + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(Стр090_Код2)
		ИЛИ ЗначениеЗаполнено(Стр091_Код2)
		ИЛИ ЗначениеЗаполнено(Стр092_Код2)
		ИЛИ ЗначениеЗаполнено(Стр093_Код2) Тогда
		Если ИндексСтроки > 0 Тогда
			Строка080_093 = МногострочныеДанные080_093.Строки.Добавить();
			Строка080_093.Данные = Новый Структура;
			Строка080_093.ДанныеМногострочныхЧастей = Новый Структура;
			Данные080_093 = Строка080_093.Данные;
		Иначе
			Данные080_093 = МногострочныеДанные080_093.Строки[0].Данные;
		КонецЕсли;
		Данные080_093.Вставить("П00001М208001", "18210202120061000160");
		Данные080_093.Вставить("П00001М209001", Стр090_Код2);
		Данные080_093.Вставить("П00001М209101", Стр091_Код2);
		Данные080_093.Вставить("П00001М209201", Стр092_Код2);
		Данные080_093.Вставить("П00001М209301", Стр093_Код2);
	КонецЕсли;
	
	ВеткаРаздел1.Данные["П000010002001"] = "18210202010061010160";
	ВеткаРаздел1.Данные["П000010004001"] = "18210202101081013160";
	ВеткаРаздел1.Данные["П000010010001"] = "18210202090071010160";
	
	ДеревоДанныхРаздел1Прил2 = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил2"]);
	
	Для каждого ВеткаРаздел1Прил2 Из ДеревоДанныхРаздел1Прил2.Строки Цикл
		
		ПризнакСтр090 = СокрЛП(ВеткаРаздел1Прил2.Данные["П000120009001"]);
		Если ПризнакСтр090 = "1" Тогда
			ВеткаРаздел1.Данные["П000010011001"]
			= ВеткаРаздел1.Данные["П000010011001"] + ВеткаРаздел1Прил2.Данные["П000120009002"];
		ИначеЕсли ПризнакСтр090 = "2" Тогда
			ВеткаРаздел1.Данные["П000010012001"]
			= ВеткаРаздел1.Данные["П000010012001"] + ВеткаРаздел1Прил2.Данные["П000120009002"];
		КонецЕсли;
		
		ПризнакСтр090 = СокрЛП(ВеткаРаздел1Прил2.Данные["П000120009005"]);
		Если ПризнакСтр090 = "1" Тогда
			ВеткаРаздел1.Данные["П000010011101"]
			= ВеткаРаздел1.Данные["П000010011101"] + ВеткаРаздел1Прил2.Данные["П000120009006"];
		ИначеЕсли ПризнакСтр090 = "2" Тогда
			ВеткаРаздел1.Данные["П000010012101"]
			= ВеткаРаздел1.Данные["П000010012101"] + ВеткаРаздел1Прил2.Данные["П000120009006"];
		КонецЕсли;
		
		ПризнакСтр090 = СокрЛП(ВеткаРаздел1Прил2.Данные["П000120009007"]);
		Если ПризнакСтр090 = "1" Тогда
			ВеткаРаздел1.Данные["П000010011201"]
			= ВеткаРаздел1.Данные["П000010011201"] + ВеткаРаздел1Прил2.Данные["П000120009008"];
		ИначеЕсли ПризнакСтр090 = "2" Тогда
			ВеткаРаздел1.Данные["П000010012201"]
			= ВеткаРаздел1.Данные["П000010012201"] + ВеткаРаздел1Прил2.Данные["П000120009008"];
		КонецЕсли;
		
		ПризнакСтр090 = СокрЛП(ВеткаРаздел1Прил2.Данные["П000120009009"]);
		Если ПризнакСтр090 = "1" Тогда
			ВеткаРаздел1.Данные["П000010011301"]
			= ВеткаРаздел1.Данные["П000010011301"] + ВеткаРаздел1Прил2.Данные["П000120009010"];
		ИначеЕсли ПризнакСтр090 = "2" Тогда
			ВеткаРаздел1.Данные["П000010012301"]
			= ВеткаРаздел1.Данные["П000010012301"] + ВеткаРаздел1Прил2.Данные["П000120009010"];
		КонецЕсли;
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ДеревоРаздела1,
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]);
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1" Тогда
		НовыеНомераСтрокМногоуровнегоРаздела = Новый Массив;
		НовыеНомераСтрокМногоуровнегоРаздела.Добавить(1);
		ВывестиДанныеВТабличныйДокумент("Раздел1", НовыеНомераСтрокМногоуровнегоРаздела);
	КонецЕсли;
	
	РасчетНаСервере("Раздел1");
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруЗависимыхЯчеекДляАвторасчета()
	
	СтруктураЗависимыхЯчеекДляАвторасчета = Новый Структура;
	
	// Раздел 3.
	Структ = Новый Структура;
	Структ.Вставить("П003210025001", "Итог");
	Структ.Вставить("П003210025002", "Итог");
	Структ.Вставить("П003210025003", "Итог");
	Структ.Вставить("П003210025004", "Итог");
	Структ.Вставить("П003220030001", "Итог");
	Структ.Вставить("П003220030002", "Итог");
	Структ.Вставить("Итого280", "П00321М121001;П00321М122001;П00321М123001;П00321М124001");
	Структ.Вставить("Итого330", "П00322М128001;П00322М129001");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел3", Структ);
	
	// Раздел 2.
	Структ = Новый Структура;
	Структ.Вставить("П000020003001", "Итог");
	Структ.Вставить("П000020005001", "Итог");
	Структ.Вставить("Итого", "П00021М109001;П00021М109002");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел2", Структ);
	
	// Прил. 10 к Разделу 1.
	Структ = Новый Структура;
	Структ.Вставить("П001100001001", "Итог");
	Структ.Вставить("П001100001002", "Итог");
	Структ.Вставить("П001100001003", "Итог");
	Структ.Вставить("П001100001004", "Итог");
	Структ.Вставить("П001100001005", "Итог");
	Структ.Вставить("Итого", "П00110М110001;П00110М110002;П00110М110003;П00110М110004;П00110М110005");
	Структ.Вставить("П00110М110002", "П00110М110003;П00110М110004;П00110М110005");
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П00110М110001", "П00110М110002;П00110М110003;П00110М110004;П00110М110005");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил10", Структ);
	
	// Прил. 9 к Разделу 1.
	Структ = Новый Структура;
	Структ.Вставить("П000190001001", "Итог");
	Структ.Вставить("П000190001002", "Итог");
	Структ.Вставить("П000190001003", "Итог");
	Структ.Вставить("П000190001004", "Итог");
	Структ.Вставить("П000190001005", "Итог");
	Структ.Вставить("Итого", "П00019М108001;П00019М108002;П00019М108003;П00019М108004;П00019М108005");
	Структ.Вставить("П00019М108002", "П00019М108003;П00019М108004;П00019М108005");
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П00019М108001", "П00019М108002;П00019М108003;П00019М108004;П00019М108005");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил9", Структ);
	
	// Прил. 8 к Разделу 1.
	Структ = Новый Структура;
	Структ.Вставить("П000180001001", "Итог");
	Структ.Вставить("П000180001002", "Итог");
	Структ.Вставить("П000180001003", "Итог");
	Структ.Вставить("П000180001004", "Итог");
	Структ.Вставить("П000180001005", "Итог");
	Структ.Вставить("Итого", "П00018М106001;П00018М106002;П00018М106003;П00018М106004;П00018М106005");
	Структ.Вставить("П00018М106002", "П00018М106003;П00018М106004;П00018М106005");
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П00018М106001", "П00018М106002;П00018М106003;П00018М106004;П00018М106005");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил8", Структ);
	
	// Прил. 7 к Разделу 1.
	Структ = Новый Структура;
	Структ.Вставить("П000170005001", "П000170001001;П000170002001;П000170003001;П000170004001");
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 12 Тогда
		Структ.Вставить("П000170005002", "П000170001002;П000170002002;П000170003002;П000170004002");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил7", Структ);
	
	// Прил. 5-6 к Разделу 1.
	Структ = Новый Структура;
	Структ.Вставить("П000150004002", "П000150002002;П000150003002");
	Структ.Вставить("П000150004003", "П000150002003;П000150003003");
	Структ.Вставить("П000160008002", "П000160006002;П000160007002");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил5_6", Структ);
	
	// Прил. 4 к Разделу 1.
	Структ = Новый Структура;
	Структ.Вставить("П000140004003", "П000140005003;П000140006003");
	Структ.Вставить("П000140004004", "П000140005004;П000140006004");
	Структ.Вставить("П000140001002", "П000140002002;П000140003002;П000140004002;П000140005002;П000140006002");
	Структ.Вставить("П000140001004", "П000140002004;П000140003004;П000140004004;П000140005004;П000140006004");
	Структ.Вставить("П000140010003", "П000140011003;П000140012003");
	Структ.Вставить("П000140010004", "П000140011004;П000140012004");
	Структ.Вставить("П000140007002", "П000140008002;П000140009002;П000140010002;П000140011002;П000140012002");
	Структ.Вставить("П000140007004", "П000140008004;П000140009004;П000140010004;П000140011004;П000140012004");
	Структ.Вставить("П000140013002", "П000140014002");
	Структ.Вставить("П000140013004", "П000140014004");
	Структ.Вставить("П000140018003", "П000140019003;П000140020003");
	Структ.Вставить("П000140018004", "П000140019004;П000140020004");
	Структ.Вставить("П000140015002", "П000140016002;П000140017002;П000140018002;П000140019002;П000140020002");
	Структ.Вставить("П000140015004", "П000140016004;П000140017004;П000140018004;П000140019004;П000140020004");
	Структ.Вставить("П000140021002", "П000140022002;П000140023002");
	Структ.Вставить("П000140021004", "П000140022004;П000140023004");
	Структ.Вставить("П000140029002", "П000140006002;П000140012002;П000140020002");
	Структ.Вставить("П000140029003", "П000140006003;П000140012003;П000140020003");
	Структ.Вставить("П000140029004", "П000140006004;П000140012004;П000140020004");
	Структ.Вставить("П000140028002", "П000140005002;П000140011002;П000140019002");
	Структ.Вставить("П000140028003", "П000140005003;П000140011003;П000140019003");
	Структ.Вставить("П000140028004", "П000140005004;П000140011004;П000140019004");
	Структ.Вставить("П000140027002", "П000140004002;П000140010002;П000140018002");
	Структ.Вставить("П000140027003", "П000140028003;П000140005003;П000140011003;П000140019003;П000140029003;П000140006003;П000140012003;П000140020003");
	Структ.Вставить("П000140027004", "П000140028004;П000140005004;П000140011004;П000140019004;П000140029004;П000140006004;П000140012004;П000140020004");
	Структ.Вставить("П000140026002", "П000140003002;П000140009002;П000140017002;П000140023002");
	Структ.Вставить("П000140026003", "П000140003003;П000140009003;П000140017003;П000140023003");
	Структ.Вставить("П000140026004", "П000140003004;П000140009004;П000140017004;П000140023004");
	Структ.Вставить("П000140025002", "П000140002002;П000140008002;П000140014002;П000140016002;П000140022002");
	Структ.Вставить("П000140025003", "П000140002003;П000140008003;П000140014003;П000140016003;П000140022003");
	Структ.Вставить("П000140025004", "П000140002004;П000140008004;П000140014004;П000140016004;П000140022004");
	Структ.Вставить("П000140024002", "П000140025002;П000140002002;П000140008002;П000140014002;П000140016002;П000140022002;П000140026002;П000140003002;П000140009002;П000140017002;П000140023002;П000140027002;П000140027002;П000140004002;П000140010002;П000140018002");
	Структ.Вставить("П000140024004", "П000140025004;П000140002004;П000140008004;П000140014004;П000140016004;П000140022004;П000140026004;П000140003004;П000140009004;П000140017004;П000140023004;П000140027004;П000140028004;П000140005004;П000140011004;П000140019004;П000140029004;П000140006004;П000140012004;П000140020004;П000140030004;П000140031004");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил4", Структ);
	
	// Прил. 3 к Разделу 1.
	Структ = Новый Структура;
	Структ.Вставить("П000130006002", "П000130006102;П000130006202");
	Структ.Вставить("П000130006003", "П000130006103;П000130006203");
	Структ.Вставить("П000130006004", "П000130006104;П000130006204");
	Структ.Вставить("П000130010003", "П000130001003;П000130002003;П000130003003;П000130004003;П000130005003;П000130006003;П000130006103;П000130006203;П000130007003;П000130008003;П000130009003");
	Структ.Вставить("П000130010004", "П000130001004;П000130003004;П000130006004;П000130006104;П000130006204;П000130007004;П000130008004");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил3", Структ);
	
	// Прил. 2 к Разделу 1.
	Структ = Новый Структура;
	Структ.Вставить("П000120002002", "П000120002003;П000120002004;П000120002005");
	Структ.Вставить("П000120003002", "П000120003003;П000120003004;П000120003005");
	Структ.Вставить("П000120004002", "П000120004003;П000120004004;П000120004005");
	Структ.Вставить("П000120005001", "П000120002001;П000120002002;П000120002003;П000120002004;П000120002005;П000120003001;П000120003002;П000120003003;П000120003004;П000120003005;П000120004001;П000120004002;П000120004003;П000120004004;П000120004005");
	Структ.Вставить("П000120005002", "П000120002002;П000120002003;П000120002004;П000120002005;П000120003002;П000120003003;П000120003004;П000120003005;П000120004002;П000120004003;П000120004004;П000120004005");
	Структ.Вставить("П000120005003", "П000120002003;П000120003003;П000120004003");
	Структ.Вставить("П000120005004", "П000120002004;П000120003004;П000120004004");
	Структ.Вставить("П000120005005", "П000120002005;П000120003005;П000120004005");
	Структ.Вставить("П000120005102", "П000120005103;П000120005104;П000120005105");
	Структ.Вставить("П000120005202", "П000120005203;П000120005204;П000120005205");
	Структ.Вставить("П000120005302", "П000120005303;П000120005304;П000120005305");
	Структ.Вставить("П000120005402", "П000120005403;П000120005404;П000120005405");
	Структ.Вставить("П000120006002", "П000120006003;П000120006004;П000120006005");
	Структ.Вставить("П000120007002", "П000120007003;П000120007004;П000120007005");
	Структ.Вставить("П000120008002", "П000120008003;П000120008004;П000120008005");
	Структ.Вставить("П000120009001", "");
	Структ.Вставить("П000120009002", "");
	Структ.Вставить("П000120009003", "");
	Структ.Вставить("П000120009004", "");
	Структ.Вставить("П000120009005", "");
	Структ.Вставить("П000120009006", "");
	Структ.Вставить("П000120009007", "");
	Структ.Вставить("П000120009008", "");
	Структ.Вставить("П000120009009", "");
	Структ.Вставить("П000120009010", "");
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П000120002001", "П000120002002;П000120002003;П000120002004;П000120002005");
		Структ.Вставить("П000120003001", "П000120003002;П000120003003;П000120003004;П000120003005");
		Структ.Вставить("П000120004001", "П000120004002;П000120004003;П000120004004;П000120004005");
		Структ.Вставить("П000120005101", "П000120005102;П000120005103;П000120005104;П000120005105");
		Структ.Вставить("П000120005201", "П000120005202;П000120005203;П000120005204;П000120005205");
		Структ.Вставить("П000120005301", "П000120005302;П000120005303;П000120005304;П000120005305");
		Структ.Вставить("П000120005401", "П000120005402;П000120005403;П000120005404;П000120005405");
		Структ.Вставить("П000120006001", "П000120006002;П000120006003;П000120006004;П000120006005");
		Структ.Вставить("П000120007001", "П000120007002;П000120007003;П000120007004;П000120007005");
		Структ.Вставить("П000120008001", "П000120008002;П000120008003;П000120008004;П000120008005");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил2", Структ);
	
	// Подр. 1.4 Прил. 1 к Разделу 1.
	Структ = Новый Структура;
	Структ.Вставить("П01114М102002", "П01114М102003;П01114М102004;П01114М102005");
	Структ.Вставить("П01114М103002", "П01114М103003;П01114М103004;П01114М103005");
	Структ.Вставить("П01114М104001", "П01114М102001;П01114М102002;П01114М102003;П01114М102004;П01114М102005;П01114М103001;П01114М103002;П01114М103003;П01114М103004;П01114М103005");
	Структ.Вставить("П01114М104002", "П01114М102002;П01114М102003;П01114М102004;П01114М102005;П01114М103002;П01114М103003;П01114М103004;П01114М103005");
	Структ.Вставить("П01114М104003", "П01114М102003;П01114М103003");
	Структ.Вставить("П01114М104004", "П01114М102004;П01114М103004");
	Структ.Вставить("П01114М104005", "П01114М102005;П01114М103005");
	Структ.Вставить("П01114М105002", "П01114М105003;П01114М105004;П01114М105005");
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П01114М102001", "П01114М102002;П01114М102003;П01114М102004;П01114М102005");
		Структ.Вставить("П01114М103001", "П01114М102002;П01114М103003;П01114М103004;П01114М103005");
		Структ.Вставить("П01114М105001", "П01114М102002;П01114М105003;П01114М105004;П01114М105005");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил1Подр1_4", Структ);
	
	// Подр. 1.3.2 Прил. 1 к Разделу 1.
	Структ = Новый Структура;
	Структ.Вставить("П11132М102002", "П11132М102003;П11132М102004;П11132М102005");
	Структ.Вставить("П11132М103002", "П11132М103003;П11132М103004;П11132М103005");
	Структ.Вставить("П11132М104001", "П11132М102001;П11132М102002;П11132М102003;П11132М102004;П11132М102005;П11132М103001;П11132М103002;П11132М103003;П11132М103004;П11132М103005");
	Структ.Вставить("П11132М104002", "П11132М102002;П11132М102003;П11132М102004;П11132М102005;П11132М103002;П11132М103003;П11132М103004;П11132М103005");
	Структ.Вставить("П11132М104003", "П11132М102003;П11132М103003");
	Структ.Вставить("П11132М104004", "П11132М102004;П11132М103004");
	Структ.Вставить("П11132М104005", "П11132М102005;П11132М103005");
	Структ.Вставить("П11132М105002", "П11132М105003;П11132М105004;П11132М105005");
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П11132М102001", "П11132М102002;П11132М102003;П11132М102004;П11132М102005");
		Структ.Вставить("П11132М103001", "П11132М102002;П11132М103003;П11132М103004;П11132М103005");
		Структ.Вставить("П11132М105001", "П11132М102002;П11132М105003;П11132М105004;П11132М105005");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил1Подр1_3_2", Структ);
	
	// Подр. 1.3.1 Прил. 1 к Разделу 1.
	Структ = Новый Структура;
	Структ.Вставить("П11131М102002", "П11131М102003;П11131М102004;П11131М102005");
	Структ.Вставить("П11131М103002", "П11131М103003;П11131М103004;П11131М103005");
	Структ.Вставить("П11131М104001", "П11131М102001;П11131М102002;П11131М102003;П11131М102004;П11131М102005;П11131М103001;П11131М103002;П11131М103003;П11131М103004;П11131М103005");
	Структ.Вставить("П11131М104002", "П11131М102002;П11131М102003;П11131М102004;П11131М102005;П11131М103002;П11131М103003;П11131М103004;П11131М103005");
	Структ.Вставить("П11131М104003", "П11131М102003;П11131М103003");
	Структ.Вставить("П11131М104004", "П11131М102004;П11131М103004");
	Структ.Вставить("П11131М104005", "П11131М102005;П11131М103005");
	Структ.Вставить("П11131М105002", "П11131М105003;П11131М105004;П11131М105005");
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П11131М102001", "П11131М102002;П11131М102003;П11131М102004;П11131М102005");
		Структ.Вставить("П11131М103001", "П11131М102002;П11131М103003;П11131М103004;П11131М103005");
		Структ.Вставить("П11131М105001", "П11131М102002;П11131М105003;П11131М105004;П11131М105005");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил1Подр1_3_1", Структ);
	
	// Подр. 1.1, 1.2 Прил. 1 к Разделу 1.
	Структ = Новый Структура;
	Структ.Вставить("П011110003002", "П011110003003;П011110003004;П011110003005");
	Структ.Вставить("П011110004002", "П011110004003;П011110004004;П011110004005");
	Структ.Вставить("П011110005001", "П011110003001;П011110003002;П011110003003;П011110003004;П011110003005;П011110004001;П011110004002;П011110004003;П011110004004;П011110004005");
	Структ.Вставить("П011110005002", "П011110003002;П011110003003;П011110003004;П011110003005;П011110004002;П011110004003;П011110004004;П011110004005");
	Структ.Вставить("П011110005003", "П011110003003;П011110004003");
	Структ.Вставить("П011110005004", "П011110003004;П011110004004");
	Структ.Вставить("П011110005005", "П011110003005;П011110004005");
	Структ.Вставить("П011110005102", "П011110005103;П011110005104;П011110005105");
	Структ.Вставить("П011110006102", "П011110006103;П011110006104;П011110006105");
	Структ.Вставить("П011110006202", "П011110006203;П011110006204;П011110006205");
	Структ.Вставить("П011110006001", "П011110006101;П011110006201;П011110006102;П011110006202;П011110006103;П011110006203;П011110006104;П011110006204;П011110006105;П011110006205");
	Структ.Вставить("П011110006002", "П011110006102;П011110006202;П011110006103;П011110006203;П011110006104;П011110006204;П011110006105;П011110006205");
	Структ.Вставить("П011110006003", "П011110006103;П011110006203");
	Структ.Вставить("П011110006004", "П011110006104;П011110006204");
	Структ.Вставить("П011110006005", "П011110006105;П011110006205");
	Структ.Вставить("П011120003002", "П011120003003;П011120003004;П011120003005");
	Структ.Вставить("П011120004002", "П011120004003;П011120004004;П011120004005");
	Структ.Вставить("П011120005001", "П011120003001;П011120003002;П011120003003;П011120003004;П011120003005;П011120004001;П011120004002;П011120004003;П011120004004;П011120004005");
	Структ.Вставить("П011120005002", "П011120003002;П011120003003;П011120003004;П011120003005;П011120004002;П011120004003;П011120004004;П011120004005");
	Структ.Вставить("П011120005003", "П011120003003;П011120004003");
	Структ.Вставить("П011120005004", "П011120003004;П011120004004");
	Структ.Вставить("П011120005005", "П011120003005;П011120004005");
	Структ.Вставить("П011120006002", "П011120006003;П011120006004;П011120006005");
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П011110003001", "П011110003002;П011110003003;П011110003004;П011110003005");
		Структ.Вставить("П011110004001", "П011110004002;П011110004003;П011110004004;П011110004005");
		Структ.Вставить("П011110005101", "П011110005102;П011110005103;П011110005104;П011110005105");
		Структ.Вставить("П011110006101", "П011110006102;П011110006103;П011110006104;П011110006105");
		Структ.Вставить("П011110006201", "П011110006202;П011110006203;П011110006204;П011110006205");
		Структ.Вставить("П011120003001", "П011120003002;П011120003003;П011120003004;П011120003005");
		Структ.Вставить("П011120004001", "П011120004002;П011120004003;П011120004004;П011120004005");
		Структ.Вставить("П011120006001", "П011120006002;П011120006003;П011120006004;П011120006005");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил1Подр1_1и1_2", Структ);
	
	// Раздел 1.
	Структ = Новый Структура;
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П000010003001", "П000010003101;П000010003201;П000010003301");
		Структ.Вставить("П000010005001", "П000010005101;П000010005201;П000010005301");
		Структ.Вставить("П00001М107001", "П00001М107101;П00001М107201;П00001М107301");
		Структ.Вставить("П00001М209001", "П00001М209101;П00001М209201;П00001М209301");
		Структ.Вставить("П000010011001", "П000010011101;П000010011201;П000010011301;П000010012101;П000010012201;П000010012301");
		Структ.Вставить("П000010012001", "П000010011101;П000010011201;П000010011301;П000010012101;П000010012201;П000010012301");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1", Структ);
	
КонецПроцедуры

#КонецОбласти

#Область ВыгрузкаИПроверкаВыгрузкиЭлектронногоПредставленияИЗагрузкаОтчетаИзФайла

#Область ЗапросВФНСНаПроверкуСведенийРаботников

&НаКлиенте
Процедура ВыгрузитьСведенияРаботников(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьСведенияРаботниковЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьСведенияРаботниковЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СформироватьСтруктуруПоказателей();
	ПараметрыВыгрузки = СформироватьСтруктуруПараметров();
	
	Если НЕ ПроверитьВозможностьВыгрузкиСведенийРаботников(ПараметрыВыгрузки) Тогда
		
		ТаблицаСообщенийЗаполнена = Истина;
		
		Если ТаблицаСообщений.Количество() = 0 Тогда
			ТаблицаСообщенийЗаполнена = Ложь;
			НовСтр = ТаблицаСообщений.Добавить();
			НовСтр.Описание = "Выгрузка сведений работников прервана.";
		КонецЕсли;
		
		ПредставлениеРасчетаПоСтраховымВзносам = "Расчет по страховым взносам за "
		+ ПредставлениеПериода(НачалоДня(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета),
		КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета), "ФП=Истина") + ?(НомерКорректировки = 0,
		" (Первичный", " (Корректирующий, номер корректировки " + Формат(НомерКорректировки, "ЧГ="))
		+ ". ИФНС: " + СокрЛП(СтруктураДанныхТитульный.НалоговыйОрган) + ")";
		
		Для Каждого СтрСообщения Из ТаблицаСообщений Цикл
			СтрСообщения.ОтчетДок = СтруктураРеквизитовФормы.мСохраненныйДок;
			СтрСообщения.Отчет = ПредставлениеРасчетаПоСтраховымВзносам;
		КонецЦикла;
		
		ТаблицаСообщенийСтруктура = Новый Структура("ТаблицаСообщений", ТаблицаСообщений);
		
		ПараметрыФормы = Новый Структура("ВладелецТС", ТаблицаСообщенийСтруктура);
		
		ФормаНавигацииПоОшибкам = ПолучитьФорму("Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаНавигацииПоОшибкам", ПараметрыФормы);
		
		Если ФормаНавигацииПоОшибкам.Открыта() Тогда
			
			ФормаНавигацииПоОшибкам.Закрыть();
			
			ФормаНавигацииПоОшибкам = ПолучитьФорму("Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаНавигацииПоОшибкам", ПараметрыФормы);
			
		КонецЕсли;
		
		ФормаНавигацииПоОшибкам.Открыть();
		
		ТаблицаСообщений.Очистить();
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Не удалось выгрузить сведения работающих лиц из Раздела 3 (%1).'"), ПредставлениеРасчетаПоСтраховымВзносам);
		Сообщение.Сообщить();
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Не удалось сформировать тексты выгрузки.'");
		Сообщение.Сообщить();
		
		Если ТаблицаСообщенийЗаполнена Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru='Для исправления ошибок используйте окно навигации по ошибкам.'");
			Сообщение.Сообщить();
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("РасчетПоСтраховымВзносам", СтруктураРеквизитовФормы.мСохраненныйДок);
	
	ИнтерфейсыВзаимодействияБРОКлиент.СформироватьИСохранитьНаДискФайлЗапросаВФНСНаПроверкуСведенийРаботников(
	СтруктураПараметров);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьВозможностьВыгрузкиСведенийРаботников(ПараметрыВыгрузки)
	
	СтатусПроверки = Истина;
	
	ДанныеМногоуровневыхРазделов = Новый Структура;
	СохрСтруктура = СохраненныеДанныеОтчета();
	Для каждого ЭлементСтруктуры Из СохрСтруктура.ДанныеМногоуровневыхРазделов Цикл
		ДанныеМногоуровневыхРазделов.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;
	
	// Титульный лист.
	Если ПараметрыВыгрузки.ЭтоЮЛ Тогда
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ИННОрг) Тогда
			СообщитьВТС("Не задан ИНН организации, обособленного подразделения.",
			"Титульный", "ИНН");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(ПараметрыВыгрузки.ИННОрг) <> 10 Тогда
			СообщитьВТС("Задан ИНН организации, обособленного подразделения, не состоящий из 10 цифр.",
			"Титульный", "ИНН");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.КПП) Тогда
			СообщитьВТС("Не задан КПП организации, обособленного подразделения.",
			"Титульный", "КПП");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(ПараметрыВыгрузки.КПП) <> 9 Тогда
			СообщитьВТС("Задан КПП организации, обособленного подразделения, не состоящий из 9 символов.",
			"Титульный", "КПП");
			СтатусПроверки = Ложь;
		КонецЕсли;
	Иначе
		Если ПараметрыВыгрузки.ЭтоПБОЮЛ Тогда
			Если ПараметрыВыгрузки.ПоМесту = "124" Тогда
				ИП_ГлаваКФХ = " главы крестьянского (фермерского) хозяйства";
			Иначе
				ИП_ГлаваКФХ = " индивидуального предпринимателя";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ИННОрг) Тогда
				ОписаниеОшибки = "Не задан ИНН" + ИП_ГлаваКФХ + ".";
				СообщитьВТС(ОписаниеОшибки, "Титульный", "ИНН");
				СтатусПроверки = Ложь;
			ИначеЕсли СтрДлина(ПараметрыВыгрузки.ИННОрг) <> 12 Тогда
				ОписаниеОшибки = "Задан ИНН" + ИП_ГлаваКФХ + ", не состоящий из 12 цифр.";
				СообщитьВТС(ОписаниеОшибки, "Титульный", "ИНН");
				СтатусПроверки = Ложь;
			КонецЕсли;
		Иначе
			Если ПараметрыВыгрузки.ЭтоФизЛицоСИНН Тогда
				Если СтрДлина(ПараметрыВыгрузки.ИННОрг) <> 12 Тогда
					ОписаниеОшибки = "Задан ИНН физического лица, не состоящий из 12 цифр.";
					СообщитьВТС(ОписаниеОшибки, "Титульный", "ИНН");
					СтатусПроверки = Ложь;
				КонецЕсли;
			Иначе
				// Физическое лицо без ИНН.
				ОписаниеОшибки = "Не задан ИНН физического лица.";
				СообщитьВТС(ОписаниеОшибки, "Титульный", "ИНН");
				СтатусПроверки = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.КодНО) Тогда
		СообщитьВТС("Не задан код налогового органа.",
		"Титульный", "НалоговыйОрган");
		СтатусПроверки = Ложь;
	ИначеЕсли СтрДлина(ПараметрыВыгрузки.КодНО) <> 4 Тогда
		СообщитьВТС("Задан код налогового органа, не состоящий из 4 цифр.",
		"Титульный", "НалоговыйОрган");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	// Раздел 3.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел3;
	Если ЗаполненРаздел(ДеревоРаздела, "Раздел3") Тогда
		
		Для каждого СтраницаРаздела Из ДеревоРаздела.Строки Цикл
			
			// Подраздел 3.1.
			Данные = СтраницаРаздела.Данные;
			НомерСтраницы = Формат(ДеревоРаздела.Строки.Индекс(СтраницаРаздела) + 1, "ЧГ=");
			
			ДолженБытьЗаполненИННФЛ
			= НЕ (ЗначениеЗаполнено(СокрЛП(Данные["П000310014001"]))
			ИЛИ ЗначениеЗаполнено(СокрЛП(Данные["П000310015001"]))
			ИЛИ ЗначениеЗаполнено(СокрЛП(Данные["П000310015002"])));
			
			ДолжныБытьЗаполненыКодСерияНомерДокумента
			= НЕ ЗначениеЗаполнено(СокрЛП(Данные["П000310006001"]))
			ИЛИ (ЗначениеЗаполнено(СокрЛП(Данные["П000310014001"]))
			ИЛИ ЗначениеЗаполнено(СокрЛП(Данные["П000310015001"]))
			ИЛИ ЗначениеЗаполнено(СокрЛП(Данные["П000310015002"])));
			
			Если ДолженБытьЗаполненИННФЛ И ДолжныБытьЗаполненыКодСерияНомерДокумента Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
				+ ": должен быть заполнен ИНН физического лица и (или) должны быть заполнены сведения документа, удостоверяющего личность.",
				"Раздел3", "П000310006001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ (ДолженБытьЗаполненИННФЛ И ДолжныБытьЗаполненыКодСерияНомерДокумента) Тогда
				ИННФЛ = СокрЛП(Данные["П000310006001"]);
				Если ДолженБытьЗаполненИННФЛ Тогда
					ИННФЛДлина = СтрДлина(ИННФЛ);
					Если НЕ ИННФЛДлина = 12 Тогда
						СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы + ": в строке 060 не"
						+ ?(ИННФЛДлина = 0, "", "верно") + " задан ИНН физического лица.",
						"Раздел3", "П000310006001", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
				Иначе
					Если ЗначениеЗаполнено(ИННФЛ) Тогда
						Если НЕ СтрДлина(ИННФЛ) = 12 Тогда
							СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
							+ ": в строке 060 неверно задан ИНН физического лица.",
							"Раздел3", "П000310006001", НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			СНИЛСДлина = СтрДлина(СокрЛП(Данные["П000310007001"]));
			Если НЕ СНИЛСДлина = 14 Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы + ": в строке 070 не"
				+ ?(СНИЛСДлина = 0, "", "верно") + " задан СНИЛС физического лица.",
				"Раздел3", "П000310007001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СокрЛП(Данные["П000310008001"])) Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
				+ ": в строке 080 не задана фамилия физического лица.",
				"Раздел3", "П000310008001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СокрЛП(Данные["П000310009001"])) Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
				+ ": в строке 090 не задано имя физического лица.",
				"Раздел3", "П000310009001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Данные["П000310011001"]) Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
				+ ": в строке 110 не задана дата рождения физического лица.",
				"Раздел3", "П000310011001", НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(Данные["П000310011001"]) Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
				+ ": в строке 110 задана дата рождения физического лица, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
				"Раздел3", "П000310011001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ (ДолженБытьЗаполненИННФЛ И ДолжныБытьЗаполненыКодСерияНомерДокумента) Тогда
				Если ДолжныБытьЗаполненыКодСерияНомерДокумента Тогда
					КодВидДокДлина = СтрДлина(СокрЛП(Данные["П000310014001"]));
					Если НЕ КодВидДокДлина = 2 Тогда
						СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы + ": в строке 140 не"
						+ ?(КодВидДокДлина = 0, "", "верно") + " задан код вида документа, удостоверяющего личность.",
						"Раздел3", "П000310014001", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					Если НЕ (ЗначениеЗаполнено(СокрЛП(Данные["П000310015001"]))
						ИЛИ ЗначениеЗаполнено(СокрЛП(Данные["П000310015002"]))) Тогда
						СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
						+ ": в строке 150 не заданы серия и номер документа, удостоверяющего личность.",
						"Раздел3", "П000310015001", НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли СтрДлина(СокрЛП(Данные["П000310015001"])
						+ СокрЛП(Данные["П000310015002"])) > 24 Тогда
						СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
						+ ": в строке 150 общее количество символов в серии и номере документа, удостоверяющего личность, превышает 24.",
						"Раздел3", "П000310015001", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		СообщитьВТС("Раздел 3 не заполнен.", "Раздел3", "П000310008001", "1");
		СтатусПроверки = Ложь;
		
	КонецЕсли;
	
	Возврат СтатусПроверки;
	
КонецФункции

#КонецОбласти

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзФайлаЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередЗагрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьИзФайлаОтчет();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаОтчет() Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзФайлаОтчетЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаОтчетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	РегламентированнаяОтчетностьЗагрузкаКлиент.ЗагрузитьИзФайлаОтчет(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Функция ЗагрузкаОтчетаИзФайла(ДанныеДляЗагрузки) Экспорт
	
	Если Модифицированность Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон(НСтр("ru='Отчет ""%1"" не сохранен.'"), ЭтотОбъект.Заголовок);
		Сообщение.Сообщить();
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗагрузкаОтчетаИзФайлаНаСервере(ДанныеДляЗагрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
		
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ЗагрузкаОтчетаИзФайлаНаСервере(ДанныеДляЗагрузки)
	
	СформироватьСтруктуруПоказателей();
	
	ПараметрыОтчета = СформироватьСтруктуруПараметров();
	
	ДеревоДляЗагрузки = ИзвлечьСтруктуруXML("СхемаВыгрузки501");
	
	Если НЕ РегламентированнаяОтчетностьЗагрузка.ЗагрузкаОтчетаИзФайла(
		ЭтотОбъект, ПараметрыОтчета, ДанныеДляЗагрузки, ДеревоДляЗагрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура Выгрузить(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(
		ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ВыгрузитьОтчет();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОтчет() Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьОтчетЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОтчетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ФормаВыгрузкиРеглОтчета = Неопределено;
	
	ФормаВыгрузкиРеглОтчета = ПолучитьФорму(
		"Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента", , ЭтаФорма);
	
	СпДокОсн = Новый СписокЗначений;
	СпДокОсн.Добавить(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	ФормаВыгрузкиРеглОтчета.СформироватьИЗаписать(СпДокОсн);
	
КонецПроцедуры

&НаКлиенте
Функция УниверсальнаяВыгрузка(ТекстВыгрузки = Неопределено, ПроверятьБлокировки = Истина) Экспорт
	
	Перем ПараметрыВыгрузки;
	
	Если Модифицированность Тогда
		ТекстЗаголовка = ЗаголовокРегламентированногоОтчета(
			СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		ОргСтр = " (" + СтруктураРеквизитовФормы.Организация + ")";
		Если СтрНайти(ТекстЗаголовка, ОргСтр) = 0 Тогда
			ТекстЗаголовка = ТекстЗаголовка + ОргСтр;
		КонецЕсли;
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Отчет """ + ТекстЗаголовка + """ не сохранен.";
		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если Открыта() Тогда
		Если СтруктураРеквизитовФормы.ЕдиницаИзмерения
			<> ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1 Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru='Перед выгрузкой необходимо установить единицу измерения ""в рублях"".'");
			Сообщение.Сообщить();
			
			Возврат Ложь;
			
		КонецЕсли;
		
		Если СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения <> 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru='Перед выгрузкой необходимо установить точность ""0"".'");
			Сообщение.Сообщить();
			
			Возврат Ложь;
			
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ УниверсальнаяВыгрузкаXMLНаСервере(ТекстВыгрузки, ПараметрыВыгрузки) Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Функция ЗаголовокРегламентированногоОтчета(ДатаНач, ДатаКон, Периодичность = Неопределено) Экспорт
	
	СтрПериодОтчета = ПредставлениеПериода(НачалоДня(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета),
		КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета), "ФП = Истина" );
	
	Если СтрНайти(ЭтаФорма.Заголовок, СтрПериодОтчета) = 0 Тогда
		Возврат ЭтаФорма.Заголовок + " за " + СтрПериодОтчета;
	Иначе
		Возврат ЭтаФорма.Заголовок;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция УниверсальнаяВыгрузкаXMLНаСервере(ТекстВыгрузки, ПараметрыВыгрузки)
	
	СформироватьСтруктуруПоказателей();
	ПараметрыВыгрузки = СформироватьСтруктуруПараметров();
	
	ДеревоВыгрузки = ИзвлечьСтруктуруXML("СхемаВыгрузки501");
	
	Если НЕ ПроверитьВозможностьВыгрузки(ПараметрыВыгрузки, ДеревоВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЗаполнитьДанными(ПараметрыВыгрузки, ДеревоВыгрузки);
	
	ТекстВыгрузки = Новый Массив;
	
	ТекстВыгр = ВыгрузитьДеревоВXML(ДеревоВыгрузки, ПараметрыВыгрузки);
	ТекстВыгрузки.Добавить(ВыгрузкаОтчета(ТекстВыгр, ПараметрыВыгрузки));
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция СформироватьСтруктуруПоказателей()
	
	мДанныеОтчета = Новый Структура;
	
	СохрСтруктура = СохраненныеДанныеОтчета();
	ПоказателиОтчета = СохрСтруктура.ПоказателиОтчета;
	Для Каждого Раздел Из ПоказателиОтчета Цикл
		мДанныеОтчета.Вставить(СтрЗаменить(Раздел.Ключ, "ПолеТабличногоДокумента", ""),
			РегламентированнаяОтчетность.СвернутьДанныеТабличногоПоля(Раздел.Значение));
	КонецЦикла;
	
	Для Каждого Раздел Из мСтруктураМногоуровневыхРазделов Цикл
		мДанныеОтчета.Вставить(Раздел.Ключ);
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция СформироватьСтруктуруПараметров()
	
	Титульный = мДанныеОтчета.Титульный;
	СведенияОФизЛице = мДанныеОтчета.ФизЛицо;
	
	ПараметрыВыгрузки = Новый Структура;
	
	ПараметрыВыгрузки.Вставить("ПоМесту",  СокрЛП(Титульный.ПоМесту));
	
	ПараметрыВыгрузки.Вставить("ЭтоЮЛ", НЕ СтруктураРеквизитовФормы.ИП);
	
	ПараметрыВыгрузки.Вставить("ЭтоФизЛицоСИНН", СтруктураРеквизитовФормы.ИП
	И ЗначениеЗаполнено(СтруктураРеквизитовФормы.Организация.ИНН)
	И ПараметрыВыгрузки.ПоМесту = "112");
	
	ПараметрыВыгрузки.Вставить("ЭтоФизЛицоБезИНН", СтруктураРеквизитовФормы.ИП
	И НЕ ЗначениеЗаполнено(СтруктураРеквизитовФормы.Организация.ИНН)
	И ПараметрыВыгрузки.ПоМесту = "112");
	
	ПараметрыВыгрузки.Вставить("ЭтоПБОЮЛ", СтруктураРеквизитовФормы.ИП
	И НЕ ПараметрыВыгрузки.ЭтоФизЛицоСИНН И НЕ ПараметрыВыгрузки.ЭтоФизЛицоБезИНН);
	
	ПараметрыВыгрузки.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	
	ПараметрыВыгрузки.Вставить("ДатаПодписи",  Титульный.ДатаПодписи);
	
	ПараметрыВыгрузки.Вставить("ДатаДок",  Формат(ТекущаяДатаСеанса(), "ДФ=дд.ММ.гггг"));
	ПараметрыВыгрузки.Вставить("Период",   СокрЛП(Титульный.Период));
	ПараметрыВыгрузки.Вставить("ОтчетГод", Формат(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания, "ДФ=гггг"));
	ПараметрыВыгрузки.Вставить("КодНО",    СокрЛП(Титульный.НалоговыйОрган));
	ПараметрыВыгрузки.Вставить("НомКорр",  Строка(СтруктураРеквизитовФормы.мСохраненныйДок.Вид));
	
	// Файлы электроного представления РСВ будут администрироваться на местах.
	ПараметрыВыгрузки.Вставить("КодИФНСПосредника", "");
	
	ПараметрыВыгрузки.Вставить("Тлф", СокрЛП(Титульный.ТелОрганизации));
	
	ПараметрыВыгрузки.Вставить("НаимОрг", СокрЛП(Титульный.НаимОрг));
	ПараметрыВыгрузки.Вставить("ИННОрг",  СокрЛП(СтруктураРеквизитовФормы.Организация.ИНН));
	ПараметрыВыгрузки.Вставить("КПП",     СокрЛП(Титульный.КПП));
	ПараметрыВыгрузки.Вставить("ОКВЭД",   СокрЛП(Титульный.ОКВЭД));
	
	ПараметрыВыгрузки.Вставить("ФормРеорг", СокрЛП(Титульный.КодФормыРеорганизации));
	ПараметрыВыгрузки.Вставить("ИННРеорг",  СокрЛП(Титульный.ИННРеорганизованнойОрганизации));
	ПараметрыВыгрузки.Вставить("КППРеорг",  СокрЛП(Титульный.КППРеорганизованнойОрганизации));
	
	ФИОИП = РегламентированнаяОтчетность.РазложитьФИО(Титульный.НаимОрг);
	ПараметрыВыгрузки.Вставить("Фамилия",  ФИОИП.Фамилия);
	ПараметрыВыгрузки.Вставить("Имя",      ФИОИП.Имя);
	ПараметрыВыгрузки.Вставить("Отчество", ФИОИП.Отчество);
	
	ПараметрыВыгрузки.Вставить("ПрПодп",      СокрЛП(Титульный.ПрПодп));
	ПараметрыВыгрузки.Вставить("НаимОргПред", СокрЛП(Титульный.ОргУп));
	ПараметрыВыгрузки.Вставить("НаимДокПред", СокрЛП(Титульный.ДокУпПред));
	ФИОПодписанта = РегламентированнаяОтчетность.РазложитьФИО(Титульный.ОргПодписант);
	ПараметрыВыгрузки.Вставить("ФамилияПодписанта",  ФИОПодписанта.Фамилия);
	ПараметрыВыгрузки.Вставить("ИмяПодписанта",      ФИОПодписанта.Имя);
	ПараметрыВыгрузки.Вставить("ОтчествоПодписанта", ФИОПодписанта.Отчество);
	
	ПараметрыВыгрузки.Вставить("ДатаРожд",        Формат(СведенияОФизЛице.ДатаРождения, "ДФ=дд.ММ.гггг"));
	ПараметрыВыгрузки.Вставить("МестоРожд",       СокрЛП(СведенияОФизЛице.МестоРождения));
	ПараметрыВыгрузки.Вставить("ОКСМ",            СокрЛП(СведенияОФизЛице.КодСтраныГражданства));
	ПараметрыВыгрузки.Вставить("УдЛичнКодВидДок", СокрЛП(СведенияОФизЛице.КодВидаДокумента));
	ПараметрыВыгрузки.Вставить("УдЛичнСерДок",    СокрЛП(СведенияОФизЛице.СерияДокумента));
	ПараметрыВыгрузки.Вставить("УдЛичнНомДок",    СокрЛП(СведенияОФизЛице.НомерДокумента));
	ПараметрыВыгрузки.Вставить("УдЛичнСерНомДок",
		ПараметрыВыгрузки.УдЛичнСерДок + " " + ПараметрыВыгрузки.УдЛичнНомДок);
	ПараметрыВыгрузки.Вставить("УдЛичнВыдДок",    СокрЛП(СведенияОФизЛице.КемВыданДокумент));
	ПараметрыВыгрузки.Вставить("УдЛичнДатаДок",   Формат(СведенияОФизЛице.ДатаВыдачи, "ДФ=дд.ММ.гггг"));
	
	ПараметрыВыгрузки.Вставить("Индекс", СокрЛП(СведенияОФизЛице.АдресИндекс));
	ПараметрыВыгрузки.Вставить("КодРегион", СокрЛП(СведенияОФизЛице.АдресКодРегиона));
	ПараметрыВыгрузки.Вставить("Район", СокрЛП(СведенияОФизЛице.АдресРайон));
	ПараметрыВыгрузки.Вставить("Город", СокрЛП(СведенияОФизЛице.АдресГород));
	ПараметрыВыгрузки.Вставить("НаселПункт", СокрЛП(СведенияОФизЛице.АдресНаселенныйПункт));
	ПараметрыВыгрузки.Вставить("Улица", СокрЛП(СведенияОФизЛице.АдресУлица));
	ПараметрыВыгрузки.Вставить("Дом", СокрЛП(СведенияОФизЛице.АдресНомерДома));
	ПараметрыВыгрузки.Вставить("Корпус", СокрЛП(СведенияОФизЛице.АдресНомерКорпуса));
	ПараметрыВыгрузки.Вставить("Кварт", СокрЛП(СведенияОФизЛице.АдресНомерКвартиры));
	
	ПараметрыВыгрузки.Вставить("ИмяКлючевогоУзлаСодержательнойЧасти", "РасчетСВ");
	
	ПараметрыВыгрузки.Вставить("ИдФайл", ИдентификаторФайлаВыгрузки(ПараметрыВыгрузки, "NO_RASCHSV"));
	
	Возврат ПараметрыВыгрузки;
	
КонецФункции

&НаСервере
Функция ИзвлечьСтруктуруXML(ИмяМакета)
	
	ДеревоСтруктуры = Новый ДеревоЗначений;
	ДеревоСтруктуры.Колонки.Добавить("Код");
	ДеревоСтруктуры.Колонки.Добавить("Тип");
	ДеревоСтруктуры.Колонки.Добавить("Формат");
	ДеревоСтруктуры.Колонки.Добавить("МинРазмерность");
	ДеревоСтруктуры.Колонки.Добавить("МаксРазмерность");
	ДеревоСтруктуры.Колонки.Добавить("Обязательность");
	ДеревоСтруктуры.Колонки.Добавить("Многостраничность");
	ДеревоСтруктуры.Колонки.Добавить("Многострочность");
	ДеревоСтруктуры.Колонки.Добавить("Раздел");
	ДеревоСтруктуры.Колонки.Добавить("Ключ");
	ДеревоСтруктуры.Колонки.Добавить("Условие");
	ДеревоСтруктуры.Колонки.Добавить("ЗначениеПоУмолчанию");
	ДеревоСтруктуры.Колонки.Добавить("Значение");
	ДеревоСтруктуры.Колонки.Добавить("Представление");
	ДеревоСтруктуры.Колонки.Добавить("Показатели");
	
	Макет = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(ИмяМакета);
	
	ВысотаТаблицы = Макет.ВысотаТаблицы;
	
	УчтенныеГруппы = Новый Соответствие;
	
	Для Уровень = 0 По Макет.КоличествоУровнейГруппировокСтрок() - 1 Цикл
		Макет.ПоказатьУровеньГруппировокСтрок(Уровень);
		Для НомерСтроки = 2 По ВысотаТаблицы Цикл
			НомСтр = ВысотаТаблицы - НомерСтроки + 2;
			Если Макет.Область(НомСтр, 0, НомСтр, 0).Видимость И УчтенныеГруппы.Получить(НомСтр) = Неопределено Тогда
				
				РодительскийУзел = ДеревоСтруктуры;
				Если Уровень <> 0 Тогда
					Для Инд = 1 По НомСтр - 2 Цикл
						Узел = УчтенныеГруппы.Получить(НомСтр - Инд);
						Если Узел <> Неопределено Тогда
							РодительскийУзел = Узел;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				НовСтр = РодительскийУзел.Строки.Вставить(0);
				НовСтр.Код = СокрЛП(Макет.Область(НомСтр, 1, НомСтр, 1).Текст);
				НовСтр.Раздел = СокрЛП(Макет.Область(НомСтр, 2, НомСтр, 2).Текст);
				НовСтр.Ключ = СокрЛП(Макет.Область(НомСтр, 3, НомСтр, 3).Текст);
				НовСтр.Тип = СокрЛП(Макет.Область(НомСтр, 4, НомСтр, 4).Текст);
				НовСтр.Формат = СокрЛП(Макет.Область(НомСтр, 5, НомСтр, 5).Текст);
				МинРазмерность = СокрЛП(Макет.Область(НомСтр, 6, НомСтр, 6).Текст);
				НовСтр.МинРазмерность = ?(ПустаяСтрока(МинРазмерность), ?(НовСтр.Формат = "N", 99999, 0), Число(МинРазмерность));
				МаксРазмерность = СокрЛП(Макет.Область(НомСтр, 7, НомСтр, 7).Текст);
				НовСтр.МаксРазмерность = ?(ПустаяСтрока(МаксРазмерность), 99999, Число(МаксРазмерность));
				НовСтр.Обязательность = СокрЛП(Макет.Область(НомСтр, 8, НомСтр, 8).Текст);
				НовСтр.Многостраничность = НЕ ПустаяСтрока(Макет.Область(НомСтр, 9, НомСтр, 9).Текст);
				НовСтр.Многострочность = НЕ ПустаяСтрока(Макет.Область(НомСтр, 10, НомСтр, 10).Текст);
				НовСтр.Условие = СокрЛП(Макет.Область(НомСтр, 11, НомСтр, 11).Текст);
				НовСтр.ЗначениеПоУмолчанию = СокрЛП(Макет.Область(НомСтр, 12, НомСтр, 12).Текст);
				НовСтр.Представление = СокрЛП(Макет.Область(НомСтр, 13, НомСтр, 13).Текст);
				
				УчтенныеГруппы.Вставить(НомСтр, НовСтр);
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ДеревоСтруктуры;
	
КонецФункции

&НаСервере
Функция ПроверитьВозможностьВыгрузки(ПараметрыВыгрузки, ДеревоВыгрузки)
	
	СтатусПроверки = Истина;
	
	ДанныеМногоуровневыхРазделов = Новый Структура;
	СохрСтруктура = СохраненныеДанныеОтчета();
	Для каждого ЭлементСтруктуры Из СохрСтруктура.ДанныеМногоуровневыхРазделов Цикл
		ДанныеМногоуровневыхРазделов.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;
	
	ВозможныеКодыПоМесту = Новый Массив;
	ВозможныеКодыПоМесту.Добавить("112");
	ВозможныеКодыПоМесту.Добавить("120");
	ВозможныеКодыПоМесту.Добавить("121");
	ВозможныеКодыПоМесту.Добавить("122");
	ВозможныеКодыПоМесту.Добавить("124");
	ВозможныеКодыПоМесту.Добавить("214");
	ВозможныеКодыПоМесту.Добавить("217");
	ВозможныеКодыПоМесту.Добавить("222");
	ВозможныеКодыПоМесту.Добавить("335");
	ВозможныеКодыПоМесту.Добавить("350");
	
	ВозможныеКодыПериода = Новый Массив;
	ВозможныеКодыПериода.Добавить("21");
	ВозможныеКодыПериода.Добавить("31");
	ВозможныеКодыПериода.Добавить("33");
	ВозможныеКодыПериода.Добавить("34");
	ВозможныеКодыПериода.Добавить("51");
	ВозможныеКодыПериода.Добавить("52");
	ВозможныеКодыПериода.Добавить("53");
	ВозможныеКодыПериода.Добавить("90");
	
	ВозможныеКодыФормыРеорганизции = Новый Массив;
	ВозможныеКодыФормыРеорганизции.Добавить("1");
	ВозможныеКодыФормыРеорганизции.Добавить("2");
	ВозможныеКодыФормыРеорганизции.Добавить("3");
	ВозможныеКодыФормыРеорганизции.Добавить("4");
	ВозможныеКодыФормыРеорганизции.Добавить("5");
	ВозможныеКодыФормыРеорганизции.Добавить("6");
	ВозможныеКодыФормыРеорганизции.Добавить("7");
	ВозможныеКодыФормыРеорганизции.Добавить("0");
	
	МассивСтрок1_2 = Новый Массив;
	МассивСтрок1_2.Добавить("1");
	МассивСтрок1_2.Добавить("2");
	
	МассивСтрок1_3 = Новый Массив;
	МассивСтрок1_3.Добавить("1");
	МассивСтрок1_3.Добавить("2");
	МассивСтрок1_3.Добавить("3");
	
	МассивСтрок1_5 = Новый Массив;
	МассивСтрок1_5.Добавить("1");
	МассивСтрок1_5.Добавить("2");
	МассивСтрок1_5.Добавить("3");
	МассивСтрок1_5.Добавить("4");
	МассивСтрок1_5.Добавить("5");
	
	// Титульный лист.
	Если ПараметрыВыгрузки.ЭтоЮЛ Тогда
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ИННОрг) Тогда
			СообщитьВТС("Не задан ИНН организации, обособленного подразделения.",
			"Титульный", "ИНН");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(ПараметрыВыгрузки.ИННОрг) <> 10 Тогда
			СообщитьВТС("Задан ИНН организации, обособленного подразделения, не состоящий из 10 цифр.",
			"Титульный", "ИНН");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.КПП) Тогда
			СообщитьВТС("Не задан КПП организации, обособленного подразделения.",
			"Титульный", "КПП");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(ПараметрыВыгрузки.КПП) <> 9 Тогда
			СообщитьВТС("Задан КПП организации, обособленного подразделения, не состоящий из 9 символов.",
			"Титульный", "КПП");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.НаимОрг) Тогда
			СообщитьВТС("Не задано наименование организации, обособленного подразделения.",
			"Титульный", "НаимОрг");
			СтатусПроверки = Ложь;
		КонецЕсли;
	Иначе
		Если ПараметрыВыгрузки.ЭтоПБОЮЛ Тогда
			Если ПараметрыВыгрузки.ПоМесту = "124" Тогда
				ИП_ГлаваКФХ = " главы крестьянского (фермерского) хозяйства";
			Иначе
				ИП_ГлаваКФХ = " индивидуального предпринимателя";
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ИННОрг) Тогда
				ОписаниеОшибки = "Не задан ИНН" + ИП_ГлаваКФХ + ".";
				СообщитьВТС(ОписаниеОшибки, "Титульный", "ИНН");
				СтатусПроверки = Ложь;
			ИначеЕсли СтрДлина(ПараметрыВыгрузки.ИННОрг) <> 12 Тогда
				ОписаниеОшибки = "Задан ИНН" + ИП_ГлаваКФХ + ", не состоящий из 12 цифр.";
				СообщитьВТС(ОписаниеОшибки, "Титульный", "ИНН");
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.Фамилия) Тогда
				СообщитьВТС("Не задана фамилия" + ИП_ГлаваКФХ + ".", "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.Имя) Тогда
				СообщитьВТС("Не задано имя" + ИП_ГлаваКФХ + ".", "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			КонецЕсли;
		Иначе
			Если ПараметрыВыгрузки.ЭтоФизЛицоСИНН Тогда
				Если СтрДлина(ПараметрыВыгрузки.ИННОрг) <> 12 Тогда
					ОписаниеОшибки = "Задан ИНН физического лица, не состоящий из 12 цифр.";
					СообщитьВТС(ОписаниеОшибки, "Титульный", "ИНН");
					СтатусПроверки = Ложь;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.Фамилия) Тогда
				СообщитьВТС("Не задана фамилия физического лица.", "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.Имя) Тогда
				СообщитьВТС("Не задано имя физического лица.", "Титульный", "НаимОрг");
				СтатусПроверки = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.КодНО) Тогда
		СообщитьВТС("Не задан код налогового органа.",
		"Титульный", "НалоговыйОрган");
		СтатусПроверки = Ложь;
	ИначеЕсли СтрДлина(ПараметрыВыгрузки.КодНО) <> 4 Тогда
		СообщитьВТС("Задан код налогового органа, не состоящий из 4 цифр.",
		"Титульный", "НалоговыйОрган");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ПоМесту) Тогда
		СообщитьВТС("Не задан код места, по которому представляется расчет.",
		"Титульный", "ПоМесту");
		СтатусПроверки = Ложь;
	ИначеЕсли ВозможныеКодыПоМесту.Найти(ПараметрыВыгрузки.ПоМесту) = Неопределено Тогда
		СообщитьВТС("Задан некорректный код места, по которому представляется расчет.",
		"Титульный", "ПоМесту");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.Период) Тогда
		СообщитьВТС("Не задан код расчетного (отчетного) периода.",
		"Титульный", "Период");
		СтатусПроверки = Ложь;
	ИначеЕсли ВозможныеКодыПериода.Найти(ПараметрыВыгрузки.Период) = Неопределено Тогда
		СообщитьВТС("Задан некорректный код расчетного (отчетного) периода.",
		"Титульный", "Период");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ОКВЭД) Тогда
		СообщитьВТС("Не задан код по ОКВЭД2.", "Титульный", "ОКВЭД");
		СтатусПроверки = Ложь;
	ИначеЕсли НЕ РегламентированнаяОтчетностьКлиентСервер.ОКВЭДСоответствуетТребованиям(
		ПараметрыВыгрузки.ОКВЭД) Тогда
		СообщитьВТС("Задан некорректный код по ОКВЭД2. Допустимы значения, соответствующие шаблонам: ""XX"", ""XX.X"", ""XX.XX"", ""XX.XX.X"", ""XX.XX.XX"" (X - любая цифра).",
		"Титульный", "ОКВЭД");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ПараметрыВыгрузки.ПрПодп = "2" ИЛИ (ПараметрыВыгрузки.ЭтоЮЛ И ПараметрыВыгрузки.ПрПодп = "1") Тогда
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ФамилияПодписанта) Тогда
			СообщитьВТС("Не задана фамилия подписанта.", "Титульный", "ОргПодписант");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ИмяПодписанта) Тогда
			СообщитьВТС("Не задано имя подписанта.", "Титульный", "ОргПодписант");
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЕсли;
	Если ПараметрыВыгрузки.ПрПодп = "2" И НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.НаимДокПред) Тогда
		СообщитьВТС("Не задано наименование документа, подтверждающего полномочия представителя плательщика страховых взносов.",
		"Титульный", "ДокУпПред");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.ИННРеорг)
	 ИЛИ ЗначениеЗаполнено(ПараметрыВыгрузки.КППРеорг)
	 ИЛИ ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг) Тогда
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг) Тогда
			СообщитьВТС("Не задан код формы реорганизации (ликвидации).",
			"Титульный", "КодФормыРеорганизации");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг)
			И ПараметрыВыгрузки.ФормРеорг <> "0" Тогда
			Если ВозможныеКодыФормыРеорганизции.Найти(ПараметрыВыгрузки.ФормРеорг) = Неопределено Тогда
				СообщитьВТС("Задано некорректное значение кода формы реорганизации (ликвидации).",
				"Титульный", "КодФормыРеорганизации");
				СтатусПроверки = Ложь;
			Иначе
				ДлинаИННРеорг = СтрДлина(ПараметрыВыгрузки.ИННРеорг);
				Если ДлинаИННРеорг <> 10 Тогда
					СообщитьВТС("Не" + ?(ДлинаИННРеорг = 0, "", "верно")
					+ " задан ИНН реорганизованной организации.",
					"Титульный", "ИННРеорганизованнойОрганизации");
					СтатусПроверки = Ложь;
				КонецЕсли;
				ДлинаКППРеорг = СтрДлина(ПараметрыВыгрузки.КППРеорг);
				Если ДлинаКППРеорг <> 9 Тогда
					СообщитьВТС("Не" + ?(ДлинаКППРеорг = 0, "", "верно")
					+ " задан КПП реорганизованной организации.",
					"Титульный", "КППРеорганизованнойОрганизации");
					СтатусПроверки = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗаполненРаздел(ДанныеМногоуровневыхРазделов.Раздел3, "Раздел3") Тогда
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ДатаПодписи) Тогда
			СообщитьВТС("Не задана дата подписи.",
			"Титульный", "ДатаПодписи");
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	// Сведения о физическом лице, не являющемся индивидуальным предпринимателем.
	Если ПараметрыВыгрузки.ЭтоФизЛицоБезИНН Тогда
		
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ДатаРожд) Тогда
			СообщитьВТС("В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задана дата рождения.",
			"ФизЛицо", "ДатаРождения");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.МестоРожд) Тогда
			СообщитьВТС("В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задано место рождения.",
			"ФизЛицо", "МестоРождения");
			СтатусПроверки = Ложь;
		КонецЕсли;
		ДлинаОКСМ = СтрДлина(ПараметрыВыгрузки.ОКСМ);
		Если ДлинаОКСМ <> 3 Тогда
			СообщитьВТС("В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не"
			+ ?(ДлинаОКСМ = 0, "", "верно") + " задан код страны гражданства.",
			"ФизЛицо", "КодСтраныГражданства");
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		ДлинаКодВидДок = СтрДлина(ПараметрыВыгрузки.УдЛичнКодВидДок);
		Если ДлинаКодВидДок <> 2 Тогда
			СообщитьВТС("В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не"
			+ ?(ДлинаКодВидДок = 0, "", "верно") + " задан код вида документа.",
			"ФизЛицо", "КодВидаДокумента");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнСерДок) Тогда
			СообщитьВТС("В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задана серия документа.",
			"ФизЛицо", "СерияДокумента");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнНомДок) Тогда
			СообщитьВТС("В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задан номер документа.",
			"ФизЛицо", "НомерДокумента");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнСерДок)
			И ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнНомДок) Тогда
			УдЛичнСерНомДок = ПараметрыВыгрузки.УдЛичнСерДок + " " + ПараметрыВыгрузки.УдЛичнНомДок;
			Если СтрДлина(УдЛичнСерНомДок) > 25 Тогда
				СообщитьВТС("В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, заданы серия и номер документа, в совокупности состоящие более чем из 24 символов.",
				"ФизЛицо", "СерияДокумента");
			КонецЕсли;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнВыдДок) Тогда
			СообщитьВТС("В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задано наименование органа, выдавшего документ.",
			"ФизЛицо", "КемВыданДокумент");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.УдЛичнДатаДок) Тогда
			СообщитьВТС("В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не задана дата выдачи документа.",
			"ФизЛицо", "ДатаВыдачи");
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		ДлинаКодРегион = СтрДлина(ПараметрыВыгрузки.КодРегион);
		Если ДлинаКодРегион <> 2 Тогда
			СообщитьВТС("В сведениях о физическом лице, не являющемся индивидуальным предпринимателем, не"
			+ ?(ДлинаКодРегион = 0, "", "верно") + " задан код региона.", "ФизЛицо", "АдресКодРегиона");
			СтатусПроверки = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	ПарамПроверки = Новый Структура;
	
	// Раздел 1.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1;
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ЭтоПБОЮЛ", ПараметрыВыгрузки.ЭтоПБОЮЛ);
	Если ПараметрыВыгрузки.ПоМесту = "124" Тогда
		ДопПараметры.Вставить("НеПроверятьЗаполнениеПризнаковСтроки090");
		ДопПараметры.Вставить("НеПроверятьЗаполнениеКБКСтрок020_040_100Раздела1");
	КонецЕсли;
	ЗаполненРаздел1 = ЗаполненРаздел1(ДанныеМногоуровневыхРазделов, ДопПараметры);
	Если НЕ ПараметрыВыгрузки.ПоМесту = "124" ИЛИ ЗаполненРаздел1 Тогда
		
		НомерСтраницы = 1;
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		
		Если НЕ ПараметрыВыгрузки.ПоМесту = "124" И НЕ ЗаполненРаздел(ДеревоРаздела, "Раздел1") Тогда
			
			ИмяПоказателя = ?(ЗначениеЗаполнено(СокрЛП(Данные["П000010001001"])),
			"П000010002001", "П000010001001");
			
			СообщитьВТС("Раздел 1 не заполнен.", "Раздел1", ИмяПоказателя, НомерСтраницы);
			СтатусПроверки = Ложь;
			
		Иначе
			
			ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1");
			ПарамПроверки.Вставить("Данные",        Данные);
			ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
			
			ОКТМОДлина = СтрДлина(СокрЛП(Данные["П000010001001"]));
			Если НЕ (ОКТМОДлина = 8 ИЛИ ОКТМОДлина = 11) Тогда
				СообщитьВТС("Раздел 1: в строке 010 не" + ?(ОКТМОДлина = 0, "", "верно")
				+ " задан код по ОКТМО.",
				"Раздел1", "П000010001001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			КБКДлина = СтрДлина(СокрЛП(Данные["П000010002001"]));
			Если НЕ КБКДлина = 20 Тогда
				СообщитьВТС("Раздел 1: в строке 020 не" + ?(КБКДлина = 0, "", "верно")
				+ " задан код бюджетной классификации.",
				"Раздел1", "П000010002001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПроверитьПоказательНаНеотрицательность("П000010003001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010003101", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010003201", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010003301", ПарамПроверки, СтатусПроверки);
			
			КБКДлина = СтрДлина(СокрЛП(Данные["П000010004001"]));
			Если НЕ КБКДлина = 20 Тогда
				СообщитьВТС("Раздел 1: в строке 040 не" + ?(КБКДлина = 0, "", "верно")
				+ " задан код бюджетной классификации.",
				"Раздел1", "П000010004001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПроверитьПоказательНаНеотрицательность("П000010005001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010005101", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010005201", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010005301", ПарамПроверки, СтатусПроверки);
			
			ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[
			СтруктураРеквизитовФормы.мИдГруппы1М1];
			ИмяПокКБК = "П00001М106001";
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Если ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М107001"])
					ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М107101"])
					ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М107201"])
					ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М107301"]) Тогда
					
					Инд = Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					КБКДлина = СтрДлина(СокрЛП(СтрокаМнЧ.Данные[ИмяПокКБК]));
					Если НЕ КБКДлина = 20 Тогда
						СообщитьВТС("Раздел 1: в строке " + Инд + " группы строк 060-073 не"
						+ ?(КБКДлина = 0, "", "верно") + " задан код бюджетной классификации.",
						"Раздел1", ИмяПокКБК + "_" + Инд);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ", Инд);
					
					ПроверитьПоказательНаНеотрицательность("П00001М107001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00001М107101", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00001М107201", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00001М107301", ПарамПроверки, СтатусПроверки);
					
				КонецЕсли;
			КонецЦикла;
			
			ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[
			СтруктураРеквизитовФормы.мИдГруппы1М2];
			ИмяПокКБК = "П00001М208001";
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Если ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М209001"])
					ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М209101"])
					ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М209201"])
					ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00001М209301"]) Тогда
					
					Инд = Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					КБКДлина = СтрДлина(СокрЛП(СтрокаМнЧ.Данные[ИмяПокКБК]));
					Если НЕ КБКДлина = 20 Тогда
						СообщитьВТС("Раздел 1: в строке " + Инд + " группы строк 080-093 не"
						+ ?(КБКДлина = 0, "", "верно") + " задан код бюджетной классификации.",
						"Раздел1", ИмяПокКБК + "_" + Инд);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ", Инд);
					
					ПроверитьПоказательНаНеотрицательность("П00001М209001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00001М209101", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00001М209201", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00001М209301", ПарамПроверки, СтатусПроверки);
					
				КонецЕсли;
			КонецЦикла;
			
			КБКДлина = СтрДлина(СокрЛП(Данные["П000010010001"]));
			Если НЕ КБКДлина = 20 Тогда
				СообщитьВТС("Раздел 1: в строке 100 не" + ?(КБКДлина = 0, "", "верно")
				+ " задан код бюджетной классификации.",
				"Раздел1", "П000010010001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПарамПроверки.Вставить("Данные", Данные);
			
			ПроверитьПоказательНаНеотрицательность("П000010011001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010011101", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010011201", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010011301", ПарамПроверки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П000010012001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010012101", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010012201", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П000010012301", ПарамПроверки, СтатусПроверки);
			
		КонецЕсли;
		
		// Приложение 1 к Разделу 1.
		ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил1;
		Для каждого СтраницаРаздела Из ДеревоРаздела.Строки Цикл
			
			Данные = СтраницаРаздела.Данные;
			НомерСтраницы = Формат(ДеревоРаздела.Строки.Индекс(СтраницаРаздела) + 1, "ЧГ=");
			
			КодТарифаДлина = СтрДлина(СокрЛП(Данные["П000110000101"]));
			Если НЕ КодТарифаДлина = 2 Тогда
				СообщитьВТС("Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
				+ ": в строке 001 не" + ?(КодТарифаДлина = 0, "", "верно")
				+ " задан код тарифа плательщика.",
				"Раздел1Прил1", "П000110000101", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			// Подразделы 1.1 и 1.2 приложения 1 к разделу 1.
			КоординатыПодраздела = НомерСтраницы + ",1,1";
			
			ПарамПроверки.Вставить("ИмяРаздела",           "Раздел1Прил1Подр1_1и1_2");
			ПарамПроверки.Вставить("Данные",               СтраницаРаздела.Строки[0].Строки[0].Данные);
			ПарамПроверки.Вставить("НомерСтраницы",        НомерСтраницы);
			ПарамПроверки.Вставить("КоординатыПодраздела", КоординатыПодраздела);
			
			// Подраздел 1.1 приложения 1 к разделу 1.
			ПроверитьПоказательНаНеотрицательность("П011110003001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110003002", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110003003", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110003004", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110003005", ПарамПроверки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011110004001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110004002", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110004003", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110004004", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110004005", ПарамПроверки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011110005001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110005002", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110005003", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110005004", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110005005", ПарамПроверки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011110005101", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110005102", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110005103", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110005104", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110005105", ПарамПроверки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011110006001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006002", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006003", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006004", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006005", ПарамПроверки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011110006101", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006102", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006103", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006104", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006105", ПарамПроверки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011110006201", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006202", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006203", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006204", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011110006205", ПарамПроверки, СтатусПроверки);
			
			// Подраздел 1.2 приложения 1 к разделу 1.
			ПроверитьПоказательНаНеотрицательность("П011120003001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120003002", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120003003", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120003004", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120003005", ПарамПроверки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011120004001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120004002", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120004003", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120004004", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120004005", ПарамПроверки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011120005001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120005002", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120005003", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120005004", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120005005", ПарамПроверки, СтатусПроверки);
			
			ПроверитьПоказательНаНеотрицательность("П011120006001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120006002", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120006003", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120006004", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П011120006005", ПарамПроверки, СтатусПроверки);
			
			// Подраздел 1.3.1 приложения 1 к разделу 1.
			ЗаполненПодраздел = Ложь;
			ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы11131М1;
			ДанныеМнЧ = СтраницаРаздела.Строки[1].Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
			МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Для каждого ИмяГрафы Из МассивИменГраф Цикл
					Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
						ЗаполненПодраздел = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Если ЗаполненПодраздел Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					КоординатыПодраздела = НомерСтраницы + ",2," + НомерСтроки;
					
					ЗначениеПоказателя = СокрЛП(СтрокаМнЧ.Данные["П11131М100101"]);
					Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
						СообщитьВТС("Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
						+ " -> Подраздел 1.3.1: в строке " + НомерСтроки
						+ " группы строк 001-050 не" + ?(ЗначениеПоказателя = "", "", "верно")
						+ " задан признак основания исчисления сумм страховых взносов по дополнительному тарифу.",
						"Раздел1Прил1Подр1_3_1", "П11131М100101_" + НомерСтроки, КоординатыПодраздела);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("ИмяРаздела",           "Раздел1Прил1Подр1_3_1");
					ПарамПроверки.Вставить("Данные",               СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("КоординатыПодраздела", КоординатыПодраздела);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ",       НомерСтроки);
					
					ПроверитьПоказательНаНеотрицательность("П11131М102001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М102002", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М102003", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М102004", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М102005", ПарамПроверки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П11131М103001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М103002", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М103003", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М103004", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М103005", ПарамПроверки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П11131М104001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М104002", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М104003", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М104004", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М104005", ПарамПроверки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П11131М105001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М105002", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М105003", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М105004", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11131М105005", ПарамПроверки, СтатусПроверки);
					
				КонецЦикла;
			КонецЕсли;
			
			// Подраздел 1.3.2 приложения 1 к разделу 1.
			ЗаполненПодраздел = Ложь;
			ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы11132М1;
			ДанныеМнЧ = СтраницаРаздела.Строки[2].Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
			МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Для каждого ИмяГрафы Из МассивИменГраф Цикл
					Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
						ЗаполненПодраздел = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Если ЗаполненПодраздел Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					КоординатыПодраздела = НомерСтраницы + ",3," + НомерСтроки;
					
					ЗначениеПоказателя = СокрЛП(СтрокаМнЧ.Данные["П11132М100101"]);
					Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
						СообщитьВТС("Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
						+ " -> Подраздел 1.3.2: в строке " + НомерСтроки + " группы строк 001-050 не"
						+ ?(ЗначениеПоказателя = "", "", "верно") + " задан код основания исчисления.",
						"Раздел1Прил1Подр1_3_2", "П11132М100101_" + НомерСтроки, КоординатыПодраздела);
						СтатусПроверки = Ложь;
					КонецЕсли;
					ЗначениеПоказателя = СокрЛП(СтрокаМнЧ.Данные["П11132М100201"]);
					Если МассивСтрок1_3.Найти(ЗначениеПоказателя) = Неопределено Тогда
						СообщитьВТС("Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
						+ " -> Подраздел 1.3.2: в строке " + НомерСтроки + " группы строк 001-050 не"
						+ ?(ЗначениеПоказателя = "", "", "верно") + " задано основание заполнения.",
						"Раздел1Прил1Подр1_3_2", "П11132М100201_" + НомерСтроки, КоординатыПодраздела);
						СтатусПроверки = Ложь;
					КонецЕсли;
					ЗначениеПоказателя = СокрЛП(СтрокаМнЧ.Данные["П11132М100301"]);
					Если МассивСтрок1_5.Найти(ЗначениеПоказателя) = Неопределено Тогда
						СообщитьВТС("Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
						+ " -> Подраздел 1.3.2: в строке " + НомерСтроки + " группы строк 001-050 не"
						+ ?(ЗначениеПоказателя = "", "", "верно") + " задан код класса условий труда.",
						"Раздел1Прил1Подр1_3_2", "П11132М100301_" + НомерСтроки, КоординатыПодраздела);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("ИмяРаздела",           "Раздел1Прил1Подр1_3_2");
					ПарамПроверки.Вставить("Данные",               СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("КоординатыПодраздела", КоординатыПодраздела);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ",       НомерСтроки);
					
					ПроверитьПоказательНаНеотрицательность("П11132М102001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М102002", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М102003", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М102004", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М102005", ПарамПроверки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П11132М103001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М103002", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М103003", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М103004", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М103005", ПарамПроверки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П11132М104001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М104002", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М104003", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М104004", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М104005", ПарамПроверки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П11132М105001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М105002", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М105003", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М105004", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П11132М105005", ПарамПроверки, СтатусПроверки);
					
				КонецЦикла;
			КонецЕсли;
			
			// Подраздел 1.4 приложения 1 к разделу 1.
			ЗаполненПодраздел = Ложь;
			ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы1114М1;
			ДанныеМнЧ = СтраницаРаздела.Строки[3].Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
			МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Для каждого ИмяГрафы Из МассивИменГраф Цикл
					Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
						ЗаполненПодраздел = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Если ЗаполненПодраздел Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					КоординатыПодраздела = НомерСтраницы + ",4," + НомерСтроки;
					
					ЗначениеПоказателя = СокрЛП(СтрокаМнЧ.Данные["П01114М100101"]);
					Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
						СообщитьВТС("Приложение 1 к разделу 1 -> Страница " + НомерСтраницы
						+ " -> Подраздел 1.4: в строке " + НомерСтроки + " группы строк 001-050 не"
						+ ?(ЗначениеПоказателя = "", "", "верно")
						+ " задан код основания исчисления страховых взносов на дополнительное социальное обеспечение.",
						"Раздел1Прил1Подр1_4", "П01114М100101_" + НомерСтроки, КоординатыПодраздела);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("ИмяРаздела",           "Раздел1Прил1Подр1_4");
					ПарамПроверки.Вставить("Данные",               СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("КоординатыПодраздела", КоординатыПодраздела);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ",       НомерСтроки);
					
					ПроверитьПоказательНаНеотрицательность("П01114М102001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М102002", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М102003", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М102004", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М102005", ПарамПроверки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П01114М103001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М103002", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М103003", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М103004", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М103005", ПарамПроверки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П01114М104001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М104002", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М104003", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М104004", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М104005", ПарамПроверки, СтатусПроверки);
					
					ПроверитьПоказательНаНеотрицательность("П01114М105001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М105002", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М105003", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М105004", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П01114М105005", ПарамПроверки, СтатусПроверки);
					
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
		// Приложение 2 к Разделу 1.
		ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил2;
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил2");
		ПарамПроверки.Вставить("Данные",        Данные);
		ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
		
		ПризнакВыплат = СокрЛП(Данные["П000120000101"]);
		Если МассивСтрок1_2.Найти(ПризнакВыплат) = Неопределено Тогда
			СообщитьВТС("Приложение 2 к Разделу 1: в строке 001 не"
			+ ?(ПризнакВыплат = "", "", "верно") + " задан признак выплат.",
			"Раздел1Прил2", "П000120000101", НомерСтраницы);
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		ПроверитьПоказательНаНеотрицательность("П000120002001", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120002002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120002003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120002004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120002005", ПарамПроверки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120003001", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120003002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120003003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120003004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120003005", ПарамПроверки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120004001", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120004002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120004003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120004004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120004005", ПарамПроверки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120005001", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005005", ПарамПроверки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120005101", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005102", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005103", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005104", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005105", ПарамПроверки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120005201", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005202", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005203", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005204", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005205", ПарамПроверки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120005301", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005302", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005303", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005304", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005305", ПарамПроверки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120005401", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005402", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005403", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005404", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120005405", ПарамПроверки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120006001", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120006002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120006003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120006004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120006005", ПарамПроверки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120007001", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120007002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120007003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120007004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120007005", ПарамПроверки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000120008001", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120008002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120008003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120008004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120008005", ПарамПроверки, СтатусПроверки);
		
		Для НомГрафы = 1 По 9 Цикл
			Признак = СокрЛП(Данные["П00012000900" + НомГрафы]);
			Если МассивСтрок1_2.Найти(Признак) = Неопределено Тогда
				СообщитьВТС("Приложение 2 к Разделу 1: в графе " + НомГрафы
				+ " строки 090 не" + ?(Признак = "", "", "верно") + " задан признак.",
				"Раздел1Прил2", "П00012000900" + НомГрафы, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			НомГрафы = НомГрафы + 1;
		КонецЦикла;
		
		ПроверитьПоказательНаНеотрицательность("П000120009002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120009004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120009006", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120009008", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000120009010", ПарамПроверки, СтатусПроверки);
		
	КонецЕсли;
	
	// Приложение 3 к Разделу 1.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил3;
	Если ЗаполненРаздел(ДеревоРаздела, "Раздел1Прил3") Тогда
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил3");
		ПарамПроверки.Вставить("Данные",        Данные);
		ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
		
		ПроверитьПоказательНаНеотрицательность("П000130001003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130001004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130001103", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130001104", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130002003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130002103", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130003003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130003004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130003103", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130003104", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130004003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130005003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130006003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130006004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130006103", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130006104", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130006203", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130006204", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130007003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130007004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130008003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130008004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130009003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130010003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130010004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130011003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000130011004", ПарамПроверки, СтатусПроверки);
		
	КонецЕсли;
	
	// Приложение 4 к Разделу 1.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил4;
	Если ЗаполненРаздел(ДеревоРаздела, "Раздел1Прил4") Тогда
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил4");
		ПарамПроверки.Вставить("Данные",        Данные);
		ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
		
		ПроверитьПоказательНаНеотрицательность("П000140001004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140002004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140003004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140004004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140005004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140006004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140007004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140008004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140009004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140010004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140011004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140012004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140013004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140014004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140015004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140016004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140017004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140018004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140019004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140020004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140021004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140022004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140023004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140024004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140025004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140026004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140027004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140028004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140029004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140030004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000140031004", ПарамПроверки, СтатусПроверки);
		
	КонецЕсли;
	
	// Приложения 5, 6 к Разделу 1.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил5_6;
	Если ЗаполненРаздел(ДеревоРаздела, "Раздел1Прил5_6") Тогда
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил5_6");
		ПарамПроверки.Вставить("Данные",        Данные);
		ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
		
		Если НЕ ЗначениеЗаполнено(Данные["П000150005002"]) Тогда
			СообщитьВТС("Приложение 5 к Разделу 1: не задана дата записи в реестре аккредитованных организаций.",
			"Раздел1Прил5_6", "П000150005002", НомерСтраницы);
			СтатусПроверки = Ложь;
		ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(Данные["П000150005002"]) Тогда
			СообщитьВТС("Приложение 5 к Разделу 1: задана дата записи в реестре аккредитованных организаций, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
			"Раздел1Прил5_6", "П000150005002", НомерСтраницы);
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СокрЛП(Данные["П000150005003"])) Тогда
			СообщитьВТС("Приложение 5 к Разделу 1: не задан номер записи в реестре аккредитованных организаций.",
			"Раздел1Прил5_6", "П000150005003", НомерСтраницы);
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		ПроверитьПоказательНаНеотрицательность("П000150002002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000150002003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000150003002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000150003003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000150004002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000150004003", ПарамПроверки, СтатусПроверки);
		
		ПроверитьПоказательНаНеотрицательность("П000160006002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000160007002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000160008002", ПарамПроверки, СтатусПроверки);
		
	КонецЕсли;
	
	// Приложение 7 к Разделу 1.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил7;
	Если ЗаполненРаздел(ДеревоРаздела, "Раздел1Прил7") Тогда
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил7");
		ПарамПроверки.Вставить("Данные",        Данные);
		ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
		
		ПроверитьПоказательНаНеотрицательность("П000170001001", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170001002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170002001", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170002002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170003001", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170003002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170004001", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170004002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170005001", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000170005002", ПарамПроверки, СтатусПроверки);
		
	КонецЕсли;
	
	// Приложение 8 к Разделу 1.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил8;
	Если ПараметрыВыгрузки.ЭтоПБОЮЛ И ЗаполненРаздел(ДеревоРаздела, "Раздел1Прил8") Тогда
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил8");
		ПарамПроверки.Вставить("Данные",        Данные);
		ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
		
		ПроверитьПоказательНаНеотрицательность("П000180001001", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000180001002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000180001003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000180001004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000180001005", ПарамПроверки, СтатусПроверки);
		
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы18М1;
		ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
			НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
			
			Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00018М102001"])) Тогда
				СообщитьВТС("Приложение 8 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-060 не задан номер патента.",
				"Раздел1Прил8", "П00018М102001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			ВидДеятПатентДлина = СтрДлина(СокрЛП(СтрокаМнЧ.Данные["П00018М103001"]));
			Если НЕ ВидДеятПатентДлина = 6 Тогда
				СообщитьВТС("Приложение 8 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-060 не" + ?(ВидДеятПатентДлина = 0, "", "верно")
				+ " задан код вида предпринимательской деятельности, установленный законодательством субъекта Российской Федерации, указанный в заявлении на получение патента.",
				"Раздел1Прил8", "П00018М103001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00018М104001"]) Тогда
				СообщитьВТС("Приложение 8 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-060 не задана дата начала действия.",
				"Раздел1Прил8", "П00018М104001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(СтрокаМнЧ.Данные["П00018М104001"]) Тогда
				СообщитьВТС("Приложение 8 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-060 задана дата начала действия, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
				"Раздел1Прил8", "П00018М104001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00018М105001"]) Тогда
				СообщитьВТС("Приложение 8 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-060 не задана дата окончания действия.",
				"Раздел1Прил8", "П00018М105001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(СтрокаМнЧ.Данные["П00018М105001"]) Тогда
				СообщитьВТС("Приложение 8 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-060 задана дата окончания действия, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
				"Раздел1Прил8", "П00018М104001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00018М104001"])
				И ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00018М105001"])
				И СтрокаМнЧ.Данные["П00018М104001"] > СтрокаМнЧ.Данные["П00018М105001"] Тогда
				СообщитьВТС("Приложение 8 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-060 дата начала действия не должна быть больше даты окончания действия.",
				"Раздел1Прил8", "П00018М104001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
			ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
			
			ПроверитьПоказательНаНеотрицательность("П00018М106001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00018М106002", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00018М106003", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00018М106004", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00018М106005", ПарамПроверки, СтатусПроверки);
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Приложение 9 к Разделу 1.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил9;
	Если ЗаполненРаздел(ДеревоРаздела, "Раздел1Прил9") Тогда
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил9");
		ПарамПроверки.Вставить("Данные",        Данные);
		ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
		
		ПроверитьПоказательНаНеотрицательность("П000190001001", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000190001002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000190001003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000190001004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П000190001005", ПарамПроверки, СтатусПроверки);
		
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы19М1;
		ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
			НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
			
			Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00019М102001"])) Тогда
				СообщитьВТС("Приложение 9 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-080 не задана фамилия иностранного гражданина (лица без гражданства).",
				"Раздел1Прил9", "П00019М102001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00019М103001"])) Тогда
				СообщитьВТС("Приложение 9 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-080 не задано имя иностранного гражданина (лица без гражданства).",
				"Раздел1Прил9", "П00019М103001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			ИННИностр = СокрЛП(СтрокаМнЧ.Данные["П00019М105001"]);
			Если ЗначениеЗаполнено(ИННИностр) Тогда
				Если НЕ СтрДлина(ИННИностр) = 12 Тогда
					СообщитьВТС("Приложение 9 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-080 неверно задан ИНН иностранного гражданина (лица без гражданства).",
					"Раздел1Прил9", "П00019М105001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
			КонецЕсли;
			СНИЛСИностр = СокрЛП(СтрокаМнЧ.Данные["П00019М106001"]);
			Если ЗначениеЗаполнено(СНИЛСИностр) Тогда
				Если НЕ СтрДлина(СНИЛСИностр) = 14 Тогда
					СообщитьВТС("Приложение 9 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-080 неверно задан СНИЛС иностранного гражданина (лица без гражданства).",
					"Раздел1Прил9", "П00019М106001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00019М107001"])) Тогда
				СообщитьВТС("Приложение 9 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-080 не задано гражданство (код страны) иностранного гражданина (лица без гражданства).",
				"Раздел1Прил9", "П00019М107001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
			ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
			
			ПроверитьПоказательНаНеотрицательность("П00019М108001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00019М108002", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00019М108003", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00019М108004", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00019М108005", ПарамПроверки, СтатусПроверки);
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Приложение 10 к Разделу 1.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел1Прил10;
	Если ЗаполненРаздел(ДеревоРаздела, "Раздел1Прил10") Тогда
		
		Данные = ДеревоРаздела.Строки[0].Данные;
		НомерСтраницы = 1;
		
		ПарамПроверки.Вставить("ИмяРаздела",    "Раздел1Прил10");
		ПарамПроверки.Вставить("Данные",        Данные);
		ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
		
		ПроверитьПоказательНаНеотрицательность("П001100001001", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П001100001002", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П001100001003", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П001100001004", ПарамПроверки, СтатусПроверки);
		ПроверитьПоказательНаНеотрицательность("П001100001005", ПарамПроверки, СтатусПроверки);
		
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы110М1;
		ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
			НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
			
			Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00110М103001"])) Тогда
				СообщитьВТС("Приложение 10 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-140 не задана фамилия обучающегося.",
				"Раздел1Прил10", "П00110М103001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00110М104001"])) Тогда
				СообщитьВТС("Приложение 10 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-140 не задано имя обучающегося.",
				"Раздел1Прил10", "П00110М104001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			СправкаСтудОтрядНомер = СокрЛП(СтрокаМнЧ.Данные["П00110М106001"]);
			СправкаСтудОтрядДата  = СтрокаМнЧ.Данные["П00110М107001"];
			СправкаОчноеОбучНомер = СокрЛП(СтрокаМнЧ.Данные["П00110М108001"]);
			СправкаОчноеОбучДата  = СтрокаМнЧ.Данные["П00110М109001"];
			Если (ЗначениеЗаполнено(СправкаСтудОтрядНомер)
				ИЛИ ЗначениеЗаполнено(СправкаСтудОтрядДата))
				И (ЗначениеЗаполнено(СправкаОчноеОбучНомер)
				ИЛИ ЗначениеЗаполнено(СправкаОчноеОбучДата)) Тогда
				СообщитьВТС("Приложение 10 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-140 одновременно заданы сведения из справки, подтверждающих членство в студенческом отряде, и сведения из справки, подтверждающих очную форму обучения.",
				"Раздел1Прил10", "П00110М106001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли ЗначениеЗаполнено(СправкаСтудОтрядНомер)
				ИЛИ ЗначениеЗаполнено(СправкаСтудОтрядДата) Тогда
				Если НЕ ЗначениеЗаполнено(СправкаСтудОтрядНомер) Тогда
					СообщитьВТС("Приложение 10 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-140 в сведениях из справки, подтверждающих членство в студенческом отряде, не задан номер.",
					"Раздел1Прил10", "П00110М106001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(СправкаСтудОтрядДата) Тогда
					СообщитьВТС("Приложение 10 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-140 в сведениях из справки, подтверждающих членство в студенческом отряде, не задана дата.",
					"Раздел1Прил10", "П00110М107001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(СправкаСтудОтрядДата) Тогда
					СообщитьВТС("Приложение 10 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-140 в сведениях из справки, подтверждающих членство в студенческом отряде, задана дата, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
					"Раздел1Прил10", "П00110М107001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(СправкаОчноеОбучНомер)
				ИЛИ ЗначениеЗаполнено(СправкаОчноеОбучДата) Тогда
				Если НЕ ЗначениеЗаполнено(СправкаОчноеОбучНомер) Тогда
					СообщитьВТС("Приложение 10 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-140 в сведениях из справки, подтверждающих очную форму обучения, не задан номер.",
					"Раздел1Прил10", "П00110М108001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(СправкаОчноеОбучДата) Тогда
					СообщитьВТС("Приложение 10 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-140 в сведениях из справки, подтверждающих очную форму обучения, не задана дата.",
					"Раздел1Прил10", "П00110М109001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(СправкаОчноеОбучДата) Тогда
					СообщитьВТС("Приложение 10 к разделу 1: в строке " + НомерСтроки
					+ " группы строк 020-140 в сведениях из справки, подтверждающих очную форму обучения, задана дата, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
					"Раздел1Прил10", "П00110М107001_" + НомерСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
			Иначе
				СообщитьВТС("Приложение 10 к разделу 1: в строке " + НомерСтроки
				+ " группы строк 020-140 необходимо задать сведения из справки, подтверждающих членство в студенческом отряде, или сведения из справки, подтверждающих очную форму обучения.",
				"Раздел1Прил10", "П00110М106001_" + НомерСтроки, НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
			ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
			
			ПроверитьПоказательНаНеотрицательность("П00110М110001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00110М110002", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00110М110003", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00110М110004", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П00110М110005", ПарамПроверки, СтатусПроверки);
			
			ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М2];
			Для Каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
				ИндСтрокиПодчМнЧ = ДанныеПодчМнЧ.Строки.Индекс(СтрокаПодчМнЧ);
				НомерПодчСтроки = Формат(ИндСтрокиПодчМнЧ + 1, "ЧГ=");
				
				Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаПодчМнЧ.Данные["П00110М212001"])) Тогда
					СообщитьВТС("Приложение 10 к разделу 1 -> Строка " + НомерСтроки
					+ " группы строк 020-140: в строке " + НомерПодчСтроки + " группы строк 110-140 не задано наименование молодежного и детского объединения.",
					"Раздел1Прил10", "П00110М212001_" + НомерСтроки + "_" + НомерПодчСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(СтрокаПодчМнЧ.Данные["П00110М213001"]) Тогда
					СообщитьВТС("Приложение 10 к разделу 1 -> Строка " + НомерСтроки
					+ " группы строк 020-140: в строке " + НомерПодчСтроки + " группы строк 110-140 не задана дата записи в реестре.",
					"Раздел1Прил10", "П00110М213001_" + НомерСтроки + "_" + НомерПодчСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаПодчМнЧ.Данные["П00110М214001"])) Тогда
					СообщитьВТС("Приложение 10 к разделу 1 -> Строка " + НомерСтроки
					+ " группы строк 020-140: в строке " + НомерПодчСтроки + " группы строк 110-140 не задан номер записи в реестре.",
					"Раздел1Прил10", "П00110М214001_" + НомерСтроки + "_" + НомерПодчСтроки, НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Раздел 2.
	ДеревоРаздела2 = ДанныеМногоуровневыхРазделов.Раздел2;
	Если ПараметрыВыгрузки.ПоМесту = "124" Тогда
		
		НомерСтраницы = 1;
		
		Если НЕ ЗаполненРаздел(ДеревоРаздела2, "Раздел2") Тогда
			
			СообщитьВТС("Раздел 2 не заполнен.", "Раздел2", "П000020001001", НомерСтраницы);
			СтатусПроверки = Ложь;
			
		Иначе
			
			Данные = ДеревоРаздела2.Строки[0].Данные;
			
			ПарамПроверки.Вставить("ИмяРаздела",    "Раздел2");
			ПарамПроверки.Вставить("Данные",        Данные);
			ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
			
			ОКТМОДлина = СтрДлина(СокрЛП(Данные["П000020001001"]));
			Если НЕ (ОКТМОДлина = 8 ИЛИ ОКТМОДлина = 11) Тогда
				СообщитьВТС("Раздел 2: в строке 010 не" + ?(ОКТМОДлина = 0, "", "верно")
				+ " задан код по ОКТМО.",
				"Раздел2", "П000020001001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			КБКДлина = СтрДлина(СокрЛП(Данные["П000020002001"]));
			Если НЕ КБКДлина = 20 Тогда
				СообщитьВТС("Раздел 2: в строке 020 не" + ?(КБКДлина = 0, "", "верно")
				+ " задан код бюджетной классификации.",
				"Раздел2", "П000020002001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПроверитьПоказательНаНеотрицательность("П000020003001", ПарамПроверки, СтатусПроверки);
			
			КБКДлина = СтрДлина(СокрЛП(Данные["П000020004001"]));
			Если НЕ КБКДлина = 20 Тогда
				СообщитьВТС("Раздел 2: в строке 040 не" + ?(КБКДлина = 0, "", "верно")
				+ " задан код бюджетной классификации.",
				"Раздел2", "П000020004001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ПроверитьПоказательНаНеотрицательность("П000020005001", ПарамПроверки, СтатусПроверки);
			
			ДанныеМнЧ = ДеревоРаздела2.Строки[0].ДанныеМногострочныхЧастей[
			СтруктураРеквизитовФормы.мИдГруппы21М1];
			
			ИмяПокФамилияФЛ = "П00021М101001";
			ИмяПокИмяФЛ     = "П00021М102001";
			ИмяПокИННФЛ     = "П00021М104001";
			ИмяПокСНИЛС     = "П00021М105001";
			ИмяПокГодРожд   = "П00021М106001";
			ИмяПокДатаНач   = "П00021М107001";
			ИмяПокДатаКон   = "П00021М108001";
			
			Для Каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				
				Инд = Формат(ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
				
				ФамилияФЛ = СтрокаМнЧ.Данные[ИмяПокФамилияФЛ];
				Если НЕ ЗначениеЗаполнено(ФамилияФЛ) Тогда
					СообщитьВТС("Приложение 1 к Разделу 2: в строке " + Инд
					+ " группы строк 010-090 не задана фамилия члена крестьянского (фермерского) хозяйства.",
					"Раздел2", ИмяПокФамилияФЛ + "_" + Инд);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ИмяФЛ = СтрокаМнЧ.Данные[ИмяПокИмяФЛ];
				Если НЕ ЗначениеЗаполнено(ИмяФЛ) Тогда
					СообщитьВТС("Приложение 1 к Разделу 2: в строке " + Инд
					+ " группы строк 010-090 не задано имя члена крестьянского (фермерского) хозяйства.",
					"Раздел2", ИмяПокИмяФЛ + "_" + Инд);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ИННФЛ = СтрокаМнЧ.Данные[ИмяПокИННФЛ];
				Если ЗначениеЗаполнено(ИННФЛ) Тогда
					ИННФЛДлина = СтрДлина(СокрЛП(ИННФЛ));
					Если НЕ ИННФЛДлина = 12 Тогда
						СообщитьВТС("Приложение 1 к Разделу 2: в строке " + Инд
						+ " группы строк 010-090 неверно задан ИНН члена крестьянского (фермерского) хозяйства.",
						"Раздел2", ИмяПокИННФЛ + "_" + Инд);
						СтатусПроверки = Ложь;
					КонецЕсли;
				КонецЕсли;
				
				СНИЛСДлина = СтрДлина(СокрЛП(СтрокаМнЧ.Данные[ИмяПокСНИЛС]));
				Если НЕ СНИЛСДлина = 14 Тогда
					СообщитьВТС("Приложение 1 к Разделу 2: в строке " + Инд
					+ " группы строк 010-090 не" + ?(СНИЛСДлина = 0, "", "верно")
					+ " задан задан СНИЛС члена крестьянского (фермерского) хозяйства.",
					"Раздел2", ИмяПокСНИЛС + "_" + Инд);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ГодРождДлина = СтрДлина(СокрЛП(СтрокаМнЧ.Данные[ИмяПокГодРожд]));
				Если НЕ ГодРождДлина = 4 Тогда
					СообщитьВТС("Приложение 1 к Разделу 2: в строке " + Инд
					+ " группы строк 010-090 не" + ?(ГодРождДлина = 0, "", "верно")
					+ " задан год рождения члена крестьянского (фермерского) хозяйства.",
					"Раздел2", ИмяПокГодРожд + "_" + Инд);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаНач]) Тогда
					СообщитьВТС("Приложение 1 к Разделу 2: в строке " + Инд
					+ " группы строк 010-090 не задана дата начала периода членства в крестьянском (фермерском) хозяйстве в расчетный период.",
					"Раздел2", ИмяПокДатаНач + "_" + Инд);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(СтрокаМнЧ.Данные[ИмяПокДатаНач],
					СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета,
					СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) Тогда
					СообщитьВТС("Приложение 1 к Разделу 2: в строке " + Инд
					+ " группы строк 010-090 задана дата начала периода членства в крестьянском (фермерском) хозяйстве, выходящая за пределы расчетного периода.",
					"Раздел2", ИмяПокДатаНач + "_" + Инд);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаКон]) Тогда
					СообщитьВТС("Приложение 1 к Разделу 2: в строке " + Инд
					+ " группы строк 010-090 не задана дата окончания периода членства в крестьянском (фермерском) хозяйстве в расчетный период.",
					"Раздел2", ИмяПокДатаКон + "_" + Инд);
					СтатусПроверки = Ложь;
				ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(СтрокаМнЧ.Данные[ИмяПокДатаКон],
					СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета,
					СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) Тогда
					СообщитьВТС("Приложение 1 к Разделу 2: в строке " + Инд
					+ " группы строк 010-090 задана дата окончания периода членства в крестьянском (фермерском) хозяйстве, выходящая за пределы расчетного периода.",
					"Раздел2", ИмяПокДатаНач + "_" + Инд);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаНач])
					И ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяПокДатаКон])
					И СтрокаМнЧ.Данные[ИмяПокДатаНач] > СтрокаМнЧ.Данные[ИмяПокДатаКон] Тогда
					СообщитьВТС("Приложение 1 к Разделу 2: в строке " + Инд
					+ " группы строк 010-090 дата начала периода членства в крестьянском (фермерском) хозяйстве не должна быть больше даты окончания.",
					"Раздел2", ИмяПокДатаКон + "_" + Инд);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
				ПарамПроверки.Вставить("НомерСтрокиМнЧ", Инд);
				
				ПроверитьПоказательНаНеотрицательность("П00021М109001", ПарамПроверки, СтатусПроверки);
				ПроверитьПоказательНаНеотрицательность("П00021М109002", ПарамПроверки, СтатусПроверки);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Раздел 3.
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел3;
	Если ЗаполненРаздел(ДеревоРаздела, "Раздел3") Тогда
		
		ПредставленияСтраницРаздела3СНеуникальнымиПорядковымиНомерами = Новый Массив;
		
		ТаблПорядковыхНомеров = Новый ТаблицаЗначений;
		ТаблПорядковыхНомеров.Колонки.Добавить("ПорядковыйНомер");
		ТаблПорядковыхНомеров.Колонки.Добавить("ИндексСтраницы");
		ТаблПорядковыхНомеров.Колонки.Добавить("СчетчикСтраниц");
		
		Для каждого СтраницаРаздела Из ДеревоРаздела.Строки Цикл
			
			// Подраздел 3.1.
			Данные = СтраницаРаздела.Данные;
			НомерСтраницы = Формат(ДеревоРаздела.Строки.Индекс(СтраницаРаздела) + 1, "ЧГ=");
			
			ПарамПроверки.Вставить("ИмяРаздела",    "Раздел3");
			ПарамПроверки.Вставить("НомерСтраницы", НомерСтраницы);
			
			ПорядковыйНомер = СокрЛП(Данные["П000030004001"]);
			Если НЕ ЗначениеЗаполнено(ПорядковыйНомер) Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
				+ ": в строке 040 не задан номер.",
				"Раздел3", "П000030004001", НомерСтраницы);
				СтатусПроверки = Ложь;
			Иначе
				НоваяСтрокаТаблПорядковыхНомеров = ТаблПорядковыхНомеров.Добавить();
				НоваяСтрокаТаблПорядковыхНомеров.ПорядковыйНомер = ПорядковыйНомер;
				НоваяСтрокаТаблПорядковыхНомеров.ИндексСтраницы = ДеревоРаздела.Строки.Индекс(СтраницаРаздела);
				НоваяСтрокаТаблПорядковыхНомеров.СчетчикСтраниц = 1;
			КонецЕсли;
			ИННФЛ = СокрЛП(Данные["П000310006001"]);
			Если ЗначениеЗаполнено(ИННФЛ) Тогда
				Если НЕ СтрДлина(ИННФЛ) = 12 Тогда
					СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
					+ ": в строке 060 неверно задан ИНН физического лица.",
					"Раздел3", "П000310006001", НомерСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
			КонецЕсли;
			СНИЛСДлина = СтрДлина(СокрЛП(Данные["П000310007001"]));
			Если НЕ СНИЛСДлина = 14 Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы + ": в строке 070 не"
				+ ?(СНИЛСДлина = 0, "", "верно") + " задан СНИЛС физического лица.",
				"Раздел3", "П000310007001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СокрЛП(Данные["П000310008001"])) Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
				+ ": в строке 080 не задана фамилия физического лица.",
				"Раздел3", "П000310008001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СокрЛП(Данные["П000310009001"])) Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
				+ ": в строке 090 не задано имя физического лица.",
				"Раздел3", "П000310009001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(Данные["П000310011001"]) Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
				+ ": в строке 110 не задана дата рождения физического лица.",
				"Раздел3", "П000310011001", НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ ДатаВходитВРазрешенныйПериод(Данные["П000310011001"]) Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
				+ ": в строке 110 задана дата рождения физического лица, выходящая за пределы периода с 01.01.1900 по 31.12.2099.",
				"Раздел3", "П000310011001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СокрЛП(Данные["П000310012001"])) Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
				+ ": в строке 120 не задано гражданство (код страны) физического лица.",
				"Раздел3", "П000310012001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			ЗначениеПоказателя = СокрЛП(Данные["П000310013001"]);
			Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы + ": в строке 130 не"
				+ ?(ЗначениеПоказателя = "", "", "верно") + " задан пол.",
				"Раздел3", "П000310013001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			КодВидДокДлина = СтрДлина(СокрЛП(Данные["П000310014001"]));
			Если НЕ КодВидДокДлина = 2 Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы + ": в строке 140 не"
				+ ?(КодВидДокДлина = 0, "", "верно") + " задан код вида документа, удостоверяющего личность.",
				"Раздел3", "П000310014001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			Если НЕ (ЗначениеЗаполнено(СокрЛП(Данные["П000310015001"]))
				ИЛИ ЗначениеЗаполнено(СокрЛП(Данные["П000310015002"]))) Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
				+ ": в строке 150 не заданы серия и номер документа, удостоверяющего личность.",
				"Раздел3", "П000310015001", НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли СтрДлина(СокрЛП(Данные["П000310015001"])
				+ СокрЛП(Данные["П000310015002"])) > 24 Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
				+ ": в строке 150 общее количество символов в серии и номере документа, удостоверяющего личность, превышает 24.",
				"Раздел3", "П000310015001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			ЗначениеПоказателя = СокрЛП(Данные["П000310016001"]);
			Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
				+ ": в строке 160 не" + ?(ЗначениеПоказателя = "", "", "верно")
				+ " задан признак застрахованного лица в системе обязательного пенсионного страхования.",
				"Раздел3", "П000310016001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			ЗначениеПоказателя = СокрЛП(Данные["П000310017001"]);
			Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
				+ ": в строке 170 не" + ?(ЗначениеПоказателя = "", "", "верно")
				+ " задан признак застрахованного лица в системе обязательного медицинского страхования.",
				"Раздел3", "П000310017001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			ЗначениеПоказателя = СокрЛП(Данные["П000310018001"]);
			Если МассивСтрок1_2.Найти(ЗначениеПоказателя) = Неопределено Тогда
				СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы
				+ ": в строке 180 не" + ?(ЗначениеПоказателя = "", "", "верно")
				+ " задан признак застрахованного лица в системе обязательного социального страхования.",
				"Раздел3", "П000310018001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			// Проверка в подразделе 3.2.
			ЗаполненПодраздел321 = Ложь;
			ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы321М1;
			ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[ИмяГруппы];
			МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Для каждого ИмяГрафы Из МассивИменГраф Цикл
					Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
						ЗаполненПодраздел321 = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			ЗаполненПодраздел322 = Ложь;
			ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы322М1;
			ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[ИмяГруппы];
			МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Для каждого ИмяГрафы Из МассивИменГраф Цикл
					Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]) Тогда
						ЗаполненПодраздел322 = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			// Подраздел 3.2.1.
			Если ЗаполненПодраздел321 ИЛИ ЗаполненПодраздел322 Тогда
				ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы321М1];
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00321М119001"])) Тогда
						СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы + " -> в строке "
						+ НомерСтроки + " группы строк 190-240 не задан месяц.",
						"Раздел3", "П00321М119001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					КодКатегорииЗЛ = СокрЛП(СтрокаМнЧ.Данные["П00321М120001"]);
					Если НЕ ЗначениеЗаполнено(КодКатегорииЗЛ) Тогда
						СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы + " -> в строке "
						+ НомерСтроки + " группы строк 190-240 не задан код категории застрахованного лица.",
						"Раздел3", "П00321М120001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли СтрДлина(КодКатегорииЗЛ) < 2 Тогда
						СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы + " -> в строке "
						+ НомерСтроки + " группы строк 190-240 задан код категории застрахованного лица, состоящий менее чем из 2 символов.",
						"Раздел3", "П00321М120001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
					
					ПроверитьПоказательНаНеотрицательность("П00321М121001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00321М122001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00321М123001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00321М124001", ПарамПроверки, СтатусПроверки);
					
				КонецЦикла;
			КонецЕсли;
			
			ПарамПроверки.Вставить("Данные", Данные);
			ПроверитьПоказательНаНеотрицательность("П003210025001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П003210025002", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П003210025003", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П003210025004", ПарамПроверки, СтатусПроверки);
			
			// Подраздел 3.2.2.
			Если ЗаполненПодраздел322 Тогда
				ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы322М1];
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомерСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаМнЧ.Данные["П00322М126001"])) Тогда
						СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы + " -> в строке "
						+ НомерСтроки + " группы строк 260-290 не задан месяц.",
						"Раздел3", "П00322М126001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					КодТарифа = СокрЛП(СтрокаМнЧ.Данные["П00322М127001"]);
					Если НЕ ЗначениеЗаполнено(КодТарифа) Тогда
						СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы + " -> в строке "
						+ НомерСтроки + " группы строк 260-290 не задан код тарифа.",
						"Раздел3", "П00322М127001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли СтрДлина(КодТарифа) < 2 Тогда
						СообщитьВТС("Раздел 3 -> Страница " + НомерСтраницы + " -> в строке "
						+ НомерСтроки + " группы строк 260-290 задан код тарифа, не состоящий из 2 символов.",
						"Раздел3", "П00322М127001_" + НомерСтроки, НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ПарамПроверки.Вставить("Данные",         СтрокаМнЧ.Данные);
					ПарамПроверки.Вставить("НомерСтрокиМнЧ", НомерСтроки);
					
					ПроверитьПоказательНаНеотрицательность("П00322М128001", ПарамПроверки, СтатусПроверки);
					ПроверитьПоказательНаНеотрицательность("П00322М129001", ПарамПроверки, СтатусПроверки);
					
				КонецЦикла;
			КонецЕсли;
			
			ПарамПроверки.Вставить("Данные", Данные);
			ПроверитьПоказательНаНеотрицательность("П003220030001", ПарамПроверки, СтатусПроверки);
			ПроверитьПоказательНаНеотрицательность("П003220030002", ПарамПроверки, СтатусПроверки);
			
		КонецЦикла;
		
		ТаблПорядНом = ТаблПорядковыхНомеров.Скопировать();
		ТаблПорядНом.Свернуть("ПорядковыйНомер", "СчетчикСтраниц");
		
		ИндексПервойСтраницыРаздела3СНеуникальнымПорядковымНомером = Неопределено;
		
		Если ТаблПорядковыхНомеров.Количество() <> ТаблПорядНом.Количество() Тогда
			
			Для каждого СтрокаТаблПорядНом Из ТаблПорядНом Цикл
				
				Если СтрокаТаблПорядНом.СчетчикСтраниц > 1 Тогда
					
					СтрокиТаблПорядковыхНомеров = ТаблПорядковыхНомеров.НайтиСтроки(
					Новый Структура("ПорядковыйНомер", СтрокаТаблПорядНом.ПорядковыйНомер));
					
					Для каждого СтрокаТаблПорядковыхНомеров Из СтрокиТаблПорядковыхНомеров Цикл
						
						Данные = ДеревоРаздела.Строки[СтрокаТаблПорядковыхНомеров.ИндексСтраницы].Данные;
						
						СтруктПарам = Новый Структура;
						СтруктПарам.Вставить("Фам", Данные.П000310008001);
						СтруктПарам.Вставить("Имя", Данные.П000310009001);
						СтруктПарам.Вставить("Отч", Данные.П000310010001);
						СтруктПарам.Вставить("ДатаРожд", Данные.П000310011001);
						СтруктПарам.Вставить("НомерСтраницы", СтрокаТаблПорядковыхНомеров.ИндексСтраницы + 1);
						ПредставленияСтраницРаздела3СНеуникальнымиПорядковымиНомерами.Добавить(
						"""" + ПредставлениеСтраницыРаздела3(СтруктПарам) + """");
						
						Если ИндексПервойСтраницыРаздела3СНеуникальнымПорядковымНомером = Неопределено Тогда
							ИндексПервойСтраницыРаздела3СНеуникальнымПорядковымНомером = СтрокаТаблПорядковыхНомеров.ИндексСтраницы;
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ПредставленияСтраницРаздела3СНеуникальнымиПорядковымиНомерами.Количество() > 0 Тогда
			
			СообщитьВТС("Раздел 3: заданы неуникальные значения строки 040 на страницах "
			+ СтрСоединить(ПредставленияСтраницРаздела3СНеуникальнымиПорядковымиНомерами, ", ") + ".",
			"Раздел3", "П000030004001", Формат(ИндексПервойСтраницыРаздела3СНеуникальнымПорядковымНомером + 1, "ЧГ="));
			СтатусПроверки = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтатусПроверки;
	
КонецФункции

&НаСервере
Процедура ПроверитьПоказательНаНеотрицательность(ИмяПоказателя, ПарамПроверки, СтатусПроверки)
	
	Если ПарамПроверки.Данные[ИмяПоказателя] < 0 Тогда
		
		КодСтроки = Сред(ИмяПоказателя, 9, 3);
		
		Если ПарамПроверки.ИмяРаздела = "Раздел1" Тогда
			
			Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
				
				НомерМнЧ = Сред(ИмяПоказателя, 8, 1);
				ТекстГруппаСтрок = "";
				Если НомерМнЧ = "1" Тогда
					ТекстГруппаСтрок = "060-073";
				ИначеЕсли НомерМнЧ = "2" Тогда
					ТекстГруппаСтрок = "080-093";
				КонецЕсли;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Раздел 1: в строке %1 группы строк %2 значение строки с кодом %3 не должно быть отрицательным.'"),
				ПарамПроверки.НомерСтрокиМнЧ, ТекстГруппаСтрок, КодСтроки);
				
				СообщитьВТС(ТекстСообщения, ПарамПроверки.ИмяРаздела,
				ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
				
			Иначе
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Раздел 1: в строке %1 значение не должно быть отрицательным.'"), КодСтроки);
				
				СообщитьВТС(ТекстСообщения, ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
				
			КонецЕсли;
			
		ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_1и1_2" Тогда
			
			НомерПодраздела = Лев(ИмяПоказателя, 6);
			ТекстНомерПодраздела = "";
			Если НомерПодраздела = "П01111" Тогда
				ТекстНомерПодраздела = "1.1";
			ИначеЕсли НомерПодраздела = "П01112" Тогда
				ТекстНомерПодраздела = "1.2";
			КонецЕсли;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
			"ru='Приложение 1 к разделу 1 -> Страница %1 -> Подраздел %2: в графе %3 строки %4 значение не должно быть отрицательным.'"),
			ПарамПроверки.НомерСтраницы, ТекстНомерПодраздела, Прав(ИмяПоказателя, 1), КодСтроки);
			
			СообщитьВТС(ТекстСообщения, ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.КоординатыПодраздела);
			
		ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_3_1"
			ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_3_2"
			ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_4" Тогда
			
			ТекстНомерПодраздела = "";
			Если ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_3_1" Тогда
				ТекстНомерПодраздела = "1.3.1";
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_3_2" Тогда
				ТекстНомерПодраздела = "1.3.2";
			ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил1Подр1_4" Тогда
				ТекстНомерПодраздела = "1.4";
			КонецЕсли;
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
			"ru='Приложение 1 к разделу 1 -> Страница %1 -> Подраздел %2: в строке %3 группы строк 001-050 в графе %4 строки %5 значение не должно быть отрицательным.'"),
			ПарамПроверки.НомерСтраницы, ТекстНомерПодраздела, ПарамПроверки.НомерСтрокиМнЧ, Сред(ИмяПоказателя, 13, 1),
			КодСтроки);
			
			СообщитьВТС(ТекстСообщения, ПарамПроверки.ИмяРаздела,
			ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.КоординатыПодраздела);
			
		ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил2"
			ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил3"
			ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил4"
			ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил5_6"
			ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил7" Тогда
			
			ТекстНомерПриложения = Сред(ИмяПоказателя, 6, 1);
			
			ТекстНомерГрафы = Прав(ИмяПоказателя, 1);
			ТекстНомерГрафы = ?(ТекстНомерГрафы = "0", Прав(ИмяПоказателя, 2), ТекстНомерГрафы);
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
			"ru='Приложение %1 к Разделу 1: в графе %2 строки %3 значение не должно быть отрицательным.'"),
			ТекстНомерПриложения, ТекстНомерГрафы, КодСтроки);
			
			СообщитьВТС(ТекстСообщения, ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
			
		ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил8"
			ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил9"
			ИЛИ ПарамПроверки.ИмяРаздела = "Раздел1Прил10" Тогда
			
			ТекстНомерПриложения = Сред(ИмяПоказателя, 6, 1);
			ТекстНомерПриложения = ?(ТекстНомерПриложения = "0", Сред(ИмяПоказателя, 5, 2), ТекстНомерПриложения);
			
			ТекстСуммаВыплат = "";
			НомерГрафы = Сред(ИмяПоказателя, 13, 1);
			Если НомерГрафы = "1" Тогда
				ТекстСуммаВыплат = "всего с начала расчетного периода";
			ИначеЕсли НомерГрафы = "2" Тогда
				ТекстСуммаВыплат = "всего за последние три месяца расчетного (отчетного) периода";
			ИначеЕсли НомерГрафы = "3" Тогда
				ТекстСуммаВыплат = "за первый из последних трех месяцев расчетного (отчетного) периода";
			ИначеЕсли НомерГрафы = "4" Тогда
				ТекстСуммаВыплат = "за второй из последних трех месяцев расчетного (отчетного) периода";
			ИначеЕсли НомерГрафы = "5" Тогда
				ТекстСуммаВыплат = "за третий из последних трех месяцев расчетного (отчетного) периода";
			КонецЕсли;
			
			Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
				
				ТекстГруппаСтрок = "";
				Если ПарамПроверки.ИмяРаздела = "Раздел1Прил8" Тогда
					ТекстГруппаСтрок = "020-060";
				ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил9" Тогда
					ТекстГруппаСтрок = "020-080";
				ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел1Прил10" Тогда
					ТекстГруппаСтрок = "020-100";
				КонецЕсли;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Приложение %1 к разделу 1: в строке %2 группы строк %3 сумма выплат %4 не должна быть отрицательной.'"),
				ТекстНомерПриложения, ПарамПроверки.НомерСтрокиМнЧ, ТекстГруппаСтрок, ТекстСуммаВыплат);
				
				СообщитьВТС(ТекстСообщения, ПарамПроверки.ИмяРаздела,
				ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
				
			Иначе
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Приложение %1 к разделу 1: итоговая сумма выплат %2 не должна быть отрицательной.'"),
				ТекстНомерПриложения, ТекстСуммаВыплат);
				
				СообщитьВТС(ТекстСообщения, ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
				
			КонецЕсли;
			
		ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел2" Тогда
			
			Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
				
				ТекстСуммаВыплат = "";
				НомерГрафы = Сред(ИмяПоказателя, 13, 1);
				Если НомерГрафы = "1" Тогда
					ТекстСуммаВыплат = "пенсионное";
				ИначеЕсли НомерГрафы = "2" Тогда
					ТекстСуммаВыплат = "медицинское";
				КонецЕсли;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Приложение 1 к разделу 2: в строке %1 группы строк 010-090 сумма начисленных страховых взносов на обязательное %2 страхование не должна быть отрицательной.'"),
				ПарамПроверки.НомерСтрокиМнЧ, ТекстСуммаВыплат);
				
				СообщитьВТС(ТекстСообщения, ПарамПроверки.ИмяРаздела,
				ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
				
			Иначе
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Раздел 2: в строке %1 значение не должно быть отрицательным.'"), КодСтроки);
				
				СообщитьВТС(ТекстСообщения, ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
				
			КонецЕсли;
			
		ИначеЕсли ПарамПроверки.ИмяРаздела = "Раздел3" Тогда
			
			Если Сред(ИмяПоказателя, 7, 1) = "М" Тогда
				
				МнЧ = Лев(ИмяПоказателя, 8);
				ТекстГруппаСтрок = "";
				Если МнЧ = "П00321М1" Тогда
					ТекстГруппаСтрок = "190-240";
				ИначеЕсли МнЧ = "П00322М1" Тогда
					ТекстГруппаСтрок = "260-290";
				КонецЕсли;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Раздел 3 -> Страница %1 -> в строке %2 группы строк %3 значение строки с кодом %4 не должно быть отрицательным.'"),
				ПарамПроверки.НомерСтраницы, ПарамПроверки.НомерСтрокиМнЧ, ТекстГруппаСтрок, КодСтроки);
				
				СообщитьВТС(ТекстСообщения, ПарамПроверки.ИмяРаздела,
				ИмяПоказателя + "_" + ПарамПроверки.НомерСтрокиМнЧ, ПарамПроверки.НомерСтраницы);
				
			Иначе
				
				ТекстСуммаВыплат = "";
				НомерГрафы = Сред(ИмяПоказателя, 13, 1);
				Если КодСтроки = "250" Тогда
					Если НомерГрафы = "1" Тогда
						ТекстСуммаВыплат = "сумма выплат и иных вознаграждений";
					ИначеЕсли НомерГрафы = "2" Тогда
						ТекстСуммаВыплат = "база для исчисления страховых взносов на обязательное пенсионное страхование в пределах предельной величины";
					ИначеЕсли НомерГрафы = "3" Тогда
						ТекстСуммаВыплат = "база для исчисления страховых взносов на обязательное пенсионное страхование в пределах предельной величины по гражданско-правовым договорам";
					ИначеЕсли НомерГрафы = "4" Тогда
						ТекстСуммаВыплат = "сумма исчисленных страховых взносов с базы исчисления страховых взносов, не превышающих предельную величину,";
					КонецЕсли;
				ИначеЕсли КодСтроки = "300" Тогда
					Если НомерГрафы = "1" Тогда
						ТекстСуммаВыплат = "сумма выплат и иных вознаграждений, на которые начислены страховые взносы,";
					ИначеЕсли НомерГрафы = "2" Тогда
						ТекстСуммаВыплат = "сумма исчисленных страховых взносов";
					КонецЕсли;
				КонецЕсли;
				
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
				"ru='Раздел 3 -> Страница %1 -> %2 всего за последние три месяца расчетного (отчетного) периода не должна быть отрицательной.'"),
				ПарамПроверки.НомерСтраницы, ТекстСуммаВыплат);
				
				СообщитьВТС(ТекстСообщения, ПарамПроверки.ИмяРаздела, ИмяПоказателя, ПарамПроверки.НомерСтраницы);
				
			КонецЕсли;
			
		КонецЕсли;
		
		СтатусПроверки = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДатаВходитВРазрешенныйПериод(ПровДата, ЛеваяГраница = '19000101', ПраваяГраница = '20991231')
	
	Возврат ПровДата >= ЛеваяГраница И ПровДата <= ПраваяГраница;
	
КонецФункции

&НаСервере
Функция ЗаполненРаздел1(ДанныеМногоуровневыхРазделов, ДопПараметры)
	
	Возврат ЗаполненРаздел(ДанныеМногоуровневыхРазделов["Раздел1"],    "Раздел1",      ДопПараметры)
	ИЛИ ЗаполненРаздел(ДанныеМногоуровневыхРазделов["Раздел1Прил1"],   "Раздел1Прил1")
	ИЛИ ЗаполненРаздел(ДанныеМногоуровневыхРазделов["Раздел1Прил2"],   "Раздел1Прил2", ДопПараметры)
	ИЛИ ЗаполненРаздел(ДанныеМногоуровневыхРазделов["Раздел1Прил3"],   "Раздел1Прил3")
	ИЛИ ЗаполненРаздел(ДанныеМногоуровневыхРазделов["Раздел1Прил4"],   "Раздел1Прил4")
	ИЛИ ЗаполненРаздел(ДанныеМногоуровневыхРазделов["Раздел1Прил5_6"], "Раздел1Прил5_6")
	ИЛИ ЗаполненРаздел(ДанныеМногоуровневыхРазделов["Раздел1Прил7"],   "Раздел1Прил7")
	ИЛИ ЗаполненРаздел(ДанныеМногоуровневыхРазделов["Раздел1Прил8"],   "Раздел1Прил8", ДопПараметры)
	ИЛИ ЗаполненРаздел(ДанныеМногоуровневыхРазделов["Раздел1Прил9"],   "Раздел1Прил9")
	ИЛИ ЗаполненРаздел(ДанныеМногоуровневыхРазделов["Раздел1Прил10"],  "Раздел1Прил10");
	
КонецФункции

&НаСервере
Функция ЗаполненРаздел(Знач ДеревоРаздела, Знач ИмяРаздела, ДопПараметры = Неопределено)
	
	Если ИмяРаздела = "Раздел1Прил8" Тогда
		Если ТипЗнч(ДопПараметры) = Тип("Структура") Тогда
			Если ДопПараметры.Свойство("ЭтоПБОЮЛ") И ДопПараметры.ЭтоПБОЮЛ Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ПоказателиНеанализируемыеНаЗаполненность = Новый Массив;
	
	ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010001001");
	
	Если ИмяРаздела = "Раздел1" Тогда
		Если ТипЗнч(ДопПараметры) = Тип("Структура") Тогда
			Если ДопПараметры.Свойство("НеПроверятьЗаполнениеКБКСтрок020_040_100Раздела1") Тогда
				ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010002001");
				ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010004001");
				ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000010010001");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяРаздела = "Раздел1Прил2" Тогда
		Если ТипЗнч(ДопПараметры) = Тип("Структура") Тогда
			Если ДопПараметры.Свойство("НеПроверятьЗаполнениеПризнаковСтроки090") Тогда
				ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009001");
				ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009003");
				ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009005");
				ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009007");
				ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000120009009");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяРаздела = "Раздел1Прил5_6" Тогда
		ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000160006002");
		ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000160007002");
		ПоказателиНеанализируемыеНаЗаполненность.Добавить("П000160008002");
	КонецЕсли;
	
	ПоказателиНеанализируемыеНаЗаполненность.Добавить("П00110М102001");
	ПоказателиНеанализируемыеНаЗаполненность.Добавить("П00110М211001");
	
	Для каждого СтраницаРаздела Из ДеревоРаздела.Строки Цикл
		
		Данные = СтраницаРаздела.Данные;
		Для каждого Пок Из Данные Цикл
			Если ЗначениеЗаполнено(Пок.Значение)
				И ПоказателиНеанализируемыеНаЗаполненность.Найти(Пок.Ключ) = Неопределено Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если мСтруктураМногоуровневыхРазделов[ИмяРаздела].Свойство("ИменаГруппМнЧ") Тогда
			
			ИменаГруппМнЧ = мСтруктураМногоуровневыхРазделов[ИмяРаздела]["ИменаГруппМнЧ"];
			Для каждого ИмяГруппы Из ИменаГруппМнЧ Цикл
				
				ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[ИмяГруппы];
				МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
				Для Каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					Для каждого ИмяГрафы Из МассивИменГраф Цикл
						Если ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы])
							И ПоказателиНеанализируемыеНаЗаполненность.Найти(ИмяГрафы) = Неопределено Тогда
							Возврат Истина;
						КонецЕсли;
					КонецЦикла;
					
					ИменаПодчГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаПодчиненныхГрупп"];
					Для каждого ИмяПодчГруппы Из ИменаПодчГрупп Цикл
						
						ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяПодчГруппы];
						МассивИменПодчГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяПодчГруппы]["ИменаГраф"];
						Для Каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
							Для каждого ИмяПодчГрафы Из МассивИменПодчГраф Цикл
								Если ЗначениеЗаполнено(СтрокаПодчМнЧ.Данные[ИмяПодчГрафы])
									И ПоказателиНеанализируемыеНаЗаполненность.Найти(ИмяПодчГрафы) = Неопределено Тогда
									Возврат Истина;
								КонецЕсли;
							КонецЦикла;
						КонецЦикла;
						
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если мСтруктураМногоуровневыхРазделов[ИмяРаздела].Свойство("ИменаПодчиненныхРазделов") Тогда
			ИменаПодчРазделов = мСтруктураМногоуровневыхРазделов[ИмяРаздела]["ИменаПодчиненныхРазделов"];
			Для ИндПодчРаздела = 0 По ИменаПодчРазделов.Количество() - 1 Цикл
				ДеревоПодчРаздела = СтраницаРаздела.Строки[ИндПодчРаздела];
				ИмяПодчРаздела = ИменаПодчРазделов[ИндПодчРаздела];
				Если ЗаполненРаздел(ДеревоПодчРаздела, ИмяПодчРаздела) Тогда
					Возврат Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура СообщитьВТС(Описание, Раздел, ИмяЯчейки, ФИО = "")
	
	РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтаФорма, Описание, Раздел, ИмяЯчейки, ФИО);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанными(ПараметрыВыгрузки, ДеревоВыгрузки)
	
	ОбработатьУсловныеЭлементы(ПараметрыВыгрузки, ДеревоВыгрузки); // формируем точную структуру XML-макета
	ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, ДеревоВыгрузки);
	ОтсечьНезаполненныеНеобязательныеУзлы(ДеревоВыгрузки);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьУсловныеЭлементы(Знач ПараметрыВыгрузки, Узел)
	
	Если ТипЗнч(Узел) <> Тип("ДеревоЗначений") Тогда
		Если Узел.Код = ПараметрыВыгрузки.ИмяКлючевогоУзлаСодержательнойЧасти Тогда
			Возврат;
		КонецЕсли;
		РегламентированнаяОтчетность.ДополнитьСтруктуруПараметров(мДанныеОтчета, ПараметрыВыгрузки, Узел);
	КонецЕсли;
	КоличествоСтрок = Узел.Строки.Количество();
	Для Инд = 1 По КоличествоСтрок Цикл
		ТекСтр = Узел.Строки.Получить(КоличествоСтрок - Инд);
		Если НЕ ПустаяСтрока(ТекСтр.Условие) Тогда
			Если НЕ РегламентированнаяОтчетность.УсловиеВыполнено(ЭтаФорма, ПараметрыВыгрузки, ТекСтр.Условие) Тогда
				Узел.Строки.Удалить(ТекСтр);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		ОбработатьУсловныеЭлементы(ПараметрыВыгрузки, ТекСтр);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, Узел, НомерСтроки = Неопределено)
	
	СтрокиУзла = Новый Массив;
	Для Каждого Стр Из Узел.Строки Цикл
		СтрокиУзла.Добавить(Стр);
	КонецЦикла;
	
	Для Каждого Стр из СтрокиУзла Цикл
		Если Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда // учет обоих вариантов: кириллицы и латиницы
			Если РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ПараметрыВыгрузки, "ИмяКлючевогоУзлаСодержательнойЧасти") И Стр.Код = ПараметрыВыгрузки.ИмяКлючевогоУзлаСодержательнойЧасти Тогда
				ЗаполнитьСодержательнуюЧасть(Стр, ПараметрыВыгрузки);
			ИначеЕсли Стр.Многострочность Тогда
				НомСтр = 1;
				ПодчиненныйЭлемент = ПолучитьПервыйПодчиненныйУзелСЗаполненнымКлючом(Стр);
				КлючПодчиненногоЭлемента = ПодчиненныйЭлемент.Ключ;
				Пока РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ПараметрыВыгрузки, КлючПодчиненногоЭлемента + "_" + Формат(НомСтр, "ЧГ=")) Цикл
					УзелСоответствующийСтроке = СкопироватьУзел(Узел, Стр);
					ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, УзелСоответствующийСтроке, НомСтр);
					НомСтр = НомСтр + 1;
				КонецЦикла;
			Иначе
				ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, Стр, НомерСтроки);
			КонецЕсли;
		Иначе
			Если ПустаяСтрока(Стр.ЗначениеПоУмолчанию) Тогда
				Если НЕ ПустаяСтрока(Стр.Ключ) Тогда
					ПолныйКодПоказателя = Стр.Ключ + ?(ЗначениеЗаполнено(НомерСтроки), "_" + Формат(НомерСтроки, "ЧГ="), "");
					ЗначениеПоказателя = Неопределено;
					Если ПараметрыВыгрузки.Свойство(ПолныйКодПоказателя, ЗначениеПоказателя) Тогда
						ВывестиПоказательВXML(Стр, ЗначениеПоказателя);
					Иначе
						ВывестиПоказательВXML(Стр, "");
					КонецЕсли;
				Иначе
					Стр.Значение = "";
				КонецЕсли;
			ИначеЕсли Лев(Стр.ЗначениеПоУмолчанию, 1) = "&" Тогда
				ВывестиПоказательВXML(Стр, ПараметрыВыгрузки[Сред(Стр.ЗначениеПоУмолчанию, 2)]);
			Иначе
				Стр.Значение = Стр.ЗначениеПоУмолчанию;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПервыйПодчиненныйУзелСЗаполненнымКлючом(Родитель)
	
	Для Каждого Стр из Родитель.Строки Цикл
		Если ЗначениеЗаполнено(Стр.Ключ) Тогда
			Возврат Стр;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция СкопироватьУзел(Родитель, Узел, Знач МаксИндекс = Неопределено)
	
	// Нахождение узла с максимальным индексом и с тем же кодом,
	// что и у копируемого, и добавление нового сразу после найденного.
	Если МаксИндекс = Неопределено Тогда
		СтрокиСТемЖеКодом = Родитель.Строки.НайтиСтроки(Новый Структура("Код", Узел.Код), Ложь);
		МаксИндекс = - 1;
		КолСтрокСТемЖеКодом = СтрокиСТемЖеКодом.Количество();
		Если КолСтрокСТемЖеКодом > 0 Тогда
			МаксИндекс = Родитель.Строки.Индекс(СтрокиСТемЖеКодом[КолСтрокСТемЖеКодом - 1]);
		КонецЕсли;
	КонецЕсли;
	
	ИндексСоздаваемогоУзла = МаксИндекс + 1;
	Если ИндексСоздаваемогоУзла >= Родитель.Строки.Количество() ИЛИ ИндексСоздаваемогоУзла = 0 Тогда
		// Аналогичный узел не найден или найденный узел - последний.
		НовыйУзел = Родитель.Строки.Добавить();
	Иначе
		НовыйУзел = Родитель.Строки.Вставить(ИндексСоздаваемогоУзла);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(НовыйУзел, Узел, , "Родитель, Строки");
	
	Для Каждого Стр из Узел.Строки Цикл
		СкопироватьУзел(НовыйУзел, Стр, Узел.Строки.Количество() - 1);
	КонецЦикла;
	
	Возврат НовыйУзел;
	
КонецФункции

&НаСервере
Функция ПолучитьПодчиненныйЭлемент(Узел, КодЭлемента)
	
	ЧислоВместоКодаЭлемента = (ТипЗнч(КодЭлемента) = Тип("Число"));
	Если ТипЗнч(КодЭлемента) = Тип("Число") Тогда
		Если Узел.Строки.Количество() > КодЭлемента Тогда
			Возврат Узел.Строки.Получить(КодЭлемента);
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Для Каждого Стр Из Узел.Строки Цикл
			Если Стр.Код = КодЭлемента Тогда
				Возврат Стр;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСодержательнуюЧасть(УзелРодитель, ПараметрыВыгрузки)
	
	ДанныеМногоуровневыхРазделов = Новый Структура;
	СохрСтруктура = СохраненныеДанныеОтчета();
	Для каждого ЭлементСтруктуры Из СохрСтруктура.ДанныеМногоуровневыхРазделов Цикл
		ДанныеМногоуровневыхРазделов.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;
	
	ДеревоДанныхРаздел1        = ДанныеМногоуровневыхРазделов["Раздел1"];
	ДеревоДанныхРаздел1Прил1   = ДанныеМногоуровневыхРазделов["Раздел1Прил1"];
	ДеревоДанныхРаздел1Прил2   = ДанныеМногоуровневыхРазделов["Раздел1Прил2"];
	ДеревоДанныхРаздел1Прил3   = ДанныеМногоуровневыхРазделов["Раздел1Прил3"];
	ДеревоДанныхРаздел1Прил4   = ДанныеМногоуровневыхРазделов["Раздел1Прил4"];
	ДеревоДанныхРаздел1Прил5_6 = ДанныеМногоуровневыхРазделов["Раздел1Прил5_6"];
	ДеревоДанныхРаздел1Прил7   = ДанныеМногоуровневыхРазделов["Раздел1Прил7"];
	ДеревоДанныхРаздел1Прил8   = ДанныеМногоуровневыхРазделов["Раздел1Прил8"];
	ДеревоДанныхРаздел1Прил9   = ДанныеМногоуровневыхРазделов["Раздел1Прил9"];
	ДеревоДанныхРаздел1Прил10  = ДанныеМногоуровневыхРазделов["Раздел1Прил10"];
	ДеревоДанныхРаздел2        = ДанныеМногоуровневыхРазделов["Раздел2"];
	ДеревоДанныхРаздел3        = ДанныеМногоуровневыхРазделов["Раздел3"];
	
	// Раздел 1 (единственная страница, имеющая 2 многострочные части).
	Ветка1 = ДеревоДанныхРаздел1.Строки[0];
	ОбязПлатСВ = ПолучитьПодчиненныйЭлемент(УзелРодитель, "ОбязПлатСВ");
	
	// Удаление Раздела 1 вместе с его приложениями из дерева выгрузки по условию.
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ЭтоПБОЮЛ", ПараметрыВыгрузки.ЭтоПБОЮЛ);
	ДопПараметры.Вставить("НеПроверятьЗаполнениеПризнаковСтроки090");
	ДопПараметры.Вставить("НеПроверятьЗаполнениеКБКСтрок020_040_100Раздела1");
	Если ПараметрыВыгрузки.ПоМесту = "124" И НЕ ЗаполненРаздел1(ДанныеМногоуровневыхРазделов, ДопПараметры) Тогда
		
		РегламентированнаяОтчетность.УдалитьУзел(ОбязПлатСВ);
		
	Иначе
		
		// Переопределение обязательности выгрузки Раздела 1.
		Если НЕ ПараметрыВыгрузки.ПоМесту = "124" Тогда
			ОбязПлатСВ.Обязательность = "О";
		КонецЕсли;
		// Немногострочные данные 010-053.
		Для каждого Эл Из ОбязПлатСВ.Строки Цикл
			Если Эл.Код = "ОКТМО" Тогда
				ВывестиПоказательВXML(Эл, Ветка1.Данные[Эл.Ключ]);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ЗаполнитьДаннымиУзел(Ветка1.Данные, ПолучитьПодчиненныйЭлемент(ОбязПлатСВ, "УплПерОПС"));
		ЗаполнитьДаннымиУзел(Ветка1.Данные, ПолучитьПодчиненныйЭлемент(ОбязПлатСВ, "УплПерОМС"));
		// Многострочная часть 060-073.
		УплПерОПСДоп = ПолучитьПодчиненныйЭлемент(ОбязПлатСВ, "УплПерОПСДоп");
		ДанныеМнЧ1 = Ветка1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М1];
		Для каждого СтрокаМнЧ1 Из ДанныеМнЧ1.Строки Цикл
			ЗаполнитьДаннымиУзел(СтрокаМнЧ1.Данные, СкопироватьУзел(ОбязПлатСВ, УплПерОПСДоп));
		КонецЦикла;
		// Многострочная часть 080-093.
		УплПерДСО = ПолучитьПодчиненныйЭлемент(ОбязПлатСВ, "УплПерДСО");
		ДанныеМнЧ2 = Ветка1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М2];
		Для каждого СтрокаМнЧ2 Из ДанныеМнЧ2.Строки Цикл
			ЗаполнитьДаннымиУзел(СтрокаМнЧ2.Данные, СкопироватьУзел(ОбязПлатСВ, УплПерДСО));
		КонецЦикла;
		// Немногострочные данные 100-123.
		УплПревОСС = ПолучитьПодчиненныйЭлемент(ОбязПлатСВ, "УплПревОСС");
		Для каждого Эл Из УплПревОСС.Строки Цикл
			Если Эл.Код = "КБК" Тогда
				ВывестиПоказательВXML(Эл, Ветка1.Данные[Эл.Ключ]);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		УплПерОСС = ПолучитьПодчиненныйЭлемент(УплПревОСС, "УплПерОСС");
		// Специальная выгрузка строк 110-113.
		Для каждого Эл Из УплПерОСС.Строки Цикл
			Если Эл.Код = "СумСВУплПер" Тогда
				Если Ветка1.Данные["П000010011001"] = 0 И Ветка1.Данные["П000010012001"] = 0 Тогда
					УплПерОСС.Обязательность = "О";
					Эл.Обязательность = "О";
					ВывестиПоказательВXML(Эл, 0);
				Иначе
					ВывестиПоказательВXML(Эл, Ветка1.Данные["П000010011001"]);
				КонецЕсли;
			ИначеЕсли Эл.Код = "СумСВУпл1М" Тогда
				Если Ветка1.Данные["П000010011101"] = 0 И Ветка1.Данные["П000010012101"] = 0 Тогда
					УплПерОСС.Обязательность = "О";
					Эл.Обязательность = "О";
					ВывестиПоказательВXML(Эл, 0);
				Иначе
					ВывестиПоказательВXML(Эл, Ветка1.Данные["П000010011101"]);
				КонецЕсли;
			ИначеЕсли Эл.Код = "СумСВУпл2М" Тогда
				Если Ветка1.Данные["П000010011201"] = 0 И Ветка1.Данные["П000010012201"] = 0 Тогда
					УплПерОСС.Обязательность = "О";
					Эл.Обязательность = "О";
					ВывестиПоказательВXML(Эл, 0);
				Иначе
					ВывестиПоказательВXML(Эл, Ветка1.Данные["П000010011201"]);
				КонецЕсли;
			ИначеЕсли Эл.Код = "СумСВУпл3М" Тогда
				Если Ветка1.Данные["П000010011301"] = 0 И Ветка1.Данные["П000010012301"] = 0 Тогда
					УплПерОСС.Обязательность = "О";
					Эл.Обязательность = "О";
					ВывестиПоказательВXML(Эл, 0);
				Иначе
					ВывестиПоказательВXML(Эл, Ветка1.Данные["П000010011301"]);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ЗаполнитьДаннымиУзел(Ветка1.Данные, ПолучитьПодчиненныйЭлемент(УплПревОСС, "ПревРасхОСС"));
		
		// Приложение 1 к Разделу 1 (иерархический раздел).
		РасчСВ_ОПС_ОМС = ПолучитьПодчиненныйЭлемент(ОбязПлатСВ, "РасчСВ_ОПС_ОМС");
		Для каждого ВеткаРазд1Пр1 Из ДеревоДанныхРаздел1Прил1.Строки Цикл
			ЭкзРасчСВ_ОПС_ОМС = СкопироватьУзел(ОбязПлатСВ, РасчСВ_ОПС_ОМС);
			Для каждого Эл Из ЭкзРасчСВ_ОПС_ОМС.Строки Цикл
				Если Эл.Код = "ТарифПлат" Тогда
					ВывестиПоказательВXML(Эл, ВеткаРазд1Пр1.Данные[Эл.Ключ]);
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			ВеткаРазд1Пр1Подр11_12 = ВеткаРазд1Пр1.Строки[0].Строки[0];
			ВеткаРазд1Пр1Подр131   = ВеткаРазд1Пр1.Строки[1].Строки[0];
			ВеткаРазд1Пр1Подр132   = ВеткаРазд1Пр1.Строки[2].Строки[0];
			ВеткаРазд1Пр1Подр14    = ВеткаРазд1Пр1.Строки[3].Строки[0];
			
			// Подразделы 1.1 и 1.2 (единственная страница, нет многострочной части).
			ЗаполнитьДаннымиУзел(ВеткаРазд1Пр1Подр11_12.Данные, ПолучитьПодчиненныйЭлемент(ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ОПС"));
			ЗаполнитьДаннымиУзел(ВеткаРазд1Пр1Подр11_12.Данные, ПолучитьПодчиненныйЭлемент(ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ОМС"));
			
			РасчСВ_ОПС428 = ПолучитьПодчиненныйЭлемент(ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ОПС428");
			
			// Подраздел 1.3.1 (единственная страница, имеющая 1 многострочную часть).
			РасчСВ_428_1_2 = ПолучитьПодчиненныйЭлемент(РасчСВ_ОПС428, "РасчСВ_428.1-2");
			ДанныеМнЧ131 = ВеткаРазд1Пр1Подр131.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11131М1];
			Для каждого СтрокаМнЧ131 Из ДанныеМнЧ131.Строки Цикл
				ЗаполнитьДаннымиУзел(СтрокаМнЧ131.Данные, СкопироватьУзел(РасчСВ_ОПС428, РасчСВ_428_1_2));
			КонецЦикла;
			
			// Подраздел 1.3.2 (единственная страница, имеющая 1 многострочную часть).
			РасчСВ_428_3 = ПолучитьПодчиненныйЭлемент(РасчСВ_ОПС428, "РасчСВ_428.3");
			ДанныеМнЧ132 = ВеткаРазд1Пр1Подр132.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11132М1];
			Для каждого СтрокаМнЧ132 Из ДанныеМнЧ132.Строки Цикл
				ЗаполнитьДаннымиУзел(СтрокаМнЧ132.Данные, СкопироватьУзел(РасчСВ_ОПС428, РасчСВ_428_3));
			КонецЦикла;
			
			// Подраздел 1.4 (единственная страница, имеющая 1 многострочную часть).
			РасчСВ_ДСО = ПолучитьПодчиненныйЭлемент(ЭкзРасчСВ_ОПС_ОМС, "РасчСВ_ДСО");
			ДанныеМнЧ14 = ВеткаРазд1Пр1Подр14.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1114М1];
			Для каждого СтрокаМнЧ14 Из ДанныеМнЧ14.Строки Цикл
				ЗаполнитьДаннымиУзел(СтрокаМнЧ14.Данные, СкопироватьУзел(ЭкзРасчСВ_ОПС_ОМС, РасчСВ_ДСО));
			КонецЦикла;
		КонецЦикла;
		
		// Приложение 2 к Разделу 1 (единственная страница).
		ЗаполнитьДаннымиУзел(ДеревоДанныхРаздел1Прил2.Строки[0].Данные,
		ПолучитьПодчиненныйЭлемент(ОбязПлатСВ, "РасчСВ_ОСС.ВНМ"));
		
		// Приложение 3 к Разделу 1 (единственная страница).
		ЗаполнитьДаннымиУзел(ДеревоДанныхРаздел1Прил3.Строки[0].Данные,
		ПолучитьПодчиненныйЭлемент(ОбязПлатСВ, "РасхОССЗак"));
		
		// Приложение 4 к Разделу 1 (единственная страница).
		ЗаполнитьДаннымиУзел(ДеревоДанныхРаздел1Прил4.Строки[0].Данные,
		ПолучитьПодчиненныйЭлемент(ОбязПлатСВ, "ВыплФинФБ"));
		
		// Приложения 5-6 к Разделу 1 (единственная страница).
		ЗаполнитьДаннымиУзел(ДеревоДанныхРаздел1Прил5_6.Строки[0].Данные,
		ПолучитьПодчиненныйЭлемент(ОбязПлатСВ, "ПравТариф3.1.427"));
		ЗаполнитьДаннымиУзел(ДеревоДанныхРаздел1Прил5_6.Строки[0].Данные,
		ПолучитьПодчиненныйЭлемент(ОбязПлатСВ, "ПравТариф5.1.427"));
		
		// Приложения 7 к Разделу 1 (единственная страница).
		ЗаполнитьДаннымиУзел(ДеревоДанныхРаздел1Прил7.Строки[0].Данные,
		ПолучитьПодчиненныйЭлемент(ОбязПлатСВ, "ПравТариф7.1.427"));
		
		Если ПараметрыВыгрузки.ЭтоПБОЮЛ Тогда
			// Приложение 8 к Разделу 1 (единственная страница, имеющая 1 многострочную часть).
			ВеткаРазд1Пр8 = ДеревоДанныхРаздел1Прил8.Строки[0];
			СвПримТариф9_1_427 = ПолучитьПодчиненныйЭлемент(ОбязПлатСВ, "СвПримТариф9.1.427");
			// Немногострочные данные.
			ЗаполнитьДаннымиУзел(ВеткаРазд1Пр8.Данные, ПолучитьПодчиненныйЭлемент(СвПримТариф9_1_427, "ВыплатИт"));
			// Многострочные данные.
			СведПатент = ПолучитьПодчиненныйЭлемент(СвПримТариф9_1_427, "СведПатент");
			ДанныеМнЧ18 = ВеткаРазд1Пр8.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы18М1];
			Для каждого СтрокаМнЧ18 Из ДанныеМнЧ18.Строки Цикл
				ЗаполнитьДаннымиУзел(СтрокаМнЧ18.Данные, СкопироватьУзел(СвПримТариф9_1_427, СведПатент));
			КонецЦикла;
		КонецЕсли;
		
		// Приложение 9 к Разделу 1 (единственная страница, имеющая 1 многострочную часть).
		ВеткаРазд1Пр9 = ДеревоДанныхРаздел1Прил9.Строки[0];
		СвПримТариф2_2_425 = ПолучитьПодчиненныйЭлемент(ОбязПлатСВ, "СвПримТариф2.2.425");
		// Немногострочные данные.
		ЗаполнитьДаннымиУзел(ВеткаРазд1Пр9.Данные, ПолучитьПодчиненныйЭлемент(СвПримТариф2_2_425, "ВыплатИт"));
		// Многострочные данные.
		СвИноГражд = ПолучитьПодчиненныйЭлемент(СвПримТариф2_2_425, "СвИноГражд");
		ДанныеМнЧ19 = ВеткаРазд1Пр9.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы19М1];
		Для каждого СтрокаМнЧ19 Из ДанныеМнЧ19.Строки Цикл
			ЗаполнитьДаннымиУзел(СтрокаМнЧ19.Данные, СкопироватьУзел(СвПримТариф2_2_425, СвИноГражд));
		КонецЦикла;
		
		// Приложение 10 к Разделу 1 (единственная страница,
		// имеющая одну иерархическую (2 уровня) многострочную часть).
		ВеткаРазд1Пр10 = ДеревоДанныхРаздел1Прил10.Строки[0];
		СвПримТариф1_3_422 = ПолучитьПодчиненныйЭлемент(ОбязПлатСВ, "СвПримТариф1.3.422");
		// Немногострочные данные.
		ЗаполнитьДаннымиУзел(ВеткаРазд1Пр10.Данные, ПолучитьПодчиненныйЭлемент(СвПримТариф1_3_422, "ВыплатИт"));
		// Многострочные данные.
		СведОбуч = ПолучитьПодчиненныйЭлемент(СвПримТариф1_3_422, "СведОбуч");
		ДанныеМнЧ110М1 = ВеткаРазд1Пр10.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М1];
		Для каждого СтрокаМнЧ110М1 Из ДанныеМнЧ110М1.Строки Цикл
			ЭкзСведОбуч = СкопироватьУзел(СвПримТариф1_3_422, СведОбуч);
			// Многострочные данные первого уровня.
			Для каждого Эл Из ЭкзСведОбуч.Строки Цикл
				Если Эл.Код = "УникНомер" Тогда
					// Генерирование "уникальных номеров".
					ВывестиПоказательВXML(Эл, Формат(ДанныеМнЧ110М1.Строки.Индекс(СтрокаМнЧ110М1) + 1, "ЧГ="));
				ИначеЕсли Эл.Строки.Количество() > 0 И Эл.Код <> "СвРеестрМДО" Тогда
					ЗаполнитьДаннымиУзел(СтрокаМнЧ110М1.Данные, ПолучитьПодчиненныйЭлемент(ЭкзСведОбуч, Эл.Код));
				КонецЕсли;
			КонецЦикла;
			// Многострочные данные второго (подчиненного первому) уровня.
			СвРеестрМДО = ПолучитьПодчиненныйЭлемент(ЭкзСведОбуч, "СвРеестрМДО");
			ДанныеМнЧ110М2 = СтрокаМнЧ110М1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М2];
			Для каждого СтрокаМнЧ110М2 Из ДанныеМнЧ110М2.Строки Цикл
				ЗаполнитьДаннымиУзел(СтрокаМнЧ110М2.Данные, СкопироватьУзел(ЭкзСведОбуч, СвРеестрМДО));
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	// Раздел 2 (единственная страница, имеющая 1 многострочную часть)
	// выгружается по условию.
	Если ПараметрыВыгрузки.ПоМесту = "124" Тогда
		Ветка2 = ДеревоДанныхРаздел2.Строки[0];
		ОбязПлатСВ_КФХ = ПолучитьПодчиненныйЭлемент(УзелРодитель, "ОбязПлатСВ_КФХ");
		// Переопределение обязательности выгрузки Раздела 2.
		ОбязПлатСВ_КФХ.Обязательность = "О";
		Для каждого Эл Из ОбязПлатСВ_КФХ.Строки Цикл
			Если Эл.Код = "ОКТМО" Тогда
				ВывестиПоказательВXML(Эл, Ветка2.Данные[Эл.Ключ]);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ЗаполнитьДаннымиУзел(Ветка2.Данные, ПолучитьПодчиненныйЭлемент(ОбязПлатСВ_КФХ, "УплПерОПС"));
		ЗаполнитьДаннымиУзел(Ветка2.Данные, ПолучитьПодчиненныйЭлемент(ОбязПлатСВ_КФХ, "УплПерОМС"));
		// Многострочные данные (Приложение 1 к Разделу 2).
		РасчСВ_КФХ = ПолучитьПодчиненныйЭлемент(ОбязПлатСВ_КФХ, "РасчСВ_КФХ");
		СведЧлКФХ = ПолучитьПодчиненныйЭлемент(РасчСВ_КФХ, "СведЧлКФХ");
		ДанныеМнЧ21 = Ветка2.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы21М1];
		Для каждого СтрокаМнЧ21 Из ДанныеМнЧ21.Строки Цикл
			ЗаполнитьДаннымиУзел(СтрокаМнЧ21.Данные, СкопироватьУзел(РасчСВ_КФХ, СведЧлКФХ));
		КонецЦикла;
	КонецЕсли;
	
	// Раздел 3 (многостраничный раздел, на каждой странице есть 2 многострочные части).
	ПерсСвСтрахЛиц = ПолучитьПодчиненныйЭлемент(УзелРодитель, "ПерсСвСтрахЛиц");
	Если ЗаполненРаздел(ДеревоДанныхРаздел3, "Раздел3") Тогда
		
		Для каждого Ветка3 Из ДеревоДанныхРаздел3.Строки Цикл
			
			ЭкзПерсСвСтрахЛиц = СкопироватьУзел(УзелРодитель, ПерсСвСтрахЛиц, УзелРодитель.Строки.Количество() - 1);
			
			// Немногострочные данные.
			Для каждого Эл Из ЭкзПерсСвСтрахЛиц.Строки Цикл
				Если Эл.Строки.Количество() = 0 Тогда
					Если Эл.Код = "Период" Тогда
						ВывестиПоказательВXML(Эл, ПараметрыВыгрузки.Период);
					ИначеЕсли Эл.Код = "ОтчетГод" Тогда
						ВывестиПоказательВXML(Эл, ПараметрыВыгрузки.ОтчетГод);
					ИначеЕсли Эл.Код = "Номер" Тогда
						ВывестиПоказательВXML(Эл, ?(ЗначениеЗаполнено(Ветка3.Данные[Эл.Ключ]),
						Число(Ветка3.Данные[Эл.Ключ]), 0));
					ИначеЕсли Эл.Код = "Дата" Тогда
						ВывестиПоказательВXML(Эл, СтруктураДанныхТитульный.ДатаПодписи);
					Иначе
						ВывестиПоказательВXML(Эл, Ветка3.Данные[Эл.Ключ]);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			ДанФЛПолуч = ПолучитьПодчиненныйЭлемент(ЭкзПерсСвСтрахЛиц, "ДанФЛПолуч");
			Для каждого Эл Из ДанФЛПолуч.Строки Цикл
				Если Эл.Строки.Количество() = 0 Тогда
					Если Эл.Код = "СерНомДок" Тогда
						// Особая обработка при выгрузке стр. 150 ("Серия и номер").
						ВывестиПоказательВXML(Эл,
						Ветка3.Данные["П000310015001"] + " " + Ветка3.Данные["П000310015002"]);
					Иначе
						ВывестиПоказательВXML(Эл, Ветка3.Данные[Эл.Ключ]);
					КонецЕсли;
				Иначе
					ЗаполнитьДаннымиУзел(Ветка3.Данные, Эл);
				КонецЕсли;
			КонецЦикла;
			
			СвВыплСВОПС = ПолучитьПодчиненныйЭлемент(ЭкзПерсСвСтрахЛиц, "СвВыплСВОПС");
			// Немногострочные данные Подраздела 3.2.1.
			СвВыпл = ПолучитьПодчиненныйЭлемент(СвВыплСВОПС, "СвВыпл");
			Для каждого Эл Из СвВыпл.Строки Цикл
				Если Эл.Строки.Количество() = 0 Тогда
					ВывестиПоказательВXML(Эл, Ветка3.Данные[Эл.Ключ]);
				КонецЕсли;
			КонецЦикла;
			// Многострочные данные Подраздела 3.2.1.
			СвВыплМК = ПолучитьПодчиненныйЭлемент(СвВыпл, "СвВыплМК");
			ДанныеМнЧ321 = Ветка3.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы321М1];
			Для каждого СтрокаМнЧ321 Из ДанныеМнЧ321.Строки Цикл
				ЗаполнитьДаннымиУзел(СтрокаМнЧ321.Данные, СкопироватьУзел(СвВыпл, СвВыплМК, СвВыпл.Строки.Количество() - 1));
			КонецЦикла;
			// Немногострочные данные Подраздела 3.2.2.
			ВыплСВДоп = ПолучитьПодчиненныйЭлемент(СвВыплСВОПС, "ВыплСВДоп");
			Для каждого Эл Из ВыплСВДоп.Строки Цикл
				Если Эл.Строки.Количество() = 0 Тогда
					ВывестиПоказательВXML(Эл, Ветка3.Данные[Эл.Ключ]);
				КонецЕсли;
			КонецЦикла;
			// Многострочные данные Подраздела 3.2.2.
			ВыплСВДопМТ = ПолучитьПодчиненныйЭлемент(ВыплСВДоп, "ВыплСВДопМТ");
			ДанныеМнЧ322 = Ветка3.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы322М1];
			Для каждого СтрокаМнЧ322 Из ДанныеМнЧ322.Строки Цикл
				ЗаполнитьДаннымиУзел(СтрокаМнЧ322.Данные, СкопироватьУзел(ВыплСВДоп, ВыплСВДопМТ, ВыплСВДоп.Строки.Количество() - 1));
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВывестиПоказательВXML(Узел, ЗначениеПоказателя)
	
	МинШирина = Узел.МинРазмерность;
	МаксШирина = Узел.МаксРазмерность;
	
	Если Узел.Формат = "T" ИЛИ Узел.Формат = "Т" Тогда // учтем оба варианта: кириллицу и латиницу
		Если ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
			ЗначениеПоказателяСтр = Формат(ЗначениеПоказателя, "ДФ=dd.MM.yyyy");
		Иначе
			ЗначениеПоказателяСтр = СокрЛП(ЗначениеПоказателя);
		КонецЕсли;
		Узел.Значение = ?(МаксШирина < СтрДлина(ЗначениеПоказателяСтр), СокрЛП(Лев(ЗначениеПоказателяСтр, МаксШирина)), ЗначениеПоказателяСтр);
	ИначеЕсли Узел.Формат = "N" Тогда
		СтрокаФормата = "ЧРД=.;ЧН=0;ЧГ=;";
		Если Узел.МаксРазмерность <> 0 И Узел.МаксРазмерность <> 99999 Тогда
			СтрокаФормата = СтрокаФормата + "ЧЦ=" + Формат(Узел.МаксРазмерность, "ЧГ=") + ";";
		КонецЕсли;
		Если Узел.МинРазмерность <> 99999 Тогда
			СтрокаФормата = СтрокаФормата + "ЧДЦ=" + Формат(Узел.МинРазмерность, "ЧГ=") + ";";
		КонецЕсли;
		Узел.Значение = СокрЛП(Формат(ЗначениеПоказателя, СтрокаФормата));
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ОтсечьНезаполненныеНеобязательныеУзлы(Узел)
	
	КоличествоСтрок = Узел.Строки.Количество();
	Для Инд = 1 По КоличествоСтрок Цикл
		Стр = Узел.Строки.Получить(КоличествоСтрок - Инд);
		ОтсечьНезаполненныеНеобязательныеУзлы(Стр);
	КонецЦикла;
	
	Если ТипЗнч(Узел) <> Тип("ДеревоЗначений") Тогда
		Если (СтрНайти(Узел.Обязательность, "Н") <> 0 ИЛИ СтрНайти(Узел.Обязательность, "H") <> 0) И УзелПуст(Узел) Тогда // учтем оба варианта: кириллицу и латиницу
			РегламентированнаяОтчетность.УдалитьУзел(Узел);
		ИначеЕсли (СтрНайти(Узел.Обязательность, "М") <> 0 ИЛИ СтрНайти(Узел.Обязательность, "M") <> 0) // учтем оба варианта: кириллицу и латиницу
		И УзелПуст(Узел)
		И ?(СтрНайти(Узел.Обязательность, "О") <> 0 ИЛИ СтрНайти(Узел.Обязательность, "O") <> 0, РегламентированнаяОтчетность.ИмеютсяАналогичныеСоседниеУзлыКлюч(Узел), Истина) Тогда
			РегламентированнаяОтчетность.УдалитьУзел(Узел);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция УзелПуст(Узел)
	
	Для Каждого Стр из Узел.Строки Цикл
		Если НЕ УзелПуст(Стр) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если Узел.Формат = "S" Тогда
		Возврат Истина;
		
	ИначеЕсли Узел.Формат = "N" Тогда
		Возврат Узел.Значение = "0" ИЛИ (НЕ ЗначениеЗаполнено(Узел.Значение));
		
	Иначе
		
		Если Узел.Код = "УникНомер" Тогда
			// Специальная обработка уникального номера (в необязательном разделе
			// "Приложение 10 к Разделу 1"), которое задается автоматически.
			Возврат Истина;
		Иначе
			Возврат НЕ ЗначениеЗаполнено(Узел.Значение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ИдентификаторФайлаВыгрузки(ПараметрыВыгрузки, ПрефиксИмени)
	
	Если ПараметрыВыгрузки.ЭтоЮЛ Тогда
		ИННКПП = СокрЛП(ПараметрыВыгрузки.ИННОрг) + СокрЛП(ПараметрыВыгрузки.КПП);
	ИначеЕсли ПараметрыВыгрузки.ЭтоФизЛицоБезИНН Тогда
		ИННКПП = "000000000000";
	Иначе
		// Случай ПараметрыВыгрузки.ЭтоПБОЮЛ ИЛИ ПараметрыВыгрузки.ЭтоФизЛицоСИНН.
		ИННКПП = СокрЛП(ПараметрыВыгрузки.ИННОрг);
	КонецЕсли;
	
	ИдентификаторФайла = ПрефиксИмени
		+ "_" + ?(ЗначениеЗаполнено(ПараметрыВыгрузки.КодИФНСПосредника), ПараметрыВыгрузки.КодИФНСПосредника, ПараметрыВыгрузки.КодНО)
		+ "_" + ПараметрыВыгрузки.КодНО
		+ "_" + ИННКПП
		+ "_" + Формат(ТекущаяДатаСеанса(), "ДФ=ггггММдд")
		+ "_" + Строка(Новый УникальныйИдентификатор);
	
	Возврат ИдентификаторФайла;
	
КонецФункции

&НаСервере
Функция ВыгрузкаОтчета(ТекстВыгрузки, ПараметрыВыгрузки)
	
	КодировкаФайлаВыгрузки = "windows-1251";
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	ЗаписьТекста = Новый ЗаписьТекста(ИмяВременногоФайла, КодировкаФайлаВыгрузки);
	ЗаписьТекста.Записать(ТекстВыгрузки);
	ЗаписьТекста.Закрыть();
	ЗаписьТекста = Неопределено;
	
	ФайлВыгрузки = Новый ДвоичныеДанные(ИмяВременногоФайла);
	
	АдресВоВремХранилище = ПоместитьВоВременноеХранилище(ФайлВыгрузки, Новый УникальныйИдентификатор);
	
	УдалитьФайлы(ИмяВременногоФайла);
	
	РезультатВыгрузки = Новый Структура;
	РезультатВыгрузки.Вставить("ИмяФайлаВыгрузки", ПараметрыВыгрузки.ИдФайл + ".xml");
	РезультатВыгрузки.Вставить("АдресФайлаВыгрузки", АдресВоВремХранилище);
	РезультатВыгрузки.Вставить("ТипФайлаВыгрузки", "РасчетПоСтраховымВзносам");
	РезультатВыгрузки.Вставить("КодировкаФайлаВыгрузки", КодировкаФайлаВыгрузки);
	
	Возврат РезультатВыгрузки;
	
КонецФункции

&НаСервере
Функция ВыгрузитьДеревоВXML(ДеревоВыгрузки, ПараметрыВыгрузки)
	
	ПотокXML = РегламентированнаяОтчетность.СоздатьНовыйПотокXML("windows-1251"); // создаем новый поток для записи
	ЗаписатьУзелДереваВXML(ДеревоВыгрузки, ПотокXML, ПараметрыВыгрузки); // пишем дерево в поток
	ТекстДляЗаписи = ПотокXML.Закрыть(); // получаем текст XML
	Возврат ТекстДляЗаписи;
	
КонецФункции

&НаСервере
Функция ЗаписатьУзелДереваВXML(СтрокаДерева, ПотокXML, ПараметрыВыгрузки) Экспорт
	
	Если ТипЗнч(СтрокаДерева) = Тип("ДеревоЗначений") Тогда
		ПотокXML.ЗаписатьНачалоЭлемента("Файл");
		ПотокXML.ЗаписатьАтрибут("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
		Для каждого Стр Из СтрокаДерева.Строки Цикл
			ЗаписатьУзелДереваВXML(Стр, ПотокXML, ПараметрыВыгрузки);
		КонецЦикла;
		ПотокXML.ЗаписатьКонецЭлемента();
	Иначе
		Если СтрокаДерева.Тип = "А" ИЛИ СтрокаДерева.Тип = "A" Тогда
			ПотокXML.ЗаписатьАтрибут(СтрокаДерева.Код, Строка(СтрокаДерева.Значение));
		Иначе
			ПотокXML.ЗаписатьНачалоЭлемента(СтрокаДерева.Код);
			Для каждого Лист из СтрокаДерева.Строки Цикл
				ЗаписатьУзелДереваВXML(Лист, ПотокXML, ПараметрыВыгрузки);
			КонецЦикла;
			ПотокXML.ЗаписатьТекст(Строка(СтрокаДерева.Значение));
			ПотокXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ПроверитьВыгрузку(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВыгрузкуЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(
		ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузкуЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьВыгрузкуОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузкуОтчета()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВыгрузкуОтчетаЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузкуОтчетаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ФормаВыгрузкиРеглОтчета = ПолучитьФорму(
		"Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента", , ЭтаФорма);
	
	СпДокОсн = Новый СписокЗначений;
	СпДокОсн.Добавить(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	ФормаВыгрузкиРеглОтчета.Проверить(СпДокОсн);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПоказатели() Экспорт
	
	СформироватьСтруктуруПоказателей();
	ПараметрыВыгрузки = СформироватьСтруктуруПараметров();
	
	ДеревоВыгрузки = ИзвлечьСтруктуруXML("СхемаВыгрузки501");
	
	Если НЕ ПроверитьВозможностьВыгрузки(ПараметрыВыгрузки, ДеревоВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЗаполнитьДанными(ПараметрыВыгрузки, ДеревоВыгрузки);
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область УправлениеНастройкамиОтчета

&НаКлиенте
Процедура ОткрытьФормуНастроек(Команда)
	
	ОткрытьФормуВыбораСтраниц("ВыбратьДляНастройки");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСтраниц(ВариантВыбора)
	Перем ТекущийРазделОтчетаСокрНаим;
	Перем НомерСтраницыРазделаОтчета;
	
	// Запоминаем текущий раздел, установленный в дереве разделов отчета.
	Если НЕ Элементы.РазделыОтчета.ТекущиеДанные = Неопределено Тогда
		ТекущийРазделОтчетаСокрНаим = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
		НомерСтраницыРазделаОтчета  = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета;
	КонецЕсли;
	
	мПараметры = Новый Структура;
	мПараметры.Вставить("ПроверкаСоотношений", Ложь);
	мПараметры.Вставить("Автосохранение", Ложь);
	мПараметры.Вставить("ИмеетсяРеквизитДеревоВыбранныхСтраниц", Истина);
	мПараметры.Вставить("ИмяОтчета", Сред(Лев(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") - 1), 7));
	
	Если СтруктураРеквизитовФормы.ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417 Тогда
		мПараметры.Вставить("РазрешитьВстроеннуюПечать", Истина);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФлажокОтклАвтоРасчет", СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет);
	ПараметрыФормы.Вставить("мПечатьБезШтрихкодаРазрешена", СтруктураРеквизитовФормы.мПечатьБезШтрихкодаРазрешена);
	ПараметрыФормы.Вставить("мАвтоВыборКодов", СтруктураРеквизитовФормы.мАвтоВыборКодов);
	ПараметрыФормы.Вставить("мСчетчикСтраниц", СтруктураРеквизитовФормы.мСчетчикСтраниц);
	ПараметрыФормы.Вставить("мПараметры", мПараметры);
	
	ФормаНастройкиОтчета = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени("НастройкиОтчета", ПараметрыФормы, ЭтаФорма);

	мДеревоВыбранныхСтраниц.ПолучитьЭлементы().Очистить();

	КопироватьДанныеФормы(мДеревоСтраницОтчета, ФормаНастройкиОтчета.Дерево);
	
	ЗначениеАвторасчета = СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет;
	
	ДополнительныеПараметры = Новый Структура(
	"ЗначениеАвторасчета, НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим",
	ЗначениеАвторасчета, НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьФормуВыбораСтраницЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ФормаНастройкиОтчета.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
	ФормаНастройкиОтчета.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ФормаНастройкиОтчета.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСтраницЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	ЗначениеАвторасчета = ДополнительныеПараметры.ЗначениеАвторасчета;
	НомерСтраницыРазделаОтчета = ДополнительныеПараметры.НомерСтраницыРазделаОтчета;
	ТекущийРазделОтчетаСокрНаим = ДополнительныеПараметры.ТекущийРазделОтчетаСокрНаим;
	
	РегламентированнаяОтчетностьКлиентСервер.ПоказатьКнопкиПечати(ЭтаФорма);
	
	Модифицированность = Истина;
	
	флЗначенияИдентичны = Истина;
	
	Для Индекс = 0 По мДеревоСтраницОтчета.ПолучитьЭлементы().Количество() - 1 Цикл
		
		Если НЕ мДеревоСтраницОтчета.ПолучитьЭлементы()[Индекс].ПоказатьСтраницу = мДеревоВыбранныхСтраниц.ПолучитьЭлементы()[Индекс].ПоказатьСтраницу Тогда
			флЗначенияИдентичны = Ложь;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеАвторасчета <> СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет Тогда
		
		Если СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет = Ложь Тогда
			
			ДополнительныеПараметры = Новый Структура(
			"НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны",
			НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны);
			ОписаниеОповещения = Новый ОписаниеОповещения(
			"ВопросПерерасчетВсехРассчитываемыхПоказателейЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ТекстВопроса = НСтр("ru='Будет произведен перерасчет всех рассчитываемых показателей. Продолжить?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
			
		Иначе
			
			УстановитьДоступностьОбластей(ЭтаФорма, ТекущийРазделОтчетаСокрНаим);
			
			ДопПараметры = Новый Структура(
			"НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны",
			НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны);
			ПослеОткрытияФормыВыбораСтраниц(ДопПараметры);
			
		КонецЕсли;
		
	Иначе
		
		ДопПараметры = Новый Структура(
		"НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны",
		НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны);
		ПослеОткрытияФормыВыбораСтраниц(ДопПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПерерасчетВсехРассчитываемыхПоказателейЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	НомерСтраницыРазделаОтчета = ДополнительныеПараметры.НомерСтраницыРазделаОтчета;
	ТекущийРазделОтчетаСокрНаим = ДополнительныеПараметры.ТекущийРазделОтчетаСокрНаим;
	флЗначенияИдентичны = ДополнительныеПараметры.флЗначенияИдентичны;
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет = Истина;
		Возврат;
	КонецЕсли;
	
	РасчетНаСервере();
	
	УстановитьДоступностьОбластей(ЭтаФорма, ТекущийРазделОтчетаСокрНаим);
	
	ДопПараметры = Новый Структура(
	"НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны",
	НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны);
	ПослеОткрытияФормыВыбораСтраниц(ДопПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОткрытияФормыВыбораСтраниц(ДополнительныеПараметры)
	
	НомерСтраницыРазделаОтчета = ДополнительныеПараметры.НомерСтраницыРазделаОтчета;
	ТекущийРазделОтчетаСокрНаим = ДополнительныеПараметры.ТекущийРазделОтчетаСокрНаим;
	флЗначенияИдентичны = ДополнительныеПараметры.флЗначенияИдентичны;
	
	РегламентированнаяОтчетностьКлиент.ПоказатьСтраницыОтчетаНаКлиенте(ЭтаФорма);
	
	Если НЕ флЗначенияИдентичны Тогда
		
		СформироватьДеревоРазделовОтчетаНаСервере();
		
		Если НЕ ТекущийРазделОтчетаСокрНаим = Неопределено Тогда
			
			НайденнаяСтрока = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(
				РазделыОтчета.ПолучитьЭлементы(), "КолонкаРазделыОтчетаСокрНаим", ТекущийРазделОтчетаСокрНаим);
			
			Если НЕ НайденнаяСтрока = Неопределено И НЕ НомерСтраницыРазделаОтчета = Неопределено
				И НайденнаяСтрока.ПолучитьЭлементы().Количество() > 0 Тогда
				
				НайденнаяСтрока = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(
				НайденнаяСтрока.ПолучитьЭлементы(), "КолонкаНомерСтраницыРазделаОтчета", НомерСтраницыРазделаОтчета);
				
			КонецЕсли;
			
			Если НЕ НайденнаяСтрока = Неопределено Тогда
				
				Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтрока.ПолучитьИдентификатор();
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Очистка

#Область ОчисткаОтчета

&НаКлиенте
Процедура ОчиститьОтчет(Команда)
	
	РегламентированнаяОтчетностьКлиент.МеханизмыОчисткиРегламентированныхОтчетов(
		ЭтаФорма, "ОчиститьВесьОтчет");
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(ВыполняемоеОповещение = Неопределено) Экспорт
	
	РегламентированнаяОтчетностьКлиент.Очистить(ЭтаФорма, ВыполняемоеОповещение);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНаСервере() Экспорт
	
	ТабличныйДокумент.Очистить();
	
	ИнициализироватьМногоуровневыеРазделы();
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	ОбновитьДеревоРазделовВФормеОтчета(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Очистить();
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_1и1_2" Тогда
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
	ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_3_1" тогда
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(2);
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
	ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_3_2" тогда
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(3);
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
	ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_4" тогда
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(4);
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
	КонецЕсли;
	
	ВывестиДанныеВТабличныйДокумент(СтруктураРеквизитовФормы.НаимТекущегоРаздела,
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоРазделовВФормеОтчета(ИмяРаздела)
	
	Если НЕ ИмяРаздела = Неопределено Тогда
		
		// Пытаемся найти ранее запомненный раздел.
		НайденнаяСтрока = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(
			РазделыОтчета.ПолучитьЭлементы(), "КолонкаРазделыОтчетаСокрНаим", ИмяРаздела);
		
		// В случае успешного поиска, устанавливаем курсор на найденный раздел.
		Если НЕ НайденнаяСтрока = Неопределено Тогда
			Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОчисткаТекущейСтраницы

&НаКлиенте
Процедура ОчиститьТекущуюСтраницу(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяРаздела", СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	ДополнительныеПараметры.Вставить("ВыполняемоеОповещение", Новый ОписаниеОповещения("ОчиститьТекущуюСтраницуЗавершение", ЭтотОбъект));
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		СтруктураРеквизитовФормы.Вставить("КодПоМестуДоОчистки",
		СокрЛП(ТабличныйДокумент.Области.ПоМесту.Значение));
	КонецЕсли;
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Внимание! Будет очищена текущая страница.%1Продолжить?'"), Символы.ПС);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВопросОчиститьТекущуюСтраницуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОчиститьТекущуюСтраницуЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	ИмяРаздела = ДополнительныеПараметры.ИмяРаздела;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ОчисткаРегламентированногоОтчетаНаСервере(ИмяРаздела);
		
		Если ВыполняемоеОповещение <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчисткаРегламентированногоОтчетаНаСервере(ИмяСтраницы) Экспорт
	
	Если ИмяСтраницы = "Титульный" Тогда
		
		Для каждого Обл Из ТабличныйДокумент.Области Цикл
			Если СтрЧислоВхождений(Тип(Обл), "Рисунок") = 0
				И Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И Обл.СодержитЗначение = Истина
				И НЕ Обл.Защита Тогда
				Обл.Очистить();
			КонецЕсли;
		КонецЦикла;
		
		Обл = ТабличныйДокумент.Области.Найти("ДатаПодписи");
		Если ЗначениеЗаполнено(Обл.Значение) Тогда
			ДатаПодписи = Лев(СтрЗаменить(Формат(Обл.Значение, "ДФ = ""дд.ММ.гггг 'г.'"""), ".", ""), 8);
		Иначе
			ДатаПодписи = "        ";
		КонецЕсли;
		
	Иначе
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(Отчеты[
			Сред(Лев(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") - 1), 7)].ПолучитьМакет(
			Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + ИмяСтраницы));
		
		
		ВывестиДанныеВТабличныйДокументНаСервере(ИмяСтраницы,
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела);
		
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТекущуюСтраницуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		НомерКорректировки = 0;
		ТабличныйДокумент.Области.НомерКорректировки.Значение = "0";
		СтруктураРеквизитовФормы.ВидДокумента = ?(НомерКорректировки = 0, 0, 1);
		Если СтруктураРеквизитовФормы.Свойство("КодПоМестуДоОчистки") Тогда
			ТабличныйДокумент.Области.ПоМесту.Значение = СтруктураРеквизитовФормы.КодПоМестуДоОчистки;
			СтруктураРеквизитовФормы.Удалить("КодПоМестуДоОчистки");
		КонецЕсли;
	Иначе
		Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1" Тогда
			СтруктПарам = Новый Структура;
			СтруктПарам.Вставить("КодТарифа", ТабличныйДокумент.Область("П000110000101").Значение);
			СтруктПарам.Вставить("НомерСтраницы",
			Элементы.РазделыОтчета.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
			Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчета
			= ПредставлениеСтраницыПриложения1КРазделу1(СтруктПарам);
		ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил10" Тогда
			// Особая обработка текста в строках 020 и 110 Приложения 10 к Разделу 1.
			ТабличныйДокумент.Области.П00110М102001_1.Значение = "001";
			ТабличныйДокумент.Области.П00110М211001_1_1.Значение = "001";
		ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел3" Тогда
			СтруктПарам = Новый Структура;
			СтруктПарам.Вставить("Фам", ТабличныйДокумент.Область("П000310008001").Значение);
			СтруктПарам.Вставить("Имя", ТабличныйДокумент.Область("П000310009001").Значение);
			СтруктПарам.Вставить("Отч", ТабличныйДокумент.Область("П000310010001").Значение);
			СтруктПарам.Вставить("ДатаРожд", ТабличныйДокумент.Область("П000310011001").Значение);
			СтруктПарам.Вставить("НомерСтраницы",
			Элементы.РазделыОтчета.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
			Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчета
			= ПредставлениеСтраницыРаздела3(СтруктПарам);
		КонецЕсли;
		
		СпрятатьСсылкуУдалитьСтраницу();
		Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Область(1, 1, 1, 1);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Печать

&НаКлиенте
Процедура ПоказатьСДвухмернымШтрихкодомPDF417(Команда)
	
	РегламентированнаяОтчетностьКлиент.ВывестиМашиночитаемуюФорму(ЭтаФорма, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьБланк(Команда)
	
	Отказ = Ложь;
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Команда", Команда);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоказатьБланкЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередПечатьюРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьБланкЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Команда = ДополнительныеПараметры.Команда;
	
	Печать(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(ВидПечати, НеИзФормыОтчета = Ложь) Экспорт
	
	Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
		"ru='%1. Формируется печатная форма...'"), ЭтаФорма.Заголовок), , , БиблиотекаКартинок.Печать);
	
	Если ВидПечати = "ПоказатьРеестр" Тогда
		ЗаголовокФормы = "Реестр сведений о сумме выплат и вознаграждений за " + ПредставлениеПериода(
		НачалоДня(НачалоМесяца(ДобавитьМесяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета, - 2))),
		КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета), "ФП = Истина")
		+ " (" + СтруктураРеквизитовФормы.НаимОрганизации + ")";
		ДополнительныеПараметры = Новый Структура("ЗаголовокФормы", ЗаголовокФормы);
		Если НЕ ПечатьРеестраНаСервере(ВидПечати, ЗаголовокФормы) Тогда
			Возврат;
		КонецЕсли;
	Иначе
		ДополнительныеПараметры = Неопределено;
		Если НЕ ПечатьНаСервере(ВидПечати) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(
	ЭтаФорма, ВидПечати, , СтруктураРеквизитовФормы.СписокПечатаемыхЛистов, ДополнительныеПараметры);
	
	СтруктураРеквизитовФормы.мРежимПечати = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ПечатьРеестраНаСервере(ВидПечати, ЗаголовокПечатнойФормы)
	
	Если НЕ РегламентированнаяОтчетность.ПринтерДоступен() Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Перед формированием печатных форм необходимо определить в системе принтер и задать его в качестве используемого по умолчанию!'");
		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.мПечатныеФормы.Очистить();
	СтруктураРеквизитовФормы.мРежимПечати = Истина;
	
	СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	сохрТаблДок = ТабличныйДокумент.ПолучитьОбласть();
	
	сохрНомераСтрокМногоуровнегоРаздела = СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела;
	
	СтрПоля = "ПолеСверху, ПолеСправа, ПолеСнизу, ПолеСлева";
	ВремПоля = Новый Структура(СтрПоля);
	
	ЗаполнитьЗначенияСвойств(ВремПоля, ТабличныйДокумент, СтрПоля);
	
	// Начало общей части формирования реестра.
	//
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("НаименованиеЛиста",  "Реестр");
	СтруктураПараметров.Вставить("ОриентацияЛиста",    "Ландшафт");
	СтруктураПараметров.Вставить("ИмяСтраницы",        "Реестр");
	Структурапараметров.Вставить("ИмяОбластиТаблПоля", "ТабличныйДокумент");
	СтруктураПараметров.Вставить("ВидПечати",          "ПоказатьБланк");
	
	ПредставленияМесяцев = Новый Структура;
	
	КонПериода = КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	НачПериода = НачалоДня(НачалоМесяца(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета));
	ПредставленияМесяцев.Вставить("Мес3", ПредставлениеПериода(НачПериода, КонПериода, "ФП = Истина"));
	
	КонПериода = КонецДня(КонецМесяца(ДобавитьМесяц(КонПериода, -1)));
	НачПериода = НачалоДня(НачалоМесяца(КонПериода));
	ПредставленияМесяцев.Вставить("Мес2", ПредставлениеПериода(НачПериода, КонПериода, "ФП = Истина"));
	
	КонПериода = КонецДня(КонецМесяца(ДобавитьМесяц(КонПериода, -1)));
	НачПериода = НачалоДня(НачалоМесяца(КонПериода));
	ПредставленияМесяцев.Вставить("Мес1", ПредставлениеПериода(НачПериода, КонПериода, "ФП = Истина"));
	
	ПоследнееЧисло = Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	ПервоеЧисло = ПоследнееЧисло - 2;
	Структ = Новый Структура;
	Структ.Вставить("ПервоеЧисло", ПервоеЧисло);
	Структ.Вставить("ПоследнееЧисло", ПоследнееЧисло);
	Структ.Вставить("ДлинаСЛидирующимиНулями", 2);
	ВозможныеМесяцы = МассивЧиселЗаданныйИнтервалом(Структ);
	
	ИмяМакета = "ПечатныйБланк2017Кв1_Реестр";
	
	Макет = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(ИмяМакета);
	
	// Формирование части "Реестр сведений о сумме выплат и вознаграждений".
	//
	ПечФорма = Макет.Получитьобласть("ОсновнаяЧасть1");
	СтрокаПФ = Макет.Получитьобласть("Шапка");
	СтрокаПФ.Параметры.Заполнить(ПредставленияМесяцев);
	СтрокаПФ.Параметры.ЗаголовокПечатнойФормы = ЗаголовокПечатнойФормы;
	ПечФорма.Вывести(СтрокаПФ);
	ПечФорма.Вывести(Макет.Получитьобласть("ОсновнаяЧасть2"));
	
	ИндОсновныхЧастей = 2;
	
	ДеревоДанных = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел3"]);
	
	ТЗ = Новый ТаблицаЗначений;
	
	КЧ = Новый КвалификаторыЧисла(17, 2);
	КС = Новый КвалификаторыСтроки(4);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
	Массив.Очистить();
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , , КЧ);
	
	ТЗ.Колонки.Добавить("КодКатегорииЗЛ", ОписаниеТиповС);
	ТЗ.Колонки.Добавить("Мес1_СуммаВыпл", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес1_БазаВсего", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес1_БазаГПДог", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес1_СуммаСтВз", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес2_СуммаВыпл", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес2_БазаВсего", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес2_БазаГПДог", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес2_СуммаСтВз", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес3_СуммаВыпл", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес3_БазаВсего", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес3_БазаГПДог", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес3_СуммаСтВз", ОписаниеТиповЧ);
	
	ТЗ_ИтогПоРазделу = ТЗ.Скопировать();
	
	ИндСтрокаВыплат = 0;
	
	РазмерПачки = 1000;
	
	Для каждого Ветка Из ДеревоДанных.Строки Цикл
		
		ТЗ.Очистить();
		
		ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы321М1];
		
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			
			ДанныеСтрокиМнЧ = СтрокаМнЧ.Данные;
			
			Мес = СокрЛП(ДанныеСтрокиМнЧ["П00321М119001"]);
			
			ИндМес = ВозможныеМесяцы.Найти(Мес);
			
			Если ИндМес <> Неопределено Тогда
				
				НовСтрТЗ = ТЗ.Добавить();
				НовСтрТЗ.КодКатегорииЗЛ = ДанныеСтрокиМнЧ["П00321М120001"];
				
				Инд_ = Формат(ИндМес + 1, "ЧГ=") + "_";
				
				НовСтрТЗ["Мес" + Инд_ + "СуммаВыпл"] = ДанныеСтрокиМнЧ["П00321М121001"];
				НовСтрТЗ["Мес" + Инд_ + "БазаВсего"] = ДанныеСтрокиМнЧ["П00321М122001"];
				НовСтрТЗ["Мес" + Инд_ + "БазаГПДог"] = ДанныеСтрокиМнЧ["П00321М123001"];
				НовСтрТЗ["Мес" + Инд_ + "СуммаСтВз"] = ДанныеСтрокиМнЧ["П00321М124001"];
				
				НовСтрТЗ_ИтогПоРазделу = ТЗ_ИтогПоРазделу.Добавить();
				
				НовСтрТЗ_ИтогПоРазделу["Мес" + Инд_ + "СуммаВыпл"] = ДанныеСтрокиМнЧ["П00321М121001"];
				НовСтрТЗ_ИтогПоРазделу["Мес" + Инд_ + "БазаВсего"] = ДанныеСтрокиМнЧ["П00321М122001"];
				НовСтрТЗ_ИтогПоРазделу["Мес" + Инд_ + "БазаГПДог"] = ДанныеСтрокиМнЧ["П00321М123001"];
				НовСтрТЗ_ИтогПоРазделу["Мес" + Инд_ + "СуммаСтВз"] = ДанныеСтрокиМнЧ["П00321М124001"];
				
			КонецЕсли;
			
		КонецЦикла;
		
		ТЗ.Свернуть("КодКатегорииЗЛ", "Мес1_СуммаВыпл,Мес1_БазаВсего,Мес1_БазаГПДог,Мес1_СуммаСтВз,Мес2_СуммаВыпл,Мес2_БазаВсего,Мес2_БазаГПДог,Мес2_СуммаСтВз,Мес3_СуммаВыпл,Мес3_БазаВсего,Мес3_БазаГПДог,Мес3_СуммаСтВз");
		ТЗ.Сортировать("КодКатегорииЗЛ");
		
		Если ТЗ.Количество() > 0 Тогда
			
			ПредстЗЛ = "";
			Фам = СокрЛП(Ветка.Данные["П000310008001"]);
			Имя = СокрЛП(Ветка.Данные["П000310009001"]);
			Отч = СокрЛП(Ветка.Данные["П000310010001"]);
			Если ЗначениеЗаполнено(Фам) Тогда
				ПредстЗЛ = Фам;
			КонецЕсли;
			Если ЗначениеЗаполнено(Имя) Тогда
				ПредстЗЛ = ?(ЗначениеЗаполнено(ПредстЗЛ), ПредстЗЛ + " " + Имя, Имя);
			КонецЕсли;
			Если ЗначениеЗаполнено(Отч) Тогда
				ПредстЗЛ = ?(ЗначениеЗаполнено(ПредстЗЛ), ПредстЗЛ + " " + Отч, Отч);
			КонецЕсли;
			
			СНИЛС = СокрЛП(Ветка.Данные["П000310007001"]);
			
			ИмяСтрокиВыплат = ?(ТЗ.Количество() = 1, "СтрокаВыплат", "СтрокаВыплатКурсив");
			
			ПФ = Макет.Получитьобласть(ИмяСтрокиВыплат);
			
			ПФ.Параметры.ФИО = ПредстЗЛ;
			ПФ.Параметры.СНИЛС = СНИЛС;
			ПФ.Параметры.Заполнить(ТЗ[0]);
			
			ИндСтрокаВыплат = ИндСтрокаВыплат + 1;
			
			ПФ.Параметры.НомПП = Формат(ИндСтрокаВыплат, "ЧГ=");
			
			ПФ.Область(ИмяСтрокиВыплат).Имя = "СтрокаВыплат" + Формат(ИндСтрокаВыплат, "ЧГ=");
			
			Для ИндСтрТЗ = 1 По ТЗ.Количество() - 1 Цикл
				
				СтрокаПФ = Макет.Получитьобласть(ИмяСтрокиВыплат);
				
				СтрокаПФ.Параметры.Заполнить(ТЗ[ИндСтрТЗ]);
				
				ИндСтрокаВыплат = ИндСтрокаВыплат + 1;
				
				СтрокаПФ.Область(ИмяСтрокиВыплат).Имя = "СтрокаВыплат" + Формат(ИндСтрокаВыплат, "ЧГ=");
				
				ПФ.Вывести(СтрокаПФ);
				
				Если ИндСтрТЗ = ТЗ.Количество() - 1 Тогда
					
					СтрокаПФ = Макет.Получитьобласть("СтрокаВыплатПодитог");
					ТЗ_ = ТЗ.Скопировать();
					ТЗ_.Свернуть("", "Мес1_СуммаВыпл,Мес1_БазаВсего,Мес1_БазаГПДог,Мес1_СуммаСтВз,Мес2_СуммаВыпл,Мес2_БазаВсего,Мес2_БазаГПДог,Мес2_СуммаСтВз,Мес3_СуммаВыпл,Мес3_БазаВсего,Мес3_БазаГПДог,Мес3_СуммаСтВз");
					СтрокаПФ.Параметры.Заполнить(ТЗ_[0]);
					
					ПФ.Вывести(СтрокаПФ);
					
					ОблНиз  = ПФ.Область("СтрокаВыплатПодитог").Низ;
					ОблВерх = ОблНиз - ТЗ.Количество();
					
					Для ОблКоордПоВертикали = ОблВерх По ОблНиз Цикл
						Обл = ПФ.Область(ОблКоордПоВертикали, , ОблКоордПоВертикали, );
						Обл.Имя = "";
					КонецЦикла;
					НовыйИндСтрокаВыплат = ИндСтрокаВыплат - (ТЗ.Количество() - 1);
					Обл = ПФ.Область(ОблВерх, , ОблНиз, );
					Обл.Имя = "СтрокаВыплат" + Формат(НовыйИндСтрокаВыплат, "ЧГ=");
					
					ИндСтрокаВыплат = НовыйИндСтрокаВыплат;
					
					Обл = ПФ.Область(ОблВерх, 5, ОблВерх, 17);
					Обл.ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
					
					Обл = ПФ.Область(ОблВерх, 2, ОблНиз, 2);
					Обл.Объединить();
					
					Обл = ПФ.Область(ОблВерх, 3, ОблНиз, 3);
					Обл.Объединить();
					
					Обл = ПФ.Область(ОблВерх, 4, ОблНиз, 4);
					Обл.Объединить();
					
				КонецЕсли;
				
			КонецЦикла;
			
			ПечФорма.Вывести(ПФ);
			
		КонецЕсли;
		
		Если ИндСтрокаВыплат > 0
			И (ИндСтрокаВыплат / РазмерПачки = Цел(ИндСтрокаВыплат / РазмерПачки))
			И (ИндСтрокаВыплат <> ДеревоДанных.Строки.Количество()) Тогда
			
			ПечФорма.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			ПечФорма.Автомасштаб = Истина;
			
			ТабличныйДокумент.ПолеСверху = 5;
			ТабличныйДокумент.ПолеСправа = 5;
			ТабличныйДокумент.ПолеСнизу  = 5;
			ТабличныйДокумент.ПолеСлева  = 5;
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(ПечФорма);
			
			РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая(
			ЭтаФорма.Заголовок, СтруктураПараметров, ТабличныйДокумент, СтруктураРеквизитовФормы.мПечатныеФормы);
			
			ПечФорма = Макет.Получитьобласть("ОсновнаяЧасть1");
			ПечФорма.Вывести(Макет.Получитьобласть("ОсновнаяЧасть2"));
			
			ИндОсновныхЧастей = 2;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПФ = Макет.Получитьобласть("СтрокаИтогоПоРазделу3");
	ТЗ_ИтогПоРазделу.Свернуть("", "Мес1_СуммаВыпл,Мес1_БазаВсего,Мес1_БазаГПДог,Мес1_СуммаСтВз,Мес2_СуммаВыпл,Мес2_БазаВсего,Мес2_БазаГПДог,Мес2_СуммаСтВз,Мес3_СуммаВыпл,Мес3_БазаВсего,Мес3_БазаГПДог,Мес3_СуммаСтВз");
	Если ТЗ_ИтогПоРазделу.Количество() > 0 Тогда
		ПФ.Параметры.Заполнить(ТЗ_ИтогПоРазделу[0]);
	КонецЕсли;
	
	ДеревоДанных = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил1"]);
	
	ТЗ_ИтогПоРазделу.Очистить();
	
	Для каждого Ветка Из ДеревоДанных.Строки Цикл
		
		ДанныеПодр1_1и1_2 = Ветка.Строки[0].Строки[0].Данные;
		
		НовСтрТЗ_ИтогПоРазделу = ТЗ_ИтогПоРазделу.Добавить();
		
		НовСтрТЗ_ИтогПоРазделу["Мес1_СуммаВыпл"] = ДанныеПодр1_1и1_2["П011120003003"];
		НовСтрТЗ_ИтогПоРазделу["Мес2_СуммаВыпл"] = ДанныеПодр1_1и1_2["П011120003004"];
		НовСтрТЗ_ИтогПоРазделу["Мес3_СуммаВыпл"] = ДанныеПодр1_1и1_2["П011120003005"];
		
		НовСтрТЗ_ИтогПоРазделу["Мес1_БазаВсего"] = ДанныеПодр1_1и1_2["П011110005003"] - ДанныеПодр1_1и1_2["П011110005103"];
		НовСтрТЗ_ИтогПоРазделу["Мес2_БазаВсего"] = ДанныеПодр1_1и1_2["П011110005004"] - ДанныеПодр1_1и1_2["П011110005104"];
		НовСтрТЗ_ИтогПоРазделу["Мес3_БазаВсего"] = ДанныеПодр1_1и1_2["П011110005005"] - ДанныеПодр1_1и1_2["П011110005105"];
		
		НовСтрТЗ_ИтогПоРазделу["Мес1_СуммаСтВз"] = ДанныеПодр1_1и1_2["П011110006103"];
		НовСтрТЗ_ИтогПоРазделу["Мес2_СуммаСтВз"] = ДанныеПодр1_1и1_2["П011110006104"];
		НовСтрТЗ_ИтогПоРазделу["Мес3_СуммаСтВз"] = ДанныеПодр1_1и1_2["П011110006105"];
		
	КонецЦикла;
	
	СтрокаПФ = Макет.Получитьобласть("СтрокаИтогоПоРазделу1");
	ТЗ_ИтогПоРазделу.Свернуть("", "Мес1_СуммаВыпл,Мес1_БазаВсего,Мес1_БазаГПДог,Мес1_СуммаСтВз,Мес2_СуммаВыпл,Мес2_БазаВсего,Мес2_БазаГПДог,Мес2_СуммаСтВз,Мес3_СуммаВыпл,Мес3_БазаВсего,Мес3_БазаГПДог,Мес3_СуммаСтВз");
	СтрокаПФ.Параметры.Заполнить(ТЗ_ИтогПоРазделу[0]);
	ПФ.Вывести(СтрокаПФ);
	
	Если НЕ ПечФорма.ПроверитьВывод(ПФ) Тогда
		
		ПечФорма.ВывестиГоризонтальныйРазделительСтраниц();
		
		СтрокаПФ = Макет.Получитьобласть("ОсновнаяЧасть1");
		Обл = СтрокаПФ.Область("ОсновнаяЧасть1");
		ИндОсновныхЧастей = ИндОсновныхЧастей + 1;
		Обл.Имя = "ОсновнаяЧасть" + Формат(ИндОсновныхЧастей, "ЧГ=");
		ПечФорма.Вывести(СтрокаПФ);
		
		СтрокаПФ = Макет.Получитьобласть("ОсновнаяЧасть2");
		Обл = СтрокаПФ.Область("ОсновнаяЧасть2");
		ИндОсновныхЧастей = ИндОсновныхЧастей + 1;
		Обл.Имя = "ОсновнаяЧасть" + Формат(ИндОсновныхЧастей, "ЧГ=");
		ПечФорма.Вывести(СтрокаПФ);
		
	КонецЕсли;
	
	ПечФорма.Вывести(ПФ);
	
	ПечФорма.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ПечФорма.Автомасштаб = Истина;
	
	ТабличныйДокумент.ПолеСверху = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.ПолеСнизу  = 5;
	ТабличныйДокумент.ПолеСлева  = 5;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(ПечФорма);
	
	РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая(
	ЭтаФорма.Заголовок, СтруктураПараметров, ТабличныйДокумент, СтруктураРеквизитовФормы.мПечатныеФормы);
	
	// Формирование части "Реестр сведений о сумме выплат и вознаграждений по дополнительному тарифу".
	//
	ПечФорма = Макет.Получитьобласть("ОсновнаяЧасть1");
	СтрокаПФ = Макет.Получитьобласть("ШапкаДопТариф");
	СтрокаПФ.Параметры.Заполнить(ПредставленияМесяцев);
	СтрокаПФ.Параметры.ЗаголовокПечатнойФормы = СтрЗаменить(ЗаголовокПечатнойФормы,
	"Реестр сведений о сумме выплат и вознаграждений",
	"Реестр сведений о сумме выплат и вознаграждений по дополнительному тарифу");
	ПечФорма.Вывести(СтрокаПФ);
	ПечФорма.Вывести(Макет.Получитьобласть("ОсновнаяЧасть2ДопТариф"));
	
	ИндОсновныхЧастей = 2;
	
	ДеревоДанных = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел3"]);
	
	ТЗ = Новый ТаблицаЗначений;
	
	КЧ = Новый КвалификаторыЧисла(17, 2);
	КС = Новый КвалификаторыСтроки(4);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
	Массив.Очистить();
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , , КЧ);
	
	ТЗ.Колонки.Добавить("КодТарифа",      ОписаниеТиповС);
	ТЗ.Колонки.Добавить("Мес1_СуммаВыпл", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес1_СуммаСтВз", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес2_СуммаВыпл", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес2_СуммаСтВз", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес3_СуммаВыпл", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес3_СуммаСтВз", ОписаниеТиповЧ);
	
	ТЗ_ИтогПоРазделу = ТЗ.Скопировать();
	
	ИндСтрокаВыплат = 0;
	
	РазмерПачки = 1000;
	
	Для каждого Ветка Из ДеревоДанных.Строки Цикл
		
		ТЗ.Очистить();
		
		ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы322М1];
		
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			
			ДанныеСтрокиМнЧ = СтрокаМнЧ.Данные;
			
			Мес = СокрЛП(ДанныеСтрокиМнЧ["П00322М126001"]);
			
			ИндМес = ВозможныеМесяцы.Найти(Мес);
			
			Если ИндМес <> Неопределено Тогда
				
				НовСтрТЗ = ТЗ.Добавить();
				НовСтрТЗ.КодТарифа = ДанныеСтрокиМнЧ["П00322М127001"];
				
				Инд_ = Формат(ИндМес + 1, "ЧГ=") + "_";
				
				НовСтрТЗ["Мес" + Инд_ + "СуммаВыпл"] = ДанныеСтрокиМнЧ["П00322М128001"];
				НовСтрТЗ["Мес" + Инд_ + "СуммаСтВз"] = ДанныеСтрокиМнЧ["П00322М129001"];
				
				НовСтрТЗ_ИтогПоРазделу = ТЗ_ИтогПоРазделу.Добавить();
				
				НовСтрТЗ_ИтогПоРазделу["Мес" + Инд_ + "СуммаВыпл"] = ДанныеСтрокиМнЧ["П00322М128001"];
				НовСтрТЗ_ИтогПоРазделу["Мес" + Инд_ + "СуммаСтВз"] = ДанныеСтрокиМнЧ["П00322М129001"];
				
			КонецЕсли;
			
		КонецЦикла;
		
		ТЗ.Свернуть("КодТарифа", "Мес1_СуммаВыпл,Мес1_СуммаСтВз,Мес2_СуммаВыпл,Мес2_СуммаСтВз,Мес3_СуммаВыпл,Мес3_СуммаСтВз");
		ТЗ.Сортировать("КодТарифа");
		
		Если ТЗ.Количество() > 0 Тогда
			
			ПредстЗЛ = "";
			Фам = СокрЛП(Ветка.Данные["П000310008001"]);
			Имя = СокрЛП(Ветка.Данные["П000310009001"]);
			Отч = СокрЛП(Ветка.Данные["П000310010001"]);
			Если ЗначениеЗаполнено(Фам) Тогда
				ПредстЗЛ = Фам;
			КонецЕсли;
			Если ЗначениеЗаполнено(Имя) Тогда
				ПредстЗЛ = ?(ЗначениеЗаполнено(ПредстЗЛ), ПредстЗЛ + " " + Имя, Имя);
			КонецЕсли;
			Если ЗначениеЗаполнено(Отч) Тогда
				ПредстЗЛ = ?(ЗначениеЗаполнено(ПредстЗЛ), ПредстЗЛ + " " + Отч, Отч);
			КонецЕсли;
			
			СНИЛС = СокрЛП(Ветка.Данные["П000310007001"]);
			
			ИмяСтрокиВыплат = ?(ТЗ.Количество() = 1, "СтрокаВыплатДопТариф", "СтрокаВыплатДопТарифКурсив");
			
			ПФ = Макет.Получитьобласть(ИмяСтрокиВыплат);
			
			ПФ.Параметры.ФИО = ПредстЗЛ;
			ПФ.Параметры.СНИЛС = СНИЛС;
			ПФ.Параметры.Заполнить(ТЗ[0]);
			
			ИндСтрокаВыплат = ИндСтрокаВыплат + 1;
			
			ПФ.Параметры.НомПП = Формат(ИндСтрокаВыплат, "ЧГ=");
			
			ПФ.Область(ИмяСтрокиВыплат).Имя = "СтрокаВыплатДопТариф" + Формат(ИндСтрокаВыплат, "ЧГ=");
			
			Для ИндСтрТЗ = 1 По ТЗ.Количество() - 1 Цикл
				
				СтрокаПФ = Макет.Получитьобласть(ИмяСтрокиВыплат);
				
				СтрокаПФ.Параметры.Заполнить(ТЗ[ИндСтрТЗ]);
				
				ИндСтрокаВыплат = ИндСтрокаВыплат + 1;
				
				СтрокаПФ.Область(ИмяСтрокиВыплат).Имя = "СтрокаВыплатДопТариф" + Формат(ИндСтрокаВыплат, "ЧГ=");
				
				ПФ.Вывести(СтрокаПФ);
				
				Если ИндСтрТЗ = ТЗ.Количество() - 1 Тогда
					
					СтрокаПФ = Макет.Получитьобласть("СтрокаВыплатДопТарифПодитог");
					ТЗ_ = ТЗ.Скопировать();
					ТЗ_.Свернуть("", "Мес1_СуммаВыпл,Мес1_СуммаСтВз,Мес2_СуммаВыпл,Мес2_СуммаСтВз,Мес3_СуммаВыпл,Мес3_СуммаСтВз");
					СтрокаПФ.Параметры.Заполнить(ТЗ_[0]);
					
					ПФ.Вывести(СтрокаПФ);
					
					ОблНиз  = ПФ.Область("СтрокаВыплатДопТарифПодитог").Низ;
					ОблВерх = ОблНиз - ТЗ.Количество();
					
					Для ОблКоордПоВертикали = ОблВерх По ОблНиз Цикл
						Обл = ПФ.Область(ОблКоордПоВертикали, , ОблКоордПоВертикали, );
						Обл.Имя = "";
					КонецЦикла;
					НовыйИндСтрокаВыплат = ИндСтрокаВыплат - (ТЗ.Количество() - 1);
					Обл = ПФ.Область(ОблВерх, , ОблНиз, );
					Обл.Имя = "СтрокаВыплатДопТариф" + Формат(НовыйИндСтрокаВыплат, "ЧГ=");
					
					ИндСтрокаВыплат = НовыйИндСтрокаВыплат;
					
					Обл = ПФ.Область(ОблВерх, 5, ОблВерх, 11);
					Обл.ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
					
					Обл = ПФ.Область(ОблВерх, 2, ОблНиз, 2);
					Обл.Объединить();
					
					Обл = ПФ.Область(ОблВерх, 3, ОблНиз, 3);
					Обл.Объединить();
					
					Обл = ПФ.Область(ОблВерх, 4, ОблНиз, 4);
					Обл.Объединить();
					
				КонецЕсли;
				
			КонецЦикла;
			
			ПечФорма.Вывести(ПФ);
			
		КонецЕсли;
		
		Если ИндСтрокаВыплат > 0
			И (ИндСтрокаВыплат / РазмерПачки = Цел(ИндСтрокаВыплат / РазмерПачки))
			И (ИндСтрокаВыплат <> ДеревоДанных.Строки.Количество()) Тогда
			
			ПечФорма.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			ПечФорма.Автомасштаб = Истина;
			
			ТабличныйДокумент.ПолеСверху = 5;
			ТабличныйДокумент.ПолеСправа = 5;
			ТабличныйДокумент.ПолеСнизу  = 5;
			ТабличныйДокумент.ПолеСлева  = 5;
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(ПечФорма);
			
			РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая(
			ЭтаФорма.Заголовок, СтруктураПараметров, ТабличныйДокумент, СтруктураРеквизитовФормы.мПечатныеФормы);
			
			ПечФорма = Макет.Получитьобласть("ОсновнаяЧасть1");
			ПечФорма.Вывести(Макет.Получитьобласть("ОсновнаяЧасть2ДопТариф"));
			
			ИндОсновныхЧастей = 2;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПФ = Макет.Получитьобласть("СтрокаИтогоПоРазделу3ДопТариф");
	ТЗ_ИтогПоРазделу.Свернуть("", "Мес1_СуммаВыпл,Мес1_СуммаСтВз,Мес2_СуммаВыпл,Мес2_СуммаСтВз,Мес3_СуммаВыпл,Мес3_СуммаСтВз");
	Если ТЗ_ИтогПоРазделу.Количество() > 0 Тогда
		ПФ.Параметры.Заполнить(ТЗ_ИтогПоРазделу[0]);
	КонецЕсли;
	
	ДеревоДанных = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил1"]);
	
	ТЗ_ИтогПоРазделу.Очистить();
	
	Для каждого Ветка Из ДеревоДанных.Строки Цикл
		
		Мес1_СуммаВыпл = 0;
		Мес2_СуммаВыпл = 0;
		Мес3_СуммаВыпл = 0;
		
		Мес1_СуммаСтВз = 0;
		Мес2_СуммаСтВз = 0;
		Мес3_СуммаСтВз = 0;
		
		НовСтрТЗ_ИтогПоРазделу = ТЗ_ИтогПоРазделу.Добавить();
		
		ДеревоМнЧ1_3_1 = Ветка.Строки[1].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11131М1];
		
		Для каждого СтрокаМнЧ1_3_1 Из ДеревоМнЧ1_3_1.Строки Цикл
			ДанныеСтрокиМнЧ1_3_1 = СтрокаМнЧ1_3_1.Данные;
			Мес1_СуммаВыпл = Мес1_СуммаВыпл + СтрокаМнЧ1_3_1.Данные["П11131М102003"];
			Мес2_СуммаВыпл = Мес2_СуммаВыпл + СтрокаМнЧ1_3_1.Данные["П11131М102004"];
			Мес3_СуммаВыпл = Мес3_СуммаВыпл + СтрокаМнЧ1_3_1.Данные["П11131М102005"];
			Мес1_СуммаСтВз = Мес1_СуммаСтВз + СтрокаМнЧ1_3_1.Данные["П11131М105003"];
			Мес2_СуммаСтВз = Мес2_СуммаСтВз + СтрокаМнЧ1_3_1.Данные["П11131М105004"];
			Мес3_СуммаСтВз = Мес3_СуммаСтВз + СтрокаМнЧ1_3_1.Данные["П11131М105005"];
		КонецЦикла;
		
		ДеревоМнЧ1_3_2 = Ветка.Строки[2].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11132М1];
		
		Для каждого СтрокаМнЧ1_3_2 Из ДеревоМнЧ1_3_2.Строки Цикл
			Мес1_СуммаВыпл = Мес1_СуммаВыпл + СтрокаМнЧ1_3_2.Данные["П11132М102003"];
			Мес2_СуммаВыпл = Мес2_СуммаВыпл + СтрокаМнЧ1_3_2.Данные["П11132М102004"];
			Мес3_СуммаВыпл = Мес3_СуммаВыпл + СтрокаМнЧ1_3_2.Данные["П11132М102005"];
			Мес1_СуммаСтВз = Мес1_СуммаСтВз + СтрокаМнЧ1_3_2.Данные["П11132М105003"];
			Мес2_СуммаСтВз = Мес2_СуммаСтВз + СтрокаМнЧ1_3_2.Данные["П11132М105004"];
			Мес3_СуммаСтВз = Мес3_СуммаСтВз + СтрокаМнЧ1_3_2.Данные["П11132М105005"];
		КонецЦикла;
		
		НовСтрТЗ_ИтогПоРазделу["Мес1_СуммаВыпл"] = Мес1_СуммаВыпл;
		НовСтрТЗ_ИтогПоРазделу["Мес2_СуммаВыпл"] = Мес2_СуммаВыпл;
		НовСтрТЗ_ИтогПоРазделу["Мес3_СуммаВыпл"] = Мес3_СуммаВыпл;
		НовСтрТЗ_ИтогПоРазделу["Мес1_СуммаСтВз"] = Мес1_СуммаСтВз;
		НовСтрТЗ_ИтогПоРазделу["Мес2_СуммаСтВз"] = Мес2_СуммаСтВз;
		НовСтрТЗ_ИтогПоРазделу["Мес3_СуммаСтВз"] = Мес3_СуммаСтВз;
		
	КонецЦикла;
	
	СтрокаПФ = Макет.Получитьобласть("СтрокаИтогоПоРазделу1ДопТариф");
	ТЗ_ИтогПоРазделу.Свернуть("", "Мес1_СуммаВыпл,Мес1_СуммаСтВз,Мес2_СуммаВыпл,Мес2_СуммаСтВз,Мес3_СуммаВыпл,Мес3_СуммаСтВз");
	СтрокаПФ.Параметры.Заполнить(ТЗ_ИтогПоРазделу[0]);
	ПФ.Вывести(СтрокаПФ);
	
	Если НЕ ПечФорма.ПроверитьВывод(ПФ) Тогда
		
		ПечФорма.ВывестиГоризонтальныйРазделительСтраниц();
		
		СтрокаПФ = Макет.Получитьобласть("ОсновнаяЧасть1");
		Обл = СтрокаПФ.Область("ОсновнаяЧасть1");
		ИндОсновныхЧастей = ИндОсновныхЧастей + 1;
		Обл.Имя = "ОсновнаяЧастьДопТариф" + Формат(ИндОсновныхЧастей, "ЧГ=");
		ПечФорма.Вывести(СтрокаПФ);
		
		СтрокаПФ = Макет.Получитьобласть("ОсновнаяЧасть2ДопТариф");
		Обл = СтрокаПФ.Область("ОсновнаяЧасть2ДопТариф");
		ИндОсновныхЧастей = ИндОсновныхЧастей + 1;
		Обл.Имя = "ОсновнаяЧастьДопТариф" + Формат(ИндОсновныхЧастей, "ЧГ=");
		ПечФорма.Вывести(СтрокаПФ);
		
	КонецЕсли;
	
	ПечФорма.Вывести(ПФ);
	
	ПечФорма.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ПечФорма.Автомасштаб = Истина;
	
	ТабличныйДокумент.ПолеСверху = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.ПолеСнизу  = 5;
	ТабличныйДокумент.ПолеСлева  = 5;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(ПечФорма);
	
	РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая(
	ЭтаФорма.Заголовок, СтруктураПараметров, ТабличныйДокумент, СтруктураРеквизитовФормы.мПечатныеФормы);
	
	// Окончание общей части формирования реестра.
	//
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = сохрНомераСтрокМногоуровнегоРаздела;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(сохрТаблДок);
	ЗаполнитьЗначенияСвойств(ТабличныйДокумент, ВремПоля, СтрПоля);
	
	РегламентированнаяОтчетностьКлиентСервер.ПроставлениеНомеровЛистов(ЭтаФорма, , СтруктураРеквизитовФормы.СписокПечатаемыхЛистов);
	КопироватьДанныеФормы(мДеревоВыбранныхСтраниц, мДеревоСтраницОтчета);
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ПечатьРаздела3НаСервере(ПараметрыПечатиРаздела3)
	
	ДеревоДанныхРаздела
	= ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел3"]);
	
	Если ПараметрыПечатиРаздела3.Свойство("ИндексТекущейСтраницыРаздела3") Тогда
		
		ПараметрыПечатиРаздела3.Вставить("Ветка",
		ДеревоДанныхРаздела.Строки[ПараметрыПечатиРаздела3.ИндексТекущейСтраницыРаздела3]);
		
		ПечатьТекущейСтраницыРаздела3НаСервере(ПараметрыПечатиРаздела3);
		
	Иначе
		
		Для каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
			
			ПараметрыПечатиРаздела3.Вставить("Ветка", Ветка);
			
			ПечатьТекущейСтраницыРаздела3НаСервере(ПараметрыПечатиРаздела3);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПечатьТекущейСтраницыРаздела3НаСервере(ПараметрыПечатиРаздела3)
	
	Ветка                  = ПараметрыПечатиРаздела3.Ветка;
	СтрПоля                = ПараметрыПечатиРаздела3.СтрПоля;
	МакетРаздела           = ПараметрыПечатиРаздела3.МакетРаздела;
	СтруктураПараметров    = ПараметрыПечатиРаздела3.СтруктураПараметров;
	ОбщиеРеквизитыРазделов = ПараметрыПечатиРаздела3.ОбщиеРеквизитыРазделов;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(МакетРаздела);
	
	НемногострочныеДанные = Ветка.Данные;
	Для каждого Пок Из НемногострочныеДанные Цикл
		Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
		Если Обл <> Неопределено Тогда
			Обл.Значение = Пок.Значение;
		КонецЕсли;
	КонецЦикла;
	Обл = ТабличныйДокумент.Области.Найти("П000030002001");
	Если Обл <> Неопределено Тогда
		Обл.Текст = СокрЛП(СтруктураДанныхТитульный.Период);
	КонецЕсли;
	Обл = ТабличныйДокумент.Области.Найти("П000030003001");
	Если Обл <> Неопределено Тогда
		Обл.Текст = СокрЛП(СтруктураДанныхТитульный.ОтчетГод);
	КонецЕсли;
	Обл = ТабличныйДокумент.Области.Найти("П000030005001");
	Если Обл <> Неопределено Тогда
		Обл.Текст = ?(ЗначениеЗаполнено(СтруктураДанныхТитульный.ДатаПодписи),
		Формат(СтруктураДанныхТитульный.ДатаПодписи, "ДФ=""ддММгггг"""), "--------");
	КонецЕсли;
	
	СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
	СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел3_Лист1");
	ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
	
	ДанныеМнЧ1 = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы321М1];
	ДанныеМнЧ2 = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы322М1];
	
	СтрокМнЧ1НаЛисте = 3;
	СтрокМнЧ2НаЛисте = 3;
	
	// Определение количества листов.
	КолСтрокМнЧ1 = ДанныеМнЧ1.Строки.Количество();
	ДробКол1 = КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте;
	ЦелКол1  = Цел(КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте);
	КолЛистов1 = ?(ДробКол1 = ЦелКол1, ЦелКол1, ЦелКол1 + 1);
	
	КолСтрокМнЧ2 = ДанныеМнЧ2.Строки.Количество();
	ДробКол2 = КолСтрокМнЧ2 / СтрокМнЧ2НаЛисте;
	ЦелКол2  = Цел(КолСтрокМнЧ2 / СтрокМнЧ2НаЛисте);
	КолЛистов2 = ?(ДробКол2 = ЦелКол2, ЦелКол2, ЦелКол2 + 1);
	
	КолЛистовРаздела1 = Макс(КолЛистов1, КолЛистов2);
	
	// Подготовка многострочных данных для заполнения листов.
	МассивДанныхМнЧ1ДляПечати = Новый Массив;
	ИмяП00321М119001 = "П00321М119001";
	ИмяП00321М120001 = "П00321М120001";
	ИмяП00321М121001 = "П00321М121001";
	ИмяП00321М122001 = "П00321М122001";
	ИмяП00321М123001 = "П00321М123001";
	ИмяП00321М124001 = "П00321М124001";
	
	МассивДанныхМнЧ2ДляПечати = Новый Массив;
	ИмяП00322М126001 = "П00322М126001";
	ИмяП00322М127001 = "П00322М127001";
	ИмяП00322М128001 = "П00322М128001";
	ИмяП00322М129001 = "П00322М129001";
	
	Для НомЛиста = 1 По КолЛистовРаздела1 Цикл
		
		Приращение1КНомеру = (НомЛиста - 1) * СтрокМнЧ1НаЛисте;
		ДанныеМнЧ1ДляПечати = Новый Структура;
		Для ИндСтрокиМнЧ = 1 По СтрокМнЧ1НаЛисте Цикл
			_ИндСтрокиМнЧ = СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
			ИндСПриращением = ИндСтрокиМнЧ + Приращение1КНомеру;
			
			НовИмяП00321М119001 = ИмяП00321М119001 + _ИндСтрокиМнЧ;
			НовИмяП00321М120001 = ИмяП00321М120001 + _ИндСтрокиМнЧ;
			НовИмяП00321М121001 = ИмяП00321М121001 + _ИндСтрокиМнЧ;
			НовИмяП00321М122001 = ИмяП00321М122001 + _ИндСтрокиМнЧ;
			НовИмяП00321М123001 = ИмяП00321М123001 + _ИндСтрокиМнЧ;
			НовИмяП00321М124001 = ИмяП00321М124001 + _ИндСтрокиМнЧ;
			
			ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М119001, "");
			ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М120001, "");
			ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М121001, 0);
			ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М122001, 0);
			ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М123001, 0);
			ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М124001, 0);
			
			Если КолСтрокМнЧ1 >= ИндСПриращением Тогда
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М119001,
				ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М119001]);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М120001,
				ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М120001]);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М121001,
				ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М121001]);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М122001,
				ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М122001]);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М123001,
				ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М123001]);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00321М124001,
				ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00321М124001]);
			КонецЕсли;
		КонецЦикла;
		МассивДанныхМнЧ1ДляПечати.Добавить(ДанныеМнЧ1ДляПечати);
		
		Приращение2КНомеру = (НомЛиста - 1) * СтрокМнЧ2НаЛисте;
		ДанныеМнЧ2ДляПечати = Новый Структура;
		Для ИндСтрокиМнЧ = 1 По СтрокМнЧ2НаЛисте Цикл
			_ИндСтрокиМнЧ = СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
			ИндСПриращением = ИндСтрокиМнЧ + Приращение2КНомеру;
			
			НовИмяП00322М126001 = ИмяП00322М126001 + _ИндСтрокиМнЧ;
			НовИмяП00322М127001 = ИмяП00322М127001 + _ИндСтрокиМнЧ;
			НовИмяП00322М128001 = ИмяП00322М128001 + _ИндСтрокиМнЧ;
			НовИмяП00322М129001 = ИмяП00322М129001 + _ИндСтрокиМнЧ;
			
			ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М126001, "");
			ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М127001, "");
			ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М128001, 0);
			ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М129001, 0);
			
			Если КолСтрокМнЧ2 >= ИндСПриращением Тогда
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М126001,
				ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00322М126001]);
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М127001,
				ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00322М127001]);
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М128001,
				ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00322М128001]);
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00322М129001,
				ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00322М129001]);
			КонецЕсли;
		КонецЦикла;
		МассивДанныхМнЧ2ДляПечати.Добавить(ДанныеМнЧ2ДляПечати);
		
	КонецЦикла;
	
	// Вывод листов.
	Для НомЛиста = 1 По КолЛистовРаздела1 Цикл
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(МакетРаздела);
		
		Для Ном = 1 По СтрокМнЧ1НаЛисте - 1 Цикл
			ИмяОбластиПреемника = "ДобавлениеСтроки"
			+ СтруктураРеквизитовФормы.мИдГруппы321М1 + СтрокаСИндексомПоказателя(Ном);
			ВставитьДопСтроку(СтруктураРеквизитовФормы.мИдГруппы321М1, ИмяОбластиПреемника);
		КонецЦикла;
		
		Для Ном = 1 По СтрокМнЧ2НаЛисте - 1 Цикл
			ИмяОбластиПреемника = "ДобавлениеСтроки"
			+ СтруктураРеквизитовФормы.мИдГруппы322М1 + СтрокаСИндексомПоказателя(Ном);
			ВставитьДопСтроку(СтруктураРеквизитовФормы.мИдГруппы322М1, ИмяОбластиПреемника);
		КонецЦикла;
		
		Если НомЛиста = 1 Тогда
			НемногострочныеДанные = Ветка.Данные;
			Для каждого Пок Из НемногострочныеДанные Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ДанныеМнЧ1ДляПечати = МассивДанныхМнЧ1ДляПечати[НомЛиста - 1];
		Для каждого Пок Из ДанныеМнЧ1ДляПечати Цикл
			Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
			Если Обл <> Неопределено Тогда
				Обл.Значение = Пок.Значение;
			КонецЕсли;
		КонецЦикла;
		
		ДанныеМнЧ2ДляПечати = МассивДанныхМнЧ2ДляПечати[НомЛиста - 1];
		Для каждого Пок Из ДанныеМнЧ2ДляПечати Цикл
			Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
			Если Обл <> Неопределено Тогда
				Обл.Значение = Пок.Значение;
			КонецЕсли;
		КонецЦикла;
		
		СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
		СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел3_Лист2");
		ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервере(ВидПечати)
	
	Если НЕ РегламентированнаяОтчетность.ПринтерДоступен() Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Перед формированием печатных форм необходимо определить в системе принтер и задать его в качестве используемого по умолчанию!'");
		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.ЕдиницаИзмерения <> ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1
		ИЛИ СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения <> 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Печать возможна только при установленной единице измерения ""в рублях"" и точности ""0"".'");
		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если ТипЗнч(мДеревоВыбранныхСтраниц) <> Тип("ДанныеФормыДерево") Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.мПечатныеФормы.Очистить();
	СтруктураРеквизитовФормы.мРежимПечати = Истина;
	
	СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	сохрТаблДок = ТабличныйДокумент.ПолучитьОбласть();
	
	сохрНомераСтрокМногоуровнегоРаздела = СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела;
	
	СтрПоля = "ПолеСверху, ПолеСправа, ПолеСнизу, ПолеСлева";
	ВремПоля = Новый Структура(СтрПоля);
	ЗаполнитьЗначенияСвойств(ВремПоля, ТабличныйДокумент, СтрПоля);
	
	ВывестиДанныеВТабличныйДокумент("Титульный");
	ОбщиеРеквизитыРазделов = ПолучитьОбщиеРеквизитыСТитульногоЛиста();
	
	Если ВидПечати = "ПоказатьБланкСтраницыРаздела3" Тогда
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("НаименованиеЛиста",  "Раздел 3");
		СтруктураПараметров.Вставить("ОриентацияЛиста",    "Портрет");
		СтруктураПараметров.Вставить("ИмяСтраницы",        "Раздел3");
		Структурапараметров.Вставить("ИмяОбластиТаблПоля", "");
		СтруктураПараметров.Вставить("ВидПечати",          ВидПечати);
		
		ПараметрыПечатиРаздела3 = Новый Структура;
		ПараметрыПечатиРаздела3.Вставить("СтрПоля", СтрПоля);
		ПараметрыПечатиРаздела3.Вставить("СтруктураПараметров", СтруктураПараметров);
		ПараметрыПечатиРаздела3.Вставить("ОбщиеРеквизитыРазделов", ОбщиеРеквизитыРазделов);
		
		ПараметрыПечатиРаздела3.Вставить("МакетРаздела", ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(
		Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_Раздел3"));
		
		ПараметрыПечатиРаздела3.Вставить("ИндексТекущейСтраницыРаздела3",
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1);
		
		ПечатьРаздела3НаСервере(ПараметрыПечатиРаздела3);
		
	Иначе
		
		Для Каждого СтрокаУровня1 Из мДеревоВыбранныхСтраниц.ПолучитьЭлементы() Цикл
			
			Если СтрокаУровня1.ВыводНаПечать = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("НаименованиеЛиста",  СтрокаУровня1.Представление);
			СтруктураПараметров.Вставить("ОриентацияЛиста",    СтрокаУровня1.ОриентацияСтраницы);
			СтруктураПараметров.Вставить("ИмяСтраницы",        СтрокаУровня1.ИмяСтраницы);
			Структурапараметров.Вставить("ИмяОбластиТаблПоля", СтрокаУровня1.ИмяОбластиТабличногоПоля);
			СтруктураПараметров.Вставить("ВидПечати",          ВидПечати);
			
			Если мСтруктураМногоуровневыхРазделов.Свойство(СтрокаУровня1.ИмяСтраницы) Тогда
				
				ВывестиНаПечатьДанныеМногоуровневогоРаздела(СтруктураПараметров, ОбщиеРеквизитыРазделов, СтрПоля);
				
			Иначе
				
				ВывестиДанныеВТабличныйДокумент(СтрокаУровня1.ИмяСтраницы);
				ВывестиНаПечатьЛист(СтруктураПараметров, ОбщиеРеквизитыРазделов, СтрПоля);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = сохрНомераСтрокМногоуровнегоРаздела;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(сохрТаблДок);
	ЗаполнитьЗначенияСвойств(ТабличныйДокумент, ВремПоля, СтрПоля);
	
	РегламентированнаяОтчетностьКлиентСервер.ПроставлениеНомеровЛистов(ЭтаФорма, , СтруктураРеквизитовФормы.СписокПечатаемыхЛистов);
	КопироватьДанныеФормы(мДеревоВыбранныхСтраниц, мДеревоСтраницОтчета);
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ВывестиНаПечатьДанныеМногоуровневогоРаздела(СтруктураПараметров, ОбщиеРеквизитыРазделов, СтрПоля)
	
	ИмяТекРаздела = СтруктураПараметров.ИмяСтраницы;
	
	ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяТекРаздела]);
	
	Если ИмяТекРаздела = "Раздел1" Тогда
		
		МакетРаздела = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1");
		
		ДанныеМнЧ1 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М1];
		ДанныеМнЧ2 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М2];
		
		СтрокМнЧ1НаЛисте = 1;
		СтрокМнЧ2НаЛисте = 1;
		
		// Определение количества листов.
		КолСтрокМнЧ1 = ДанныеМнЧ1.Строки.Количество();
		ДробКол1 = КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте;
		ЦелКол1  = Цел(КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте);
		КолЛистов1 = ?(ДробКол1 = ЦелКол1, ЦелКол1, ЦелКол1 + 1);
		
		КолСтрокМнЧ2 = ДанныеМнЧ2.Строки.Количество();
		ДробКол2 = КолСтрокМнЧ2 / СтрокМнЧ2НаЛисте;
		ЦелКол2  = Цел(КолСтрокМнЧ2 / СтрокМнЧ2НаЛисте);
		КолЛистов2 = ?(ДробКол2 = ЦелКол2, ЦелКол2, ЦелКол2 + 1);
		
		КолЛистовРаздела1 = Макс(КолЛистов1, КолЛистов2);
		
		// Подготовка многострочных данных для заполнения листов.
		МассивДанныхМнЧ1ДляПечати = Новый Массив;
		ИмяП00001М106001 = "П00001М106001";
		ИмяП00001М107001 = "П00001М107001";
		ИмяП00001М107101 = "П00001М107101";
		ИмяП00001М107201 = "П00001М107201";
		ИмяП00001М107301 = "П00001М107301";
		
		МассивДанныхМнЧ2ДляПечати = Новый Массив;
		ИмяП00001М208001 = "П00001М208001";
		ИмяП00001М209001 = "П00001М209001";
		ИмяП00001М209101 = "П00001М209101";
		ИмяП00001М209201 = "П00001М209201";
		ИмяП00001М209301 = "П00001М209301";
		
		Для НомЛиста = 1 По КолЛистовРаздела1 Цикл
			
			Приращение1КНомеру = (НомЛиста - 1) * СтрокМнЧ1НаЛисте;
			ДанныеМнЧ1ДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧ1НаЛисте Цикл
				_ИндСтрокиМнЧ = СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + Приращение1КНомеру;
				
				НовИмяП00001М106001 = ИмяП00001М106001 + _ИндСтрокиМнЧ;
				НовИмяП00001М107001 = ИмяП00001М107001 + _ИндСтрокиМнЧ;
				НовИмяП00001М107101 = ИмяП00001М107101 + _ИндСтрокиМнЧ;
				НовИмяП00001М107201 = ИмяП00001М107201 + _ИндСтрокиМнЧ;
				НовИмяП00001М107301 = ИмяП00001М107301 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М106001, "");
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107001, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107101, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107201, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107301, 0);
				
				Если КолСтрокМнЧ1 >= ИндСПриращением Тогда
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М106001,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М106001]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107001,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М107001]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107101,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М107101]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107201,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М107201]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП00001М107301,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП00001М107301]);
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧ1ДляПечати.Добавить(ДанныеМнЧ1ДляПечати);
			
			Приращение2КНомеру = (НомЛиста - 1) * СтрокМнЧ2НаЛисте;
			ДанныеМнЧ2ДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧ2НаЛисте Цикл
				_ИндСтрокиМнЧ = СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + Приращение2КНомеру;
				
				НовИмяП00001М208001 = ИмяП00001М208001 + _ИндСтрокиМнЧ;
				НовИмяП00001М209001 = ИмяП00001М209001 + _ИндСтрокиМнЧ;
				НовИмяП00001М209101 = ИмяП00001М209101 + _ИндСтрокиМнЧ;
				НовИмяП00001М209201 = ИмяП00001М209201 + _ИндСтрокиМнЧ;
				НовИмяП00001М209301 = ИмяП00001М209301 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М208001, "");
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209001, 0);
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209101, 0);
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209201, 0);
				ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209301, 0);
				
				Если КолСтрокМнЧ2 >= ИндСПриращением Тогда
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М208001,
					ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М208001]);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209001,
					ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М209001]);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209101,
					ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М209101]);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209201,
					ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М209201]);
					ДанныеМнЧ2ДляПечати.Вставить(НовИмяП00001М209301,
					ДанныеМнЧ2.Строки[ИндСПриращением - 1].Данные[ИмяП00001М209301]);
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧ2ДляПечати.Добавить(ДанныеМнЧ2ДляПечати);
			
		КонецЦикла;
		
		// Вывод листов.
		Для НомЛиста = 1 По КолЛистовРаздела1 Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Ном = 1 По СтрокМнЧ1НаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы1М1 + СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(СтруктураРеквизитовФормы.мИдГруппы1М1, ИмяОбластиПреемника);
			КонецЦикла;
			
			Для Ном = 1 По СтрокМнЧ2НаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы1М2 + СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(СтруктураРеквизитовФормы.мИдГруппы1М2, ИмяОбластиПреемника);
			КонецЦикла;
			
			Если НомЛиста = 1 Тогда
				НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
				Для каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ДанныеМнЧ1ДляПечати = МассивДанныхМнЧ1ДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧ1ДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			ДанныеМнЧ2ДляПечати = МассивДанныхМнЧ2ДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧ2ДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1_Лист1");
			ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
			
			Если НомЛиста = КолЛистовРаздела1 Тогда
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
				Для каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1_Лист2");
				ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел1Прил1" Тогда
		
		МакетРаздел1Прил1 = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1Прил1");
		
		МакетРаздел1Прил1Подр1_1и1_2 = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1Прил1Подр1_1и1_2");
		
		МакетРаздел1Прил1Подр1_3_1 = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1Прил1Подр1_3_1");
		
		МакетРаздел1Прил1Подр1_3_2 = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1Прил1Подр1_3_2");
		
		МакетРаздел1Прил1Подр1_4 = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1Прил1Подр1_4");
		
		Для каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
			
			// Подразделы 1.1, 1.2.
			НемногострочныеДанные = Ветка.Строки[0].Строки[0].Данные;
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздел1Прил1Подр1_1и1_2);
			
			Для каждого Пок Из НемногострочныеДанные Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			Обл = ТабличныйДокумент.Области.Найти("П000110000101");
			Обл.Имя = "";
			ТабличныйДокумент.Вывести(МакетРаздел1Прил1);
			Обл = ТабличныйДокумент.Области.Найти("П000110000101");
			Обл.Значение = Ветка.Данные.П000110000101;
			
			СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил1Подр1_1и1_2");
			ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
			
			// Подраздел 1.3.1.
			МногострочныеДанные131
			= Ветка.Строки[1].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11131М1];
			Для каждого Строка131 Из МногострочныеДанные131.Строки Цикл
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздел1Прил1Подр1_3_1);
				
				Для каждого Пок Из Строка131.Данные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ + "_1");
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил1Подр1_3_1");
				ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
			КонецЦикла;
			
			// Подраздел 1.3.2.
			МногострочныеДанные132
			= Ветка.Строки[2].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11132М1];
			Для каждого Строка132 Из МногострочныеДанные132.Строки Цикл
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздел1Прил1Подр1_3_2);
				
				Для каждого Пок Из Строка132.Данные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ + "_1");
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил1Подр1_3_2");
				ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
			КонецЦикла;
			
			// Подраздел 1.4.
			МногострочныеДанные14
			= Ветка.Строки[3].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1114М1];
			Для каждого Строка14 Из МногострочныеДанные14.Строки Цикл
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздел1Прил1Подр1_4);
				
				Для каждого Пок Из Строка14.Данные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ + "_1");
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил1Подр1_4");
				ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел1Прил2" Тогда
		
		МакетРаздела = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + "Раздел1Прил2");
		
		Для каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
			
			НемногострочныеДанные = Ветка.Данные;
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для каждого Пок Из НемногострочныеДанные Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел1Прил2");
			ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел1Прил3"
		ИЛИ ИмяТекРаздела = "Раздел1Прил4"
		ИЛИ ИмяТекРаздела = "Раздел1Прил5_6"
		ИЛИ ИмяТекРаздела = "Раздел1Прил7" Тогда
		
		МакетРаздела = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(МакетРаздела);
		
		Для каждого Пок Из НемногострочныеДанные Цикл
			Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
			Если Обл <> Неопределено Тогда
				Обл.Значение = Пок.Значение;
			КонецЕсли;
		КонецЦикла;
		
		СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
		СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
		ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
		
	ИначеЕсли ИмяТекРаздела = "Раздел1Прил8" Тогда
		
		МакетРаздела = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		ДанныеМнЧ = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы18М1];
		
		СтрокМнЧНаЛисте = 3;
		
		// Определение количества листов.
		КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
		ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
		ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
		КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
		
		// Подготовка многострочных данных для заполнения листов.
		МассивДанныхМнЧДляПечати = Новый Массив;
		ИмяП00018М102001 = "П00018М102001";
		ИмяП00018М103001 = "П00018М103001";
		ИмяП00018М104001 = "П00018М104001";
		ИмяП00018М105001 = "П00018М105001";
		ИмяП00018М106001 = "П00018М106001";
		ИмяП00018М106002 = "П00018М106002";
		ИмяП00018М106003 = "П00018М106003";
		ИмяП00018М106004 = "П00018М106004";
		ИмяП00018М106005 = "П00018М106005";
		
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
			ДанныеМнЧДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
				_ИндСтрокиМнЧ = СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
				
				НовИмяП00018М102001 = ИмяП00018М102001 + _ИндСтрокиМнЧ;
				НовИмяП00018М103001 = ИмяП00018М103001 + _ИндСтрокиМнЧ;
				НовИмяП00018М104001 = ИмяП00018М104001 + _ИндСтрокиМнЧ;
				НовИмяП00018М105001 = ИмяП00018М105001 + _ИндСтрокиМнЧ;
				НовИмяП00018М106001 = ИмяП00018М106001 + _ИндСтрокиМнЧ;
				НовИмяП00018М106002 = ИмяП00018М106002 + _ИндСтрокиМнЧ;
				НовИмяП00018М106003 = ИмяП00018М106003 + _ИндСтрокиМнЧ;
				НовИмяП00018М106004 = ИмяП00018М106004 + _ИндСтрокиМнЧ;
				НовИмяП00018М106005 = ИмяП00018М106005 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М102001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М103001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М104001, '00010101');
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М105001, '00010101');
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106001, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106002, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106003, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106004, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106005, 0);
				
				Если КолСтрокМнЧ >= ИндСПриращением Тогда
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М102001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М102001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М103001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М103001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М104001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М104001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М105001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М105001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М106001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106002,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М106002]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106003,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М106003]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106004,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М106004]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00018М106005,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00018М106005]);
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
			
		КонецЦикла;
		
		// Вывод листов.
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы18М1 + СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(СтруктураРеквизитовФормы.мИдГруппы18М1, ИмяОбластиПреемника);
			КонецЦикла;
			
			Если НомЛиста = 1 Тогда
				НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
				Для каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
			ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел1Прил9" Тогда
		
		МакетРаздела = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		ДанныеМнЧ = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы19М1];
		
		СтрокМнЧНаЛисте = 2;
		
		// Определение количества листов.
		КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
		ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
		ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
		КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
		
		// Подготовка многострочных данных для заполнения листов.
		МассивДанныхМнЧДляПечати = Новый Массив;
		ИмяП00019М102001 = "П00019М102001";
		ИмяП00019М103001 = "П00019М103001";
		ИмяП00019М104001 = "П00019М104001";
		ИмяП00019М105001 = "П00019М105001";
		ИмяП00019М106001 = "П00019М106001";
		ИмяП00019М107001 = "П00019М107001";
		ИмяП00019М107002 = "П00019М107002";
		ИмяП00019М108001 = "П00019М108001";
		ИмяП00019М108002 = "П00019М108002";
		ИмяП00019М108003 = "П00019М108003";
		ИмяП00019М108004 = "П00019М108004";
		ИмяП00019М108005 = "П00019М108005";
		
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
			ДанныеМнЧДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
				_ИндСтрокиМнЧ = СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
				
				НовИмяП00019М102001 = ИмяП00019М102001 + _ИндСтрокиМнЧ;
				НовИмяП00019М103001 = ИмяП00019М103001 + _ИндСтрокиМнЧ;
				НовИмяП00019М104001 = ИмяП00019М104001 + _ИндСтрокиМнЧ;
				НовИмяП00019М105001 = ИмяП00019М105001 + _ИндСтрокиМнЧ;
				НовИмяП00019М106001 = ИмяП00019М106001 + _ИндСтрокиМнЧ;
				НовИмяП00019М107001 = ИмяП00019М107001 + _ИндСтрокиМнЧ;
				НовИмяП00019М107002 = ИмяП00019М107002 + _ИндСтрокиМнЧ;
				НовИмяП00019М108001 = ИмяП00019М108001 + _ИндСтрокиМнЧ;
				НовИмяП00019М108002 = ИмяП00019М108002 + _ИндСтрокиМнЧ;
				НовИмяП00019М108003 = ИмяП00019М108003 + _ИндСтрокиМнЧ;
				НовИмяП00019М108004 = ИмяП00019М108004 + _ИндСтрокиМнЧ;
				НовИмяП00019М108005 = ИмяП00019М108005 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М102001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М103001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М104001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М105001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М106001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М107001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М107002, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108001, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108002, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108003, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108004, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108005, 0);
				
				Если КолСтрокМнЧ >= ИндСПриращением Тогда
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М102001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М102001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М103001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М103001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М104001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М104001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М105001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М105001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М106001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М106001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М107001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М107001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М107002,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М107002]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108002,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108002]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108003,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108003]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108004,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108004]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00019М108005,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00019М108005]);
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
			
		КонецЦикла;
		
		// Вывод листов.
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы19М1 + СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(СтруктураРеквизитовФормы.мИдГруппы19М1, ИмяОбластиПреемника);
			КонецЦикла;
			
			Если НомЛиста = 1 Тогда
				НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
				Для каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
			ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел1Прил10" Тогда
		
		МакетРаздела = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		ДанныеМнЧ = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М1];
		
		СтрокМнЧНаЛисте = 2;
		
		// Определение количества листов (строки 020-100).
		КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
		ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
		ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
		КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
		
		// Подготовка многострочных данных (строки 020-100).
		МассивДанныхМнЧДляПечати = Новый Массив;
		ИмяП00110М102001 = "П00110М102001";
		ИмяП00110М103001 = "П00110М103001";
		ИмяП00110М104001 = "П00110М104001";
		ИмяП00110М105001 = "П00110М105001";
		ИмяП00110М106001 = "П00110М106001";
		ИмяП00110М107001 = "П00110М107001";
		ИмяП00110М108001 = "П00110М108001";
		ИмяП00110М109001 = "П00110М109001";
		ИмяП00110М110001 = "П00110М110001";
		ИмяП00110М110002 = "П00110М110002";
		ИмяП00110М110003 = "П00110М110003";
		ИмяП00110М110004 = "П00110М110004";
		ИмяП00110М110005 = "П00110М110005";
		
		ДеревоДанныхПодчМнЧ = Новый ДеревоЗначений;
		ДеревоДанныхПодчМнЧ.Колонки.Добавить("Данные");
		
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
			ДанныеМнЧДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
				_ИндСтрокиМнЧ = СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
				
				НовИмяП00110М102001 = ИмяП00110М102001 + _ИндСтрокиМнЧ;
				НовИмяП00110М103001 = ИмяП00110М103001 + _ИндСтрокиМнЧ;
				НовИмяП00110М104001 = ИмяП00110М104001 + _ИндСтрокиМнЧ;
				НовИмяП00110М105001 = ИмяП00110М105001 + _ИндСтрокиМнЧ;
				НовИмяП00110М106001 = ИмяП00110М106001 + _ИндСтрокиМнЧ;
				НовИмяП00110М107001 = ИмяП00110М107001 + _ИндСтрокиМнЧ;
				НовИмяП00110М108001 = ИмяП00110М108001 + _ИндСтрокиМнЧ;
				НовИмяП00110М109001 = ИмяП00110М109001 + _ИндСтрокиМнЧ;
				НовИмяП00110М110001 = ИмяП00110М110001 + _ИндСтрокиМнЧ;
				НовИмяП00110М110002 = ИмяП00110М110002 + _ИндСтрокиМнЧ;
				НовИмяП00110М110003 = ИмяП00110М110003 + _ИндСтрокиМнЧ;
				НовИмяП00110М110004 = ИмяП00110М110004 + _ИндСтрокиМнЧ;
				НовИмяП00110М110005 = ИмяП00110М110005 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М102001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М103001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М104001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М105001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М106001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М107001, '00010101');
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М108001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М109001, '00010101');
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110001, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110002, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110003, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110004, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110005, 0);
				
				Если КолСтрокМнЧ >= ИндСПриращением Тогда
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М102001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М102001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М103001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М103001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М104001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М104001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М105001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М105001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М106001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М106001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М107001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М107001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М108001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М108001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М109001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М109001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М110001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110002,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М110002]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110003,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М110003]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110004,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М110004]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М110005,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М110005]);
					
					// Заполнение временного дерева многострочных данных (строки 110-140).
					ДанныеПодчМнЧ = ДанныеМнЧ.Строки[ИндСПриращением - 1].ДанныеМногострочныхЧастей[
					СтруктураРеквизитовФормы.мИдГруппы110М2];
					Для каждого СтрокаДанныхПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
						ПодчиненнаяСтрока = ДеревоДанныхПодчМнЧ.Строки.Добавить();
						ПодчиненнаяСтрока.Данные
						= ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтрокаДанныхПодчМнЧ.Данные);
					КонецЦикла;
					
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
			
		КонецЦикла;
		
		// Вывод листов (строки 020-100).
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы110М1 + СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(СтруктураРеквизитовФормы.мИдГруппы110М1, ИмяОбластиПреемника);
			КонецЦикла;
			
			Если НомЛиста = 1 Тогда
				НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
				Для каждого Пок Из НемногострочныеДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела + "_Лист1");
			ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
			
		КонецЦикла;
		
		СтрокМнЧНаЛисте = 3;
		
		// Определение количества листов (строки 110-140).
		КолСтрокМнЧ = ДеревоДанныхПодчМнЧ.Строки.Количество();
		ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
		ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
		КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
		
		// Подготовка многострочных данных (строки 110-140).
		МассивДанныхМнЧДляПечати = Новый Массив;
		ИмяП00110М211001 = "П00110М211001";
		ИмяП00110М212001 = "П00110М212001";
		ИмяП00110М213001 = "П00110М213001";
		ИмяП00110М214001 = "П00110М214001";
		
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
			ДанныеМнЧДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
				_ИндСтрокиМнЧ = СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
				
				НовИмяП00110М211001 = ИмяП00110М211001 + _ИндСтрокиМнЧ;
				НовИмяП00110М212001 = ИмяП00110М212001 + _ИндСтрокиМнЧ;
				НовИмяП00110М213001 = ИмяП00110М213001 + _ИндСтрокиМнЧ;
				НовИмяП00110М214001 = ИмяП00110М214001 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М211001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М212001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М213001, '00010101');
				ДанныеМнЧДляПечати.Вставить(НовИмяП00110М214001, "");
				
				Если КолСтрокМнЧ >= ИндСПриращением Тогда
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М211001,
					ДеревоДанныхПодчМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М211001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М212001,
					ДеревоДанныхПодчМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М212001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М213001,
					ДеревоДанныхПодчМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М213001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00110М214001,
					ДеревоДанныхПодчМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00110М214001]);
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
			
		КонецЦикла;
		
		// Вывод листов (строки 185-200).
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы110М2 + "_1" + СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(СтруктураРеквизитовФормы.мИдГруппы110М2, ИмяОбластиПреемника);
			КонецЦикла;
			
			МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
			СтруктураРеквизитовФормы.мИдГруппы110М2]["ИменаГраф"];
			Для Ном = 1 По СтрокМнЧНаЛисте Цикл
				Для каждого ИмяПок Из МассивИменГраф Цикл
					Обл = ТабличныйДокумент.Области.Найти(ИмяПок + "_1" + СтрокаСИндексомПоказателя(Ном));
					Если Обл <> Неопределено Тогда
						Обл.Имя = ИмяПок + СтрокаСИндексомПоказателя(Ном);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			
			ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела + "_Лист2");
			ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел2" Тогда
		
		МакетРаздела = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		// Вывод Раздела 2.
		НемногострочныеДанные = ДеревоДанныхРаздела.Строки[0].Данные;
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(МакетРаздела);
		
		Для каждого Пок Из НемногострочныеДанные Цикл
			Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
			Если Обл <> Неопределено Тогда
				Обл.Значение = Пок.Значение;
			КонецЕсли;
		КонецЦикла;
		
		СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
		СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
		ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
		
		// Вывод Приложений 1 к Разделу 2.
		ДанныеМнЧ = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы21М1];
		
		СтрокМнЧНаЛисте = 2;
		
		// Определение количества листов.
		КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
		ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
		ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
		КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
		
		// Подготовка многострочных данных для заполнения листов.
		МассивДанныхМнЧДляПечати = Новый Массив;
		ИмяП00021М101001 = "П00021М101001";
		ИмяП00021М102001 = "П00021М102001";
		ИмяП00021М103001 = "П00021М103001";
		ИмяП00021М104001 = "П00021М104001";
		ИмяП00021М105001 = "П00021М105001";
		ИмяП00021М106001 = "П00021М106001";
		ИмяП00021М107001 = "П00021М107001";
		ИмяП00021М108001 = "П00021М108001";
		ИмяП00021М109001 = "П00021М109001";
		ИмяП00021М109002 = "П00021М109002";
		
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
			ДанныеМнЧДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
				_ИндСтрокиМнЧ = СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
				
				НовИмяП00021М101001 = ИмяП00021М101001 + _ИндСтрокиМнЧ;
				НовИмяП00021М102001 = ИмяП00021М102001 + _ИндСтрокиМнЧ;
				НовИмяП00021М103001 = ИмяП00021М103001 + _ИндСтрокиМнЧ;
				НовИмяП00021М104001 = ИмяП00021М104001 + _ИндСтрокиМнЧ;
				НовИмяП00021М105001 = ИмяП00021М105001 + _ИндСтрокиМнЧ;
				НовИмяП00021М106001 = ИмяП00021М106001 + _ИндСтрокиМнЧ;
				НовИмяП00021М107001 = ИмяП00021М107001 + _ИндСтрокиМнЧ;
				НовИмяП00021М108001 = ИмяП00021М108001 + _ИндСтрокиМнЧ;
				НовИмяП00021М109001 = ИмяП00021М109001 + _ИндСтрокиМнЧ;
				НовИмяП00021М109002 = ИмяП00021М109002 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М101001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М102001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М103001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М104001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М105001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М106001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М107001, '00010101');
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М108001, '00010101');
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М109001, 0);
				ДанныеМнЧДляПечати.Вставить(НовИмяП00021М109002, 0);
				
				Если КолСтрокМнЧ >= ИндСПриращением Тогда
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М101001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М101001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М102001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М102001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М103001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М103001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М104001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М104001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М105001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М105001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М106001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М106001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М107001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М107001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М108001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М108001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М109001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М109001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М109002,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М109002]);
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
			
		КонецЦикла;
		
		// Вывод листов.
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы21М1 + СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(СтруктураРеквизитовФормы.мИдГруппы21М1, ИмяОбластиПреемника);
			КонецЦикла;
			
			ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", "Раздел2Прил1");
			ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел3" Тогда
		
		ПараметрыПечатиРаздела3 = Новый Структура;
		ПараметрыПечатиРаздела3.Вставить("СтрПоля", СтрПоля);
		ПараметрыПечатиРаздела3.Вставить("СтруктураПараметров", СтруктураПараметров);
		ПараметрыПечатиРаздела3.Вставить("ОбщиеРеквизитыРазделов", ОбщиеРеквизитыРазделов);
		ПараметрыПечатиРаздела3.Вставить("МакетРаздела", ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(
		Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_Раздел3"));
		
		ПечатьРаздела3НаСервере(ПараметрыПечатиРаздела3);
		
	КонецЕсли;
	
	ДеревоДанныхРаздела = Неопределено;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиНаПечатьЛист(Парам1, ОбщиеРеквизитыРазделов, СтрПоля = Неопределено)
	
	ПрефиксИменМакетов = "ПечатныйБланк2017Кв1_";
	
	ИмяМЧБ = ПрефиксИменМакетов + Парам1.ИмяСтраницы;
	
	МакетМЧБ = ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(ИмяМЧБ);
	МакетМЧБ.ПолеСверху = 5;
	МакетМЧБ.ПолеСправа = 5;
	МакетМЧБ.ПолеСнизу  = 5;
	МакетМЧБ.ПолеСлева  = 5;
	
	ВремПоля = Новый Структура(СтрПоля);
	
	ЗаполнитьМакетМЧБ(Парам1, МакетМЧБ, ОбщиеРеквизитыРазделов);
	
	ЗаполнитьЗначенияСвойств(ВремПоля, ТабличныйДокумент, СтрПоля);
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(МакетМЧБ);
	ЗаполнитьЗначенияСвойств(ТабличныйДокумент, МакетМЧБ, СтрПоля, "Макет");
	
	МакетМЧБ = Неопределено;
	
	РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая(ЭтаФорма.Заголовок, Парам1, ТабличныйДокумент, СтруктураРеквизитовФормы.мПечатныеФормы);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМакетМЧБ(ПараметрыПечати, МакетМЧБ, ОбщиеРеквизитыРазделов)
	
	Показатели = Новый ТаблицаЗначений;
	Показатели.Колонки.Добавить("Имя");
	Показатели.Колонки.Добавить("Значение");
	Показатели.Колонки.Добавить("ЗначениеМЧБ");
	
	Показатели.Индексы.Добавить("Имя");
	
	ИменаСуммовыхПоказателейПодраздела3_2 = Новый Массив;
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00321М121001");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00321М122001");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00321М123001");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00321М124001");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003210025001");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003210025002");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003210025003");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003210025004");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00322М128001");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П00322М129001");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003220030001");
	ИменаСуммовыхПоказателейПодраздела3_2.Добавить("П003220030002");
	
	ИсходныйМакет = ТабличныйДокумент;
	Для Каждого Область Из ИсходныйМакет.Области Цикл
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Область.СодержитЗначение = Истина Тогда
			
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = Область.Имя;
			
			Если НомерКорректировки > 0 И ПараметрыПечати.ИмяСтраницы = "Раздел3_Лист2" И Область.Значение = 0
				И ИменаСуммовыхПоказателейПодраздела3_2.Найти(Лев(Область.Имя, 13)) <> Неопределено Тогда
				НовСтр.Значение = "0";
				НовСтр.ЗначениеМЧБ = "0--------.00";
			Иначе
				НовСтр.Значение = Область.Значение;
				НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(Область);
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Область = ИсходныйМакет.Области.Найти("П000030002001");
	Если Область <> Неопределено Тогда
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			И Область.СодержитЗначение = Ложь Тогда
			Если ЗначениеЗаполнено(Область.Текст) Тогда
				НовСтр = Показатели.Добавить();
				НовСтр.Имя = Область.Имя;
				НовСтр.Значение = Область.Текст;
				НовСтр.ЗначениеМЧБ = Область.Текст;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Область = ИсходныйМакет.Области.Найти("П000030003001");
	Если Область <> Неопределено Тогда
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			И Область.СодержитЗначение = Ложь Тогда
			Если ЗначениеЗаполнено(Область.Текст) Тогда
				НовСтр = Показатели.Добавить();
				НовСтр.Имя = Область.Имя;
				НовСтр.Значение = Область.Текст;
				НовСтр.ЗначениеМЧБ = Область.Текст;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НайденноеЗначение = Показатели.Найти("П000030004001", "Имя");
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
		НовСтр = Показатели.Добавить();
		НовСтр.Имя = "П000030004001";
		ПорядковыйНомер = СокрЛП(ИсходныйМакет.Области.Найти("П000030004001").Значение);
		НовСтр.Значение = ?(ЗначениеЗаполнено(ПорядковыйНомер), Число(ПорядковыйНомер), 0);
		НовСтр.ЗначениеМЧБ = ПорядковыйНомер;
	КонецЕсли;
	
	Область = ИсходныйМакет.Области.Найти("П000030005001");
	Если Область <> Неопределено Тогда
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			И Область.СодержитЗначение = Ложь Тогда
			Если ЗначениеЗаполнено(Область.Текст) Тогда
				НовСтр = Показатели.Добавить();
				НовСтр.Имя = Область.Имя;
				НовСтр.Значение = Область.Текст;
				НовСтр.ЗначениеМЧБ = Область.Текст;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Серия и номер документа (строка 150 раздела 3).
	НайденноеЗначение = Показатели.Найти("П000310015001", "Имя");
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
		СерияНомер
		= СокрЛП(ИсходныйМакет.Области.Найти("П000310015001").Значение) + " "
		+ СокрЛП(ИсходныйМакет.Области.Найти("П000310015002").Значение);
		СерияНомер = СокрЛП(СерияНомер); // обработка случая заполнения только серии или только номера
		НовСтр = Показатели.Добавить();
		НовСтр.Имя = "П000310015001";
		НовСтр.Значение = СерияНомер;
		НовСтр.ЗначениеМЧБ = СерияНомер;
	КонецЕсли;
	
	НайденноеЗначение = Показатели.Найти("ИНН", "Имя");
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	ИНН = "";
	Для Ном = 0 По 11 Цикл
		ИНН = ИНН + ОбщиеРеквизитыРазделов.ИНН[Ном];
	КонецЦикла;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ИНН";
	НовСтр.Значение = ИНН;
	НовСтр.ЗначениеМЧБ = СокрЛП(ИНН);
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ИНН1";
	НовСтр.Значение = ИНН;
	НовСтр.ЗначениеМЧБ = СокрЛП(ИНН);
	
	НайденноеЗначение = Показатели.Найти("КПП", "Имя");
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	КПП = "";
	Для Ном = 0 По 8 Цикл
		КПП = КПП + ОбщиеРеквизитыРазделов.КПП[Ном];
	КонецЦикла;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "КПП";
	НовСтр.Значение = КПП;
	НовСтр.ЗначениеМЧБ = СокрЛП(КПП);
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "КПП1";
	НовСтр.Значение = КПП;
	НовСтр.ЗначениеМЧБ = СокрЛП(КПП);
	
	НайденноеЗначение = Показатели.Найти("ДатаПодписи", "Имя");
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	ДатаПодписиСтр = "";
	Для Ном = 0 По 7 Цикл
		ДатаПодписиСтр = ДатаПодписиСтр + ОбщиеРеквизитыРазделов.ДатаПодписи[Ном];
	КонецЦикла;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ДатаПодписи";
	НовСтр.Значение = ДатаПодписиСтр;
	НовСтр.ЗначениеМЧБ = СокрЛП(ДатаПодписиСтр);
	
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ДатаПодписиПолная";
	Если СокрЛП(ДатаПодписиСтр) <> "" Тогда
		НовСтр.Значение = Формат(Дата(Прав(ДатаПодписиСтр, 4) + Сред(ДатаПодписиСтр, 3, 2) + Лев(ДатаПодписиСтр, 2) + "000000"), "ДФ = ""дд.ММ.гггг""");
		НовСтр.ЗначениеМЧБ = СокрЛП(Формат(Дата(Прав(ДатаПодписиСтр, 4) + Сред(ДатаПодписиСтр, 3, 2) + Лев(ДатаПодписиСтр, 2) + "000000"), "ДФ = ""дд.ММ.гггг"""));
	КонецЕсли;
	
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоФамилия";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоФамилия;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоФамилия;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоИмяИнициал";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоИмяИнициал;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоИмяИнициал;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоОтчествоИнициал";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоОтчествоИнициал;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоОтчествоИнициал;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоФамилия1";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоФамилия;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоФамилия;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоИмяИнициал1";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоИмяИнициал;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоИмяИнициал;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ФизлицоОтчествоИнициал1";
	НовСтр.Значение = ОбщиеРеквизитыРазделов.ФизлицоОтчествоИнициал;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.ФизлицоОтчествоИнициал;
	
	Если ПараметрыПечати.ИмяСтраницы = "ФизЛицо" Тогда
		НовСтр = Показатели.Добавить();
		НовСтр.Имя = "СерияНомерДокумента";
		НовСтр.Значение
		= ИсходныйМакет.Области.Найти("СерияДокумента").Значение + " "
		+ ИсходныйМакет.Области.Найти("НомерДокумента").Значение;
		НовСтр.ЗначениеМЧБ = НовСтр.Значение;
	КонецЕсли;
	
	// Особая обработка ФИО на титульном листе.
	Если ПараметрыПечати.ИмяСтраницы = "Титульный" Тогда
		ПокПодписант = Показатели.Найти("ОргПодписант", "Имя");
		Если ПокПодписант <> Неопределено Тогда
			ФИО = РегламентированнаяОтчетность.РазложитьФИО(ПокПодписант.Значение);
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантФамилия";
			НовСтр.Значение = ФИО.Фамилия;
			НовСтр.ЗначениеМЧБ = ФИО.Фамилия;
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантИмя";
			НовСтр.Значение = ФИО.Имя;
			НовСтр.ЗначениеМЧБ = ФИО.Имя;
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантОтчество";
			НовСтр.Значение = ФИО.Отчество;
			НовСтр.ЗначениеМЧБ = ФИО.Отчество;
		КонецЕсли;
	КонецЕсли;
	
	// Особая обработка ИНН.
	ИНН = Новый Массив(12);
	Для Инд = 1 По 9 Цикл
		Для Знакоместо = 0 По 11 Цикл
			ИНН[Знакоместо] = Показатели.Найти("ИНН" + Инд + "_" + (Знакоместо + 1), "Имя");
		КонецЦикла;
		Если ИНН[0] = Неопределено ИЛИ ИНН[1] = Неопределено ИЛИ ИНН[10] = Неопределено Тогда
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Показатель Из Показатели Цикл
		
		Если Показатель.Имя = "П000010001001" Тогда
			Показатель.ЗначениеМЧБ = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(
				СокрЛП(Показатель.Значение), 11, "-", 1);
		КонецЕсли;
		
	КонецЦикла;
	
	ИндексТочкиПоКорню = Новый Структура;
	Для каждого Область Из МакетМЧБ.Области Цикл
		Если Область.Текст = "." Тогда
			ТекАдресЗначенияОбласти = АдресЗначенияОбласти(Область);
			Корень = ТекАдресЗначенияОбласти.Корень;
			ИндексТочкиЧислаНаМЧБ = ТекАдресЗначенияОбласти.ИндексЗнакоместа;
			ИндексТочкиПоКорню.Вставить(Корень,ИндексТочкиЧислаНаМЧБ);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Область Из МакетМЧБ.Области Цикл
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			ИмяОбласти = Область.Имя;
			
			Если СтрЧислоВхождений(ИмяОбласти, "НомСтр") > 0
			 ИЛИ СтрЧислоВхождений(ИмяОбласти, "СоставленаНа") > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			РезультатПоиска = Показатели.Найти(ИмяОбласти, "Имя");
			Если РезультатПоиска = Неопределено Тогда
				ТекАдресЗначенияОбласти = АдресЗначенияОбласти(Область);
				ЗначениеВыведено = Ложь;
				Если ТекАдресЗначенияОбласти.ИндексЗнакоместа <> 0 Тогда
					РезультатПоиска = Показатели.Найти(ТекАдресЗначенияОбласти.Корень, "Имя");
					Если РезультатПоиска <> Неопределено Тогда
						Если ТипЗнч(РезультатПоиска.Значение)=Тип("Число") Тогда
							//разделение числа на 2 части
							ЦелаяЧасть = Цел(РезультатПоиска.Значение);
							СтрЦелаяЧасть = СтрЗаменить(Строка(Формат(Цел(РезультатПоиска.Значение), "ЧРГ=';'")), ";", "");
							Если РезультатПоиска.Значение < 0 И СтрНайти(РезультатПоиска.ЗначениеМЧБ, ".") > 0 Тогда
								СтрДробнаяЧасть = Сред(Строка(РезультатПоиска.Значение - ЦелаяЧасть),4);
							Иначе
								СтрДробнаяЧасть = Сред(Строка(РезультатПоиска.Значение - ЦелаяЧасть),3);
							КонецЕсли;
							Если СтрЦелаяЧасть <> "" ИЛИ СтрДробнаяЧасть <> "" Тогда
								СтрЦелаяЧасть = ?(СтрЦелаяЧасть = "", "0", СтрЦелаяЧасть);
								Если РезультатПоиска.Значение < 0 Тогда
									СтрЦелаяЧасть = ?(СтрЦелаяЧасть = "0", "-0", СтрЦелаяЧасть);
								КонецЕсли;
								СтрДробнаяЧасть = ?(СтрДробнаяЧасть = "", "0", СтрДробнаяЧасть);
							КонецЕсли;
							//разделение областей показателя на 2 части
							ИндексТочкиЧислаНаМЧБ = Неопределено;
							Если ИндексТочкиПоКорню.Свойство(ТекАдресЗначенияОбласти.Корень,ИндексТочкиЧислаНаМЧБ) = Ложь Тогда
								//На МЧБ нет разделения на целую и дробную части
								ПрисвоитьЗначениеОбласти(Область, РезультатПоиска.ЗначениеМЧБ, ТекАдресЗначенияОбласти.ИндексЗнакоместа);
								ЗначениеВыведено = Истина;
							Иначе
								//определяем какая часть выводится (Целая, дробная или точка)
								Если ТекАдресЗначенияОбласти.ИндексЗнакоместа<ИндексТочкиЧислаНаМЧБ Тогда
									//выводится целая часть
									ПрисвоитьЗначениеОбласти(Область, ?(РезультатПоиска.ЗначениеМЧБ = "-","-",СтрЦелаяЧасть), ТекАдресЗначенияОбласти.ИндексЗнакоместа);
									ЗначениеВыведено = Истина;
								ИначеЕсли ТекАдресЗначенияОбласти.ИндексЗнакоместа > ИндексТочкиЧислаНаМЧБ Тогда
									//выводится дробная часть
									ПрисвоитьЗначениеОбластиДробнойЧастиПриРазделенииНаМЧБНаЦелуюИДробнуюЧасть(Область, СтрДробнаяЧасть, ТекАдресЗначенияОбласти.ИндексЗнакоместа - ИндексТочкиЧислаНаМЧБ);
									ЗначениеВыведено = Истина;
								Иначе
									//выводится точка
									//присваивать ничего не будем, но считаем, что область заполненяется корректно
									ЗначениеВыведено = Истина;
								КонецЕсли;
							КонецЕсли;
						Иначе
							ПрисвоитьЗначениеОбласти(Область, РезультатПоиска.ЗначениеМЧБ, ТекАдресЗначенияОбласти.ИндексЗнакоместа, ТипЗнч(РезультатПоиска.Значение) <> Тип("Строка") ИЛИ НЕ ЗначениеЗаполнено(РезультатПоиска.Значение));
							ЗначениеВыведено = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если НЕ ЗначениеВыведено
					  И ИмяОбласти <> "ОпределениеВысотыСтрокиМногострочнойЧасти" Тогда //служебное поле
					
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Не удалось заполнить область ""%1""!'"), ИмяОбласти);
					Сообщение.Сообщить();
					
				КонецЕсли;
			Иначе
				ПрисвоитьЗначениеОбласти(Область, РезультатПоиска.ЗначениеМЧБ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьЗначениеМЧБ(Область)
	
	ТипЗначения = ТипЗнч(Область.Значение);
	Если ТипЗначения = Тип("Число") Тогда
		ФорматОбласти = Область.Формат;
		СоотвСтрокаФормата = РазобратьСтрокуФормата(ФорматОбласти);
		СоотвСтрокаФормата.Вставить("ЧРД", ".");
		СоотвСтрокаФормата.Вставить("ЧГ", "");
		Результат = Формат(Область.Значение, СобратьСтрокуФормата(СоотвСтрокаФормата));
	ИначеЕсли ТипЗначения = Тип("Строка") Тогда
		Результат = СокрЛП(Область.Значение);
	ИначеЕсли ТипЗначения = Тип("Дата") Тогда
		Результат = Формат(Область.Значение, ?(ПустаяСтрока(Область.Формат), "ДФ=ddMMyyyy", Область.Формат));
	ИначеЕсли ТипЗначения = Тип("Булево") Тогда
		Результат = Формат(Область.Значение, Область.Формат);
	КонецЕсли;
	Возврат СокрЛП(Результат);
	
КонецФункции

&НаСервере
Процедура ПрисвоитьЗначениеОбласти(Область, Знач Значение, ИндексЗнакоместа = 0, ДополнятьСправа_ = Истина)
	
	Если ИндексЗнакоместа <> 0 Тогда
		Если СтрДлина(Значение) >= ИндексЗнакоместа Тогда
			Значение = Сред(Значение, ИндексЗнакоместа, 1);
		Иначе
			Значение = ?(ДополнятьСправа_, "-", "");
		КонецЕсли;
	ИначеЕсли НЕ ЗначениеЗаполнено(Значение) Тогда
		Значение = "-";
	КонецЕсли;
	
	// Специальная обработка для вывода в Приложении 3 к Разделу 1 значений из графы 2 длиной более 3-х символов.
	Если Область.ГраницаСверху.ТипЛинии <> ТипЛинииЯчейкиТабличногоДокумента.Точечная
		И Значение = "-" И СтрНачинаетсяС(Область.Имя, "П00013") Тогда
		Значение = "";
	КонецЕсли;
	
	Если Область.СодержитЗначение = Истина Тогда
		Область.Значение = ВРЕГ(Значение);
	Иначе
		Область.Текст = ВРЕГ(Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрисвоитьЗначениеОбластиДробнойЧастиПриРазделенииНаМЧБНаЦелуюИДробнуюЧасть(Область, Знач ДробнаяЧасть, ИндексЗнакоместа = 0)
	
	Если ИндексЗнакоместа <> 0 Тогда
		Если СтрДлина(ДробнаяЧасть) >= ИндексЗнакоместа Тогда
			ДробнаяЧасть = Сред(ДробнаяЧасть, ИндексЗнакоместа, 1);
		Иначе
			ДробнаяЧасть = ?(ЗначениеЗаполнено(ДробнаяЧасть), "0", "-");
		КонецЕсли;
	ИначеЕсли НЕ ЗначениеЗаполнено(ДробнаяЧасть) Тогда
		ДробнаяЧасть = "-";
	КонецЕсли;
	
	Если Область.СодержитЗначение = Истина Тогда
		Область.Значение = ВРЕГ(ДробнаяЧасть);
	Иначе
		Область.Текст = ВРЕГ(ДробнаяЧасть);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция АдресЗначенияОбласти(Область)
	
	Имя = Область.Имя;
	КореньИмениОбласти = Неопределено;
	СтрИндексЗнакоместа = "";
	ИндексЗнакоместа = 0;
	ДлинаИмени = СтрДлина(Имя);
	Для ИндексВхождения = 1 По ДлинаИмени Цикл
		СтрИндексЗнакоместа = Сред(Имя, ДлинаИмени - ИндексВхождения + 1);
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрИндексЗнакоместа) Тогда
			КореньИмениОбласти = Лев(Имя, ДлинаИмени - ИндексВхождения);
			ИндексЗнакоместа = Число(СтрИндексЗнакоместа);
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Прав(КореньИмениОбласти, 1) = "_" Тогда
		КореньИмениОбласти = Лев(КореньИмениОбласти, СтрДлина(КореньИмениОбласти) - 1);
	КонецЕсли;
		
	Возврат Новый Структура("Корень, ИндексЗнакоместа", КореньИмениОбласти, ИндексЗнакоместа);
	
КонецФункции

&НаСервере
Функция РазобратьСтрокуФормата(Знач СтрокаФормата)
	
	ЗначенияПараметров = Новый Соответствие;
	Пока СтрНайти(СтрокаФормата, ";") <> 0 Цикл
		ВхождениеРазделителя = СтрНайти(СтрокаФормата, ";");
		ДоРазделителя = Лев(СтрокаФормата, ВхождениеРазделителя - 1);
		ВхождениеРавно = СтрНайти(ДоРазделителя, "=");
		Если ВхождениеРавно <> 0 И ВхождениеРавно <> 1 Тогда
			ЗначенияПараметров.Вставить(Лев(ДоРазделителя, ВхождениеРавно - 1), Сред(ДоРазделителя, ВхождениеРавно + 1));
		КонецЕсли;
		СтрокаФормата = Сред(СтрокаФормата, ВхождениеРазделителя + 1);
	КонецЦикла;
	ВхождениеРавно = СтрНайти(СтрокаФормата, "=");
	Если ВхождениеРавно <> 0 И ВхождениеРавно <> 1 Тогда
		ЗначенияПараметров.Вставить(Лев(СтрокаФормата, ВхождениеРавно - 1), Сред(СтрокаФормата, ВхождениеРавно + 1));
	КонецЕсли;
	Возврат ЗначенияПараметров;
	
КонецФункции

&НаСервере
Функция СобратьСтрокуФормата(ПараметрыФормата)
	
	СтрокаФормата = "";
	Для Каждого Параметр Из ПараметрыФормата Цикл
		СтрокаФормата = СтрокаФормата + "; " + Параметр.Ключ + "=" + Параметр.Значение;
	КонецЦикла;
	Если НЕ ПустаяСтрока(СтрокаФормата) Тогда
		СтрокаФормата = Сред(СтрокаФормата, 3);
	КонецЕсли;
	Возврат СтрокаФормата;
	
КонецФункции

&НаСервере
Функция ПолучитьОбщиеРеквизитыСТитульногоЛиста()
	
	МассивИНН         = Новый Массив(12);
	МассивКПП         = Новый Массив(9);
	МассивДатаПодписи = Новый Массив(8);
	
	Обл = ТабличныйДокумент.Области.Найти("ИНН");
	Если НЕ Обл = Неопределено Тогда
		СтрИНН = Обл.Значение;
		Если СтрДлина(СтрИНН) = 10 Тогда
			СтрИНН = СтрИНН + "--";
		КонецЕсли;
		Для Ном = 1 По СтрДлина(СтрИНН) Цикл
			МассивИНН[Ном - 1] = Сред(СтрИНН, Ном, 1);
		КонецЦикла;
	КонецЕсли;
	
	Обл = ТабличныйДокумент.Области.Найти("КПП");
	Если НЕ Обл = Неопределено Тогда
		Для Ном = 1 По СтрДлина(Обл.Значение) Цикл
			МассивКПП[Ном - 1] = Сред(Обл.Значение, Ном, 1);
		КонецЦикла;
	КонецЕсли;
	
	Обл = ТабличныйДокумент.Области.Найти("ДатаПодписи");
	Если НЕ Обл = Неопределено Тогда
		Если ТипЗнч(Обл.Значение) = Тип("Строка") Тогда
			СтрДатаПодписи = Лев(СтрЗаменить(Обл.Значение, ".", ""), 8);
		ИначеЕсли ТипЗнч(Обл.Значение) = Тип("Дата") Тогда
			Если ЗначениеЗаполнено(Обл.Значение) Тогда
				СтрДатаПодписи = Лев(СтрЗаменить(Формат(Обл.Значение, "ДФ = ""дд.ММ.гггг 'г.'"""), ".", ""), 8);
			Иначе
				СтрДатаПодписи = "        ";
			КонецЕсли;
		КонецЕсли;
		Для Ном = 1 По СтрДлина(СтрДатаПодписи) Цикл
			МассивДатаПодписи[Ном - 1] = Сред(СтрДатаПодписи, Ном, 1);
		КонецЦикла;
	КонецЕсли;
	
	ОбщиеРеквизитыРазделов = Новый Структура;
	ОбщиеРеквизитыРазделов.Вставить("ИНН", МассивИНН);
	ОбщиеРеквизитыРазделов.Вставить("КПП", МассивКПП);
	ОбщиеРеквизитыРазделов.Вставить("ДатаПодписи", МассивДатаПодписи);
	
	Если СтруктураРеквизитовФормы.ИП Тогда
		ФИОИП = РегламентированнаяОтчетность.РазложитьФИО(ТабличныйДокумент.Область("НаимОрг").Значение);
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоФамилия",         ФИОИП.Фамилия);
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоИмяИнициал",      Лев(ФИОИП.Имя, 1));
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоОтчествоИнициал", Лев(ФИОИП.Отчество, 1));
	Иначе
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоФамилия",         "-");
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоИмяИнициал",      "-");
		ОбщиеРеквизитыРазделов.Вставить("ФизлицоОтчествоИнициал", "-");
	КонецЕсли;
	
	Возврат ОбщиеРеквизитыРазделов;
	
КонецФункции

#КонецОбласти

#Область Автозаполнение

&НаКлиенте
Процедура ЗаполнитьАвто(Команда)
	
	Отказ = Ложь;
	
	РегламентированнаяОтчетностьКлиентПереопределяемый.ПроверитьВозможностьАвтоЗаполненияРеглОтчета(ИмяФормы, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Команда", Команда);
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьАвтоЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередЗаполнениемРегламентированногоОтчета(
	ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАвтоЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Команда = ДополнительныеПараметры.Команда;
	
	ЗаданиеВыполнено = ЗаполнитьАвтоНаСервере();
	
	Если ЗаданиеВыполнено Тогда
		
		РегламентированнаяОтчетностьКлиент.ОбновитьДеревоРазделовВФормеОтчета(ЭтаФорма);
		
		Если НЕ Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
			Элементы.РазделыОтчета.ТекущаяСтрока
			= Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы()[0].ПолучитьИдентификатор();
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	// Операция еще не завершена, выполняется с помощью фонового задания (асинхронно).
	ПараметрыОбработчикаОжидания = Новый Структура;
	ПараметрыОбработчикаОжидания.Вставить("МинимальныйИнтервал", 1);
	ПараметрыОбработчикаОжидания.Вставить("МаксимальныйИнтервал", 15);
	ПараметрыОбработчикаОжидания.Вставить("ТекущийИнтервал", 1);
	ПараметрыОбработчикаОжидания.Вставить("КоэффициентУвеличенияИнтервала", 1.4);
	
	ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
	
	ФормаДлительнойОперации = ОткрытьФорму("ОбщаяФорма.ДлительнаяОперация", Новый Структура("ИдентификаторЗадания", СтруктураРеквизитовФормы.ИдентификаторЗадания), ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьАвтоНаСервере()
	
	Модифицированность = Истина;
	
	СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	СтруктураРеквизитовФормы.АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация",                  СтруктураРеквизитовФормы.Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета",      СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",       СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	ПараметрыОтчета.Вставить("НомерКорректировки",           СтруктураДанныхТитульный.НомерКорректировки);
	ПараметрыОтчета.Вставить("ДатаПодписи",                  СтруктураДанныхТитульный.ДатаПодписи);
	ПараметрыОтчета.Вставить("УникальныйИдентификаторФормы", ЭтаФорма.УникальныйИдентификатор);
	ПараметрыОтчета.Вставить("АдресВоВременномХранилище",    СтруктураРеквизитовФормы.АдресВоВременномХранилище);
	
	// Помещение данных в контейнер.
	Контейнер = Новый Структура();
	Контейнер.Вставить("Титульный", СтруктураДанныхТитульный);
	Контейнер.Вставить("ФизЛицо",   СтруктураДанныхФизЛицо);
	Для каждого Раздел Из мСтруктураМногоуровневыхРазделов Цикл
		Если НЕ Раздел.Значение.Свойство("Подчиненность") Тогда
			
			Контейнер.Вставить(Раздел.Ключ, ПолучитьИзВременногоХранилища(
			СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + Раздел.Ключ]));
			
			Если Раздел.Ключ = "Раздел3" Тогда
				Если НЕ СтруктураРеквизитовФормы.АвтозаполняемыеПоказатели.Свойство("П000030004001") Тогда
					// Очистка строки 040 раздела 3 в случае, если она не заполняется потребителем.
					ДеревоРаздела = Контейнер["Раздел3"];
					Для Инд = 0 По ДеревоРаздела.Строки.Количество() - 1 Цикл
						ДеревоРаздела.Строки[Инд].Данные.Вставить("П000030004001", "");
					КонецЦикла;
				Конецесли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	ЗаданиеВыполнено = Ложь;
	
	НаименованиеЗадания = НСтр("ru = 'Автоматическое заполнение по данным информационной базы'");
	
	ПараметрыЗаполнения = Новый Массив;
	ПараметрыЗаполнения.Добавить(Сред(Лев(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") - 1), 7));
	ПараметрыЗаполнения.Добавить(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") + 7));
	ПараметрыЗаполнения.Добавить(ПараметрыОтчета);
	ПараметрыЗаполнения.Добавить(Контейнер);
	
	Если ПолучитьСкоростьКлиентскогоСоединения() = СкоростьКлиентскогоСоединения.Низкая Тогда
		ВремяОжидания = 4;
	Иначе
		ВремяОжидания = 2;
	КонецЕсли;
	
	Задание = ФоновыеЗадания.Выполнить("РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет",
	ПараметрыЗаполнения, , НаименованиеЗадания);
	
	Попытка
		Задание.ОжидатьЗавершения(ВремяОжидания);
	Исключение
		// Специальная обработка не требуется. Предположительно, исключение вызвано истечением времени ожидания.
	КонецПопытки;
	
	СтруктураРеквизитовФормы.ИдентификаторЗадания = Задание.УникальныйИдентификатор;
	
	// Если операция уже завершилась, то сразу обрабатываем результат.
	Если ДлительныеОперации.ЗаданиеВыполнено(Задание.УникальныйИдентификатор) Тогда
		
		ЗаданиеВыполнено = Истина;
		
		ЗагрузитьПодготовленныеДанные();
		
	КонецЕсли;
	
	Возврат ЗаданиеВыполнено;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		Если ПроверитьВыполнениеЗадания() Тогда
			ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
			Возврат;
		КонецЕсли;
	Исключение
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		ВызватьИсключение;
	КонецПопытки;
	
	ПараметрыОбработчикаОжидания.ТекущийИнтервал = ПараметрыОбработчикаОжидания.ТекущийИнтервал * ПараметрыОбработчикаОжидания.КоэффициентУвеличенияИнтервала;
	
	Если ПараметрыОбработчикаОжидания.ТекущийИнтервал > ПараметрыОбработчикаОжидания.МаксимальныйИнтервал Тогда
		ПараметрыОбработчикаОжидания.ТекущийИнтервал = ПараметрыОбработчикаОжидания.МаксимальныйИнтервал;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", ПараметрыОбработчикаОжидания.ТекущийИнтервал, Истина);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьВыполнениеЗадания()
	
	Если ДлительныеОперации.ЗаданиеВыполнено(СтруктураРеквизитовФормы.ИдентификаторЗадания) Тогда 
		ЗагрузитьПодготовленныеДанные();
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьПодготовленныеДанные() Экспорт
	
	СтруктураДанных = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы.АдресВоВременномХранилище);
	
	Если ТипЗнч(СтруктураДанных) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Контейнер = Неопределено;
	Если СтруктураДанных.Свойство("Контейнер", Контейнер)
		И ТипЗнч(Контейнер) = Тип("Структура") Тогда
		
		// Получение данных из контейнера.
		СтруктураДанныхТитульный = Контейнер["Титульный"];
		СтруктураДанныхФизЛицо   = Контейнер["ФизЛицо"];
		Для каждого Раздел Из мСтруктураМногоуровневыхРазделов Цикл
			Если НЕ Раздел.Значение.Свойство("Подчиненность") Тогда
				Если Раздел.Ключ = "Раздел3" Тогда
					Если НЕ СтруктураРеквизитовФормы.АвтозаполняемыеПоказатели.Свойство("П000030004001") Тогда
						// Заполнение строки 040 раздела 3 в случае, если она не заполняется потребителем.
						ЗаполнитьСтроку040Раздела3(Контейнер[Раздел.Ключ]);
					Конецесли;
				КонецЕсли;
				СтруктураРеквизитовФормы.Вставить("АдресВоВрХранилищеДеревоДанных" + Раздел.Ключ,
				ПоместитьВоВременноеХранилище(Контейнер[Раздел.Ключ], УникальныйИдентификатор));
			КонецЕсли;
		КонецЦикла;
		
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Очистить();
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
		
		Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_1и1_2"
			ИЛИ СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_3_1"
			ИЛИ СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_3_2"
			ИЛИ СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_4" Тогда
			СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1";
		КонецЕсли;
		
		СформироватьДеревоРазделовОтчетаНаСервере();
		
		Для каждого НайденныйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
			Если НайденныйРаздел.КолонкаРазделыОтчетаСокрНаим = СтруктураРеквизитовФормы.НаимТекущегоРаздела Тогда
				Элементы.РазделыОтчета.ТекущаяСтрока = НайденныйРаздел.ПолучитьИдентификатор();
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		ВывестиДанныеВТабличныйДокумент(СтруктураРеквизитовФормы.НаимТекущегоРаздела,
			СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела);
		
		РасчетНаСервере();
		
		СформироватьРаздел1();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Расшифровать(Команда)
	
	ЯчейкаРасшифровки = Элементы.ТабличныйДокумент.ТекущаяОбласть;
	ТекущаяСтрока = ЯчейкаРасшифровки.Верх;
	
	Раздел1Прил1КодТарифа = "";
	ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П000110000101");
	Если ОбластьТаблДокумента <> Неопределено Тогда
		Если ОбластьТаблДокумента.СодержитЗначение = Истина Тогда
			Раздел1Прил1КодТарифа = СокрЛП(ОбластьТаблДокумента.Значение);
		Иначе
			Раздел1Прил1КодТарифа = СокрЛП(ОбластьТаблДокумента.Текст);
		КонецЕсли;
	КонецЕсли;
	
	Раздел1Прил1Подр1_3_1ПризнакОснования = "";
	НомерСтроки = 1;
	ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П11131М100101_1");
	Пока ОбластьТаблДокумента <> Неопределено Цикл
		Если ОбластьТаблДокумента.Верх > ТекущаяСтрока Тогда
			Прервать;
		КонецЕсли;
		Раздел1Прил1Подр1_3_1ПризнакОснования = СокрЛП(ОбластьТаблДокумента.Значение);
		НомерСтроки = НомерСтроки + 1;
		ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П11131М100101" + СтрокаСИндексомПоказателя(НомерСтроки));
	КонецЦикла;
	
	Раздел1Прил1Подр1_3_2КодОснования = "";
	НомерСтроки = 1;
	ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П11132М100101_1");
	Пока ОбластьТаблДокумента <> Неопределено Цикл
		Если ОбластьТаблДокумента.Верх > ТекущаяСтрока Тогда
			Прервать;
		КонецЕсли;
		Раздел1Прил1Подр1_3_2КодОснования = СокрЛП(ОбластьТаблДокумента.Значение);
		НомерСтроки = НомерСтроки + 1;
		ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П11132М100101" + СтрокаСИндексомПоказателя(НомерСтроки));
	КонецЦикла;
	
	Раздел1Прил1Подр1_3_2ОснованиеЗаполнения = "";
	НомерСтроки = 1;
	ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П11132М100201_1");
	Пока ОбластьТаблДокумента <> Неопределено Цикл
		Если ОбластьТаблДокумента.Верх > ТекущаяСтрока Тогда
			Прервать;
		КонецЕсли;
		Раздел1Прил1Подр1_3_2ОснованиеЗаполнения = СокрЛП(ОбластьТаблДокумента.Значение);
		НомерСтроки = НомерСтроки + 1;
		ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П11132М100201" + СтрокаСИндексомПоказателя(НомерСтроки));
	КонецЦикла;
	
	Раздел1Прил1Подр1_3_2КодКлассаУсловий = "";
	НомерСтроки = 1;
	ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П11132М100301_1");
	Пока ОбластьТаблДокумента <> Неопределено Цикл
		Если ОбластьТаблДокумента.Верх > ТекущаяСтрока Тогда
			Прервать;
		КонецЕсли;
		Раздел1Прил1Подр1_3_2КодКлассаУсловий = СокрЛП(ОбластьТаблДокумента.Значение);
		НомерСтроки = НомерСтроки + 1;
		ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П11132М100301" + СтрокаСИндексомПоказателя(НомерСтроки));
	КонецЦикла;
	
	Раздел1Прил1Подр1_4КодОснования = "";
	НомерСтроки = 1;
	ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П01114М100101_1");
	Пока ОбластьТаблДокумента <> Неопределено Цикл
		Если ОбластьТаблДокумента.Верх > ТекущаяСтрока Тогда
			Прервать;
		КонецЕсли;
		Раздел1Прил1Подр1_4КодОснования = СокрЛП(ОбластьТаблДокумента.Значение);
		НомерСтроки = НомерСтроки + 1;
		ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П01114М100101" + СтрокаСИндексомПоказателя(НомерСтроки));
	КонецЦикла;
	
	ПараметрыОтчета = Новый Структура();
	
	ПараметрыОтчета.Вставить("Организация",                СтруктураРеквизитовФормы.Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета",    СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",     СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	ПараметрыОтчета.Вставить("ДатаПодписи",                СтруктураДанныхТитульный.ДатаПодписи);
	ПараметрыОтчета.Вставить("ЗначениеТекущегоПоказателя", ЯчейкаРасшифровки.Текст);
	
	ПараметрыОтчета.Вставить("Раздел1Прил1КодТарифа",                    Раздел1Прил1КодТарифа);
	ПараметрыОтчета.Вставить("Раздел1Прил1Подр1_3_1ПризнакОснования",    Раздел1Прил1Подр1_3_1ПризнакОснования);
	ПараметрыОтчета.Вставить("Раздел1Прил1Подр1_3_2КодОснования",        Раздел1Прил1Подр1_3_2КодОснования);
	ПараметрыОтчета.Вставить("Раздел1Прил1Подр1_3_2ОснованиеЗаполнения", Раздел1Прил1Подр1_3_2ОснованиеЗаполнения);
	ПараметрыОтчета.Вставить("Раздел1Прил1Подр1_3_2КодКлассаУсловий",    Раздел1Прил1Подр1_3_2КодКлассаУсловий);
	ПараметрыОтчета.Вставить("Раздел1Прил1Подр1_4КодОснования",          Раздел1Прил1Подр1_4КодОснования);
	
	ИДИменПоказателей = Новый Массив();
	ИДИменПоказателей.Добавить(ЯчейкаРасшифровки.Имя);
	
	РегламентированнаяОтчетностьКлиент.ОткрытьРасшифровкуОтчета(
		Сред(Лев(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") - 1), 7),
		Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, ".Форма.") + 7), ИДИменПоказателей, ПараметрыОтчета);
	
КонецПроцедуры

#КонецОбласти

#Область ИмпортДанныхРаздела3

&НаКлиенте
Процедура Импортировать(Команда)
	
	АдресФайла  = "";
	ВыбИмяФайла = "";
	
	Оп = Новый ОписаниеОповещения("ПомещениеФайлаСДаннымиДляРаздела3", ЭтотОбъект);
	НачатьПомещениеФайла(Оп, АдресФайла, ВыбИмяФайла, Истина, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПомещениеФайлаСДаннымиДляРаздела3(Результат, АдресФайла, ВыбИмяФайла, ДопПараметры) Экспорт
	
	Если Результат Тогда
		
		Если Прав(ВыбИмяФайла, 5) <> ".pncb" Тогда
			
			ПоказатьПредупреждение(, НСтр(
			"ru='Необходимо выбрать файл, содержащий персонифицированные сведения о застрахованных лицах, с расширением ""pncb""!'"));
			
			Возврат;
			
		КонецЕсли;
		
		Каталог = "";
		СтрокаПоиска = ВыбИмяФайла;
		
		Пока СтрДлина(СтрокаПоиска) > 0 Цикл
			
			Если Прав(СтрокаПоиска, 1) = "\" Тогда
				
				Каталог = Лев(СтрокаПоиска, СтрДлина(СтрокаПоиска));
				
				Прервать;
				
			Иначе
				
				СтрокаПоиска = Лев(СтрокаПоиска, СтрДлина(СтрокаПоиска) - 1);
				
			КонецЕсли;
			
		КонецЦикла;
		
		ЗаполнениеРаздела3ВыполненоУспешно = Ложь;
		
		ЗаполнитьРаздел3ДаннымиИзФайла(АдресФайла, ВыбИмяФайла, Каталог, ЗаполнениеРаздела3ВыполненоУспешно);
		
		Если ЗаполнениеРаздела3ВыполненоУспешно Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Данные файла %1, содержащего персонифицированные сведения о застрахованных лицах, успешно импортированы.'"), ВыбИмяФайла);
			Сообщение.Сообщить();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРаздел3ДаннымиИзФайла(АдресФайла, ПолноеИмяФайла, Каталог, ЗаполнениеРаздела3ВыполненоУспешно)
	
	СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	КаталогВремФайлов = КаталогВременныхФайлов();
	ФайлЗагрузки = КаталогВремФайлов + СтрЗаменить(ПолноеИмяФайла, Каталог, "");
	ФайлЗагрузкиДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайла);
	ФайлЗагрузкиДвоичныеДанные.Записать(ФайлЗагрузки);
	
	ФайлСДанными = Новый ТекстовыйДокумент();
	ФайлСДанными.Прочитать(ФайлЗагрузки, "windows-1251");
	
	КоличествоСтрок = ФайлСДанными.КоличествоСтрок();
	
	Если КоличествоСтрок < 3 Тогда
		СообщитьОбОшибкеФорматаИмпорта();
		УдалитьВременныйФайл(ФайлЗагрузки);
		Возврат;
	КонецЕсли;
	
	СтрокаРеквизитов = ФайлСДанными.ПолучитьСтроку(1);
	МассивРеквизитов = СтроковыеФункцииКлиентсервер.РазложитьСтрокуВМассивПодстрок(СтрокаРеквизитов, ";");
	Если МассивРеквизитов.Количество() < 4 Тогда
		СообщитьОбОшибкеФорматаИмпорта();
		УдалитьВременныйФайл(ФайлЗагрузки);
		Возврат;
	КонецЕсли;
	
	Файл_Версия  = СокрЛП(МассивРеквизитов[0]);
	Файл_Год     = СокрЛП(МассивРеквизитов[1]);
	Файл_Квартал = СокрЛП(МассивРеквизитов[2]);
	Файл_ИНН     = СокрЛП(МассивРеквизитов[3]);
	Файл_КПП     = ?(МассивРеквизитов.Количество() >= 5, ВРег(СокрЛП(МассивРеквизитов[4])), "");
	
	Отчет_Версия = "5.01";
	Отчет_Квартал = Строка(Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) / 3);
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		Отчет_Год = СокрЛП(ТабличныйДокумент.Область("ОтчетГод").Значение);
		Отчет_ИНН = СокрЛП(ТабличныйДокумент.Область("ИНН").Значение);
		Отчет_КПП = ВРег(СокрЛП(ТабличныйДокумент.Область("КПП").Значение));
	Иначе
		Отчет_Год = СокрЛП(СтруктураДанныхТитульный.ОтчетГод);
		Отчет_ИНН = СокрЛП(СтруктураДанныхТитульный.ИНН);
		Отчет_КПП = ВРег(СокрЛП(СтруктураДанныхТитульный.КПП));
	КонецЕсли;
	
	Если НЕ (Файл_Версия = Отчет_Версия
		И Файл_Год = Отчет_Год
		И Файл_Квартал = Отчет_Квартал
		И Файл_ИНН = Отчет_ИНН
		И Файл_КПП = Отчет_КПП) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр(
		"ru='Данные файла, содержащего персонифицированные сведения о застрахованных лицах, не соответствует экземпляру отчета!'");
		Сообщение.Сообщить();
		УдалитьВременныйФайл(ФайлЗагрузки);
		Возврат;
	КонецЕсли;
	
	СохраненноеДеревоРаздела3 = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел3"]);
	
	ИнициализироватьМногоуровневыйРаздел("Раздел3");
	
	ЭталонноеДеревоРаздела3 = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел3"]);
	
	ИнициализироватьМногоуровневыйРаздел("Раздел3");
	
	ДеревоРаздела3 = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел3"]);
	
	ЭтоПерваяСтраницаРаздела3 = Ложь;
	ПредыдущийВидСведений = Неопределено;
	
	Для Инд = 2 По КоличествоСтрок Цикл
		
		ДанныеСтроки = СтроковыеФункцииКлиентсервер.РазложитьСтрокуВМассивПодстрок(
		ФайлСДанными.ПолучитьСтроку(Инд), ";");
		
		Попытка
			
			ВидСведений = СокрЛП(ДанныеСтроки[0]);
			
			Если ВидСведений = "3" Тогда
				
				ЭтоПерваяСтраницаРаздела3 = ?(Инд = 2, Истина, Ложь);
				
				Если ЭтоПерваяСтраницаРаздела3 Тогда
					ВеткаРаздела3 = ДеревоРаздела3.Строки[0];
				Иначе
					ВеткаРаздела3 = НоваяСтраницаРаздела3(ДеревоРаздела3, ЭталонноеДеревоРаздела3);
				КонецЕсли;
				
				ВеткаРаздела3.Данные.Вставить("П000030001001", СокрЛП(ДанныеСтроки[1]));
				ВеткаРаздела3.Данные.Вставить("П000030004001", СокрЛП(ДанныеСтроки[4]));
				
			ИначеЕсли ВидСведений = "31" Тогда
				
				ВеткаРаздела3.Данные.Вставить("П000310006001", СокрЛП(ДанныеСтроки[1]));
				ВеткаРаздела3.Данные.Вставить("П000310007001", СокрЛП(ДанныеСтроки[2]));
				ВеткаРаздела3.Данные.Вставить("П000310008001", СокрЛП(ДанныеСтроки[3]));
				ВеткаРаздела3.Данные.Вставить("П000310009001", СокрЛП(ДанныеСтроки[4]));
				ВеткаРаздела3.Данные.Вставить("П000310010001", СокрЛП(ДанныеСтроки[5]));
				ВеткаРаздела3.Данные.Вставить("П000310012001", СокрЛП(ДанныеСтроки[7]));
				ВеткаРаздела3.Данные.Вставить("П000310013001", СокрЛП(ДанныеСтроки[8]));
				ВеткаРаздела3.Данные.Вставить("П000310014001", СокрЛП(ДанныеСтроки[9]));
				ВеткаРаздела3.Данные.Вставить("П000310015001", СокрЛП(ДанныеСтроки[10]));
				ВеткаРаздела3.Данные.Вставить("П000310015002", СокрЛП(ДанныеСтроки[11]));
				ВеткаРаздела3.Данные.Вставить("П000310016001", СокрЛП(ДанныеСтроки[12]));
				ВеткаРаздела3.Данные.Вставить("П000310017001", СокрЛП(ДанныеСтроки[13]));
				ВеткаРаздела3.Данные.Вставить("П000310018001", СокрЛП(ДанныеСтроки[14]));
				
				ДатаРождения = СокрЛП(ДанныеСтроки[6]);
				ВеткаРаздела3.Данные.Вставить("П000310011001",
				Дата(Прав(ДатаРождения, 4) + Сред(ДатаРождения, 4, 2) + Лев(ДатаРождения, 2)));
				
			ИначеЕсли ВидСведений = "321" Тогда
				
				ДеревоМнЧ = ВеткаРаздела3.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы321М1];
				
				Если ПредыдущийВидСведений = ВидСведений Тогда
					СтрокаМнЧ = ДеревоМнЧ.Строки.Добавить();
					СтрокаМнЧ.Данные = Новый Структура();
					СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура();
				Иначе
					СтрокаМнЧ = ДеревоМнЧ.Строки[0];
				КонецЕсли;
				
				СтрокаМнЧ.Данные.Вставить("П00321М119001", СокрЛП(ДанныеСтроки[1]));
				СтрокаМнЧ.Данные.Вставить("П00321М120001", СокрЛП(ДанныеСтроки[2]));
				СтрокаМнЧ.Данные.Вставить("П00321М121001", Число(ДанныеСтроки[3]));
				СтрокаМнЧ.Данные.Вставить("П00321М122001", Число(ДанныеСтроки[4]));
				СтрокаМнЧ.Данные.Вставить("П00321М123001", Число(ДанныеСтроки[5]));
				СтрокаМнЧ.Данные.Вставить("П00321М124001", Число(ДанныеСтроки[6]));
				
			ИначеЕсли ВидСведений = "322" Тогда
				
				ДеревоМнЧ = ВеткаРаздела3.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы322М1];
				
				Если ПредыдущийВидСведений = ВидСведений Тогда
					СтрокаМнЧ = ДеревоМнЧ.Строки.Добавить();
					СтрокаМнЧ.Данные = Новый Структура();
					СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура();
				Иначе
					СтрокаМнЧ = ДеревоМнЧ.Строки[0];
				КонецЕсли;
				
				СтрокаМнЧ.Данные.Вставить("П00322М126001", СокрЛП(ДанныеСтроки[1]));
				СтрокаМнЧ.Данные.Вставить("П00322М127001", СокрЛП(ДанныеСтроки[2]));
				СтрокаМнЧ.Данные.Вставить("П00322М128001", Число(ДанныеСтроки[3]));
				СтрокаМнЧ.Данные.Вставить("П00322М129001", Число(ДанныеСтроки[4]));
				
			Иначе
				
				СообщитьОбОшибкеФорматаИмпорта();
				УдалитьВременныйФайл(ФайлЗагрузки);
				Возврат;
				
			КонецЕсли;
			
		Исключение
			
			СообщитьОбОшибкеФорматаИмпорта();
			УдалитьВременныйФайл(ФайлЗагрузки);
			Возврат;
			
		КонецПопытки;
		
		ПредыдущийВидСведений = ВидСведений;
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ДеревоРаздела3,
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел3"]);
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Очистить();
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_1и1_2"
		ИЛИ СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_3_1"
		ИЛИ СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_3_2"
		ИЛИ СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_4" Тогда
		СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1";
	КонецЕсли;
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	Для каждого НайденныйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
		Если НайденныйРаздел.КолонкаРазделыОтчетаСокрНаим = СтруктураРеквизитовФормы.НаимТекущегоРаздела Тогда
			Элементы.РазделыОтчета.ТекущаяСтрока = НайденныйРаздел.ПолучитьИдентификатор();
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ВывестиДанныеВТабличныйДокумент(СтруктураРеквизитовФормы.НаимТекущегоРаздела,
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела);
	
	РасчетНаСервере("Раздел3");
	
	ЗаполнениеРаздела3ВыполненоУспешно = Истина;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Функция НоваяСтраницаРаздела3(ДеревоРаздела3, ЭталонноеДеревоРаздела3)
	
	ПерваяВетка = ДеревоРаздела3.Строки[0];
	
	НоваяВетка = ДеревоРаздела3.Строки.Добавить();
	
	НоваяВетка.Данные = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(
	ЭталонноеДеревоРаздела3.Строки[0].Данные);
	
	НовыеДанныеМногострочныхЧастей = Новый Структура;
	
	Для каждого ЭлементМнЧ Из ЭталонноеДеревоРаздела3.Строки[0].ДанныеМногострочныхЧастей Цикл
		
		ИмяМнЧ = ЭлементМнЧ.Ключ;
		
		ДеревоМнЧ = ЭлементМнЧ.Значение;
		
		НовоеДеревоМнЧ = Новый ДеревоЗначений;
		НовоеДеревоМнЧ.Колонки.Добавить("Данные");
		НовоеДеревоМнЧ.Колонки.Добавить("ДанныеМногострочныхЧастей");
		
		ПерваяСтрокаНовогоДереваМнЧ = НовоеДеревоМнЧ.Строки.Добавить();
		
		ПерваяСтрокаНовогоДереваМнЧ.Данные
		= ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ДеревоМнЧ.Строки[0].Данные);
		
		ПерваяСтрокаНовогоДереваМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
		
		НовыеДанныеМногострочныхЧастей.Вставить(ЭлементМнЧ.Ключ, НовоеДеревоМнЧ);
		
	КонецЦикла;
	
	НоваяВетка.ДанныеМногострочныхЧастей = НовыеДанныеМногострочныхЧастей;
	
	Возврат НоваяВетка;
	
КонецФункции

&НаСервере
Процедура СообщитьОбОшибкеФорматаИмпорта()
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = НСтр("ru='Нарушен формат файла, содержащего персонифицированные сведения о застрахованных лицах!'");
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьВременныйФайл(ИмяУдаляемогоФайла)
	
	УдаляемыйФайл = Новый Файл(ИмяУдаляемогоФайла);
	Если УдаляемыйФайл.Существует() Тогда
		УдалитьФайлы(ИмяУдаляемогоФайла);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДатуВЯчейках(Форма)
	
	Форма.ТабличныйДокумент.Области.ДатаПодписи.Значение = Форма.ДатаПодписи;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияОбОрганизацииНаСервере(ВПрограммеИзмененаДатаПодписи = Ложь)
	
	Если НЕ ВПрограммеИзмененаДатаПодписи Тогда
	
		СтрокаСведений = "ИННЮЛ, КППЮЛ, НаимЮЛПол, КодНО, НаимНО, ТипНП, ТелОрганизации, ФИО, ОКВЭД";
		
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
			СтруктураРеквизитовФормы.Организация, ДатаПодписи, СтрокаСведений);
		
		ИНН = СокрЛП(СведенияОбОрганизации.ИННЮЛ);
		КПП = СокрЛП(СведенияОбОрганизации.КППЮЛ);
		
		ТабличныйДокумент.Области.ИНН.Значение = ИНН;
		ТабличныйДокумент.Области.КПП.Значение = КПП;
		
		КодНО = СведенияОбОрганизации.КодНО;
		Для Инд = СтрДлина(СведенияОбОрганизации.КодНО) + 1 По 4 Цикл
			КодНО = " " + КодНО;
		КонецЦикла;
		ТабличныйДокумент.Области.НалоговыйОрган.Значение = КодНО;
		
		СсылкаНаРегистрациюВНО = РеквизитЭлементаСправочника(СтруктураРеквизитовФормы.Организация);
		УстановитьКодПоОКТМОИКБКВРазделах1и2ПриАктивномТитульномЛисте(СсылкаНаРегистрациюВНО);
		
		Если СтруктураРеквизитовФормы.ИП Тогда
			НаименованиеОрганизации = СведенияОбОрганизации.ФИО;
		Иначе
			НаименованиеОрганизации = СведенияОбОрганизации.НаимЮлПол;
		КонецЕсли;
		ТабличныйДокумент.Области.НаимОрг.Значение = СокрЛП(НаименованиеОрганизации);
		
		ТабличныйДокумент.Области.ТелОрганизации.Значение = СокрЛП(СведенияОбОрганизации.ТелОрганизации);
		
		ЗаполнитьДатуВЯчейках(ЭтаФорма);
		
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.ИП
		И НЕ ЗначениеЗаполнено(ТабличныйДокумент.Области.ИНН.Значение) Тогда
		
		СтрокаСведений = "ДатаРожд, МестоРожд, Гражд, КодУдЛичн, ОрганВыданУдЛичн, СерияУдЛичн, НомерУдЛичн, ДатаУдЛичн,
			|ИндексМЖ, КодСубъектМЖ, РайонМЖ, ГородМЖ, НПунктМЖ, УлицаМЖ, ДомМЖ, КорпусМЖ, КвартираМЖ";
		
		СведенияОФизЛице = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
			СтруктураРеквизитовФормы.Организация, ДатаПодписи, СтрокаСведений);
		
		Если СведенияОФизЛице.Свойство("ДатаРожд") Тогда
			СтруктураДанныхФизЛицо.ДатаРождения
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.ДатаРожд), СведенияОФизЛице.ДатаРожд, '00010101');
		КонецЕсли;
		Если СведенияОФизЛице.Свойство("МестоРожд") Тогда
			СтруктураДанныхФизЛицо.МестоРождения
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.МестоРожд), СокрЛП(СведенияОФизЛице.МестоРожд), "");
		КонецЕсли;
		Если СведенияОФизЛице.Свойство("Гражд") Тогда
			СтруктураДанныхФизЛицо.КодСтраныГражданства
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.Гражд), СокрЛП(СведенияОФизЛице.Гражд), "");
		КонецЕсли;
		Если СведенияОФизЛице.Свойство("КодУдЛичн") Тогда
			СтруктураДанныхФизЛицо.КодВидаДокумента
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.КодУдЛичн), СокрЛП(СведенияОФизЛице.КодУдЛичн), "");
		КонецЕсли;
		Если СведенияОФизЛице.Свойство("СерияУдЛичн") И СведенияОФизЛице.Свойство("НомерУдЛичн") Тогда
			СерУдЛичн = ?(ЗначениеЗаполнено(СведенияОФизЛице.СерияУдЛичн), СокрЛП(СведенияОФизЛице.СерияУдЛичн), "");
			НомУдЛичн = ?(ЗначениеЗаполнено(СведенияОФизЛице.НомерУдЛичн), СокрЛП(СведенияОФизЛице.НомерУдЛичн), "");
			СтруктураДанныхФизЛицо.СерияДокумента = СерУдЛичн;
			СтруктураДанныхФизЛицо.НомерДокумента = НомУдЛичн;
		КонецЕсли;
		Если СведенияОФизЛице.Свойство("ОрганВыданУдЛичн") Тогда
			СтруктураДанныхФизЛицо.КемВыданДокумент
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.ОрганВыданУдЛичн), СокрЛП(СведенияОФизЛице.ОрганВыданУдЛичн), "");
		КонецЕсли;
		Если СведенияОФизЛице.Свойство("ДатаУдЛичн") Тогда
			СтруктураДанныхФизЛицо.ДатаВыдачи
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.ДатаУдЛичн), СведенияОФизЛице.ДатаУдЛичн, '00010101');
		КонецЕсли;
		
		Если СведенияОФизЛице.Свойство("ИндексМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресИндекс
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.ИндексМЖ), СокрЛП(СведенияОФизЛице.ИндексМЖ), "");
		КонецЕсли;
		Если СведенияОФизЛице.Свойство("КодСубъектМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресКодРегиона
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.КодСубъектМЖ), СокрЛП(СведенияОФизЛице.КодСубъектМЖ), "");
		КонецЕсли;
		Если СведенияОФизЛице.Свойство("РайонМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресРайон
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.РайонМЖ), СокрЛП(СведенияОФизЛице.РайонМЖ), "");
		КонецЕсли;
		Если СведенияОФизЛице.Свойство("ГородМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресГород
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.ГородМЖ), СокрЛП(СведенияОФизЛице.ГородМЖ), "");
		КонецЕсли;
		Если СведенияОФизЛице.Свойство("НПунктМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресНаселенныйПункт
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.НПунктМЖ), СокрЛП(СведенияОФизЛице.НПунктМЖ), "");
		КонецЕсли;
		Если СведенияОФизЛице.Свойство("УлицаМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресУлица
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.УлицаМЖ), СокрЛП(СведенияОФизЛице.УлицаМЖ), "");
		КонецЕсли;
		Если СведенияОФизЛице.Свойство("ДомМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресНомерДома
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.ДомМЖ), СокрЛП(СведенияОФизЛице.ДомМЖ), "");
		КонецЕсли;
		Если СведенияОФизЛице.Свойство("КорпусМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресНомерКорпуса
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.КорпусМЖ), СокрЛП(СведенияОФизЛице.КорпусМЖ), "");
		КонецЕсли;
		Если СведенияОФизЛице.Свойство("КвартираМЖ") Тогда
			СтруктураДанныхФизЛицо.АдресНомерКвартиры
			= ?(ЗначениеЗаполнено(СведенияОФизЛице.КвартираМЖ), СокрЛП(СведенияОФизЛице.КвартираМЖ), "");
		КонецЕсли;
		
	ИначеЕсли НЕ СтруктураРеквизитовФормы.ИП Тогда
		
		СтруктураДанныхФизЛицо.ДатаРождения = '00010101';
		СтруктураДанныхФизЛицо.МестоРождения = "";
		СтруктураДанныхФизЛицо.КодСтраныГражданства = "";
		СтруктураДанныхФизЛицо.КодВидаДокумента = "";
		СтруктураДанныхФизЛицо.СерияДокумента = "";
		СтруктураДанныхФизЛицо.НомерДокумента = "";
		СтруктураДанныхФизЛицо.КемВыданДокумент = "";
		СтруктураДанныхФизЛицо.ДатаВыдачи = '00010101';
		СтруктураДанныхФизЛицо.АдресИндекс = "";
		СтруктураДанныхФизЛицо.АдресКодРегиона = "";
		СтруктураДанныхФизЛицо.АдресРайон = "";
		СтруктураДанныхФизЛицо.АдресГород = "";
		СтруктураДанныхФизЛицо.АдресНаселенныйПункт = "";
		СтруктураДанныхФизЛицо.АдресУлица = "";
		СтруктураДанныхФизЛицо.АдресНомерДома = "";
		СтруктураДанныхФизЛицо.АдресНомерКорпуса = "";
		СтруктураДанныхФизЛицо.АдресНомерКвартиры = "";
		
	КонецЕсли;
	
	РегламентированнаяОтчетность.ПолучитьЗначениеОКВЭД(ДатаПодписи, СтруктураРеквизитовФормы);
	РегламентированнаяОтчетностьКлиентСервер.УстановитьЗначениеОКВЭД(ДатаПодписи,
																	 СтруктураРеквизитовФормы,
																	 ТабличныйДокумент.Области.ОКВЭД.Значение);
	
	ЗаполнитьСведенияОПодписантах();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияОПодписантах() Экспорт
	
	ТипПодписанта = "1";
	Подписант = "";
	НаименованиеОрганизацииПредставителя = "";
	ДокументПредставителя = "";
	
	//выясним, есть ли представитель
	КодНО = СокрЛП(ТабличныйДокумент.Области.НалоговыйОрган.Значение);
	КПП   = СокрЛП(ТабличныйДокумент.Области.КПП.Значение);

	СведенияОПредставителе = РегламентированнаяОтчетностьВызовСервера.ПолучитьПоКодамСведенияОПредставителе(СтруктураРеквизитовФормы.Организация, КодНО, КПП);
	
	ТипПодписанта = СведенияОПредставителе.ТипПодписанта;
	
	Если ТипПодписанта = "1" Тогда
		//представителя нет
		Если РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(СтруктураРеквизитовФормы.Организация) Тогда
			//подписант - руководитель
			СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(СтруктураРеквизитовФормы.Организация, ДатаПодписи, "ФИОРук, ФИО");
			Подписант = СокрЛП(?(ЗначениеЗаполнено(СведенияОбОрганизации.ФИОРук), СведенияОбОрганизации.ФИОРук, СведенияОбОрганизации.ФИО));	
		КонецЕсли;
	Иначе
		//есть представитель, подписант - он
	    Подписант 								= СведенияОПредставителе.ФИОПредставителя;
 		НаименованиеОрганизацииПредставителя 	= СведенияОПредставителе.НаименованиеОрганизацииПредставителя;
		ДокументПредставителя 					= СведенияОПредставителе.ДокументПредставителя;
	КонецЕсли;
	
	ТабличныйДокумент.Области.ПрПодп.Значение = ТипПодписанта;
	ТабличныйДокумент.Области.ОргПодписант.Значение = Подписант;
	ТабличныйДокумент.Области.ОргУп.Значение = НаименованиеОрганизацииПредставителя;
	ТабличныйДокумент.Области.ДокУпПред.Значение = ДокументПредставителя;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКодПоОКТМОИКБКВРазделах1и2ПриАктивномТитульномЛисте(СсылкаНаРегистрациюВНО)
	
	Если СсылкаНаРегистрациюВНО <> Неопределено Тогда
		ОКТМО = СсылкаНаРегистрациюВНО.КодПоОКТМО;
	Иначе
		ОКТМО = "";
	КонецЕсли;
	
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]);
	
	ДеревоРаздела.Строки[0].Данные.Вставить("П000010001001", ОКТМО);
	
	ДеревоРаздела.Строки[0].Данные.Вставить("П000010002001", "18210202010061010160");
	ДеревоРаздела.Строки[0].Данные.Вставить("П000010004001", "18210202101081013160");
	ДеревоРаздела.Строки[0].Данные.Вставить("П000010010001", "18210202090071010160");
	
	ПоместитьВоВременноеХранилище(ДеревоРаздела,
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]);
	
	Если СокрЛП(ТабличныйДокумент.Область("ПоМесту").Значение) = "124" Тогда
		
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел2"]);
		
		ДеревоРаздела.Строки[0].Данные.Вставить("П000020001001", ОКТМО);
		
		ДеревоРаздела.Строки[0].Данные.Вставить("П000020002001", "18210202140061110160");
		ДеревоРаздела.Строки[0].Данные.Вставить("П000020004001", "18210202103081013160");
		
		ПоместитьВоВременноеХранилище(ДеревоРаздела,
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел2"]);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РеквизитЭлементаСправочника(Ссылка)
	
	Если Ссылка.Метаданные().Реквизиты.Найти("РегистрацияВНалоговомОргане") <> Неопределено Тогда
		Возврат Ссылка.РегистрацияВНалоговомОргане;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ВвестиПоказатель(Элемент, Область, КодПоказателя, Знач ЭтоСумма, Знач ТекстВыбора, ТаблицаВыбора, СтандартнаяОбработка, КолонкаПоиска = "Код") Экспорт
	
	Если ТаблицаВыбора = Неопределено ИЛИ (СтруктураРеквизитовФормы.мАвтоВыборКодов И НЕ Область.Имя = "ПоМесту") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если Область.Имя = КодПоказателя ИЛИ МногострочнаяЧастьТекущейОбласти(ЭтаФорма, Область.Имя) <> Неопределено Тогда
		ИсходноеЗначение = ?(ТипЗнч(Область.Значение) = Тип("Строка"), СокрЛП(Область.Значение), Область.Значение);
	Иначе
		Разделитель = ?(Лев(Область.Имя, СтрДлина(КодПоказателя) + 1) = КодПоказателя + "_", "_", "");
		ИндексОбласти = 1;
		ИсходноеЗначение = "";
		Пока ЭтаФорма[ТекущийЭлемент.Имя].Области.Найти(КодПоказателя + Разделитель + Формат(ИндексОбласти, "ЧГ=")) <> Неопределено Цикл
			ИсходноеЗначение = ИсходноеЗначение + Строка(ЭтаФорма[ТекущийЭлемент.Имя].Области[КодПоказателя + Разделитель + Формат(ИндексОбласти, "ЧГ=")].Значение);
			ИндексОбласти = ИндексОбласти + 1;
		КонецЦикла;
		ИсходноеЗначение = СокрЛП(ИсходноеЗначение);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",          ТекстВыбора);
	ПараметрыФормы.Вставить("ТаблицаЗначений",    ТаблицаВыбора);
	ПараметрыФормы.Вставить("СтруктураДляПоиска", Новый Структура(КолонкаПоиска, ИсходноеЗначение));
	
	ДополнительныеПараметры = Новый Структура("ИндексОбласти, КодПоказателя, КолонкаПоиска, Область, Разделитель, Элемент", ИндексОбласти, КодПоказателя, КолонкаПоиска, Область, Разделитель, Элемент);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВвестиПоказательЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ФормаВыбораЗначенияИзТаблицы", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиПоказательЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	ИндексОбласти = ДополнительныеПараметры.ИндексОбласти;
	КодПоказателя = ДополнительныеПараметры.КодПоказателя;
	КолонкаПоиска = ДополнительныеПараметры.КолонкаПоиска;
	Область = ДополнительныеПараметры.Область;
	Разделитель = ДополнительныеПараметры.Разделитель;
	Элемент = ДополнительныеПараметры.Элемент;
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.Имя = "ПоМесту" Тогда
		
		ПрежнийКодПоМесту = СокрЛП(Область.Значение);
		НовыйКодПоМесту = СокрЛП(РезультатВыбора[КолонкаПоиска]);
		
		ДополнительныеПараметры = Новый Структура(
		"Область, НовыйКодПоМесту", Область, НовыйКодПоМесту);
	
		Если ПрежнийКодПоМесту = "124" И НовыйКодПоМесту <> "124" Тогда
			
			Оп = Новый ОписаниеОповещения("ВопросВвестиКодПоМестуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='При изменении значения кода по месту нахождения (учета) с ""124"" на ""%1""
			|Раздел 2 будет очищен и исключен из состава дерева разделов. Продолжить?'"), НовыйКодПоМесту);
			ПоказатьВопрос(Оп, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
			
			Возврат;
			
		ИначеЕсли ПрежнийКодПоМесту <> "124" И НовыйКодПоМесту = "124" Тогда
			
			ВопросВвестиКодПоМестуЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Область.Имя = КодПоказателя ИЛИ МногострочнаяЧастьТекущейОбласти(ЭтаФорма, Область.Имя) <> Неопределено Тогда
		Область.Значение = РезультатВыбора[КолонкаПоиска];
	Иначе
		СтрокаРезультатВыбора = Строка(РезультатВыбора[КолонкаПоиска]);
		Для Инд = СтрДлина(СтрокаРезультатВыбора) + 1 По ИндексОбласти - 1 Цикл
			СтрокаРезультатВыбора = " " + РезультатВыбора[КолонкаПоиска];
		КонецЦикла;
		Для Инд = 1 По ИндексОбласти - 1 Цикл
			ЭтаФорма[ТекущийЭлемент.Имя].Области[КодПоказателя + Разделитель + Формат(Инд, "ЧГ=")].Значение = СокрЛП(Сред(РезультатВыбора[КолонкаПоиска], Инд, 1));
		КонецЦикла;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	ТабличныйДокументПриИзмененииСодержимогоОбласти(Элемент, Область);
	
	Если КодПоказателя = "ПоМесту" ИЛИ КодПоказателя = "КодФормыРеорганизации" Тогда
		УстановитьДоступностьОбластей(ЭтаФорма, "Титульный");
		ЗаполнитьПериодОтчета(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросВвестиКодПоМестуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры.Область.Значение = ДополнительныеПараметры.НовыйКодПоМесту;
	
	УстановитьДоступностьОбластей(ЭтаФорма, "Титульный");
	ЗаполнитьПериодОтчета(ЭтаФорма);
	
	СохрИмяТекРазделаОтчета = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
	
	Если ДополнительныеПараметры.НовыйКодПоМесту <> "124" Тогда
		ИзменитьНастройкиВДеревеРазделовИОчиститьМногоуровневыйРаздел("Раздел2", 0);
	Иначе
		ИзменитьНастройкиРаздела2ВДеревеРазделов_УстановитьКодПоОКТМОИКБКВРазделах1и2();
	КонецЕсли;
	
	НайденнаяСтрока = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(
	РазделыОтчета.ПолучитьЭлементы(), "КолонкаРазделыОтчетаСокрНаим", СохрИмяТекРазделаОтчета);
	Если НЕ НайденнаяСтрока = Неопределено Тогда
		Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтрока.ПолучитьИдентификатор();
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьНастройкиРаздела2ВДеревеРазделов_УстановитьКодПоОКТМОИКБКВРазделах1и2()
	
	ИзменитьНастройкиРазделаВДеревеРазделов("Раздел2", 1);
	
	СсылкаНаРегистрациюВНО = РеквизитЭлементаСправочника(СтруктураРеквизитовФормы.Организация);
	УстановитьКодПоОКТМОИКБКВРазделах1и2ПриАктивномТитульномЛисте(СсылкаНаРегистрациюВНО);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьНастройкиВДеревеРазделовИОчиститьМногоуровневыйРаздел(ИмяРаздела, ВариантНастроек, ФормироватьДеревоРазделов = Истина)
	
	ИзменитьНастройкиРазделаВДеревеРазделов(ИмяРаздела, ВариантНастроек);
	
	ИнициализироватьМногоуровневыйРаздел(ИмяРаздела);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьНастройкиРазделаВДеревеРазделов(ИмяРаздела, ВариантНастроек, ФормироватьДеревоРазделов = Истина)
	
	Для каждого СтраницаНастроек Из мДеревоСтраницОтчета.ПолучитьЭлементы() Цикл
		Если СтраницаНастроек.ИмяСтраницы = ИмяРаздела Тогда
			СтраницаНастроек.ПоказатьСтраницу = ВариантНастроек;
			СтраницаНастроек.ВыводНаПечать    = ВариантНастроек;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	КопироватьДанныеФормы(мДеревоСтраницОтчета, мДеревоВыбранныхСтраниц);
	
	Если ФормироватьДеревоРазделов Тогда
		СформироватьДеревоРазделовОтчетаНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьМногоуровневыйРаздел(ИмяРаздела)
	
	УдалитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	
	ДеревоДанныхРаздела = Новый ДеревоЗначений;
	ДеревоДанныхРаздела.Колонки.Добавить("Данные");
	ДеревоДанныхРаздела.Колонки.Добавить("ДанныеМногострочныхЧастей");
	
	СохрТаблДокумент = Новый ТабличныйДокумент;
	СохрТаблДокумент.Вывести(ТабличныйДокумент);
	
	ТекВетка = ДеревоДанныхРаздела.Строки.Добавить();
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(ОбъектОтчета(ЭтаФорма.ИмяФормы).ПолучитьМакет(Сред(ЭтаФорма.ИмяФормы, СтрНайти(ЭтаФорма.ИмяФормы, "ФормаОтчета")) + "_" + ИмяРаздела));
	
	ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяРаздела);
	
	ТекВетка.Данные = ДанныеТаблДокумента.Данные;
	ТекВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
	
	ИнициализироватьПодчиненныеРазделы(ИмяРаздела, ТекВетка);
	
	// Особая обработка текста в строках 020 и 110 Приложения 10 к Разделу 1.
	Если ИмяРаздела = "Раздел1Прил10" Тогда
		МнЧ_П00110М1 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М1];
		МнЧ_П00110М1.Строки[0].Данные.Вставить("П00110М102001", "001");
		МнЧ_П00110М2 = МнЧ_П00110М1.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы110М2];
		МнЧ_П00110М2.Строки[0].Данные.Вставить("П00110М211001", "001");
	КонецЕсли;
	
	СтруктураРеквизитовФормы.Вставить("АдресВоВрХранилищеДеревоДанных" + ИмяРаздела,
	ПоместитьВоВременноеХранилище(ДеревоДанныхРаздела, УникальныйИдентификатор));
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(СохрТаблДокумент);
	
КонецПроцедуры

&НаКлиенте
Процедура АктивизироватьЯчейку(Ячейка) Экспорт
	
	Если Ячейка.Раздел = "Раздел1"
		ИЛИ Ячейка.Раздел = "Раздел1Прил2"
		ИЛИ Ячейка.Раздел = "Раздел1Прил3"
		ИЛИ Ячейка.Раздел = "Раздел1Прил4"
		ИЛИ Ячейка.Раздел = "Раздел1Прил5_6"
		ИЛИ Ячейка.Раздел = "Раздел1Прил7"
		ИЛИ Ячейка.Раздел = "Раздел1Прил8"
		ИЛИ Ячейка.Раздел = "Раздел1Прил9"
		ИЛИ Ячейка.Раздел = "Раздел1Прил10"
		ИЛИ Ячейка.Раздел = "Раздел2" Тогда
		
		Для каждого НайденныйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
			Если НайденныйРаздел.КолонкаРазделыОтчетаСокрНаим = Ячейка.Раздел Тогда
				СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
				Элементы.РазделыОтчета.ТекущаяСтрока = НайденныйРаздел.ПолучитьИдентификатор();
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли Ячейка.Раздел = "Раздел1Прил1"
		ИЛИ Ячейка.Раздел = "Раздел3" Тогда
		
		Для каждого НайденныйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
			Если НайденныйРаздел.КолонкаРазделыОтчетаСокрНаим = Ячейка.Раздел Тогда
				Для каждого НайденнаяСтраница Из НайденныйРаздел.ПолучитьЭлементы() Цикл
					Если НайденнаяСтраница.КолонкаНомерСтраницыРазделаОтчета = Число(Ячейка.Страница) Тогда
						СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
						Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтраница.ПолучитьИдентификатор();
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли Ячейка.Раздел = "Раздел1Прил1Подр1_1и1_2"
		ИЛИ Ячейка.Раздел = "Раздел1Прил1Подр1_3_1"
		ИЛИ Ячейка.Раздел = "Раздел1Прил1Подр1_3_2"
		ИЛИ Ячейка.Раздел = "Раздел1Прил1Подр1_4" Тогда
		
		НомераСтрокМногоуровнегоРаздела
		= СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Ячейка.Страница);
		
		Для каждого НайденныйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
			Если НайденныйРаздел.КолонкаРазделыОтчетаСокрНаим = "Раздел1Прил1" Тогда
				Для каждого НайденнаяСтраница Из НайденныйРаздел.ПолучитьЭлементы() Цикл
					Если НайденнаяСтраница.КолонкаНомерСтраницыРазделаОтчета
						= Число(НомераСтрокМногоуровнегоРаздела[0]) Тогда
						ТекСтраницаРаздела = НайденнаяСтраница;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Для каждого НайденнаяПодчСтраница Из ТекСтраницаРаздела.ПолучитьЭлементы() Цикл
			Если НайденнаяПодчСтраница.КолонкаНомерСтраницыРазделаОтчета
				= Число(НомераСтрокМногоуровнегоРаздела[1]) Тогда
				СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
				Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяПодчСтраница.ПолучитьИдентификатор();
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если Ячейка.Раздел = "Титульный"
		ИЛИ Ячейка.Раздел = "ФизЛицо" Тогда
		РегламентированнаяОтчетностьКлиент.АктивизироватьЯчейку(ЭтаФорма, Ячейка);
	Иначе
		НайденнаяОбласть = ТабличныйДокумент.Области.Найти(Ячейка.ИмяЯчейки);
		Если НЕ НайденнаяОбласть = Неопределено Тогда
			Элементы.ТабличныйДокумент.ТекущаяОбласть = НайденнаяОбласть;
		КонецЕсли;
		СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Ложь;
		РазделыОтчетаПриАктивизацииСтроки(Элементы.РазделыОтчета);
		СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДеревоРазделовОтчетаНаКлиенте() Экспорт
	
	// Необходимо для работы универсального механизма.
	Возврат;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоРазделовОтчетаНаСервере()
	
	ЭтаФорма["РазделыОтчета"].ПолучитьЭлементы().Очистить();
	
	Для Каждого ЭлементДереваСтраницОтчета Из ЭтаФорма["мДеревоСтраницОтчета"].ПолучитьЭлементы() Цикл
		
		Если ЭлементДереваСтраницОтчета.ПоказатьСтраницу = 1 Тогда
			
			ЭлементРазделовОтчета = ЭтаФорма["РазделыОтчета"].ПолучитьЭлементы().Добавить();
			ЭлементРазделовОтчета.КолонкаРазделыОтчета         = ЭлементДереваСтраницОтчета.Представление;
			ЭлементРазделовОтчета.КолонкаРазделыОтчетаСокрНаим = ЭлементДереваСтраницОтчета.ИмяСтраницы;
			
			ИмяРаздела = ЭлементДереваСтраницОтчета.ИмяСтраницы;
			
			Если мСтруктураМногоуровневыхРазделов.Свойство(ИмяРаздела) Тогда
				
				СтруктураРаздела = мСтруктураМногоуровневыхРазделов[ИмяРаздела];
				
				ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
					СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
				
				Если СтруктураРаздела.Свойство("Многостраничность") Тогда
					
					КолСтрокВДеревеДанныхРаздела = Макс(ДеревоДанныхРаздела.Строки.Количество(), 1);
					
					Для НомерСтраницыРаздела = 1 По КолСтрокВДеревеДанныхРаздела Цикл
						
						ЭлементРаздел = ЭлементРазделовОтчета.ПолучитьЭлементы().Добавить();
						
						Если ИмяРаздела = "Раздел3" Тогда
							
							ДанныеСтраницы = ДеревоДанныхРаздела.Строки[НомерСтраницыРаздела - 1].Данные;
							
							СтруктПарам = Новый Структура;
							СтруктПарам.Вставить("Фам", ДанныеСтраницы.П000310008001);
							СтруктПарам.Вставить("Имя", ДанныеСтраницы.П000310009001);
							СтруктПарам.Вставить("Отч", ДанныеСтраницы.П000310010001);
							СтруктПарам.Вставить("ДатаРожд", ДанныеСтраницы.П000310011001);
							СтруктПарам.Вставить("НомерСтраницы", НомерСтраницыРаздела);
							
							ЭлементРаздел.КолонкаРазделыОтчета = ПредставлениеСтраницыРаздела3(СтруктПарам);
							
						ИначеЕсли ИмяРаздела = "Раздел1Прил1" Тогда
							
							ДанныеСтраницы = ДеревоДанныхРаздела.Строки[НомерСтраницыРаздела - 1].Данные;
							
							СтруктПарам = Новый Структура;
							СтруктПарам.Вставить("КодТарифа", ДанныеСтраницы.П000110000101);
							СтруктПарам.Вставить("НомерСтраницы", НомерСтраницыРаздела);
							
							ЭлементРаздел.КолонкаРазделыОтчета = ПредставлениеСтраницыПриложения1КРазделу1(СтруктПарам);
							
						Иначе
							
							НаимСтраницы = "Стр. ";
							Если СтруктураРаздела.Свойство("НаимСтраницы") Тогда
								НаимСтраницы = СтруктураРаздела["НаимСтраницы"];
							КонецЕсли;
							
							ЭлементРаздел.КолонкаРазделыОтчета = НаимСтраницы
							+ ?(Прав(НаимСтраницы, 1) = " ", "", ". Стр. ") + Формат(НомерСтраницыРаздела, "ЧГ=");
							
						КонецЕсли;
						
						ЭлементРаздел.КолонкаРазделыОтчетаСокрНаим      = ИмяРаздела;
						ЭлементРаздел.КолонкаНомерСтраницыРазделаОтчета = НомерСтраницыРаздела;
						
						Если СтруктураРаздела.Свойство("ИменаПодчиненныхРазделов") Тогда
							
							ИменаПодчиненныхРазделов = СтруктураРаздела["ИменаПодчиненныхРазделов"];
							КолПодчРазделов = ИменаПодчиненныхРазделов.Количество();
							
							Для ИндПодчРаздела = 0 По КолПодчРазделов - 1 Цикл
								
								ИмяПодчРаздела = ИменаПодчиненныхРазделов[ИндПодчРаздела];
								СтруктураПодчРаздела = мСтруктураМногоуровневыхРазделов[ИмяПодчРаздела];
								
								ЭлементПодчРаздел = ЭлементРаздел.ПолучитьЭлементы().Добавить();
								НаимСтраницы = "Стр. ";
								Если СтруктураПодчРаздела.Свойство("НаимСтраницы") Тогда
									НаимСтраницы = СтруктураПодчРаздела["НаимСтраницы"];
								КонецЕсли;
								ЭлементПодчРаздел.КолонкаРазделыОтчета              = НаимСтраницы;
								ЭлементПодчРаздел.КолонкаРазделыОтчетаСокрНаим      = ИмяПодчРаздела;
								ЭлементПодчРаздел.КолонкаНомерСтраницыРазделаОтчета = ИндПодчРаздела + 1;
								
							КонецЦикла;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
				ДеревоДанныхРаздела = Неопределено;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеСтраницыПриложения1КРазделу1(СтруктураПараметров)
	
	КодТарифа = СокрЛП(СтруктураПараметров.КодТарифа);
	
	Возврат ?(ЗначениеЗаполнено(КодТарифа), "Код тарифа " + КодТарифа,
	"Стр. " + Формат(СтруктураПараметров.НомерСтраницы, "ЧГ="));
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеСтраницыРаздела3(СтруктураПараметров)
	
	Фам = СокрЛП(СтруктураПараметров.Фам);
	Имя = СокрЛП(СтруктураПараметров.Имя);
	Отч = СокрЛП(СтруктураПараметров.Отч);
	
	ПредстЗС = "";
	
	Если ЗначениеЗаполнено(Фам) Тогда
		ПредстЗС = Фам;
	КонецЕсли;
	Если ЗначениеЗаполнено(Имя) Тогда
		ПредстЗС = ?(ЗначениеЗаполнено(ПредстЗС), ПредстЗС + " " + Имя, Имя);
	КонецЕсли;
	Если ЗначениеЗаполнено(Отч) Тогда
		ПредстЗС = ?(ЗначениеЗаполнено(ПредстЗС), ПредстЗС + " " + Отч, Отч);
	КонецЕсли;
	Если ЗначениеЗаполнено(ПредстЗС) И ЗначениеЗаполнено(СтруктураПараметров.ДатаРожд) Тогда
		ПредстЗС = ПредстЗС + " " + Формат(СтруктураПараметров.ДатаРожд, "ДФ=дд.ММ.гггг");
	КонецЕсли;
	
	Если ПредстЗС = "" Тогда
		Возврат "Стр. " + Формат(СтруктураПараметров.НомерСтраницы, "ЧГ=");
	КонецЕсли;
	
	Возврат ПредстЗС;
	
КонецФункции

&НаКлиенте
Процедура РазделыОтчетаПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено
	 ИЛИ Элемент.ТекущаяСтрока = СтруктураРеквизитовФормы.ТекущаяСтрокаРазделовОтчета Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.ТекущаяСтрокаРазделовОтчета = Элемент.ТекущаяСтрока;
	Элементы.ОчиститьТекущуюСтраницу.Доступность = Истина;
	Если СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере Тогда
		
		Если мСтруктураМногоуровневыхРазделов.Свойство(Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим) Тогда
			Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета
				= ?(Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета = Неопределено
				ИЛИ Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета = 0,
				1, Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
		КонецЕсли;
		
		Если мСтруктураМногоуровневыхРазделов.Свойство(Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим) Тогда
			
			НовыеНомераСтрокМногоуровнегоРаздела = Новый Массив;
			
			ТекРодитель = Элемент.ТекущиеДанные.ПолучитьРодителя();
			Если ТекРодитель <> Неопределено Тогда
				ТекЭлемент = Элемент.ТекущиеДанные;
				Пока ТекРодитель.ПолучитьРодителя() <> Неопределено Цикл
					СтруктураЭлемента = мСтруктураМногоуровневыхРазделов[ТекЭлемент.КолонкаРазделыОтчетаСокрНаим];
					Если СтруктураЭлемента.Свойство("Подчиненность") Тогда
						ИмяГлРаздела = СтруктураЭлемента["ИмяГлавногоРаздела"];
						СтруктураРодителя = мСтруктураМногоуровневыхРазделов[ИмяГлРаздела];
						ИндексПодчРаздела = СтруктураРодителя["ИменаПодчиненныхРазделов"].Найти(ТекЭлемент.КолонкаРазделыОтчетаСокрНаим);
						НовыеНомераСтрокМногоуровнегоРаздела.Вставить(0, ИндексПодчРаздела + 1);
					Иначе
						НовыеНомераСтрокМногоуровнегоРаздела.Вставить(0, 1);
					КонецЕсли;
					НовыеНомераСтрокМногоуровнегоРаздела.Вставить(0, ТекРодитель.КолонкаНомерСтраницыРазделаОтчета);
					ТекЭлемент = ТекРодитель;
					ТекРодитель = ТекЭлемент.ПолучитьРодителя();
				КонецЦикла;
			КонецЕсли;
			
			СтруктураЭлемента = мСтруктураМногоуровневыхРазделов[Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим];
			Если СтруктураЭлемента.Свойство("Многостраничность") Тогда
				НовыеНомераСтрокМногоуровнегоРаздела.Добавить(Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
			Иначе
				НовыеНомераСтрокМногоуровнегоРаздела.Добавить(1);
			КонецЕсли;
			
			ВывестиДанныеВТабличныйДокументНаСервере(
				Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим,
				НовыеНомераСтрокМногоуровнегоРаздела);
			
		Иначе
			ВывестиДанныеВТабличныйДокументНаСервере(
				Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
		КонецЕсли;
		
	Иначе
		СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
	КонецЕсли;
	
	КМенюРО = Элементы.РазделыОтчета.КонтекстноеМеню;
	КМенюРО.Видимость = Ложь;
	КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Ложь;
	КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюУдалитьСтраницу.Видимость = Ложь;
	Если мСтруктураМногоуровневыхРазделов.Свойство(
		Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим) Тогда
		Если мСтруктураМногоуровневыхРазделов[Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим].Свойство(
			"Многостраничность") Тогда
			Элемент.Развернуть(Элемент.ТекущаяСтрока);
			КМенюРО.Видимость = Истина;
			Если Элемент.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
				Элементы.ОчиститьТекущуюСтраницу.Доступность = Ложь;
			КонецЕсли;
			
			Если НЕ Элемент.ТекущиеДанные.ПолучитьРодителя() = Неопределено
				И Элемент.ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы().Количество() > 1 Тогда
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Истина;
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюУдалитьСтраницу.Видимость = Истина;
			Иначе
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Истина;
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюУдалитьСтраницу.Видимость = Ложь;
			КонецЕсли;
			
			#Если ВебКлиент Тогда
				ВидимостьМеню = КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость;
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Ложь;
			#КонецЕсли
			
			КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Заголовок = "Добавить страницу";
			
			#Если ВебКлиент Тогда
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = ВидимостьМеню;
			#КонецЕсли
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим = "Титульный" Тогда
		Элементы.Обновить.Доступность = Истина;
		Элементы.ТабличныйДокументКонтекстноеМенюГруппаСтроки.Видимость = Ложь;
	Иначе
		Элементы.Обновить.Доступность = Ложь;
		Элементы.ТабличныйДокументКонтекстноеМенюГруппаСтроки.Видимость = Истина;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим = "Раздел3" Тогда
		КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюПоказатьБланкСтраницыРаздела3.Видимость = Истина;
	Иначе
		КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюПоказатьБланкСтраницыРаздела3.Видимость = Ложь;
	КонецЕсли;
	
	СпрятатьСсылкуУдалитьСтраницу();
	
	Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Область(1, 1);
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьСведенияОбОрганизацииНаСервере();
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		УстановитьДоступностьОбластей(ЭтаФорма, "Титульный");
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(ЭтаФорма, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	РегламентированнаяОтчетность.ПриЗакрытииРегламентированногоОтчета(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если СтрНайти(Заголовок, СтруктураРеквизитовФормы.СтрПериодОтчета) = 0 Тогда
		Заголовок = Заголовок + " за " + СтруктураРеквизитовФормы.СтрПериодОтчета;
	КонецЕсли;
	
	ОргСтр = " (" + СтруктураРеквизитовФормы.НаимОрганизации + ")";
	Если СтрНайти(Заголовок, ОргСтр) = 0 Тогда
		Заголовок = Заголовок + ОргСтр;
	КонецЕсли;
	
	Заголовок = Заголовок + ?(СтрНайти(ЭтаФорма.ИмяФормы, "Внешний") > 0, " - внешний отчет", "");
	
	ПодключитьОбработчикОжидания("ВыполнитьПроверкуПередОткрытием", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроверкуПередОткрытием()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередОткрытиемФормыРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Модифицированность = Ложь;
		Закрыть();
		Возврат;
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОтобразитьНомерКорректировки(Форма)
	
	НомерКорр = Форма.СтруктураРеквизитовФормы.ВидДокумента * Форма.НомерКорректировки;
	НомерКорректировкиСтрока = Формат(НомерКорр, "ЧН=0; ЧГ=");
	СтрДлинаНомерКорректировкиСтрока = СтрДлина(НомерКорректировкиСтрока);
	
	Форма.ТабличныйДокумент.Области["НомерКорректировки"].Значение = НомерКорректировкиСтрока;
	
Конецпроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ СТЫКОВКИ С СЕРВИСОМ СДАЧИ ОТЧЕТНОСТИ ЧЕРЕЗ ПРЕДСТАВИТЕЛЯ

&НаКлиенте
Процедура ОтправитьЧерезПредставителя(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьЧерезПредставителяЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЧерезПредставителяЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиЧерезПредставителяВРегламентированномОтчете(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВИнтернетеЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернетеЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтаФорма);
	
КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтаФорма, "ФНС");
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаВозможностиВыгрузкиРегламентированногоОтчетаПередОтправкой", ЭтотОбъект);
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередОтправкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаВозможностиВыгрузкиРегламентированногоОтчетаПередОтправкой(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьВКонтролирующийОрганЗавершение", ЭтотОбъект);
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрганЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтаФорма, "ФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", ЭтаФорма);
	Оповещение = Новый ОписаниеОповещения("ПослеСохраненияФормыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	СохранитьНаКлиенте(, Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ПослеСохраненияФормыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	ДополнительныеПараметры.Форма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьПрисоединенныеФайлы(Команда)
	
	РегламентированнаяОтчетностьКлиент.СохранитьОтчетИОткрытьФормуПрисоединенныеФайлы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Функция ОбъектОтчета(ЭтаФормаИмя) Экспорт
	
	Если мОбъектОтчета = Неопределено Тогда 
		мОбъектОтчета = РегламентированнаяОтчетностьВызовСервера.ОбъектОтчета(ЭтаФормаИмя);
	КонецЕсли;
	
	Возврат мОбъектОтчета;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПРОВЕРКИ СООТНООШЕНИЙ В ОТЧЕТЕ
///////////////////////////////////////////////////////////////////////////////

#Область МеханизмПроверкиКонтрольныхСоотношений

&НаКлиенте
Процедура Проверить(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьКонтрольныеСоотношения(ЭтаФорма, ОбработкаКС);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьКонтрольныеСоотношенияВОтчете() Экспорт
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок", 0);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", 0);
	СтруктураРезультата.Вставить("СтруктураОшибок", Новый Структура);
	
	Если СписокРасшифровкиПоказателей = Неопределено Тогда
		СписокРасшифровкиПоказателей = РегламентированнаяОтчетность.СоздатьСписокРасшифровкиПоказателей();
	Иначе
		СписокРасшифровкиПоказателей.Очистить();
	КонецЕсли;
	
	Если СписокРасшифровкиформулы = Неопределено Тогда
		СписокРасшифровкиформулы = РегламентированнаяОтчетность.СоздатьСписокРасшифровкиформулы();
	Иначе
		СписокРасшифровкиформулы.Очистить();
	КонецЕсли;
	
	СтруктураРеквизитовФормы.ТекстДляЗаголовочнойЧасти = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеДокументаРеглОтч(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	СчетчикФормулДляРасшифровок = 0;
	
	мДанныеОтчета = СтруктураДанныхДокументаОтчета(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	мДанныеОтчетаПРП = Неопределено; // данные отчета предыдущего расчетного периода
	СохраненныйДокПРП = РегламентированнаяОтчетность.ПолучитьДокументПНП(СтруктураРеквизитовФормы.мСохраненныйДок, , Истина);
	Если СохраненныйДокПРП <> Неопределено Тогда
		мДанныеОтчетаПРП = СтруктураДанныхДокументаОтчета(СохраненныйДокПРП);
		мДанныеОтчетаПРП.Вставить("СохраненныйДокументОтчета", СохраненныйДокПРП);
	КонецЕсли;
	
	ПроверитьКонтрольныеСоотношенияВОтчете_Проверка(СтруктураРезультата);
	
	мДанныеОтчета = Неопределено;
	
	Если СписокРасшифровкиПоказателей.Количество() > 0 Тогда
		СтруктураРезультата.Вставить("СписокРасшифровкиПоказателей",
			ПоместитьВоВременноеХранилище(СписокРасшифровкиПоказателей, Новый УникальныйИдентификатор));
	КонецЕсли;
	
	Если СписокРасшифровкиформулы.Количество() > 0 Тогда
		СтруктураРезультата.Вставить("СписокРасшифровкиформулы",
			ПоместитьВоВременноеХранилище(СписокРасшифровкиформулы, Новый УникальныйИдентификатор));
	КонецЕсли;
	
	Возврат СтруктураРезультата;
	
КонецФункции

&НаСервере
Процедура ПроверитьКонтрольныеСоотношенияВОтчете_Проверка(СтруктураРезультата)
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел3, "Подраздел321") Тогда
		
		ПроверитьКС_0_1а(СтруктураРезультата);
		ПроверитьКС_0_1б(СтруктураРезультата);
		ПроверитьКС_0_1в(СтруктураРезультата);
		
	КонецЕсли;
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел3, "Подраздел322") Тогда
		
		ПроверитьКС_0_1г(СтруктураРезультата);
		ПроверитьКС_0_1д(СтруктураРезультата);
		ПроверитьКС_0_1е(СтруктураРезультата);
		
	КонецЕсли;
	
	ПроверитьКС_1_0(СтруктураРезультата);
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел1) Тогда
		
		ПроверитьКС_1_1(СтруктураРезультата);
		ПроверитьКС_1_2(СтруктураРезультата);
		ПроверитьКС_1_3а(СтруктураРезультата);
		ПроверитьКС_1_3б(СтруктураРезультата);
		ПроверитьКС_1_3в(СтруктураРезультата);
		ПроверитьКС_1_3г(СтруктураРезультата);
		ПроверитьКС_1_4а(СтруктураРезультата);
		ПроверитьКС_1_4б(СтруктураРезультата);
		ПроверитьКС_1_5(СтруктураРезультата);
		ПроверитьКС_1_6(СтруктураРезультата);
		ПроверитьКС_1_7(СтруктураРезультата);
		ПроверитьКС_1_8(СтруктураРезультата);
		ПроверитьКС_1_9(СтруктураРезультата);
		ПроверитьКС_1_10(СтруктураРезультата);
		ПроверитьКС_1_11(СтруктураРезультата);
		ПроверитьКС_1_12(СтруктураРезультата);
		ПроверитьКС_1_13(СтруктураРезультата);
		ПроверитьКС_1_14а(СтруктураРезультата);
		ПроверитьКС_1_14б(СтруктураРезультата);
		ПроверитьКС_1_15а(СтруктураРезультата);
		ПроверитьКС_1_15б(СтруктураРезультата);
		ПроверитьКС_1_16а(СтруктураРезультата);
		ПроверитьКС_1_16б(СтруктураРезультата);
		ПроверитьКС_1_17а(СтруктураРезультата);
		ПроверитьКС_1_17б(СтруктураРезультата);
		ПроверитьКС_1_18а(СтруктураРезультата);
		ПроверитьКС_1_18б(СтруктураРезультата);
		ПроверитьКС_1_19а(СтруктураРезультата);
		ПроверитьКС_1_19б(СтруктураРезультата);
		ПроверитьКС_1_20а(СтруктураРезультата);
		ПроверитьКС_1_20б(СтруктураРезультата);
		ПроверитьКС_1_21а(СтруктураРезультата);
		ПроверитьКС_1_21б(СтруктураРезультата);
		ПроверитьКС_1_22(СтруктураРезультата);
		ПроверитьКС_1_23(СтруктураРезультата);
		ПроверитьКС_1_24(СтруктураРезультата);
		ПроверитьКС_1_25(СтруктураРезультата);
		ПроверитьКС_1_26(СтруктураРезультата);
		ПроверитьКС_1_27(СтруктураРезультата);
		ПроверитьКС_1_28(СтруктураРезультата);
		ПроверитьКС_1_29(СтруктураРезультата);
		
	КонецЕсли;
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел1Прил1, "Подраздел11") Тогда
		
		ПроверитьКС_1_30(СтруктураРезультата);
		ПроверитьКС_1_31(СтруктураРезультата);
		ПроверитьКС_1_32(СтруктураРезультата);
		ПроверитьКС_1_33(СтруктураРезультата);
		ПроверитьКС_1_34(СтруктураРезультата);
		ПроверитьКС_1_35(СтруктураРезультата);
		ПроверитьКС_1_36(СтруктураРезультата);
		ПроверитьКС_1_37(СтруктураРезультата);
		ПроверитьКС_1_38(СтруктураРезультата);
		ПроверитьКС_1_39(СтруктураРезультата);
		ПроверитьКС_1_40(СтруктураРезультата);
		ПроверитьКС_1_41(СтруктураРезультата);
		ПроверитьКС_1_42(СтруктураРезультата);
		ПроверитьКС_1_43(СтруктураРезультата);
		ПроверитьКС_1_44(СтруктураРезультата);
		ПроверитьКС_1_45(СтруктураРезультата);
		ПроверитьКС_1_46(СтруктураРезультата);
		ПроверитьКС_1_47(СтруктураРезультата);
		ПроверитьКС_1_48(СтруктураРезультата);
		ПроверитьКС_1_49(СтруктураРезультата);
		ПроверитьКС_1_50(СтруктураРезультата);
		ПроверитьКС_1_51(СтруктураРезультата);
		ПроверитьКС_1_52(СтруктураРезультата);
		ПроверитьКС_1_53(СтруктураРезультата);
		ПроверитьКС_1_54(СтруктураРезультата);
		ПроверитьКС_1_55(СтруктураРезультата);
		ПроверитьКС_1_56(СтруктураРезультата);
		ПроверитьКС_1_57(СтруктураРезультата);
		ПроверитьКС_1_58(СтруктураРезультата);
		ПроверитьКС_1_59(СтруктураРезультата);
		ПроверитьКС_1_60(СтруктураРезультата);
		ПроверитьКС_1_61(СтруктураРезультата);
		ПроверитьКС_1_62(СтруктураРезультата);
		ПроверитьКС_1_63(СтруктураРезультата);
		ПроверитьКС_1_64(СтруктураРезультата);
		ПроверитьКС_1_65(СтруктураРезультата);
		ПроверитьКС_1_66(СтруктураРезультата);
		ПроверитьКС_1_67(СтруктураРезультата);
		ПроверитьКС_1_68(СтруктураРезультата);
		ПроверитьКС_1_69(СтруктураРезультата);
		ПроверитьКС_1_70(СтруктураРезультата);
		ПроверитьКС_1_71(СтруктураРезультата);
		ПроверитьКС_1_72(СтруктураРезультата);
		ПроверитьКС_1_73(СтруктураРезультата);
		ПроверитьКС_1_74(СтруктураРезультата);
		ПроверитьКС_1_75(СтруктураРезультата);
		ПроверитьКС_1_76(СтруктураРезультата);
		ПроверитьКС_1_77(СтруктураРезультата);
		ПроверитьКС_1_78(СтруктураРезультата);
		ПроверитьКС_1_79(СтруктураРезультата);
		ПроверитьКС_1_80(СтруктураРезультата);
		ПроверитьКС_1_81(СтруктураРезультата);
		ПроверитьКС_1_82(СтруктураРезультата);
		ПроверитьКС_1_83(СтруктураРезультата);
		ПроверитьКС_1_84(СтруктураРезультата);
		ПроверитьКС_1_85(СтруктураРезультата);
		ПроверитьКС_1_86(СтруктураРезультата);
		ПроверитьКС_1_87(СтруктураРезультата);
		ПроверитьКС_1_88(СтруктураРезультата);
		ПроверитьКС_1_89(СтруктураРезультата);
		ПроверитьКС_1_90(СтруктураРезультата);
		ПроверитьКС_1_91(СтруктураРезультата);
		ПроверитьКС_1_92(СтруктураРезультата);
		
	КонецЕсли;
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел1Прил1, "Подраздел12") Тогда
		
		ПроверитьКС_1_93(СтруктураРезультата);
		ПроверитьКС_1_94(СтруктураРезультата);
		ПроверитьКС_1_95(СтруктураРезультата);
		ПроверитьКС_1_96(СтруктураРезультата);
		ПроверитьКС_1_97(СтруктураРезультата);
		ПроверитьКС_1_98(СтруктураРезультата);
		ПроверитьКС_1_99(СтруктураРезультата);
		ПроверитьКС_1_100(СтруктураРезультата);
		ПроверитьКС_1_101(СтруктураРезультата);
		ПроверитьКС_1_102(СтруктураРезультата);
		ПроверитьКС_1_103(СтруктураРезультата);
		ПроверитьКС_1_104(СтруктураРезультата);
		ПроверитьКС_1_105(СтруктураРезультата);
		ПроверитьКС_1_106(СтруктураРезультата);
		ПроверитьКС_1_107(СтруктураРезультата);
		ПроверитьКС_1_108(СтруктураРезультата);
		ПроверитьКС_1_109(СтруктураРезультата);
		ПроверитьКС_1_110(СтруктураРезультата);
		ПроверитьКС_1_111(СтруктураРезультата);
		ПроверитьКС_1_112(СтруктураРезультата);
		ПроверитьКС_1_113(СтруктураРезультата);
		ПроверитьКС_1_114(СтруктураРезультата);
		ПроверитьКС_1_115(СтруктураРезультата);
		ПроверитьКС_1_116(СтруктураРезультата);
		ПроверитьКС_1_117(СтруктураРезультата);
		ПроверитьКС_1_118(СтруктураРезультата);
		ПроверитьКС_1_119(СтруктураРезультата);
		ПроверитьКС_1_120(СтруктураРезультата);
		ПроверитьКС_1_121(СтруктураРезультата);
		ПроверитьКС_1_122(СтруктураРезультата);
		ПроверитьКС_1_123(СтруктураРезультата);
		ПроверитьКС_1_124(СтруктураРезультата);
		
	КонецЕсли;
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел1Прил1, "Подраздел131") Тогда
		
		ПроверитьКС_1_125(СтруктураРезультата);
		ПроверитьКС_1_126(СтруктураРезультата);
		ПроверитьКС_1_127(СтруктураРезультата);
		ПроверитьКС_1_128(СтруктураРезультата);
		ПроверитьКС_1_129(СтруктураРезультата);
		ПроверитьКС_1_130(СтруктураРезультата);
		ПроверитьКС_1_131(СтруктураРезультата);
		ПроверитьКС_1_132(СтруктураРезультата);
		ПроверитьКС_1_133(СтруктураРезультата);
		ПроверитьКС_1_134(СтруктураРезультата);
		ПроверитьКС_1_135(СтруктураРезультата);
		ПроверитьКС_1_136(СтруктураРезультата);
		ПроверитьКС_1_137(СтруктураРезультата);
		ПроверитьКС_1_138(СтруктураРезультата);
		ПроверитьКС_1_139(СтруктураРезультата);
		ПроверитьКС_1_140(СтруктураРезультата);
		ПроверитьКС_1_141(СтруктураРезультата);
		ПроверитьКС_1_142(СтруктураРезультата);
		ПроверитьКС_1_143(СтруктураРезультата);
		ПроверитьКС_1_144(СтруктураРезультата);
		ПроверитьКС_1_145(СтруктураРезультата);
		ПроверитьКС_1_146(СтруктураРезультата);
		ПроверитьКС_1_147(СтруктураРезультата);
		ПроверитьКС_1_148(СтруктураРезультата);
		ПроверитьКС_1_149(СтруктураРезультата);
		ПроверитьКС_1_150(СтруктураРезультата);
		ПроверитьКС_1_151(СтруктураРезультата);
		
	Конецесли;
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел1Прил1, "Подраздел132") Тогда
		
		ПроверитьКС_1_152(СтруктураРезультата);
		ПроверитьКС_1_153(СтруктураРезультата);
		ПроверитьКС_1_154(СтруктураРезультата);
		ПроверитьКС_1_155(СтруктураРезультата);
		ПроверитьКС_1_156(СтруктураРезультата);
		ПроверитьКС_1_157(СтруктураРезультата);
		ПроверитьКС_1_158(СтруктураРезультата);
		ПроверитьКС_1_159(СтруктураРезультата);
		ПроверитьКС_1_160(СтруктураРезультата);
		ПроверитьКС_1_161(СтруктураРезультата);
		ПроверитьКС_1_162(СтруктураРезультата);
		ПроверитьКС_1_163(СтруктураРезультата);
		ПроверитьКС_1_164(СтруктураРезультата);
		ПроверитьКС_1_165(СтруктураРезультата);
		ПроверитьКС_1_166(СтруктураРезультата);
		ПроверитьКС_1_167(СтруктураРезультата);
		ПроверитьКС_1_168(СтруктураРезультата);
		ПроверитьКС_1_169(СтруктураРезультата);
		ПроверитьКС_1_170(СтруктураРезультата);
		ПроверитьКС_1_171(СтруктураРезультата);
		ПроверитьКС_1_172(СтруктураРезультата);
		ПроверитьКС_1_173(СтруктураРезультата);
		ПроверитьКС_1_174(СтруктураРезультата);
		ПроверитьКС_1_175(СтруктураРезультата);
		ПроверитьКС_1_176(СтруктураРезультата);
		ПроверитьКС_1_177(СтруктураРезультата);
		ПроверитьКС_1_178(СтруктураРезультата);
		
	КонецЕсли;
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел1Прил1, "Подраздел14") Тогда
	
		ПроверитьКС_1_179(СтруктураРезультата);
		ПроверитьКС_1_180(СтруктураРезультата);
		ПроверитьКС_1_181(СтруктураРезультата);
		ПроверитьКС_1_182(СтруктураРезультата);
		ПроверитьКС_1_183(СтруктураРезультата);
		ПроверитьКС_1_184(СтруктураРезультата);
		ПроверитьКС_1_185(СтруктураРезультата);
		ПроверитьКС_1_186(СтруктураРезультата);
		ПроверитьКС_1_187(СтруктураРезультата);
		ПроверитьКС_1_188(СтруктураРезультата);
		ПроверитьКС_1_189(СтруктураРезультата);
		ПроверитьКС_1_190(СтруктураРезультата);
		ПроверитьКС_1_191(СтруктураРезультата);
		ПроверитьКС_1_192(СтруктураРезультата);
		ПроверитьКС_1_193(СтруктураРезультата);
		
	КонецЕсли;
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел1Прил2) Тогда
		
		ПроверитьКС_1_194(СтруктураРезультата);
		ПроверитьКС_1_195(СтруктураРезультата);
		ПроверитьКС_1_196(СтруктураРезультата);
		ПроверитьКС_1_197(СтруктураРезультата);
		ПроверитьКС_1_198(СтруктураРезультата);
		ПроверитьКС_1_199(СтруктураРезультата);
		ПроверитьКС_1_200(СтруктураРезультата);
		ПроверитьКС_1_201(СтруктураРезультата);
		ПроверитьКС_1_202(СтруктураРезультата);
		ПроверитьКС_1_203(СтруктураРезультата);
		ПроверитьКС_1_204(СтруктураРезультата);
		ПроверитьКС_1_205(СтруктураРезультата);
		ПроверитьКС_1_206(СтруктураРезультата);
		ПроверитьКС_1_207(СтруктураРезультата);
		ПроверитьКС_1_208(СтруктураРезультата);
		ПроверитьКС_1_209(СтруктураРезультата);
		ПроверитьКС_1_210(СтруктураРезультата);
		ПроверитьКС_1_211(СтруктураРезультата);
		ПроверитьКС_1_212(СтруктураРезультата);
		ПроверитьКС_1_213(СтруктураРезультата);
		ПроверитьКС_1_214(СтруктураРезультата);
		ПроверитьКС_1_215(СтруктураРезультата);
		ПроверитьКС_1_216(СтруктураРезультата);
		ПроверитьКС_1_217(СтруктураРезультата);
		ПроверитьКС_1_218(СтруктураРезультата);
		ПроверитьКС_1_219(СтруктураРезультата);
		ПроверитьКС_1_220(СтруктураРезультата);
		ПроверитьКС_1_221(СтруктураРезультата);
		ПроверитьКС_1_222(СтруктураРезультата);
		ПроверитьКС_1_223(СтруктураРезультата);
		ПроверитьКС_1_224(СтруктураРезультата);
		ПроверитьКС_1_225(СтруктураРезультата);
		ПроверитьКС_1_226(СтруктураРезультата);
		ПроверитьКС_1_227(СтруктураРезультата);
		ПроверитьКС_1_228(СтруктураРезультата);
		ПроверитьКС_1_229(СтруктураРезультата);
		ПроверитьКС_1_230(СтруктураРезультата);
		ПроверитьКС_1_231(СтруктураРезультата);
		ПроверитьКС_1_232(СтруктураРезультата);
		ПроверитьКС_1_233(СтруктураРезультата);
		ПроверитьКС_1_234(СтруктураРезультата);
		ПроверитьКС_1_235(СтруктураРезультата);
		ПроверитьКС_1_236(СтруктураРезультата);
		ПроверитьКС_1_237(СтруктураРезультата);
		ПроверитьКС_1_238(СтруктураРезультата);
		ПроверитьКС_1_239(СтруктураРезультата);
		ПроверитьКС_1_240(СтруктураРезультата);
		ПроверитьКС_1_241(СтруктураРезультата);
		ПроверитьКС_1_242(СтруктураРезультата);
		ПроверитьКС_1_243(СтруктураРезультата);
		ПроверитьКС_1_244(СтруктураРезультата);
		ПроверитьКС_1_245(СтруктураРезультата);
		
	КонецЕсли;
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел1Прил5_6, "Приложение5") Тогда
		
		ПроверитьКС_1_246(СтруктураРезультата);
		ПроверитьКС_1_247(СтруктураРезультата);
		ПроверитьКС_1_248(СтруктураРезультата);
		ПроверитьКС_1_249(СтруктураРезультата);
		ПроверитьКС_1_250(СтруктураРезультата);
		ПроверитьКС_1_251(СтруктураРезультата);
		ПроверитьКС_1_252(СтруктураРезультата);
		ПроверитьКС_1_253(СтруктураРезультата);
		
	КонецЕсли;
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел1Прил5_6, "Приложение6") Тогда
		
		ПроверитьКС_1_254(СтруктураРезультата);
		ПроверитьКС_1_255(СтруктураРезультата);
		ПроверитьКС_1_256(СтруктураРезультата);
		
	КонецЕсли;
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел1Прил7) Тогда
		
		ПроверитьКС_1_257(СтруктураРезультата);
		ПроверитьКС_1_258(СтруктураРезультата);
		ПроверитьКС_1_259(СтруктураРезультата);
		ПроверитьКС_1_260(СтруктураРезультата);
		ПроверитьКС_1_261(СтруктураРезультата);
		ПроверитьКС_1_262(СтруктураРезультата);
		
	КонецЕсли;
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел1Прил8) Тогда
		
		ПроверитьКС_1_263(СтруктураРезультата);
		ПроверитьКС_1_264(СтруктураРезультата);
		ПроверитьКС_1_265(СтруктураРезультата);
		ПроверитьКС_1_266(СтруктураРезультата);
		ПроверитьКС_1_267(СтруктураРезультата);
		ПроверитьКС_1_268(СтруктураРезультата);
		ПроверитьКС_1_269(СтруктураРезультата);
		ПроверитьКС_1_270(СтруктураРезультата);
		ПроверитьКС_1_271(СтруктураРезультата);
		ПроверитьКС_1_272(СтруктураРезультата);
		
	КонецЕсли;
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел1Прил9) Тогда
		
		ПроверитьКС_1_273(СтруктураРезультата);
		ПроверитьКС_1_274(СтруктураРезультата);
		ПроверитьКС_1_275(СтруктураРезультата);
		ПроверитьКС_1_276(СтруктураРезультата);
		ПроверитьКС_1_277(СтруктураРезультата);
		ПроверитьКС_1_278(СтруктураРезультата);
		ПроверитьКС_1_279(СтруктураРезультата);
		ПроверитьКС_1_280(СтруктураРезультата);
		
	КонецЕсли;
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел1Прил10) Тогда
	
		ПроверитьКС_1_281(СтруктураРезультата);
		ПроверитьКС_1_282(СтруктураРезультата);
		ПроверитьКС_1_283(СтруктураРезультата);
		ПроверитьКС_1_284(СтруктураРезультата);
		ПроверитьКС_1_285(СтруктураРезультата);
		ПроверитьКС_1_286(СтруктураРезультата);
		ПроверитьКС_1_287(СтруктураРезультата);
		ПроверитьКС_1_288(СтруктураРезультата);
		
	КонецЕсли;
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел2) Тогда
	
		ПроверитьКС_1_289(СтруктураРезультата);
		ПроверитьКС_1_290(СтруктураРезультата);
		
	КонецЕсли;
	
	Если РазделЗаполнен(мДанныеОтчета.Раздел3) Тогда
	
		ПроверитьКС_1_291(СтруктураРезультата);
		ПроверитьКС_1_292(СтруктураРезультата);
		ПроверитьКС_1_293(СтруктураРезультата);
		ПроверитьКС_1_294(СтруктураРезультата);
		ПроверитьКС_1_295(СтруктураРезультата);
		ПроверитьКС_1_296(СтруктураРезультата);
		ПроверитьКС_1_297(СтруктураРезультата);
		ПроверитьКС_1_298(СтруктураРезультата);
		ПроверитьКС_1_299(СтруктураРезультата);
		ПроверитьКС_1_300(СтруктураРезультата);
		ПроверитьКС_1_301(СтруктураРезультата);
		ПроверитьКС_1_302(СтруктураРезультата);
		ПроверитьКС_1_303(СтруктураРезультата);
		ПроверитьКС_1_304(СтруктураРезультата);
		ПроверитьКС_1_305(СтруктураРезультата);
		ПроверитьКС_1_306(СтруктураРезультата);
		ПроверитьКС_1_307(СтруктураРезультата);
		ПроверитьКС_1_308(СтруктураРезультата);
		ПроверитьКС_1_309(СтруктураРезультата);
		ПроверитьКС_1_310(СтруктураРезультата);
		ПроверитьКС_1_311(СтруктураРезультата);
		
	КонецЕсли;
	
	ПроверитьКС_2_1(СтруктураРезультата);
	ПроверитьКС_2_2(СтруктураРезультата);
	ПроверитьКС_2_3(СтруктураРезультата);
	ПроверитьКС_2_4(СтруктураРезультата);
	ПроверитьКС_2_5(СтруктураРезультата);
	
	// Проверки ФСС.
	ПроверитьКС_1(СтруктураРезультата);
	ПроверитьКС_2(СтруктураРезультата);
	ПроверитьКС_3(СтруктураРезультата);
	ПроверитьКС_4(СтруктураРезультата);
	ПроверитьКС_5(СтруктураРезультата);
	ПроверитьКС_6(СтруктураРезультата);
	ПроверитьКС_7(СтруктураРезультата);
	ПроверитьКС_8(СтруктураРезультата);
	ПроверитьКС_9(СтруктураРезультата);
	ПроверитьКС_10(СтруктураРезультата);
	ПроверитьКС_11(СтруктураРезультата);
	ПроверитьКС_12(СтруктураРезультата);
	ПроверитьКС_13(СтруктураРезультата);
	ПроверитьКС_14(СтруктураРезультата);
	ПроверитьКС_15(СтруктураРезультата);
	ПроверитьКС_16(СтруктураРезультата);
	ПроверитьКС_17(СтруктураРезультата);
	ПроверитьКС_18(СтруктураРезультата);
	ПроверитьКС_19(СтруктураРезультата);
	ПроверитьКС_20(СтруктураРезультата);
	ПроверитьКС_21(СтруктураРезультата);
	ПроверитьКС_22(СтруктураРезультата);
	ПроверитьКС_23(СтруктураРезультата);
	ПроверитьКС_24(СтруктураРезультата);
	ПроверитьКС_25(СтруктураРезультата);
	ПроверитьКС_26(СтруктураРезультата);
	ПроверитьКС_27(СтруктураРезультата);
	ПроверитьКС_28(СтруктураРезультата);
	ПроверитьКС_29(СтруктураРезультата);
	ПроверитьКС_30(СтруктураРезультата);
	ПроверитьКС_31(СтруктураРезультата);
	ПроверитьКС_32(СтруктураРезультата);
	ПроверитьКС_33(СтруктураРезультата);
	ПроверитьКС_34(СтруктураРезультата);
	ПроверитьКС_35(СтруктураРезультата);
	ПроверитьКС_36(СтруктураРезультата);
	ПроверитьКС_37(СтруктураРезультата);
	ПроверитьКС_38(СтруктураРезультата);
	ПроверитьКС_39(СтруктураРезультата);
	ПроверитьКС_40(СтруктураРезультата);
	ПроверитьКС_41(СтруктураРезультата);
	ПроверитьКС_42(СтруктураРезультата);
	ПроверитьКС_43(СтруктураРезультата);
	ПроверитьКС_44(СтруктураРезультата);
	ПроверитьКС_45(СтруктураРезультата);
	ПроверитьКС_46(СтруктураРезультата);
	ПроверитьКС_47(СтруктураРезультата);
	ПроверитьКС_48(СтруктураРезультата);
	ПроверитьКС_49(СтруктураРезультата);
	ПроверитьКС_50(СтруктураРезультата);
	ПроверитьКС_51(СтруктураРезультата);
	ПроверитьКС_52(СтруктураРезультата);
	ПроверитьКС_53(СтруктураРезультата);
	ПроверитьКС_54(СтруктураРезультата);
	ПроверитьКС_55(СтруктураРезультата);
	ПроверитьКС_56(СтруктураРезультата);
	ПроверитьКС_57(СтруктураРезультата);
	ПроверитьКС_58(СтруктураРезультата);
	ПроверитьКС_59(СтруктураРезультата);
	ПроверитьКС_60(СтруктураРезультата);
	ПроверитьКС_61(СтруктураРезультата);
	ПроверитьКС_62(СтруктураРезультата);
	ПроверитьКС_63(СтруктураРезультата);
	ПроверитьКС_64(СтруктураРезультата);
	ПроверитьКС_65(СтруктураРезультата);
	ПроверитьКС_66(СтруктураРезультата);
	ПроверитьКС_67(СтруктураРезультата);
	ПроверитьКС_68(СтруктураРезультата);
	ПроверитьКС_69(СтруктураРезультата);
	ПроверитьКС_70(СтруктураРезультата);
	ПроверитьКС_71(СтруктураРезультата);
	ПроверитьКС_72(СтруктураРезультата);
	ПроверитьКС_73(СтруктураРезультата);
	ПроверитьКС_74(СтруктураРезультата);
	ПроверитьКС_75(СтруктураРезультата);
	ПроверитьКС_76(СтруктураРезультата);
	ПроверитьКС_77(СтруктураРезультата);
	ПроверитьКС_78(СтруктураРезультата);
	ПроверитьКС_79(СтруктураРезультата);
	ПроверитьКС_80(СтруктураРезультата);
	ПроверитьКС_81(СтруктураРезультата);
	ПроверитьКС_82(СтруктураРезультата);
	ПроверитьКС_83(СтруктураРезультата);
	ПроверитьКС_84(СтруктураРезультата);
	ПроверитьКС_85(СтруктураРезультата);
	ПроверитьКС_86(СтруктураРезультата);
	ПроверитьКС_87(СтруктураРезультата);
	ПроверитьКС_88(СтруктураРезультата);
	ПроверитьКС_89(СтруктураРезультата);
	ПроверитьКС_90(СтруктураРезультата);
	ПроверитьКС_91(СтруктураРезультата);
	ПроверитьКС_92(СтруктураРезультата);
	ПроверитьКС_93(СтруктураРезультата);
	ПроверитьКС_94а(СтруктураРезультата);
	ПроверитьКС_94б(СтруктураРезультата);
	ПроверитьКС_95а(СтруктураРезультата);
	ПроверитьКС_95б(СтруктураРезультата);
	ПроверитьКС_96а(СтруктураРезультата);
	ПроверитьКС_96б(СтруктураРезультата);
	ПроверитьКС_97а(СтруктураРезультата);
	ПроверитьКС_97б(СтруктураРезультата);
	ПроверитьКС_98а(СтруктураРезультата);
	ПроверитьКС_98б(СтруктураРезультата);
	ПроверитьКС_99а(СтруктураРезультата);
	ПроверитьКС_99б(СтруктураРезультата);
	ПроверитьКС_100(СтруктураРезультата);
	ПроверитьКС_101(СтруктураРезультата);
	ПроверитьКС_102(СтруктураРезультата);
	ПроверитьКС_103(СтруктураРезультата);
	ПроверитьКС_104(СтруктураРезультата);
	ПроверитьКС_105(СтруктураРезультата);
	ПроверитьКС_106(СтруктураРезультата);
	ПроверитьКС_107(СтруктураРезультата);
	ПроверитьКС_108(СтруктураРезультата);
	ПроверитьКС_109(СтруктураРезультата);
	ПроверитьКС_110(СтруктураРезультата);
	ПроверитьКС_111(СтруктураРезультата);
	ПроверитьКС_112(СтруктураРезультата);
	ПроверитьКС_113(СтруктураРезультата);
	ПроверитьКС_114а(СтруктураРезультата);
	ПроверитьКС_114б(СтруктураРезультата);
	ПроверитьКС_115а(СтруктураРезультата);
	ПроверитьКС_115б(СтруктураРезультата);
	ПроверитьКС_116а(СтруктураРезультата);
	ПроверитьКС_116б(СтруктураРезультата);
	ПроверитьКС_117а(СтруктураРезультата);
	ПроверитьКС_117б(СтруктураРезультата);
	ПроверитьКС_118а(СтруктураРезультата);
	ПроверитьКС_118б(СтруктураРезультата);
	ПроверитьКС_119а(СтруктураРезультата);
	ПроверитьКС_119б(СтруктураРезультата);
	ПроверитьКС_120а(СтруктураРезультата);
	ПроверитьКС_120б(СтруктураРезультата);
	ПроверитьКС_121а(СтруктураРезультата);
	ПроверитьКС_121б(СтруктураРезультата);
	ПроверитьКС_122а(СтруктураРезультата);
	ПроверитьКС_122б(СтруктураРезультата);
	ПроверитьКС_123(СтруктураРезультата);
	ПроверитьКС_124(СтруктураРезультата);
	ПроверитьКС_125а(СтруктураРезультата);
	ПроверитьКС_125б(СтруктураРезультата);
	ПроверитьКС_126(СтруктураРезультата);
	ПроверитьКС_127(СтруктураРезультата);
	ПроверитьКС_128(СтруктураРезультата);
	ПроверитьКС_129(СтруктураРезультата);
	ПроверитьКС_130(СтруктураРезультата);
	ПроверитьКС_131(СтруктураРезультата);
	ПроверитьКС_132а(СтруктураРезультата);
	ПроверитьКС_132б(СтруктураРезультата);
	ПроверитьКС_133(СтруктураРезультата);
	ПроверитьКС_134(СтруктураРезультата);
	ПроверитьКС_135а(СтруктураРезультата);
	ПроверитьКС_135б(СтруктураРезультата);
	ПроверитьКС_136(СтруктураРезультата);
	ПроверитьКС_137(СтруктураРезультата);
	ПроверитьКС_138а(СтруктураРезультата);
	ПроверитьКС_138б(СтруктураРезультата);
	ПроверитьКС_139(СтруктураРезультата);
	ПроверитьКС_140(СтруктураРезультата);
	ПроверитьКС_141(СтруктураРезультата);
	ПроверитьКС_142(СтруктураРезультата);
	ПроверитьКС_143(СтруктураРезультата);
	ПроверитьКС_144(СтруктураРезультата);
	ПроверитьКС_145а(СтруктураРезультата);
	ПроверитьКС_145б(СтруктураРезультата);
	ПроверитьКС_146(СтруктураРезультата);
	ПроверитьКС_147(СтруктураРезультата);
	ПроверитьКС_148а(СтруктураРезультата);
	ПроверитьКС_148б(СтруктураРезультата);
	ПроверитьКС_149(СтруктураРезультата);
	ПроверитьКС_150(СтруктураРезультата);
	ПроверитьКС_151а(СтруктураРезультата);
	ПроверитьКС_151б(СтруктураРезультата);
	ПроверитьКС_152(СтруктураРезультата);
	ПроверитьКС_153(СтруктураРезультата);
	ПроверитьКС_154(СтруктураРезультата);
	ПроверитьКС_155(СтруктураРезультата);
	ПроверитьКС_156(СтруктураРезультата);
	ПроверитьКС_157(СтруктураРезультата);
	ПроверитьКС_158(СтруктураРезультата);
	ПроверитьКС_159(СтруктураРезультата);
	ПроверитьКС_160а(СтруктураРезультата);
	ПроверитьКС_160б(СтруктураРезультата);
	ПроверитьКС_161(СтруктураРезультата);
	ПроверитьКС_162(СтруктураРезультата);
	ПроверитьКС_163а(СтруктураРезультата);
	ПроверитьКС_163б(СтруктураРезультата);
	ПроверитьКС_164(СтруктураРезультата);
	ПроверитьКС_165(СтруктураРезультата);
	ПроверитьКС_166а(СтруктураРезультата);
	ПроверитьКС_166б(СтруктураРезультата);
	ПроверитьКС_167(СтруктураРезультата);
	ПроверитьКС_168(СтруктураРезультата);
	ПроверитьКС_169(СтруктураРезультата);
	ПроверитьКС_170(СтруктураРезультата);
	ПроверитьКС_171(СтруктураРезультата);
	ПроверитьКС_172(СтруктураРезультата);
	ПроверитьКС_173(СтруктураРезультата);
	ПроверитьКС_174(СтруктураРезультата);
	ПроверитьКС_175(СтруктураРезультата);
	ПроверитьКС_176а(СтруктураРезультата);
	ПроверитьКС_176б(СтруктураРезультата);
	ПроверитьКС_177(СтруктураРезультата);
	ПроверитьКС_178(СтруктураРезультата);
	ПроверитьКС_179а(СтруктураРезультата);
	ПроверитьКС_179б(СтруктураРезультата);
	ПроверитьКС_180(СтруктураРезультата);
	ПроверитьКС_181(СтруктураРезультата);
	ПроверитьКС_182а(СтруктураРезультата);
	ПроверитьКС_182б(СтруктураРезультата);
	ПроверитьКС_183(СтруктураРезультата);
	ПроверитьКС_184(СтруктураРезультата);
	ПроверитьКС_185(СтруктураРезультата);
	ПроверитьКС_186(СтруктураРезультата);
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПроверитьКС_0_1а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы    = НСтр("ru='Проверка Подраздела 1.1 Приложения 1 (КС 0.1а)'");
	ОписаниеКС      = НСтр("ru='Сумма исчисленных страховых взносов (гр. 3 ст. 061 подразд. 1.1 прил. 1) = "
		+ "∑ стр. 240 (1 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, "
		+ "умноженное на количество застрахованных лиц)'");
	ОписаниеОшибки  = НСтр("ru='Общая сумма исчисленных страховых взносов на ОПС за каждый месяц с базы, не "
		+ "превышающей предельной величины, в целом по плательщику ≠ сумме исчисленных страховых взносов на "
		+ "ОПС за соответствующий месяц с базы, не превышающей предельной величины, по каждому физическому лицу'");
	Нарушение       = НСтр("ru='Статья 431 НК РФ'");
	
	Р1П1Ст61Гр03 = ПоказательПоСтроке("Р1П1Ст61Гр03");
	Р3Ст240Гр01  = ПоказательПоСтроке("Р3Ст240Гр01");
	Р3Ст190Гр01  = ПоказательПоСтроке("Р3Ст190Гр01");
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1П1Ст61Гр03 = 0;
	СуммаР1П1Ст61Гр03Стр = "";
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел1Прил1 Цикл
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Р1П1Ст61Гр03);
		ВнестиПоказательВРасшифровку(Р1П1Ст61Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаР1П1Ст61Гр03 = СуммаР1П1Ст61Гр03 + Р1П1Ст61Гр03.Значение;
		СуммаР1П1Ст61Гр03Стр = СуммаР1П1Ст61Гр03Стр + Р1П1Ст61Гр03.ЗначениеСтр + " + ";
	КонецЦикла;
	
	Погрешность = 0;
	СуммаР3Ст240Гр01 = 0;
	СуммаР3Ст240Гр01Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел3 Цикл
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КоличествоСтрокМногострочнойЧасти = КоличествоСтрок(СтраницаРаздела.Данные, Р3Ст190Гр01.Имя);
		Для Инд = 1 По КоличествоСтрокМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р3Ст190Гр01, Инд);
			Если КодНайден(Р3Ст190Гр01.Значение, "01,04,07,10") Тогда
				ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р3Ст240Гр01, Инд);
				Если Число(" " + НомерСтраницыСтр) <= 9 Тогда
					ВнестиПоказательВРасшифровку(Р3Ст190Гр01, "Раздел3", НомерСтраницыСтр);
					ВнестиПоказательВРасшифровку(Р3Ст240Гр01, "Раздел3", НомерСтраницыСтр);
					СуммаР3Ст240Гр01Стр = СуммаР3Ст240Гр01Стр + Р3Ст240Гр01.ЗначениеСтр + " + ";
				ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
					СуммаР3Ст240Гр01Стр = СуммаР3Ст240Гр01Стр + ПредставлениеПродолжения;
					ПредставлениеПродолжения = "";
				КонецЕсли;
				СуммаР3Ст240Гр01 = СуммаР3Ст240Гр01 + Р3Ст240Гр01.Значение;
			КонецЕсли;
		КонецЦикла;
		// Количество застрахованных лиц равно количеству листов раздела 3 (погрешность 0,5 коп. на одно лицо).
		Погрешность = Погрешность + 0.005;
	КонецЦикла;
	
	ПогрешностьСтр = Формат(Погрешность, "ЧРД=,; ЧН=");
	
	КС = ПоказателиКС(СуммаР1П1Ст61Гр03, СуммаР3Ст240Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1П1Ст61Гр03Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
		+ РасшифровкаВСтр(СуммаР3Ст240Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "] (±" + ПогрешностьСтр + ")";
	
	КСВыполнено = КССучетомОтклонения(КС.ЛеваяЧасть, КС.ПраваяЧасть, Погрешность);
	Если КСВыполнено Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение, );
	
	СтруктураРезультата.КоличествоНайденныхОшибок    = ОбщееЧислоОшибок;
	СтруктураРезультата.КоличествоНайденныхБезОшибок = ОбщееЧислоБезОшибок;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_0_1б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы    = НСтр("ru='Проверка Подраздела 1.1 Приложения 1 (КС 0.1б)'");
	ОписаниеКС      = НСтр("ru='Сумма исчисленных страховых взносов (гр. 4 ст. 061 подразд. 1.1 прил. 1) = "
		+ "∑ стр. 240 (2 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, "
		+ "умноженное на количество застрахованных лиц)'");
	ОписаниеОшибки  = НСтр("ru='Общая сумма исчисленных страховых взносов на ОПС за каждый месяц с базы, не "
		+ "превышающей предельной величины, в целом по плательщику ≠ сумме исчисленных страховых взносов на "
		+ "ОПС за соответствующий месяц с базы, не превышающей предельной величины, по каждому физическому лицу'");
	Нарушение       = НСтр("ru='Статья 431 НК РФ'");
	
	Р1П1Ст61Гр04 = ПоказательПоСтроке("Р1П1Ст61Гр04");
	Р3Ст240Гр01  = ПоказательПоСтроке("Р3Ст240Гр01");
	Р3Ст190Гр01  = ПоказательПоСтроке("Р3Ст190Гр01");
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1П1Ст61Гр04 = 0;
	СуммаР1П1Ст61Гр04Стр = "";
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел1Прил1 Цикл
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Р1П1Ст61Гр04);
		ВнестиПоказательВРасшифровку(Р1П1Ст61Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаР1П1Ст61Гр04 = СуммаР1П1Ст61Гр04 + Р1П1Ст61Гр04.Значение;
		СуммаР1П1Ст61Гр04Стр = СуммаР1П1Ст61Гр04Стр + Р1П1Ст61Гр04.ЗначениеСтр + " + ";
	КонецЦикла;
	
	Погрешность = 0;
	СуммаР3Ст240Гр01 = 0;
	СуммаР3Ст240Гр01Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел3 Цикл
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КоличествоСтрокМногострочнойЧасти = КоличествоСтрок(СтраницаРаздела.Данные, Р3Ст190Гр01.Имя);
		Для Инд = 1 По КоличествоСтрокМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р3Ст190Гр01, Инд);
			Если КодНайден(Р3Ст190Гр01.Значение, "02,05,08,11") Тогда
				ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р3Ст240Гр01, Инд);
				Если Число(" " + НомерСтраницыСтр) <= 9 Тогда
					ВнестиПоказательВРасшифровку(Р3Ст190Гр01, "Раздел3", НомерСтраницыСтр);
					ВнестиПоказательВРасшифровку(Р3Ст240Гр01, "Раздел3", НомерСтраницыСтр);
					СуммаР3Ст240Гр01Стр = СуммаР3Ст240Гр01Стр + Р3Ст240Гр01.ЗначениеСтр + " + ";
				ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
					СуммаР3Ст240Гр01Стр = СуммаР3Ст240Гр01Стр + ПредставлениеПродолжения;
					ПредставлениеПродолжения = "";
				КонецЕсли;
				СуммаР3Ст240Гр01 = СуммаР3Ст240Гр01 + Р3Ст240Гр01.Значение;
			КонецЕсли;
		КонецЦикла;
		// Количество застрахованных лиц равно количеству листов раздела 3 (погрешность 0,5 коп. на одно лицо).
		Погрешность = Погрешность + 0.005;
	КонецЦикла;
	
	ПогрешностьСтр = Формат(Погрешность, "ЧРД=,; ЧН=");
	
	КС = ПоказателиКС(СуммаР1П1Ст61Гр04, СуммаР3Ст240Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1П1Ст61Гр04Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
		+ РасшифровкаВСтр(СуммаР3Ст240Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "] (±" + ПогрешностьСтр + ")";
	
	КСВыполнено = КССучетомОтклонения(КС.ЛеваяЧасть, КС.ПраваяЧасть, Погрешность);
	Если КСВыполнено Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение, );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_0_1в(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы    = НСтр("ru='Проверка Подраздела 1.1 Приложения 1 (КС 0.1в)'");
	ОписаниеКС      = НСтр("ru='Сумма исчисленных страховых взносов (гр. 5 ст. 061 подразд. 1.1 прил. 1) = "
		+ "∑ стр. 240 (3 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, "
		+ "умноженное на количество застрахованных лиц)'");
	ОписаниеОшибки  = НСтр("ru='Общая сумма исчисленных страховых взносов на ОПС за каждый месяц с базы, не "
		+ "превышающей предельной величины, в целом по плательщику ≠ сумме исчисленных страховых взносов на "
		+ "ОПС за соответствующий месяц с базы, не превышающей предельной величины, по каждому физическому лицу'");
	Нарушение       = НСтр("ru='Статья 431 НК РФ'");
	
	Р1П1Ст61Гр05 = ПоказательПоСтроке("Р1П1Ст61Гр05");
	Р3Ст240Гр01  = ПоказательПоСтроке("Р3Ст240Гр01");
	Р3Ст190Гр01  = ПоказательПоСтроке("Р3Ст190Гр01");
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1П1Ст61Гр05 = 0;
	СуммаР1П1Ст61Гр05Стр = "";
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел1Прил1 Цикл
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Р1П1Ст61Гр05);
		ВнестиПоказательВРасшифровку(Р1П1Ст61Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаР1П1Ст61Гр05 = СуммаР1П1Ст61Гр05 + Р1П1Ст61Гр05.Значение;
		СуммаР1П1Ст61Гр05Стр = СуммаР1П1Ст61Гр05Стр + Р1П1Ст61Гр05.ЗначениеСтр + " + ";
	КонецЦикла;
	
	Погрешность = 0;
	СуммаР3Ст240Гр01 = 0;
	СуммаР3Ст240Гр01Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел3 Цикл
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КоличествоСтрокМногострочнойЧасти = КоличествоСтрок(СтраницаРаздела.Данные, Р3Ст190Гр01.Имя);
		Для Инд = 1 По КоличествоСтрокМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р3Ст190Гр01, Инд);
			Если КодНайден(Р3Ст190Гр01.Значение, "03,06,09,12") Тогда
				ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р3Ст240Гр01, Инд);
				Если Число(" " + НомерСтраницыСтр) <= 9 Тогда
					ВнестиПоказательВРасшифровку(Р3Ст190Гр01, "Раздел3", НомерСтраницыСтр);
					ВнестиПоказательВРасшифровку(Р3Ст240Гр01, "Раздел3", НомерСтраницыСтр);
					СуммаР3Ст240Гр01Стр = СуммаР3Ст240Гр01Стр + Р3Ст240Гр01.ЗначениеСтр + " + ";
				ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
					СуммаР3Ст240Гр01Стр = СуммаР3Ст240Гр01Стр + ПредставлениеПродолжения;
					ПредставлениеПродолжения = "";
				КонецЕсли;
				СуммаР3Ст240Гр01 = СуммаР3Ст240Гр01 + Р3Ст240Гр01.Значение;
			КонецЕсли;
		КонецЦикла;
		// Количество застрахованных лиц равно количеству листов раздела 3 (погрешность 0,5 коп. на одно лицо).
		Погрешность = Погрешность + 0.005;
	КонецЦикла;
	
	ПогрешностьСтр = Формат(Погрешность, "ЧРД=,; ЧН=");
	
	КС = ПоказателиКС(СуммаР1П1Ст61Гр05, СуммаР3Ст240Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1П1Ст61Гр05Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
		+ РасшифровкаВСтр(СуммаР3Ст240Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "] (±" + ПогрешностьСтр + ")";
	
	КСВыполнено = КССучетомОтклонения(КС.ЛеваяЧасть, КС.ПраваяЧасть, Погрешность);
	Если КСВыполнено Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение, );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_0_1г(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы    = НСтр("ru='Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.1г)'");
	ОписаниеКС      = НСтр("ru='Сумма исчисленных страховых взносов по дополнительному тарифу "
		+ "(гр. 3 ст. 050 подразд. 1.3.1 прил. 1 + гр. 3 ст. 050 подразд. 1.3.2) = ∑ стр. 290 "
		+ "(1 месяц) подразд. 3.2.2 (допустимо различие не более чем на значение в 0,5 копейки, "
		+ "умноженное на количество застрахованных лиц)'");
	ОписаниеОшибки  = НСтр("ru='Общая сумма исчисленных страховых взносов на ОПС за каждый месяц "
		+ "по дополнительному тарифу в целом по плательщику ≠ сумме страховых взносов на ОПС за "
		+ "каждый месяц по дополнительному тарифу по каждому физическому лицу'");
	Нарушение       = НСтр("ru='Статья 431 НК РФ'");
	
	Р1П1Пр131Ст50Гр03 = ПоказательПоСтроке("Р1П1Пр131Ст50Гр03");
	Р1П1Пр132Ст50Гр03 = ПоказательПоСтроке("Р1П1Пр132Ст50Гр03");
	Р3Ст290Гр01       = ПоказательПоСтроке("Р3Ст290Гр01");
	Р3Ст260Гр01       = ПоказательПоСтроке("Р3Ст260Гр01");
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1П1Пр13Ст50Гр03 = 0;
	СуммаР1П1Пр13Ст50Гр03Стр = "";
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел1Прил1 Цикл
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КоличествоСтрокМногострочнойЧасти = КоличествоСтрок(СтраницаРаздела.Данные, Р1П1Пр131Ст50Гр03.Имя);
		Для Инд = 1 По КоличествоСтрокМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р1П1Пр131Ст50Гр03, Инд);
			ВнестиПоказательВРасшифровку(Р1П1Пр131Ст50Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			СуммаР1П1Пр13Ст50Гр03 = СуммаР1П1Пр13Ст50Гр03 + Р1П1Пр131Ст50Гр03.Значение;
			СуммаР1П1Пр13Ст50Гр03Стр = СуммаР1П1Пр13Ст50Гр03Стр + Р1П1Пр131Ст50Гр03.ЗначениеСтр + " + ";
		КонецЦикла;
		
		КоличествоСтрокМногострочнойЧасти = КоличествоСтрок(СтраницаРаздела.Данные, Р1П1Пр132Ст50Гр03.Имя);
		Для Инд = 1 По КоличествоСтрокМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р1П1Пр132Ст50Гр03, Инд);
			ВнестиПоказательВРасшифровку(Р1П1Пр132Ст50Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			СуммаР1П1Пр13Ст50Гр03 = СуммаР1П1Пр13Ст50Гр03 + Р1П1Пр132Ст50Гр03.Значение;
			СуммаР1П1Пр13Ст50Гр03Стр = СуммаР1П1Пр13Ст50Гр03Стр + Р1П1Пр132Ст50Гр03.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Погрешность = 0;
	СуммаР3Ст290Гр01 = 0;
	СуммаР3Ст290Гр01Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел3 Цикл
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КоличествоСтрокМногострочнойЧасти = КоличествоСтрок(СтраницаРаздела.Данные, Р3Ст260Гр01.Имя);
		Для Инд = 1 По КоличествоСтрокМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р3Ст260Гр01, Инд);
			Если КодНайден(Р3Ст260Гр01.Значение, "01,04,07,10") Тогда
				ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р3Ст290Гр01, Инд);
				Если Число(" " + НомерСтраницыСтр) <= 9 Тогда
					ВнестиПоказательВРасшифровку(Р3Ст260Гр01, "Раздел3", НомерСтраницыСтр);
					ВнестиПоказательВРасшифровку(Р3Ст290Гр01, "Раздел3", НомерСтраницыСтр);
					СуммаР3Ст290Гр01Стр = СуммаР3Ст290Гр01Стр + Р3Ст290Гр01.ЗначениеСтр + " + ";
				ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
					СуммаР3Ст290Гр01Стр = СуммаР3Ст290Гр01Стр + ПредставлениеПродолжения;
					ПредставлениеПродолжения = "";
				КонецЕсли;
				СуммаР3Ст290Гр01 = СуммаР3Ст290Гр01 + Р3Ст290Гр01.Значение;
			КонецЕсли;
		КонецЦикла;
		// Количество застрахованных лиц равно количеству листов раздела 3 (погрешность 0,5 коп. на одно лицо).
		Погрешность = Погрешность + 0.005;
	КонецЦикла;
	
	ПогрешностьСтр = Формат(Погрешность, "ЧРД=,; ЧН=");
	
	КС = ПоказателиКС(СуммаР1П1Пр13Ст50Гр03, СуммаР3Ст290Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1П1Пр13Ст50Гр03Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
		+ РасшифровкаВСтр(СуммаР3Ст290Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "] (±" + ПогрешностьСтр + ")";
	
	КСВыполнено = КССучетомОтклонения(КС.ЛеваяЧасть, КС.ПраваяЧасть, Погрешность);
	Если КСВыполнено Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение, );
	
	СтруктураРезультата.КоличествоНайденныхОшибок    = ОбщееЧислоОшибок;
	СтруктураРезультата.КоличествоНайденныхБезОшибок = ОбщееЧислоБезОшибок;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_0_1д(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы    = НСтр("ru='Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.1д)'");
	ОписаниеКС      = НСтр("ru='Сумма исчисленных страховых взносов по дополнительному тарифу "
		+ "(гр. 4 ст. 050 подразд. 1.3.1 прил. 1 + гр. 4 ст. 050 подразд. 1.3.2) = ∑ стр. 290 "
		+ "(2 месяц) подразд. 3.2.2 (допустимо различие не более чем на значение в 0,5 копейки, "
		+ "умноженное на количество застрахованных лиц)'");
	ОписаниеОшибки  = НСтр("ru='Общая сумма исчисленных страховых взносов на ОПС за каждый месяц "
		+ "по дополнительному тарифу в целом по плательщику ≠ сумме страховых взносов на ОПС за "
		+ "каждый месяц по дополнительному тарифу по каждому физическому лицу'");
	Нарушение       = НСтр("ru='Статья 431 НК РФ'");
	
	Р1П1Пр131Ст50Гр04 = ПоказательПоСтроке("Р1П1Пр131Ст50Гр04");
	Р1П1Пр132Ст50Гр04 = ПоказательПоСтроке("Р1П1Пр132Ст50Гр04");
	Р3Ст290Гр01       = ПоказательПоСтроке("Р3Ст290Гр01");
	Р3Ст260Гр01       = ПоказательПоСтроке("Р3Ст260Гр01");
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1П1Пр13Ст50Гр04 = 0;
	СуммаР1П1Пр13Ст50Гр04Стр = "";
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел1Прил1 Цикл
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КоличествоСтрокМногострочнойЧасти = КоличествоСтрок(СтраницаРаздела.Данные, Р1П1Пр131Ст50Гр04.Имя);
		Для Инд = 1 По КоличествоСтрокМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р1П1Пр131Ст50Гр04, Инд);
			ВнестиПоказательВРасшифровку(Р1П1Пр131Ст50Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			СуммаР1П1Пр13Ст50Гр04 = СуммаР1П1Пр13Ст50Гр04 + Р1П1Пр131Ст50Гр04.Значение;
			СуммаР1П1Пр13Ст50Гр04Стр = СуммаР1П1Пр13Ст50Гр04Стр + Р1П1Пр131Ст50Гр04.ЗначениеСтр + " + ";
		КонецЦикла;
		
		КоличествоСтрокМногострочнойЧасти = КоличествоСтрок(СтраницаРаздела.Данные, Р1П1Пр132Ст50Гр04.Имя);
		Для Инд = 1 По КоличествоСтрокМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р1П1Пр132Ст50Гр04, Инд);
			ВнестиПоказательВРасшифровку(Р1П1Пр132Ст50Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			СуммаР1П1Пр13Ст50Гр04 = СуммаР1П1Пр13Ст50Гр04 + Р1П1Пр132Ст50Гр04.Значение;
			СуммаР1П1Пр13Ст50Гр04Стр = СуммаР1П1Пр13Ст50Гр04Стр + Р1П1Пр132Ст50Гр04.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Погрешность = 0;
	СуммаР3Ст290Гр01 = 0;
	СуммаР3Ст290Гр01Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел3 Цикл
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КоличествоСтрокМногострочнойЧасти = КоличествоСтрок(СтраницаРаздела.Данные, Р3Ст260Гр01.Имя);
		Для Инд = 1 По КоличествоСтрокМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р3Ст260Гр01, Инд);
			Если КодНайден(Р3Ст260Гр01.Значение, "02,05,08,11") Тогда
				ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р3Ст290Гр01, Инд);
				Если Число(" " + НомерСтраницыСтр) <= 9 Тогда
					ВнестиПоказательВРасшифровку(Р3Ст260Гр01, "Раздел3", НомерСтраницыСтр);
					ВнестиПоказательВРасшифровку(Р3Ст290Гр01, "Раздел3", НомерСтраницыСтр);
					СуммаР3Ст290Гр01Стр = СуммаР3Ст290Гр01Стр + Р3Ст290Гр01.ЗначениеСтр + " + ";
				ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
					СуммаР3Ст290Гр01Стр = СуммаР3Ст290Гр01Стр + ПредставлениеПродолжения;
					ПредставлениеПродолжения = "";
				КонецЕсли;
				СуммаР3Ст290Гр01 = СуммаР3Ст290Гр01 + Р3Ст290Гр01.Значение;
			КонецЕсли;
		КонецЦикла;
		// Количество застрахованных лиц равно количеству листов раздела 3 (погрешность 0,5 коп. на одно лицо).
		Погрешность = Погрешность + 0.005;
	КонецЦикла;
	
	ПогрешностьСтр = Формат(Погрешность, "ЧРД=,; ЧН=");
	
	КС = ПоказателиКС(СуммаР1П1Пр13Ст50Гр04, СуммаР3Ст290Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1П1Пр13Ст50Гр04Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
		+ РасшифровкаВСтр(СуммаР3Ст290Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "] (±" + ПогрешностьСтр + ")";
	
	КСВыполнено = КССучетомОтклонения(КС.ЛеваяЧасть, КС.ПраваяЧасть, Погрешность);
	Если КСВыполнено Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение, );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_0_1е(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы    = НСтр("ru='Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.1е)'");
	ОписаниеКС      = НСтр("ru='Сумма исчисленных страховых взносов по дополнительному тарифу "
		+ "(гр. 5 ст. 050 подразд. 1.3.1 прил. 1 + гр. 5 ст. 050 подразд. 1.3.2) = ∑ стр. 290 "
		+ "(3 месяц) подразд. 3.2.2 (допустимо различие не более чем на значение в 0,5 копейки, "
		+ "умноженное на количество застрахованных лиц)'");
	ОписаниеОшибки  = НСтр("ru='Общая сумма исчисленных страховых взносов на ОПС за каждый месяц "
		+ "по дополнительному тарифу в целом по плательщику ≠ сумме страховых взносов на ОПС за "
		+ "каждый месяц по дополнительному тарифу по каждому физическому лицу'");
	Нарушение       = НСтр("ru='Статья 431 НК РФ'");
	
	Р1П1Пр131Ст50Гр05 = ПоказательПоСтроке("Р1П1Пр131Ст50Гр05");
	Р1П1Пр132Ст50Гр05 = ПоказательПоСтроке("Р1П1Пр132Ст50Гр05");
	Р3Ст290Гр01       = ПоказательПоСтроке("Р3Ст290Гр01");
	Р3Ст260Гр01       = ПоказательПоСтроке("Р3Ст260Гр01");
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1П1Пр13Ст50Гр05 = 0;
	СуммаР1П1Пр13Ст50Гр05Стр = "";
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел1Прил1 Цикл
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КоличествоСтрокМногострочнойЧасти = КоличествоСтрок(СтраницаРаздела.Данные, Р1П1Пр131Ст50Гр05.Имя);
		Для Инд = 1 По КоличествоСтрокМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р1П1Пр131Ст50Гр05, Инд);
			ВнестиПоказательВРасшифровку(Р1П1Пр131Ст50Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			СуммаР1П1Пр13Ст50Гр05 = СуммаР1П1Пр13Ст50Гр05 + Р1П1Пр131Ст50Гр05.Значение;
			СуммаР1П1Пр13Ст50Гр05Стр = СуммаР1П1Пр13Ст50Гр05Стр + Р1П1Пр131Ст50Гр05.ЗначениеСтр + " + ";
		КонецЦикла;
		
		КоличествоСтрокМногострочнойЧасти = КоличествоСтрок(СтраницаРаздела.Данные, Р1П1Пр132Ст50Гр05.Имя);
		Для Инд = 1 По КоличествоСтрокМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р1П1Пр132Ст50Гр05, Инд);
			ВнестиПоказательВРасшифровку(Р1П1Пр132Ст50Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			СуммаР1П1Пр13Ст50Гр05 = СуммаР1П1Пр13Ст50Гр05 + Р1П1Пр132Ст50Гр05.Значение;
			СуммаР1П1Пр13Ст50Гр05Стр = СуммаР1П1Пр13Ст50Гр05Стр + Р1П1Пр132Ст50Гр05.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Погрешность = 0;
	СуммаР3Ст290Гр01 = 0;
	СуммаР3Ст290Гр01Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из мДанныеОтчета.Раздел3 Цикл
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КоличествоСтрокМногострочнойЧасти = КоличествоСтрок(СтраницаРаздела.Данные, Р3Ст260Гр01.Имя);
		Для Инд = 1 По КоличествоСтрокМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р3Ст260Гр01, Инд);
			Если КодНайден(Р3Ст260Гр01.Значение, "03,06,09,12") Тогда
				ВставитьЗначениеМногострочногоПоказателя(СтраницаРаздела.Данные, Р3Ст290Гр01, Инд);
				Если Число(" " + НомерСтраницыСтр) <= 9 Тогда
					ВнестиПоказательВРасшифровку(Р3Ст260Гр01, "Раздел3", НомерСтраницыСтр);
					ВнестиПоказательВРасшифровку(Р3Ст290Гр01, "Раздел3", НомерСтраницыСтр);
					СуммаР3Ст290Гр01Стр = СуммаР3Ст290Гр01Стр + Р3Ст290Гр01.ЗначениеСтр + " + ";
				ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
					СуммаР3Ст290Гр01Стр = СуммаР3Ст290Гр01Стр + ПредставлениеПродолжения;
					ПредставлениеПродолжения = "";
				КонецЕсли;
				СуммаР3Ст290Гр01 = СуммаР3Ст290Гр01 + Р3Ст290Гр01.Значение;
			КонецЕсли;
		КонецЦикла;
		// Количество застрахованных лиц равно количеству листов раздела 3 (погрешность 0,5 коп. на одно лицо).
		Погрешность = Погрешность + 0.005;
	КонецЦикла;
	
	ПогрешностьСтр = Формат(Погрешность, "ЧРД=,; ЧН=");
	
	КС = ПоказателиКС(СуммаР1П1Пр13Ст50Гр05, СуммаР3Ст290Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1П1Пр13Ст50Гр05Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
		+ РасшифровкаВСтр(СуммаР3Ст290Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "] (±" + ПогрешностьСтр + ")";
	
	КСВыполнено = КССучетомОтклонения(КС.ЛеваяЧасть, КС.ПраваяЧасть, Погрешность);
	Если КСВыполнено Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение, );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_0(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Титульного листа (КС 1.0)'");
	ОписаниеКС     = НСтр("ru='Титульный лист (ст. 001) ""Дата представления Расчета"" должна быть раньше или равна "
		+ "30 (апреля\июля\октября) (ст. 431 НК РФ), если ""Номер корректировки"" ""0--""'");
	ОписаниеОшибки = НСтр("ru='Возможное нарушение срока представления первичного Расчета'");
	Нарушение      = НСтр("ru='Пункт 1 статьи 119 НК РФ'");
	
	ТитульныйСт001 = ПоказательПоСтроке("ТитульныйСт001");
	
	Титульный = мДанныеОтчета.Титульный;
	
	ВставитьЗначениеПоказателя(Титульный, ТитульныйСт001);
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВнестиПоказательВРасшифровку(ТитульныйСт001, "Титульный");
	
	ВариантОтчета = СтруктураРеквизитовФормы.мСохраненныйДок.Вид;
	ВариантОтчетаСтр = """" + Лев(Формат(ВариантОтчета, "ЧН=") + "---", 3) + """";
	
	ДатаМесяцаПредставленияРасчета = ДобавитьМесяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания, 1);
	ПредельнаяДатаМесяцаПредставленияРасчета = Дата(Год(ДатаМесяцаПредставленияРасчета), Месяц(ДатаМесяцаПредставленияРасчета), 30, 23, 59, 59);
	ПредельнаяДатаМесяцаПредставленияРасчетаСтр = Формат(ПредельнаяДатаМесяцаПредставленияРасчета, "ДЛФ=D");
	
	Расшифровка = ТитульныйСт001.ЗначениеСтр + " <= " + ПредельнаяДатаМесяцаПредставленияРасчетаСтр + ", когда ""Номер корректировки"" = " + ВариантОтчетаСтр;
	
	УсловиеВыполнено = (ВариантОтчета = 0 И Месяц(ДатаМесяцаПредставленияРасчета) <> 12);
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И ТитульныйСт001.Значение <= ПредельнаяДатаМесяцаПредставленияРасчета) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, Нарушение, );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_1(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.1)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный (отчетный) период на ОПС "
		+ "(ст. 030 р. 1) = ст. 030 р. 1 предыдущего отчетного периода + ст. 031 р. 1 отчетного периода + ст. 032 р. 1"
		+ " отчетного периода + ст. 033 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС за отчетный период ≠ сумме страховых взносов на ОПС за "
		+ "предыдущий отчетный период и за последние три месяца отчетного периода'");
	
	Р1Ст30Гр01    = ПоказательПоСтроке("Р1Ст30Гр01");
	Р1Ст31Гр01    = ПоказательПоСтроке("Р1Ст31Гр01");
	Р1Ст32Гр01    = ПоказательПоСтроке("Р1Ст32Гр01");
	Р1Ст33Гр01    = ПоказательПоСтроке("Р1Ст33Гр01");
	Р1Ст30Гр01ПРП = ПоказательПоСтроке("Р1Ст30Гр01ПРП");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП  = Неопределено;
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст30Гр01);
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст31Гр01);
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст32Гр01);
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст33Гр01);
	Если ПроверятьКС Тогда
		Если МесяцПредставленияОтчета = 3 Тогда
			ВставитьЗначениеПоказателя(Новый Структура(), Р1Ст30Гр01ПРП); // вставляем нулевое значение
		Иначе
			ВставитьЗначениеПоказателя(Раздел1ПРП, Р1Ст30Гр01ПРП);
		КонецЕсли;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВнестиПоказательВРасшифровку(Р1Ст30Гр01, "Раздел1");
	ВнестиПоказательВРасшифровку(Р1Ст31Гр01, "Раздел1");
	ВнестиПоказательВРасшифровку(Р1Ст32Гр01, "Раздел1");
	ВнестиПоказательВРасшифровку(Р1Ст33Гр01, "Раздел1");
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Ст30Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	
	КС = ПоказателиКС(Р1Ст30Гр01.Значение, ?(ПроверятьКС, Р1Ст30Гр01ПРП.Значение, 0) + Р1Ст31Гр01.Значение + Р1Ст32Гр01.Значение + Р1Ст33Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + ?(ПроверятьКС И МесяцПредставленияОтчета <> 3, Р1Ст30Гр01ПРП.ЗначениеСтр + " + ", "")
		+ Р1Ст31Гр01.ЗначениеСтр + " + " + Р1Ст32Гр01.ЗначениеСтр + " + " + Р1Ст33Гр01.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "]" + ", когда существует отчет предыдущего отчетного периода";
	
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_2(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.2)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный (отчетный) период на ОМС "
		+ "(ст. 050 р. 1) = ст. 050 р. 1 предыдущего отчетного периода + ст. 051 р. 1 отчетного периода + ст. 052 р. 1 "
		+ "отчетного периода + ст. 053 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОМС за отчетный период ≠ сумме страховых взносов на ОМС за "
		+ "предыдущий отчетный период и за последние три месяца отчетного периода'");
	
	Р1Ст50Гр01    = ПоказательПоСтроке("Р1Ст50Гр01");
	Р1Ст51Гр01    = ПоказательПоСтроке("Р1Ст51Гр01");
	Р1Ст52Гр01    = ПоказательПоСтроке("Р1Ст52Гр01");
	Р1Ст53Гр01    = ПоказательПоСтроке("Р1Ст53Гр01");
	Р1Ст50Гр01ПРП = ПоказательПоСтроке("Р1Ст50Гр01ПРП");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП  = Неопределено;
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст50Гр01);
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст51Гр01);
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст52Гр01);
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст53Гр01);
	Если ПроверятьКС Тогда
		Если МесяцПредставленияОтчета = 3 Тогда
			ВставитьЗначениеПоказателя(Новый Структура(), Р1Ст50Гр01ПРП); // вставляем нулевое значение
		Иначе
			ВставитьЗначениеПоказателя(Раздел1ПРП, Р1Ст50Гр01ПРП);
		КонецЕсли;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВнестиПоказательВРасшифровку(Р1Ст50Гр01, "Раздел1");
	ВнестиПоказательВРасшифровку(Р1Ст51Гр01, "Раздел1");
	ВнестиПоказательВРасшифровку(Р1Ст52Гр01, "Раздел1");
	ВнестиПоказательВРасшифровку(Р1Ст53Гр01, "Раздел1");
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Ст50Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	
	КС = ПоказателиКС(Р1Ст50Гр01.Значение, ?(ПроверятьКС, Р1Ст50Гр01ПРП.Значение, 0) + Р1Ст51Гр01.Значение + Р1Ст52Гр01.Значение + Р1Ст53Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + ?(ПроверятьКС И МесяцПредставленияОтчета <> 3, Р1Ст50Гр01ПРП.ЗначениеСтр + " + ", "")
		+ Р1Ст51Гр01.ЗначениеСтр + " + " + Р1Ст52Гр01.ЗначениеСтр + " + " + Р1Ст53Гр01.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "]" + ", когда существует отчет предыдущего отчетного периода";
	
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_3а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.3а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный (отчетный) период на "
		+ "ОПС по дополнительному тарифу (ст. 070 р. 1) для КБК 182 102 02131 06 1010 160 (ст. 060 р.1) = "
		+ "ст. 070 р. 1 предыдущего отчетного периода + ст. 071 р. 1 отчетного периода + ст. 072 р. 1 "
		+ "отчетного периода + ст. 073 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу за отчетный период ≠ "
		+ "сумме страховых взносов на ОПС по дополнительному тарифу за предыдущий отчетный период и за последние "
		+ "три месяца отчетного периода по каждому КБК'");
	
	Р1СтМ1060Гр01    = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1070Гр01    = ПоказательПоСтроке("Р1СтМ1070Гр01");
	Р1СтМ1071Гр01    = ПоказательПоСтроке("Р1СтМ1071Гр01");
	Р1СтМ1072Гр01    = ПоказательПоСтроке("Р1СтМ1072Гр01");
	Р1СтМ1073Гр01    = ПоказательПоСтроке("Р1СтМ1073Гр01");
	Р1СтМ1060Гр01ПРП = ПоказательПоСтроке("Р1СтМ1060Гр01ПРП");
	Р1СтМ1070Гр01ПРП = ПоказательПоСтроке("Р1СтМ1070Гр01ПРП");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП  = Неопределено;
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1СтМ1070Гр01ПРП = 0;
	СуммаР1СтМ1070Гр01ПРПСтр = "";
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1ПРП, Р1СтМ1060Гр01ПРП.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ1060Гр01ПРП, Инд);
			ПроверятьКС = Ложь;
			Если КодНайден(Р1СтМ1060Гр01ПРП.Значение, "18210202131061010160") Тогда
				ПроверятьКС = Истина;
				ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ1070Гр01ПРП, Инд);
				ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				СуммаР1СтМ1070Гр01ПРП = СуммаР1СтМ1070Гр01ПРП + Р1СтМ1070Гр01ПРП.Значение;
				СуммаР1СтМ1070Гр01ПРПСтр = СуммаР1СтМ1070Гр01ПРПСтр + Р1СтМ1070Гр01ПРП.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СуммаР1СтМ1070Гр01 = 0;
	СуммаР1СтМ1070Гр01Стр = "";
	СуммаР1СтМ107хГр01 = 0;
	СуммаР1СтМ107хГр01Стр = "";
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1070Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01, "Раздел1");
			
			СуммаР1СтМ1070Гр01 = СуммаР1СтМ1070Гр01 + Р1СтМ1070Гр01.Значение;
			СуммаР1СтМ1070Гр01Стр = СуммаР1СтМ1070Гр01Стр + Р1СтМ1070Гр01.ЗначениеСтр + " + ";
			
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1071Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1071Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1072Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1072Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1073Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1073Гр01, "Раздел1");
			
			СуммаР1СтМ107хГр01 = СуммаР1СтМ107хГр01 + Р1СтМ1071Гр01.Значение + Р1СтМ1072Гр01.Значение + Р1СтМ1073Гр01.Значение;
			СуммаР1СтМ107хГр01Стр = СуммаР1СтМ107хГр01Стр 
				+ Р1СтМ1071Гр01.ЗначениеСтр + " + " + Р1СтМ1072Гр01.ЗначениеСтр + " + " + Р1СтМ1073Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1070Гр01, СуммаР1СтМ1070Гр01ПРП + СуммаР1СтМ107хГр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1070Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаР1СтМ1070Гр01ПРПСтр + СуммаР1СтМ107хГр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", когда существует отчет предыдущего отчетного периода";
	
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_3б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.3б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный (отчетный) период на ОПС "
		+ "по дополнительному тарифу (ст. 070 р. 1) для КБК 182 102 02131 06 1020 160 (ст. 060 р.1) = ст. 070 р. 1 "
		+ "предыдущего отчетного периода + ст. 071 р. 1 отчетного периода + ст. 072 р. 1 отчетного периода + ст. 073 р. 1 "
		+ "отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу за отчетный период ≠ "
		+ "сумме страховых взносов на ОПС по дополнительному тарифу за предыдущий отчетный период и за последние "
		+ "три месяца отчетного периода по каждому КБК'");
	
	Р1СтМ1060Гр01    = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1070Гр01    = ПоказательПоСтроке("Р1СтМ1070Гр01");
	Р1СтМ1071Гр01    = ПоказательПоСтроке("Р1СтМ1071Гр01");
	Р1СтМ1072Гр01    = ПоказательПоСтроке("Р1СтМ1072Гр01");
	Р1СтМ1073Гр01    = ПоказательПоСтроке("Р1СтМ1073Гр01");
	Р1СтМ1060Гр01ПРП = ПоказательПоСтроке("Р1СтМ1060Гр01ПРП");
	Р1СтМ1070Гр01ПРП = ПоказательПоСтроке("Р1СтМ1070Гр01ПРП");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП  = Неопределено;
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1СтМ1070Гр01ПРП = 0;
	СуммаР1СтМ1070Гр01ПРПСтр = "";

	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1ПРП, Р1СтМ1060Гр01ПРП.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ1060Гр01ПРП, Инд);
			ПроверятьКС = Ложь;
			Если КодНайден(Р1СтМ1060Гр01ПРП.Значение, "18210202131061020160") Тогда
				ПроверятьКС = Истина;
				ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ1070Гр01ПРП, Инд);
				ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				СуммаР1СтМ1070Гр01ПРП = СуммаР1СтМ1070Гр01ПРП + Р1СтМ1070Гр01ПРП.Значение;
				СуммаР1СтМ1070Гр01ПРПСтр = СуммаР1СтМ1070Гр01ПРПСтр + Р1СтМ1070Гр01ПРП.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СуммаР1СтМ1070Гр01 = 0;
	СуммаР1СтМ1070Гр01Стр = "";
	СуммаР1СтМ107хГр01 = 0;
	СуммаР1СтМ107хГр01Стр = "";
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1070Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01, "Раздел1");
			
			СуммаР1СтМ1070Гр01 = СуммаР1СтМ1070Гр01 + Р1СтМ1070Гр01.Значение;
			СуммаР1СтМ1070Гр01Стр = СуммаР1СтМ1070Гр01Стр + Р1СтМ1070Гр01.ЗначениеСтр + " + ";
			
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1071Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1071Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1072Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1072Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1073Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1073Гр01, "Раздел1");
			
			СуммаР1СтМ107хГр01 = СуммаР1СтМ107хГр01 + Р1СтМ1071Гр01.Значение + Р1СтМ1072Гр01.Значение + Р1СтМ1073Гр01.Значение;
			СуммаР1СтМ107хГр01Стр = СуммаР1СтМ107хГр01Стр 
				+ Р1СтМ1071Гр01.ЗначениеСтр + " + " + Р1СтМ1072Гр01.ЗначениеСтр + " + " + Р1СтМ1073Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1070Гр01, СуммаР1СтМ1070Гр01ПРП + СуммаР1СтМ107хГр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1070Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаР1СтМ1070Гр01ПРПСтр + СуммаР1СтМ107хГр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", когда существует отчет предыдущего отчетного периода";
	
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_3в(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.3в)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный (отчетный) период на "
		+ "ОПС по дополнительному тарифу (ст. 070 р. 1) для КБК 182 102 02132 06 1010 160 (ст. 060 р.1) = ст. 070 р. 1 "
		+ "предыдущего отчетного периода + ст. 071 р. 1 отчетного периода + ст. 072 р. 1 отчетного периода + ст. 073 р. 1 "
		+ "отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу за отчетный период ≠ "
		+ "сумме страховых взносов на ОПС по дополнительному тарифу за предыдущий отчетный период и за последние "
		+ "три месяца отчетного периода по каждому КБК'");
	
	Р1СтМ1060Гр01    = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1070Гр01    = ПоказательПоСтроке("Р1СтМ1070Гр01");
	Р1СтМ1071Гр01    = ПоказательПоСтроке("Р1СтМ1071Гр01");
	Р1СтМ1072Гр01    = ПоказательПоСтроке("Р1СтМ1072Гр01");
	Р1СтМ1073Гр01    = ПоказательПоСтроке("Р1СтМ1073Гр01");
	Р1СтМ1060Гр01ПРП = ПоказательПоСтроке("Р1СтМ1060Гр01ПРП");
	Р1СтМ1070Гр01ПРП = ПоказательПоСтроке("Р1СтМ1070Гр01ПРП");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП  = Неопределено;
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1СтМ1070Гр01ПРП = 0;
	СуммаР1СтМ1070Гр01ПРПСтр = "";
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1ПРП, Р1СтМ1060Гр01ПРП.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ1060Гр01ПРП, Инд);
			ПроверятьКС = Ложь;
			Если КодНайден(Р1СтМ1060Гр01ПРП.Значение, "18210202132061010160") Тогда
				ПроверятьКС = Истина;
				ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ1070Гр01ПРП, Инд);
				ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				СуммаР1СтМ1070Гр01ПРП = СуммаР1СтМ1070Гр01ПРП + Р1СтМ1070Гр01ПРП.Значение;
				СуммаР1СтМ1070Гр01ПРПСтр = СуммаР1СтМ1070Гр01ПРПСтр + Р1СтМ1070Гр01ПРП.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СуммаР1СтМ1070Гр01 = 0;
	СуммаР1СтМ1070Гр01Стр = "";
	СуммаР1СтМ107хГр01 = 0;
	СуммаР1СтМ107хГр01Стр = "";
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1070Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01, "Раздел1");
			
			СуммаР1СтМ1070Гр01 = СуммаР1СтМ1070Гр01 + Р1СтМ1070Гр01.Значение;
			СуммаР1СтМ1070Гр01Стр = СуммаР1СтМ1070Гр01Стр + Р1СтМ1070Гр01.ЗначениеСтр + " + ";
			
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1071Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1071Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1072Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1072Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1073Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1073Гр01, "Раздел1");
			
			СуммаР1СтМ107хГр01 = СуммаР1СтМ107хГр01 + Р1СтМ1071Гр01.Значение + Р1СтМ1072Гр01.Значение + Р1СтМ1073Гр01.Значение;
			СуммаР1СтМ107хГр01Стр = СуммаР1СтМ107хГр01Стр
				+ Р1СтМ1071Гр01.ЗначениеСтр + " + " + Р1СтМ1072Гр01.ЗначениеСтр + " + " + Р1СтМ1073Гр01.ЗначениеСтр + " + ";
		КонецЕсли;	
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1070Гр01, СуммаР1СтМ1070Гр01ПРП + СуммаР1СтМ107хГр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1070Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаР1СтМ1070Гр01ПРПСтр + СуммаР1СтМ107хГр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", когда существует отчет предыдущего отчетного периода";
	
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_3г(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.3г)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный (отчетный) период на "
		+ "ОПС по дополнительному тарифу (ст. 070 р. 1) для КБК 182 102 02132 06 1020 160 (ст. 060 р.1) = ст. 070 р. 1 "
		+ "предыдущего отчетного периода + ст. 071 р. 1 отчетного периода + ст. 072 р. 1 отчетного периода + ст. 073 р. 1 "
		+ "отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу за отчетный период ≠ "
		+ "сумме страховых взносов на ОПС по дополнительному тарифу за предыдущий отчетный период и за последние "
		+ "три месяца отчетного периода по каждому КБК'");
	
	Р1СтМ1060Гр01    = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1070Гр01    = ПоказательПоСтроке("Р1СтМ1070Гр01");
	Р1СтМ1071Гр01    = ПоказательПоСтроке("Р1СтМ1071Гр01");
	Р1СтМ1072Гр01    = ПоказательПоСтроке("Р1СтМ1072Гр01");
	Р1СтМ1073Гр01    = ПоказательПоСтроке("Р1СтМ1073Гр01");
	Р1СтМ1060Гр01ПРП = ПоказательПоСтроке("Р1СтМ1060Гр01ПРП");
	Р1СтМ1070Гр01ПРП = ПоказательПоСтроке("Р1СтМ1070Гр01ПРП");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП  = Неопределено;
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1СтМ1070Гр01ПРП = 0;
	СуммаР1СтМ1070Гр01ПРПСтр = "";

	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1ПРП, Р1СтМ1060Гр01ПРП.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ1060Гр01ПРП, Инд);
			ПроверятьКС = Ложь;
			Если КодНайден(Р1СтМ1060Гр01ПРП.Значение, "18210202132061020160") Тогда
				ПроверятьКС = Истина;
				ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ1070Гр01ПРП, Инд);
				ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				СуммаР1СтМ1070Гр01ПРП = СуммаР1СтМ1070Гр01ПРП + Р1СтМ1070Гр01ПРП.Значение;
				СуммаР1СтМ1070Гр01ПРПСтр = СуммаР1СтМ1070Гр01ПРПСтр + Р1СтМ1070Гр01ПРП.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СуммаР1СтМ1070Гр01 = 0;
	СуммаР1СтМ1070Гр01Стр = "";
	СуммаР1СтМ107хГр01 = 0;
	СуммаР1СтМ107хГр01Стр = "";
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1070Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01, "Раздел1");
			
			СуммаР1СтМ1070Гр01 = СуммаР1СтМ1070Гр01 + Р1СтМ1070Гр01.Значение;
			СуммаР1СтМ1070Гр01Стр = СуммаР1СтМ1070Гр01Стр + Р1СтМ1070Гр01.ЗначениеСтр + " + ";
			
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1071Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1071Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1072Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1072Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1073Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1073Гр01, "Раздел1");
			
			СуммаР1СтМ107хГр01 = СуммаР1СтМ107хГр01 + Р1СтМ1071Гр01.Значение + Р1СтМ1072Гр01.Значение + Р1СтМ1073Гр01.Значение;
			СуммаР1СтМ107хГр01Стр = СуммаР1СтМ107хГр01Стр 
				+ Р1СтМ1071Гр01.ЗначениеСтр + " + " + Р1СтМ1072Гр01.ЗначениеСтр + " + " + Р1СтМ1073Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1070Гр01, СуммаР1СтМ1070Гр01ПРП + СуммаР1СтМ107хГр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1070Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаР1СтМ1070Гр01ПРПСтр + СуммаР1СтМ107хГр01Стр)	+ " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", когда существует отчет предыдущего отчетного периода";
	
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_4а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.4а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов на дополнительное социальное обеспечение (ст. 090 р. 1) "
		+ "для КБК 182 102 02080 06 1000 160 (стр.080 р1.) = ст. 090 р. 1 предыдущего отчетного периода + ст. 091 р. 1 "
		+ "отчетного периода + ст. 092 р. 1 отчетного периода + ст. 093 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ДСО за отчетный период ≠ сумме страховых взносов на ДСО "
		+ "за предыдущий отчетный период и за последние три месяца отчетного периода по каждому КБК'");
	
	Р1СтМ2080Гр01ПРП = ПоказательПоСтроке("Р1СтМ2080Гр01ПРП");
	Р1СтМ2090Гр01ПРП = ПоказательПоСтроке("Р1СтМ2090Гр01ПРП");
	Р1СтМ2080Гр01 = ПоказательПоСтроке("Р1СтМ2080Гр01");
	Р1СтМ2090Гр01 = ПоказательПоСтроке("Р1СтМ2090Гр01");
	Р1СтМ2091Гр01 = ПоказательПоСтроке("Р1СтМ2091Гр01");
	Р1СтМ2092Гр01 = ПоказательПоСтроке("Р1СтМ2092Гр01");
	Р1СтМ2093Гр01 = ПоказательПоСтроке("Р1СтМ2093Гр01");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП  = Неопределено;
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1СтМ2090Гр01ПРП = 0;
	СуммаР1СтМ2090Гр01ПРПСтр = "";
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1ПРП, Р1СтМ2080Гр01ПРП.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ2080Гр01ПРП, Инд);
			ПроверятьКС = Ложь;
			Если КодНайден(Р1СтМ2080Гр01ПРП.Значение, "18210202080061000160") Тогда
				ПроверятьКС = Истина;
				ВнестиПоказательВРасшифровку(Р1СтМ2080Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ2090Гр01ПРП, Инд);
				ВнестиПоказательВРасшифровку(Р1СтМ2090Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				СуммаР1СтМ2090Гр01ПРП = СуммаР1СтМ2090Гр01ПРП + Р1СтМ2090Гр01ПРП.Значение;
				СуммаР1СтМ2090Гр01ПРПСтр = СуммаР1СтМ2090Гр01ПРПСтр + Р1СтМ2090Гр01ПРП.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СуммаР1СтМ2090Гр01 = 0;
	СуммаР1СтМ2090Гр01Стр = "";
	СуммаР1СтМ209хГр01 = 0;
	СуммаР1СтМ209хГр01Стр = "";
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ2080Гр01.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2080Гр01, Инд);
		Если КодНайден(Р1СтМ2080Гр01.Значение, "18210202080061000160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ2080Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2090Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ2090Гр01, "Раздел1");
			
			СуммаР1СтМ2090Гр01 = СуммаР1СтМ2090Гр01 + Р1СтМ2090Гр01.Значение;
			СуммаР1СтМ2090Гр01Стр = СуммаР1СтМ2090Гр01Стр + Р1СтМ2090Гр01.ЗначениеСтр + " + ";
			
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2091Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ2091Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2092Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ2092Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2093Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ2093Гр01, "Раздел1");
			
			СуммаР1СтМ209хГр01 = СуммаР1СтМ209хГр01 + Р1СтМ2091Гр01.Значение + Р1СтМ2092Гр01.Значение + Р1СтМ2093Гр01.Значение;
			СуммаР1СтМ209хГр01Стр = СуммаР1СтМ209хГр01Стр 
				+ Р1СтМ2091Гр01.ЗначениеСтр + " + " + Р1СтМ2092Гр01.ЗначениеСтр + " + " + Р1СтМ2093Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ2090Гр01, СуммаР1СтМ2090Гр01ПРП + СуммаР1СтМ209хГр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ2090Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаР1СтМ2090Гр01ПРПСтр + СуммаР1СтМ209хГр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ " (для КБК 182 102 02080 06 1000 160), когда существует отчет предыдущего отчетного периода";
	
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_4б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.4б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов на дополнительное социальное обеспечение (ст. 090 р. 1) "
		+ "для КБК 182 102 02120 06 1000 160 (стр.080 р1.) = ст. 090 р. 1 предыдущего отчетного периода + ст. 091 р. 1 "
		+ "отчетного периода + ст. 092 р. 1 отчетного периода + ст. 093 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ДСО за отчетный период ≠ сумме страховых взносов на ДСО "
		+ "за предыдущий отчетный период и за последние три месяца отчетного периода по каждому КБК'");
	
	Р1СтМ2080Гр01ПРП = ПоказательПоСтроке("Р1СтМ2080Гр01ПРП");
	Р1СтМ2090Гр01ПРП = ПоказательПоСтроке("Р1СтМ2090Гр01ПРП");
	Р1СтМ2080Гр01 = ПоказательПоСтроке("Р1СтМ2080Гр01");
	Р1СтМ2090Гр01 = ПоказательПоСтроке("Р1СтМ2090Гр01");
	Р1СтМ2091Гр01 = ПоказательПоСтроке("Р1СтМ2091Гр01");
	Р1СтМ2092Гр01 = ПоказательПоСтроке("Р1СтМ2092Гр01");
	Р1СтМ2093Гр01 = ПоказательПоСтроке("Р1СтМ2093Гр01");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП  = Неопределено;
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1СтМ2090Гр01ПРП = 0;
	СуммаР1СтМ2090Гр01ПРПСтр = "";

	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1ПРП, Р1СтМ2080Гр01ПРП.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ2080Гр01ПРП, Инд);
			ПроверятьКС = Ложь;
			Если КодНайден(Р1СтМ2080Гр01ПРП.Значение, "18210202120061000160") Тогда
				ПроверятьКС = Истина;
				ВнестиПоказательВРасшифровку(Р1СтМ2080Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				ВставитьЗначениеМногострочногоПоказателя(Раздел1ПРП, Р1СтМ2090Гр01ПРП, Инд);
				ВнестиПоказательВРасшифровку(Р1СтМ2090Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				СуммаР1СтМ2090Гр01ПРП = СуммаР1СтМ2090Гр01ПРП + Р1СтМ2090Гр01ПРП.Значение;
				СуммаР1СтМ2090Гр01ПРПСтр = СуммаР1СтМ2090Гр01ПРПСтр + Р1СтМ2090Гр01ПРП.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СуммаР1СтМ2090Гр01 = 0;
	СуммаР1СтМ2090Гр01Стр = "";
	СуммаР1СтМ209хГр01 = 0;
	СуммаР1СтМ209хГр01Стр = "";
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ2080Гр01.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2080Гр01, Инд);
		Если КодНайден(Р1СтМ2080Гр01.Значение, "18210202120061000160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ2080Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2090Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ2090Гр01, "Раздел1");
			
			СуммаР1СтМ2090Гр01 = СуммаР1СтМ2090Гр01 + Р1СтМ2090Гр01.Значение;
			СуммаР1СтМ2090Гр01Стр = СуммаР1СтМ2090Гр01Стр + Р1СтМ2090Гр01.ЗначениеСтр + " + ";
			
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2091Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ2091Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2092Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ2092Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ2093Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ2093Гр01, "Раздел1");
			
			СуммаР1СтМ209хГр01 = СуммаР1СтМ209хГр01 + Р1СтМ2091Гр01.Значение + Р1СтМ2092Гр01.Значение + Р1СтМ2093Гр01.Значение;
			СуммаР1СтМ209хГр01Стр = СуммаР1СтМ209хГр01Стр 
				+ Р1СтМ2091Гр01.ЗначениеСтр + " + " + Р1СтМ2092Гр01.ЗначениеСтр + " + " + Р1СтМ2093Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ2090Гр01, СуммаР1СтМ2090Гр01ПРП + СуммаР1СтМ209хГр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ2090Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаР1СтМ2090Гр01ПРПСтр + СуммаР1СтМ209хГр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ " (для КБК 182 102 02120 06 1000 160), когда существует отчет предыдущего отчетного периода";
	
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_5(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.5)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов на социальное страхование к уплате (ст. 110 р. 1) - "
		+ "сумма превышения расходов над взносами (ст. 120 р. 1) = ст. 110 р. 1 предыдущего отчетного периода + "
		+ "ст. 111 р. 1 отчетного периода + ст. 112 р. 1 отчетного периода + ст. 113 р. 1 отчетного периода - ("
		+ "ст. 120 р. 1 предыдущего отчетного периода + ст. 121 р. 1 отчетного периода + ст. 122 р. 1 "
		+ "отчетного периода + ст. 123 р. 1 отчетного периода)'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОСС за вычетом суммы превышения расходов над "
		+ "страховыми взносами ОСС за отчетный период ≠ сумме страховых взносов на ОСС за предыдущий отчетный период и "
		+ "за последние три месяца отчетного периода за минусом суммы превышения расходов над страховыми взносами ОСС за "
		+ "предыдущий отчетный период и за последние три месяца отчетного периода'");
	
	Р1Ст110Гр01 = ПоказательПоСтроке("Р1Ст110Гр01");
	Р1Ст120Гр01 = ПоказательПоСтроке("Р1Ст120Гр01");
	Р1Ст110Гр01ПРП = ПоказательПоСтроке("Р1Ст110Гр01ПРП");
	Р1Ст111Гр01 = ПоказательПоСтроке("Р1Ст111Гр01");
	Р1Ст112Гр01 = ПоказательПоСтроке("Р1Ст112Гр01");
	Р1Ст113Гр01 = ПоказательПоСтроке("Р1Ст113Гр01");
	Р1Ст120Гр01ПРП = ПоказательПоСтроке("Р1Ст120Гр01ПРП");
	Р1Ст121Гр01 = ПоказательПоСтроке("Р1Ст121Гр01");
	Р1Ст122Гр01 = ПоказательПоСтроке("Р1Ст122Гр01");
	Р1Ст123Гр01 = ПоказательПоСтроке("Р1Ст123Гр01");
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	
	ПроверятьКС = Ложь;
	Раздел1ПРП = Новый Структура();
	Если мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1ПРП = мДанныеОтчетаПРП.Раздел1[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст110Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст110Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст120Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст120Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(?(МесяцПредставленияОтчета <> 3, Раздел1ПРП, Новый Структура()), Р1Ст110Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Ст110Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст111Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст111Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст112Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст112Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст113Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст113Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(?(МесяцПредставленияОтчета <> 3, Раздел1ПРП, Новый Структура()), Р1Ст120Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Ст120Гр01ПРП, "Раздел1", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст121Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст121Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст122Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст122Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст123Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст123Гр01, "Раздел1");
	
	КС = ПоказателиКС(Р1Ст110Гр01.Значение - Р1Ст120Гр01.Значение,
		Р1Ст110Гр01ПРП.Значение + Р1Ст111Гр01.Значение + Р1Ст112Гр01.Значение + Р1Ст113Гр01.Значение - (
		Р1Ст120Гр01ПРП.Значение + Р1Ст121Гр01.Значение + Р1Ст122Гр01.Значение + Р1Ст123Гр01.Значение));
	Расшифровка = Р1Ст110Гр01.ЗначениеСтр + " - " + Р1Ст120Гр01.ЗначениеСтр + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
				+ ?(МесяцПредставленияОтчета <> 3, Р1Ст110Гр01ПРП.ЗначениеСтр + " + ", "")
				+ Р1Ст111Гр01.ЗначениеСтр + " + " + Р1Ст112Гр01.ЗначениеСтр + " + " + Р1Ст113Гр01.ЗначениеСтр + " - ("
				+ ?(МесяцПредставленияОтчета <> 3, Р1Ст120Гр01ПРП.ЗначениеСтр + " + ", "")
				+ Р1Ст121Гр01.ЗначениеСтр + " + " + Р1Ст122Гр01.ЗначениеСтр + " + " + Р1Ст123Гр01.ЗначениеСтр
				+ ") Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
	Если НЕ ПроверятьКС ИЛИ (ПроверятьКС И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_6(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.6)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный (отчетный) период на "
		+ "ОПС (ст. 030 р. 1) = ∑ всех гр. 1 ст. 060 подр. 1.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС к уплате за отчетный период ≠ сумме исчисленных "
		+ "страховых взносов на ОПС за отчетный период по каждому виду тарифа'");
	
	Р1Ст30Гр01      = ПоказательПоСтроке("Р1Ст30Гр01");
	Пд11Пр1Ст60Гр01 = ПоказательПоСтроке("Пд11Пр1Ст60Гр01");
	
	Раздел1      = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст30Гр01, "Раздел1");
	
	СуммаПд11Пр1Ст60Гр01 = 0;
	СуммаПд11Пр1Ст60Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(СтраницаРаздела.Данные, Пд11Пр1Ст60Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст60Гр01 = СуммаПд11Пр1Ст60Гр01 + Пд11Пр1Ст60Гр01.Значение;
		СуммаПд11Пр1Ст60Гр01Стр = СуммаПд11Пр1Ст60Гр01Стр + Пд11Пр1Ст60Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Ст30Гр01.Значение, СуммаПд11Пр1Ст60Гр01);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст60Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_7(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.7)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за 1 месяц (ст. 031 р. 1 СВ) = ∑ всех гр. 3 "
		+ "ст. 060 подр. 1.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС к уплате за отчетный период ≠ сумме исчисленных страховых "
		+ "взносов на ОПС за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Ст31Гр01 = Пд11Пр1Ст60Гр03'.
	
	Р1Ст31Гр01 = ПоказательПоСтроке("Р1Ст31Гр01");
	Пд11Пр1Ст60Гр03 = ПоказательПоСтроке("Пд11Пр1Ст60Гр03");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст31Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст31Гр01, "Раздел1");
	СуммаПд11Пр1Ст60Гр03 = 0;
	СуммаПд11Пр1Ст60Гр03Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст60Гр03 = СуммаПд11Пр1Ст60Гр03 + Пд11Пр1Ст60Гр03.Значение;
		СуммаПд11Пр1Ст60Гр03Стр = СуммаПд11Пр1Ст60Гр03Стр + Пд11Пр1Ст60Гр03.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Ст31Гр01.Значение, СуммаПд11Пр1Ст60Гр03);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст60Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_8(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.8)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за 2 месяц (ст. 032 р. 1) = ∑ всех гр. 4 ст. "
		+ "060 подр. 1.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС к уплате за 2 месяц отчетного периода ≠ сумме исчисленных "
		+ "страховых взносов на ОПС за 2 месяц отчетного периодапо каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Ст32Гр01 = Пд11Пр1Ст60Гр04'.
	
	Р1Ст32Гр01 = ПоказательПоСтроке("Р1Ст32Гр01");
	Пд11Пр1Ст60Гр04 = ПоказательПоСтроке("Пд11Пр1Ст60Гр04");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст32Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст32Гр01, "Раздел1");
	СуммаПд11Пр1Ст60Гр04 = 0;
	СуммаПд11Пр1Ст60Гр04Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст60Гр04 = СуммаПд11Пр1Ст60Гр04 + Пд11Пр1Ст60Гр04.Значение;
		СуммаПд11Пр1Ст60Гр04Стр = СуммаПд11Пр1Ст60Гр04Стр + Пд11Пр1Ст60Гр04.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Ст32Гр01.Значение, СуммаПд11Пр1Ст60Гр04);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст60Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_9(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.9)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за 3 месяц (ст. 033 р. 1) = ∑ всех гр. 5 ст. "
		+ "060 подр. 1.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС к уплате за 3 месяц отчетного периода ≠ сумме исчисленных "
		+ "страховых взносов на ОПС за 3 месяц отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Ст33Гр01 = Пд11Пр1Ст60Гр05'.
	
	Р1Ст33Гр01 = ПоказательПоСтроке("Р1Ст33Гр01");
	Пд11Пр1Ст60Гр05 = ПоказательПоСтроке("Пд11Пр1Ст60Гр05");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст33Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст33Гр01, "Раздел1");
	СуммаПд11Пр1Ст60Гр05 = 0;
	СуммаПд11Пр1Ст60Гр05Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст60Гр05 = СуммаПд11Пр1Ст60Гр05 + Пд11Пр1Ст60Гр05.Значение;
		СуммаПд11Пр1Ст60Гр05Стр = СуммаПд11Пр1Ст60Гр05Стр + Пд11Пр1Ст60Гр05.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Ст33Гр01.Значение, СуммаПд11Пр1Ст60Гр05);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст60Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_10(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.10)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный (отчетный) период на ОМС (ст. 050 "
		+ "р. 1) = ∑ всех гр. 1 ст. 060 подр. 1.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОМС к уплате за отчетный период ≠ сумме страховых взносов на "
		+ "ОМС за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Ст50Гр01 = Пд12Пр1Ст60Гр01'.
	
	Р1Ст50Гр01 = ПоказательПоСтроке("Р1Ст50Гр01");
	Пд12Пр1Ст60Гр01 = ПоказательПоСтроке("Пд12Пр1Ст60Гр01");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст50Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст50Гр01, "Раздел1");
	СуммаПд12Пр1Ст60Гр01 = 0;
	СуммаПд12Пр1Ст60Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд12Пр1Ст60Гр01 = СуммаПд12Пр1Ст60Гр01 + Пд12Пр1Ст60Гр01.Значение;
		СуммаПд12Пр1Ст60Гр01Стр = СуммаПд12Пр1Ст60Гр01Стр + Пд12Пр1Ст60Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Ст50Гр01.Значение, СуммаПд12Пр1Ст60Гр01);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд12Пр1Ст60Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_11(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.11)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за 1 месяц на ОМС (ст. 051 р. 1) = ∑ всех гр. "
		+ "3 ст. 060 подр. 1.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОМС к уплате за 1 месяц отчетного периода ≠ сумме исчисленных "
		+ "страховых взносов на ОМС за 1 месяц отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Ст51Гр01 = Пд12Пр1Ст60Гр03'.
	
	Р1Ст51Гр01 = ПоказательПоСтроке("Р1Ст51Гр01");
	Пд12Пр1Ст60Гр03 = ПоказательПоСтроке("Пд12Пр1Ст60Гр03");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст51Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст51Гр01, "Раздел1");
	СуммаПд12Пр1Ст60Гр03 = 0;
	СуммаПд12Пр1Ст60Гр03Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд12Пр1Ст60Гр03 = СуммаПд12Пр1Ст60Гр03 + Пд12Пр1Ст60Гр03.Значение;
		СуммаПд12Пр1Ст60Гр03Стр = СуммаПд12Пр1Ст60Гр03Стр + Пд12Пр1Ст60Гр03.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Ст51Гр01.Значение, СуммаПд12Пр1Ст60Гр03);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд12Пр1Ст60Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_12(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.12)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за 2 месяц на ОМС (ст. 052 р. 1) = ∑ всех гр. "
		+ "4 ст. 060 подр. 1.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОМС к уплате за 2 месяц отчетного периода ≠ сумме исчисленных "
		+ "страховых взносов на ОМС за 2 месяц отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Ст52Гр01 = Пд12Пр1Ст60Гр04'.
	
	Р1Ст52Гр01 = ПоказательПоСтроке("Р1Ст52Гр01");
	Пд12Пр1Ст60Гр04 = ПоказательПоСтроке("Пд12Пр1Ст60Гр04");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст52Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст52Гр01, "Раздел1");
	СуммаПд12Пр1Ст60Гр04 = 0;
	СуммаПд12Пр1Ст60Гр04Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд12Пр1Ст60Гр04 = СуммаПд12Пр1Ст60Гр04 + Пд12Пр1Ст60Гр04.Значение;
		СуммаПд12Пр1Ст60Гр04Стр = СуммаПд12Пр1Ст60Гр04Стр + Пд12Пр1Ст60Гр04.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Ст52Гр01.Значение, СуммаПд12Пр1Ст60Гр04);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд12Пр1Ст60Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_13(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.13)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за 3 месяц на ОМС (ст. 053 р. 1) = ∑ всех гр. "
		+ "5 ст. 060 подр. 1.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОМС к уплате за 3 месяц отчетного периода ≠ сумме исчисленных "
		+ "страховых взносов на ОМС за 3 месяц отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Ст53Гр01 = Пд12Пр1Ст60Гр05'.
	
	Р1Ст53Гр01 = ПоказательПоСтроке("Р1Ст53Гр01");
	Пд12Пр1Ст60Гр05 = ПоказательПоСтроке("Пд12Пр1Ст60Гр05");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст53Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст53Гр01, "Раздел1");
	СуммаПд12Пр1Ст60Гр05 = 0;
	СуммаПд12Пр1Ст60Гр05Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд12Пр1Ст60Гр05 = СуммаПд12Пр1Ст60Гр05 + Пд12Пр1Ст60Гр05.Значение;
		СуммаПд12Пр1Ст60Гр05Стр = СуммаПд12Пр1Ст60Гр05Стр + Пд12Пр1Ст60Гр05.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Ст53Гр01.Значение, СуммаПд12Пр1Ст60Гр05);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд12Пр1Ст60Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_14а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.14а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, всего (ст. 070 р. 1) = ∑ всех гр. 1 ст. 050 подр. 1.3.1 прил. 1 "
		+ "р. 1 при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1010 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по доп. тарифу к уплате за отчетный период по КБК ОПС "
		+ "дополнительного тарифа по п.1ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых взносов "
		+ "на ОПС по дополнительному тарифу за отчетный период по п.1 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных "
		+ "страховых взносов на ОПС по дополнительному тарифу за отчетный период отдельными категориями плательщиков "
		+ "(п.3 ст.428 НК РФ) по основаниям, установленным п.1 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1070Гр01 = Пд131Пр1Ст50Гр01'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1070Гр01 = ПоказательПоСтроке("Р1СтМ1070Гр01");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст50Гр01 = ПоказательПоСтроке("Пд131Пр1Ст50Гр01");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаР1СтМ1070Гр01 = 0;
	СуммаР1СтМ1070Гр01Стр = "";
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1070Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01, "Раздел1");
			СуммаР1СтМ1070Гр01 = СуммаР1СтМ1070Гр01 + Р1СтМ1070Гр01.Значение;
			СуммаР1СтМ1070Гр01Стр = СуммаР1СтМ1070Гр01Стр + Р1СтМ1070Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд131Пр1Ст50Гр01 = 0;
	СуммаПд131Пр1Ст50Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			Если Пд131Пр1Ст1Гр01.Значение = "1" Тогда
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр01, Инд);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				СуммаПд131Пр1Ст50Гр01 = СуммаПд131Пр1Ст50Гр01 + Пд131Пр1Ст50Гр01.Значение;
				СуммаПд131Пр1Ст50Гр01Стр = СуммаПд131Пр1Ст50Гр01Стр + Пд131Пр1Ст50Гр01.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1070Гр01, СуммаПд131Пр1Ст50Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1070Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1010 160";
	
	УсловиеВыполнено = СуммаР1СтМ1070Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_14б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.14б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, всего (ст. 070 р. 1) = ∑ всех гр. 1 ст. 050 подр. 1.3.2 прил. 1 "
		+ "р. 1 СВ при ст. 001 подр. 1.3.2 прил. 1 р. 1 СВ = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1020 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по доп. тарифу к уплате за отчетный период по КБК ОПС "
		+ "дополнительного тарифа по п.1ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых взносов "
		+ "на ОПС по дополнительному тарифу за отчетный период по п.1 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных "
		+ "страховых взносов на ОПС по дополнительному тарифу за отчетный период отдельными категориями плательщиков "
		+ "(п.3 ст.428 НК РФ) по основаниям, установленным п.1 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1070Гр01 = Пд132Пр1Ст50Гр01'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1070Гр01 = ПоказательПоСтроке("Р1СтМ1070Гр01");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст50Гр01 = ПоказательПоСтроке("Пд132Пр1Ст50Гр01");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1070Гр01 = 0;
	СуммаР1СтМ1070Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1070Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01, "Раздел1");
			СуммаР1СтМ1070Гр01 = СуммаР1СтМ1070Гр01 + Р1СтМ1070Гр01.Значение;
			СуммаР1СтМ1070Гр01Стр = СуммаР1СтМ1070Гр01Стр + Р1СтМ1070Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд132Пр1Ст50Гр01 = 0;
	СуммаПд132Пр1Ст50Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			Если Пд132Пр1Ст1Гр01.Значение = "1" Тогда
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр01, Инд);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				СуммаПд132Пр1Ст50Гр01 = СуммаПд132Пр1Ст50Гр01 + Пд132Пр1Ст50Гр01.Значение;
				СуммаПд132Пр1Ст50Гр01Стр = СуммаПд132Пр1Ст50Гр01Стр + Пд132Пр1Ст50Гр01.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1070Гр01, СуммаПд132Пр1Ст50Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1070Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1020 160";
	
	УсловиеВыполнено = СуммаР1СтМ1070Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_15а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.15а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 1 месяц (ст. 071 р. 1) = ∑ всех гр. 3 ст. 050 подр. 1.3.1 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 1 если КБК (ст.060 р. 1) = 182 102 02131 06 1010 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по доп. тарифу к уплате за 1-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.1ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых взносов "
		+ "на ОПС по дополнительному тарифу за 1-й месяц по п.1 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных страховых "
		+ "взносов на ОПС по дополнительному тарифу за 1-й месяц отдельными категориями плательщиков (п.3 ст.428 НК РФ) "
		+ "по основаниям, установленным п.1 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1071Гр01 = Пд131Пр1Ст50Гр03'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1071Гр01 = ПоказательПоСтроке("Р1СтМ1071Гр01");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст50Гр03 = ПоказательПоСтроке("Пд131Пр1Ст50Гр03");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1071Гр01 = 0;
	СуммаР1СтМ1071Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1071Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1071Гр01, "Раздел1");
			СуммаР1СтМ1071Гр01 = СуммаР1СтМ1071Гр01 + Р1СтМ1071Гр01.Значение;
			СуммаР1СтМ1071Гр01Стр = СуммаР1СтМ1071Гр01Стр + Р1СтМ1071Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд131Пр1Ст50Гр03 = 0;
	СуммаПд131Пр1Ст50Гр03Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			Если Пд131Пр1Ст1Гр01.Значение = "1" Тогда
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр03, Инд);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				СуммаПд131Пр1Ст50Гр03 = СуммаПд131Пр1Ст50Гр03 + Пд131Пр1Ст50Гр03.Значение;
				СуммаПд131Пр1Ст50Гр03Стр = СуммаПд131Пр1Ст50Гр03Стр + Пд131Пр1Ст50Гр03.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1071Гр01, СуммаПд131Пр1Ст50Гр03);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1071Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 1 если КБК (ст.060 р. 1) = 182 102 02131 06 1010 160";
	
	УсловиеВыполнено = СуммаР1СтМ1071Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_15б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.15б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 1 месяц (ст. 071 р. 1) = ∑ всех гр. 3 ст. 050 подр. 1.3.2 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1020 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по доп. тарифу к уплате за 1-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.1ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых взносов "
		+ "на ОПС по дополнительному тарифу за 1-й месяц по п.1 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных страховых "
		+ "взносов на ОПС по дополнительному тарифу за 1-й месяц отдельными категориями плательщиков (п.3 ст.428 НК РФ) "
		+ "по основаниям, установленным п.1 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1071Гр01 = Пд132Пр1Ст50Гр03'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1071Гр01 = ПоказательПоСтроке("Р1СтМ1071Гр01");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст50Гр03 = ПоказательПоСтроке("Пд132Пр1Ст50Гр03");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1071Гр01 = 0;
	СуммаР1СтМ1071Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1071Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1071Гр01, "Раздел1");
			СуммаР1СтМ1071Гр01 = СуммаР1СтМ1071Гр01 + Р1СтМ1071Гр01.Значение;
			СуммаР1СтМ1071Гр01Стр = СуммаР1СтМ1071Гр01Стр + Р1СтМ1071Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд132Пр1Ст50Гр03 = 0;
	СуммаПд132Пр1Ст50Гр03Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			Если Пд132Пр1Ст1Гр01.Значение = "1" Тогда
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр03, Инд);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				СуммаПд132Пр1Ст50Гр03 = СуммаПд132Пр1Ст50Гр03 + Пд132Пр1Ст50Гр03.Значение;
				СуммаПд132Пр1Ст50Гр03Стр = СуммаПд132Пр1Ст50Гр03Стр + Пд132Пр1Ст50Гр03.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1071Гр01, СуммаПд132Пр1Ст50Гр03);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1071Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1020 160";
	
	УсловиеВыполнено = СуммаР1СтМ1071Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_16а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.16а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 2 месяц (ст. 072 р. 1) = ∑ всех гр. 4 ст. 050 подр. 1.3.1 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1010 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по доп. тарифу к уплате за 2-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.1ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных СВ на ОПС по "
		+ "дополнительному тарифу за 2-й месяц по п.1 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных СВ на ОПС по "
		+ "дополнительному тарифу за 2-й месяц отдельными категориями плательщиков (п.3 ст.428 НК РФ) по основаниям, "
		+ "установленным п.1 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1072Гр01 = Пд131Пр1Ст50Гр04'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1072Гр01 = ПоказательПоСтроке("Р1СтМ1072Гр01");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст50Гр04 = ПоказательПоСтроке("Пд131Пр1Ст50Гр04");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1072Гр01 = 0;
	СуммаР1СтМ1072Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1072Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1072Гр01, "Раздел1");
			СуммаР1СтМ1072Гр01 = СуммаР1СтМ1072Гр01 + Р1СтМ1072Гр01.Значение;
			СуммаР1СтМ1072Гр01Стр = СуммаР1СтМ1072Гр01Стр + Р1СтМ1072Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд131Пр1Ст50Гр04 = 0;
	СуммаПд131Пр1Ст50Гр04Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			Если Пд131Пр1Ст1Гр01.Значение = "1" Тогда
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр04, Инд);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				СуммаПд131Пр1Ст50Гр04 = СуммаПд131Пр1Ст50Гр04 + Пд131Пр1Ст50Гр04.Значение;
				СуммаПд131Пр1Ст50Гр04Стр = СуммаПд131Пр1Ст50Гр04Стр + Пд131Пр1Ст50Гр04.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1072Гр01, СуммаПд131Пр1Ст50Гр04);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1072Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1010 160";
	
	УсловиеВыполнено = СуммаР1СтМ1072Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_16б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.16б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 2 месяц (ст. 072 р. 1) = ∑ всех гр. 4 ст. 050 подр. 1.3.2 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1020 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по доп. тарифу к уплате за 2-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.1ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных СВ на ОПС по "
		+ "дополнительному тарифу за 2-й месяц по п.1 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных СВ на ОПС по "
		+ "дополнительному тарифу за 2-й месяц отдельными категориями плательщиков (п.3 ст.428 НК РФ) по основаниям, "
		+ "установленным п.1 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1072Гр01 = Пд132Пр1Ст50Гр04'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1072Гр01 = ПоказательПоСтроке("Р1СтМ1072Гр01");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст50Гр04 = ПоказательПоСтроке("Пд132Пр1Ст50Гр04");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1072Гр01 = 0;
	СуммаР1СтМ1072Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1072Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1072Гр01, "Раздел1");
			СуммаР1СтМ1072Гр01 = СуммаР1СтМ1072Гр01 + Р1СтМ1072Гр01.Значение;
			СуммаР1СтМ1072Гр01Стр = СуммаР1СтМ1072Гр01Стр + Р1СтМ1072Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд132Пр1Ст50Гр04 = 0;
	СуммаПд132Пр1Ст50Гр04Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			Если Пд132Пр1Ст1Гр01.Значение = "1" Тогда
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр04, Инд);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				СуммаПд132Пр1Ст50Гр04 = СуммаПд132Пр1Ст50Гр04 + Пд132Пр1Ст50Гр04.Значение;
				СуммаПд132Пр1Ст50Гр04Стр = СуммаПд132Пр1Ст50Гр04Стр + Пд132Пр1Ст50Гр04.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1072Гр01, СуммаПд132Пр1Ст50Гр04);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1072Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1020 160";
	
	УсловиеВыполнено = СуммаР1СтМ1072Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_17а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.17а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 3 месяц (ст. 073 р. 1) = ∑ всех гр. 5 ст. 050 подр. 1.3.1 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1010 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по доп. тарифу к уплате за 3-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.1ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых взносов "
		+ "на ОПС по дополнительному тарифу за 3-й месяц по п.1 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных страховых "
		+ "взносов на ОПС по дополнительному тарифу за 3-й месяц отдельными категориями плательщиков (п.3 ст.428 НК РФ) "
		+ "по основаниям, установленным п.1 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1073Гр01 = Пд131Пр1Ст50Гр05'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1073Гр01 = ПоказательПоСтроке("Р1СтМ1073Гр01");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст50Гр05 = ПоказательПоСтроке("Пд131Пр1Ст50Гр05");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1073Гр01 = 0;
	СуммаР1СтМ1073Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1073Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1073Гр01, "Раздел1");
			СуммаР1СтМ1073Гр01 = СуммаР1СтМ1073Гр01 + Р1СтМ1073Гр01.Значение;
			СуммаР1СтМ1073Гр01Стр = СуммаР1СтМ1073Гр01Стр + Р1СтМ1073Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд131Пр1Ст50Гр05 = 0;
	СуммаПд131Пр1Ст50Гр05Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			Если Пд131Пр1Ст1Гр01.Значение = "1" Тогда
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр05, Инд);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				СуммаПд131Пр1Ст50Гр05 = СуммаПд131Пр1Ст50Гр05 + Пд131Пр1Ст50Гр05.Значение;
				СуммаПд131Пр1Ст50Гр05Стр = СуммаПд131Пр1Ст50Гр05Стр + Пд131Пр1Ст50Гр05.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1073Гр01, СуммаПд131Пр1Ст50Гр05);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1073Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1010 160";
	
	УсловиеВыполнено = СуммаР1СтМ1073Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_17б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.17б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 3 месяц (ст. 073 р. 1) = ∑ всех гр. 5 ст. 050 подр. 1.3.2 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1020 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по доп. тарифу к уплате за 3-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.1ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых взносов "
		+ "на ОПС по дополнительному тарифу за 3-й месяц по п.1 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных страховых "
		+ "взносов на ОПС по дополнительному тарифу за 3-й месяц отдельными категориями плательщиков (п.3 ст.428 НК РФ) "
		+ "по основаниям, установленным п.1 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1073Гр01 = Пд132Пр1Ст50Гр05'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1073Гр01 = ПоказательПоСтроке("Р1СтМ1073Гр01");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст50Гр05 = ПоказательПоСтроке("Пд132Пр1Ст50Гр05");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1073Гр01 = 0;
	СуммаР1СтМ1073Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202131061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1073Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1073Гр01, "Раздел1");
			СуммаР1СтМ1073Гр01 = СуммаР1СтМ1073Гр01 + Р1СтМ1073Гр01.Значение;
			СуммаР1СтМ1073Гр01Стр = СуммаР1СтМ1073Гр01Стр + Р1СтМ1073Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд132Пр1Ст50Гр05 = 0;
	СуммаПд132Пр1Ст50Гр05Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			Если Пд132Пр1Ст1Гр01.Значение = "1" Тогда
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр05, Инд);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				СуммаПд132Пр1Ст50Гр05 = СуммаПд132Пр1Ст50Гр05 + Пд132Пр1Ст50Гр05.Значение;
				СуммаПд132Пр1Ст50Гр05Стр = СуммаПд132Пр1Ст50Гр05Стр + Пд132Пр1Ст50Гр05.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1073Гр01, СуммаПд132Пр1Ст50Гр05);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1073Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 1 если КБК (ст. 060 р. 1) = 182 102 02131 06 1020 160";
	
	УсловиеВыполнено = СуммаР1СтМ1073Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_18а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.18а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, всего (ст. 070 р. 1) = ∑ всех гр. 1 ст. 050 подр. 1.3.1 прил. 1 "
		+ "р. 1 при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1010 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу к уплате за отчетный период по "
		+ "КБК ОПС дополнительного тарифа по п.2-18 ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных "
		+ "страховых взносов на ОПС по дополнительному тарифу за отчетный период по п.2-18 ч.1 ст.30 ФЗ № 400 и сумме "
		+ "всех исчисленных страховых взносов на ОПС по дополнительному тарифу за отчетный период отдельными "
		+ "категориями плательщиков (п.3 ст.428 НК РФ) по основаниям, установленным п.2 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1070Гр01 = Пд131Пр1Ст50Гр01'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1070Гр01 = ПоказательПоСтроке("Р1СтМ1070Гр01");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст50Гр01 = ПоказательПоСтроке("Пд131Пр1Ст50Гр01");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1070Гр01 = 0;
	СуммаР1СтМ1070Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1070Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01, "Раздел1");
			СуммаР1СтМ1070Гр01 = СуммаР1СтМ1070Гр01 + Р1СтМ1070Гр01.Значение;
			СуммаР1СтМ1070Гр01Стр = СуммаР1СтМ1070Гр01Стр + Р1СтМ1070Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд131Пр1Ст50Гр01 = 0;
	СуммаПд131Пр1Ст50Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			Если Пд131Пр1Ст1Гр01.Значение = "2" Тогда
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр01, Инд);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				СуммаПд131Пр1Ст50Гр01 = СуммаПд131Пр1Ст50Гр01 + Пд131Пр1Ст50Гр01.Значение;
				СуммаПд131Пр1Ст50Гр01Стр = СуммаПд131Пр1Ст50Гр01Стр + Пд131Пр1Ст50Гр01.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1070Гр01, СуммаПд131Пр1Ст50Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1070Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1010 160";
	
	УсловиеВыполнено = СуммаР1СтМ1070Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_18б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.18б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, всего (ст. 070 р. 1) = ∑ всех гр. 1 ст. 050 подр. 1.3.2 прил. 1 "
		+ "р. 1 при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1020 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу к уплате за отчетный период по "
		+ "КБК ОПС дополнительного тарифа по п.2-18 ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных "
		+ "страховых взносов на ОПС по дополнительному тарифу за отчетный период по п.2-18 ч.1 ст.30 ФЗ № 400 и сумме "
		+ "всех исчисленных страховых взносов на ОПС по дополнительному тарифу за отчетный период отдельными "
		+ "категориями плательщиков (п.3 ст.428 НК РФ) по основаниям, установленным п.2 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1070Гр01 = Пд132Пр1Ст50Гр01'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1070Гр01 = ПоказательПоСтроке("Р1СтМ1070Гр01");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст50Гр01 = ПоказательПоСтроке("Пд132Пр1Ст50Гр01");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1070Гр01 = 0;
	СуммаР1СтМ1070Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1070Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1070Гр01, "Раздел1");
			СуммаР1СтМ1070Гр01 = СуммаР1СтМ1070Гр01 + Р1СтМ1070Гр01.Значение;
			СуммаР1СтМ1070Гр01Стр = СуммаР1СтМ1070Гр01Стр + Р1СтМ1070Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд132Пр1Ст50Гр01 = 0;
	СуммаПд132Пр1Ст50Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			Если Пд132Пр1Ст1Гр01.Значение = "2" Тогда
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр01, Инд);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				СуммаПд132Пр1Ст50Гр01 = СуммаПд132Пр1Ст50Гр01 + Пд132Пр1Ст50Гр01.Значение;
				СуммаПд132Пр1Ст50Гр01Стр = СуммаПд132Пр1Ст50Гр01Стр + Пд132Пр1Ст50Гр01.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1070Гр01, СуммаПд132Пр1Ст50Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1070Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1020 160";
	
	УсловиеВыполнено = СуммаР1СтМ1070Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_19а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.19а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 1 месяц (ст. 071 р. 1) = ∑ всех гр. 3 ст. 050 подр. 1.3.1 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1010 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу к уплате за 1-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.2-18 ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых "
		+ "взносов на ОПС по дополнительному тарифу за 1-й месяц по п.2-18 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных "
		+ "страховых взносов на ОПС по дополнительному тарифу за 1-й месяц отдельными категориями плательщиков (п.3 "
		+ "ст.428 НК РФ) по основаниям, установленным п.2 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1071Гр01 = Пд131Пр1Ст50Гр03'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1071Гр01 = ПоказательПоСтроке("Р1СтМ1071Гр01");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст50Гр03 = ПоказательПоСтроке("Пд131Пр1Ст50Гр03");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1071Гр01 = 0;
	СуммаР1СтМ1071Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1071Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1071Гр01, "Раздел1");
			СуммаР1СтМ1071Гр01 = СуммаР1СтМ1071Гр01 + Р1СтМ1071Гр01.Значение;
			СуммаР1СтМ1071Гр01Стр = СуммаР1СтМ1071Гр01Стр + Р1СтМ1071Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд131Пр1Ст50Гр03 = 0;
	СуммаПд131Пр1Ст50Гр03Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			Если Пд131Пр1Ст1Гр01.Значение = "2" Тогда
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр03, Инд);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				СуммаПд131Пр1Ст50Гр03 = СуммаПд131Пр1Ст50Гр03 + Пд131Пр1Ст50Гр03.Значение;
				СуммаПд131Пр1Ст50Гр03Стр = СуммаПд131Пр1Ст50Гр03Стр + Пд131Пр1Ст50Гр03.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1071Гр01, СуммаПд131Пр1Ст50Гр03);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1071Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1010 160";
	
	УсловиеВыполнено = СуммаР1СтМ1071Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_19б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.19б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 1 месяц (ст. 071 р. 1) = ∑ всех гр. 3 ст. 050 подр. 1.3.2 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1020 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу к уплате за 1-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.2-18 ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых "
		+ "взносов на ОПС по дополнительному тарифу за 1-й месяц по п.2-18 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных "
		+ "страховых взносов на ОПС по дополнительному тарифу за 1-й месяц отдельными категориями плательщиков (п.3 "
		+ "ст.428 НК РФ) по основаниям, установленным п.2 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1071Гр01 = Пд132Пр1Ст50Гр03'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1071Гр01 = ПоказательПоСтроке("Р1СтМ1071Гр01");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст50Гр03 = ПоказательПоСтроке("Пд132Пр1Ст50Гр03");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1071Гр01 = 0;
	СуммаР1СтМ1071Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1071Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1071Гр01, "Раздел1");
			СуммаР1СтМ1071Гр01 = СуммаР1СтМ1071Гр01 + Р1СтМ1071Гр01.Значение;
			СуммаР1СтМ1071Гр01Стр = СуммаР1СтМ1071Гр01Стр + Р1СтМ1071Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд132Пр1Ст50Гр03 = 0;
	СуммаПд132Пр1Ст50Гр03Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			Если Пд132Пр1Ст1Гр01.Значение = "2" Тогда
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр03, Инд);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				СуммаПд132Пр1Ст50Гр03 = СуммаПд132Пр1Ст50Гр03 + Пд132Пр1Ст50Гр03.Значение;
				СуммаПд132Пр1Ст50Гр03Стр = СуммаПд132Пр1Ст50Гр03Стр + Пд132Пр1Ст50Гр03.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1071Гр01, СуммаПд132Пр1Ст50Гр03);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1071Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1020 160";
	
	УсловиеВыполнено = СуммаР1СтМ1071Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_20а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.20а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 2 месяц (ст. 072 р. 1) = ∑ всех гр. 4 ст. 050 подр. 1.3.1 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1010 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу к уплате за 2-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.2-18 ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых "
		+ "взносов на ОПС по дополнительному тарифу за 2-й месяц по п.2-18 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных "
		+ "страховых взносов на ОПС по дополнительному тарифу за 2-й месяц отдельными категориями плательщиков (п.3 "
		+ "ст.428 НК РФ) по основаниям, установленным п.2 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1072Гр01 = Пд131Пр1Ст50Гр04'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1072Гр01 = ПоказательПоСтроке("Р1СтМ1072Гр01");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст50Гр04 = ПоказательПоСтроке("Пд131Пр1Ст50Гр04");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1072Гр01 = 0;
	СуммаР1СтМ1072Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1072Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1072Гр01, "Раздел1");
			СуммаР1СтМ1072Гр01 = СуммаР1СтМ1072Гр01 + Р1СтМ1072Гр01.Значение;
			СуммаР1СтМ1072Гр01Стр = СуммаР1СтМ1072Гр01Стр + Р1СтМ1072Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд131Пр1Ст50Гр04 = 0;
	СуммаПд131Пр1Ст50Гр04Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			Если Пд131Пр1Ст1Гр01.Значение = "2" Тогда
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр04, Инд);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				СуммаПд131Пр1Ст50Гр04 = СуммаПд131Пр1Ст50Гр04 + Пд131Пр1Ст50Гр04.Значение;
				СуммаПд131Пр1Ст50Гр04Стр = СуммаПд131Пр1Ст50Гр04Стр + Пд131Пр1Ст50Гр04.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1072Гр01, СуммаПд131Пр1Ст50Гр04);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1072Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1010 160";
	
	УсловиеВыполнено = СуммаР1СтМ1072Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_20б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.20б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 2 месяц (ст. 072 р. 1) = ∑ всех гр. 4 ст. 050 подр. 1.3.2 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1020 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу к уплате за 2-й месяц по КБК ОПС "
		+ "дополнительного тарифа по п.2-18 ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых "
		+ "взносов на ОПС по дополнительному тарифу за 2-й месяц по п.2-18 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных "
		+ "страховых взносов на ОПС по дополнительному тарифу за 2-й месяц отдельными категориями плательщиков (п.3 "
		+ "ст.428 НК РФ) по основаниям, установленным п.2 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1072Гр01 = Пд132Пр1Ст50Гр04'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1072Гр01 = ПоказательПоСтроке("Р1СтМ1072Гр01");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст50Гр04 = ПоказательПоСтроке("Пд132Пр1Ст50Гр04");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1072Гр01 = 0;
	СуммаР1СтМ1072Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1072Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1072Гр01, "Раздел1");
			СуммаР1СтМ1072Гр01 = СуммаР1СтМ1072Гр01 + Р1СтМ1072Гр01.Значение;
			СуммаР1СтМ1072Гр01Стр = СуммаР1СтМ1072Гр01Стр + Р1СтМ1072Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд132Пр1Ст50Гр04 = 0;
	СуммаПд132Пр1Ст50Гр04Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			Если Пд132Пр1Ст1Гр01.Значение = "2" Тогда
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр04, Инд);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				СуммаПд132Пр1Ст50Гр04 = СуммаПд132Пр1Ст50Гр04 + Пд132Пр1Ст50Гр04.Значение;
				СуммаПд132Пр1Ст50Гр04Стр = СуммаПд132Пр1Ст50Гр04Стр + Пд132Пр1Ст50Гр04.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1072Гр01, СуммаПд132Пр1Ст50Гр04);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1072Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1020 160";
	
	УсловиеВыполнено = СуммаР1СтМ1072Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_21а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.21а)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 3 месяц (ст. 073 р. 1) = ∑ всех гр. 5 ст. 050 подр. 1.3.1 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1010 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу к уплате за 3-й месяц по КБК ОПС "
		+ "дополнительного по п.2-18 ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых взносах на "
		+ "ОПС по дополнительному тарифу за 3-й месяц по п.2-18 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных страховых "
		+ "взносах на ОПС по дополнительному тарифу за 3-й месяц отдельными категориями плательщиков (п.3 ст.428 НК РФ) "
		+ "по основаниям, установленным п.2 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1073Гр01 = Пд131Пр1Ст50Гр05'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1073Гр01 = ПоказательПоСтроке("Р1СтМ1073Гр01");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст50Гр05 = ПоказательПоСтроке("Пд131Пр1Ст50Гр05");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1073Гр01 = 0;
	СуммаР1СтМ1073Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061010160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1073Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1073Гр01, "Раздел1");
			СуммаР1СтМ1073Гр01 = СуммаР1СтМ1073Гр01 + Р1СтМ1073Гр01.Значение;
			СуммаР1СтМ1073Гр01Стр = СуммаР1СтМ1073Гр01Стр + Р1СтМ1073Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд131Пр1Ст50Гр05 = 0;
	СуммаПд131Пр1Ст50Гр05Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			Если Пд131Пр1Ст1Гр01.Значение = "2" Тогда
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр05, Инд);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
				СуммаПд131Пр1Ст50Гр05 = СуммаПд131Пр1Ст50Гр05 + Пд131Пр1Ст50Гр05.Значение;
				СуммаПд131Пр1Ст50Гр05Стр = СуммаПд131Пр1Ст50Гр05Стр + Пд131Пр1Ст50Гр05.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1073Гр01, СуммаПд131Пр1Ст50Гр05);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1073Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд131Пр1Ст50Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.1 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1010 160";
	
	УсловиеВыполнено = СуммаР1СтМ1073Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_21б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.21б)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов за 3 месяц (ст. 073 р. 1) = ∑ всех гр. 5 ст. 050 подр. 1.3.2 "
		+ "прил. 1 р. 1 при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1020 160'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОПС по дополнительному тарифу к уплате за 3-й месяц по КБК ОПС "
		+ "дополнительного по п.2-18 ч.1ст.30 ФЗ ""О страховых пенсиях"" ≠ сумме всех исчисленных страховых взносах на "
		+ "ОПС по дополнительному тарифу за 3-й месяц по п.2-18 ч.1 ст.30 ФЗ № 400 и сумме всех исчисленных страховых "
		+ "взносах на ОПС по дополнительному тарифу за 3-й месяц отдельными категориями плательщиков (п.3 ст.428 НК РФ) "
		+ "по основаниям, установленным п.2 ст.428 НК РФ'");
	
	// Формула КС кратко: 'Р1СтМ1073Гр01 = Пд132Пр1Ст50Гр05'.
	
	Р1СтМ1060Гр01 = ПоказательПоСтроке("Р1СтМ1060Гр01");
	Р1СтМ1073Гр01 = ПоказательПоСтроке("Р1СтМ1073Гр01");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст50Гр05 = ПоказательПоСтроке("Пд132Пр1Ст50Гр05");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1, Р1СтМ1060Гр01.Имя);
	СуммаР1СтМ1073Гр01 = 0;
	СуммаР1СтМ1073Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1060Гр01, Инд);
		Если КодНайден(Р1СтМ1060Гр01.Значение, "18210202132061020160") Тогда
			ВнестиПоказательВРасшифровку(Р1СтМ1060Гр01, "Раздел1");
			ВставитьЗначениеМногострочногоПоказателя(Раздел1, Р1СтМ1073Гр01, Инд);
			ВнестиПоказательВРасшифровку(Р1СтМ1073Гр01, "Раздел1");
			СуммаР1СтМ1073Гр01 = СуммаР1СтМ1073Гр01 + Р1СтМ1073Гр01.Значение;
			СуммаР1СтМ1073Гр01Стр = СуммаР1СтМ1073Гр01Стр + Р1СтМ1073Гр01.ЗначениеСтр + " + ";
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд132Пр1Ст50Гр05 = 0;
	СуммаПд132Пр1Ст50Гр05Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			Если Пд132Пр1Ст1Гр01.Значение = "2" Тогда
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр05, Инд);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				СуммаПд132Пр1Ст50Гр05 = СуммаПд132Пр1Ст50Гр05 + Пд132Пр1Ст50Гр05.Значение;
				СуммаПд132Пр1Ст50Гр05Стр = СуммаПд132Пр1Ст50Гр05Стр + Пд132Пр1Ст50Гр05.ЗначениеСтр + " + ";
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1СтМ1073Гр01, СуммаПд132Пр1Ст50Гр05);
	Расшифровка = РасшифровкаВСтр(СуммаР1СтМ1073Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = "
		+ РасшифровкаВСтр(СуммаПд132Пр1Ст50Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]"
		+ ", при ст. 001 подр. 1.3.2 прил. 1 р. 1 = 2, если КБК (ст. 060 р. 1) = 182 102 02132 06 1020 160";
	
	УсловиеВыполнено = СуммаР1СтМ1073Гр01 > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_22(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.22)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов на социальное страхование (ст. 110 р. 1) = гр. 2 ст. 090 прил. 2 "
		+ "р. 1 если гр. 1 ст. 090 прил. 2 р. 1 = 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОСС к уплате за отчетный период (раздел 1) ≠ сумме страховых "
		+ "взносов на ОСС к уплате за отчетный период (прил.2 к разд.1), если сумма страховых взносов на ОСС исчислена "
		+ "к уплате за отчетный период и указан признак ""1""'");
	
	// Формула КС кратко: 'Р1Ст110Гр01 = Р1Прил2Ст90Гр02, когда Р1Прил2Ст90Гр01 = 1'.
	
	Р1Ст110Гр01 = ПоказательПоСтроке("Р1Ст110Гр01");
	Р1Прил2Ст90Гр02 = ПоказательПоСтроке("Р1Прил2Ст90Гр02");
	Р1Прил2Ст90Гр01 = ПоказательПоСтроке("Р1Прил2Ст90Гр01");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст110Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст110Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Ст110Гр01.Значение, Р1Прил2Ст90Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст90Гр01.ЗначениеСтр + " = 1";
	
	УсловиеВыполнено = Р1Прил2Ст90Гр01.Значение = "1";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_23(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.23)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов к уплате за 1 месяц (ст. 111 р. 1) = гр. 6 ст. 090 прил. 2 р. 1, "
		+ "если гр. 5 ст. 090 прил. 2 р. 1 = 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОСС к уплате за 1-й месяц (раздел 1) ≠ сумме страховых взносов "
		+ "на ОСС к уплате за 1-й месяц (прил.2 к разд.1), если сумма страховых взносов на ОСС исчислена к уплате за "
		+ "1-й месяц и указан признак ""1""'");
	
	// Формула КС кратко: 'Р1Ст111Гр01 = Р1Прил2Ст90Гр06, когда Р1Прил2Ст90Гр05 = 1'.
	
	Р1Ст111Гр01 = ПоказательПоСтроке("Р1Ст111Гр01");
	Р1Прил2Ст90Гр06 = ПоказательПоСтроке("Р1Прил2Ст90Гр06");
	Р1Прил2Ст90Гр05 = ПоказательПоСтроке("Р1Прил2Ст90Гр05");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст111Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст111Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр06);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр06, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Ст111Гр01.Значение, Р1Прил2Ст90Гр06.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст90Гр05.ЗначениеСтр + " = 1";
	
	УсловиеВыполнено = Р1Прил2Ст90Гр05.Значение = "1";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_24(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.24)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов к уплате за 2 месяц (ст. 112 р. 1) = гр. 8 ст. 090 прил. 2 р. 1 "
		+ "если гр. 7 ст. 090 прил. 2 р. 1 = 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОСС к уплате за 2-й месяц (раздел 1) ≠ сумме страховых взносов "
		+ "на ОСС к уплате за 2-й месяц (прил.2 к разд.1), если сумма страховых взносов на ОСС исчислена к уплате за "
		+ "2-й месяц и указан признак ""1""'");
	
	// Формула КС кратко: 'Р1Ст112Гр01 = Р1Прил2Ст90Гр08, когда Р1Прил2Ст90Гр07 = 1'.
	
	Р1Ст112Гр01 = ПоказательПоСтроке("Р1Ст112Гр01");
	Р1Прил2Ст90Гр08 = ПоказательПоСтроке("Р1Прил2Ст90Гр08");
	Р1Прил2Ст90Гр07 = ПоказательПоСтроке("Р1Прил2Ст90Гр07");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст112Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст112Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр07);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр07, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр08);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр08, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Ст112Гр01.Значение, Р1Прил2Ст90Гр08.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст90Гр07.ЗначениеСтр + " = 1";
	
	УсловиеВыполнено = Р1Прил2Ст90Гр07.Значение = "1";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_25(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.25)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов к уплате за 3 месяц (ст. 113 р. 1) = гр. 10 ст. 090 прил. 2 р. 1 "
		+ "если гр. 9 ст. 090 прил. 2 р. 1 = 1'");
	ОписаниеОшибки = НСтр("ru='Сумма страховых взносов на ОСС к уплате за 3-й месяц (раздел 1) ≠ сумме страховых взносов "
		+ "на ОСС к уплате за 3-й месяц (прил.2 к разд.1), если сумма страховых взносов на ОСС исчислена к уплате за "
		+ "3-й месяц и указан признак ""1""'");
	
	// Формула КС кратко: 'Р1Ст113Гр01 = Р1Прил2Ст90Гр10, когда Р1Прил2Ст90Гр09 = 1'.
	
	Р1Ст113Гр01 = ПоказательПоСтроке("Р1Ст113Гр01");
	Р1Прил2Ст90Гр10 = ПоказательПоСтроке("Р1Прил2Ст90Гр10");
	Р1Прил2Ст90Гр09 = ПоказательПоСтроке("Р1Прил2Ст90Гр09");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст113Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст113Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр09);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр09, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр10);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр10, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Ст113Гр01.Значение, Р1Прил2Ст90Гр10.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст90Гр09.ЗначениеСтр + " = 1";
	
	УсловиеВыполнено = Р1Прил2Ст90Гр09.Значение = "1";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_26(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.26)'");
	ОписаниеКС     = НСтр("ru='Сумма превышения расходов над взносами за отчетный период (ст. 120 р. 1) = гр. 2 ст. 090 "
		+ "прил. 2 р. 1 если гр. 1 ст. 090 прил. 2 р. 1 = 2'");
	ОписаниеОшибки = НСтр("ru='Сумма превышения произведенных расходов над исчисленными страховых взносов на ОСС за "
		+ "отчетный период (раздел 1) ≠ сумме превышения произведенных расходов над исчисленными страховыми взносами на "
		+ "ОСС за отчетный период (прил.2 к разд.1), если расходы превышают сумму исчисленных страховых взносов на ОСС "
		+ "и указан признак ""2""'");
	
	// Формула КС кратко: 'Р1Ст120Гр01 = Р1Прил2Ст90Гр02, когда Р1Прил2Ст90Гр01 = 2'.
	
	Р1Ст120Гр01 = ПоказательПоСтроке("Р1Ст120Гр01");
	Р1Прил2Ст90Гр02 = ПоказательПоСтроке("Р1Прил2Ст90Гр02");
	Р1Прил2Ст90Гр01 = ПоказательПоСтроке("Р1Прил2Ст90Гр01");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст120Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст120Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Ст120Гр01.Значение, Р1Прил2Ст90Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст90Гр01.ЗначениеСтр + " = 2";
	
	УсловиеВыполнено = Р1Прил2Ст90Гр01.Значение = "2";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_27(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.27)'");
	ОписаниеКС     = НСтр("ru='Сумма превышения расходов над взносами за 1 месяц (ст. 121 р. 1) = гр. 6 ст. 090 прил. 2 "
		+ "р. 1 если гр. 5 ст. 090 прил. 2 р. 1 = 2'");
	ОписаниеОшибки = НСтр("ru='Сумма превышения произведенных расходов над исчисленными страховых взносов на ОСС за 1-й "
		+ "месяц (раздел 1) ≠ сумме превышения произведенных расходов над исчисленными страховыми взносами на ОСС за "
		+ "1-й месяц (прил.2 к разд.1), если расходы превышают сумму исчисленных страховых взносов на ОСС и указан "
		+ "признак ""2""'");
	
	// Формула КС кратко: 'Р1Ст121Гр01 = Р1Прил2Ст90Гр06, когда Р1Прил2Ст90Гр05 = 2'.
	
	Р1Ст121Гр01 = ПоказательПоСтроке("Р1Ст121Гр01");
	Р1Прил2Ст90Гр06 = ПоказательПоСтроке("Р1Прил2Ст90Гр06");
	Р1Прил2Ст90Гр05 = ПоказательПоСтроке("Р1Прил2Ст90Гр05");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст121Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст121Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр06);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр06, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Ст121Гр01.Значение, Р1Прил2Ст90Гр06.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст90Гр05.ЗначениеСтр + " = 2";
	
	УсловиеВыполнено = Р1Прил2Ст90Гр05.Значение = "2";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_28(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.28)'");
	ОписаниеКС     = НСтр("ru='Сумма превышения расходов над взносами за 2 месяц (ст. 122 р. 1) = гр. 8 ст. 090 прил. 2 "
		+ "р. 1 если гр. 7 ст. 090 прил. 2 р. 1 = 2'");
	ОписаниеОшибки = НСтр("ru='Сумма превышения произведенных расходов над исчисленными страховыми взносами на ОСС за "
		+ "2-й месяц (раздел 1) ≠ сумме превышения произведенных расходов над исчисленными страховыми взносами на ОСС "
		+ "за 2-й месяц (прил.2 к разд.1), если расходы превышают сумму исчисленных страховых взносов на ОСС и указан "
		+ "признак ""2""'");
	
	// Формула КС кратко: 'Р1Ст122Гр01 = Р1Прил2Ст90Гр08, когда Р1Прил2Ст90Гр07 = 2'.
	
	Р1Ст122Гр01 = ПоказательПоСтроке("Р1Ст122Гр01");
	Р1Прил2Ст90Гр08 = ПоказательПоСтроке("Р1Прил2Ст90Гр08");
	Р1Прил2Ст90Гр07 = ПоказательПоСтроке("Р1Прил2Ст90Гр07");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст122Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст122Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр07);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр07, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр08);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр08, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Ст122Гр01.Значение, Р1Прил2Ст90Гр08.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст90Гр07.ЗначениеСтр + " = 2";
	
	УсловиеВыполнено = Р1Прил2Ст90Гр07.Значение = "2";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_29(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 1 (КС 1.29)'");
	ОписаниеКС     = НСтр("ru='Сумма превышения расходов над взносами за 3 месяц (ст. 123 р. 1) = гр.10 ст. 090 прил. 2 "
		+ "р. 1 если гр. 9 ст. 090 прил. 2 р. 1 = 2'");
	ОписаниеОшибки = НСтр("ru='Сумма превышения произведенных расходов над исчисленными страховыми взносами на ОСС за "
		+ "3-й месяц (раздел 1) ≠ сумме превышения произведенных расходов над исчисленными страховыми взносами на ОСС "
		+ "за 3-й месяц (прил.2 к разд.1), если расходы превышают сумму исчисленных страховых взносов на ОСС и указан "
		+ "признак ""2""'");
	
	// Формула КС кратко: 'Р1Ст123Гр01 = Р1Прил2Ст90Гр10, когда Р1Прил2Ст90Гр09 = 2'.
	
	Р1Ст123Гр01 = ПоказательПоСтроке("Р1Ст123Гр01");
	Р1Прил2Ст90Гр10 = ПоказательПоСтроке("Р1Прил2Ст90Гр10");
	Р1Прил2Ст90Гр09 = ПоказательПоСтроке("Р1Прил2Ст90Гр09");
	
	Раздел1 = мДанныеОтчета.Раздел1[0].Данные;
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1, Р1Ст123Гр01);
	ВнестиПоказательВРасшифровку(Р1Ст123Гр01, "Раздел1");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр09);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр09, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст90Гр10);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст90Гр10, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Ст123Гр01.Значение, Р1Прил2Ст90Гр10.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст90Гр09.ЗначениеСтр + " = 2";
	
	УсловиеВыполнено = Р1Прил2Ст90Гр09.Значение = "2";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_30(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.30)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц с начала периода (гр. 1 ст. 010 подр. 1.1 прил. 1 р. 1) "
		+ "должно быть больше или равно значению в гр. 1 ст. 020 подр. 1.1 прил. 1 р. 1 по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за отчетный период меньше "
		+ "количества физ. лиц, с выплат которым начислены страховые взносы на ОПС, за отчетный период в разрезе "
		+ "каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр01 >= Пд11Пр1Ст20Гр01'.
	
	Пд11Пр1Ст10Гр01 = ПоказательПоСтроке("Пд11Пр1Ст10Гр01");
	Пд11Пр1Ст20Гр01 = ПоказательПоСтроке("Пд11Пр1Ст20Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр01.Значение, Пд11Пр1Ст20Гр01.Значение);
		Расшифровка = Пд11Пр1Ст10Гр01.ЗначениеСтр + " >= " + Пд11Пр1Ст20Гр01.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_31(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.31)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.1 прил. 1 р. "
		+ "1) должно быть больше или равно значению в гр. 2 ст. 020 подр. 1.1 прил. 1 р. 1 по каждому значению Кода "
		+ "тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за 3 посл. месяца меньше "
		+ "количества физ. лиц, с выплат которым начислены страховые взносы на ОПС, за 3 посл. месяца в разрезе каждого "
		+ "вида тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр02 >= Пд11Пр1Ст20Гр02'.
	
	Пд11Пр1Ст10Гр02 = ПоказательПоСтроке("Пд11Пр1Ст10Гр02");
	Пд11Пр1Ст20Гр02 = ПоказательПоСтроке("Пд11Пр1Ст20Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр02.Значение, Пд11Пр1Ст20Гр02.Значение);
		Расшифровка = Пд11Пр1Ст10Гр02.ЗначениеСтр + " >= " + Пд11Пр1Ст20Гр02.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_32(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.32)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за 1 месяц (гр. 3 ст. 010 подр. 1.1 прил. 1 р. 1) должно "
		+ "быть больше или равно значению в гр. 3 ст. 020 подр. 1.1 прил. 1 р. 1 по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за 1-й месяц меньше количества "
		+ "физ. лиц, с выплат которым начислены страховые взносы на ОПС, за 1-й месяц в разрезе каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр03 >= Пд11Пр1Ст20Гр03'.
	
	Пд11Пр1Ст10Гр03 = ПоказательПоСтроке("Пд11Пр1Ст10Гр03");
	Пд11Пр1Ст20Гр03 = ПоказательПоСтроке("Пд11Пр1Ст20Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр03.Значение, Пд11Пр1Ст20Гр03.Значение);
		Расшифровка = Пд11Пр1Ст10Гр03.ЗначениеСтр + " >= " + Пд11Пр1Ст20Гр03.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_33(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.33)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за 2 месяц (гр. 4 ст. 010 подр. 1.1 прил. 1 р. 1) должно "
		+ "быть больше или равно значению в гр. 4 ст. 020 подр. 1.1 прил. 1 р. 1 по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за 2-й месяц меньше количества "
		+ "физ. лиц, с выплат которым начислены страховые взносы на ОПС, за 2-й месяц в разрезе каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр04 >= Пд11Пр1Ст20Гр04'.
	
	Пд11Пр1Ст10Гр04 = ПоказательПоСтроке("Пд11Пр1Ст10Гр04");
	Пд11Пр1Ст20Гр04 = ПоказательПоСтроке("Пд11Пр1Ст20Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр04.Значение, Пд11Пр1Ст20Гр04.Значение);
		Расшифровка = Пд11Пр1Ст10Гр04.ЗначениеСтр + " >= " + Пд11Пр1Ст20Гр04.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_34(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.34)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за 3 месяц (гр. 5 ст. 010 подр. 1.1 прил. 1 р. 1) должно "
		+ "быть больше или равно значению в гр. 5 ст. 020 подр. 1.1 прил. 1 р. 1 по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за 3-й месяц меньше количества "
		+ "физ. лиц, с выплат которым начислены страховые взносы на ОПС, за 3-й месяц в разрезе каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр05 >= Пд11Пр1Ст20Гр05'.
	
	Пд11Пр1Ст10Гр05 = ПоказательПоСтроке("Пд11Пр1Ст10Гр05");
	Пд11Пр1Ст20Гр05 = ПоказательПоСтроке("Пд11Пр1Ст20Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр05.Значение, Пд11Пр1Ст20Гр05.Значение);
		Расшифровка = Пд11Пр1Ст10Гр05.ЗначениеСтр + " >= " + Пд11Пр1Ст20Гр05.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_35(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.35)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц с начала периода (гр. 1 ст. 010 подр. 1.1 прил. 1 р. 1 оп) "
		+ "должно быть больше или равно значению в гр. 1 ст. 010 подр. 1.1 прил. 1 р. 1 предыдущего отчетного периода "
		+ "по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за отчётный период меньше "
		+ "количества застрахованных лиц по страховым взносам на ОПС за предыдущий отчётный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр01 >= Пд11Пр1Ст10Гр01ПРП'.
	
	Пд11Пр1Ст10Гр01 = ПоказательПоСтроке("Пд11Пр1Ст10Гр01");
	Пд11Пр1Ст10Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст10Гр01ПРП");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст10Гр01ПРП = 0;
		СуммаПд11Пр1Ст10Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст10Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст10Гр01ПРП = СуммаПд11Пр1Ст10Гр01ПРП + Пд11Пр1Ст10Гр01ПРП.Значение;
					СуммаПд11Пр1Ст10Гр01ПРПСтр = СуммаПд11Пр1Ст10Гр01ПРПСтр + Пд11Пр1Ст10Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр01.Значение, СуммаПд11Пр1Ст10Гр01ПРП);
		Расшифровка = Пд11Пр1Ст10Гр01.ЗначениеСтр + " >= " + РасшифровкаВСтр(СуммаПд11Пр1Ст10Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_36(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.36)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц, всего (гр.1 ст. 010 подр. 1.1 прил. 1 р. 1) должно быть "
		+ "больше или равно количеству застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.1 прил. 1 р. "
		+ "1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за отчётный период меньше "
		+ "количества застрахованных лиц по страховым взносам на ОПС за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр01 >= Пд11Пр1Ст10Гр02'.
	
	Пд11Пр1Ст10Гр01 = ПоказательПоСтроке("Пд11Пр1Ст10Гр01");
	Пд11Пр1Ст10Гр02 = ПоказательПоСтроке("Пд11Пр1Ст10Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр01.Значение, Пд11Пр1Ст10Гр02.Значение);
		Расшифровка = Пд11Пр1Ст10Гр01.ЗначениеСтр + " >= " + Пд11Пр1Ст10Гр02.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_37(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.37)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.1 прил. 1 р. "
		+ "1) должно быть больше или равно количеству застрахованных лиц в 1 месяце (гр. 3 ст. 010 подр. 1.1 прил. 1 р. "
		+ "1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за 3 последних месяца меньше "
		+ "количества застрахованных лиц по страховым взносам на ОПС за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр02 >= Пд11Пр1Ст10Гр03'.
	
	Пд11Пр1Ст10Гр02 = ПоказательПоСтроке("Пд11Пр1Ст10Гр02");
	Пд11Пр1Ст10Гр03 = ПоказательПоСтроке("Пд11Пр1Ст10Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр02.Значение, Пд11Пр1Ст10Гр03.Значение);
		Расшифровка = Пд11Пр1Ст10Гр02.ЗначениеСтр + " >= " + Пд11Пр1Ст10Гр03.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_38(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.38)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.1 прил. 1 р. "
		+ "1) должно быть больше или равно количеству застрахованных лиц в 2 месяце (гр. 4 ст. 010 подр. 1.1 прил. 1 р. "
		+ "1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за 3 последних месяца меньше "
		+ "количества застрахованных лиц по страховым взносам на ОПС за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр02 >= Пд11Пр1Ст10Гр04'.
	
	Пд11Пр1Ст10Гр02 = ПоказательПоСтроке("Пд11Пр1Ст10Гр02");
	Пд11Пр1Ст10Гр04 = ПоказательПоСтроке("Пд11Пр1Ст10Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр02.Значение, Пд11Пр1Ст10Гр04.Значение);
		Расшифровка = Пд11Пр1Ст10Гр02.ЗначениеСтр + " >= " + Пд11Пр1Ст10Гр04.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_39(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.39)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.1 прил. 1 р. "
		+ "1) должно быть больше или равно количеству застрахованных лиц в 3 месяце (гр. 5 ст. 010 подр. 1.1 прил. 1 р. "
		+ "1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОПС за 3 последних месяца меньше "
		+ "количества застрахованных лиц по страховым взносам на ОПС за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр02 >= Пд11Пр1Ст10Гр05'.
	
	Пд11Пр1Ст10Гр02 = ПоказательПоСтроке("Пд11Пр1Ст10Гр02");
	Пд11Пр1Ст10Гр05 = ПоказательПоСтроке("Пд11Пр1Ст10Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст10Гр02.Значение, Пд11Пр1Ст10Гр05.Значение);
		Расшифровка = Пд11Пр1Ст10Гр02.ЗначениеСтр + " >= " + Пд11Пр1Ст10Гр05.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_40(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.40)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат которым начислены страховые взносы, всего (гр. 1 ст. "
		+ "020 подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с превышающей предельной "
		+ "величиной базы, всего (гр. 1 ст. 021 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа плательщика "
		+ "(ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физическим лицам, которым начислены страховые взносы на ОПС за отчетный период "
		+ "меньше количества физических лиц, которым начислены страховые взносы на ОПС с выплат, превышающих предельную "
		+ "величину за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст20Гр01 >= Пд11Пр1Ст21Гр01'.
	
	Пд11Пр1Ст20Гр01 = ПоказательПоСтроке("Пд11Пр1Ст20Гр01");
	Пд11Пр1Ст21Гр01 = ПоказательПоСтроке("Пд11Пр1Ст21Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст20Гр01.Значение, Пд11Пр1Ст21Гр01.Значение);
		Расшифровка = Пд11Пр1Ст20Гр01.ЗначениеСтр + " >= " + Пд11Пр1Ст21Гр01.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_41(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.41)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат которым начислены страховые взносы за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с "
		+ "превышающей предельной величиной базы за последние три месяца (гр. 2 ст. 021 подр. 1.1 прил. 1 р. 1) по "
		+ "каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислены страховые взносы на ОПС за 3 посл.месяца "
		+ "меньше количества физических лиц, которым начислены страховые взносы на ОПС с выплат, превышающих предельную "
		+ "величину за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст20Гр02 >= Пд11Пр1Ст21Гр02'.
	
	Пд11Пр1Ст20Гр02 = ПоказательПоСтроке("Пд11Пр1Ст20Гр02");
	Пд11Пр1Ст21Гр02 = ПоказательПоСтроке("Пд11Пр1Ст21Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст20Гр02.Значение, Пд11Пр1Ст21Гр02.Значение);
		Расшифровка = Пд11Пр1Ст20Гр02.ЗначениеСтр + " >= " + Пд11Пр1Ст21Гр02.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_42(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.42)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат которым начислены страховые взносы за 1 месяц (гр. 3 "
		+ "ст. 020 подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с превышающей "
		+ "предельной величиной базы за 1 месяц (гр. 3 ст. 021 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1) '");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислили страховые взносы на ОПС за 1-й посл.месяц "
		+ "меньше количества физических лиц, которым начислили страховых взносов на ОПС с выплат, превыш. пред.величину "
		+ "за 1-й посл.месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст20Гр03 >= Пд11Пр1Ст21Гр03'.
	
	Пд11Пр1Ст20Гр03 = ПоказательПоСтроке("Пд11Пр1Ст20Гр03");
	Пд11Пр1Ст21Гр03 = ПоказательПоСтроке("Пд11Пр1Ст21Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст20Гр03.Значение, Пд11Пр1Ст21Гр03.Значение);
		Расшифровка = Пд11Пр1Ст20Гр03.ЗначениеСтр + " >= " + Пд11Пр1Ст21Гр03.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_43(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.43)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат которым начислены страховые взносы за 2 месяц (гр. 4 "
		+ "ст. 020 подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с превышающей "
		+ "предельной величиной базы за 2 месяц (гр. 4 ст. 021 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислено страховых взносов на ОПС за 2-й посл.месяц "
		+ "меньше количества физических лиц, которым начислены страховые взносы на ОПС с выплат, превышающих предельную "
		+ "величину за 2-й посл.месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст20Гр04 >= Пд11Пр1Ст21Гр04'.
	
	Пд11Пр1Ст20Гр04 = ПоказательПоСтроке("Пд11Пр1Ст20Гр04");
	Пд11Пр1Ст21Гр04 = ПоказательПоСтроке("Пд11Пр1Ст21Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст20Гр04.Значение, Пд11Пр1Ст21Гр04.Значение);
		Расшифровка = Пд11Пр1Ст20Гр04.ЗначениеСтр + " >= " + Пд11Пр1Ст21Гр04.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_44(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.44)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат которым начислены страховые взносы за 3 месяц (гр. 5 "
		+ "ст. 020 подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с превышающей "
		+ "предельной величиной базы за 3 месяц (гр. 5 ст. 021 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислили страховые взносы на ОПС за 3-й посл.месяц "
		+ "меньше количества физических лиц, которым начислили страховые взносы на ОПС с выплат, превышающих предельную "
		+ "величину за 3-й посл.месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст20Гр05 >= Пд11Пр1Ст21Гр05'.
	
	Пд11Пр1Ст20Гр05 = ПоказательПоСтроке("Пд11Пр1Ст20Гр05");
	Пд11Пр1Ст21Гр05 = ПоказательПоСтроке("Пд11Пр1Ст21Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст20Гр05.Значение, Пд11Пр1Ст21Гр05.Значение);
		Расшифровка = Пд11Пр1Ст20Гр05.ЗначениеСтр + " >= " + Пд11Пр1Ст21Гр05.ЗначениеСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_45(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.45)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат которым начислены страховые взносы, всего (гр. 1 ст. "
		+ "020 подр. 1.1 прил. 1 р. 1 отчетного периода) должно быть больше или равно количеству физических лиц, с "
		+ "выплат которым начислены страховые взносы, всего (гр. 1 ст. 020 подр. 1.1 прил. 1 р. 1 предыдущего отчетного "
		+ "периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислили страховые взносы на ОПС за отчетный период "
		+ "меньше количества физических лиц, которым начислены страховые взносы на ОПС за предыдущий отчетный период по "
		+ "каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст20Гр01 >= Пд11Пр1Ст20Гр01ПРП'.
	
	Пд11Пр1Ст20Гр01 = ПоказательПоСтроке("Пд11Пр1Ст20Гр01");
	Пд11Пр1Ст20Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст20Гр01ПРП");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст20Гр01ПРП = 0;
		СуммаПд11Пр1Ст20Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст20Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст20Гр01ПРП = СуммаПд11Пр1Ст20Гр01ПРП + Пд11Пр1Ст20Гр01ПРП.Значение;
					СуммаПд11Пр1Ст20Гр01ПРПСтр = СуммаПд11Пр1Ст20Гр01ПРПСтр + Пд11Пр1Ст20Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		КС = ПоказателиКС(Пд11Пр1Ст20Гр01.Значение, СуммаПд11Пр1Ст20Гр01ПРП);
		Расшифровка = Пд11Пр1Ст20Гр01.ЗначениеСтр + " >= " + РасшифровкаВСтр(СуммаПд11Пр1Ст20Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_46(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.46)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, всего (гр. 1 ст. 030 подр. 1.1 прил. 1 р. 1) > 0, "
		+ "если количество физических лиц, с выплат которым начислены страховые взносы, всего (гр. 1 ст. 020 подр. 1.1 "
		+ "прил. 1 р. 1) > 0, по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1) '");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОПС за отчетный период при наличии физических "
		+ "лиц, с выплат которым начислены страховые взносы на ОПС, за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр01 > 0, когда Пд11Пр1Ст20Гр01 > 0'.
	
	Пд11Пр1Ст30Гр01 = ПоказательПоСтроке("Пд11Пр1Ст30Гр01");
	Пд11Пр1Ст20Гр01 = ПоказательПоСтроке("Пд11Пр1Ст20Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр01.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст20Гр01.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст20Гр01.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_47(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.47)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за последние три месяца (гр. 2 ст. 030 подр. 1.1 прил. "
		+ "1 р. 1) > 0, если количество физических лиц, с выплат которым начислены страховые взносы за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.1 прил. 1 р. 1) > 0, по каждому значению Кода тарифа плательщика (ст. 001 "
		+ "прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОПС за 3 последних месяца при наличии "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОПС, за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр02 > 0, когда Пд11Пр1Ст20Гр02 > 0'.
	
	Пд11Пр1Ст30Гр02 = ПоказательПоСтроке("Пд11Пр1Ст30Гр02");
	Пд11Пр1Ст20Гр02 = ПоказательПоСтроке("Пд11Пр1Ст20Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр02.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст20Гр02.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст20Гр02.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_48(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.48)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 1 месяц (гр. 3 ст. 030 подр. 1.1 прил. 1 р. 1) > 0, "
		+ "если количество физических лиц, с выплат которым начислены страховые взносы за 1 месяц (гр. 3 ст. 020 подр. "
		+ "1.1 прил. 1 р. 1) > 0, по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОПС за 1-й последний месяц при наличии "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОПС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр03 > 0, когда Пд11Пр1Ст20Гр03 > 0'.
	
	Пд11Пр1Ст30Гр03 = ПоказательПоСтроке("Пд11Пр1Ст30Гр03");
	Пд11Пр1Ст20Гр03 = ПоказательПоСтроке("Пд11Пр1Ст20Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр03.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст20Гр03.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст20Гр03.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_49(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.49)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 2 месяц (гр. 4 ст. 030 подр. 1.1 прил. 1 р. 1) > 0, "
		+ "если количество физических лиц, с выплат которым начислены страховые взносы за 2 месяц (гр. 4 ст. 020 подр. "
		+ "1.1 прил. 1 р. 1) > 0, по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОПС за 2-й последний месяц при наличии "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОПС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр04 > 0, когда Пд11Пр1Ст20Гр04 > 0'.
	
	Пд11Пр1Ст30Гр04 = ПоказательПоСтроке("Пд11Пр1Ст30Гр04");
	Пд11Пр1Ст20Гр04 = ПоказательПоСтроке("Пд11Пр1Ст20Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр04.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст20Гр04.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст20Гр04.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_50(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.50)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 3 месяц (гр. 5 ст. 030 подр. 1.1 прил. 1 р. 1) > 0, "
		+ "если количество физических лиц, с выплат которым начислены страховые взносы за 3 месяц (гр. 5 ст. 020 подр. "
		+ "1.1 прил. 1 р. 1) > 0, по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОПС за 3-й последний месяц при наличии "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОПС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр05 > 0, когда Пд11Пр1Ст20Гр05 > 0'.
	
	Пд11Пр1Ст30Гр05 = ПоказательПоСтроке("Пд11Пр1Ст30Гр05");
	Пд11Пр1Ст20Гр05 = ПоказательПоСтроке("Пд11Пр1Ст20Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст20Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст20Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр05.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст20Гр05.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст20Гр05.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_51(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.51)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц с превышающей предельной величиной базы, всего (гр. 1 ст. 021 "
		+ "подр. 1.1 прил. 1 р. 1 отчетного периода) должно быть больше или равно количеству физических лиц с "
		+ "превышающей предельной величиной базы, всего (гр. 1 ст. 021 подр. 1.1 прил. 1 р. 1 предыдущего отчетного "
		+ "периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1) '");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислены страховые взносы на ОПС с выплат, "
		+ "превышающих предельную величину, за отчетный период меньше количества физических лиц, которым начислены "
		+ "страховые взносы на ОПС с выплат, превышающим предельную величину, за предыдущий отчетный период по каждому "
		+ "виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст21Гр01 >= Пд11Пр1Ст21Гр01ПРП'.
	
	Пд11Пр1Ст21Гр01 = ПоказательПоСтроке("Пд11Пр1Ст21Гр01");
	Пд11Пр1Ст21Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст21Гр01ПРП");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст21Гр01ПРП = 0;
		СуммаПд11Пр1Ст21Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст21Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст21Гр01ПРП = СуммаПд11Пр1Ст21Гр01ПРП + Пд11Пр1Ст21Гр01ПРП.Значение;
					СуммаПд11Пр1Ст21Гр01ПРПСтр = СуммаПд11Пр1Ст21Гр01ПРПСтр + Пд11Пр1Ст21Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		КС = ПоказателиКС(Пд11Пр1Ст21Гр01.Значение, СуммаПд11Пр1Ст21Гр01ПРП);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + РасшифровкаВСтр(СуммаПд11Пр1Ст21Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_52(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.52)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц с превышающей предельной величиной базы, всего (гр. 1 ст. 021 "
		+ "подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с превышающей предельной "
		+ "величиной базы за последние три месяца (гр. 2 ст. 021 подр. 1.1 прил. 1 р. 1) по каждому значению Коду "
		+ "тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислены страховые взносы на ОПС с выплат, "
		+ "превышающих предельную величину, за отчетный период меньше количества физических лиц, которым начислены "
		+ "страховые взносы на ОПС с выплат, превыш. предельную величину, за три последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст21Гр01 >= Пд11Пр1Ст21Гр02'.
	
	Пд11Пр1Ст21Гр01 = ПоказательПоСтроке("Пд11Пр1Ст21Гр01");
	Пд11Пр1Ст21Гр02 = ПоказательПоСтроке("Пд11Пр1Ст21Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст21Гр01.Значение, Пд11Пр1Ст21Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_53(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.53)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц с превышающей предельной величиной базы за последние три месяца "
		+ "(гр. 2 ст. 021 подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с превышающей "
		+ "предельной величиной базы за 1 месяц (гр. 3 ст. 021 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физичексих лиц, которым начислены страховые взносы на ОПС с выплат, "
		+ "превышающих предельную величину, за три последних месяца меньше количества физических лиц, которым начислены "
		+ "страховые взносы на ОПС с выплат, превышающих предельную величину, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст21Гр02 >= Пд11Пр1Ст21Гр03'.
	
	Пд11Пр1Ст21Гр02 = ПоказательПоСтроке("Пд11Пр1Ст21Гр02");
	Пд11Пр1Ст21Гр03 = ПоказательПоСтроке("Пд11Пр1Ст21Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст21Гр02.Значение, Пд11Пр1Ст21Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_54(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.54)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц с превышающей предельной величиной базы за последние три месяца "
		+ "(гр. 2 ст. 021 подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с превышающей "
		+ "предельной величиной базы за 2 месяц (гр. 4 ст. 021 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислены страховые взносы на ОПС с выплат, "
		+ "превышающих предельную величину, за три последних месяца меньше количества физических лиц, которым начислены "
		+ "страховые взносы на ОПС с выплат, превышающих предельную величину, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст21Гр02 >= Пд11Пр1Ст21Гр04'.
	
	Пд11Пр1Ст21Гр02 = ПоказательПоСтроке("Пд11Пр1Ст21Гр02");
	Пд11Пр1Ст21Гр04 = ПоказательПоСтроке("Пд11Пр1Ст21Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст21Гр02.Значение, Пд11Пр1Ст21Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_55(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.55)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц с превышающей предельной величиной базы за последние три месяца "
		+ "(гр. 2 ст. 021 подр. 1.1 прил. 1 р. 1) должно быть больше или равно количеству физических лиц с превышающей "
		+ "предельной величиной базы за 3 месяц (гр. 5 ст. 021 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислили страховые взносы на ОПС с выплат, "
		+ "превышающих предельную величину, за три последних месяца меньше количества физических лиц, которым начислены "
		+ "страховые взносы на ОПС с выплат, превышающих предельную величину, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст21Гр02 >= Пд11Пр1Ст21Гр05'.
	
	Пд11Пр1Ст21Гр02 = ПоказательПоСтроке("Пд11Пр1Ст21Гр02");
	Пд11Пр1Ст21Гр05 = ПоказательПоСтроке("Пд11Пр1Ст21Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст21Гр02.Значение, Пд11Пр1Ст21Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_56(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.56)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, всего (гр. 1 ст. 030 подр. 1.1 прил. 1 р. 1 отчетного "
		+ "периода) = Сумма выплат и иных вознаграждений, всего (гр. 1 ст. 030 подр. 1.1 прил. 1 р. 1 предыдущего "
		+ "отчетного периода) + Сумма выплат и иных вознаграждений за последние три месяца (гр. 2 ст. 030 подр. 1.1 "
		+ "прил. 1 р. 1 СВ отчетного периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС за отчетный период ≠ сумме выплат по страховым "
		+ "взносам на ОПС за предыдущий отчетный период и за последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр01 = Пд11Пр1Ст30Гр01ПРП + Пд11Пр1Ст30Гр02'.
	
	Пд11Пр1Ст30Гр01 = ПоказательПоСтроке("Пд11Пр1Ст30Гр01");
	Пд11Пр1Ст30Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст30Гр01ПРП");
	Пд11Пр1Ст30Гр02 = ПоказательПоСтроке("Пд11Пр1Ст30Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст30Гр01ПРП = 0;
		СуммаПд11Пр1Ст30Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст30Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст30Гр01ПРП = СуммаПд11Пр1Ст30Гр01ПРП + Пд11Пр1Ст30Гр01ПРП.Значение;
					СуммаПд11Пр1Ст30Гр01ПРПСтр = СуммаПд11Пр1Ст30Гр01ПРПСтр + Пд11Пр1Ст30Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр01.Значение, СуммаПд11Пр1Ст30Гр01ПРП + Пд11Пр1Ст30Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст30Гр01ПРПСтр) + " + " + Пд11Пр1Ст30Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_57(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.57)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за последние три месяца (гр. 2 ст. 030 подр. 1.1 прил. "
		+ "1 р. 1) = Сумма выплат и иных вознаграждений за 1 месяц (гр. 3 ст. 030 подр. 1.1 прил. 1 р. 1) + Сумма "
		+ "выплат и иных вознаграждений за 2 месяц (гр. 4 ст. 030 подр. 1.1 прил. 1 р. 1) + Сумма выплат и иных "
		+ "вознаграждений за 3 месяц (гр. 5 ст. 030 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа плательщика "
		+ "(ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС за 3 последних месяца ≠ сумме выплат по "
		+ "страховым взносам на ОПС за каждый из последних месяцев по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр02 = Пд11Пр1Ст30Гр03 + Пд11Пр1Ст30Гр04 + Пд11Пр1Ст30Гр05'.
	
	Пд11Пр1Ст30Гр02 = ПоказательПоСтроке("Пд11Пр1Ст30Гр02");
	Пд11Пр1Ст30Гр03 = ПоказательПоСтроке("Пд11Пр1Ст30Гр03");
	Пд11Пр1Ст30Гр04 = ПоказательПоСтроке("Пд11Пр1Ст30Гр04");
	Пд11Пр1Ст30Гр05 = ПоказательПоСтроке("Пд11Пр1Ст30Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр02.Значение, Пд11Пр1Ст30Гр03.Значение + Пд11Пр1Ст30Гр04.Значение + Пд11Пр1Ст30Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст30Гр03.ЗначениеСтр + " + " + Пд11Пр1Ст30Гр04.ЗначениеСтр + " + "
			+ Пд11Пр1Ст30Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_58(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.58)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, всего (гр. 1 ст. 030 подр. 1.1 прил. 1 р. 1) должна "
		+ "быть больше или равна сумме, не подлежащей обложению страховыми взносами, всего (гр. 1 ст. 040 подр. 1.1 "
		+ "прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС за отчетный период меньше суммы выплат, не "
		+ "подлежащей обложению страховыми взносами на ОПС, за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр01 >= Пд11Пр1Ст40Гр01'.
	
	Пд11Пр1Ст30Гр01 = ПоказательПоСтроке("Пд11Пр1Ст30Гр01");
	Пд11Пр1Ст40Гр01 = ПоказательПоСтроке("Пд11Пр1Ст40Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр01.Значение, Пд11Пр1Ст40Гр01.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_59(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.59)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за последние три месяца (гр. 2 ст. 030 подр. 1.1 прил. "
		+ "1 р. 1) должна быть больше или равна сумме, не подлежащей обложению страховыми взносами за последние три "
		+ "месяца (гр. 2 ст. 040 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 "
		+ "р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС за 3 последних месяца меньше суммы выплат, не "
		+ "подлежащей обложению страховыми взносами на ОПС, за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр02 >= Пд11Пр1Ст40Гр02'.
	
	Пд11Пр1Ст30Гр02 = ПоказательПоСтроке("Пд11Пр1Ст30Гр02");
	Пд11Пр1Ст40Гр02 = ПоказательПоСтроке("Пд11Пр1Ст40Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр02.Значение, Пд11Пр1Ст40Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_60(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.60)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 1 месяц (гр. 3 ст. 030 подр. 1.1 прил. 1 р. 1) "
		+ "должна быть больше или равна сумме, не подлежащей обложению страховыми взносами за 1 месяц (гр. 3 ст. 040 "
		+ "подр. 1.1 прил. 1 р. 1) по каждому значению Коду тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС за 1-й последний месяц меньше суммы выплат, не "
		+ "подлежащей обложению страховыми взносами на ОПС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр03 >= Пд11Пр1Ст40Гр03'.
	
	Пд11Пр1Ст30Гр03 = ПоказательПоСтроке("Пд11Пр1Ст30Гр03");
	Пд11Пр1Ст40Гр03 = ПоказательПоСтроке("Пд11Пр1Ст40Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр03.Значение, Пд11Пр1Ст40Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_61(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.61)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 2 месяц (гр. 4 ст. 030 подр. 1.1 прил. 1 р. 1) "
		+ "должна быть больше или равна сумме, не подлежащей обложению страховыми взносами за 2 месяц (гр. 4 ст. 040 "
		+ "подр. 1.1 прил. 1 р. 1) по каждому значению Коду тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС за 2-й последний месяц меньше суммы выплат, не "
		+ "подлежащей обложению страховыми взносами на ОПС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр04 >= Пд11Пр1Ст40Гр04'.
	
	Пд11Пр1Ст30Гр04 = ПоказательПоСтроке("Пд11Пр1Ст30Гр04");
	Пд11Пр1Ст40Гр04 = ПоказательПоСтроке("Пд11Пр1Ст40Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр04.Значение, Пд11Пр1Ст40Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_62(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.62)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 3 месяц (гр. 5 ст. 030 подр. 1.1 прил. 1 р. 1) "
		+ "должна быть больше или равна сумме, не подлежащей обложению страховыми взносами за 3 месяц (гр. 5 ст. 040 "
		+ "подр. 1.1 прил. 1 р. 1) по каждому значению Коду тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС за 3-й последний месяц меньше суммы выплат, не "
		+ "подлежащей обложению страховыми взносами на ОПС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст30Гр05 >= Пд11Пр1Ст40Гр05'.
	
	Пд11Пр1Ст30Гр05 = ПоказательПоСтроке("Пд11Пр1Ст30Гр05");
	Пд11Пр1Ст40Гр05 = ПоказательПоСтроке("Пд11Пр1Ст40Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст30Гр05.Значение, Пд11Пр1Ст40Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_63(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.63)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами, всего (гр. 1 ст. 040 подр. 1.1 прил. "
		+ "1 р. 1 отчетного периода) = Сумма, не подлежащая обложению страховыми взносами, всего (гр. 1 ст. 040 подр. "
		+ "1.1 прил. 1 р. 1 предыдущего отчетного периода) + Сумма, не подлежащая обложению страховыми взносами за "
		+ "последние три месяца (гр. 2 ст. 040 подр. 1.1 прил. 1 р. 1 отчетного периода) по каждому значению Кода "
		+ "тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлежащая обложению страховыми взносами на ОПС за отчетный период ≠ "
		+ "сумме выплат, не подлежащей обложению страховыми взносами на ОПС за предыдущий отчетный период и за "
		+ "последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст40Гр01 = Пд11Пр1Ст40Гр01ПРП + Пд11Пр1Ст40Гр02'.
	
	Пд11Пр1Ст40Гр01 = ПоказательПоСтроке("Пд11Пр1Ст40Гр01");
	Пд11Пр1Ст40Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст40Гр01ПРП");
	Пд11Пр1Ст40Гр02 = ПоказательПоСтроке("Пд11Пр1Ст40Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст40Гр01ПРП = 0;
		СуммаПд11Пр1Ст40Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст40Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст40Гр01ПРП = СуммаПд11Пр1Ст40Гр01ПРП + Пд11Пр1Ст40Гр01ПРП.Значение;
					СуммаПд11Пр1Ст40Гр01ПРПСтр = СуммаПд11Пр1Ст40Гр01ПРПСтр + Пд11Пр1Ст40Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст40Гр01.Значение, СуммаПд11Пр1Ст40Гр01ПРП + Пд11Пр1Ст40Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст40Гр01ПРПСтр) + " + " + Пд11Пр1Ст40Гр02.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_64(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.64)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами за последние три месяца (гр. 2 ст. 040 "
		+ "подр. 1.1 прил. 1 р. 1) = Сумма, не подлежащая обложению страховыми взносами за 1 месяц (гр. 3 ст. 040 подр. "
		+ "1.1 прил. 1 р. 1) + Сумма, не подлежащая обложению страховыми взносами за 2 месяц (гр. 4 ст. 040 подр. 1.1 "
		+ "прил. 1 р. 1) + Сумма, не подлежащая обложению страховыми взносами за 3 месяц (гр. 5 ст. 040 подр. 1.1 прил. "
		+ "1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлежащая обложению страховыми взносами на ОПС за последние три месяца "
		+ "отчетного периода ≠ сумме выплат, не подлежащей обложению страховыми взносами на ОПС за предыдущий отчетный "
		+ "период и за последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст40Гр02 = Пд11Пр1Ст40Гр03 + Пд11Пр1Ст40Гр04 + Пд11Пр1Ст40Гр05'.
	
	Пд11Пр1Ст40Гр02 = ПоказательПоСтроке("Пд11Пр1Ст40Гр02");
	Пд11Пр1Ст40Гр03 = ПоказательПоСтроке("Пд11Пр1Ст40Гр03");
	Пд11Пр1Ст40Гр04 = ПоказательПоСтроке("Пд11Пр1Ст40Гр04");
	Пд11Пр1Ст40Гр05 = ПоказательПоСтроке("Пд11Пр1Ст40Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст40Гр02.Значение, Пд11Пр1Ст40Гр03.Значение + Пд11Пр1Ст40Гр04.Значение + Пд11Пр1Ст40Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст40Гр03.ЗначениеСтр + " + " + Пд11Пр1Ст40Гр04.ЗначениеСтр + " + " + Пд11Пр1Ст40Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_65(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.65)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, всего (гр. 1 ст. 050 подр. 1.1 прил. 1 р. 1) = "
		+ "Сумма выплат и иных вознаграждений, всего (гр. 1 ст. 030 подр. 1.1 прил. 1 р. 1) - Сумма, не подлежащая "
		+ "обложению страховыми взносами, всего (гр. 1 ст. 040 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховым взносов на ОПС за отчетный период ≠ разнице всех выплат и выплат, не "
		+ "подлежащих обложению страховыми взносами на ОПС, за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр01 = Пд11Пр1Ст30Гр01 - Пд11Пр1Ст40Гр01'.
	
	Пд11Пр1Ст50Гр01 = ПоказательПоСтроке("Пд11Пр1Ст50Гр01");
	Пд11Пр1Ст30Гр01 = ПоказательПоСтроке("Пд11Пр1Ст30Гр01");
	Пд11Пр1Ст40Гр01 = ПоказательПоСтроке("Пд11Пр1Ст40Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр01.Значение, Пд11Пр1Ст30Гр01.Значение - Пд11Пр1Ст40Гр01.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст30Гр01.ЗначениеСтр + " - " + Пд11Пр1Ст40Гр01.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_66(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.66)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за последние три месяца (гр. 2 ст. 050 подр. 1.1 "
		+ "прил. 1 р. 1) = Сумма выплат и иных вознаграждений за последние три месяца (гр. 2 ст. 030 подр. 1.1 прил. 1 "
		+ "р. 1) - Сумма, не подлежащая обложению страховыми взносами за последние три месяца (гр. 2 ст. 040 подр. 1.1 "
		+ "прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за 3 последних месяца ≠ разнице всех выплат и выплат, "
		+ "не подлежащих обложению страховыми взносами на ОПС, за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр02 = Пд11Пр1Ст30Гр02 - Пд11Пр1Ст40Гр02'.
	
	Пд11Пр1Ст50Гр02 = ПоказательПоСтроке("Пд11Пр1Ст50Гр02");
	Пд11Пр1Ст30Гр02 = ПоказательПоСтроке("Пд11Пр1Ст30Гр02");
	Пд11Пр1Ст40Гр02 = ПоказательПоСтроке("Пд11Пр1Ст40Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр02.Значение, Пд11Пр1Ст30Гр02.Значение - Пд11Пр1Ст40Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст30Гр02.ЗначениеСтр + " - " + Пд11Пр1Ст40Гр02.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_67(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.67)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 1 месяц (гр. 3 ст. 050 подр. 1.1 прил. 1 р. 1) = "
		+ "Сумма выплат и иных вознаграждений за 1 месяц (гр. 3 ст. 030 подр. 1.1 прил. 1 р. 1) - Сумма, не подлежащая "
		+ "обложению страховыми взносами за 1 месяц (гр. 3 ст. 040 подр. 1.1 прил. 1 р. 1) по каждому значению Кода "
		+ "тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за 1-й последний месяц ≠ разнице всех выплат и выплат, "
		+ "не подлежащих обложению страховыми взносами на ОПС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр03 = Пд11Пр1Ст30Гр03 - Пд11Пр1Ст40Гр03'.
	
	Пд11Пр1Ст50Гр03 = ПоказательПоСтроке("Пд11Пр1Ст50Гр03");
	Пд11Пр1Ст30Гр03 = ПоказательПоСтроке("Пд11Пр1Ст30Гр03");
	Пд11Пр1Ст40Гр03 = ПоказательПоСтроке("Пд11Пр1Ст40Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр03.Значение, Пд11Пр1Ст30Гр03.Значение - Пд11Пр1Ст40Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст30Гр03.ЗначениеСтр + " - " + Пд11Пр1Ст40Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_68(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.68)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 2 месяц (гр. 4 ст. 050 подр. 1.1 прил. 1 р. 1) = "
		+ "Сумма выплат и иных вознаграждений за 2 месяц (гр. 4 ст. 030 подр. 1.1 прил. 1 р. 1) - Сумма, не подлежащая "
		+ "обложению страховыми взносами за 2 месяц (гр. 4 ст. 040 подр. 1.1 прил. 1 р. 1) по каждому значению Кода "
		+ "тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за 2-й последний месяц ≠ разнице всех выплат и выплат, "
		+ "не подлежащих обложению страховыми взносами на ОПС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр04 = Пд11Пр1Ст30Гр04 - Пд11Пр1Ст40Гр04'.
	
	Пд11Пр1Ст50Гр04 = ПоказательПоСтроке("Пд11Пр1Ст50Гр04");
	Пд11Пр1Ст30Гр04 = ПоказательПоСтроке("Пд11Пр1Ст30Гр04");
	Пд11Пр1Ст40Гр04 = ПоказательПоСтроке("Пд11Пр1Ст40Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр04.Значение, Пд11Пр1Ст30Гр04.Значение - Пд11Пр1Ст40Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст30Гр04.ЗначениеСтр + " - " + Пд11Пр1Ст40Гр04.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_69(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.69)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 3 месяц (гр. 5 ст. 050 подр. 1.1 прил. 1 р. 1) = "
		+ "Сумма выплат и иных вознаграждений за 3 месяц (гр. 5 ст. 030 подр. 1.1 прил. 1 р. 1) - Сумма, не подлежащая "
		+ "обложению страховыми взносами за 3 месяц (гр. 5 ст. 040 подр. 1.1 прил. 1 р. 1) по каждому значению Кода "
		+ "тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за 3-й последний месяц ≠ разнице всех выплат и выплат, "
		+ "не подлежащих обложению страховыми взносами на ОПС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр05 = Пд11Пр1Ст30Гр05 - Пд11Пр1Ст40Гр05'.
	
	Пд11Пр1Ст50Гр05 = ПоказательПоСтроке("Пд11Пр1Ст50Гр05");
	Пд11Пр1Ст30Гр05 = ПоказательПоСтроке("Пд11Пр1Ст30Гр05");
	Пд11Пр1Ст40Гр05 = ПоказательПоСтроке("Пд11Пр1Ст40Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст40Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст40Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр05.Значение, Пд11Пр1Ст30Гр05.Значение - Пд11Пр1Ст40Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст30Гр05.ЗначениеСтр + " - " + Пд11Пр1Ст40Гр05.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_70(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.70)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, превышающая предельную величину базы, всего (гр. 1 "
		+ "ст. 051 подр. 1.1 прил. 1 р. 1) > 0, если количество физических лиц с превышающей предельной величиной базы, "
		+ "всего (гр. 1 ст. 021 подр. 1.1 прил. 1 р. 1) > 0, по каждому значению Кода тарифа плательщика (ст. 001 прил. "
		+ "1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствует база в размере превышающем предельную величину для страховых взносов на ОПС, "
		+ "за отчетный период при наличии физических лиц, с выплат, превышающих предельнную величину, которым начислены "
		+ "страховые взносы на ОПС, за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст51Гр01 > 0, когда Пд11Пр1Ст21Гр01 > 0'.
	
	Пд11Пр1Ст51Гр01 = ПоказательПоСтроке("Пд11Пр1Ст51Гр01");
	Пд11Пр1Ст21Гр01 = ПоказательПоСтроке("Пд11Пр1Ст21Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст51Гр01.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст21Гр01.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст21Гр01.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_71(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.71)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, превышающая предельную величину базы за последние "
		+ "три месяца (гр. 2 ст. 051 подр. 1.1 прил. 1 р. 1) > 0, если количество физических лиц с превышающей "
		+ "предельной величиной базы за последние три месяца (гр. 2 ст. 021 подр. 1.1 прил. 1 р. 1) > 0, по каждому "
		+ "значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствует база в размере превышающем предельную величину для страховых взносов на ОПС, "
		+ "за 3 последних месяца при наличии физических лиц, с выплат, превышающих предельную величину, которым "
		+ "начислены страховые взносы на ОПС, за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст51Гр02 > 0, когда Пд11Пр1Ст21Гр02 > 0'.
	
	Пд11Пр1Ст51Гр02 = ПоказательПоСтроке("Пд11Пр1Ст51Гр02");
	Пд11Пр1Ст21Гр02 = ПоказательПоСтроке("Пд11Пр1Ст21Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст51Гр02.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст21Гр02.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст21Гр02.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_72(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.72)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, превышающая предельную величину базы за 1 месяц "
		+ "(гр. 3 ст. 051 подр. 1.1 прил. 1 р. 1) > 0, если количество физических лиц с превышающей предельной "
		+ "величиной базы за 1 месяц (гр. 3 ст. 021 подр. 1.1 прил. 1 р. 1) > 0, по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствует база в размере превышающем предельную величину для страховых взносов на ОПС, "
		+ "за 1-й последний месяц при наличии ф.л., с выплат, превышающих предельную величину, которым начислены СВ на "
		+ "ОПС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст51Гр03 > 0, когда Пд11Пр1Ст21Гр03 > 0'.
	
	Пд11Пр1Ст51Гр03 = ПоказательПоСтроке("Пд11Пр1Ст51Гр03");
	Пд11Пр1Ст21Гр03 = ПоказательПоСтроке("Пд11Пр1Ст21Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст51Гр03.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст21Гр03.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст21Гр03.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_73(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.73)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, превышающая предельную величину базы за 2 месяц "
		+ "(гр. 4 ст. 051 подр. 1.1 прил. 1 р. 1) > 0, если количество физических лиц с превышающей предельной "
		+ "величиной базы за 2 месяц (гр. 4 ст. 021 подр. 1.1 прил. 1 р. 1) > 0, по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствует база в размере превышающем предельную величину для страховых взносов на ОПС, "
		+ "за 2-й последний месяц при наличии физических лиц, с выплат, превышающих предельную величину, которым "
		+ "начислены страховые взносы на ОПС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст51Гр04 > 0, когда Пд11Пр1Ст21Гр04 > 0'.
	
	Пд11Пр1Ст51Гр04 = ПоказательПоСтроке("Пд11Пр1Ст51Гр04");
	Пд11Пр1Ст21Гр04 = ПоказательПоСтроке("Пд11Пр1Ст21Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст51Гр04.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст21Гр04.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст21Гр04.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_74(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.74)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, превышающая предельную величину базы за 3 месяц "
		+ "(гр. 5 ст. 051 подр. 1.1 прил. 1 р. 1) > 0, если Количество физических лиц с превышающей предельной "
		+ "величиной базы за 3 месяц (гр. 5 ст. 021 подр. 1.1 прил. 1 р. 1) > 0, по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Отсутствует база в размере превышающем предельную величину для страховых взносов на ОПС, "
		+ "за 3-й последний месяц при наличии физических лиц, с выплат, превышающих предельную величину, которым "
		+ "начислены страховые взносы на ОПС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст51Гр05 > 0, когда Пд11Пр1Ст21Гр05 > 0'.
	
	Пд11Пр1Ст51Гр05 = ПоказательПоСтроке("Пд11Пр1Ст51Гр05");
	Пд11Пр1Ст21Гр05 = ПоказательПоСтроке("Пд11Пр1Ст21Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст21Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст21Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст51Гр05.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд11Пр1Ст21Гр05.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд11Пр1Ст21Гр05.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_75(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.75)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, всего (гр. 1 ст. 050 подр. 1.1 прил. 1 р. 1) "
		+ "должна быть больше или равна базе для исчисления страховых взносов, превышающей предельную величину базы, "
		+ "всего (гр. 1 ст. 051 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за отчетный период меньше, превыш.пред.величину по "
		+ "страховым взносам на ОПС, за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр01 >= Пд11Пр1Ст51Гр01'.
	
	Пд11Пр1Ст50Гр01 = ПоказательПоСтроке("Пд11Пр1Ст50Гр01");
	Пд11Пр1Ст51Гр01 = ПоказательПоСтроке("Пд11Пр1Ст51Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр01.Значение, Пд11Пр1Ст51Гр01.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_76(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.76)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за последние три месяца (гр. 2 ст. 050 подр. 1.1 "
		+ "прил. 1 р. 1) должна быть больше базы для исчисления страховых взносов, превышающей предельную величину базы "
		+ "за последние три месяца (гр. 2 ст. 051 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа (ст. 001 "
		+ "прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для СВ на ОПС за 3 последних месяца не больше базы, превыш.пред.величину по СВ на "
		+ "ОПС, за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр02 > Пд11Пр1Ст51Гр02'.
	
	Пд11Пр1Ст50Гр02 = ПоказательПоСтроке("Пд11Пр1Ст50Гр02");
	Пд11Пр1Ст51Гр02 = ПоказательПоСтроке("Пд11Пр1Ст51Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр02.Значение, Пд11Пр1Ст51Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть > КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_77(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.77)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 1 месяц (гр. 3 ст. 050 подр. 1.1 прил. 1 р. 1) "
		+ "должна быть больше базы для исчисления страховых взносов, превышающей предельную величину базы за 1 месяц "
		+ "(гр. 3 ст. 051 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за 1-й последний месяц не больше базы, "
		+ "превыш.пред.величину по страховым взносам на ОПС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр03 > Пд11Пр1Ст51Гр03'.
	
	Пд11Пр1Ст50Гр03 = ПоказательПоСтроке("Пд11Пр1Ст50Гр03");
	Пд11Пр1Ст51Гр03 = ПоказательПоСтроке("Пд11Пр1Ст51Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр03.Значение, Пд11Пр1Ст51Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть > КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_78(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.78)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 2 месяц (гр. 4 ст. 050 подр. 1.1 прил. 1 р. 1) "
		+ "должна быть больше базы для исчисления страховых взносов, превышающей предельную величину базы за 2 месяц "
		+ "(гр. 4 ст. 051 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за 2-й последний месяц не больше базы, превышающей "
		+ "предельную величину по страховым взносам на ОПС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр04 > Пд11Пр1Ст51Гр04'.
	
	Пд11Пр1Ст50Гр04 = ПоказательПоСтроке("Пд11Пр1Ст50Гр04");
	Пд11Пр1Ст51Гр04 = ПоказательПоСтроке("Пд11Пр1Ст51Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр04.Значение, Пд11Пр1Ст51Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть > КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_79(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.79)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 3 месяц (гр. 5 ст. 050 подр. 1.1 прил. 1 р. 1) "
		+ "должна быть больше базы для исчисления страховых взносов, превышающей предельную величину базы за 3 месяц "
		+ "(гр. 5 ст. 051 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за 3-й последний месяц не больше базы, превышающей "
		+ "предельную величину по страховым взносам на ОПС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр05 > Пд11Пр1Ст51Гр05'.
	
	Пд11Пр1Ст50Гр05 = ПоказательПоСтроке("Пд11Пр1Ст50Гр05");
	Пд11Пр1Ст51Гр05 = ПоказательПоСтроке("Пд11Пр1Ст51Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр05.Значение, Пд11Пр1Ст51Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть > КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_80(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.80)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, всего (гр. 1 ст. 050 подр. 1.1 прил. 1 р. 1 "
		+ "отчетного периода) = База для исчисления страховых взносов, всего (гр. 1 ст. 050 подр. 1.1 прил. 1 р. 1 "
		+ "предыдущего отчетного периода) + База для исчисления страховых взносов за последние три месяца (гр. 2 ст. "
		+ "050 подр. 1.1 прил. 1 р. 1 отчетного периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 "
		+ "р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за отчетный период ≠ сумме баз для страховых взносов на "
		+ "ОПС за предыдущий отчетный период и за последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр01 = Пд11Пр1Ст50Гр01ПРП + Пд11Пр1Ст50Гр02'.
	
	Пд11Пр1Ст50Гр01 = ПоказательПоСтроке("Пд11Пр1Ст50Гр01");
	Пд11Пр1Ст50Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст50Гр01ПРП");
	Пд11Пр1Ст50Гр02 = ПоказательПоСтроке("Пд11Пр1Ст50Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст50Гр01ПРП = 0;
		СуммаПд11Пр1Ст50Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст50Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст50Гр01ПРП = СуммаПд11Пр1Ст50Гр01ПРП + Пд11Пр1Ст50Гр01ПРП.Значение;
					СуммаПд11Пр1Ст50Гр01ПРПСтр = СуммаПд11Пр1Ст50Гр01ПРПСтр + Пд11Пр1Ст50Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр01.Значение, СуммаПд11Пр1Ст50Гр01ПРП + Пд11Пр1Ст50Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст50Гр01ПРПСтр) + " + " + Пд11Пр1Ст50Гр02.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_81(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.81)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за последние три месяца (гр. 2 ст. 050 подр. 1.1 "
		+ "прил. 1 р. 1) = База для исчисления страховых взносов за 1 месяц (гр. 3 ст. 050 подр. 1.1 прил. 1 р. 1) + "
		+ "База для исчисления страховых взносов за 2 месяц (гр. 4 ст. 050 подр. 1.1 прил. 1 р. 1) + База для "
		+ "исчисления страховых взносов за 3 месяц (гр. 5 ст. 050 подр. 1.1 прил. 1 р. 1) по каждому значению Кода "
		+ "тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОПС за 3 последних месяца ≠ сумме баз для страховых взносов "
		+ "на ОПС за каждый из 3-х последних месяцев отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр02 = Пд11Пр1Ст50Гр03 + Пд11Пр1Ст50Гр04 + Пд11Пр1Ст50Гр05'.
	
	Пд11Пр1Ст50Гр02 = ПоказательПоСтроке("Пд11Пр1Ст50Гр02");
	Пд11Пр1Ст50Гр03 = ПоказательПоСтроке("Пд11Пр1Ст50Гр03");
	Пд11Пр1Ст50Гр04 = ПоказательПоСтроке("Пд11Пр1Ст50Гр04");
	Пд11Пр1Ст50Гр05 = ПоказательПоСтроке("Пд11Пр1Ст50Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст50Гр02.Значение, Пд11Пр1Ст50Гр03.Значение + Пд11Пр1Ст50Гр04.Значение + Пд11Пр1Ст50Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст50Гр03.ЗначениеСтр + " + " + Пд11Пр1Ст50Гр04.ЗначениеСтр + " + "
			+ Пд11Пр1Ст50Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_82(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.82)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов, всего (гр. 1 ст. 060 подр. 1.1 прил. 1 р. 1) = Исчислено "
		+ "страховых взносов с базы, не превышающей предельную величину базы, всего (гр. 1 ст. 061 подр. 1.1 прил. 1 р. "
		+ "1) + Исчислено страховых взносов с базы, превышающей предельную величину базы, всего (гр. 1 ст. 062 подр. "
		+ "1.1 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС за отчетный период ≠ сумме страховых взносов на ОПС с базы не "
		+ "превышающей предельную величину и страховые взносы на ОПС с базы превышающей предельную величину за отчетный "
		+ "период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст60Гр01 = Пд11Пр1Ст61Гр01 + Пд11Пр1Ст62Гр01'.
	
	Пд11Пр1Ст60Гр01 = ПоказательПоСтроке("Пд11Пр1Ст60Гр01");
	Пд11Пр1Ст61Гр01 = ПоказательПоСтроке("Пд11Пр1Ст61Гр01");
	Пд11Пр1Ст62Гр01 = ПоказательПоСтроке("Пд11Пр1Ст62Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст60Гр01.Значение, Пд11Пр1Ст61Гр01.Значение + Пд11Пр1Ст62Гр01.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст61Гр01.ЗначениеСтр + " + " + Пд11Пр1Ст62Гр01.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_83(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.83)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов за последние три месяца (гр. 2 ст. 060 подр. 1.1 прил. 1 р. "
		+ "1) = Исчислено страховых взносов с базы, не превышающей предельную величину базы за последние три месяца "
		+ "(гр. 2 ст. 061 подр. 1.1 прил. 1 р. 1) + Исчислено страховых взносов с базы, превышающей предельную величину "
		+ "базы за последние три месяца (гр. 2 ст. 062 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС за 3 последних месяца ≠ сумме страховые взносы на ОПС с базы не "
		+ "превышающей предельную величину и страховые взнос на ОПС с базы превышающей предельную величину за 3 "
		+ "последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст60Гр02 = Пд11Пр1Ст61Гр02 + Пд11Пр1Ст62Гр02'.
	
	Пд11Пр1Ст60Гр02 = ПоказательПоСтроке("Пд11Пр1Ст60Гр02");
	Пд11Пр1Ст61Гр02 = ПоказательПоСтроке("Пд11Пр1Ст61Гр02");
	Пд11Пр1Ст62Гр02 = ПоказательПоСтроке("Пд11Пр1Ст62Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст60Гр02.Значение, Пд11Пр1Ст61Гр02.Значение + Пд11Пр1Ст62Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст61Гр02.ЗначениеСтр + " + " + Пд11Пр1Ст62Гр02.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_84(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.84)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов за 1 месяц (гр. 3 ст. 060 подр. 1.1 прил. 1 р. 1) = Исчислено "
		+ "страховых взносов с базы, не превышающей предельную величину базы за 1 месяц (гр. 3 ст. 061 подр. 1.1 прил. "
		+ "1 р. 1) + Исчислено страховых взносов с базы, превышающей предельную величину базы за 1 месяц (гр. 3 ст. 062 "
		+ "подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС за 1-й последний месяц ≠ сумме страховых взносов на ОПС с базы не "
		+ "превышающей предельную величину и страховые взносы на ОПС с базы превышающей предельную величину за 1-й "
		+ "последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст60Гр03 = Пд11Пр1Ст61Гр03 + Пд11Пр1Ст62Гр03'.
	
	Пд11Пр1Ст60Гр03 = ПоказательПоСтроке("Пд11Пр1Ст60Гр03");
	Пд11Пр1Ст61Гр03 = ПоказательПоСтроке("Пд11Пр1Ст61Гр03");
	Пд11Пр1Ст62Гр03 = ПоказательПоСтроке("Пд11Пр1Ст62Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст60Гр03.Значение, Пд11Пр1Ст61Гр03.Значение + Пд11Пр1Ст62Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст61Гр03.ЗначениеСтр + " + " + Пд11Пр1Ст62Гр03.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_85(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.85)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов за 2 месяц (гр. 4 ст. 060 подр. 1.1 прил. 1 р. 1) = Исчислено "
		+ "страховых взносов с базы, не превышающей предельную величину базы за 2 месяц (гр. 4 ст. 061 подр. 1.1 прил. "
		+ "1 р. 1) + Исчислено страховых взносов с базы, превышающей предельную величину базы за 2 месяц (гр. 4 ст. 062 "
		+ "подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС за 2-й последний месяц ≠ сумме страховых взносов на ОПС с базы не "
		+ "превышающей предельную величину и страховые взносы на ОПС с базы превышающей предельную величину за 2-й "
		+ "последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст60Гр04 = Пд11Пр1Ст61Гр04 + Пд11Пр1Ст62Гр04'.
	
	Пд11Пр1Ст60Гр04 = ПоказательПоСтроке("Пд11Пр1Ст60Гр04");
	Пд11Пр1Ст61Гр04 = ПоказательПоСтроке("Пд11Пр1Ст61Гр04");
	Пд11Пр1Ст62Гр04 = ПоказательПоСтроке("Пд11Пр1Ст62Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст60Гр04.Значение, Пд11Пр1Ст61Гр04.Значение + Пд11Пр1Ст62Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст61Гр04.ЗначениеСтр + " + " + Пд11Пр1Ст62Гр04.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_86(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.86)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов за 3 месяц (гр. 5 ст. 060 подр. 1.1 прил. 1 р. 1) = Исчислено "
		+ "страховых взносов с базы, не превышающей предельную величину базы за 3 месяц (гр. 5 ст. 061 подр. 1.1 прил. "
		+ "1 р. 1) + Исчислено страховых взносов с базы, превышающей предельную величину базы за 3 месяц (гр. 5 ст. 062 "
		+ "подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС за 3-й последний месяц ≠ сумме страховых взносов на ОПС с базы не "
		+ "превышающей предельную величину и страховые взносы на ОПС с базы превышающей предельную величину за 3-й "
		+ "последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст60Гр05 = Пд11Пр1Ст61Гр05 + Пд11Пр1Ст62Гр05'.
	
	Пд11Пр1Ст60Гр05 = ПоказательПоСтроке("Пд11Пр1Ст60Гр05");
	Пд11Пр1Ст61Гр05 = ПоказательПоСтроке("Пд11Пр1Ст61Гр05");
	Пд11Пр1Ст62Гр05 = ПоказательПоСтроке("Пд11Пр1Ст62Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст60Гр05.Значение, Пд11Пр1Ст61Гр05.Значение + Пд11Пр1Ст62Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст61Гр05.ЗначениеСтр + " + " + Пд11Пр1Ст62Гр05.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_87(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.87)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов, всего (гр. 1 ст. 060 подр. 1.1 прил. 1 р. 1 отчетного "
		+ "периода) = Исчислено страховых взносов, всего (гр. 1 ст. 060 подр. 1.1 прил. 1 р. 1 предыдущего отчетного "
		+ "периода) + Исчислено страховых взносов за последние три месяца (гр. 2 ст. 060 подр. 1.1 прил. 1 р. 1 "
		+ "отчетного периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС за отчетный период ≠ сумме страховых взносов на ОПС за предыдущий "
		+ "отчетный период и за последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст60Гр01 = Пд11Пр1Ст60Гр01ПРП + Пд11Пр1Ст60Гр02'.
	
	Пд11Пр1Ст60Гр01 = ПоказательПоСтроке("Пд11Пр1Ст60Гр01");
	Пд11Пр1Ст60Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст60Гр01ПРП");
	Пд11Пр1Ст60Гр02 = ПоказательПоСтроке("Пд11Пр1Ст60Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст60Гр01ПРП = 0;
		СуммаПд11Пр1Ст60Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст60Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст60Гр01ПРП = СуммаПд11Пр1Ст60Гр01ПРП + Пд11Пр1Ст60Гр01ПРП.Значение;
					СуммаПд11Пр1Ст60Гр01ПРПСтр = СуммаПд11Пр1Ст60Гр01ПРПСтр + Пд11Пр1Ст60Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст60Гр01.Значение, СуммаПд11Пр1Ст60Гр01ПРП + Пд11Пр1Ст60Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст60Гр01ПРПСтр) + " + " + Пд11Пр1Ст60Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_88(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.88)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов за последние три месяца (гр. 2 ст. 060 подр. 1.1 прил. 1 р. "
		+ "1) = Исчислено страховых взносов за 1 месяц (гр. 3 ст. 060 подр. 1.1 прил. 1 р. 1) + Исчислено страховых "
		+ "взносов за 2 месяц (гр. 4 ст. 060 подр. 1.1 прил. 1 р. 1) + Исчислено страховых взносов за 3 месяц (гр. 5 "
		+ "ст. 060 подр. 1.1 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС за три последних месяца отчетного периода ≠ сумме страховых "
		+ "взносов на ОПС за каждый из трех последних месяцев отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст60Гр02 = Пд11Пр1Ст60Гр03 + Пд11Пр1Ст60Гр04 + Пд11Пр1Ст60Гр05'.
	
	Пд11Пр1Ст60Гр02 = ПоказательПоСтроке("Пд11Пр1Ст60Гр02");
	Пд11Пр1Ст60Гр03 = ПоказательПоСтроке("Пд11Пр1Ст60Гр03");
	Пд11Пр1Ст60Гр04 = ПоказательПоСтроке("Пд11Пр1Ст60Гр04");
	Пд11Пр1Ст60Гр05 = ПоказательПоСтроке("Пд11Пр1Ст60Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст60Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст60Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст60Гр02.Значение, Пд11Пр1Ст60Гр03.Значение + Пд11Пр1Ст60Гр04.Значение + Пд11Пр1Ст60Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст60Гр03.ЗначениеСтр + " + " + Пд11Пр1Ст60Гр04.ЗначениеСтр + " + "
			+ Пд11Пр1Ст60Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_89(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.89)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов с базы, не превышающей предельную величину базы, всего (гр. 1 "
		+ "ст. 061 подр. 1.1 прил. 1 р. 1 отчетного периода) = Исчислено страховых взносов с базы, не превышающей "
		+ "предельную величину базы, всего (гр. 1 ст. 061 подр. 1.1 прил. 1 р. 1 предыдущего отчетного периода) + "
		+ "Исчислено страховых взносов с базы, не превышающей предельную величину базы за последние три месяца (гр. 2 "
		+ "ст. 061 подр. 1.1 прил. 1 р. 1 отчетного периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. "
		+ "1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС с базы, не превышающей предельную величину, за отчетный период ≠ "
		+ "сумме страховых взносов на ОПС с базы, не превышающей предельную величину, за предыдущий отчетный период и "
		+ "за последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст61Гр01 = Пд11Пр1Ст61Гр01ПРП + Пд11Пр1Ст61Гр02'.
	
	Пд11Пр1Ст61Гр01 = ПоказательПоСтроке("Пд11Пр1Ст61Гр01");
	Пд11Пр1Ст61Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст61Гр01ПРП");
	Пд11Пр1Ст61Гр02 = ПоказательПоСтроке("Пд11Пр1Ст61Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст61Гр01ПРП = 0;
		СуммаПд11Пр1Ст61Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст61Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст61Гр01ПРП = СуммаПд11Пр1Ст61Гр01ПРП + Пд11Пр1Ст61Гр01ПРП.Значение;
					СуммаПд11Пр1Ст61Гр01ПРПСтр = СуммаПд11Пр1Ст61Гр01ПРПСтр + Пд11Пр1Ст61Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст61Гр01.Значение, СуммаПд11Пр1Ст61Гр01ПРП + Пд11Пр1Ст61Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст61Гр01ПРПСтр) + " + " + Пд11Пр1Ст61Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_90(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.90)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов с базы, не превышающей предельную величину базы за последние "
		+ "три месяца (гр. 2 ст. 061 подр. 1.1 прил. 1 р. 1) = Исчислено страховых взносов с базы, не превышающей "
		+ "предельную величину базы за 1 месяц (гр. 3 ст. 061 подр. 1.1 прил. 1 р. 1) + Исчислено страховых взносов с "
		+ "базы, не превышающей предельную величину базы за 2 месяц (гр. 4 ст. 061 подр. 1.1 прил. 1 р. 1) + Исчислено "
		+ "страховых взносов с базы, не превышающей предельную величину базы за 3 месяц (гр. 5 ст. 061 подр. 1.1 прил. "
		+ "1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС с базы, не превышающей предельную величину, за последние три "
		+ "месяца отчетного периода ≠ сумме страховых взносов на ОПС с базы, не превышающей предельную величину, за "
		+ "каждый из трех последних месяцев отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст61Гр02 = Пд11Пр1Ст61Гр03 + Пд11Пр1Ст61Гр04 + Пд11Пр1Ст61Гр05'.
	
	Пд11Пр1Ст61Гр02 = ПоказательПоСтроке("Пд11Пр1Ст61Гр02");
	Пд11Пр1Ст61Гр03 = ПоказательПоСтроке("Пд11Пр1Ст61Гр03");
	Пд11Пр1Ст61Гр04 = ПоказательПоСтроке("Пд11Пр1Ст61Гр04");
	Пд11Пр1Ст61Гр05 = ПоказательПоСтроке("Пд11Пр1Ст61Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст61Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст61Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст61Гр02.Значение, Пд11Пр1Ст61Гр03.Значение + Пд11Пр1Ст61Гр04.Значение + Пд11Пр1Ст61Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст61Гр03.ЗначениеСтр + " + " + Пд11Пр1Ст61Гр04.ЗначениеСтр + " + "
			+ Пд11Пр1Ст61Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_91(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.91)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов с базы, превышающей предельную величину базы, всего (гр. 1 "
		+ "ст. 062 подр. 1.1 прил. 1 р. 1 отчетного перида) = Исчислено страховых взносов с базы, превышающей "
		+ "предельную величину базы, всего (гр. 1 ст. 062 подр. 1.1 прил. 1 р. 1 предыдущего отчетного периода) + "
		+ "Исчислено страховых взносов с базы, превышающей предельную величину базы за послежние три месяца (гр. 2 ст. "
		+ "062 подр. 1.1 прил. 1 р. 1 отчетного периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 "
		+ "р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС с базы, превышающей предельную величину, за отчетный период ≠ "
		+ "сумме страховых взносов на ОПС с базы, превышающей предельную величину, за предыдущий отчетный период и за "
		+ "последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст62Гр01 = Пд11Пр1Ст62Гр01ПРП + Пд11Пр1Ст62Гр02'.
	
	Пд11Пр1Ст62Гр01 = ПоказательПоСтроке("Пд11Пр1Ст62Гр01");
	Пд11Пр1Ст62Гр01ПРП = ПоказательПоСтроке("Пд11Пр1Ст62Гр01ПРП");
	Пд11Пр1Ст62Гр02 = ПоказательПоСтроке("Пд11Пр1Ст62Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд11Пр1Ст62Гр01ПРП = 0;
		СуммаПд11Пр1Ст62Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд11Пр1Ст62Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд11Пр1Ст62Гр01ПРП = СуммаПд11Пр1Ст62Гр01ПРП + Пд11Пр1Ст62Гр01ПРП.Значение;
					СуммаПд11Пр1Ст62Гр01ПРПСтр = СуммаПд11Пр1Ст62Гр01ПРПСтр + Пд11Пр1Ст62Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст62Гр01.Значение, СуммаПд11Пр1Ст62Гр01ПРП + Пд11Пр1Ст62Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст62Гр01ПРПСтр) + " + " + Пд11Пр1Ст62Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_92(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.1 прил. 1 к Разделу 1 (КС 1.92)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов с базы, превышающей предельную величину базы за последние три "
		+ "месяца (гр. 2 ст. 062 подр. 1.1 прил. 1 р. 1) = Исчислено страховых взносов с базы, превышающей предельную "
		+ "величину базы за 1 месяц (гр. 3 ст. 062 подр. 1.1 прил. 1 р. 1) + Исчислено страховых взносов с базы, "
		+ "превышающей предельную величину базы за 2 месяц (гр. 4 ст. 062 подр. 1.1 прил. 1 р. 1) + Исчислено страховых "
		+ "взносов с базы, превышающей предельную величину базы за 3 месяц (гр. 5 ст. 062 подр. 1.1 прил. 1 р. 1) по "
		+ "каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='СВ на ОПС с базы, превыш.пред.величину, за последние три месяца отчетного периода ≠ сумме "
		+ "СВ на ОПС с базы, превыш.пред.величину, за каждый из трех последних месяцев отчетного периода по каждому "
		+ "виду тарифа'");
	
	// Формула КС кратко: 'Пд11Пр1Ст62Гр02 = Пд11Пр1Ст62Гр03 + Пд11Пр1Ст62Гр04 + Пд11Пр1Ст62Гр05'.
	
	Пд11Пр1Ст62Гр02 = ПоказательПоСтроке("Пд11Пр1Ст62Гр02");
	Пд11Пр1Ст62Гр03 = ПоказательПоСтроке("Пд11Пр1Ст62Гр03");
	Пд11Пр1Ст62Гр04 = ПоказательПоСтроке("Пд11Пр1Ст62Гр04");
	Пд11Пр1Ст62Гр05 = ПоказательПоСтроке("Пд11Пр1Ст62Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст62Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст62Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд11Пр1Ст62Гр02.Значение, Пд11Пр1Ст62Гр03.Значение + Пд11Пр1Ст62Гр04.Значение + Пд11Пр1Ст62Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд11Пр1Ст62Гр03.ЗначениеСтр + " + " + Пд11Пр1Ст62Гр04.ЗначениеСтр + " + "
			+ Пд11Пр1Ст62Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_93(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.93)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц, всего (гр. 1 ст. 010 подр. 1.2 прил. 1 р. 1) должно быть "
		+ "больше или равно количеству физических лиц, с выплат которым начислены страховые взносы, всего (гр. 1 ст. "
		+ "020 подр. 1.2 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за отчетный период меньше "
		+ "количества физических лиц, с выплат которым начислены страховые взносы на ОМС, за отчетный период в разрезе "
		+ "каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр01 >= Пд12Пр1Ст20Гр01'.
	
	Пд12Пр1Ст10Гр01 = ПоказательПоСтроке("Пд12Пр1Ст10Гр01");
	Пд12Пр1Ст20Гр01 = ПоказательПоСтроке("Пд12Пр1Ст20Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр01.Значение, Пд12Пр1Ст20Гр01.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_94(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.94)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.2 прил. 1 р. "
		+ "1) должно быть больше или равно количеству физических лиц, с выплат которым начислены страховые взносы за "
		+ "последние три месяца (гр. 2 ст. 020 подр. 1.2 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. "
		+ "001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за 3 посл. месяца меньше "
		+ "количества физических лиц, с выплат которым начислены страховые взносы на ОМС, за 3 последние месяца в "
		+ "разрезе каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр02 >= Пд12Пр1Ст20Гр02'.
	
	Пд12Пр1Ст10Гр02 = ПоказательПоСтроке("Пд12Пр1Ст10Гр02");
	Пд12Пр1Ст20Гр02 = ПоказательПоСтроке("Пд12Пр1Ст20Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр02.Значение, Пд12Пр1Ст20Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_95(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.95)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за 1 месяц (гр. 3 ст. 010 подр. 1.2 прил. 1 р. 1) должно "
		+ "быть больше или равно количеству физических лиц, с выплат которым начислены страховые взносы за 1 месяц (гр. "
		+ "3 ст. 020 подр. 1.2 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за 1-й месяц меньше количества "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОМС, за 1-й месяц в разрезе каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр03 >= Пд12Пр1Ст20Гр03'.
	
	Пд12Пр1Ст10Гр03 = ПоказательПоСтроке("Пд12Пр1Ст10Гр03");
	Пд12Пр1Ст20Гр03 = ПоказательПоСтроке("Пд12Пр1Ст20Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр03.Значение, Пд12Пр1Ст20Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_96(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.96)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за 2 месяц (гр. 4 ст. 010 подр. 1.2 прил. 1 р. 1) должно "
		+ "быть больше или равно количеству физических лиц, с выплат которым начислены страховые взносы за 2 месяц (гр. "
		+ "4 ст. 020 подр. 1.2 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за 2-й месяц меньше количества "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОМС, за 2-й месяц в разрезе каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр04 >= Пд12Пр1Ст20Гр04'.
	
	Пд12Пр1Ст10Гр04 = ПоказательПоСтроке("Пд12Пр1Ст10Гр04");
	Пд12Пр1Ст20Гр04 = ПоказательПоСтроке("Пд12Пр1Ст20Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр04.Значение, Пд12Пр1Ст20Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_97(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.97)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за 3 месяц (гр. 5 ст. 010 подр. 1.2 прил. 1 р. 1) должно "
		+ "быть больше или равно количеству физических лиц, с выплат которым начислены страховые взносы за 3 месяц (гр. "
		+ "5 ст. 020 подр. 1.2 прил. 1 р. 1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за 3-й месяц меньше количества "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОМС, за 3-й месяц в разрезе каждого вида тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр05 >= Пд12Пр1Ст20Гр05'.
	
	Пд12Пр1Ст10Гр05 = ПоказательПоСтроке("Пд12Пр1Ст10Гр05");
	Пд12Пр1Ст20Гр05 = ПоказательПоСтроке("Пд12Пр1Ст20Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр05.Значение, Пд12Пр1Ст20Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_98(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.98)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц, всего (гр. 1 ст. 010 подр. 1.2 прил. 1 р. 1 отчетного "
		+ "периода) должно быть больше или равно количеству застрахованных лиц, всего (гр. 1 ст. 010 подр. 1.2 прил. 1 "
		+ "р. 1 предыдущего отчетного периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за отчётный период меньше "
		+ "количества застрахованных лиц по страховым взносам на ОМС за предыдущий отчётный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр01 >= Пд12Пр1Ст10Гр01ПРП'.
	
	Пд12Пр1Ст10Гр01 = ПоказательПоСтроке("Пд12Пр1Ст10Гр01");
	Пд12Пр1Ст10Гр01ПРП = ПоказательПоСтроке("Пд12Пр1Ст10Гр01ПРП");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд12Пр1Ст10Гр01ПРП = 0;
		СуммаПд12Пр1Ст10Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд12Пр1Ст10Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд12Пр1Ст10Гр01ПРП = СуммаПд12Пр1Ст10Гр01ПРП + Пд12Пр1Ст10Гр01ПРП.Значение;
					СуммаПд12Пр1Ст10Гр01ПРПСтр = СуммаПд12Пр1Ст10Гр01ПРПСтр + Пд12Пр1Ст10Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр01.Значение, СуммаПд12Пр1Ст10Гр01ПРП);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + РасшифровкаВСтр(СуммаПд12Пр1Ст10Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_99(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.99)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц, всего (гр. 1 ст. 010 подр. 1.2 прил. 1 р. 1) должно быть "
		+ "больше или равно количеству застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.2 прил. 1 р. "
		+ "1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за отчётный период меньше "
		+ "количества застрахованных лиц по страховым взносам на ОМС за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр01 >= Пд12Пр1Ст10Гр02'.
	
	Пд12Пр1Ст10Гр01 = ПоказательПоСтроке("Пд12Пр1Ст10Гр01");
	Пд12Пр1Ст10Гр02 = ПоказательПоСтроке("Пд12Пр1Ст10Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр01.Значение, Пд12Пр1Ст10Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_100(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.100)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.2 прил. 1 р. "
		+ "1) должно быть больше или равно количеству застрахованных лиц за 1 месяц (гр. 3 ст. 010 подр. 1.2 прил. 1 р. "
		+ "1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за 3 последних месяца меньше "
		+ "количества застрахованных лиц по страховым взносам на ОМС за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр02 >= Пд12Пр1Ст10Гр03'.
	
	Пд12Пр1Ст10Гр02 = ПоказательПоСтроке("Пд12Пр1Ст10Гр02");
	Пд12Пр1Ст10Гр03 = ПоказательПоСтроке("Пд12Пр1Ст10Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр02.Значение, Пд12Пр1Ст10Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_101(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.101)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.2 прил. 1 р. "
		+ "1) должно быть больше или равно количеству застрахованных лиц за 2 месяц (гр. 4 ст. 010 подр. 1.2 прил. 1 р. "
		+ "1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за 3 последних месяца меньше "
		+ "количества застрахованных лиц по страховым взносам на ОМС за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр02 >= Пд12Пр1Ст10Гр04'.
	
	Пд12Пр1Ст10Гр02 = ПоказательПоСтроке("Пд12Пр1Ст10Гр02");
	Пд12Пр1Ст10Гр04 = ПоказательПоСтроке("Пд12Пр1Ст10Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр02.Значение, Пд12Пр1Ст10Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_102(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.102)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр. 2 ст. 010 подр. 1.2 прил. 1 р. "
		+ "1) должно быть больше или равно количеству застрахованных лиц за 3 месяц (гр. 5 ст. 010 подр. 1.2 прил. 1 р. "
		+ "1) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц по страховым взносам на ОМС за 3 последних месяца меньше "
		+ "количества застрахованных лиц по страховым взносам на ОМС за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр02 >= Пд12Пр1Ст10Гр05'.
	
	Пд12Пр1Ст10Гр02 = ПоказательПоСтроке("Пд12Пр1Ст10Гр02");
	Пд12Пр1Ст10Гр05 = ПоказательПоСтроке("Пд12Пр1Ст10Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст10Гр02.Значение, Пд12Пр1Ст10Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_103(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.103)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат которым начислены страховые взносы, всего (гр. 1 ст. "
		+ "020 подр. 1.2 прил. 1 р. 1 отчетного периода) должно быть больше или равно количеству физических лиц, с "
		+ "выплат которым начислены страховые взносы, всего (гр. 1 ст. 020 подр. 1.2 прил. 1 р. 1 предыдущего отчетного "
		+ "периода) по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Количество физических лиц, которым начислены страховые взносы на ОМС за отчетный период "
		+ "меньше количества физических лиц., которым начислены страховые взносы на ОМС за предыдущий отчетный период "
		+ "по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст20Гр01 >= Пд12Пр1Ст20Гр01ПРП'.
	
	Пд12Пр1Ст20Гр01 = ПоказательПоСтроке("Пд12Пр1Ст20Гр01");
	Пд12Пр1Ст20Гр01ПРП = ПоказательПоСтроке("Пд12Пр1Ст20Гр01ПРП");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд12Пр1Ст20Гр01ПРП = 0;
		СуммаПд12Пр1Ст20Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд12Пр1Ст20Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд12Пр1Ст20Гр01ПРП = СуммаПд12Пр1Ст20Гр01ПРП + Пд12Пр1Ст20Гр01ПРП.Значение;
					СуммаПд12Пр1Ст20Гр01ПРПСтр = СуммаПд12Пр1Ст20Гр01ПРПСтр + Пд12Пр1Ст20Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		КС = ПоказателиКС(Пд12Пр1Ст20Гр01.Значение, СуммаПд12Пр1Ст20Гр01ПРП);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + РасшифровкаВСтр(СуммаПд12Пр1Ст20Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_104(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.104)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц (гр. 1 ст. 030 "
		+ "подр. 1.2 прил. 1 р. 1) > 0 по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1) если гр. 1 "
		+ "ст. 020 подр. 1.2 прил. 1 р. 1 СВ > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОМС за отчетный период при наличии физических "
		+ "лиц, с выплат которым начислены страховые взносы на ОМС, за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр01 > 0, когда Пд12Пр1Ст20Гр01 > 0'.
	
	Пд12Пр1Ст30Гр01 = ПоказательПоСтроке("Пд12Пр1Ст30Гр01");
	Пд12Пр1Ст20Гр01 = ПоказательПоСтроке("Пд12Пр1Ст20Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр01.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд12Пр1Ст20Гр01.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд12Пр1Ст20Гр01.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_105(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.105)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 030 подр. 1.2 прил. 1 р. 1) > 0 по каждому значению Кода тарифа плательщика (ст. 001 прил. "
		+ "1 р. 1) если гр. 2 ст. 020 подр. 1.2 прил. 1 р. 1 СВ > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОМС за 3 последних месяца при наличии "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОМС, за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр02 > 0, когда Пд12Пр1Ст20Гр02 > 0'.
	
	Пд12Пр1Ст30Гр02 = ПоказательПоСтроке("Пд12Пр1Ст30Гр02");
	Пд12Пр1Ст20Гр02 = ПоказательПоСтроке("Пд12Пр1Ст20Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр02.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд12Пр1Ст20Гр02.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд12Пр1Ст20Гр02.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_106(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.106)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 1 месяц (гр. 3 ст. 030 подр. 1.2 прил. 1 р. 1) > 0 "
		+ "по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1) если гр. 3 ст. 020 подр. 1.2 прил. 1 р. 1 "
		+ "> 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОМС за 1-й последний месяц при наличии "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОМС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр03 > 0, когда Пд12Пр1Ст20Гр03 > 0'.
	
	Пд12Пр1Ст30Гр03 = ПоказательПоСтроке("Пд12Пр1Ст30Гр03");
	Пд12Пр1Ст20Гр03 = ПоказательПоСтроке("Пд12Пр1Ст20Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр03.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд12Пр1Ст20Гр03.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд12Пр1Ст20Гр03.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_107(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.107)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 2 месяц (гр. 4 ст. 030 подр. 1.2 прил. 1 р. 1) > 0 "
		+ "по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1) если гр. 4 ст. 020 подр. 1.2 прил. 1 р. 1 "
		+ "> 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОМС за 2-й последний месяц при наличии "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОМС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр04 > 0, когда Пд12Пр1Ст20Гр04 > 0'.
	
	Пд12Пр1Ст30Гр04 = ПоказательПоСтроке("Пд12Пр1Ст30Гр04");
	Пд12Пр1Ст20Гр04 = ПоказательПоСтроке("Пд12Пр1Ст20Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр04.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд12Пр1Ст20Гр04.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд12Пр1Ст20Гр04.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_108(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.108)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 3 месяц (гр. 5 ст. 030 подр. 1.2 прил. 1 р. 1) > 0 "
		+ "по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1) если гр. 5 ст. 020 подр. 1.2 прил. 1 р. 1 "
		+ "> 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОМС за 3-й последний месяц при наличии "
		+ "физических лиц, с выплат которым начислены страховые взносы на ОМС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр05 > 0, когда Пд12Пр1Ст20Гр05 > 0'.
	
	Пд12Пр1Ст30Гр05 = ПоказательПоСтроке("Пд12Пр1Ст30Гр05");
	Пд12Пр1Ст20Гр05 = ПоказательПоСтроке("Пд12Пр1Ст20Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст20Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст20Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр05.Значение, 0);
		Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд12Пр1Ст20Гр05.ЗначениеСтр + " > 0";
		
		УсловиеВыполнено = Пд12Пр1Ст20Гр05.Значение > 0;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_109(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.109)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, всего (гр. 1 ст. 030 подр. 1.2 прил. 1 р. 1 отчетного "
		+ "периода) = гр. 1 ст. 030 подр. 1.2 прил. 1 р. 1 предыдущего отчетного периода + гр. 2 ст. 030 подр. 1.2 "
		+ "прил. 1 р. 1 отчетного периода по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОМС за отчетный период ≠ сумме выплат по страховым "
		+ "взносам на ОМС за предыдущий отчетный период и за последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр01 = Пд12Пр1Ст30Гр01ПРП + Пд12Пр1Ст30Гр02'.
	
	Пд12Пр1Ст30Гр01 = ПоказательПоСтроке("Пд12Пр1Ст30Гр01");
	Пд12Пр1Ст30Гр01ПРП = ПоказательПоСтроке("Пд12Пр1Ст30Гр01ПРП");
	Пд12Пр1Ст30Гр02 = ПоказательПоСтроке("Пд12Пр1Ст30Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд12Пр1Ст30Гр01ПРП = 0;
		СуммаПд12Пр1Ст30Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд12Пр1Ст30Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд12Пр1Ст30Гр01ПРП = СуммаПд12Пр1Ст30Гр01ПРП + Пд12Пр1Ст30Гр01ПРП.Значение;
					СуммаПд12Пр1Ст30Гр01ПРПСтр = СуммаПд12Пр1Ст30Гр01ПРПСтр + Пд12Пр1Ст30Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр01.Значение, СуммаПд12Пр1Ст30Гр01ПРП + Пд12Пр1Ст30Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд12Пр1Ст30Гр01ПРПСтр) + " + " + Пд12Пр1Ст30Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_110(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.110)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за последние три месяца (гр. 2 ст. 030 подр. 1.2 прил. "
		+ "1 р. 1) = гр. 3 ст. 030 подр. 1.2 прил. 1 р. 1 + гр. 4 ст. 030 подр. 1.2 прил. 1 р. 1 + гр. 5 ст. 030 подр. "
		+ "1.2 прил. 1 р. 1 по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОМС за 3 последних месяца ≠ сумме выплат по "
		+ "страховым взносам на ОМС за каждый из последних месяцев по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр02 = Пд12Пр1Ст30Гр03 + Пд12Пр1Ст30Гр04 + Пд12Пр1Ст30Гр05'.
	
	Пд12Пр1Ст30Гр02 = ПоказательПоСтроке("Пд12Пр1Ст30Гр02");
	Пд12Пр1Ст30Гр03 = ПоказательПоСтроке("Пд12Пр1Ст30Гр03");
	Пд12Пр1Ст30Гр04 = ПоказательПоСтроке("Пд12Пр1Ст30Гр04");
	Пд12Пр1Ст30Гр05 = ПоказательПоСтроке("Пд12Пр1Ст30Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр02.Значение, Пд12Пр1Ст30Гр03.Значение + Пд12Пр1Ст30Гр04.Значение + Пд12Пр1Ст30Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд12Пр1Ст30Гр03.ЗначениеСтр + " + " + Пд12Пр1Ст30Гр04.ЗначениеСтр + " + "
			+ Пд12Пр1Ст30Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_111(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.111)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, всего (гр. 1 ст. 030 подр. 1.2 прил. 1 р. 1) >= гр. 1 "
		+ "ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОМС за отчетный период меньше суммы выплат, не "
		+ "подлежащих обложению страховыми взносами на ОМС, за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр01 >= Пд12Пр1Ст40Гр01'.
	
	Пд12Пр1Ст30Гр01 = ПоказательПоСтроке("Пд12Пр1Ст30Гр01");
	Пд12Пр1Ст40Гр01 = ПоказательПоСтроке("Пд12Пр1Ст40Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр01.Значение, Пд12Пр1Ст40Гр01.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_112(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.112)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за последние три месяца (гр. 2 ст. 030 подр. 1.2 прил. "
		+ "1 р. 1) >= гр. 2 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 "
		+ "р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОМС за 3 последних месяца меньше суммы выплат, не "
		+ "подлежащих обложению страховыми взносами на ОМС, за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр02 >= Пд12Пр1Ст40Гр02'.
	
	Пд12Пр1Ст30Гр02 = ПоказательПоСтроке("Пд12Пр1Ст30Гр02");
	Пд12Пр1Ст40Гр02 = ПоказательПоСтроке("Пд12Пр1Ст40Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр02.Значение, Пд12Пр1Ст40Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_113(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.113)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 1 месяц (гр. 3 ст. 030 подр. 1.2 прил. 1 р. 1) >= "
		+ "гр. 3 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОМС за 1-й последний месяц меньше суммы выплат, не "
		+ "подлежих обложению страховыми взносами на ОМС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр03 >= Пд12Пр1Ст40Гр03'.
	
	Пд12Пр1Ст30Гр03 = ПоказательПоСтроке("Пд12Пр1Ст30Гр03");
	Пд12Пр1Ст40Гр03 = ПоказательПоСтроке("Пд12Пр1Ст40Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр03.Значение, Пд12Пр1Ст40Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_114(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.114)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 2 месяц (гр. 4 ст. 030 подр. 1.2 прил. 1 р. 1) >= "
		+ "гр. 4 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОМС за 2-й последний месяц меньше суммы выплат, не "
		+ "подлежих обложению страховыми взносами на ОМС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр04 >= Пд12Пр1Ст40Гр04'.
	
	Пд12Пр1Ст30Гр04 = ПоказательПоСтроке("Пд12Пр1Ст30Гр04");
	Пд12Пр1Ст40Гр04 = ПоказательПоСтроке("Пд12Пр1Ст40Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр04.Значение, Пд12Пр1Ст40Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_115(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.115)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений за 3 месяц (гр. 5 ст. 030 подр. 1.2 прил. 1 р. 1) >= "
		+ "гр. 5 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОМС за 3-й последний месяц меньше суммы выплат, не "
		+ "подлежих обложению страховыми взносами на ОМС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст30Гр05 >= Пд12Пр1Ст40Гр05'.
	
	Пд12Пр1Ст30Гр05 = ПоказательПоСтроке("Пд12Пр1Ст30Гр05");
	Пд12Пр1Ст40Гр05 = ПоказательПоСтроке("Пд12Пр1Ст40Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст30Гр05.Значение, Пд12Пр1Ст40Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_116(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.116)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами, всего (гр. 1 ст. 040 подр. 1.2 прил. "
		+ "1 р. 1 отчетного периода) = гр. 1 ст. 040 подр. 1.2 прил. 1 р. 1 предыдущего отчетого периода + гр. 2 ст. "
		+ "040 подр. 1.2 прил. 1 р. 1 СВ отчетного периода по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 "
		+ "р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлежащих обложению страховыми взносами на ОМС за отчетный период ≠ "
		+ "сумме выплат, не подлежащих обложению страховыми взносами на ОМС за предыдущий отчетный период и за "
		+ "последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст40Гр01 = Пд12Пр1Ст40Гр01ПРП + Пд12Пр1Ст40Гр02'.
	
	Пд12Пр1Ст40Гр01 = ПоказательПоСтроке("Пд12Пр1Ст40Гр01");
	Пд12Пр1Ст40Гр01ПРП = ПоказательПоСтроке("Пд12Пр1Ст40Гр01ПРП");
	Пд12Пр1Ст40Гр02 = ПоказательПоСтроке("Пд12Пр1Ст40Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд12Пр1Ст40Гр01ПРП = 0;
		СуммаПд12Пр1Ст40Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд12Пр1Ст40Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд12Пр1Ст40Гр01ПРП = СуммаПд12Пр1Ст40Гр01ПРП + Пд12Пр1Ст40Гр01ПРП.Значение;
					СуммаПд12Пр1Ст40Гр01ПРПСтр = СуммаПд12Пр1Ст40Гр01ПРПСтр + Пд12Пр1Ст40Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст40Гр01.Значение, СуммаПд12Пр1Ст40Гр01ПРП + Пд12Пр1Ст40Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд12Пр1Ст40Гр01ПРПСтр) + " + " + Пд12Пр1Ст40Гр02.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_117(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.117)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами за последние три месяца (гр. 2 ст. 040 "
		+ "подр. 1.2 прил. 1 р. 1) = гр. 3 ст. 040 подр. 1.2 прил. 1 р. 1 + гр. 4 ст. 040 подр. 1.2 прил. 1 р. 1 + гр. "
		+ "5 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлежащих обложению страховыми взносами на ОМС за последние три месяца "
		+ "отчетного периода ≠ сумме выплат, не подлежащих обложению страховыми взносами на ОМС за предыдущий отчетный "
		+ "период и за последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст40Гр02 = Пд12Пр1Ст40Гр03 + Пд12Пр1Ст40Гр04 + Пд12Пр1Ст40Гр05'.
	
	Пд12Пр1Ст40Гр02 = ПоказательПоСтроке("Пд12Пр1Ст40Гр02");
	Пд12Пр1Ст40Гр03 = ПоказательПоСтроке("Пд12Пр1Ст40Гр03");
	Пд12Пр1Ст40Гр04 = ПоказательПоСтроке("Пд12Пр1Ст40Гр04");
	Пд12Пр1Ст40Гр05 = ПоказательПоСтроке("Пд12Пр1Ст40Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст40Гр02.Значение, Пд12Пр1Ст40Гр03.Значение + Пд12Пр1Ст40Гр04.Значение + Пд12Пр1Ст40Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд12Пр1Ст40Гр03.ЗначениеСтр + " + " + Пд12Пр1Ст40Гр04.ЗначениеСтр + " + "
			+ Пд12Пр1Ст40Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_118(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.118)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, всего (гр. 1 ст. 050 подр. 1.2 прил. 1 р. 1) = гр. "
		+ "1 ст. 030 подр. 1.2 прил. 1 р. 1 - гр. 1 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОМС за отчетный период ≠ разнице всех выплат и выплат, не "
		+ "подлежих обложению страховыми взносами на ОМС, за отчетный период по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст50Гр01 = Пд12Пр1Ст30Гр01 - Пд12Пр1Ст40Гр01'.
	
	Пд12Пр1Ст50Гр01 = ПоказательПоСтроке("Пд12Пр1Ст50Гр01");
	Пд12Пр1Ст30Гр01 = ПоказательПоСтроке("Пд12Пр1Ст30Гр01");
	Пд12Пр1Ст40Гр01 = ПоказательПоСтроке("Пд12Пр1Ст40Гр01");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст50Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст50Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст50Гр01.Значение, Пд12Пр1Ст30Гр01.Значение - Пд12Пр1Ст40Гр01.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд12Пр1Ст30Гр01.ЗначениеСтр + " - " + Пд12Пр1Ст40Гр01.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_119(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.119)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за последние три месяца (гр. 2 ст. 050 подр. 1.2 "
		+ "прил. 1 р. 1) = гр. 2 ст. 030 подр. 1.2 прил. 1 р. 1 - гр. 2 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому "
		+ "значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОМС за 3 последних месяца ≠ разнице всех выплат и выплат, "
		+ "не подлежих обложению страховыми взносами на ОМС, за 3 последних месяца по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст50Гр02 = Пд12Пр1Ст30Гр02 - Пд12Пр1Ст40Гр02'.
	
	Пд12Пр1Ст50Гр02 = ПоказательПоСтроке("Пд12Пр1Ст50Гр02");
	Пд12Пр1Ст30Гр02 = ПоказательПоСтроке("Пд12Пр1Ст30Гр02");
	Пд12Пр1Ст40Гр02 = ПоказательПоСтроке("Пд12Пр1Ст40Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст50Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст50Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст50Гр02.Значение, Пд12Пр1Ст30Гр02.Значение - Пд12Пр1Ст40Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд12Пр1Ст30Гр02.ЗначениеСтр + " - " + Пд12Пр1Ст40Гр02.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_120(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.120)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 1 месяц (гр. 3 ст. 050 подр. 1.2 прил. 1 р. 1) = "
		+ "гр. 3 ст. 030 подр. 1.2 прил. 1 р. 1 - гр. 3 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОМС за 1-й последний месяц ≠ разнице всех выплат и выплат, "
		+ "не подлежащих обложению страховыми взносами на ОМС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст50Гр03 = Пд12Пр1Ст30Гр03 - Пд12Пр1Ст40Гр03'.
	
	Пд12Пр1Ст50Гр03 = ПоказательПоСтроке("Пд12Пр1Ст50Гр03");
	Пд12Пр1Ст30Гр03 = ПоказательПоСтроке("Пд12Пр1Ст30Гр03");
	Пд12Пр1Ст40Гр03 = ПоказательПоСтроке("Пд12Пр1Ст40Гр03");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст50Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст50Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст50Гр03.Значение, Пд12Пр1Ст30Гр03.Значение - Пд12Пр1Ст40Гр03.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд12Пр1Ст30Гр03.ЗначениеСтр + " - " + Пд12Пр1Ст40Гр03.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_121(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.121)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 2 месяц (гр. 4 ст. 050 подр. 1.2 прил. 1 р. 1) = "
		+ "гр. 4 ст. 030 подр. 1.2 прил. 1 р. 1 - гр. 4 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОМС за 2-й последний месяц ≠ разнице всех выплат и выплат, "
		+ "не подлежащих обложению страховыми взносами на ОМС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст50Гр04 = Пд12Пр1Ст30Гр04 - Пд12Пр1Ст40Гр04'.
	
	Пд12Пр1Ст50Гр04 = ПоказательПоСтроке("Пд12Пр1Ст50Гр04");
	Пд12Пр1Ст30Гр04 = ПоказательПоСтроке("Пд12Пр1Ст30Гр04");
	Пд12Пр1Ст40Гр04 = ПоказательПоСтроке("Пд12Пр1Ст40Гр04");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст50Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст50Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст50Гр04.Значение, Пд12Пр1Ст30Гр04.Значение - Пд12Пр1Ст40Гр04.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд12Пр1Ст30Гр04.ЗначениеСтр + " - " + Пд12Пр1Ст40Гр04.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_122(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.122)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 3 месяц (гр. 5 ст. 050 подр. 1.2 прил. 1 р. 1) = "
		+ "гр. 5 ст. 030 подр. 1.2 прил. 1 р. 1 - гр. 5 ст. 040 подр. 1.2 прил. 1 р. 1 по каждому значению Кода тарифа "
		+ "плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='База для страховых взносов на ОМС за 3-й последний месяц ≠ разнице всех выплат и выплат, "
		+ "не подлежащих обложению страховыми взносами на ОМС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст50Гр05 = Пд12Пр1Ст30Гр05 - Пд12Пр1Ст40Гр05'.
	
	Пд12Пр1Ст50Гр05 = ПоказательПоСтроке("Пд12Пр1Ст50Гр05");
	Пд12Пр1Ст30Гр05 = ПоказательПоСтроке("Пд12Пр1Ст30Гр05");
	Пд12Пр1Ст40Гр05 = ПоказательПоСтроке("Пд12Пр1Ст40Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст50Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст50Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст30Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст30Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст40Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст40Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст50Гр05.Значение, Пд12Пр1Ст30Гр05.Значение - Пд12Пр1Ст40Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд12Пр1Ст30Гр05.ЗначениеСтр + " - " + Пд12Пр1Ст40Гр05.ЗначениеСтр
			+ " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_123(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.123)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов, всего (гр. 1 ст. 060 подр. 1.2 прил. 1 р. 1 отчетного "
		+ "периода) = гр. 1 ст. 060 подр. 1.2 прил. 1 р. 1 предыдущего отчетного периода + гр. 2 ст. 060 подр. 1.2 "
		+ "прил. 1 р. 1 отчетного периода по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОМС за отчетный период ≠ сумме страховых взносов на ОМС за предыдущий "
		+ "отчетный период и за последние три месяца отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст60Гр01 = Пд12Пр1Ст60Гр01ПРП + Пд12Пр1Ст60Гр02'.
	
	Пд12Пр1Ст60Гр01 = ПоказательПоСтроке("Пд12Пр1Ст60Гр01");
	Пд12Пр1Ст60Гр01ПРП = ПоказательПоСтроке("Пд12Пр1Ст60Гр01ПРП");
	Пд12Пр1Ст60Гр02 = ПоказательПоСтроке("Пд12Пр1Ст60Гр02");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	Р1Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Р1Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		СуммаПд12Пр1Ст60Гр01ПРП = 0;
		СуммаПд12Пр1Ст60Гр01ПРПСтр = "";
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Р1Пр1Ст1Гр01ПРП);
				Если Р1Пр1Ст1Гр01.Значение = Р1Пр1Ст1Гр01ПРП.Значение Тогда
					ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд12Пр1Ст60Гр01ПРП);
					ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр01ПРП, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд12Пр1Ст60Гр01ПРП = СуммаПд12Пр1Ст60Гр01ПРП + Пд12Пр1Ст60Гр01ПРП.Значение;
					СуммаПд12Пр1Ст60Гр01ПРПСтр = СуммаПд12Пр1Ст60Гр01ПРПСтр + Пд12Пр1Ст60Гр01ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст60Гр01.Значение, СуммаПд12Пр1Ст60Гр01ПРП + Пд12Пр1Ст60Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаПд12Пр1Ст60Гр01ПРПСтр) + " + " + Пд12Пр1Ст60Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_124(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.2 прил. 1 к Разделу 1 (КС 1.124)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов за последние три месяца (гр. 2 ст. 060 подр. 1.2 прил. 1 р. "
		+ "1) = гр. 3 ст. 060 подр. 1.2 прил. 1 р. 1 + гр. 4 ст. 060 подр. 1.2 прил. 1 р. 1 + гр. 5 ст. 060 подр. 1.2 "
		+ "прил. 1 р. 1 по каждому значению Кода тарифа плательщика (ст. 001 прил. 1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОМС за три последних месяца отчетного периода ≠ сумме страховых "
		+ "взносов на ОМС за каждый из трех последних месяцев отчетного периода по каждому виду тарифа'");
	
	// Формула КС кратко: 'Пд12Пр1Ст60Гр02 = Пд12Пр1Ст60Гр03 + Пд12Пр1Ст60Гр04 + Пд12Пр1Ст60Гр05'.
	
	Пд12Пр1Ст60Гр02 = ПоказательПоСтроке("Пд12Пр1Ст60Гр02");
	Пд12Пр1Ст60Гр03 = ПоказательПоСтроке("Пд12Пр1Ст60Гр03");
	Пд12Пр1Ст60Гр04 = ПоказательПоСтроке("Пд12Пр1Ст60Гр04");
	Пд12Пр1Ст60Гр05 = ПоказательПоСтроке("Пд12Пр1Ст60Гр05");
	Р1Пр1Ст1Гр01 = ПоказательПоСтроке("Р1Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Р1Пр1Ст1Гр01);
		ВнестиПоказательВРасшифровку(Р1Пр1Ст1Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр03);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр04);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст60Гр05);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст60Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		
		КС = ПоказателиКС(Пд12Пр1Ст60Гр02.Значение, Пд12Пр1Ст60Гр03.Значение + Пд12Пр1Ст60Гр04.Значение + Пд12Пр1Ст60Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд12Пр1Ст60Гр03.ЗначениеСтр + " + " + Пд12Пр1Ст60Гр04.ЗначениеСтр + " + "
			+ Пд12Пр1Ст60Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_125(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.125)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым начислены страховые "
		+ "взносы по дополнительному тарифу, всего (гр. 1 ст. 010 подр. 1.3.1 прил. 1 р. 1 отчетного периода) >= гр. 1 "
		+ "ст. 010 подр. 1.3.1 прил. 1 р. 1 предыдущего отчетного периода по каждому соответствующему значению ст. 001 "
		+ "подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС за отчетный период меньше кол-ва физ.лиц по "
		+ "доп.тарифу на ОПС за предыдущий отчетный период по соответствующему коду'");
	
	// Формула КС кратко: 'Пд131Пр1Ст10Гр01 >= Пд131Пр1Ст10Гр01ПРП'.
	
	Пд131Пр1Ст10Гр01 = ПоказательПоСтроке("Пд131Пр1Ст10Гр01");
	Пд131Пр1Ст10Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст10Гр01ПРП");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд131Пр1Ст10Гр01,СуммаПд131Пр1Ст10Гр01ПРП");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			
			Ключ = Пд131Пр1Ст1Гр01.Значение;
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд131Пр1Ст10Гр01 = Группа.СуммаПд131Пр1Ст10Гр01 + Пд131Пр1Ст10Гр01.Значение;
			Группа.СуммаПд131Пр1Ст10Гр01Стр = Группа.СуммаПд131Пр1Ст10Гр01Стр + Пд131Пр1Ст10Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст10Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП, ИндПРП);
				
				Ключ = Пд131Пр1Ст1Гр01ПРП.Значение;
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд131Пр1Ст10Гр01ПРП = Группа.СуммаПд131Пр1Ст10Гр01ПРП + Пд131Пр1Ст10Гр01ПРП.Значение;
				Группа.СуммаПд131Пр1Ст10Гр01ПРПСтр = Группа.СуммаПд131Пр1Ст10Гр01ПРПСтр + Пд131Пр1Ст10Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд131Пр1Ст10Гр01, Группа.СуммаПд131Пр1Ст10Гр01ПРП);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст10Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] >= "
			+ РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст10Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр
			+ "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_126(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.126)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым начислены страховые "
		+ "взносы по дополнительному тарифу, всего (гр.1 ст. 010 подр. 1.3.1 прил. 1 р. 1) >= гр. 2 ст. 010 подр. 1.3.1 "
		+ "прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС за отчетный период меньше кол-ва физ.лиц по "
		+ "доп.тарифу на ОПС за 3 последних месяца отчетного периода по соответствующему коду'");
	
	// Формула КС кратко: 'Пд131Пр1Ст10Гр01 >= Пд131Пр1Ст10Гр02'.
	
	Пд131Пр1Ст10Гр01 = ПоказательПоСтроке("Пд131Пр1Ст10Гр01");
	Пд131Пр1Ст10Гр02 = ПоказательПоСтроке("Пд131Пр1Ст10Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр01.Имя);
		
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст10Гр01.Значение, Пд131Пр1Ст10Гр02.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_127(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.127)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым начислены страховые "
		+ "взносы по дополнительному тарифу за последние три месяца (гр.2 ст. 010 подр. 1.3.1 прил. 1 р. 1) >= гр. 3 "
		+ "ст. 010 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС за 3 последних месяца отчетного периода меньше кол-ва "
		+ "физ.лиц по доп.тарифу на ОПС за 1-й из последних месяцев отчетного периода по соответствующему коду'");
	
	// Формула КС кратко: 'Пд131Пр1Ст10Гр02 >= Пд131Пр1Ст10Гр03'.
	
	Пд131Пр1Ст10Гр02 = ПоказательПоСтроке("Пд131Пр1Ст10Гр02");
	Пд131Пр1Ст10Гр03 = ПоказательПоСтроке("Пд131Пр1Ст10Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст10Гр02.Значение, Пд131Пр1Ст10Гр03.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_128(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.128)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым начислены страховые "
		+ "взносы по дополнительному тарифу за последние три месяца (гр.2 ст. 010 подр. 1.3.1 прил. 1 р. 1) >= гр. 4 "
		+ "ст. 010 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС за 3 последних месяца отчетного периода меньше кол-ва "
		+ "физ.лиц по доп.тарифу на ОПС за 2-й из последних месяцев отчетного периода по соответствующему коду'");
	
	// Формула КС кратко: 'Пд131Пр1Ст10Гр02 >= Пд131Пр1Ст10Гр04'.
	
	Пд131Пр1Ст10Гр02 = ПоказательПоСтроке("Пд131Пр1Ст10Гр02");
	Пд131Пр1Ст10Гр04 = ПоказательПоСтроке("Пд131Пр1Ст10Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст10Гр02.Значение, Пд131Пр1Ст10Гр04.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_129(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.129)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым начислены страховые "
		+ "взносы по дополнительному тарифу за последние три месяца (гр.2 ст. 010 подр. 1.3.1 прил. 1 р. 1) >= гр. 5 "
		+ "ст. 010 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС за 3 последних месяца отчетного периода меньше кол-ва "
		+ "физ.лиц по доп.тарифу на ОПС за 3-й из последних месяцев отчетного периода по соответствующему коду'");
	
	// Формула КС кратко: 'Пд131Пр1Ст10Гр02 >= Пд131Пр1Ст10Гр05'.
	
	Пд131Пр1Ст10Гр02 = ПоказательПоСтроке("Пд131Пр1Ст10Гр02");
	Пд131Пр1Ст10Гр05 = ПоказательПоСтроке("Пд131Пр1Ст10Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст10Гр02.Значение, Пд131Пр1Ст10Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_130(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.130)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.3.1 прил. 1 р. 1 отчетного периода) >= гр. 1 ст. 020 подр. 1.3.1 прил. 1 р. 1 предыдущего "
		+ "отчетного периода по каждому соответствующему значению ст. 001 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС за отчетный период меньше суммы выплат по доп.тарифу на "
		+ "ОПС за предыдущий отчетный период по соответствующему коду'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр01 >= Пд131Пр1Ст20Гр01ПРП'.
	
	Пд131Пр1Ст20Гр01 = ПоказательПоСтроке("Пд131Пр1Ст20Гр01");
	Пд131Пр1Ст20Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст20Гр01ПРП");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд131Пр1Ст20Гр01,СуммаПд131Пр1Ст20Гр01ПРП");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			
			Ключ = Пд131Пр1Ст1Гр01.Значение;
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд131Пр1Ст20Гр01 = Группа.СуммаПд131Пр1Ст20Гр01 + Пд131Пр1Ст20Гр01.Значение;
			Группа.СуммаПд131Пр1Ст20Гр01Стр = Группа.СуммаПд131Пр1Ст20Гр01Стр + Пд131Пр1Ст20Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст20Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП, ИндПРП);
				
				Ключ = Пд131Пр1Ст1Гр01ПРП.Значение;
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд131Пр1Ст20Гр01ПРП = Группа.СуммаПд131Пр1Ст20Гр01ПРП + Пд131Пр1Ст20Гр01ПРП.Значение;
				Группа.СуммаПд131Пр1Ст20Гр01ПРПСтр = Группа.СуммаПд131Пр1Ст20Гр01ПРПСтр + Пд131Пр1Ст20Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд131Пр1Ст20Гр01, Группа.СуммаПд131Пр1Ст20Гр01ПРП);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст20Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] >= "
			+ РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст20Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр
			+ "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_131(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.131)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.3.1 прил. 1 р. 1) > 0 если гр. 1 ст. 010 подр. 1.3.1 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС за отчетный период при наличии кол-ва физ.лиц по "
		+ "доп.тарифу на ОПС за отчетный период'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр01 > 0, когда Пд131Пр1Ст10Гр01 > 0'.
	
	Пд131Пр1Ст20Гр01 = ПоказательПоСтроке("Пд131Пр1Ст20Гр01");
	Пд131Пр1Ст10Гр01 = ПоказательПоСтроке("Пд131Пр1Ст10Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр01.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд131Пр1Ст10Гр01.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд131Пр1Ст10Гр01.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_132(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.132)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.3.1 прил. 1 р. 1) > 0 если гр. 2 ст. 010 подр. 1.3.1 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС за 3 посл.месяца при наличии кол-ва физ.лиц по "
		+ "доп.тарифу на ОПС за 3 посл.месяца'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр02 > 0, когда Пд131Пр1Ст10Гр02 > 0'.
	
	Пд131Пр1Ст20Гр02 = ПоказательПоСтроке("Пд131Пр1Ст20Гр02");
	Пд131Пр1Ст10Гр02 = ПоказательПоСтроке("Пд131Пр1Ст10Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр02.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд131Пр1Ст10Гр02.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд131Пр1Ст10Гр02.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_133(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.133)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 1 месяц (гр. 3 "
		+ "ст. 020 подр. 1.3.1 прил. 1 р. 1) > 0 если гр. 3 ст. 010 подр. 1.3.1 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС за 1-й из 3-х посл.месяцев при наличии кол-ва "
		+ "физ.лиц по доп.тарифу на ОПС за 1-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр03 > 0, когда Пд131Пр1Ст10Гр03 > 0'.
	
	Пд131Пр1Ст20Гр03 = ПоказательПоСтроке("Пд131Пр1Ст20Гр03");
	Пд131Пр1Ст10Гр03 = ПоказательПоСтроке("Пд131Пр1Ст10Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр03.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд131Пр1Ст10Гр03.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд131Пр1Ст10Гр03.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_134(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.134)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 2 месяц (гр. 4 "
		+ "ст. 020 подр. 1.3.1 прил. 1 р. 1) > 0 если гр. 4 ст. 010 подр. 1.3.1 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС за 2-й из 3-х посл.месяцев при наличии кол-ва "
		+ "физ.лиц по доп.тарифу на ОПС за 2-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр04 > 0, когда Пд131Пр1Ст10Гр04 > 0'.
	
	Пд131Пр1Ст20Гр04 = ПоказательПоСтроке("Пд131Пр1Ст20Гр04");
	Пд131Пр1Ст10Гр04 = ПоказательПоСтроке("Пд131Пр1Ст10Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр04.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд131Пр1Ст10Гр04.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд131Пр1Ст10Гр04.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_135(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.135)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 3 месяц (гр. 5 "
		+ "ст. 020 подр. 1.3.1 прил. 1 р. 1) > 0 если гр. 5 ст. 010 подр. 1.3.1 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС за 3-й из 3-х посл.месяцев при наличии кол-ва "
		+ "физ.лиц по доп.тарифу на ОПС за 3-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр05 > 0, когда Пд131Пр1Ст10Гр05 > 0'.
	
	Пд131Пр1Ст20Гр05 = ПоказательПоСтроке("Пд131Пр1Ст20Гр05");
	Пд131Пр1Ст10Гр05 = ПоказательПоСтроке("Пд131Пр1Ст10Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст10Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст10Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст10Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр05.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд131Пр1Ст10Гр05.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд131Пр1Ст10Гр05.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_136(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.136)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.3.1 прил. 1 р. 1 отчетного периода) = гр. 1 ст. 020 подр. 1.3.1 прил. 1 р. 1 СВ предыдущего "
		+ "отчетного периода + гр. 2 ст. 020 подр. 1.3.1 прил. 1 р. 1 отчетного периода по каждому соответствующему "
		+ "значению ст. 001 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС за отчетный период ≠ сумме выплат по доп.тарифу на ОПС "
		+ "за предыдущий отчетный период и за последние три месяца отчетного периода по каждому виду доп.тарифа на ОПС'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр01 = Пд131Пр1Ст20Гр01ПРП + Пд131Пр1Ст20Гр02'.
	
	Пд131Пр1Ст20Гр01 = ПоказательПоСтроке("Пд131Пр1Ст20Гр01");
	Пд131Пр1Ст20Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст20Гр01ПРП");
	Пд131Пр1Ст20Гр02 = ПоказательПоСтроке("Пд131Пр1Ст20Гр02");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд131Пр1Ст20Гр01,СуммаПд131Пр1Ст20Гр01ПРП,СуммаПд131Пр1Ст20Гр02");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр02, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			
			Ключ = Пд131Пр1Ст1Гр01.Значение;
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд131Пр1Ст20Гр01 = Группа.СуммаПд131Пр1Ст20Гр01 + Пд131Пр1Ст20Гр01.Значение;
			Группа.СуммаПд131Пр1Ст20Гр02 = Группа.СуммаПд131Пр1Ст20Гр02 + Пд131Пр1Ст20Гр02.Значение;
			Группа.СуммаПд131Пр1Ст20Гр01Стр = Группа.СуммаПд131Пр1Ст20Гр01Стр + Пд131Пр1Ст20Гр01.ЗначениеСтр + " + ";
			Группа.СуммаПд131Пр1Ст20Гр02Стр = Группа.СуммаПд131Пр1Ст20Гр02Стр + Пд131Пр1Ст20Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст20Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП, ИндПРП);
				
				Ключ = Пд131Пр1Ст1Гр01ПРП.Значение;
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд131Пр1Ст20Гр01ПРП = Группа.СуммаПд131Пр1Ст20Гр01ПРП + Пд131Пр1Ст20Гр01ПРП.Значение;
				Группа.СуммаПд131Пр1Ст20Гр01ПРПСтр = Группа.СуммаПд131Пр1Ст20Гр01ПРПСтр + Пд131Пр1Ст20Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд131Пр1Ст20Гр01, Группа.СуммаПд131Пр1Ст20Гр01ПРП + Группа.СуммаПд131Пр1Ст20Гр02);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст20Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
			+ РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст20Гр01ПРПСтр + Группа.СуммаПд131Пр1Ст20Гр02Стр)
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_137(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.137)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.3.1 прил. 1 р. 1) = гр. 3 ст. 020 подр. 1.3.1 прил. 1 р. 1 + гр. 4 ст. 020 "
		+ "подр. 1.3.1 прил. 1 р. 1 + гр. 5 ст. 020 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС за последние три месяца отчетного периода ≠ сумме "
		+ "выплат по доп.тарифу на ОПС за каждый из трех месяцев'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр02 = Пд131Пр1Ст20Гр03 + Пд131Пр1Ст20Гр04 + Пд131Пр1Ст20Гр05'.
	
	Пд131Пр1Ст20Гр02 = ПоказательПоСтроке("Пд131Пр1Ст20Гр02");
	Пд131Пр1Ст20Гр03 = ПоказательПоСтроке("Пд131Пр1Ст20Гр03");
	Пд131Пр1Ст20Гр04 = ПоказательПоСтроке("Пд131Пр1Ст20Гр04");
	Пд131Пр1Ст20Гр05 = ПоказательПоСтроке("Пд131Пр1Ст20Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст20Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр02.Значение, Пд131Пр1Ст20Гр03.Значение + Пд131Пр1Ст20Гр04.Значение + Пд131Пр1Ст20Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд131Пр1Ст20Гр03.ЗначениеСтр + " + " + Пд131Пр1Ст20Гр04.ЗначениеСтр + " + " + Пд131Пр1Ст20Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_138(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.138)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.3.1 прил. 1 р. 1) >= гр. 1 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС за отчетный период меньше суммы выплат, не "
		+ "подлеж.облож. по доп.тарифу на ОПС, за отчетный период'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр01 >= Пд131Пр1Ст30Гр01'.
	
	Пд131Пр1Ст20Гр01 = ПоказательПоСтроке("Пд131Пр1Ст20Гр01");
	Пд131Пр1Ст30Гр01 = ПоказательПоСтроке("Пд131Пр1Ст30Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст20Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр01.Значение, Пд131Пр1Ст30Гр01.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_139(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.139)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.3.1 прил. 1 р. 1) >= гр. 2 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС за последние три месяца отчетного периода меньше суммы "
		+ "выплат, не подлеж.облож. по доп.тарифу на ОПС, за последние три месяца отчетного периода'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр02 >= Пд131Пр1Ст30Гр02'.
	
	Пд131Пр1Ст20Гр02 = ПоказательПоСтроке("Пд131Пр1Ст20Гр02");
	Пд131Пр1Ст30Гр02 = ПоказательПоСтроке("Пд131Пр1Ст30Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст20Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр02.Значение, Пд131Пр1Ст30Гр02.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_140(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.140)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 1 месяц (гр. 3 "
		+ "ст. 020 подр. 1.3.1 прил. 1 р. 1) >= гр. 3 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС за 1-й последний месяц отчетного периода меньше суммы "
		+ "выплат, не подлеж.облож. по доп.тарифу на ОПС, за 1-й последний месяц отчетного периода'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр03 >= Пд131Пр1Ст30Гр03'.
	
	Пд131Пр1Ст20Гр03 = ПоказательПоСтроке("Пд131Пр1Ст20Гр03");
	Пд131Пр1Ст30Гр03 = ПоказательПоСтроке("Пд131Пр1Ст30Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст20Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр03.Значение, Пд131Пр1Ст30Гр03.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_141(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.141)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 2 месяц (гр. 4 "
		+ "ст. 020 подр. 1.3.1 прил. 1 р. 1) >= гр. 4 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС за 2-й последний месяц отчетного периода меньше суммы "
		+ "выплат, не подлеж.облож. по доп.тарифу на ОПС, за 2-й последний месяц отчетного периода'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр04 >= Пд131Пр1Ст30Гр04'.
	
	Пд131Пр1Ст20Гр04 = ПоказательПоСтроке("Пд131Пр1Ст20Гр04");
	Пд131Пр1Ст30Гр04 = ПоказательПоСтроке("Пд131Пр1Ст30Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст20Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр04.Значение, Пд131Пр1Ст30Гр04.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_142(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.142)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 3 месяц (гр. 5 "
		+ "ст. 020 подр. 1.3.1 прил. 1 р. 1) >= гр. 5 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС за 3-й последний месяц отчетного периода меньше суммы "
		+ "выплат, не подлеж.облож. по доп.тарифу на ОПС, за 3-й последний месяц отчетного периода'");
	
	// Формула КС кратко: 'Пд131Пр1Ст20Гр05 >= Пд131Пр1Ст30Гр05'.
	
	Пд131Пр1Ст20Гр05 = ПоказательПоСтроке("Пд131Пр1Ст20Гр05");
	Пд131Пр1Ст30Гр05 = ПоказательПоСтроке("Пд131Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст20Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст20Гр05.Значение, Пд131Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_143(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.143)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами, всего (гр. 1 ст. 030 подр. 1.3.1 "
		+ "прил. 1 р. 1 отчетного периода) = гр. 1 ст. 030 подр. 1.3.1 прил. 1 р. 1 предыдущего отчетного периода + гр. "
		+ "2 ст. 030 подр. 1.3.1 прил. 1 р. 1 отчетного периода по каждому соответствующему значению ст. 001 подр. "
		+ "1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлеж. облож. по доп. тарифу на ОПС за отчетный период ≠ сумме выплат, "
		+ "не подлеж. облож. по доп.тарифу на ОПС за предыдущий отчетный период и за последние три месяца отчетного "
		+ "периода по каждому виду доп. тарифа на ОПС'");
	
	// Формула КС кратко: 'Пд131Пр1Ст30Гр01 = Пд131Пр1Ст30Гр01ПРП + Пд131Пр1Ст30Гр02'.
	
	Пд131Пр1Ст30Гр01 = ПоказательПоСтроке("Пд131Пр1Ст30Гр01");
	Пд131Пр1Ст30Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст30Гр01ПРП");
	Пд131Пр1Ст30Гр02 = ПоказательПоСтроке("Пд131Пр1Ст30Гр02");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд131Пр1Ст30Гр01,СуммаПд131Пр1Ст30Гр01ПРП,СуммаПд131Пр1Ст30Гр02");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр02, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			
			Ключ = Пд131Пр1Ст1Гр01.Значение;
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд131Пр1Ст30Гр01 = Группа.СуммаПд131Пр1Ст30Гр01 + Пд131Пр1Ст30Гр01.Значение;
			Группа.СуммаПд131Пр1Ст30Гр02 = Группа.СуммаПд131Пр1Ст30Гр02 + Пд131Пр1Ст30Гр02.Значение;
			Группа.СуммаПд131Пр1Ст30Гр01Стр = Группа.СуммаПд131Пр1Ст30Гр01Стр + Пд131Пр1Ст30Гр01.ЗначениеСтр + " + ";
			Группа.СуммаПд131Пр1Ст30Гр02Стр = Группа.СуммаПд131Пр1Ст30Гр02Стр + Пд131Пр1Ст30Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст30Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП, ИндПРП);
				
				Ключ = Пд131Пр1Ст1Гр01ПРП.Значение;
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд131Пр1Ст30Гр01ПРП = Группа.СуммаПд131Пр1Ст30Гр01ПРП + Пд131Пр1Ст30Гр01ПРП.Значение;
				Группа.СуммаПд131Пр1Ст30Гр01ПРПСтр = Группа.СуммаПд131Пр1Ст30Гр01ПРПСтр + Пд131Пр1Ст30Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд131Пр1Ст30Гр01, Группа.СуммаПд131Пр1Ст30Гр01ПРП + Группа.СуммаПд131Пр1Ст30Гр02);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст30Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
			+ РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст30Гр01ПРПСтр + Группа.СуммаПд131Пр1Ст30Гр02Стр)
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_144(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.144)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами за последние три месяца (гр. 2 ст. 030 "
		+ "подр. 1.3.1 прил. 1 р. 1) = гр. 3 ст. 030 подр. 1.3.1 прил. 1 р. 1 + гр. 4 ст. 030 подр. 1.3.1 прил. 1 р. 1 "
		+ "+ гр. 5 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлеж. облож по доп. тарифу на ОПС за последние три месяца отчетного "
		+ "периода ≠ сумме выплат, не подлеж облож. по доп. тарифу на ОПС за каждый из трех месяцев'");
	
	// Формула КС кратко: 'Пд131Пр1Ст30Гр02 = Пд131Пр1Ст30Гр03 + Пд131Пр1Ст30Гр04 + Пд131Пр1Ст30Гр05'.
	
	Пд131Пр1Ст30Гр02 = ПоказательПоСтроке("Пд131Пр1Ст30Гр02");
	Пд131Пр1Ст30Гр03 = ПоказательПоСтроке("Пд131Пр1Ст30Гр03");
	Пд131Пр1Ст30Гр04 = ПоказательПоСтроке("Пд131Пр1Ст30Гр04");
	Пд131Пр1Ст30Гр05 = ПоказательПоСтроке("Пд131Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст30Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст30Гр02.Значение, Пд131Пр1Ст30Гр03.Значение + Пд131Пр1Ст30Гр04.Значение + Пд131Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд131Пр1Ст30Гр03.ЗначениеСтр + " + " + Пд131Пр1Ст30Гр04.ЗначениеСтр + " + "
				+ Пд131Пр1Ст30Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_145(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.145)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу, всего (гр. 1 ст. 040 "
		+ "подр. 1.3.1 прил. 1 р. 1) = гр. 1 ст. 020 подр. 1.3.1 прил. 1 р. 1 - гр. 1 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС за отчетный период ≠ разнице всех выплат и выплат, не "
		+ "подлеж.облож. по доп.тарифу на ОПС, за отчетный период'");
	
	// Формула КС кратко: 'Пд131Пр1Ст40Гр01 = Пд131Пр1Ст20Гр01 - Пд131Пр1Ст30Гр01'.
	
	Пд131Пр1Ст40Гр01 = ПоказательПоСтроке("Пд131Пр1Ст40Гр01");
	Пд131Пр1Ст20Гр01 = ПоказательПоСтроке("Пд131Пр1Ст20Гр01");
	Пд131Пр1Ст30Гр01 = ПоказательПоСтроке("Пд131Пр1Ст30Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст40Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст40Гр01.Значение, Пд131Пр1Ст20Гр01.Значение - Пд131Пр1Ст30Гр01.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд131Пр1Ст20Гр01.ЗначениеСтр + " - " + Пд131Пр1Ст30Гр01.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_146(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.146)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу за последние три месяца "
		+ "(гр. 2 ст. 040 подр. 1.3.1 прил. 1 р. 1) = гр. 2 ст. 020 подр. 1.3.1 прил. 1 р. 1 - гр. 2 ст. 030 подр. "
		+ "1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС за 3 последних месяца ≠ разнице всех выплат и выплат, не "
		+ "подлеж.облож.по доп.тарифу на ОПС, за 3 последних месяца'");
	
	// Формула КС кратко: 'Пд131Пр1Ст40Гр02 = Пд131Пр1Ст20Гр02 - Пд131Пр1Ст30Гр02'.
	
	Пд131Пр1Ст40Гр02 = ПоказательПоСтроке("Пд131Пр1Ст40Гр02");
	Пд131Пр1Ст20Гр02 = ПоказательПоСтроке("Пд131Пр1Ст20Гр02");
	Пд131Пр1Ст30Гр02 = ПоказательПоСтроке("Пд131Пр1Ст30Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст40Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст40Гр02.Значение, Пд131Пр1Ст20Гр02.Значение - Пд131Пр1Ст30Гр02.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд131Пр1Ст20Гр02.ЗначениеСтр + " - " + Пд131Пр1Ст30Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_147(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.147)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу за 1 месяц (гр. 3 ст. 040 "
		+ "подр. 1.3.1 прил. 1 р. 1) = гр. 3 ст. 020 подр. 1.3.1 прил. 1 р. 1 - гр. 3 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС за 1-й последний месяц ≠ разнице всех выплат и выплат, не "
		+ "подлеж.облож. по доп.тарифу на ОПС, за 1-й последний месяц'");
	
	// Формула КС кратко: 'Пд131Пр1Ст40Гр03 = Пд131Пр1Ст20Гр03 - Пд131Пр1Ст30Гр03'.
	
	Пд131Пр1Ст40Гр03 = ПоказательПоСтроке("Пд131Пр1Ст40Гр03");
	Пд131Пр1Ст20Гр03 = ПоказательПоСтроке("Пд131Пр1Ст20Гр03");
	Пд131Пр1Ст30Гр03 = ПоказательПоСтроке("Пд131Пр1Ст30Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст40Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст40Гр03.Значение, Пд131Пр1Ст20Гр03.Значение - Пд131Пр1Ст30Гр03.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд131Пр1Ст20Гр03.ЗначениеСтр + " - " + Пд131Пр1Ст30Гр03.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_148(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.148)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу за 2 месяц (гр. 4 ст. 040 "
		+ "подр. 1.3.1 прил. 1 р. 1) = гр. 4 ст. 020 подр. 1.3.1 прил. 1 р. 1 - гр. 4 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС за 2-й последний месяц ≠ разнице всех выплат и выплат, не "
		+ "подлеж.облож. по доп.тарифу на ОПС, за 2-й последний месяц'");
	
	// Формула КС кратко: 'Пд131Пр1Ст40Гр04 = Пд131Пр1Ст20Гр04 - Пд131Пр1Ст30Гр04'.
	
	Пд131Пр1Ст40Гр04 = ПоказательПоСтроке("Пд131Пр1Ст40Гр04");
	Пд131Пр1Ст20Гр04 = ПоказательПоСтроке("Пд131Пр1Ст20Гр04");
	Пд131Пр1Ст30Гр04 = ПоказательПоСтроке("Пд131Пр1Ст30Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст40Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст40Гр04.Значение, Пд131Пр1Ст20Гр04.Значение - Пд131Пр1Ст30Гр04.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд131Пр1Ст20Гр04.ЗначениеСтр + " - " + Пд131Пр1Ст30Гр04.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_149(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.149)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу за 3 месяц (гр. 5 ст. 040 "
		+ "подр. 1.3.1 прил. 1 р. 1) = гр. 5 ст. 020 подр. 1.3.1 прил. 1 р. 1 - гр. 5 ст. 030 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС за 3-й последний месяц ≠ разнице всех выплат и выплат, не "
		+ "подлеж.облож. по доп.тарифу на ОПС, за 3-й последний месяц'");
	
	// Формула КС кратко: 'Пд131Пр1Ст40Гр05 = Пд131Пр1Ст20Гр05 - Пд131Пр1Ст30Гр05'.
	
	Пд131Пр1Ст40Гр05 = ПоказательПоСтроке("Пд131Пр1Ст40Гр05");
	Пд131Пр1Ст20Гр05 = ПоказательПоСтроке("Пд131Пр1Ст20Гр05");
	Пд131Пр1Ст30Гр05 = ПоказательПоСтроке("Пд131Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст40Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст20Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст30Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст40Гр05.Значение, Пд131Пр1Ст20Гр05.Значение - Пд131Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд131Пр1Ст20Гр05.ЗначениеСтр + " - " + Пд131Пр1Ст30Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_150(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.150)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов по дополнительному тарифу, всего (гр. 1 ст. 050 подр. 1.3.1 "
		+ "прил. 1 р. 1 отчетного периода) = гр. 1 ст. 050 подр. 1.3.1 прил. 1 р. 1 предыдущего отчетного периода + гр. "
		+ "2 ст. 050 подр. 1.3.1 прил. 1 р. 1 отчетного периода по каждому соответствующему значению ст. 001 подр. "
		+ "1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС за отчетный период ≠ сумме страховых взносов по доп.тарифу на ОПС "
		+ "за предыдущий отчетный период и за последние три месяца отчетного периода по каждому виду доп.тарифа на ОПС'");
	
	// Формула КС кратко: 'Пд131Пр1Ст50Гр01 = Пд131Пр1Ст50Гр01ПРП + Пд131Пр1Ст50Гр02'.
	
	Пд131Пр1Ст50Гр01 = ПоказательПоСтроке("Пд131Пр1Ст50Гр01");
	Пд131Пр1Ст50Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст50Гр01ПРП");
	Пд131Пр1Ст50Гр02 = ПоказательПоСтроке("Пд131Пр1Ст50Гр02");
	Пд131Пр1Ст1Гр01 = ПоказательПоСтроке("Пд131Пр1Ст1Гр01");
	Пд131Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд131Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд131Пр1Ст50Гр01,СуммаПд131Пр1Ст50Гр01ПРП,СуммаПд131Пр1Ст50Гр02");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр02, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст1Гр01, Инд);
			
			Ключ = Пд131Пр1Ст1Гр01.Значение;
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр01, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд131Пр1Ст50Гр01 = Группа.СуммаПд131Пр1Ст50Гр01 + Пд131Пр1Ст50Гр01.Значение;
			Группа.СуммаПд131Пр1Ст50Гр02 = Группа.СуммаПд131Пр1Ст50Гр02 + Пд131Пр1Ст50Гр02.Значение;
			Группа.СуммаПд131Пр1Ст50Гр01Стр = Группа.СуммаПд131Пр1Ст50Гр01Стр + Пд131Пр1Ст50Гр01.ЗначениеСтр + " + ";
			Группа.СуммаПд131Пр1Ст50Гр02Стр = Группа.СуммаПд131Пр1Ст50Гр02Стр + Пд131Пр1Ст50Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст50Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд131Пр1Ст1Гр01ПРП, ИндПРП);
				
				Ключ = Пд131Пр1Ст1Гр01ПРП.Значение;
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд131Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр01ПРП, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд131Пр1Ст50Гр01ПРП = Группа.СуммаПд131Пр1Ст50Гр01ПРП + Пд131Пр1Ст50Гр01ПРП.Значение;
				Группа.СуммаПд131Пр1Ст50Гр01ПРПСтр = Группа.СуммаПд131Пр1Ст50Гр01ПРПСтр + Пд131Пр1Ст50Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд131Пр1Ст50Гр01, Группа.СуммаПд131Пр1Ст50Гр01ПРП + Группа.СуммаПд131Пр1Ст50Гр02);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст50Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
			+ РасшифровкаВСтр(Группа.СуммаПд131Пр1Ст50Гр01ПРПСтр + Группа.СуммаПд131Пр1Ст50Гр02Стр)
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_151(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.1 прил. 1 к Разделу 1 (КС 1.151)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов по дополнительному тарифу за последние три месяца (гр. 2 ст. "
		+ "050 подр. 1.3.1 прил. 1 р. 1) = гр. 3 ст. 050 подр. 1.3.1 прил. 1 р. 1 + гр. 4 ст. 050 подр. 1.3.1 прил. 1 "
		+ "р. 1 + гр. 5 ст. 050 подр. 1.3.1 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы по доп.тарифу на ОПС за последние три месяца отчетного периода ≠ "
		+ "страховым взносам по доп.тарифу на ОПС за каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд131Пр1Ст50Гр02 = Пд131Пр1Ст50Гр03 + Пд131Пр1Ст50Гр04 + Пд131Пр1Ст50Гр05'.
	
	Пд131Пр1Ст50Гр02 = ПоказательПоСтроке("Пд131Пр1Ст50Гр02");
	Пд131Пр1Ст50Гр03 = ПоказательПоСтроке("Пд131Пр1Ст50Гр03");
	Пд131Пр1Ст50Гр04 = ПоказательПоСтроке("Пд131Пр1Ст50Гр04");
	Пд131Пр1Ст50Гр05 = ПоказательПоСтроке("Пд131Пр1Ст50Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст50Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр02, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст50Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст50Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд131Пр1Ст50Гр02.Значение, Пд131Пр1Ст50Гр03.Значение + Пд131Пр1Ст50Гр04.Значение + Пд131Пр1Ст50Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд131Пр1Ст50Гр03.ЗначениеСтр + " + " + Пд131Пр1Ст50Гр04.ЗначениеСтр + " + "
				+ Пд131Пр1Ст50Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_152(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.152)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым исчислены страховые "
		+ "взносы по дополнительному тарифу, всего (гр. 1 ст. 010 подр. 1.3.2 прил. 1 р. 1 отчетного периода) >= гр. 1 "
		+ "ст. 010 подр. 1.3.2 прил. 1 р. 1 предыдущего отчетного периода по каждой соответствующей комбинации значений "
		+ "ст. 001, ст. 002, ст. 003 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ..лиц по доп. тарифу на ОПС по п.3 ст.248 НК РФ за отчетный период меньше "
		+ "кол-ва физ..лиц по доп.тарифу на ОПС по п.3.ст. 248 НК РФ за предыдущий отчетный период по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст10Гр01 >= Пд132Пр1Ст10Гр01ПРП'.
	
	Пд132Пр1Ст10Гр01 = ПоказательПоСтроке("Пд132Пр1Ст10Гр01");
	Пд132Пр1Ст10Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст10Гр01ПРП");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст2Гр01 = ПоказательПоСтроке("Пд132Пр1Ст2Гр01");
	Пд132Пр1Ст3Гр01 = ПоказательПоСтроке("Пд132Пр1Ст3Гр01");
	Пд132Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст1Гр01ПРП");
	Пд132Пр1Ст2Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст2Гр01ПРП");
	Пд132Пр1Ст3Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст3Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд132Пр1Ст10Гр01,СуммаПд132Пр1Ст10Гр01ПРП");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст2Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст3Гр01, Инд);
			
			Ключ = Прав(" " + Пд132Пр1Ст1Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст2Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст3Гр01.Значение, 1);
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд132Пр1Ст10Гр01 = Группа.СуммаПд132Пр1Ст10Гр01 + Пд132Пр1Ст10Гр01.Значение;
			Группа.СуммаПд132Пр1Ст10Гр01Стр = Группа.СуммаПд132Пр1Ст10Гр01Стр + Пд132Пр1Ст10Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст10Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст2Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст3Гр01ПРП, ИндПРП);
				
				Ключ = Прав(" " + Пд132Пр1Ст1Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст2Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст3Гр01ПРП.Значение, 1);
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд132Пр1Ст10Гр01ПРП = Группа.СуммаПд132Пр1Ст10Гр01ПРП + Пд132Пр1Ст10Гр01ПРП.Значение;
				Группа.СуммаПд132Пр1Ст10Гр01ПРПСтр = Группа.СуммаПд132Пр1Ст10Гр01ПРПСтр + Пд132Пр1Ст10Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд132Пр1Ст10Гр01, Группа.СуммаПд132Пр1Ст10Гр01ПРП);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст10Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] >= "
			+ РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст10Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр
			+ "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_153(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.153)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым исчислены страховые "
		+ "взносы по дополнительному тарифу, всего (гр.1 ст. 010 подр. 1.3.2 прил. 1 р. 1) >= гр. 2 ст. 010 подр. 1.3.2 "
		+ "прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС по п.3 ст.248 НК РФ за отчетный период меньше кол-ва "
		+ "физ.лиц по доп.тарифу на ОПС по п.3 ст.248 НК РФ за 3 последних месяца отчетного периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст10Гр01 >= Пд132Пр1Ст10Гр02'.
	
	Пд132Пр1Ст10Гр01 = ПоказательПоСтроке("Пд132Пр1Ст10Гр01");
	Пд132Пр1Ст10Гр02 = ПоказательПоСтроке("Пд132Пр1Ст10Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст10Гр01.Значение, Пд132Пр1Ст10Гр02.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_154(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.154)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым исчислены страховые "
		+ "взносы по дополнительному тарифу за последние три месяца (гр. 2 ст. 010 подр. 1.3.2 прил. 1 р. 1) >= гр. 3 "
		+ "ст. 010 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС по п.3 ст.248 НК РФ за 3 последних месяца отчетного "
		+ "периода меньше кол-ва физ.лиц по доп.тарифу на ОПСпо п.3 ст.248 НК РФ за 1-й из последних месяцев отчетного "
		+ "периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст10Гр02 >= Пд132Пр1Ст10Гр03'.
	
	Пд132Пр1Ст10Гр02 = ПоказательПоСтроке("Пд132Пр1Ст10Гр02");
	Пд132Пр1Ст10Гр03 = ПоказательПоСтроке("Пд132Пр1Ст10Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст10Гр02.Значение, Пд132Пр1Ст10Гр03.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_155(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.155)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым исчислены страховые "
		+ "взносы по дополнительному тарифу за последние три месяца (гр. 2 ст. 010 подр. 1.3.2 прил. 1 р. 1) >= гр. 4 "
		+ "ст. 010 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС по п.3 ст.248 НК РФ за 3 последних месяца отчетного "
		+ "периода меньше кол-ва физ.лиц по доп.тарифу на ОПС по п.3 ст.248 НК РФ за 2-й из последних месяцев отчетного "
		+ "периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст10Гр02 >= Пд132Пр1Ст10Гр04'.
	
	Пд132Пр1Ст10Гр02 = ПоказательПоСтроке("Пд132Пр1Ст10Гр02");
	Пд132Пр1Ст10Гр04 = ПоказательПоСтроке("Пд132Пр1Ст10Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст10Гр02.Значение, Пд132Пр1Ст10Гр04.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_156(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.156)'");
	ОписаниеКС     = НСтр("ru='Количество физических лиц, с выплат и иных вознаграждений которым исчислены страховые "
		+ "взносы по дополнительному тарифу за последние три месяца (гр. 2 ст. 010 подр. 1.3.2 прил. 1 р. 1) >= гр. 5 "
		+ "ст. 010 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по доп.тарифу на ОПС по п.3 ст.248 НК РФ за 3 последних месяца отчетного "
		+ "периода меньше кол-ва физ.лиц по доп.тарифу на ОПС по п.3 ст.248 НК РФ за 3-й из последних месяцев отчетного "
		+ "периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст10Гр02 >= Пд132Пр1Ст10Гр05'.
	
	Пд132Пр1Ст10Гр02 = ПоказательПоСтроке("Пд132Пр1Ст10Гр02");
	Пд132Пр1Ст10Гр05 = ПоказательПоСтроке("Пд132Пр1Ст10Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст10Гр02.Значение, Пд132Пр1Ст10Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_157(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.157)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.3.2 прил. 1 р. 1 отчетного периода) >= гр. 1 ст. 020 подр. 1.3.2 прил. 1 р. 1 предыдущего "
		+ "отчетного периода по каждой соответствующей комбинации значений ст. 001, ст. 002, ст. 003 подр. 1.3.2 прил. "
		+ "1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты по доп.тарифу на ОПС по п.3 ст.248 НК РФ за отчетный период меньше выплат по "
		+ "доп.тарифу на ОПС по п.3.ст.248 НК РФ за предыдущий отчетный период по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр01 >= Пд132Пр1Ст20Гр01ПРП'.
	
	Пд132Пр1Ст20Гр01 = ПоказательПоСтроке("Пд132Пр1Ст20Гр01");
	Пд132Пр1Ст20Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст20Гр01ПРП");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст2Гр01 = ПоказательПоСтроке("Пд132Пр1Ст2Гр01");
	Пд132Пр1Ст3Гр01 = ПоказательПоСтроке("Пд132Пр1Ст3Гр01");
	Пд132Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст1Гр01ПРП");
	Пд132Пр1Ст2Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст2Гр01ПРП");
	Пд132Пр1Ст3Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст3Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд132Пр1Ст20Гр01,СуммаПд132Пр1Ст20Гр01ПРП");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст2Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст3Гр01, Инд);
			
			Ключ = Прав(" " + Пд132Пр1Ст1Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст2Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст3Гр01.Значение, 1);
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд132Пр1Ст20Гр01 = Группа.СуммаПд132Пр1Ст20Гр01 + Пд132Пр1Ст20Гр01.Значение;
			Группа.СуммаПд132Пр1Ст20Гр01Стр = Группа.СуммаПд132Пр1Ст20Гр01Стр + Пд132Пр1Ст20Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст20Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст2Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст3Гр01ПРП, ИндПРП);
				
				Ключ = Прав(" " + Пд132Пр1Ст1Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст2Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст3Гр01ПРП.Значение, 1);
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд132Пр1Ст20Гр01ПРП = Группа.СуммаПд132Пр1Ст20Гр01ПРП + Пд132Пр1Ст20Гр01ПРП.Значение;
				Группа.СуммаПд132Пр1Ст20Гр01ПРПСтр = Группа.СуммаПд132Пр1Ст20Гр01ПРПСтр + Пд132Пр1Ст20Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд132Пр1Ст20Гр01, Группа.СуммаПд132Пр1Ст20Гр01ПРП);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст20Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] >= "
			+ РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст20Гр01ПРПСтр) + " Итог [" + КС.ПраваяЧастьСтр
			+ "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_158(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.158)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.3.2 прил. 1 р. 1) > 0 если гр. 1 ст. 010 подр. 1.3.2 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС по п.3.ст.248 НК РФ за отчетный период при "
		+ "наличии кол-ва ф.л. по доп.тарифу на ОПС по п.3.ст.248 НК РФ за отчетный период'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр01 > 0, когда Пд132Пр1Ст10Гр01 > 0'.
	
	Пд132Пр1Ст20Гр01 = ПоказательПоСтроке("Пд132Пр1Ст20Гр01");
	Пд132Пр1Ст10Гр01 = ПоказательПоСтроке("Пд132Пр1Ст10Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр01.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд132Пр1Ст10Гр01.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд132Пр1Ст10Гр01.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_159(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.159)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.3.2 прил. 1 р. 1) > 0 если гр. 2 ст. 010 подр. 1.3.2 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 3 посл.месяца при наличии "
		+ "кол-ва ф.л. по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 3 посл.месяца'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр02 > 0, когда Пд132Пр1Ст10Гр02 > 0'.
	
	Пд132Пр1Ст20Гр02 = ПоказательПоСтроке("Пд132Пр1Ст20Гр02");
	Пд132Пр1Ст10Гр02 = ПоказательПоСтроке("Пд132Пр1Ст10Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр02.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд132Пр1Ст10Гр02.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд132Пр1Ст10Гр02.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_160(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.160)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за 1 месяц (гр. 3 "
		+ "ст. 020 подр. 1.3.2 прил. 1 р. 1) > 0 если гр. 3 ст. 010 подр. 1.3.2 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 1-й из 3-х посл.месяцев "
		+ "при наличии кол-ва ф.л. по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 1-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр03 > 0, когда Пд132Пр1Ст10Гр03 > 0'.
	
	Пд132Пр1Ст20Гр03 = ПоказательПоСтроке("Пд132Пр1Ст20Гр03");
	Пд132Пр1Ст10Гр03 = ПоказательПоСтроке("Пд132Пр1Ст10Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр03.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд132Пр1Ст10Гр03.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд132Пр1Ст10Гр03.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_161(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.161)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за 2 месяц (гр. 4 "
		+ "ст. 020 подр. 1.3.2 прил. 1 р. 1) > 0 если гр. 4 ст. 010 подр. 1.3.2 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 2-й из 3-х посл.месяцев "
		+ "при наличии кол-ва ф.л. по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 2-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр04 > 0, когда Пд132Пр1Ст10Гр04 > 0'.
	
	Пд132Пр1Ст20Гр04 = ПоказательПоСтроке("Пд132Пр1Ст20Гр04");
	Пд132Пр1Ст10Гр04 = ПоказательПоСтроке("Пд132Пр1Ст10Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр04.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд132Пр1Ст10Гр04.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд132Пр1Ст10Гр04.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_162(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.162)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за 3 месяц (гр. 5 "
		+ "ст. 020 подр. 1.3.2 прил. 1 р. 1) > 0 если гр. 5 ст. 010 подр. 1.3.2 прил. 1 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 3-й из 3-х посл.месяцев "
		+ "при наличии кол-ва ф.л. по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 3-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр05 > 0, когда Пд132Пр1Ст10Гр05 > 0'.
	
	Пд132Пр1Ст20Гр05 = ПоказательПоСтроке("Пд132Пр1Ст20Гр05");
	Пд132Пр1Ст10Гр05 = ПоказательПоСтроке("Пд132Пр1Ст10Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст10Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст10Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст10Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр05.Значение, 0);
			Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Пд132Пр1Ст10Гр05.ЗначениеСтр + " > 0";
			
			УсловиеВыполнено = Пд132Пр1Ст10Гр05.Значение > 0;
			Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_163(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.163)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.3.2 прил. 1 р. 1 отчетного периода) = гр. 1 ст. 020 подр. 1.3.2 прил. 1 р. 1 предыдущего "
		+ "отчетного периода + гр. 2 ст. 020 подр. 1.3.2 прил. 1 р. 1 отчетного периода по каждой соответствующей "
		+ "комбинации значений ст. 001, ст. 002, ст. 003 подр. 1.3.2 прил. 1 р. 1 СВ'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС по п.3.ст.248 НК РФ за отчетный период ≠ сумме выплат "
		+ "по доп.тарифу на ОПС по п.3.ст.248 НК РФ за предыдущий отчетный период и за последние три месяца отчетного "
		+ "периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр01 = Пд132Пр1Ст20Гр01ПРП + Пд132Пр1Ст20Гр02'.
	
	Пд132Пр1Ст20Гр01 = ПоказательПоСтроке("Пд132Пр1Ст20Гр01");
	Пд132Пр1Ст20Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст20Гр01ПРП");
	Пд132Пр1Ст20Гр02 = ПоказательПоСтроке("Пд132Пр1Ст20Гр02");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст2Гр01 = ПоказательПоСтроке("Пд132Пр1Ст2Гр01");
	Пд132Пр1Ст3Гр01 = ПоказательПоСтроке("Пд132Пр1Ст3Гр01");
	Пд132Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст1Гр01ПРП");
	Пд132Пр1Ст2Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст2Гр01ПРП");
	Пд132Пр1Ст3Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст3Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд132Пр1Ст20Гр01,СуммаПд132Пр1Ст20Гр01ПРП,СуммаПд132Пр1Ст20Гр02");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр02, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст2Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст3Гр01, Инд);
			
			Ключ = Прав(" " + Пд132Пр1Ст1Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст2Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст3Гр01.Значение, 1);
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд132Пр1Ст20Гр01 = Группа.СуммаПд132Пр1Ст20Гр01 + Пд132Пр1Ст20Гр01.Значение;
			Группа.СуммаПд132Пр1Ст20Гр02 = Группа.СуммаПд132Пр1Ст20Гр02 + Пд132Пр1Ст20Гр02.Значение;
			Группа.СуммаПд132Пр1Ст20Гр01Стр = Группа.СуммаПд132Пр1Ст20Гр01Стр + Пд132Пр1Ст20Гр01.ЗначениеСтр + " + ";
			Группа.СуммаПд132Пр1Ст20Гр02Стр = Группа.СуммаПд132Пр1Ст20Гр02Стр + Пд132Пр1Ст20Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст20Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст2Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст3Гр01ПРП, ИндПРП);
				
				Ключ = Прав(" " + Пд132Пр1Ст1Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст2Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст3Гр01ПРП.Значение, 1);
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд132Пр1Ст20Гр01ПРП = Группа.СуммаПд132Пр1Ст20Гр01ПРП + Пд132Пр1Ст20Гр01ПРП.Значение;
				Группа.СуммаПд132Пр1Ст20Гр01ПРПСтр = Группа.СуммаПд132Пр1Ст20Гр01ПРПСтр + Пд132Пр1Ст20Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд132Пр1Ст20Гр01, Группа.СуммаПд132Пр1Ст20Гр01ПРП + Группа.СуммаПд132Пр1Ст20Гр02);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст20Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
			+ РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст20Гр01ПРПСтр + Группа.СуммаПд132Пр1Ст20Гр02Стр)
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_164(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.164)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.3.2 прил. 1 р. 1) = гр. 3 ст. 020 подр. 1.3.2 прил. 1 р. 1 + гр. 4 ст. 020 "
		+ "подр. 1.3.2 прил. 1 р. 1 + гр. 5 ст. 020 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС по п.3.ст.248 НК РФ за последние три месяца отчетного "
		+ "периода ≠ сумме выплат по доп.тарифу на ОПС по п.3.ст.248 НК РФ за каждый из трех месяцев'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр02 = Пд132Пр1Ст20Гр03 + Пд132Пр1Ст20Гр04 + Пд132Пр1Ст20Гр05'.
	
	Пд132Пр1Ст20Гр02 = ПоказательПоСтроке("Пд132Пр1Ст20Гр02");
	Пд132Пр1Ст20Гр03 = ПоказательПоСтроке("Пд132Пр1Ст20Гр03");
	Пд132Пр1Ст20Гр04 = ПоказательПоСтроке("Пд132Пр1Ст20Гр04");
	Пд132Пр1Ст20Гр05 = ПоказательПоСтроке("Пд132Пр1Ст20Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст20Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр02.Значение, Пд132Пр1Ст20Гр03.Значение + Пд132Пр1Ст20Гр04.Значение + Пд132Пр1Ст20Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд132Пр1Ст20Гр03.ЗначениеСтр + " + " + Пд132Пр1Ст20Гр04.ЗначениеСтр + " + "
				+ Пд132Пр1Ст20Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_165(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.165)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.3.2 прил. 1 р. 1) >= гр. 1 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС по п.3.ст.248 НК РФ за отчетный период меньше суммы "
		+ "выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за отчетный период'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр01 >= Пд132Пр1Ст30Гр01'.
	
	Пд132Пр1Ст20Гр01 = ПоказательПоСтроке("Пд132Пр1Ст20Гр01");
	Пд132Пр1Ст30Гр01 = ПоказательПоСтроке("Пд132Пр1Ст30Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст20Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр01.Значение, Пд132Пр1Ст30Гр01.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_166(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.166)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.3.2 прил. 1 р. 1) >= гр. 2 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС по п.3.ст.248 НК РФ за последние три месяца отчетного "
		+ "периода меньше суммы выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за последние три "
		+ "месяца отчетного периода'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр02 >= Пд132Пр1Ст30Гр02'.
	
	Пд132Пр1Ст20Гр02 = ПоказательПоСтроке("Пд132Пр1Ст20Гр02");
	Пд132Пр1Ст30Гр02 = ПоказательПоСтроке("Пд132Пр1Ст30Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст20Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр02.Значение, Пд132Пр1Ст30Гр02.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_167(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.167)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за 1 месяц (гр. 3 "
		+ "ст. 020 подр. 1.3.2 прил. 1 р. 1) >= гр. 3 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 1-й последний месяц отчетного "
		+ "периода меньше суммы выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за 1-й последний "
		+ "месяц отчетного периода'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр03 >= Пд132Пр1Ст30Гр03'.
	
	Пд132Пр1Ст20Гр03 = ПоказательПоСтроке("Пд132Пр1Ст20Гр03");
	Пд132Пр1Ст30Гр03 = ПоказательПоСтроке("Пд132Пр1Ст30Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст20Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр03.Значение, Пд132Пр1Ст30Гр03.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_168(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.168)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за 2 месяц (гр. 4 "
		+ "ст. 020 подр. 1.3.2 прил. 1 р. 1) >= гр. 4 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 2-й последний месяц отчетного "
		+ "периода меньше суммы выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за 2-й последний "
		+ "месяц отчетного периода'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр04 >= Пд132Пр1Ст30Гр04'.
	
	Пд132Пр1Ст20Гр04 = ПоказательПоСтроке("Пд132Пр1Ст20Гр04");
	Пд132Пр1Ст30Гр04 = ПоказательПоСтроке("Пд132Пр1Ст30Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст20Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр04.Значение, Пд132Пр1Ст30Гр04.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_169(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.169)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц за 3 месяц (гр. 5 "
		+ "ст. 020 подр. 1.3.2 прил. 1 р. 1) >= гр. 5 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 3-й последний месяц отчетного "
		+ "периода меньше суммы выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за 3-й последний "
		+ "месяц отчетного периода'");
	
	// Формула КС кратко: 'Пд132Пр1Ст20Гр05 >= Пд132Пр1Ст30Гр05'.
	
	Пд132Пр1Ст20Гр05 = ПоказательПоСтроке("Пд132Пр1Ст20Гр05");
	Пд132Пр1Ст30Гр05 = ПоказательПоСтроке("Пд132Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст20Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст20Гр05.Значение, Пд132Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_170(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.170)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами, всего (гр. 1 ст. 030 подр. 1.3.2 "
		+ "прил. 1 р. 1 отчетного периода) = гр. 1 ст. 030 подр. 1.3.2 прил. 1 р. 1 предыдущего отчетного периода + гр. "
		+ "2 ст. 030 подр. 1.3.2 прил. 1 р. 1 отчетного периода по каждой соответствующей комбинации значений ст. 001, "
		+ "ст. 002, ст. 003 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлеж. облож. по доп. тарифу на ОПС по п.3.ст.248 НК РФ за отчетный "
		+ "период ≠ сумме выплат, не подлеж. облож. по доп. тарифу на ОПС по п. 3.ст. 248 НК РФ за предыдущий отчетный "
		+ "период и за последние три месяца отчетного периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст30Гр01 = Пд132Пр1Ст30Гр01ПРП + Пд132Пр1Ст30Гр02'.
	
	Пд132Пр1Ст30Гр01 = ПоказательПоСтроке("Пд132Пр1Ст30Гр01");
	Пд132Пр1Ст30Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст30Гр01ПРП");
	Пд132Пр1Ст30Гр02 = ПоказательПоСтроке("Пд132Пр1Ст30Гр02");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст2Гр01 = ПоказательПоСтроке("Пд132Пр1Ст2Гр01");
	Пд132Пр1Ст3Гр01 = ПоказательПоСтроке("Пд132Пр1Ст3Гр01");
	Пд132Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст1Гр01ПРП");
	Пд132Пр1Ст2Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст2Гр01ПРП");
	Пд132Пр1Ст3Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст3Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд132Пр1Ст30Гр01,СуммаПд132Пр1Ст30Гр01ПРП,СуммаПд132Пр1Ст30Гр02");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр02, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст2Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст3Гр01, Инд);
			
			Ключ = Прав(" " + Пд132Пр1Ст1Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст2Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст3Гр01.Значение, 1);
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд132Пр1Ст30Гр01 = Группа.СуммаПд132Пр1Ст30Гр01 + Пд132Пр1Ст30Гр01.Значение;
			Группа.СуммаПд132Пр1Ст30Гр02 = Группа.СуммаПд132Пр1Ст30Гр02 + Пд132Пр1Ст30Гр02.Значение;
			Группа.СуммаПд132Пр1Ст30Гр01Стр = Группа.СуммаПд132Пр1Ст30Гр01Стр + Пд132Пр1Ст30Гр01.ЗначениеСтр + " + ";
			Группа.СуммаПд132Пр1Ст30Гр02Стр = Группа.СуммаПд132Пр1Ст30Гр02Стр + Пд132Пр1Ст30Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст30Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст2Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст3Гр01ПРП, ИндПРП);
				
				Ключ = Прав(" " + Пд132Пр1Ст1Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст2Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст3Гр01ПРП.Значение, 1);
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд132Пр1Ст30Гр01ПРП = Группа.СуммаПд132Пр1Ст30Гр01ПРП + Пд132Пр1Ст30Гр01ПРП.Значение;
				Группа.СуммаПд132Пр1Ст30Гр01ПРПСтр = Группа.СуммаПд132Пр1Ст30Гр01ПРПСтр + Пд132Пр1Ст30Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд132Пр1Ст30Гр01, Группа.СуммаПд132Пр1Ст30Гр01ПРП + Группа.СуммаПд132Пр1Ст30Гр02);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст30Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
			+ РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст30Гр01ПРПСтр + Группа.СуммаПд132Пр1Ст30Гр02Стр)
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_171(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.171)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами за последние три месяца (гр. 2 ст. 030 "
		+ "подр. 1.3.2 прил. 1 р. 1) = гр. 3 ст. 030 подр. 1.3.2 прил. 1 р. 1 + гр. 4 ст. 030 подр. 1.3.2 прил. 1 р. 1 "
		+ "+ гр. 5 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлеж.облож по доп.тарифу на ОПС по п.3.ст.248 НК РФ за последние три "
		+ "месяца отчетного периода ≠ сумме выплат, не подлеж. облож. по доп. тарифу на ОПС по п. 3.ст. 248 НК РФ за "
		+ "каждый из трех месяцев'");
	
	// Формула КС кратко: 'Пд132Пр1Ст30Гр02 = Пд132Пр1Ст30Гр03 + Пд132Пр1Ст30Гр04 + Пд132Пр1Ст30Гр05'.
	
	Пд132Пр1Ст30Гр02 = ПоказательПоСтроке("Пд132Пр1Ст30Гр02");
	Пд132Пр1Ст30Гр03 = ПоказательПоСтроке("Пд132Пр1Ст30Гр03");
	Пд132Пр1Ст30Гр04 = ПоказательПоСтроке("Пд132Пр1Ст30Гр04");
	Пд132Пр1Ст30Гр05 = ПоказательПоСтроке("Пд132Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст30Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст30Гр02.Значение, Пд132Пр1Ст30Гр03.Значение + Пд132Пр1Ст30Гр04.Значение + Пд132Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд132Пр1Ст30Гр03.ЗначениеСтр + " + " + Пд132Пр1Ст30Гр04.ЗначениеСтр + " + "
				+ Пд132Пр1Ст30Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_172(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.172)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу, всего (гр. 1 ст. 040 "
		+ "подр. 1.3.2 прил. 1 р. 1) = гр. 1 ст. 020 подр. 1.3.2 прил. 1 р. 1 - гр. 1 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС по п.3.ст.248 НК РФ за отчетный период ≠ разнице всех выплат и "
		+ "выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за отчетный период'");
	
	// Формула КС кратко: 'Пд132Пр1Ст40Гр01 = Пд132Пр1Ст20Гр01 - Пд132Пр1Ст30Гр01'.
	
	Пд132Пр1Ст40Гр01 = ПоказательПоСтроке("Пд132Пр1Ст40Гр01");
	Пд132Пр1Ст20Гр01 = ПоказательПоСтроке("Пд132Пр1Ст20Гр01");
	Пд132Пр1Ст30Гр01 = ПоказательПоСтроке("Пд132Пр1Ст30Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст40Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст40Гр01.Значение, Пд132Пр1Ст20Гр01.Значение - Пд132Пр1Ст30Гр01.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд132Пр1Ст20Гр01.ЗначениеСтр + " - " + Пд132Пр1Ст30Гр01.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_173(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.173)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу за последние три месяца "
		+ "(гр. 2 ст. 040 подр. 1.3.2 прил. 1 р. 1) = гр. 2 ст. 020 подр. 1.3.2 прил. 1 р. 1 - гр. 2 ст. 030 подр. "
		+ "1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС по п.3.ст.248 НК РФза 3 последних месяца ≠ разнице всех выплат "
		+ "и выплат, не подлеж.облож.по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за 3 последних месяца'");
	
	// Формула КС кратко: 'Пд132Пр1Ст40Гр02 = Пд132Пр1Ст20Гр02 - Пд132Пр1Ст30Гр02'.
	
	Пд132Пр1Ст40Гр02 = ПоказательПоСтроке("Пд132Пр1Ст40Гр02");
	Пд132Пр1Ст20Гр02 = ПоказательПоСтроке("Пд132Пр1Ст20Гр02");
	Пд132Пр1Ст30Гр02 = ПоказательПоСтроке("Пд132Пр1Ст30Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст40Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст40Гр02.Значение, Пд132Пр1Ст20Гр02.Значение - Пд132Пр1Ст30Гр02.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд132Пр1Ст20Гр02.ЗначениеСтр + " - " + Пд132Пр1Ст30Гр02.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_174(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.174)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу за 1 месяц (гр. 3 ст. 040 "
		+ "подр. 1.3.2 прил. 1 р. 1) = гр. 3 ст. 020 подр. 1.3.2 прил. 1 р. 1 - гр. 3 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 1-й последний месяц ≠ разнице всех "
		+ "выплат и выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за 1-й последний месяц'");
	
	// Формула КС кратко: 'Пд132Пр1Ст40Гр03 = Пд132Пр1Ст20Гр03 - Пд132Пр1Ст30Гр03'.
	
	Пд132Пр1Ст40Гр03 = ПоказательПоСтроке("Пд132Пр1Ст40Гр03");
	Пд132Пр1Ст20Гр03 = ПоказательПоСтроке("Пд132Пр1Ст20Гр03");
	Пд132Пр1Ст30Гр03 = ПоказательПоСтроке("Пд132Пр1Ст30Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст40Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст40Гр03.Значение, Пд132Пр1Ст20Гр03.Значение - Пд132Пр1Ст30Гр03.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд132Пр1Ст20Гр03.ЗначениеСтр + " - " + Пд132Пр1Ст30Гр03.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_175(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.175)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу за 2 месяц (гр. 4 ст. 040 "
		+ "подр. 1.3.2 прил. 1 р. 1) = гр. 4 ст. 020 подр. 1.3.2 прил. 1 р. 1 - гр. 4 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 2-й последний месяц ≠ разнице всех "
		+ "выплат и выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за 2-й последний месяц'");
	
	// Формула КС кратко: 'Пд132Пр1Ст40Гр04 = Пд132Пр1Ст20Гр04 - Пд132Пр1Ст30Гр04'.
	
	Пд132Пр1Ст40Гр04 = ПоказательПоСтроке("Пд132Пр1Ст40Гр04");
	Пд132Пр1Ст20Гр04 = ПоказательПоСтроке("Пд132Пр1Ст20Гр04");
	Пд132Пр1Ст30Гр04 = ПоказательПоСтроке("Пд132Пр1Ст30Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст40Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст40Гр04.Значение, Пд132Пр1Ст20Гр04.Значение - Пд132Пр1Ст30Гр04.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд132Пр1Ст20Гр04.ЗначениеСтр + " - " + Пд132Пр1Ст30Гр04.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_176(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.176)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов по дополнительному тарифу за 3 месяц (гр. 5 ст. 040 "
		+ "подр. 1.3.2 прил. 1 р. 1) = гр. 5 ст. 020 подр. 1.3.2 прил. 1 р. 1 - гр. 5 ст. 030 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по доп.тарифу на ОПС по п.3.ст.248 НК РФ за 3-й последний месяц ≠ разнице всех "
		+ "выплат и выплат, не подлеж.облож. по доп.тарифу на ОПС по п.3.ст.248 НК РФ, за 3-й последний месяц'");
	
	// Формула КС кратко: 'Пд132Пр1Ст40Гр05 = Пд132Пр1Ст20Гр05 - Пд132Пр1Ст30Гр05'.
	
	Пд132Пр1Ст40Гр05 = ПоказательПоСтроке("Пд132Пр1Ст40Гр05");
	Пд132Пр1Ст20Гр05 = ПоказательПоСтроке("Пд132Пр1Ст20Гр05");
	Пд132Пр1Ст30Гр05 = ПоказательПоСтроке("Пд132Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст40Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст20Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст30Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст40Гр05.Значение, Пд132Пр1Ст20Гр05.Значение - Пд132Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд132Пр1Ст20Гр05.ЗначениеСтр + " - " + Пд132Пр1Ст30Гр05.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_177(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.177)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов по дополнительному тарифу, всего (гр. 1 ст. 050 подр. 1.3.2 "
		+ "прил. 1 р. 1 отчетного периода) = гр. 1 ст. 050 подр. 1.3.2 прил. 1 р. 1 предыдущего отчетного периода + гр. "
		+ "2 ст. 050 подр. 1.3.2 прил. 1 р. 1 отчетного периода по каждой соответствующей комбинации значений ст. 001, "
		+ "ст. 002, ст. 003 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы по доп.тарифу на ОПС по п.3.ст.248 НК РФ за отчетный период ≠ сумме "
		+ "страховых взносов по доп.тарифу на ОПС по п.3.ст.248 НК РФ за предыдущий отчетный период и за последние три "
		+ "месяца отчетного периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд132Пр1Ст50Гр01 = Пд132Пр1Ст50Гр01ПРП + Пд132Пр1Ст50Гр02'.
	
	Пд132Пр1Ст50Гр01 = ПоказательПоСтроке("Пд132Пр1Ст50Гр01");
	Пд132Пр1Ст50Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст50Гр01ПРП");
	Пд132Пр1Ст50Гр02 = ПоказательПоСтроке("Пд132Пр1Ст50Гр02");
	Пд132Пр1Ст1Гр01 = ПоказательПоСтроке("Пд132Пр1Ст1Гр01");
	Пд132Пр1Ст2Гр01 = ПоказательПоСтроке("Пд132Пр1Ст2Гр01");
	Пд132Пр1Ст3Гр01 = ПоказательПоСтроке("Пд132Пр1Ст3Гр01");
	Пд132Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст1Гр01ПРП");
	Пд132Пр1Ст2Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст2Гр01ПРП");
	Пд132Пр1Ст3Гр01ПРП = ПоказательПоСтроке("Пд132Пр1Ст3Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд132Пр1Ст50Гр01,СуммаПд132Пр1Ст50Гр01ПРП,СуммаПд132Пр1Ст50Гр02");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр02, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст1Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст2Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст3Гр01, Инд);
			
			Ключ = Прав(" " + Пд132Пр1Ст1Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст2Гр01.Значение, 1)
				 + Прав(" " + Пд132Пр1Ст3Гр01.Значение, 1);
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр01, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд132Пр1Ст50Гр01 = Группа.СуммаПд132Пр1Ст50Гр01 + Пд132Пр1Ст50Гр01.Значение;
			Группа.СуммаПд132Пр1Ст50Гр02 = Группа.СуммаПд132Пр1Ст50Гр02 + Пд132Пр1Ст50Гр02.Значение;
			Группа.СуммаПд132Пр1Ст50Гр01Стр = Группа.СуммаПд132Пр1Ст50Гр01Стр + Пд132Пр1Ст50Гр01.ЗначениеСтр + " + ";
			Группа.СуммаПд132Пр1Ст50Гр02Стр = Группа.СуммаПд132Пр1Ст50Гр02Стр + Пд132Пр1Ст50Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст50Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст1Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст2Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд132Пр1Ст3Гр01ПРП, ИндПРП);
				
				Ключ = Прав(" " + Пд132Пр1Ст1Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст2Гр01ПРП.Значение, 1)
					 + Прав(" " + Пд132Пр1Ст3Гр01ПРП.Значение, 1);
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст2Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					ВнестиПоказательВРасшифровку(Пд132Пр1Ст3Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр01ПРП, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд132Пр1Ст50Гр01ПРП = Группа.СуммаПд132Пр1Ст50Гр01ПРП + Пд132Пр1Ст50Гр01ПРП.Значение;
				Группа.СуммаПд132Пр1Ст50Гр01ПРПСтр = Группа.СуммаПд132Пр1Ст50Гр01ПРПСтр + Пд132Пр1Ст50Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд132Пр1Ст50Гр01, Группа.СуммаПд132Пр1Ст50Гр01ПРП + Группа.СуммаПд132Пр1Ст50Гр02);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст50Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
			+ РасшифровкаВСтр(Группа.СуммаПд132Пр1Ст50Гр01ПРПСтр + Группа.СуммаПд132Пр1Ст50Гр02Стр)
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_178(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.3.2 прил. 1 к Разделу 1 (КС 1.178)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов по дополнительному тарифу за последние три месяца (гр. 2 ст. "
		+ "050 подр. 1.3.2 прил. 1 р. 1 СВ) = гр. 3 ст. 050 подр. 1.3.2 прил. 1 р. 1 + гр. 4 ст. 050 подр. 1.3.2 прил. "
		+ "1 р. 1 + гр. 5 ст. 050 подр. 1.3.2 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы по доп.тарифу на ОПС по п.3.ст.248 НК РФ за последние три месяца "
		+ "отчетного периода ≠ страховым взносам по доп.тарифу на ОПС по п.3.ст.248 НК РФ за каждый из трех последних "
		+ "месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд132Пр1Ст50Гр02 = Пд132Пр1Ст50Гр03 + Пд132Пр1Ст50Гр04 + Пд132Пр1Ст50Гр05'.
	
	Пд132Пр1Ст50Гр02 = ПоказательПоСтроке("Пд132Пр1Ст50Гр02");
	Пд132Пр1Ст50Гр03 = ПоказательПоСтроке("Пд132Пр1Ст50Гр03");
	Пд132Пр1Ст50Гр04 = ПоказательПоСтроке("Пд132Пр1Ст50Гр04");
	Пд132Пр1Ст50Гр05 = ПоказательПоСтроке("Пд132Пр1Ст50Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст50Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр02, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст50Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст50Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд132Пр1Ст50Гр02.Значение, Пд132Пр1Ст50Гр03.Значение + Пд132Пр1Ст50Гр04.Значение + Пд132Пр1Ст50Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд132Пр1Ст50Гр03.ЗначениеСтр + " + " + Пд132Пр1Ст50Гр04.ЗначениеСтр + " + "
				+ Пд132Пр1Ст50Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_179(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.179)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.4 прил. 1 р. 1) = гр. 3 ст. 020 подр. 1.4 прил. 1 р. 1 + гр. 4 ст. 020 подр. "
		+ "1.4 прил. 1 р. 1 + гр. 5 ст. 020 подр. 1.4 прил. 1 р. 1 по каждому соответствующему значению ст. 001 подр. "
		+ "1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты по страховым взносам на ДСО членов летных экипажей за последние три месяца "
		+ "отчетного периода ≠ сумме выплат по страховым взносам на ДСО членов летных экипажей за каждый из трех "
		+ "последних месяцев отчетного периода, по каждому основанию'");
	
	// Формула КС кратко: 'Пд14Пр1Ст20Гр02 = Пд14Пр1Ст20Гр03 + Пд14Пр1Ст20Гр04 + Пд14Пр1Ст20Гр05'.
	
	Пд14Пр1Ст20Гр02 = ПоказательПоСтроке("Пд14Пр1Ст20Гр02");
	Пд14Пр1Ст20Гр03 = ПоказательПоСтроке("Пд14Пр1Ст20Гр03");
	Пд14Пр1Ст20Гр04 = ПоказательПоСтроке("Пд14Пр1Ст20Гр04");
	Пд14Пр1Ст20Гр05 = ПоказательПоСтроке("Пд14Пр1Ст20Гр05");
	Пд14Пр1Ст1Гр01 = ПоказательПоСтроке("Пд14Пр1Ст1Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст1Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст1Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр03, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр04, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр05, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст20Гр02.Значение, Пд14Пр1Ст20Гр03.Значение + Пд14Пр1Ст20Гр04.Значение + Пд14Пр1Ст20Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд14Пр1Ст20Гр03.ЗначениеСтр + " + " + Пд14Пр1Ст20Гр04.ЗначениеСтр + " + " + Пд14Пр1Ст20Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_180(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.180)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 подр. 1.4 прил. 1 р. 1) >= гр. 1 ст. 030 подр. 1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты по страховым взносам на ДСО членов летных экипажей за отчетный период меньше "
		+ "выплат, не подлежащих обложению страховыми взносами на ДСО членов летных экипажей за отчетный период'");
	
	// Формула КС кратко: 'Пд14Пр1Ст20Гр01 >= Пд14Пр1Ст30Гр01'.
	
	Пд14Пр1Ст20Гр01 = ПоказательПоСтроке("Пд14Пр1Ст20Гр01");
	Пд14Пр1Ст30Гр01 = ПоказательПоСтроке("Пд14Пр1Ст30Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст20Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст20Гр01.Значение, Пд14Пр1Ст30Гр01.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_181(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.181)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 подр. 1.4 прил. 1 р. 1) >= гр. 2 ст. 030 подр. 1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты по страховым взносам на ДСО членов летных экипажей за 3 последних месяца "
		+ "отчетного периода меньше выплат, не подлежащих обложению страховыми взносами на ДСО членов летных экипажей "
		+ "за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Пд14Пр1Ст20Гр02 >= Пд14Пр1Ст30Гр02'.
	
	Пд14Пр1Ст20Гр02 = ПоказательПоСтроке("Пд14Пр1Ст20Гр02");
	Пд14Пр1Ст30Гр02 = ПоказательПоСтроке("Пд14Пр1Ст30Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст20Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст20Гр02.Значение, Пд14Пр1Ст30Гр02.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_182(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.182)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 1 месяц (гр. 3 "
		+ "ст. 020 подр. 1.4 прил. 1 р. 1) >= гр. 3 ст. 030 подр. 1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты по страховым взнсоам на ДСО членов летных экипажей за 1-й месяц из 3-х последних "
		+ "месяцев отчетного периода меньше выплат, не подлежащих обложению страховыми взносами на ДСО членов летных "
		+ "экипажей за 1-й месяц из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд14Пр1Ст20Гр03 >= Пд14Пр1Ст30Гр03'.
	
	Пд14Пр1Ст20Гр03 = ПоказательПоСтроке("Пд14Пр1Ст20Гр03");
	Пд14Пр1Ст30Гр03 = ПоказательПоСтроке("Пд14Пр1Ст30Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст20Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр03, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр03, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст20Гр03.Значение, Пд14Пр1Ст30Гр03.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_183(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.183)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 2 месяц (гр. 4 "
		+ "ст. 020 подр. 1.4 прил. 1 р. 1) >= гр. 4 ст. 030 подр. 1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты по страховым взнсоам на ДСО членов летных экипажей за 2-й месяц из 3-х последних "
		+ "месяцев отчетного периода меньше выплат, не подлежащих обложению страховыми взносами на ДСО членов летных "
		+ "экипажей за 2-й месяц из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд14Пр1Ст20Гр04 >= Пд14Пр1Ст30Гр04'.
	
	Пд14Пр1Ст20Гр04 = ПоказательПоСтроке("Пд14Пр1Ст20Гр04");
	Пд14Пр1Ст30Гр04 = ПоказательПоСтроке("Пд14Пр1Ст30Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст20Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр04, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр04, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст20Гр04.Значение, Пд14Пр1Ст30Гр04.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_184(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.184)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 3 месяц (гр. 5 "
		+ "ст. 020 подр. 1.4 прил. 1 р. 1) >= гр. 5 ст. 030 подр. 1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты по страховым взносам на ДСО членов летных экипажей за 3-й месяц из 3-х последних "
		+ "месяцев отчетного периода меньше выплат, не подлежащих обложению страховыми взносами на ДСО членов летных "
		+ "экипажей за 3-й месяц из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд14Пр1Ст20Гр05 >= Пд14Пр1Ст30Гр05'.
	
	Пд14Пр1Ст20Гр05 = ПоказательПоСтроке("Пд14Пр1Ст20Гр05");
	Пд14Пр1Ст30Гр05 = ПоказательПоСтроке("Пд14Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст20Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр05, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр05, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст20Гр05.Значение, Пд14Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
			
			Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_185(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.185)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами, всего (гр. 1 ст. 030 подр. 1.4 прил. "
		+ "1 р. 1 отчетного периода) = гр. 1 ст. 030 подр. 1.4 прил. 1 р. 1 предыдущего отчетного периода + гр. 2 ст. "
		+ "030 подр. 1.4 прил. 1 р. 1 отчетного периода по каждому соответствующему значению ст. 001 подр. 1.4 прил. 1 "
		+ "р. 1 СВ'");
	ОписаниеОшибки = НСтр("ru='Выплаты, не подлежащие обложению страховыми взносами на ДСО членов летных экипажей за "
		+ "отчетный период ≠ сумме выплат, не подлежащих обложению страховыми взносами на ДСО членов летных экипажей, "
		+ "за предыдущий отчетный период и за последние три месяца отчетного периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд14Пр1Ст30Гр01 = Пд14Пр1Ст30Гр01ПРП + Пд14Пр1Ст30Гр02'.
	
	Пд14Пр1Ст30Гр01 = ПоказательПоСтроке("Пд14Пр1Ст30Гр01");
	Пд14Пр1Ст30Гр01ПРП = ПоказательПоСтроке("Пд14Пр1Ст30Гр01ПРП");
	Пд14Пр1Ст30Гр02 = ПоказательПоСтроке("Пд14Пр1Ст30Гр02");
	Пд14Пр1Ст1Гр01 = ПоказательПоСтроке("Пд14Пр1Ст1Гр01");
	Пд14Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд14Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд14Пр1Ст30Гр01,СуммаПд14Пр1Ст30Гр01ПРП,СуммаПд14Пр1Ст30Гр02");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр02, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст1Гр01, Инд);
			
			Ключ = Пд14Пр1Ст1Гр01.Значение;
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд14Пр1Ст1Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд14Пр1Ст30Гр01 = Группа.СуммаПд14Пр1Ст30Гр01 + Пд14Пр1Ст30Гр01.Значение;
			Группа.СуммаПд14Пр1Ст30Гр02 = Группа.СуммаПд14Пр1Ст30Гр02 + Пд14Пр1Ст30Гр02.Значение;
			Группа.СуммаПд14Пр1Ст30Гр01Стр = Группа.СуммаПд14Пр1Ст30Гр01Стр + Пд14Пр1Ст30Гр01.ЗначениеСтр + " + ";
			Группа.СуммаПд14Пр1Ст30Гр02Стр = Группа.СуммаПд14Пр1Ст30Гр02Стр + Пд14Пр1Ст30Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд14Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд14Пр1Ст30Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд14Пр1Ст1Гр01ПРП, ИндПРП);
				
				Ключ = Пд14Пр1Ст1Гр01ПРП.Значение;
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд14Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_4", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр01ПРП, "Раздел1Прил1Подр1_4", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд14Пр1Ст30Гр01ПРП = Группа.СуммаПд14Пр1Ст30Гр01ПРП + Пд14Пр1Ст30Гр01ПРП.Значение;
				Группа.СуммаПд14Пр1Ст30Гр01ПРПСтр = Группа.СуммаПд14Пр1Ст30Гр01ПРПСтр + Пд14Пр1Ст30Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд14Пр1Ст30Гр01, Группа.СуммаПд14Пр1Ст30Гр01ПРП + Группа.СуммаПд14Пр1Ст30Гр02);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд14Пр1Ст30Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
			+ РасшифровкаВСтр(Группа.СуммаПд14Пр1Ст30Гр01ПРПСтр + Группа.СуммаПд14Пр1Ст30Гр02Стр)
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_186(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.186)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами за последние три месяца (гр. 2 ст. 030 "
		+ "подр. 1.4 прил. 1 р. 1) = гр. 3 ст. 030 подр. 1.4 прил. 1 р. 1 + гр. 4 ст. 030 подр. 1.4 прил. 1 р. 1 + гр. "
		+ "5 ст. 030 подр. 1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, не подлежащие обложению страховыми взносами на ДСО членов летных экипажей за "
		+ "последние три месяца отчетного периода ≠ сумме выплат, не подлежащих обложению страховыми взносами на ДСО "
		+ "членов летных экипажей, за каждый из трех последних месяцев отчетного периода.'");
	
	// Формула КС кратко: 'Пд14Пр1Ст30Гр02 = Пд14Пр1Ст30Гр03 + Пд14Пр1Ст30Гр04 + Пд14Пр1Ст30Гр05'.
	
	Пд14Пр1Ст30Гр02 = ПоказательПоСтроке("Пд14Пр1Ст30Гр02");
	Пд14Пр1Ст30Гр03 = ПоказательПоСтроке("Пд14Пр1Ст30Гр03");
	Пд14Пр1Ст30Гр04 = ПоказательПоСтроке("Пд14Пр1Ст30Гр04");
	Пд14Пр1Ст30Гр05 = ПоказательПоСтроке("Пд14Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст30Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр03, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр04, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр05, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст30Гр02.Значение, Пд14Пр1Ст30Гр03.Значение + Пд14Пр1Ст30Гр04.Значение + Пд14Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд14Пр1Ст30Гр03.ЗначениеСтр + " + " + Пд14Пр1Ст30Гр04.ЗначениеСтр + " + "
				+ Пд14Пр1Ст30Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_187(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.187)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов на дополнительное социальное обеспечение, всего "
		+ "(гр. 1 ст. 040 подр. 1.4 прил. 1 р. 1) = гр. 1 ст. 020 подр. 1.4 прил. 1 р. 1 - гр. 1 ст. 030 подр. 1.4 "
		+ "прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ДСО членов летных экипажей за отчетный период ≠ разнице всех "
		+ "выплат и выплат, не подлежащих обложению страховыми взносами на ДСО членов летных экипажей, за отчетный период'");
	
	// Формула КС кратко: 'Пд14Пр1Ст40Гр01 = Пд14Пр1Ст20Гр01 - Пд14Пр1Ст30Гр01'.
	
	Пд14Пр1Ст40Гр01 = ПоказательПоСтроке("Пд14Пр1Ст40Гр01");
	Пд14Пр1Ст20Гр01 = ПоказательПоСтроке("Пд14Пр1Ст20Гр01");
	Пд14Пр1Ст30Гр01 = ПоказательПоСтроке("Пд14Пр1Ст30Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст40Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст40Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст40Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст40Гр01.Значение, Пд14Пр1Ст20Гр01.Значение - Пд14Пр1Ст30Гр01.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд14Пр1Ст20Гр01.ЗначениеСтр + " - " + Пд14Пр1Ст30Гр01.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_188(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.188)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов на дополнительное социальное обеспечение за "
		+ "последние три месяца (гр. 2 ст. 040 подр. 1.4 прил. 1 р. 1) = гр. 2 ст. 020 подр. 1.4 прил. 1 р. 1 - гр. 2 "
		+ "ст. 030 подр. 1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ДСО членов летных экипажей за 3 последних месяца ≠ разнице "
		+ "всех выплат и выплат, не подлежащих обложению страховыми взносами на ДСО членов летных экипажей, за 3 "
		+ "последних месяца'");
	
	// Формула КС кратко: 'Пд14Пр1Ст40Гр02 = Пд14Пр1Ст20Гр02 - Пд14Пр1Ст30Гр02'.
	
	Пд14Пр1Ст40Гр02 = ПоказательПоСтроке("Пд14Пр1Ст40Гр02");
	Пд14Пр1Ст20Гр02 = ПоказательПоСтроке("Пд14Пр1Ст20Гр02");
	Пд14Пр1Ст30Гр02 = ПоказательПоСтроке("Пд14Пр1Ст30Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст40Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст40Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст40Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст40Гр02.Значение, Пд14Пр1Ст20Гр02.Значение - Пд14Пр1Ст30Гр02.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд14Пр1Ст20Гр02.ЗначениеСтр + " - " + Пд14Пр1Ст30Гр02.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_189(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.189)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов на дополнительное социальное обеспечение за 1 месяц "
		+ "(гр. 3 ст. 040 подр. 1.4 прил. 1 р. 1) = гр. 3 ст. 020 подр. 1.4 прил. 1 р. 1 - гр. 3 ст. 030 подр. 1.4 "
		+ "прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ДСО членов летных экипажей за 1-й последний месяц ≠ разнице "
		+ "всех выплат и выплат, не подлежащих обложению страховыми взносами на ДСО членов летных экипажей, за 1-й "
		+ "последний месяц'");
	
	// Формула КС кратко: 'Пд14Пр1Ст40Гр03 = Пд14Пр1Ст20Гр03 - Пд14Пр1Ст30Гр03'.
	
	Пд14Пр1Ст40Гр03 = ПоказательПоСтроке("Пд14Пр1Ст40Гр03");
	Пд14Пр1Ст20Гр03 = ПоказательПоСтроке("Пд14Пр1Ст20Гр03");
	Пд14Пр1Ст30Гр03 = ПоказательПоСтроке("Пд14Пр1Ст30Гр03");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст40Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст40Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст40Гр03, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр03, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр03, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст40Гр03.Значение, Пд14Пр1Ст20Гр03.Значение - Пд14Пр1Ст30Гр03.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд14Пр1Ст20Гр03.ЗначениеСтр + " - " + Пд14Пр1Ст30Гр03.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_190(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.190)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов на дополнительное социальное обеспечение за 2 месяц "
		+ "(гр. 4 ст. 040 подр. 1.4 прил. 1 р. 1) = гр. 4 ст. 020 подр. 1.4 прил. 1 р. 1 - гр. 4 ст. 030 подр. 1.4 "
		+ "прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ДСО членов летных экипажей за 2-й последний месяц ≠ разнице "
		+ "всех выплат и выплат, не подлежащих обложению страховыми взносами на ДСО членов летных экипажей, за 2-й "
		+ "последний месяц'");
	
	// Формула КС кратко: 'Пд14Пр1Ст40Гр04 = Пд14Пр1Ст20Гр04 - Пд14Пр1Ст30Гр04'.
	
	Пд14Пр1Ст40Гр04 = ПоказательПоСтроке("Пд14Пр1Ст40Гр04");
	Пд14Пр1Ст20Гр04 = ПоказательПоСтроке("Пд14Пр1Ст20Гр04");
	Пд14Пр1Ст30Гр04 = ПоказательПоСтроке("Пд14Пр1Ст30Гр04");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст40Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст40Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст40Гр04, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр04, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр04, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст40Гр04.Значение, Пд14Пр1Ст20Гр04.Значение - Пд14Пр1Ст30Гр04.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд14Пр1Ст20Гр04.ЗначениеСтр + " - " + Пд14Пр1Ст30Гр04.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_191(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.191)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов на дополнительное социальное обеспечение за 3 месяц "
		+ "(гр. 5 ст. 040 подр. 1.4 прил. 1 р. 1) = гр. 5 ст. 020 подр. 1.4 прил. 1 р. 1 - гр. 5 ст. 030 подр. 1.4 "
		+ "прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ДСО членов летных экипажей за 3-й последний месяц ≠ разнице "
		+ "всех выплат и выплат, не подлежащих обложению страховыми взносами на ДСО членов летных экипажей за 3-й "
		+ "последний месяц'");
	
	// Формула КС кратко: 'Пд14Пр1Ст40Гр05 = Пд14Пр1Ст20Гр05 - Пд14Пр1Ст30Гр05'.
	
	Пд14Пр1Ст40Гр05 = ПоказательПоСтроке("Пд14Пр1Ст40Гр05");
	Пд14Пр1Ст20Гр05 = ПоказательПоСтроке("Пд14Пр1Ст20Гр05");
	Пд14Пр1Ст30Гр05 = ПоказательПоСтроке("Пд14Пр1Ст30Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст40Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст40Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст40Гр05, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст20Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст20Гр05, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст30Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст30Гр05, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст40Гр05.Значение, Пд14Пр1Ст20Гр05.Значение - Пд14Пр1Ст30Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд14Пр1Ст20Гр05.ЗначениеСтр + " - " + Пд14Пр1Ст30Гр05.ЗначениеСтр
				+ " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_192(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.192)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов на дополнительное социальное обеспечение, всего (гр. 1 ст. "
		+ "050 подр. 1.4 прил. 1 р. 1 отчетного периода) = гр. 1 ст. 050 подр. 1.4 прил. 1 р. 1 предыдущего отчетного "
		+ "периода + гр. 2 ст. 050 подр. 1.4 прил. 1 р. 1 отчетного периода по каждому соответствующему значению ст. "
		+ "001 подр. 1.4 прил. 1 р. 1 СВ'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ДСО членов летных экипажей за отчетный период ≠ сумме страховых "
		+ "взносов на ДСО членов летных экипажей за предыдущий отчетный период и за последние три месяца отчетного "
		+ "периода по каждому основанию'");
	
	// Формула КС кратко: 'Пд14Пр1Ст50Гр01 = Пд14Пр1Ст50Гр01ПРП + Пд14Пр1Ст50Гр02'.
	
	Пд14Пр1Ст50Гр01 = ПоказательПоСтроке("Пд14Пр1Ст50Гр01");
	Пд14Пр1Ст50Гр01ПРП = ПоказательПоСтроке("Пд14Пр1Ст50Гр01ПРП");
	Пд14Пр1Ст50Гр02 = ПоказательПоСтроке("Пд14Пр1Ст50Гр02");
	Пд14Пр1Ст1Гр01 = ПоказательПоСтроке("Пд14Пр1Ст1Гр01");
	Пд14Пр1Ст1Гр01ПРП = ПоказательПоСтроке("Пд14Пр1Ст1Гр01ПРП");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил1ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил1ПРП = мДанныеОтчетаПРП.Раздел1Прил1;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	Группы = ТаблицаГрупп("СуммаПд14Пр1Ст50Гр01,СуммаПд14Пр1Ст50Гр01ПРП,СуммаПд14Пр1Ст50Гр02");
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст1Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст50Гр01, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст50Гр02, Инд);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст1Гр01, Инд);
			
			Ключ = Пд14Пр1Ст1Гр01.Значение;
			Группа = Группы.Найти(Ключ, "Ключ");
			Если Группа = Неопределено Тогда
				СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
				Группа = Группы.Добавить();
				Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
				Группа.Ключ = Ключ;
				
				ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
				ВнестиПоказательВРасшифровку(Пд14Пр1Ст1Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			КонецЕсли;
			
			СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
			
			СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст50Гр01, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст50Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
			
			Группа.СуммаПд14Пр1Ст50Гр01 = Группа.СуммаПд14Пр1Ст50Гр01 + Пд14Пр1Ст50Гр01.Значение;
			Группа.СуммаПд14Пр1Ст50Гр02 = Группа.СуммаПд14Пр1Ст50Гр02 + Пд14Пр1Ст50Гр02.Значение;
			Группа.СуммаПд14Пр1Ст50Гр01Стр = Группа.СуммаПд14Пр1Ст50Гр01Стр + Пд14Пр1Ст50Гр01.ЗначениеСтр + " + ";
			Группа.СуммаПд14Пр1Ст50Гр02Стр = Группа.СуммаПд14Пр1Ст50Гр02Стр + Пд14Пр1Ст50Гр02.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		Для Каждого СтраницаРазделаПРП Из Раздел1Прил1ПРП Цикл
			ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
			НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
			КолвоСтрокВМногострочнойЧастиПРП = КоличествоСтрок(ДанныеСтраницыПРП, Пд14Пр1Ст1Гр01ПРП.Имя);
			Для ИндПРП = 1 По КолвоСтрокВМногострочнойЧастиПРП Цикл
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд14Пр1Ст50Гр01ПРП, ИндПРП);
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницыПРП, Пд14Пр1Ст1Гр01ПРП, ИндПРП);
				
				Ключ = Пд14Пр1Ст1Гр01ПРП.Значение;
				Группа = Группы.Найти(Ключ, "Ключ");
				Если Группа = Неопределено Тогда
					СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
					Группа = Группы.Добавить();
					Группа.СчетчикФормул = СчетчикФормулДляРасшифровок;
					Группа.Ключ = Ключ;
					
					ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
					ВнестиПоказательВРасшифровку(Пд14Пр1Ст1Гр01ПРП, "Раздел1Прил1Подр1_4", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				КонецЕсли;
				
				СохраненныйСчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок;
				
				СчетчикФормулДляРасшифровок = Группа.СчетчикФормул;
				ВнестиПоказательВРасшифровку(Пд14Пр1Ст50Гр01ПРП, "Раздел1Прил1Подр1_4", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
				
				СчетчикФормулДляРасшифровок = СохраненныйСчетчикФормулДляРасшифровок;
				
				Группа.СуммаПд14Пр1Ст50Гр01ПРП = Группа.СуммаПд14Пр1Ст50Гр01ПРП + Пд14Пр1Ст50Гр01ПРП.Значение;
				Группа.СуммаПд14Пр1Ст50Гр01ПРПСтр = Группа.СуммаПд14Пр1Ст50Гр01ПРПСтр + Пд14Пр1Ст50Гр01ПРП.ЗначениеСтр + " + ";
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Группа Из Группы Цикл
		
		КС = ПоказателиКС(Группа.СуммаПд14Пр1Ст50Гр01, Группа.СуммаПд14Пр1Ст50Гр01ПРП + Группа.СуммаПд14Пр1Ст50Гр02);
		Расшифровка = РасшифровкаВСтр(Группа.СуммаПд14Пр1Ст50Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "] = "
			+ РасшифровкаВСтр(Группа.СуммаПд14Пр1Ст50Гр01ПРПСтр + Группа.СуммаПд14Пр1Ст50Гр02Стр)
			+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
	КонецЦикла;
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_193(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка подраздела 1.4 прил. 1 к Разделу 1 (КС 1.193)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов на дополнительное социальное обеспечение за последние три "
		+ "месяца (гр. 2 ст. 050 подр. 1.4 прил. 1 р. 1) = гр. 3 ст. 050 подр. 1.4 прил. 1 р. 1 + гр. 4 ст. 050 подр. "
		+ "1.4 прил. 1 р. 1 + гр. 5 ст. 050 подр. 1.4 прил. 1 р. 1'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ДСО членов летных экипажей за последние три месяца отчетного периода "
		+ "≠ страховые взносы на ДСО членов летных экипажей за каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд14Пр1Ст50Гр02 = Пд14Пр1Ст50Гр03 + Пд14Пр1Ст50Гр04 + Пд14Пр1Ст50Гр05'.
	
	Пд14Пр1Ст50Гр02 = ПоказательПоСтроке("Пд14Пр1Ст50Гр02");
	Пд14Пр1Ст50Гр03 = ПоказательПоСтроке("Пд14Пр1Ст50Гр03");
	Пд14Пр1Ст50Гр04 = ПоказательПоСтроке("Пд14Пр1Ст50Гр04");
	Пд14Пр1Ст50Гр05 = ПоказательПоСтроке("Пд14Пр1Ст50Гр05");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд14Пр1Ст50Гр02.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
				
			СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
			ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
			
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст50Гр02, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст50Гр02, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст50Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст50Гр03, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст50Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст50Гр04, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд14Пр1Ст50Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд14Пр1Ст50Гр05, "Раздел1Прил1Подр1_4", НомерСтраницыСтр);
			
			КС = ПоказателиКС(Пд14Пр1Ст50Гр02.Значение, Пд14Пр1Ст50Гр03.Значение + Пд14Пр1Ст50Гр04.Значение + Пд14Пр1Ст50Гр05.Значение);
			Расшифровка = КС.ЛеваяЧастьСтр + " = " + Пд14Пр1Ст50Гр03.ЗначениеСтр + " + " + Пд14Пр1Ст50Гр04.ЗначениеСтр + " + "
				+ Пд14Пр1Ст50Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
			
			Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
				ЭтоОшибка = Ложь;
				ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
			Иначе
				ЭтоОшибка = Истина;
				ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
			КонецЕсли;
			
			ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
				Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
			
			СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
			СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_194(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.194)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц, всего (гр. 1 ст. 010 прил. 2 р. 1 отчетного периода) >= "
		+ "гр. 1 ст. 010 прил. 2 р. 1 предыдущего отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по страховым взносам на ОСС за отчетный период меньше кол-ва физ.лиц по "
		+ "страховым взносам на ОСС за предыдущий отчетный период'");
	
	// Формула КС кратко: 'Р1Прил2Ст10Гр01 >= Р1Прил2Ст10Гр01ПРП'.
	
	Р1Прил2Ст10Гр01 = ПоказательПоСтроке("Р1Прил2Ст10Гр01");
	Р1Прил2Ст10Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст10Гр01ПРП");
	Р1Прил2Ст1Гр01 = ПоказательПоСтроке("Р1Прил2Ст1Гр01");
	Р1Прил2Ст1Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст1Гр01ПРП");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст1Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст1Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст1Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст1Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст10Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	
	КС = ПоказателиКС(Р1Прил2Ст10Гр01.Значение, Р1Прил2Ст10Гр01ПРП.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр + ", когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_195(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.195)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц, всего (гр.1 ст. 010 прил. 2 р. 1) >= гр. 2 ст. 010 прил. 2 "
		+ "р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по страховым взносам на ОСС за отчетный период меньше кол-ва физ.лиц по "
		+ "страховым взносам на ОСС за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст10Гр01 >= Р1Прил2Ст10Гр02'.
	
	Р1Прил2Ст10Гр01 = ПоказательПоСтроке("Р1Прил2Ст10Гр01");
	Р1Прил2Ст10Гр02 = ПоказательПоСтроке("Р1Прил2Ст10Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст10Гр01.Значение, Р1Прил2Ст10Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_196(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.196)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр.2 ст. 010 прил. 2 р. 1) >= гр. "
		+ "3 ст. 010 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по страховым взносам на ОСС за 3 последних месяца отчетного периода меньше "
		+ "кол-ва физ.лиц по страховым взносам на ОСС за 1-й из последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст10Гр02 >= Р1Прил2Ст10Гр03'.
	
	Р1Прил2Ст10Гр02 = ПоказательПоСтроке("Р1Прил2Ст10Гр02");
	Р1Прил2Ст10Гр03 = ПоказательПоСтроке("Р1Прил2Ст10Гр03");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр03, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст10Гр02.Значение, Р1Прил2Ст10Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_197(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.197)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр.2 ст. 010 прил. 2 р. 1) >= гр. "
		+ "4 ст. 010 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по страховым взнсоам на ОСС за 3 последних месяца отчетного периода меньше "
		+ "кол-ва физ.лиц по страховым взносам на ОСС за 2-й из последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст10Гр02 >= Р1Прил2Ст10Гр04'.
	
	Р1Прил2Ст10Гр02 = ПоказательПоСтроке("Р1Прил2Ст10Гр02");
	Р1Прил2Ст10Гр04 = ПоказательПоСтроке("Р1Прил2Ст10Гр04");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр04, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст10Гр02.Значение, Р1Прил2Ст10Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_198(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.198)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц за последние три месяца (гр.2 ст. 010 прил. 2 р. 1) >= гр. "
		+ "5 ст. 010 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Кол-во физ.лиц по страховым взносам на ОСС за 3 последних месяца отчетного периода меньше "
		+ "кол-ва физ.лиц по страховым взносам на ОСС за 3-й из последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст10Гр02 >= Р1Прил2Ст10Гр05'.
	
	Р1Прил2Ст10Гр02 = ПоказательПоСтроке("Р1Прил2Ст10Гр02");
	Р1Прил2Ст10Гр05 = ПоказательПоСтроке("Р1Прил2Ст10Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст10Гр02.Значение, Р1Прил2Ст10Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_199(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.199)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 прил. 2 р. 1) > 0 если гр. 1 ст. 010 прил. 2 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОСС за отчетный период при наличии кол-ва "
		+ "физ.лиц по страховым взносам на ОСС за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр01 > 0, когда Р1Прил2Ст10Гр01 > 0'.
	
	Р1Прил2Ст20Гр01 = ПоказательПоСтроке("Р1Прил2Ст20Гр01");
	Р1Прил2Ст10Гр01 = ПоказательПоСтроке("Р1Прил2Ст10Гр01");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр01, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр01.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст10Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил2Ст10Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_200(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.200)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 прил. 2 р. 1) > 0 если гр. 2 ст. 010 прил. 2 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОСС за 3 посл.месяца при наличии кол-ва "
		+ "физ.лиц по страховым взносам на ОСС за 3 посл.месяца'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр02 > 0, когда Р1Прил2Ст10Гр02 > 0'.
	
	Р1Прил2Ст20Гр02 = ПоказательПоСтроке("Р1Прил2Ст20Гр02");
	Р1Прил2Ст10Гр02 = ПоказательПоСтроке("Р1Прил2Ст10Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст10Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил2Ст10Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_201(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.201)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 1 месяц (гр. 3 "
		+ "ст. 020 прил. 2 р. 1) > 0 если гр. 3 ст. 010 прил. 2 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОСС за 1-й из 3-х посл.месяцев при наличии "
		+ "кол-ва физ.лиц по страховым взносам на ОСС за 1-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр03 > 0, когда Р1Прил2Ст10Гр03 > 0'.
	
	Р1Прил2Ст20Гр03 = ПоказательПоСтроке("Р1Прил2Ст20Гр03");
	Р1Прил2Ст10Гр03 = ПоказательПоСтроке("Р1Прил2Ст10Гр03");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр03, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст10Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил2Ст10Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_202(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.202)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 2 месяц (гр. 4 "
		+ "ст. 020 прил. 2 р. 1) > 0 если гр. 4 ст. 010 прил. 2 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОСС за 2-й из 3-х посл.месяцев при наличии "
		+ "кол-ва физ.лиц по страховым взносам на ОСС за 2-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр04 > 0, когда Р1Прил2Ст10Гр04 > 0'.
	
	Р1Прил2Ст20Гр04 = ПоказательПоСтроке("Р1Прил2Ст20Гр04");
	Р1Прил2Ст10Гр04 = ПоказательПоСтроке("Р1Прил2Ст10Гр04");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр04, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст10Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил2Ст10Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_203(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.203)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 3 месяц (гр. 5 "
		+ "ст. 020 прил. 2 р. 1) > 0 если гр. 5 ст. 010 прил. 2 р. 1 > 0'");
	ОписаниеОшибки = НСтр("ru='Отсутствуют выплаты по страховым взносам на ОСС за 3-й из 3-х посл.месяцев при наличии "
		+ "кол-ва физ.лиц по страховым взносам на ОСС за 3-й из 3 посл.месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр05 > 0, когда Р1Прил2Ст10Гр05 > 0'.
	
	Р1Прил2Ст20Гр05 = ПоказательПоСтроке("Р1Прил2Ст20Гр05");
	Р1Прил2Ст10Гр05 = ПоказательПоСтроке("Р1Прил2Ст10Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр05.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил2Ст10Гр05.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил2Ст10Гр05.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_204(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.204)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 прил. 2 р. 1 отчетного периода) = гр. 1 ст. 020 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. "
		+ "020 прил. 1 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за отчетный период ≠ сумме выплат по страховым "
		+ "взносам на ОСС за предыдущий отчетный период и за последние три месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр01 = Р1Прил2Ст20Гр01ПРП + Р1Прил2Ст20Гр02'.
	
	Р1Прил2Ст20Гр01 = ПоказательПоСтроке("Р1Прил2Ст20Гр01");
	Р1Прил2Ст20Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст20Гр01ПРП");
	Р1Прил2Ст20Гр02 = ПоказательПоСтроке("Р1Прил2Ст20Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст20Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр01.Значение, Р1Прил2Ст20Гр01ПРП.Значение + Р1Прил2Ст20Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст20Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст20Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_205(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.205)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 прил. 2 р. 1) = гр. 3 ст. 020 прил. 2 р. 1 + гр. 4 ст. 020 прил. 2 р. 1 + гр. 5 ст. "
		+ "020 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за последние три месяца отчетного периода ≠ "
		+ "сумме выплат по страховым взносам на ОСС за каждый из трех месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр02 = Р1Прил2Ст20Гр03 + Р1Прил2Ст20Гр04 + Р1Прил2Ст20Гр05'.
	
	Р1Прил2Ст20Гр02 = ПоказательПоСтроке("Р1Прил2Ст20Гр02");
	Р1Прил2Ст20Гр03 = ПоказательПоСтроке("Р1Прил2Ст20Гр03");
	Р1Прил2Ст20Гр04 = ПоказательПоСтроке("Р1Прил2Ст20Гр04");
	Р1Прил2Ст20Гр05 = ПоказательПоСтроке("Р1Прил2Ст20Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр02.Значение, Р1Прил2Ст20Гр03.Значение + Р1Прил2Ст20Гр04.Значение + Р1Прил2Ст20Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст20Гр03.ЗначениеСтр + " + " + Р1Прил2Ст20Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст20Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_206(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.206)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 прил. 2 р. 1) >= гр. 1 ст. 030 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за отчетный период меньше суммы выплат, не "
		+ "подлежащих обложению страховыми взносами на ОСС, за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр01 >= Р1Прил2Ст30Гр01'.
	
	Р1Прил2Ст20Гр01 = ПоказательПоСтроке("Р1Прил2Ст20Гр01");
	Р1Прил2Ст30Гр01 = ПоказательПоСтроке("Р1Прил2Ст30Гр01");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр01, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр01.Значение, Р1Прил2Ст30Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_207(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.207)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 прил. 2 р. 1) >= гр. 2 ст. 030 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за последние три месяца отчетного периода меньше "
		+ "суммы выплат, не подлежащих обложению страховыми взносами на ОСС, за последние три месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр02 >= Р1Прил2Ст30Гр02'.
	
	Р1Прил2Ст20Гр02 = ПоказательПоСтроке("Р1Прил2Ст20Гр02");
	Р1Прил2Ст30Гр02 = ПоказательПоСтроке("Р1Прил2Ст30Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр02.Значение, Р1Прил2Ст30Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_208(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.208)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 1 месяц (гр. 3 "
		+ "ст. 020 прил. 2 р. 1) >= гр. 3 ст. 030 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за 1-й последний месяц отчетного периода меньше "
		+ "суммы выплат, не подлежащих обложению по страховым взносам на ОСС, за 1-й последний месяц отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр03 >= Р1Прил2Ст30Гр03'.
	
	Р1Прил2Ст20Гр03 = ПоказательПоСтроке("Р1Прил2Ст20Гр03");
	Р1Прил2Ст30Гр03 = ПоказательПоСтроке("Р1Прил2Ст30Гр03");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр03, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр03.Значение, Р1Прил2Ст30Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_209(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.209)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 2 месяц (гр. 4 "
		+ "ст. 020 прил. 2 р. 1) >= гр. 4 ст. 030 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за 2-й последний месяц отчетного периода меньше "
		+ "суммы выплат, не подлежащих обложению страховыми взносами на ОСС, за 2-й последний месяц отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр04 >= Р1Прил2Ст30Гр04'.
	
	Р1Прил2Ст20Гр04 = ПоказательПоСтроке("Р1Прил2Ст20Гр04");
	Р1Прил2Ст30Гр04 = ПоказательПоСтроке("Р1Прил2Ст30Гр04");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр04, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр04.Значение, Р1Прил2Ст30Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_210(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.210)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 3 месяц (гр. 5 "
		+ "ст. 020 прил. 2 р. 1) >= гр. 5 ст. 030 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за 3-й последний месяц отчетного периода меньше "
		+ "суммы выплат, не подлежащих обложению страховыми взносами на ОСС, за 3-й последний месяц отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр05 >= Р1Прил2Ст30Гр05'.
	
	Р1Прил2Ст20Гр05 = ПоказательПоСтроке("Р1Прил2Ст20Гр05");
	Р1Прил2Ст30Гр05 = ПоказательПоСтроке("Р1Прил2Ст30Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр05.Значение, Р1Прил2Ст30Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_211(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.211)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, всего (гр. 1 ст. "
		+ "020 прил. 2 р. 1) >= гр. 1 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за отчетный период меньше суммы выплат, не "
		+ "подлежащих обложению страховыми взносами на ОСС, за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр01 >= Р1Прил2Ст40Гр01'.
	
	Р1Прил2Ст20Гр01 = ПоказательПоСтроке("Р1Прил2Ст20Гр01");
	Р1Прил2Ст40Гр01 = ПоказательПоСтроке("Р1Прил2Ст40Гр01");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр01, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр01.Значение, Р1Прил2Ст40Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_212(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.212)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за последние три "
		+ "месяца (гр. 2 ст. 020 прил. 2 р. 1) >= гр. 2 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за 3 последних месяца меньше суммы выплат, не "
		+ "подлежащих обложению страховыми взносами на ОСС, за 3 последних месяца'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр02 >= Р1Прил2Ст40Гр02'.
	
	Р1Прил2Ст20Гр02 = ПоказательПоСтроке("Р1Прил2Ст20Гр02");
	Р1Прил2Ст40Гр02 = ПоказательПоСтроке("Р1Прил2Ст40Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр02.Значение, Р1Прил2Ст40Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_213(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.213)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 1 месяц (гр. 3 "
		+ "ст. 020 прил. 2 р. 1) >= гр. 3 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за 1-й последний месяц меньше суммы выплат, не "
		+ "подлежащих обложению страховыми взносами на ОСС, за 1-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр03 >= Р1Прил2Ст40Гр03'.
	
	Р1Прил2Ст20Гр03 = ПоказательПоСтроке("Р1Прил2Ст20Гр03");
	Р1Прил2Ст40Гр03 = ПоказательПоСтроке("Р1Прил2Ст40Гр03");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр03, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр03.Значение, Р1Прил2Ст40Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_214(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.214)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 2 месяц (гр. 4 "
		+ "ст. 020 прил. 2 р. 1) >= гр. 4 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за 2-й последний месяц меньше суммы выплат, не "
		+ "подлежащих обложению страховыми взносами на ОСС, за 2-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр04 >= Р1Прил2Ст40Гр04'.
	
	Р1Прил2Ст20Гр04 = ПоказательПоСтроке("Р1Прил2Ст20Гр04");
	Р1Прил2Ст40Гр04 = ПоказательПоСтроке("Р1Прил2Ст40Гр04");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр04, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр04.Значение, Р1Прил2Ст40Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_215(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.215)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц за 3 месяц (гр. 5 "
		+ "ст. 020 прил. 2 р. 1) >= гр. 5 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОСС за 3-й последний месяц меньше суммы выплат, не "
		+ "подлежащих обложению страховыми взносами на ОСС, за 3-й последний месяц по каждому виду тарифа'");
	
	// Формула КС кратко: 'Р1Прил2Ст20Гр05 >= Р1Прил2Ст40Гр05'.
	
	Р1Прил2Ст20Гр05 = ПоказательПоСтроке("Р1Прил2Ст20Гр05");
	Р1Прил2Ст40Гр05 = ПоказательПоСтроке("Р1Прил2Ст40Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст20Гр05.Значение, Р1Прил2Ст40Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_216(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.216)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами, всего (гр. 1 ст. 030 прил. 2 р. 1 "
		+ "отчетного периода) = гр. 1 ст. 030 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. 030 прил. 1 р. 1 "
		+ "отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлежащих обложению страховыми взносами на ОСС за отчетный период ≠ "
		+ "сумме выплат, не подлежащих обложению страховыми взносами на ОСС за предыдущий отчетный период и за "
		+ "последние три месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст30Гр01 = Р1Прил2Ст30Гр01ПРП + Р1Прил2Ст30Гр02'.
	
	Р1Прил2Ст30Гр01 = ПоказательПоСтроке("Р1Прил2Ст30Гр01");
	Р1Прил2Ст30Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст30Гр01ПРП");
	Р1Прил2Ст30Гр02 = ПоказательПоСтроке("Р1Прил2Ст30Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст30Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст30Гр01.Значение, Р1Прил2Ст30Гр01ПРП.Значение + Р1Прил2Ст30Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст30Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст30Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_217(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.217)'");
	ОписаниеКС     = НСтр("ru='Сумма, не подлежащая обложению страховыми взносами за последние три месяца (гр. 2 ст. 030 "
		+ "прил. 2 р. 1) = гр. 3 ст. 030 прил. 2 р. 1 + гр. 4 ст. 030 прил. 2 р. 1 + гр. 5 ст. 030 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, не подлежащих обложению страховыми взносами на ОСС за последние три месяца "
		+ "отчетного периода ≠ сумме выплат, не подлежащих обложению страховыми взносами на ОСС за каждый из трех месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст30Гр02 = Р1Прил2Ст30Гр03 + Р1Прил2Ст30Гр04 + Р1Прил2Ст30Гр05'.
	
	Р1Прил2Ст30Гр02 = ПоказательПоСтроке("Р1Прил2Ст30Гр02");
	Р1Прил2Ст30Гр03 = ПоказательПоСтроке("Р1Прил2Ст30Гр03");
	Р1Прил2Ст30Гр04 = ПоказательПоСтроке("Р1Прил2Ст30Гр04");
	Р1Прил2Ст30Гр05 = ПоказательПоСтроке("Р1Прил2Ст30Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст30Гр02.Значение, Р1Прил2Ст30Гр03.Значение + Р1Прил2Ст30Гр04.Значение + Р1Прил2Ст30Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст30Гр03.ЗначениеСтр + " + " + Р1Прил2Ст30Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст30Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_218(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.218)'");
	ОписаниеКС     = НСтр("ru='Сумма, превышающая предельную величину базы для исчисления страховых взносов, всего (гр. "
		+ "1 ст. 040 прил. 2 р. 1 СВ отчетного периода) = гр. 1 ст. 040 прил. 2 р. 1 предыдущего отчетного периода + "
		+ "гр. 2 ст. 040 прил. 1 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, превышающих предельную базу по страховым взносам на ОСС за отчетный период "
		+ "≠ сумме выплат, превышающих предельную базу по страховым взносам на ОСС за предыдущий отчетный период и за "
		+ "последние три месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст40Гр01 = Р1Прил2Ст40Гр01ПРП + Р1Прил2Ст40Гр02'.
	
	Р1Прил2Ст40Гр01 = ПоказательПоСтроке("Р1Прил2Ст40Гр01");
	Р1Прил2Ст40Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст40Гр01ПРП");
	Р1Прил2Ст40Гр02 = ПоказательПоСтроке("Р1Прил2Ст40Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст40Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст40Гр01.Значение, Р1Прил2Ст40Гр01ПРП.Значение + Р1Прил2Ст40Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст40Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст40Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_219(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.219)'");
	ОписаниеКС     = НСтр("ru='Сумма, превышающая предельную величину базы для исчисления страховых взносов за последние "
		+ "три месяца (гр. 2 ст. 040 прил. 2 р. 1) = гр. 3 ст. 040 прил. 2 р. 1 + гр. 4 ст. 040 прил. 2 р. 1 + гр. 5 "
		+ "ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат, превышающих предельную базу по страховым взносам на ОСС за последние три "
		+ "месяца отчетного периода ≠ сумме выплат, превышающих предельную базу по страховым взносам на ОСС за каждый "
		+ "из трех месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст40Гр02 = Р1Прил2Ст40Гр03 + Р1Прил2Ст40Гр04 + Р1Прил2Ст40Гр05'.
	
	Р1Прил2Ст40Гр02 = ПоказательПоСтроке("Р1Прил2Ст40Гр02");
	Р1Прил2Ст40Гр03 = ПоказательПоСтроке("Р1Прил2Ст40Гр03");
	Р1Прил2Ст40Гр04 = ПоказательПоСтроке("Р1Прил2Ст40Гр04");
	Р1Прил2Ст40Гр05 = ПоказательПоСтроке("Р1Прил2Ст40Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст40Гр02.Значение, Р1Прил2Ст40Гр03.Значение + Р1Прил2Ст40Гр04.Значение + Р1Прил2Ст40Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст40Гр03.ЗначениеСтр + " + " + Р1Прил2Ст40Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст40Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_220(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.220)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, всего (гр. 1 ст. 050 прил. 2 р. 1 СВ отчетного "
		+ "периода) = гр. 1 ст. 050 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. 050 прил. 1 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за отчетный период ≠ сумме баз по страховым взносам на "
		+ "ОСС за предыдущий отчетный период и за последние три месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр01 = Р1Прил2Ст50Гр01ПРП + Р1Прил2Ст50Гр02'.
	
	Р1Прил2Ст50Гр01 = ПоказательПоСтроке("Р1Прил2Ст50Гр01");
	Р1Прил2Ст50Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст50Гр01ПРП");
	Р1Прил2Ст50Гр02 = ПоказательПоСтроке("Р1Прил2Ст50Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст50Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр01.Значение, Р1Прил2Ст50Гр01ПРП.Значение + Р1Прил2Ст50Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст50Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст50Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_221(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.221)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, всего (гр. 1 ст. 050 прил. 2 р. 1) = гр. 1 ст. 020 "
		+ "прил. 2 р. 1 - гр. 1 ст. 030 прил. 2 р. 1 - гр. 1 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за отчетный период ≠ разнице всех выплат и выплат, не "
		+ "подлежащих обложению страховыми взносами на ОСС, и выплат, превышающих предельную величину базы по страховым "
		+ "взносам на ОСС, за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр01 = Р1Прил2Ст20Гр01 - Р1Прил2Ст30Гр01 - Р1Прил2Ст40Гр01'.
	
	Р1Прил2Ст50Гр01 = ПоказательПоСтроке("Р1Прил2Ст50Гр01");
	Р1Прил2Ст20Гр01 = ПоказательПоСтроке("Р1Прил2Ст20Гр01");
	Р1Прил2Ст30Гр01 = ПоказательПоСтроке("Р1Прил2Ст30Гр01");
	Р1Прил2Ст40Гр01 = ПоказательПоСтроке("Р1Прил2Ст40Гр01");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр01, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр01.Значение, Р1Прил2Ст20Гр01.Значение - Р1Прил2Ст30Гр01.Значение - Р1Прил2Ст40Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст20Гр01.ЗначениеСтр + " - " + Р1Прил2Ст30Гр01.ЗначениеСтр + " - "
		+ Р1Прил2Ст40Гр01.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_222(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.222)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за последние три месяца (гр. 2 ст. 050 прил. 2 р. "
		+ "1) = гр. 2 ст. 020 прил. 2 р. 1 - гр. 2 ст. 030 прил. 2 р. 1 - гр. 2 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за 3 последних месяца ≠ разнице всех выплат и выплат, не "
		+ "подлежащих обложению страховыми взносами на ОСС, и выплат, превышающих предельную величину базы по страховым "
		+ "взносам на ОСС, за 3 последних месяца'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр02 = Р1Прил2Ст20Гр02 - Р1Прил2Ст30Гр02 - Р1Прил2Ст40Гр02'.
	
	Р1Прил2Ст50Гр02 = ПоказательПоСтроке("Р1Прил2Ст50Гр02");
	Р1Прил2Ст20Гр02 = ПоказательПоСтроке("Р1Прил2Ст20Гр02");
	Р1Прил2Ст30Гр02 = ПоказательПоСтроке("Р1Прил2Ст30Гр02");
	Р1Прил2Ст40Гр02 = ПоказательПоСтроке("Р1Прил2Ст40Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр02.Значение, Р1Прил2Ст20Гр02.Значение - Р1Прил2Ст30Гр02.Значение - Р1Прил2Ст40Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст20Гр02.ЗначениеСтр + " - " + Р1Прил2Ст30Гр02.ЗначениеСтр + " - "
		+ Р1Прил2Ст40Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_223(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.223)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 1 месяц (гр. 3 ст. 050 прил. 2 р. 1) = гр. 3 ст. "
		+ "020 прил. 2 р. 1 - гр. 3 ст. 030 прил. 2 р. 1 - гр. 3 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за 1-й из 3 последних месяцев ≠ разнице всех выплат и "
		+ "выплат, не подлежащих обложению страховыми взносами на ОСС, и выплат, превышающих предельную величину базы "
		+ "по страховым взносам на ОСС, за 1-й из 3 последних месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр03 = Р1Прил2Ст20Гр03 - Р1Прил2Ст30Гр03 - Р1Прил2Ст40Гр03'.
	
	Р1Прил2Ст50Гр03 = ПоказательПоСтроке("Р1Прил2Ст50Гр03");
	Р1Прил2Ст20Гр03 = ПоказательПоСтроке("Р1Прил2Ст20Гр03");
	Р1Прил2Ст30Гр03 = ПоказательПоСтроке("Р1Прил2Ст30Гр03");
	Р1Прил2Ст40Гр03 = ПоказательПоСтроке("Р1Прил2Ст40Гр03");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр03, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр03.Значение, Р1Прил2Ст20Гр03.Значение - Р1Прил2Ст30Гр03.Значение - Р1Прил2Ст40Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст20Гр03.ЗначениеСтр + " - " + Р1Прил2Ст30Гр03.ЗначениеСтр + " - "
		+ Р1Прил2Ст40Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_224(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.224)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 2 месяц (гр. 4 ст. 050 прил. 2 р. 1) = гр. 4 ст. "
		+ "020 прил. 2 р. 1 - гр. 4 ст. 030 прил. 2 р. 1 - гр. 4 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за 2-й из 3 последних месяцев ≠ разнице всех выплат и "
		+ "выплат, не подлежащих обложению страховыми взносами на ОСС, и выплат, превышающих предельную величину базы "
		+ "по страховым взносам на ОСС, за 2-й из 3 последних месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр04 = Р1Прил2Ст20Гр04 - Р1Прил2Ст30Гр04 - Р1Прил2Ст40Гр04'.
	
	Р1Прил2Ст50Гр04 = ПоказательПоСтроке("Р1Прил2Ст50Гр04");
	Р1Прил2Ст20Гр04 = ПоказательПоСтроке("Р1Прил2Ст20Гр04");
	Р1Прил2Ст30Гр04 = ПоказательПоСтроке("Р1Прил2Ст30Гр04");
	Р1Прил2Ст40Гр04 = ПоказательПоСтроке("Р1Прил2Ст40Гр04");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр04, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр04.Значение, Р1Прил2Ст20Гр04.Значение - Р1Прил2Ст30Гр04.Значение - Р1Прил2Ст40Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст20Гр04.ЗначениеСтр + " - " + Р1Прил2Ст30Гр04.ЗначениеСтр + " - "
		+ Р1Прил2Ст40Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_225(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.225)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 3 месяц (гр. 5 ст. 050 прил. 2 р. 1) = гр. 5 ст. "
		+ "020 прил. 2 р. 1 - гр. 5 ст. 030 прил. 2 р. 1 - гр. 5 ст. 040 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за 3-й из 3 последних месяцев ≠ разнице всех выплат и "
		+ "выплат, не подлежащих обложению страховыми взносами на ОСС, и выплат, превышающих предельную величину базы "
		+ "по страховым взносам на ОСС, за 3-й из 3 последних месяцев'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр05 = Р1Прил2Ст20Гр05 - Р1Прил2Ст30Гр05 - Р1Прил2Ст40Гр05'.
	
	Р1Прил2Ст50Гр05 = ПоказательПоСтроке("Р1Прил2Ст50Гр05");
	Р1Прил2Ст20Гр05 = ПоказательПоСтроке("Р1Прил2Ст20Гр05");
	Р1Прил2Ст30Гр05 = ПоказательПоСтроке("Р1Прил2Ст30Гр05");
	Р1Прил2Ст40Гр05 = ПоказательПоСтроке("Р1Прил2Ст40Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст20Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст20Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст30Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст30Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст40Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст40Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр05.Значение, Р1Прил2Ст20Гр05.Значение - Р1Прил2Ст30Гр05.Значение - Р1Прил2Ст40Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст20Гр05.ЗначениеСтр + " - " + Р1Прил2Ст30Гр05.ЗначениеСтр + " - "
		+ Р1Прил2Ст40Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_226(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.226)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов, всего (гр. 1 ст. 050 прил. 2 р. 1) >= гр. 1 ст. "
		+ "051 прил. 2 р. 1 + гр. 1 ст. 052 прил. 2 р. 1 + гр. 1 ст. 053 прил. 2 р. 1 + гр. 1 ст. 054 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за отчетный период меньше суммы всех выплат по строкам "
		+ "051, 052, 053, 054 за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр01 >= Р1Прил2Ст51Гр01 + Р1Прил2Ст52Гр01 + Р1Прил2Ст53Гр01 + Р1Прил2Ст54Гр01'.
	
	Р1Прил2Ст50Гр01 = ПоказательПоСтроке("Р1Прил2Ст50Гр01");
	Р1Прил2Ст51Гр01 = ПоказательПоСтроке("Р1Прил2Ст51Гр01");
	Р1Прил2Ст52Гр01 = ПоказательПоСтроке("Р1Прил2Ст52Гр01");
	Р1Прил2Ст53Гр01 = ПоказательПоСтроке("Р1Прил2Ст53Гр01");
	Р1Прил2Ст54Гр01 = ПоказательПоСтроке("Р1Прил2Ст54Гр01");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр01, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр01.Значение, Р1Прил2Ст51Гр01.Значение + Р1Прил2Ст52Гр01.Значение
		+ Р1Прил2Ст53Гр01.Значение + Р1Прил2Ст54Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + Р1Прил2Ст51Гр01.ЗначениеСтр + " + " + Р1Прил2Ст52Гр01.ЗначениеСтр + " + "
		+ Р1Прил2Ст53Гр01.ЗначениеСтр + " + " + Р1Прил2Ст54Гр01.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_227(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.227)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за последние три месяца (гр. 2 ст. 050 прил. 2 р. "
		+ "1) >= гр. 2 ст. 051 прил. 2 р. 1 + гр. 2 ст. 052 прил. 2 р. 1 + гр. 2 ст. 053 прил. 2 р. 1 + гр. 2 ст. 054 "
		+ "прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за 3 последних месяца отчетного периода меньше суммы "
		+ "всех выплат по строкам 051, 052, 053, 054 за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр02 >= Р1Прил2Ст51Гр02 + Р1Прил2Ст52Гр02 + Р1Прил2Ст53Гр02 + Р1Прил2Ст54Гр02'.
	
	Р1Прил2Ст50Гр02 = ПоказательПоСтроке("Р1Прил2Ст50Гр02");
	Р1Прил2Ст51Гр02 = ПоказательПоСтроке("Р1Прил2Ст51Гр02");
	Р1Прил2Ст52Гр02 = ПоказательПоСтроке("Р1Прил2Ст52Гр02");
	Р1Прил2Ст53Гр02 = ПоказательПоСтроке("Р1Прил2Ст53Гр02");
	Р1Прил2Ст54Гр02 = ПоказательПоСтроке("Р1Прил2Ст54Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр02.Значение, Р1Прил2Ст51Гр02.Значение + Р1Прил2Ст52Гр02.Значение
		+ Р1Прил2Ст53Гр02.Значение + Р1Прил2Ст54Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + Р1Прил2Ст51Гр02.ЗначениеСтр + " + " + Р1Прил2Ст52Гр02.ЗначениеСтр + " + "
		+ Р1Прил2Ст53Гр02.ЗначениеСтр + " + " + Р1Прил2Ст54Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_228(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.228)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 1 месяц (гр. 3 ст. 050 прил. 2 р. 1) >= гр. 3 "
		+ "ст. 051 прил. 2 р. 1 + гр. 3 ст. 052 прил. 2 р. 1 + гр. 3 ст. 053 прил. 2 р. 1 + гр. 3 ст. 054 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за 1-й из 3-х последних месяцев отчетного периода меньше "
		+ "суммы всех выплат по строкам 051, 052, 053, 054 за 1-й из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр03 >= Р1Прил2Ст51Гр03 + Р1Прил2Ст52Гр03 + Р1Прил2Ст53Гр03 + Р1Прил2Ст54Гр03'.
	
	Р1Прил2Ст50Гр03 = ПоказательПоСтроке("Р1Прил2Ст50Гр03");
	Р1Прил2Ст51Гр03 = ПоказательПоСтроке("Р1Прил2Ст51Гр03");
	Р1Прил2Ст52Гр03 = ПоказательПоСтроке("Р1Прил2Ст52Гр03");
	Р1Прил2Ст53Гр03 = ПоказательПоСтроке("Р1Прил2Ст53Гр03");
	Р1Прил2Ст54Гр03 = ПоказательПоСтроке("Р1Прил2Ст54Гр03");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр03, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр03.Значение, Р1Прил2Ст51Гр03.Значение + Р1Прил2Ст52Гр03.Значение
		+ Р1Прил2Ст53Гр03.Значение + Р1Прил2Ст54Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + Р1Прил2Ст51Гр03.ЗначениеСтр + " + " + Р1Прил2Ст52Гр03.ЗначениеСтр + " + "
		+ Р1Прил2Ст53Гр03.ЗначениеСтр + " + " + Р1Прил2Ст54Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_229(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.229)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 2 месяц (гр. 4 ст. 050 прил. 2 р. 1) >= гр. 4 "
		+ "ст. 051 прил. 2 р. 1 + гр. 4 ст. 052 прил. 2 р. 1 + гр. 4 ст. 053 прил. 2 р. 1 + гр. 4 ст. 054 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за 2-й из 3-х последних месяцев отчетного периода меньше "
		+ "суммы всех выплат по строкам 051, 052, 053, 054 за 2-й из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр04 >= Р1Прил2Ст51Гр04 + Р1Прил2Ст52Гр04 + Р1Прил2Ст53Гр04 + Р1Прил2Ст54Гр04'.
	
	Р1Прил2Ст50Гр04 = ПоказательПоСтроке("Р1Прил2Ст50Гр04");
	Р1Прил2Ст51Гр04 = ПоказательПоСтроке("Р1Прил2Ст51Гр04");
	Р1Прил2Ст52Гр04 = ПоказательПоСтроке("Р1Прил2Ст52Гр04");
	Р1Прил2Ст53Гр04 = ПоказательПоСтроке("Р1Прил2Ст53Гр04");
	Р1Прил2Ст54Гр04 = ПоказательПоСтроке("Р1Прил2Ст54Гр04");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр04, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр04.Значение, Р1Прил2Ст51Гр04.Значение + Р1Прил2Ст52Гр04.Значение
		+ Р1Прил2Ст53Гр04.Значение + Р1Прил2Ст54Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + Р1Прил2Ст51Гр04.ЗначениеСтр + " + " + Р1Прил2Ст52Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст53Гр04.ЗначениеСтр + " + " + Р1Прил2Ст54Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_230(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.230)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за 3 месяц (гр. 5 ст. 050 прил. 2 р. 1) >= гр. 5 "
		+ "ст. 051 прил. 2 р. 1 + гр. 5 ст. 052 прил. 2 р. 1 + гр. 5 ст. 053 прил. 2 р. 1 + гр. 5 ст. 054 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за 3-й из 3-х последних месяцев отчетного периода меньше "
		+ "суммы всех выплат по строкам 051, 052, 053, 054 за 3-й из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр05 >= Р1Прил2Ст51Гр05 + Р1Прил2Ст52Гр05 + Р1Прил2Ст53Гр05 + Р1Прил2Ст54Гр05'.
	
	Р1Прил2Ст50Гр05 = ПоказательПоСтроке("Р1Прил2Ст50Гр05");
	Р1Прил2Ст51Гр05 = ПоказательПоСтроке("Р1Прил2Ст51Гр05");
	Р1Прил2Ст52Гр05 = ПоказательПоСтроке("Р1Прил2Ст52Гр05");
	Р1Прил2Ст53Гр05 = ПоказательПоСтроке("Р1Прил2Ст53Гр05");
	Р1Прил2Ст54Гр05 = ПоказательПоСтроке("Р1Прил2Ст54Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр05, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр05.Значение, Р1Прил2Ст51Гр05.Значение + Р1Прил2Ст52Гр05.Значение
		+ Р1Прил2Ст53Гр05.Значение + Р1Прил2Ст54Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + Р1Прил2Ст51Гр05.ЗначениеСтр + " + " + Р1Прил2Ст52Гр05.ЗначениеСтр + " + "
		+ Р1Прил2Ст53Гр05.ЗначениеСтр + " + " + Р1Прил2Ст54Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_231(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.231)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов за последние три месяца (гр. 2 ст. 050 прил. 2 р. "
		+ "1) = гр. 3 ст. 050 прил. 2 р. 1 + гр. 4 ст. 050 прил. 2 р. 1 + гр. 5 ст. 050 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС за последние три месяца отчетного периода ≠ база по "
		+ "страховым взносам на ОСС за каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст50Гр02 = Р1Прил2Ст50Гр03 + Р1Прил2Ст50Гр04 + Р1Прил2Ст50Гр05'.
	
	Р1Прил2Ст50Гр02 = ПоказательПоСтроке("Р1Прил2Ст50Гр02");
	Р1Прил2Ст50Гр03 = ПоказательПоСтроке("Р1Прил2Ст50Гр03");
	Р1Прил2Ст50Гр04 = ПоказательПоСтроке("Р1Прил2Ст50Гр04");
	Р1Прил2Ст50Гр05 = ПоказательПоСтроке("Р1Прил2Ст50Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст50Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст50Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст50Гр02.Значение, Р1Прил2Ст50Гр03.Значение + Р1Прил2Ст50Гр04.Значение + Р1Прил2Ст50Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст50Гр03.ЗначениеСтр + " + " + Р1Прил2Ст50Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст50Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_232(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.232)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, производимых аптечными организациями и "
		+ "индивидуальными предпринимателями, имеющиими лицензию на фармацевтическую деятельность, всего ( гр. 1 ст. "
		+ "051 прил. 2 р. 1 отчетного периода) = гр. 1 ст. 051 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. "
		+ "051 прил. 1 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС в части выплат работодателями, осуществляющими "
		+ "фармацевтическую деятельность, за отчетный период ≠ сумме баз по страховым взносам на ОСС в части выплат "
		+ "работодателями, осуществляющими фармацевтическую деятельность, за предыдущий отчетный период и за три "
		+ "последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст51Гр01 = Р1Прил2Ст51Гр01ПРП + Р1Прил2Ст51Гр02'.
	
	Р1Прил2Ст51Гр01 = ПоказательПоСтроке("Р1Прил2Ст51Гр01");
	Р1Прил2Ст51Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст51Гр01ПРП");
	Р1Прил2Ст51Гр02 = ПоказательПоСтроке("Р1Прил2Ст51Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст51Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст51Гр01.Значение, Р1Прил2Ст51Гр01ПРП.Значение + Р1Прил2Ст51Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст51Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст51Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_233(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.233)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, производимых аптечными организациями и "
		+ "индивидуальными предпринимателями, имеющиими лицензию на фармацевтическую деятельность за последние три "
		+ "месяца (гр. 2 ст. 051 прил. 2 р. 1) = гр. 3 ст. 051 прил. 2 р. 1 + гр. 4 ст. 051 прил. 2 р. 1 + гр. 5 ст. "
		+ "051 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС в части выплат работодателями, осуществляющими "
		+ "фармацевтическую деятельность, за последние три месяца отчетного периода ≠ сумме баз по СВ на ОСС в части "
		+ "выплат работодателями, осуществляющими фармацевтическую деятельность, за каждый из трех последних месяцев "
		+ "отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст51Гр02 = Р1Прил2Ст51Гр03 + Р1Прил2Ст51Гр04 + Р1Прил2Ст51Гр05'.
	
	Р1Прил2Ст51Гр02 = ПоказательПоСтроке("Р1Прил2Ст51Гр02");
	Р1Прил2Ст51Гр03 = ПоказательПоСтроке("Р1Прил2Ст51Гр03");
	Р1Прил2Ст51Гр04 = ПоказательПоСтроке("Р1Прил2Ст51Гр04");
	Р1Прил2Ст51Гр05 = ПоказательПоСтроке("Р1Прил2Ст51Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст51Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст51Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст51Гр02.Значение, Р1Прил2Ст51Гр03.Значение + Р1Прил2Ст51Гр04.Значение + Р1Прил2Ст51Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст51Гр03.ЗначениеСтр + " + " + Р1Прил2Ст51Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст51Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_234(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.234)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений членам экипажей судов, всего (гр. 1 ст. 052 прил. 2 р. "
		+ "1 отчетного периода) = гр. 1 ст. 052 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. 052 прил. 1 р. 1 "
		+ "отчетного периода'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС в части выплат членам экипажей судов, за отчетный период "
		+ "≠ сумме баз по страховым взносам на ОСС в части выплат членам экипажей судов, за предыдущий отчетный период "
		+ "и за три последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст52Гр01 = Р1Прил2Ст52Гр01ПРП + Р1Прил2Ст52Гр02'.
	
	Р1Прил2Ст52Гр01 = ПоказательПоСтроке("Р1Прил2Ст52Гр01");
	Р1Прил2Ст52Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст52Гр01ПРП");
	Р1Прил2Ст52Гр02 = ПоказательПоСтроке("Р1Прил2Ст52Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст52Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст52Гр01.Значение, Р1Прил2Ст52Гр01ПРП.Значение + Р1Прил2Ст52Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст52Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст52Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_235(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.235)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений членам экипажей судов за последние три месяца (гр. 2 "
		+ "ст. 052 прил. 2 р. 1) = гр. 3 ст. 052 прил. 2 р. 1 + гр. 4 ст. 052 прил. 2 р. 1 + гр. 5 ст. 052 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС в части выплат членам экипажей судов, за последние три "
		+ "месяца отчетного периода ≠ сумме баз по страховым взносам на ОСС в части выплат членам экипажей судов, за "
		+ "каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст52Гр02 = Р1Прил2Ст52Гр03 + Р1Прил2Ст52Гр04 + Р1Прил2Ст52Гр05'.
	
	Р1Прил2Ст52Гр02 = ПоказательПоСтроке("Р1Прил2Ст52Гр02");
	Р1Прил2Ст52Гр03 = ПоказательПоСтроке("Р1Прил2Ст52Гр03");
	Р1Прил2Ст52Гр04 = ПоказательПоСтроке("Р1Прил2Ст52Гр04");
	Р1Прил2Ст52Гр05 = ПоказательПоСтроке("Р1Прил2Ст52Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст52Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст52Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст52Гр02.Значение, Р1Прил2Ст52Гр03.Значение + Р1Прил2Ст52Гр04.Значение + Р1Прил2Ст52Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст52Гр03.ЗначениеСтр + " + " + Р1Прил2Ст52Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст52Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_236(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.236)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц, занятых в виде "
		+ "экономической деятельности, указанном в патенте, всего (гр. 1 ст. 053 прил. 2 р. 1 отчетного периода) = гр. "
		+ "1 ст. 053 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. 053 прил. 1 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС в части выплат по видам деятельности, указанным в "
		+ "патенте, за отчетный период ≠ сумме баз по страховым взносам на ОСС в части выплат по видам деятельности, "
		+ "указанным в патенте, за предыдущий отчетный период и за три последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст53Гр01 = Р1Прил2Ст53Гр01ПРП + Р1Прил2Ст53Гр02'.
	
	Р1Прил2Ст53Гр01 = ПоказательПоСтроке("Р1Прил2Ст53Гр01");
	Р1Прил2Ст53Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст53Гр01ПРП");
	Р1Прил2Ст53Гр02 = ПоказательПоСтроке("Р1Прил2Ст53Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст53Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст53Гр01.Значение, Р1Прил2Ст53Гр01ПРП.Значение + Р1Прил2Ст53Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст53Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст53Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_237(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.237)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу физических лиц, занятых в виде "
		+ "экономической деятельности, указанном в патенте за последние три месяца (гр. 2 ст. 053 прил. 2 р. 1) = гр. 3 "
		+ "ст. 053 прил. 2 р. 1 + гр. 4 ст. 053 прил. 2 р. 1 + гр. 5 ст. 053 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС в части выплат по видам деятельности, указанным в "
		+ "патенте, за последние три месяца отчетного периода ≠ сумме баз по страховым взносам на ОСС в части выплат по "
		+ "видам деятельности, указанным в патенте, за каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст53Гр02 = Р1Прил2Ст53Гр03 + Р1Прил2Ст53Гр04 + Р1Прил2Ст53Гр05'.
	
	Р1Прил2Ст53Гр02 = ПоказательПоСтроке("Р1Прил2Ст53Гр02");
	Р1Прил2Ст53Гр03 = ПоказательПоСтроке("Р1Прил2Ст53Гр03");
	Р1Прил2Ст53Гр04 = ПоказательПоСтроке("Р1Прил2Ст53Гр04");
	Р1Прил2Ст53Гр05 = ПоказательПоСтроке("Р1Прил2Ст53Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст53Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст53Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст53Гр02.Значение, Р1Прил2Ст53Гр03.Значение + Р1Прил2Ст53Гр04.Значение + Р1Прил2Ст53Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст53Гр03.ЗначениеСтр + " + " + Р1Прил2Ст53Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст53Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_238(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.238)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу иностранных граждан и лиц без "
		+ "гражданства, всего (гр. 1 ст. 054 прил. 2 р. 1 отчетного периода) = гр. 1 ст. 054 прил. 2 р. 1 предыдущего "
		+ "отчетного периода + гр. 2 ст. 054 прил. 1 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС в части выплат в пользу временно пребывающих иностранных "
		+ "граждан, за отчетный период ≠ сумме баз по страховым взносам на ОСС в части выплат в пользу временно "
		+ "пребывающих иностранных граждан, за предыдущий отчетный период и за три последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст54Гр01 = Р1Прил2Ст54Гр01ПРП + Р1Прил2Ст54Гр02'.
	
	Р1Прил2Ст54Гр01 = ПоказательПоСтроке("Р1Прил2Ст54Гр01");
	Р1Прил2Ст54Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст54Гр01ПРП");
	Р1Прил2Ст54Гр02 = ПоказательПоСтроке("Р1Прил2Ст54Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст54Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст54Гр01.Значение, Р1Прил2Ст54Гр01ПРП.Значение + Р1Прил2Ст54Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст54Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст54Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_239(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.239)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, начисленных в пользу иностранных граждан и лиц без "
		+ "гражданства за последние три месяца (гр. 2 ст. 054 прил. 2 р. 1) = гр. 3 ст. 054 прил. 2 р. 1 + гр. 4 ст. "
		+ "054 прил. 2 р. 1 + гр. 5 ст. 054 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОСС в части выплат в пользу временно пребывающих иностранных "
		+ "граждан, за последние три месяца отчетного периода ≠ сумме баз по страховым взносам на ОСС в части выплат в "
		+ "пользу временно пребывающих иностранных граждан, за каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст54Гр02 = Р1Прил2Ст54Гр03 + Р1Прил2Ст54Гр04 + Р1Прил2Ст54Гр05'.
	
	Р1Прил2Ст54Гр02 = ПоказательПоСтроке("Р1Прил2Ст54Гр02");
	Р1Прил2Ст54Гр03 = ПоказательПоСтроке("Р1Прил2Ст54Гр03");
	Р1Прил2Ст54Гр04 = ПоказательПоСтроке("Р1Прил2Ст54Гр04");
	Р1Прил2Ст54Гр05 = ПоказательПоСтроке("Р1Прил2Ст54Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст54Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст54Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст54Гр02.Значение, Р1Прил2Ст54Гр03.Значение + Р1Прил2Ст54Гр04.Значение + Р1Прил2Ст54Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст54Гр03.ЗначениеСтр + " + " + Р1Прил2Ст54Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст54Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_240(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.240)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов, всего (гр. 1 ст. 060 прил. 2 р. 1 отчетного периода) = гр. 1 "
		+ "ст. 060 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. 060 прил. 1 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОСС за отчетный период ≠ сумме страховых взносов на ОСС за предыдущий "
		+ "отчетный период и за три последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст60Гр01 = Р1Прил2Ст60Гр01ПРП + Р1Прил2Ст60Гр02'.
	
	Р1Прил2Ст60Гр01 = ПоказательПоСтроке("Р1Прил2Ст60Гр01");
	Р1Прил2Ст60Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст60Гр01ПРП");
	Р1Прил2Ст60Гр02 = ПоказательПоСтроке("Р1Прил2Ст60Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст60Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст60Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст60Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст60Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст60Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст60Гр01.Значение, Р1Прил2Ст60Гр01ПРП.Значение + Р1Прил2Ст60Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст60Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст60Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_241(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.241)'");
	ОписаниеКС     = НСтр("ru='Исчислено страховых взносов за последние три месяца (гр. 2 ст. 060 прил. 2 р. 1) = гр. 3 "
		+ "ст. 060 прил. 2 р. 1 + гр. 4 ст. 060 прил. 2 р. 1 + гр. 5 ст. 060 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОСС за последние три месяца отчетного периода ≠ сумме страховых "
		+ "взносов на ОСС за каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст60Гр02 = Р1Прил2Ст60Гр03 + Р1Прил2Ст60Гр04 + Р1Прил2Ст60Гр05'.
	
	Р1Прил2Ст60Гр02 = ПоказательПоСтроке("Р1Прил2Ст60Гр02");
	Р1Прил2Ст60Гр03 = ПоказательПоСтроке("Р1Прил2Ст60Гр03");
	Р1Прил2Ст60Гр04 = ПоказательПоСтроке("Р1Прил2Ст60Гр04");
	Р1Прил2Ст60Гр05 = ПоказательПоСтроке("Р1Прил2Ст60Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст60Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст60Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст60Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст60Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст60Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст60Гр02.Значение, Р1Прил2Ст60Гр03.Значение + Р1Прил2Ст60Гр04.Значение + Р1Прил2Ст60Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст60Гр03.ЗначениеСтр + " + " + Р1Прил2Ст60Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст60Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_242(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.242)'");
	ОписаниеКС     = НСтр("ru='Произведено расходов на выплату страхового обеспечения, всего (гр. 1 ст. 070 прил. 2 р. 1 "
		+ "отчетного периода) = гр. 1 ст. 070 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. 070 прил. 1 р. 1 "
		+ "отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Расходы на выплату СО за отчетный период ≠ сумме расходов на выплату СО за предыдущий "
		+ "отчетный период и за три последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст70Гр01 = Р1Прил2Ст70Гр01ПРП + Р1Прил2Ст70Гр02'.
	
	Р1Прил2Ст70Гр01 = ПоказательПоСтроке("Р1Прил2Ст70Гр01");
	Р1Прил2Ст70Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст70Гр01ПРП");
	Р1Прил2Ст70Гр02 = ПоказательПоСтроке("Р1Прил2Ст70Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст70Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст70Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст70Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст70Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст70Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст70Гр01.Значение, Р1Прил2Ст70Гр01ПРП.Значение + Р1Прил2Ст70Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст70Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст70Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_243(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.243)'");
	ОписаниеКС     = НСтр("ru='Произведено расходов на выплату страхового обеспечения за последние три месяца (гр. 2 ст. "
		+ "070 прил. 2 р. 1) = гр. 3 ст. 070 прил. 2 р. 1 + гр. 4 ст. 070 прил. 2 р. 1 + гр. 5 ст. 070 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Расходы на выплату СО за последние три месяца отчетного периода ≠ сумме расходов на "
		+ "выплату СО за каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст70Гр02 = Р1Прил2Ст70Гр03 + Р1Прил2Ст70Гр04 + Р1Прил2Ст70Гр05'.
	
	Р1Прил2Ст70Гр02 = ПоказательПоСтроке("Р1Прил2Ст70Гр02");
	Р1Прил2Ст70Гр03 = ПоказательПоСтроке("Р1Прил2Ст70Гр03");
	Р1Прил2Ст70Гр04 = ПоказательПоСтроке("Р1Прил2Ст70Гр04");
	Р1Прил2Ст70Гр05 = ПоказательПоСтроке("Р1Прил2Ст70Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст70Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст70Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст70Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст70Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст70Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст70Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст70Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст70Гр02.Значение, Р1Прил2Ст70Гр03.Значение + Р1Прил2Ст70Гр04.Значение + Р1Прил2Ст70Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст70Гр03.ЗначениеСтр + " + " + Р1Прил2Ст70Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст70Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_244(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.244)'");
	ОписаниеКС     = НСтр("ru='Возмещено ФСС расходов на выплату страхового обеспечения, всего (гр. 1 ст. 080 прил. 2 р. "
		+ "1 отчетного периода) = гр. 1 ст. 080 прил. 2 р. 1 предыдущего отчетного периода + гр. 2 ст. 080 прил. 1 р. 1 "
		+ "отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма возмещенных ФСС расходов на выплату СО за отчетный период ≠ сумме возмещенных ФСС "
		+ "расходов на выплату СО за предыдущий отчетный период и за три последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст80Гр01 = Р1Прил2Ст80Гр01ПРП + Р1Прил2Ст80Гр02'.
	
	Р1Прил2Ст80Гр01 = ПоказательПоСтроке("Р1Прил2Ст80Гр01");
	Р1Прил2Ст80Гр01ПРП = ПоказательПоСтроке("Р1Прил2Ст80Гр01ПРП");
	Р1Прил2Ст80Гр02 = ПоказательПоСтроке("Р1Прил2Ст80Гр02");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил2ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил2ПРП = мДанныеОтчетаПРП.Раздел1Прил2[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2ПРП, Р1Прил2Ст80Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр01ПРП, "Раздел1Прил2", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст80Гр01.Значение, Р1Прил2Ст80Гр01ПРП.Значение + Р1Прил2Ст80Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст80Гр01ПРП.ЗначениеСтр + " + " + Р1Прил2Ст80Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_245(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 2 к Разделу 1 (КС 1.245)'");
	ОписаниеКС     = НСтр("ru='Возмещено ФСС расходов на выплату страхового обеспечения за последние три месяца (гр. 2 "
		+ "ст. 080 прил. 2 р. 1) = гр. 3 ст. 080 прил. 2 р. 1 + гр. 4 ст. 080 прил. 2 р. 1 + гр. 5 ст. 080 прил. 2 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма возмещенных ФСС расходов на выплату СО за последние три месяца отчетного периода ≠ "
		+ "сумме возмещенных ФСС расходов на выплату СО за каждый из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил2Ст80Гр02 = Р1Прил2Ст80Гр03 + Р1Прил2Ст80Гр04 + Р1Прил2Ст80Гр05'.
	
	Р1Прил2Ст80Гр02 = ПоказательПоСтроке("Р1Прил2Ст80Гр02");
	Р1Прил2Ст80Гр03 = ПоказательПоСтроке("Р1Прил2Ст80Гр03");
	Р1Прил2Ст80Гр04 = ПоказательПоСтроке("Р1Прил2Ст80Гр04");
	Р1Прил2Ст80Гр05 = ПоказательПоСтроке("Р1Прил2Ст80Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр02, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр03, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр04, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр05, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст80Гр02.Значение, Р1Прил2Ст80Гр03.Значение + Р1Прил2Ст80Гр04.Значение + Р1Прил2Ст80Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил2Ст80Гр03.ЗначениеСтр + " + " + Р1Прил2Ст80Гр04.ЗначениеСтр + " + "
		+ Р1Прил2Ст80Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_246(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.246)'");
	ОписаниеКС     = НСтр("ru='Средняя численность работников / среднесписочная численность работников в гр. 2 ст. 010 "
		+ "прил. 5 р. 1 >= 7'");
	ОписаниеОшибки = НСтр("ru='Средняя численность работников плательщиков, применяющих пониженный тариф (пп.3 п.1 "
		+ "ст.427 НК РФ), по итогам 9 месяцев предыдущего года меньше 7'");
	
	// Формула КС кратко: 'Р1Прил5Ст10Гр02 >= 7'.
	
	Р1Прил5Ст10Гр02 = ПоказательПоСтроке("Р1Прил5Ст10Гр02");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст10Гр02, "Раздел1Прил5_6");
	
	КС = ПоказателиКС(Р1Прил5Ст10Гр02.Значение, 7);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_247(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.247)'");
	ОписаниеКС     = НСтр("ru='Средняя численность работников / среднесписочная численность работников в гр. 3 ст. 010 "
		+ "прил. 5 р. 1 >= 7'");
	ОписаниеОшибки = НСтр("ru='Среднесписочная численность работников плательщиков, применяющих пониженный тариф (пп.3 "
		+ "п.1 ст.427 НК РФ), по итогам отчетного периода меньше 7'");
	
	// Формула КС кратко: 'Р1Прил5Ст10Гр03 >= 7'.
	
	Р1Прил5Ст10Гр03 = ПоказательПоСтроке("Р1Прил5Ст10Гр03");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст10Гр03, "Раздел1Прил5_6");
	
	КС = ПоказателиКС(Р1Прил5Ст10Гр03.Значение, 7);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_248(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.248)'");
	ОписаниеКС     = НСтр("ru='Сумма доходов, определяемая исходя из критериев, указанных в п.5 ст.427 НК РФ в гр. 2 ст. "
		+ "020 прил. 5 р. 1 >= гр. 2 ст. 030 прил. 5 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма доходов плательщиков, применяющих пониженный тариф (пп.3 п.1 ст.427 НК РФ), опред. "
		+ "по ст.248, за 9 месяцев предыдущего года меньше суммы доходов плательщиков, применяющих пониженный тариф "
		+ "(пп.3 п.1 ст.427 НК РФ), опред. по п.5 ст.427, за 9 месяцев предыдущего года'");
	
	// Формула КС кратко: 'Р1Прил5Ст20Гр02 >= Р1Прил5Ст30Гр02'.
	
	Р1Прил5Ст20Гр02 = ПоказательПоСтроке("Р1Прил5Ст20Гр02");
	Р1Прил5Ст30Гр02 = ПоказательПоСтроке("Р1Прил5Ст30Гр02");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст20Гр02, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст30Гр02, "Раздел1Прил5_6");
	
	КС = ПоказателиКС(Р1Прил5Ст20Гр02.Значение, Р1Прил5Ст30Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_249(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.249)'");
	ОписаниеКС     = НСтр("ru='Сумма доходов, определяемая исходя из критериев, указанных в п.5 ст.427 НК РФ в гр. 3 ст. "
		+ "020 прил. 5 р. 1 >= гр. 3 ст. 030 прил. 5 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма доходов плательщиков, применяющих пониженный тариф (пп.3 п.1 ст.427 НК РФ), опред. "
		+ "по ст.248, за отчетный период меньше суммы доходов плательщиков, применяющих пониженный тариф (пп.3 п.1 "
		+ "ст.427 НК РФ), опред. по п.5 ст.427, за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил5Ст20Гр03 >= Р1Прил5Ст30Гр03'.
	
	Р1Прил5Ст20Гр03 = ПоказательПоСтроке("Р1Прил5Ст20Гр03");
	Р1Прил5Ст30Гр03 = ПоказательПоСтроке("Р1Прил5Ст30Гр03");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст20Гр03, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст30Гр03, "Раздел1Прил5_6");
	
	КС = ПоказателиКС(Р1Прил5Ст20Гр03.Значение, Р1Прил5Ст30Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_250(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.250)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.5 ст. 427 НК РФ в гр. 2 ст. 040 прил. 5 "
		+ "р. 1 = гр. 2 ст. 030 прил. 5 р. 1 / гр. 2 ст. 020 прил. 5 р. 1 * 100'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.5 ст.427 НК РФ, за 9 месяцев предыдущего "
		+ "года ≠ частному от суммы доходов плательщиков, применяющих пониженный тариф (пп.3 п.1 ст.427 НК РФ), опред. "
		+ "по п.5 ст.427 НК РФ, и суммы доходов плательщиков, применяющих пониженный тариф (пп.3 п.1 ст.427 НК РФ), "
		+ "опред. по ст.248 НК РФ, за 9 месяцев предыдущего года, умноженному на 100'");
	
	// Формула КС кратко: 'Р1Прил5Ст40Гр02 = Р1Прил5Ст30Гр02 / Р1Прил5Ст20Гр02 * 100, когда Р1Прил5Ст20Гр02 > 0'.
	
	Р1Прил5Ст40Гр02 = ПоказательПоСтроке("Р1Прил5Ст40Гр02");
	Р1Прил5Ст30Гр02 = ПоказательПоСтроке("Р1Прил5Ст30Гр02");
	Р1Прил5Ст20Гр02 = ПоказательПоСтроке("Р1Прил5Ст20Гр02");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст40Гр02, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст30Гр02, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст20Гр02, "Раздел1Прил5_6");
	
	УсловиеВыполнено = Р1Прил5Ст20Гр02.Значение > 0;
	
	КС = ПоказателиКС(Р1Прил5Ст40Гр02.Значение,
		?(УсловиеВыполнено, Окр(Р1Прил5Ст30Гр02.Значение / Р1Прил5Ст20Гр02.Значение * 100, 2), 0), Ложь, Ложь);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил5Ст30Гр02.ЗначениеСтр + " / " + Р1Прил5Ст20Гр02.ЗначениеСтр
		+ " * 100 Итог [" + КС.ПраваяЧастьСтр + "], когда " + Р1Прил5Ст20Гр02.ЗначениеСтр + " > 0";
	
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_251(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.251)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.5 ст. 427 НК РФ в гр. 3 ст. 040 прил. 5 "
		+ "р. 1 = гр. 3 ст. 030 прил. 5 р. 1 / гр. 3 ст. 020 прил. 5 р. 1 * 100'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.5 ст.427 НК РФ, за отчетный период ≠ "
		+ "частному от суммы доходов плательщиков, применяющих пониженный тариф (пп.3 п.1 ст.427), опред. по п.5 ст.427 "
		+ "НК РФ, и суммы доходов плательщиков, применяющих пониженный тариф (пп.3 п.1 ст.427 НК РФ), опред. по ст.248, "
		+ "за отчетный период, умноженному на 100'");
	
	// Формула КС кратко: 'Р1Прил5Ст40Гр03 = Р1Прил5Ст30Гр03 / Р1Прил5Ст20Гр03 * 100, когда Р1Прил5Ст20Гр03 > 0'.
	
	Р1Прил5Ст40Гр03 = ПоказательПоСтроке("Р1Прил5Ст40Гр03");
	Р1Прил5Ст30Гр03 = ПоказательПоСтроке("Р1Прил5Ст30Гр03");
	Р1Прил5Ст20Гр03 = ПоказательПоСтроке("Р1Прил5Ст20Гр03");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст40Гр03, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст30Гр03, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст20Гр03, "Раздел1Прил5_6");
	
	УсловиеВыполнено = Р1Прил5Ст20Гр03.Значение > 0;
	
	КС = ПоказателиКС(Р1Прил5Ст40Гр03.Значение,
		?(УсловиеВыполнено, Окр(Р1Прил5Ст30Гр03.Значение / Р1Прил5Ст20Гр03.Значение * 100, 2), 0), Ложь, Ложь);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил5Ст30Гр03.ЗначениеСтр + " / " + Р1Прил5Ст20Гр03.ЗначениеСтр
		+ " * 100 Итог [" + КС.ПраваяЧастьСтр + "], когда " + Р1Прил5Ст20Гр03.ЗначениеСтр + " > 0";
	
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_252(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.252)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.5 ст. 427 НК РФ в гр. 2 ст. 040 прил. 5 "
		+ "р. 1 >= 90'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.5 ст.427 НК РФ, за 9 месяцев предыдущего "
		+ "года меньше 90'");
	
	// Формула КС кратко: 'Р1Прил5Ст40Гр02 >= 90'.
	
	Р1Прил5Ст40Гр02 = ПоказательПоСтроке("Р1Прил5Ст40Гр02");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст40Гр02, "Раздел1Прил5_6");
	
	КС = ПоказателиКС(Р1Прил5Ст40Гр02.Значение, 90);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_253(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 5 к Разделу 1 (КС 1.253)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.5 ст. 427 НК РФ в гр. 3 ст. 040 прил. 5 "
		+ "р. 1 >= 90'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.5 ст.427 НК РФ, за отчетный период меньше 90'");
	
	// Формула КС кратко: 'Р1Прил5Ст40Гр03 >= 90'.
	
	Р1Прил5Ст40Гр03 = ПоказательПоСтроке("Р1Прил5Ст40Гр03");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст40Гр03, "Раздел1Прил5_6");
	
	КС = ПоказателиКС(Р1Прил5Ст40Гр03.Значение, 90);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_254(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 6 к Разделу 1 (КС 1.254)'");
	ОписаниеКС     = НСтр("ru='Сумма доходов в ст. 060 прил. 6 р. 1 >= Суммы доходов в ст. 070 прил. 6 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма доходов плательщиков, применяющих пониженный тариф (пп.5 п.1 ст.427 НК РФ), опред. "
		+ "по ст.346.15 НК РФ, за отчетный период меньше суммы доходов плательщиков, применяющих пониженный тариф (пп.5 "
		+ "п.1 ст.427 НК РФ), опред. по п.6 ст.427 НК РФ, за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил5Ст60Гр02 >= Р1Прил5Ст70Гр02'.
	
	Р1Прил5Ст60Гр02 = ПоказательПоСтроке("Р1Прил5Ст60Гр02");
	Р1Прил5Ст70Гр02 = ПоказательПоСтроке("Р1Прил5Ст70Гр02");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст60Гр02, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст70Гр02, "Раздел1Прил5_6");
	
	КС = ПоказателиКС(Р1Прил5Ст60Гр02.Значение, Р1Прил5Ст70Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_255(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 6 к Разделу 1 (КС 1.255)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.6 ст. 427 НК РФ в ст. 080 прил. 6 р. 1 = "
		+ "ст. 070 прил. 6 р. 1 / ст. 060 прил. 6 р. 1 * 100'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.6 ст.427 НК РФ, за отчетный период ≠ "
		+ "частному от суммы доходов плательщиков, применяющих пониженный тариф (пп.5 п.1 ст.427 НК РФ), опред. по п.6 "
		+ "ст.427 НК РФ, и суммы доходов плательщиков, применяющих пониженный тариф (пп.5 п.1 ст.427 НК РФ), опред. по "
		+ "ст.346.15 НК РФ, за отчетный период, умноженному на 100'");
	
	// Формула КС кратко: 'Р1Прил5Ст80Гр02 = Р1Прил5Ст70Гр02 / Р1Прил5Ст60Гр02 * 100, когда Р1Прил5Ст60Гр02 > 0'.
	
	Р1Прил5Ст80Гр02 = ПоказательПоСтроке("Р1Прил5Ст80Гр02");
	Р1Прил5Ст70Гр02 = ПоказательПоСтроке("Р1Прил5Ст70Гр02");
	Р1Прил5Ст60Гр02 = ПоказательПоСтроке("Р1Прил5Ст60Гр02");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст80Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст80Гр02, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст70Гр02, "Раздел1Прил5_6");
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст60Гр02, "Раздел1Прил5_6");
	
	УсловиеВыполнено = Р1Прил5Ст60Гр02.Значение > 0;
	
	КС = ПоказателиКС(Р1Прил5Ст80Гр02.Значение,
		?(УсловиеВыполнено, Окр(Р1Прил5Ст70Гр02.Значение / Р1Прил5Ст60Гр02.Значение * 100, 2), 0), Ложь, Ложь);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил5Ст70Гр02.ЗначениеСтр + " / " + Р1Прил5Ст60Гр02.ЗначениеСтр
		+ " * 100 Итог [" + КС.ПраваяЧастьСтр + "], когда " + Р1Прил5Ст60Гр02.ЗначениеСтр + " > 0";
	
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_256(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 6 к Разделу 1 (КС 1.256)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.6 ст. 427 НК РФ в ст. 080 прил. 6 р. 1 СВ "
		+ ">= 70'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.6 ст.427 НК РФ, за отчетный период меньше 70'");
	
	// Формула КС кратко: 'Р1Прил5Ст80Гр02 >= 70'.
	
	Р1Прил5Ст80Гр02 = ПоказательПоСтроке("Р1Прил5Ст80Гр02");
	
	Раздел1Прил5_6 = мДанныеОтчета.Раздел1Прил5_6[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил5_6, Р1Прил5Ст80Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил5Ст80Гр02, "Раздел1Прил5_6");
	
	КС = ПоказателиКС(Р1Прил5Ст80Гр02.Значение, 70);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_257(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.257)'");
	ОписаниеКС     = НСтр("ru='Сумма доходов в гр. 1 ст. 010 прил. 7 р. 1 >= гр. 1 ст. 020 прил. 7 р. 1 + гр. 1 ст. 030 "
		+ "прил. 7 р. 1 + гр. 1 ст. 040 прил. 7 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма доходов плательщиков, применяющих пониженный тариф (пп. 7 п. 1 ст. 427 НК РФ) за "
		+ "предыдущий год меньше суммы доходов по ст. 020, 030, 040 за предыдущий год'");
	
	// Формула КС кратко: 'Р1Прил7Ст10Гр01 >= Р1Прил7Ст20Гр01 + Р1Прил7Ст30Гр01 + Р1Прил7Ст40Гр01'.
	
	Р1Прил7Ст10Гр01 = ПоказательПоСтроке("Р1Прил7Ст10Гр01");
	Р1Прил7Ст20Гр01 = ПоказательПоСтроке("Р1Прил7Ст20Гр01");
	Р1Прил7Ст30Гр01 = ПоказательПоСтроке("Р1Прил7Ст30Гр01");
	Р1Прил7Ст40Гр01 = ПоказательПоСтроке("Р1Прил7Ст40Гр01");
	
	Раздел1Прил7 = мДанныеОтчета.Раздел1Прил7[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст10Гр01, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст20Гр01, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст30Гр01, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст40Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст40Гр01, "Раздел1Прил7");
	
	КС = ПоказателиКС(Р1Прил7Ст10Гр01.Значение, Р1Прил7Ст20Гр01.Значение
		+ Р1Прил7Ст30Гр01.Значение + Р1Прил7Ст40Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + Р1Прил7Ст20Гр01.ЗначениеСтр + " + " + Р1Прил7Ст30Гр01.ЗначениеСтр
		+ " + " + Р1Прил7Ст40Гр01.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_258(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.258)'");
	ОписаниеКС     = НСтр("ru='Сумма доходов в гр. 2 ст. 010 прил. 7 р. 1 >= гр. 2 ст. 020 прил. 7 р. 1 + гр. 2 ст. 030 "
		+ "прил. 7 р. 1 + гр. 2 ст. 040 прил. 7 р. 1'");
	ОписаниеОшибки = НСтр("ru='Сумма доходов плательщиков, применяющих пониженный тариф (пп. 7 п. 1 ст. 427 НК РФ) за "
		+ "отчетный период меньше суммы доходов по ст. 020, 030, 040 за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил7Ст10Гр02 >= Р1Прил7Ст20Гр02 + Р1Прил7Ст30Гр02 + Р1Прил7Ст40Гр02'.
	
	Р1Прил7Ст10Гр02 = ПоказательПоСтроке("Р1Прил7Ст10Гр02");
	Р1Прил7Ст20Гр02 = ПоказательПоСтроке("Р1Прил7Ст20Гр02");
	Р1Прил7Ст30Гр02 = ПоказательПоСтроке("Р1Прил7Ст30Гр02");
	Р1Прил7Ст40Гр02 = ПоказательПоСтроке("Р1Прил7Ст40Гр02");
	
	Раздел1Прил7 = мДанныеОтчета.Раздел1Прил7[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст10Гр02, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст20Гр02, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст30Гр02, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст40Гр02, "Раздел1Прил7");
	
	КС = ПоказателиКС(Р1Прил7Ст10Гр02.Значение, Р1Прил7Ст20Гр02.Значение
		+ Р1Прил7Ст30Гр02.Значение + Р1Прил7Ст40Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + Р1Прил7Ст20Гр02.ЗначениеСтр + " + " + Р1Прил7Ст30Гр02.ЗначениеСтр
		+ " + " + Р1Прил7Ст40Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_259(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.259)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.7 ст. 427 НК РФ в гр. 1 ст. 050 прил. 7 "
		+ "р. 1 = (гр. 1 ст. 020 прил. 7 р. 1 + гр. 1 ст. 030 прил. 7 р. 1 + гр. 1 ст. 040 прил. 7 р. 1) / гр. 1 ст. "
		+ "010 прил. 7 р. 1 * 100'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.7 ст.427 НК РФ за предыдущий год ≠ "
		+ "частному от суммы доходов по ст. 020, 030, 040 и сумма доходов плательщиков, применяющих пониженный тариф "
		+ "(пп.7 п.1 ст.427 НК РФ), за предыдущий год, умноженному на 100'");
	
	// Формула КС кратко: 'Р1Прил7Ст50Гр01 = (Р1Прил7Ст20Гр01 + Р1Прил7Ст30Гр01 + Р1Прил7Ст40Гр01) / Р1Прил7Ст10Гр01 * 100, когда Р1Прил7Ст10Гр01 > 0'.
	
	Р1Прил7Ст50Гр01 = ПоказательПоСтроке("Р1Прил7Ст50Гр01");
	Р1Прил7Ст20Гр01 = ПоказательПоСтроке("Р1Прил7Ст20Гр01");
	Р1Прил7Ст30Гр01 = ПоказательПоСтроке("Р1Прил7Ст30Гр01");
	Р1Прил7Ст40Гр01 = ПоказательПоСтроке("Р1Прил7Ст40Гр01");
	Р1Прил7Ст10Гр01 = ПоказательПоСтроке("Р1Прил7Ст10Гр01");
	
	Раздел1Прил7 = мДанныеОтчета.Раздел1Прил7[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст50Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст50Гр01, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст20Гр01, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст30Гр01, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст40Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст40Гр01, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст10Гр01, "Раздел1Прил7");
	
	УсловиеВыполнено = Р1Прил7Ст10Гр01.Значение > 0;
	
	КС = ПоказателиКС(Р1Прил7Ст50Гр01.Значение, ?(УсловиеВыполнено, Окр(
		(Р1Прил7Ст20Гр01.Значение + Р1Прил7Ст30Гр01.Значение + Р1Прил7Ст40Гр01.Значение) / Р1Прил7Ст10Гр01.Значение * 100, 2), 0), Ложь, Ложь);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + "(" + Р1Прил7Ст20Гр01.ЗначениеСтр + " + " + Р1Прил7Ст30Гр01.ЗначениеСтр + " + "
		+ Р1Прил7Ст40Гр01.ЗначениеСтр + ") / " + Р1Прил7Ст10Гр01.ЗначениеСтр + " * 100 Итог [" + КС.ПраваяЧастьСтр
		+ "], когда " + Р1Прил7Ст10Гр01.ЗначениеСтр + " > 0";
	
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_260(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.260)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.7 ст. 427 НК РФ в гр. 2 ст. 050 прил. 7 "
		+ "р. 1 = (гр. 2 ст. 020 прил. 7 р. 1 + гр. 2 ст. 030 прил. 7 р. 1 + гр. 2 ст. 040 прил. 7 р. 1) / гр. 2 ст. "
		+ "010 прил. 7 р. 1 * 100'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.7 ст.427 НК РФ за отчетный период ≠ "
		+ "частному от суммы доходов по ст. 020, 030, 040 и сумма доходов плательщиков, применяющих пониженный тариф "
		+ "(пп.7 п.1 ст.427 НК РФ), за отчетный период, умноженному на 100'");
	
	// Формула КС кратко: 'Р1Прил7Ст50Гр02 = (Р1Прил7Ст20Гр02 + Р1Прил7Ст30Гр02 + Р1Прил7Ст40Гр02) / Р1Прил7Ст10Гр02 * 100, когда Р1Прил7Ст10Гр02 > 0'.
	
	Р1Прил7Ст50Гр02 = ПоказательПоСтроке("Р1Прил7Ст50Гр02");
	Р1Прил7Ст20Гр02 = ПоказательПоСтроке("Р1Прил7Ст20Гр02");
	Р1Прил7Ст30Гр02 = ПоказательПоСтроке("Р1Прил7Ст30Гр02");
	Р1Прил7Ст40Гр02 = ПоказательПоСтроке("Р1Прил7Ст40Гр02");
	Р1Прил7Ст10Гр02 = ПоказательПоСтроке("Р1Прил7Ст10Гр02");
	
	Раздел1Прил7 = мДанныеОтчета.Раздел1Прил7[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст50Гр02, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст20Гр02, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст30Гр02, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст40Гр02, "Раздел1Прил7");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст10Гр02, "Раздел1Прил7");
	
	УсловиеВыполнено = Р1Прил7Ст10Гр02.Значение > 0;
	
	КС = ПоказателиКС(Р1Прил7Ст50Гр02.Значение, ?(УсловиеВыполнено, Окр(
		(Р1Прил7Ст20Гр02.Значение + Р1Прил7Ст30Гр02.Значение + Р1Прил7Ст40Гр02.Значение) / Р1Прил7Ст10Гр02.Значение * 100, 2), 0), Ложь, Ложь);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + "(" + Р1Прил7Ст20Гр02.ЗначениеСтр + " + " + Р1Прил7Ст30Гр02.ЗначениеСтр + " + "
		+ Р1Прил7Ст40Гр02.ЗначениеСтр + ") / " + Р1Прил7Ст10Гр02.ЗначениеСтр + " * 100 Итог [" + КС.ПраваяЧастьСтр + "], когда "
		+ Р1Прил7Ст10Гр02.ЗначениеСтр + " > 0";
	
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_261(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.261)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.7 ст. 427 НК РФ в гр. 1 ст. 050 прил. 7 "
		+ "р. 1 СВ >= 70'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п.7 ст.427 НК РФ за предыдущий год меньше 70'");
	
	// Формула КС кратко: 'Р1Прил7Ст50Гр01 >= 70'.
	
	Р1Прил7Ст50Гр01 = ПоказательПоСтроке("Р1Прил7Ст50Гр01");
	
	Раздел1Прил7 = мДанныеОтчета.Раздел1Прил7[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст50Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст50Гр01, "Раздел1Прил7");
	
	КС = ПоказателиКС(Р1Прил7Ст50Гр01.Значение, 70, Ложь, Ложь);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_262(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 7 к Разделу 1 (КС 1.262)'");
	ОписаниеКС     = НСтр("ru='Доля доходов, определяемая в целях применения п.7 ст. 427 НК РФ в гр. 2 ст. 050 прил. 7 "
		+ "р. 1 СВ >= 70, при условии - ""код отчетного периода"" = 34'");
	ОписаниеОшибки = НСтр("ru='Доля доходов, определяемая в целях применения п. 7 ст. 427 НК РФ за расчетный период "
		+ "меньше 70'");
	
	// Формула КС кратко: 'Р1Прил7Ст50Гр02 >= 70, когда ТитульныйКодРП = "34"'.
	
	Р1Прил7Ст50Гр02 = ПоказательПоСтроке("Р1Прил7Ст50Гр02");
	ТитульныйКодРП = ПоказательПоСтроке("ТитульныйКодРП");
	
	Раздел1Прил7 = мДанныеОтчета.Раздел1Прил7[0].Данные;
	Титульный = мДанныеОтчета.Титульный;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Титульный, ТитульныйКодРП);
	ВнестиПоказательВРасшифровку(ТитульныйКодРП, "Титульный");
	ВставитьЗначениеПоказателя(Раздел1Прил7, Р1Прил7Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил7Ст50Гр02, "Раздел1Прил7");
	
	КС = ПоказателиКС(Р1Прил7Ст50Гр02.Значение, 70, Ложь, Ложь);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр + ", когда " + ТитульныйКодРП.ЗначениеСтр + " = 34";
	
	УсловиеВыполнено = ТитульныйКодРП.Значение = "34";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть >= КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_263(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.263)'");
	ОписаниеКС     = НСтр("ru='Итого выплат, всего (гр. 1 ст. 010 прил. 8 р. 1) = ∑ всех гр. 1 ст. 060 прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) за отчетный период ≠ сумме выплат по каждому виду патента за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил8Ст10Гр01 = Р1Прил8Ст60Гр01'.
	
	Р1Прил8Ст10Гр01 = ПоказательПоСтроке("Р1Прил8Ст10Гр01");
	Р1Прил8Ст60Гр01 = ПоказательПоСтроке("Р1Прил8Ст60Гр01");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр01, "Раздел1Прил8");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил8, Р1Прил8Ст60Гр01.Имя);
	СуммаР1Прил8Ст60Гр01 = 0;
	СуммаР1Прил8Ст60Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр01, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр01, "Раздел1Прил8");
		СуммаР1Прил8Ст60Гр01 = СуммаР1Прил8Ст60Гр01 + Р1Прил8Ст60Гр01.Значение;
		СуммаР1Прил8Ст60Гр01Стр = СуммаР1Прил8Ст60Гр01Стр + Р1Прил8Ст60Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил8Ст10Гр01.Значение, СуммаР1Прил8Ст60Гр01);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил8Ст60Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_264(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.264)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за последние три месяца (гр. 2 ст. 010 прил. 8 р. 1) = ∑ всех гр. 2 ст. 060 "
		+ "прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) за 3 последних месяца отчетного периода ≠ сумме выплат по каждому виду патента за 3 последних месяца "
		+ "отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст10Гр02 = Р1Прил8Ст60Гр02'.
	
	Р1Прил8Ст10Гр02 = ПоказательПоСтроке("Р1Прил8Ст10Гр02");
	Р1Прил8Ст60Гр02 = ПоказательПоСтроке("Р1Прил8Ст60Гр02");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр02, "Раздел1Прил8");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил8, Р1Прил8Ст60Гр02.Имя);
	СуммаР1Прил8Ст60Гр02 = 0;
	СуммаР1Прил8Ст60Гр02Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр02, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр02, "Раздел1Прил8");
		СуммаР1Прил8Ст60Гр02 = СуммаР1Прил8Ст60Гр02 + Р1Прил8Ст60Гр02.Значение;
		СуммаР1Прил8Ст60Гр02Стр = СуммаР1Прил8Ст60Гр02Стр + Р1Прил8Ст60Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил8Ст10Гр02.Значение, СуммаР1Прил8Ст60Гр02);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил8Ст60Гр02Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_265(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.265)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 1 месяц (гр. 3 ст. 010 прил. 8 р. 1) = ∑ всех гр. 3 ст. 060 прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) за 1-й из трех последних месяцев отчетного периода ≠ сумме выплат по каждому виду патента за 1-й из трех "
		+ "последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст10Гр03 = Р1Прил8Ст60Гр03'.
	
	Р1Прил8Ст10Гр03 = ПоказательПоСтроке("Р1Прил8Ст10Гр03");
	Р1Прил8Ст60Гр03 = ПоказательПоСтроке("Р1Прил8Ст60Гр03");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр03, "Раздел1Прил8");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил8, Р1Прил8Ст60Гр03.Имя);
	СуммаР1Прил8Ст60Гр03 = 0;
	СуммаР1Прил8Ст60Гр03Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр03, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр03, "Раздел1Прил8");
		СуммаР1Прил8Ст60Гр03 = СуммаР1Прил8Ст60Гр03 + Р1Прил8Ст60Гр03.Значение;
		СуммаР1Прил8Ст60Гр03Стр = СуммаР1Прил8Ст60Гр03Стр + Р1Прил8Ст60Гр03.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил8Ст10Гр03.Значение, СуммаР1Прил8Ст60Гр03);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил8Ст60Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_266(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.266)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 2 месяц (гр. 4 ст. 010 прил. 8 р. 1) = ∑ всех гр. 4 ст. 060 прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) за 2-й из трех последних месяцев отчетного периода ≠ сумме выплат по каждому виду патента за 2-й из трех "
		+ "последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст10Гр04 = Р1Прил8Ст60Гр04'.
	
	Р1Прил8Ст10Гр04 = ПоказательПоСтроке("Р1Прил8Ст10Гр04");
	Р1Прил8Ст60Гр04 = ПоказательПоСтроке("Р1Прил8Ст60Гр04");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр04, "Раздел1Прил8");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил8, Р1Прил8Ст60Гр04.Имя);
	СуммаР1Прил8Ст60Гр04 = 0;
	СуммаР1Прил8Ст60Гр04Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр04, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр04, "Раздел1Прил8");
		СуммаР1Прил8Ст60Гр04 = СуммаР1Прил8Ст60Гр04 + Р1Прил8Ст60Гр04.Значение;
		СуммаР1Прил8Ст60Гр04Стр = СуммаР1Прил8Ст60Гр04Стр + Р1Прил8Ст60Гр04.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил8Ст10Гр04.Значение, СуммаР1Прил8Ст60Гр04);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил8Ст60Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_267(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.267)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 3 месяц (гр. 5 ст. 010 прил. 8 р. 1) = ∑ всех гр. 5 ст. 060 прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) за 3-й из трех последних месяцев отчетного периода ≠ сумме выплат по каждому виду патента за 3-й из трех "
		+ "последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст10Гр05 = Р1Прил8Ст60Гр05'.
	
	Р1Прил8Ст10Гр05 = ПоказательПоСтроке("Р1Прил8Ст10Гр05");
	Р1Прил8Ст60Гр05 = ПоказательПоСтроке("Р1Прил8Ст60Гр05");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр05, "Раздел1Прил8");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил8, Р1Прил8Ст60Гр05.Имя);
	СуммаР1Прил8Ст60Гр05 = 0;
	СуммаР1Прил8Ст60Гр05Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр05, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр05, "Раздел1Прил8");
		СуммаР1Прил8Ст60Гр05 = СуммаР1Прил8Ст60Гр05 + Р1Прил8Ст60Гр05.Значение;
		СуммаР1Прил8Ст60Гр05Стр = СуммаР1Прил8Ст60Гр05Стр + Р1Прил8Ст60Гр05.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил8Ст10Гр05.Значение, СуммаР1Прил8Ст60Гр05);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил8Ст60Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_268(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.268)'");
	ОписаниеКС     = НСтр("ru='Итого выплат, всего (гр. 1 ст. 010 прил. 8 р. 1) >= гр. 2 ст. 010 прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) за отчетный период меньше аналогичных выплат за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст10Гр01 >= Р1Прил8Ст10Гр02'.
	
	Р1Прил8Ст10Гр01 = ПоказательПоСтроке("Р1Прил8Ст10Гр01");
	Р1Прил8Ст10Гр02 = ПоказательПоСтроке("Р1Прил8Ст10Гр02");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр01, "Раздел1Прил8");
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр02, "Раздел1Прил8");
	
	КС = ПоказателиКС(Р1Прил8Ст10Гр01.Значение, Р1Прил8Ст10Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_269(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.269)'");
	ОписаниеКС     = НСтр("ru='Итого выплат, всего (гр. 1 ст. 010 прил. 8 р. 1 отчетного периода) = гр. 1 ст. 010 прил. "
		+ "8 р. 1 предыдущего отчетного периода + гр. 2 ст. 010 прил. 8 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп. 9 п. 1 ст. 427 НК "
		+ "РФ) за отчетный период ≠ сумме аналогичных выплат за предыдущий отчетный период и за 3 последних месяца "
		+ "отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст10Гр01 = Р1Прил8Ст10Гр01ПРП + Р1Прил8Ст10Гр02'.
	
	Р1Прил8Ст10Гр01 = ПоказательПоСтроке("Р1Прил8Ст10Гр01");
	Р1Прил8Ст10Гр01ПРП = ПоказательПоСтроке("Р1Прил8Ст10Гр01ПРП");
	Р1Прил8Ст10Гр02 = ПоказательПоСтроке("Р1Прил8Ст10Гр02");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил8ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил8ПРП = мДанныеОтчетаПРП.Раздел1Прил8[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр01, "Раздел1Прил8");
	ВставитьЗначениеПоказателя(Раздел1Прил8ПРП, Р1Прил8Ст10Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр01ПРП, "Раздел1Прил8", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр02, "Раздел1Прил8");
	
	КС = ПоказателиКС(Р1Прил8Ст10Гр01.Значение, Р1Прил8Ст10Гр01ПРП.Значение + Р1Прил8Ст10Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил8Ст10Гр01ПРП.ЗначениеСтр + " + " + Р1Прил8Ст10Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_270(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.270)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за последние три месяца (гр. 2 ст. 010 прил. 8 р. 1) = гр. 3 ст. 010 прил. 8 "
		+ "р. 1 + гр. 4 ст. 010 прил. 8 р. 1 + гр. 5 ст. 010 прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) за 3 последних месяца отчетного периода ≠ сумме аналогичных выплат за каждый из 3-х последних месяцев "
		+ "отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст10Гр02 = Р1Прил8Ст10Гр03 + Р1Прил8Ст10Гр04 + Р1Прил8Ст10Гр05'.
	
	Р1Прил8Ст10Гр02 = ПоказательПоСтроке("Р1Прил8Ст10Гр02");
	Р1Прил8Ст10Гр03 = ПоказательПоСтроке("Р1Прил8Ст10Гр03");
	Р1Прил8Ст10Гр04 = ПоказательПоСтроке("Р1Прил8Ст10Гр04");
	Р1Прил8Ст10Гр05 = ПоказательПоСтроке("Р1Прил8Ст10Гр05");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр02, "Раздел1Прил8");
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр03, "Раздел1Прил8");
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр04, "Раздел1Прил8");
	ВставитьЗначениеПоказателя(Раздел1Прил8, Р1Прил8Ст10Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил8Ст10Гр05, "Раздел1Прил8");
	
	КС = ПоказателиКС(Р1Прил8Ст10Гр02.Значение, Р1Прил8Ст10Гр03.Значение + Р1Прил8Ст10Гр04.Значение + Р1Прил8Ст10Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил8Ст10Гр03.ЗначениеСтр + " + " + Р1Прил8Ст10Гр04.ЗначениеСтр + " + "
		+ Р1Прил8Ст10Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_271(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.271)'");
	ОписаниеКС     = НСтр("ru='Сведения о суммах выплат за последние три месяца (гр. 2 ст. 060 прил. 8 р. 1) = гр. 3 ст. "
		+ "060 прил. 8 р. 1 + гр. 4 ст. 060 прил. 8 р. 1 + гр. 5 ст. 060 прил. 8 р. 1 по каждой ст. 060 прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) в разрезе каждого вида патента за 3 последних месяца отчетного периода ≠ сумме аналогичных выплат в "
		+ "разрезе каждого вида патента за каждый из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст60Гр02 = Р1Прил8Ст60Гр03 + Р1Прил8Ст60Гр04 + Р1Прил8Ст60Гр05'.
	
	Р1Прил8Ст60Гр02 = ПоказательПоСтроке("Р1Прил8Ст60Гр02");
	Р1Прил8Ст60Гр03 = ПоказательПоСтроке("Р1Прил8Ст60Гр03");
	Р1Прил8Ст60Гр04 = ПоказательПоСтроке("Р1Прил8Ст60Гр04");
	Р1Прил8Ст60Гр05 = ПоказательПоСтроке("Р1Прил8Ст60Гр05");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил8, Р1Прил8Ст60Гр02.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр02, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр02, "Раздел1Прил8");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр03, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр03, "Раздел1Прил8");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр04, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр04, "Раздел1Прил8");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр05, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр05, "Раздел1Прил8");
		
		КС = ПоказателиКС(Р1Прил8Ст60Гр02.Значение, Р1Прил8Ст60Гр03.Значение + Р1Прил8Ст60Гр04.Значение + Р1Прил8Ст60Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил8Ст60Гр03.ЗначениеСтр + " + " + Р1Прил8Ст60Гр04.ЗначениеСтр + " + "
			+ Р1Прил8Ст60Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_272(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 8 к Разделу 1 (КС 1.272)'");
	ОписаниеКС     = НСтр("ru='Сведения о суммах выплат, всего (гр. 1 ст. 060 прил. 8 р. 1) >= гр. 2 ст. 060 прил. 8 р. "
		+ "1 по каждой ст. 060 прил. 8 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими пониженный тариф (пп.9 п.1 ст.427 НК "
		+ "РФ) в разрезе каждого вида патента за отчетный период меньше аналогичных выплат в разрезе каждого вида "
		+ "патента за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил8Ст60Гр01 >= Р1Прил8Ст60Гр02'.
	
	Р1Прил8Ст60Гр01 = ПоказательПоСтроке("Р1Прил8Ст60Гр01");
	Р1Прил8Ст60Гр02 = ПоказательПоСтроке("Р1Прил8Ст60Гр02");
	
	Раздел1Прил8 = мДанныеОтчета.Раздел1Прил8[0].Данные;
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил8, Р1Прил8Ст60Гр01.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр01, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр01, "Раздел1Прил8");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил8, Р1Прил8Ст60Гр02, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил8Ст60Гр02, "Раздел1Прил8");
		
		КС = ПоказателиКС(Р1Прил8Ст60Гр01.Значение, Р1Прил8Ст60Гр02.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_273(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.273)'");
	ОписаниеКС     = НСтр("ru='Итого выплат, всего (гр. 1 ст. 010 прил. 9 р. 1) = ∑ всех гр. 1 ст. 080 прил. 9 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими тариф для иностранных граждан (абз.2 "
		+ "пп.2 п.2 ст. 425 НК РФ и абз.2 пп.2 ст.426 НК РФ) за отчетный период ≠ сумме всех выплат по каждому "
		+ "иностранному гражданину за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил9Ст10Гр01 = Р1Прил9Ст80Гр01'.
	
	Р1Прил9Ст10Гр01 = ПоказательПоСтроке("Р1Прил9Ст10Гр01");
	Р1Прил9Ст80Гр01 = ПоказательПоСтроке("Р1Прил9Ст80Гр01");
	
	Раздел1Прил9 = мДанныеОтчета.Раздел1Прил9[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр01, "Раздел1Прил9");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил9, Р1Прил9Ст80Гр01.Имя);
	СуммаР1Прил9Ст80Гр01 = 0;
	СуммаР1Прил9Ст80Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр01, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр01, "Раздел1Прил9");
		СуммаР1Прил9Ст80Гр01 = СуммаР1Прил9Ст80Гр01 + Р1Прил9Ст80Гр01.Значение;
		СуммаР1Прил9Ст80Гр01Стр = СуммаР1Прил9Ст80Гр01Стр + Р1Прил9Ст80Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил9Ст10Гр01.Значение, СуммаР1Прил9Ст80Гр01);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил9Ст80Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_274(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.274)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за последние три месяца (гр. 2 ст. 010 прил. 9 р. 1) = ∑ всех гр. 2 ст. 080 "
		+ "прил. 9 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими тариф для иностранных граждан (абз.2 "
		+ "пп.2 п.2 ст. 425 НК РФ и абз.2 пп.2 ст.426 НК РФ) за 3 последних месяца отчетного периода ≠ сумме всех "
		+ "выплат по каждому иностранному гражданину за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил9Ст10Гр02 = Р1Прил9Ст80Гр02'.
	
	Р1Прил9Ст10Гр02 = ПоказательПоСтроке("Р1Прил9Ст10Гр02");
	Р1Прил9Ст80Гр02 = ПоказательПоСтроке("Р1Прил9Ст80Гр02");
	
	Раздел1Прил9 = мДанныеОтчета.Раздел1Прил9[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр02, "Раздел1Прил9");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил9, Р1Прил9Ст80Гр02.Имя);
	СуммаР1Прил9Ст80Гр02 = 0;
	СуммаР1Прил9Ст80Гр02Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр02, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр02, "Раздел1Прил9");
		СуммаР1Прил9Ст80Гр02 = СуммаР1Прил9Ст80Гр02 + Р1Прил9Ст80Гр02.Значение;
		СуммаР1Прил9Ст80Гр02Стр = СуммаР1Прил9Ст80Гр02Стр + Р1Прил9Ст80Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил9Ст10Гр02.Значение, СуммаР1Прил9Ст80Гр02);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил9Ст80Гр02Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_275(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.275)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 1 месяц (гр. 3 ст. 010 прил. 9 р. 1) = ∑ всех гр. 3 ст. 080 прил. 9 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими тариф для иностранных граждан (абз.2 "
		+ "пп.2 п.2 ст. НК РФ 425 и абз.2 пп.2 ст.426 НК РФ) за 1-й из 3-х последних месяцев отчетного периода ≠ сумме "
		+ "всех выплат по каждому иностранному гражданину за 1-й из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил9Ст10Гр03 = Р1Прил9Ст80Гр03'.
	
	Р1Прил9Ст10Гр03 = ПоказательПоСтроке("Р1Прил9Ст10Гр03");
	Р1Прил9Ст80Гр03 = ПоказательПоСтроке("Р1Прил9Ст80Гр03");
	
	Раздел1Прил9 = мДанныеОтчета.Раздел1Прил9[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр03, "Раздел1Прил9");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил9, Р1Прил9Ст80Гр03.Имя);
	СуммаР1Прил9Ст80Гр03 = 0;
	СуммаР1Прил9Ст80Гр03Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр03, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр03, "Раздел1Прил9");
		СуммаР1Прил9Ст80Гр03 = СуммаР1Прил9Ст80Гр03 + Р1Прил9Ст80Гр03.Значение;
		СуммаР1Прил9Ст80Гр03Стр = СуммаР1Прил9Ст80Гр03Стр + Р1Прил9Ст80Гр03.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил9Ст10Гр03.Значение, СуммаР1Прил9Ст80Гр03);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил9Ст80Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_276(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.276)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 2 месяц гр. (4 ст. 010 прил. 9 р. 1) = ∑ всех гр. 4 ст. 080 прил. 9 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими тариф для иностранных граждан (абз.2 "
		+ "пп.2 п.2 ст. 425 НК РФ и абз.2 пп.2 ст.426 НК РФ) за 2-й из 3-х последних месяцев отчетного периода ≠ сумме "
		+ "всех выплат по каждому иностранному гражданину за 2-й из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил9Ст10Гр04 = Р1Прил9Ст80Гр04'.
	
	Р1Прил9Ст10Гр04 = ПоказательПоСтроке("Р1Прил9Ст10Гр04");
	Р1Прил9Ст80Гр04 = ПоказательПоСтроке("Р1Прил9Ст80Гр04");
	
	Раздел1Прил9 = мДанныеОтчета.Раздел1Прил9[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр04, "Раздел1Прил9");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил9, Р1Прил9Ст80Гр04.Имя);
	СуммаР1Прил9Ст80Гр04 = 0;
	СуммаР1Прил9Ст80Гр04Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр04, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр04, "Раздел1Прил9");
		СуммаР1Прил9Ст80Гр04 = СуммаР1Прил9Ст80Гр04 + Р1Прил9Ст80Гр04.Значение;
		СуммаР1Прил9Ст80Гр04Стр = СуммаР1Прил9Ст80Гр04Стр + Р1Прил9Ст80Гр04.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил9Ст10Гр04.Значение, СуммаР1Прил9Ст80Гр04);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил9Ст80Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_277(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.277)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 3 месяц (гр. 5 ст. 010 прил. 9 р. 1) = ∑ всех гр. 5 ст. 080 прил. 9 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими тариф для иностранных граждан (абз.2 "
		+ "пп.2 п.2 ст. 425 НК РФ и абз.2 пп.2 ст.426 НК РФ) за 3-й из 3-х последних месяцев отчетного периода ≠ сумме "
		+ "всех выплат по каждому иностранному гражданину за 3-й из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил9Ст10Гр05 = Р1Прил9Ст80Гр05'.
	
	Р1Прил9Ст10Гр05 = ПоказательПоСтроке("Р1Прил9Ст10Гр05");
	Р1Прил9Ст80Гр05 = ПоказательПоСтроке("Р1Прил9Ст80Гр05");
	
	Раздел1Прил9 = мДанныеОтчета.Раздел1Прил9[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр05, "Раздел1Прил9");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил9, Р1Прил9Ст80Гр05.Имя);
	СуммаР1Прил9Ст80Гр05 = 0;
	СуммаР1Прил9Ст80Гр05Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр05, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр05, "Раздел1Прил9");
		СуммаР1Прил9Ст80Гр05 = СуммаР1Прил9Ст80Гр05 + Р1Прил9Ст80Гр05.Значение;
		СуммаР1Прил9Ст80Гр05Стр = СуммаР1Прил9Ст80Гр05Стр + Р1Прил9Ст80Гр05.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил9Ст10Гр05.Значение, СуммаР1Прил9Ст80Гр05);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил9Ст80Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_278(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.278)'");
	ОписаниеКС     = НСтр("ru='Итого выплат, всего (гр. 1 ст. 010 прил. 9 р. 1 отчетного периода) = гр. 1 ст. 010 прил. "
		+ "9 р. 1 предыдущего отчетного периода + гр. 2 ст. 010 прил. 9 р. 1 отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими тариф для иностранных граждан (абз.2 "
		+ "пп.2 п.2 ст. 425 НК РФ и абз.2 пп.2 ст.426 НК РФ) за отчетный период ≠ сумме аналогичных выплат за "
		+ "предыдущий отчетный период и за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил9Ст10Гр01 = Р1Прил9Ст10Гр01ПРП + Р1Прил9Ст10Гр02'.
	
	Р1Прил9Ст10Гр01 = ПоказательПоСтроке("Р1Прил9Ст10Гр01");
	Р1Прил9Ст10Гр01ПРП = ПоказательПоСтроке("Р1Прил9Ст10Гр01ПРП");
	Р1Прил9Ст10Гр02 = ПоказательПоСтроке("Р1Прил9Ст10Гр02");
	
	Раздел1Прил9 = мДанныеОтчета.Раздел1Прил9[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил9ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил9ПРП = мДанныеОтчетаПРП.Раздел1Прил9[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр01, "Раздел1Прил9");
	ВставитьЗначениеПоказателя(Раздел1Прил9ПРП, Р1Прил9Ст10Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр01ПРП, "Раздел1Прил9", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр02, "Раздел1Прил9");
	
	КС = ПоказателиКС(Р1Прил9Ст10Гр01.Значение, Р1Прил9Ст10Гр01ПРП.Значение + Р1Прил9Ст10Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил9Ст10Гр01ПРП.ЗначениеСтр + " + " + Р1Прил9Ст10Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_279(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.279)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за последние три месяца (гр. 2 ст. 010 прил. 9 р. 1) = гр. 3 ст. 010 прил. 9 "
		+ "р. 1 + гр. 4 ст. 010 прил. 9 р. 1 + гр. 5 ст. 010 прил. 9 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими тариф для иностранных граждан (абз.2 "
		+ "пп.2 п.2 ст. 425 НК РФ и абз.2 пп.2 ст.426 НК РФ) за 3 последних месяца отчетного периода ≠ сумме "
		+ "аналогичных выплат за каждый из 3 последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил9Ст10Гр02 = Р1Прил9Ст10Гр03 + Р1Прил9Ст10Гр04 + Р1Прил9Ст10Гр05'.
	
	Р1Прил9Ст10Гр02 = ПоказательПоСтроке("Р1Прил9Ст10Гр02");
	Р1Прил9Ст10Гр03 = ПоказательПоСтроке("Р1Прил9Ст10Гр03");
	Р1Прил9Ст10Гр04 = ПоказательПоСтроке("Р1Прил9Ст10Гр04");
	Р1Прил9Ст10Гр05 = ПоказательПоСтроке("Р1Прил9Ст10Гр05");
	
	Раздел1Прил9 = мДанныеОтчета.Раздел1Прил9[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр02, "Раздел1Прил9");
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр03, "Раздел1Прил9");
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр04, "Раздел1Прил9");
	ВставитьЗначениеПоказателя(Раздел1Прил9, Р1Прил9Ст10Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил9Ст10Гр05, "Раздел1Прил9");
	
	КС = ПоказателиКС(Р1Прил9Ст10Гр02.Значение, Р1Прил9Ст10Гр03.Значение + Р1Прил9Ст10Гр04.Значение + Р1Прил9Ст10Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил9Ст10Гр03.ЗначениеСтр + " + " + Р1Прил9Ст10Гр04.ЗначениеСтр + " + "
		+ Р1Прил9Ст10Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_280(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 9 к Разделу 1 (КС 1.280)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат, всего с начала расчетного периода (гр. 2 ст. 080 прил. 9 р. 1) = гр. 3 ст. "
		+ "080 прил. 9 р. 1 + гр. 4 ст. 080 прил. 9 р. 1 + гр. 5 ст. 080 прил. 9 р. 1 по каждой ст. 080 прил. 9 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты, производимые плательщиками, применяющими тариф для иностранных граждан (абз.2 "
		+ "пп.2 п.2 ст. 425 НК РФ и абз.2 пп.2 ст.426 НК РФ) в разрезе каждого иностранного гражданина за 3 последних "
		+ "месяца отчетного периода ≠ сумме аналогичных выплат по каждому иностранному гражданину за каждый из 3 "
		+ "последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил9Ст80Гр02 = Р1Прил9Ст80Гр03 + Р1Прил9Ст80Гр04 + Р1Прил9Ст80Гр05'.
	
	Р1Прил9Ст80Гр02 = ПоказательПоСтроке("Р1Прил9Ст80Гр02");
	Р1Прил9Ст80Гр03 = ПоказательПоСтроке("Р1Прил9Ст80Гр03");
	Р1Прил9Ст80Гр04 = ПоказательПоСтроке("Р1Прил9Ст80Гр04");
	Р1Прил9Ст80Гр05 = ПоказательПоСтроке("Р1Прил9Ст80Гр05");
	
	Раздел1Прил9 = мДанныеОтчета.Раздел1Прил9[0].Данные;
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил9, Р1Прил9Ст80Гр02.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр02, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр02, "Раздел1Прил9");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр03, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр03, "Раздел1Прил9");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр04, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр04, "Раздел1Прил9");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил9, Р1Прил9Ст80Гр05, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил9Ст80Гр05, "Раздел1Прил9");
		
		КС = ПоказателиКС(Р1Прил9Ст80Гр02.Значение, Р1Прил9Ст80Гр03.Значение + Р1Прил9Ст80Гр04.Значение + Р1Прил9Ст80Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил9Ст80Гр03.ЗначениеСтр + " + " + Р1Прил9Ст80Гр04.ЗначениеСтр + " + "
			+ Р1Прил9Ст80Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_281(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 10 к Разделу 1 (КС 1.281)'");
	ОписаниеКС     = НСтр("ru='Итого выплат, всего с начала расчетного периода (гр. 1 ст. 010 прил. 10 р. 1) = ∑ всех "
		+ "гр. 1 ст. 100 прил. 10 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты в пользу обучающихся (пп.1 п.3 ст.422 НК РФ) за отчетный период ≠ сумме выплат "
		+ "каждому обучающемуся за отчетный период'");
	
	// Формула КС кратко: 'Р1Прил10Ст10Гр01 = Р1Прил10Ст100Гр01'.
	
	Р1Прил10Ст10Гр01 = ПоказательПоСтроке("Р1Прил10Ст10Гр01");
	Р1Прил10Ст100Гр01 = ПоказательПоСтроке("Р1Прил10Ст100Гр01");
	
	Раздел1Прил10 = мДанныеОтчета.Раздел1Прил10[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр01, "Раздел1Прил10");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил10, Р1Прил10Ст100Гр01.Имя);
	СуммаР1Прил10Ст100Гр01 = 0;
	СуммаР1Прил10Ст100Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр01, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр01, "Раздел1Прил10");
		СуммаР1Прил10Ст100Гр01 = СуммаР1Прил10Ст100Гр01 + Р1Прил10Ст100Гр01.Значение;
		СуммаР1Прил10Ст100Гр01Стр = СуммаР1Прил10Ст100Гр01Стр + Р1Прил10Ст100Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил10Ст10Гр01.Значение, СуммаР1Прил10Ст100Гр01);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил10Ст100Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_282(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 10 к Разделу 1 (КС 1.282)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за последние три месяца (гр. 2 ст. 010 прил. 10 р. 1) = ∑ всех гр. 2 ст. 100 "
		+ "прил. 10 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты в пользу обучающихся (пп.1 п.3 ст.422 НК РФ) за 3 последних месяца отчетного "
		+ "периода ≠ сумме выплат каждому обучающемуся за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил10Ст10Гр02 = Р1Прил10Ст100Гр02'.
	
	Р1Прил10Ст10Гр02 = ПоказательПоСтроке("Р1Прил10Ст10Гр02");
	Р1Прил10Ст100Гр02 = ПоказательПоСтроке("Р1Прил10Ст100Гр02");
	
	Раздел1Прил10 = мДанныеОтчета.Раздел1Прил10[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр02, "Раздел1Прил10");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил10, Р1Прил10Ст100Гр02.Имя);
	СуммаР1Прил10Ст100Гр02 = 0;
	СуммаР1Прил10Ст100Гр02Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр02, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр02, "Раздел1Прил10");
		СуммаР1Прил10Ст100Гр02 = СуммаР1Прил10Ст100Гр02 + Р1Прил10Ст100Гр02.Значение;
		СуммаР1Прил10Ст100Гр02Стр = СуммаР1Прил10Ст100Гр02Стр + Р1Прил10Ст100Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил10Ст10Гр02.Значение, СуммаР1Прил10Ст100Гр02);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил10Ст100Гр02Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_283(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 10 к Разделу 1 (КС 1.283)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 1 месяц (гр. 3 ст. 010 прил. 10 р. 1) = ∑ всех гр. 3 ст. 100 прил. 10 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты в пользу обучающихся (пп.1 п.3 ст.422 НК РФ) за 1-й из трех последних месяцев "
		+ "отчетного периода ≠ сумме выплат каждому обучающемуся за 1-й из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил10Ст10Гр03 = Р1Прил10Ст100Гр03'.
	
	Р1Прил10Ст10Гр03 = ПоказательПоСтроке("Р1Прил10Ст10Гр03");
	Р1Прил10Ст100Гр03 = ПоказательПоСтроке("Р1Прил10Ст100Гр03");
	
	Раздел1Прил10 = мДанныеОтчета.Раздел1Прил10[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр03, "Раздел1Прил10");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил10, Р1Прил10Ст100Гр03.Имя);
	СуммаР1Прил10Ст100Гр03 = 0;
	СуммаР1Прил10Ст100Гр03Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр03, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр03, "Раздел1Прил10");
		СуммаР1Прил10Ст100Гр03 = СуммаР1Прил10Ст100Гр03 + Р1Прил10Ст100Гр03.Значение;
		СуммаР1Прил10Ст100Гр03Стр = СуммаР1Прил10Ст100Гр03Стр + Р1Прил10Ст100Гр03.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил10Ст10Гр03.Значение, СуммаР1Прил10Ст100Гр03);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил10Ст100Гр03Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_284(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 10 к Разделу 1 (КС 1.284)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 2 месяц (гр. 4 ст. 010 прил. 10 р. 1) = ∑ всех гр. 4 ст. 100 прил. 10 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты в пользу обучающихся (пп.1 п.3 ст.422 НК РФ) за 2-й из трех последних месяцев "
		+ "отчетного периода ≠ сумме выплат по каждому виду патента за 2-й из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил10Ст10Гр04 = Р1Прил10Ст100Гр04'.
	
	Р1Прил10Ст10Гр04 = ПоказательПоСтроке("Р1Прил10Ст10Гр04");
	Р1Прил10Ст100Гр04 = ПоказательПоСтроке("Р1Прил10Ст100Гр04");
	
	Раздел1Прил10 = мДанныеОтчета.Раздел1Прил10[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр04, "Раздел1Прил10");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил10, Р1Прил10Ст100Гр04.Имя);
	СуммаР1Прил10Ст100Гр04 = 0;
	СуммаР1Прил10Ст100Гр04Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр04, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр04, "Раздел1Прил10");
		СуммаР1Прил10Ст100Гр04 = СуммаР1Прил10Ст100Гр04 + Р1Прил10Ст100Гр04.Значение;
		СуммаР1Прил10Ст100Гр04Стр = СуммаР1Прил10Ст100Гр04Стр + Р1Прил10Ст100Гр04.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил10Ст10Гр04.Значение, СуммаР1Прил10Ст100Гр04);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил10Ст100Гр04Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_285(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 10 к Разделу 1 (КС 1.285)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за 3 месяц (гр. 5 ст. 010 прил. 10 р. 1) = ∑ всех гр. 5 ст. 100 прил. 10 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты в пользу обучающихся (пп.1 п.3 ст.422 НК РФ) за 3-й из трех последних месяцев "
		+ "отчетного периода ≠ сумме выплат каждому обучающемуся за 3-й из трех последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил10Ст10Гр05 = Р1Прил10Ст100Гр05'.
	
	Р1Прил10Ст10Гр05 = ПоказательПоСтроке("Р1Прил10Ст10Гр05");
	Р1Прил10Ст100Гр05 = ПоказательПоСтроке("Р1Прил10Ст100Гр05");
	
	Раздел1Прил10 = мДанныеОтчета.Раздел1Прил10[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр05, "Раздел1Прил10");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил10, Р1Прил10Ст100Гр05.Имя);
	СуммаР1Прил10Ст100Гр05 = 0;
	СуммаР1Прил10Ст100Гр05Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр05, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр05, "Раздел1Прил10");
		СуммаР1Прил10Ст100Гр05 = СуммаР1Прил10Ст100Гр05 + Р1Прил10Ст100Гр05.Значение;
		СуммаР1Прил10Ст100Гр05Стр = СуммаР1Прил10Ст100Гр05Стр + Р1Прил10Ст100Гр05.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р1Прил10Ст10Гр05.Значение, СуммаР1Прил10Ст100Гр05);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР1Прил10Ст100Гр05Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_286(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 10 к Разделу 1 (КС 1.286)'");
	ОписаниеКС     = НСтр("ru='Итого выплат, всего с начала расчетного периода (гр. 1 ст. 010 прил. 10 р. 1 отчетного "
		+ "периода) = гр. 1 ст. 010 прил. 10 р. 1 СВ предыдущего отчетного периода + гр. 2 ст. 010 прил. 10 р. 1 "
		+ "отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Выплаты в пользу обучающихся (пп.1 п.3 ст.422 НК РФ) за отчетный период ≠ сумме "
		+ "аналогичных выплат за предыдущий налоговый период и за 3 последних месяца отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил10Ст10Гр01 = Р1Прил10Ст10Гр01ПРП + Р1Прил10Ст10Гр02'.
	
	Р1Прил10Ст10Гр01 = ПоказательПоСтроке("Р1Прил10Ст10Гр01");
	Р1Прил10Ст10Гр01ПРП = ПоказательПоСтроке("Р1Прил10Ст10Гр01ПРП");
	Р1Прил10Ст10Гр02 = ПоказательПоСтроке("Р1Прил10Ст10Гр02");
	
	Раздел1Прил10 = мДанныеОтчета.Раздел1Прил10[0].Данные;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел1Прил10ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел1Прил10ПРП = мДанныеОтчетаПРП.Раздел1Прил10[0].Данные;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр01, "Раздел1Прил10");
	ВставитьЗначениеПоказателя(Раздел1Прил10ПРП, Р1Прил10Ст10Гр01ПРП);
	Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
		ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр01ПРП, "Раздел1Прил10", , мДанныеОтчетаПРП.СохраненныйДокументОтчета);
	КонецЕсли;
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр02, "Раздел1Прил10");
	
	КС = ПоказателиКС(Р1Прил10Ст10Гр01.Значение, Р1Прил10Ст10Гр01ПРП.Значение + Р1Прил10Ст10Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил10Ст10Гр01ПРП.ЗначениеСтр + " + " + Р1Прил10Ст10Гр02.ЗначениеСтр
		+ " Итог [" + КС.ПраваяЧастьСтр + "], когда существует отчет предыдущего отчетного периода";
	
	УсловиеВыполнено = ПроверятьКС;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_287(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 10 к Разделу 1 (КС 1.287)'");
	ОписаниеКС     = НСтр("ru='Итого выплат за последние три месяца (гр. 2 ст. 010 прил. 10 р. 1) = гр. 3 ст. 010 прил. "
		+ "10 р. 1 + гр. 4 ст. 010 прил. 10 р. 1 + гр. 5 ст. 010 прил. 10 р. 1'");
	ОписаниеОшибки = НСтр("ru='Выплаты в пользу обучающихся (пп.1 п.3 ст.422 НК РФ) за 3 последних месяца отчетного "
		+ "периода ≠ сумме аналогичных выплат за каждый из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил10Ст10Гр02 = Р1Прил10Ст10Гр03 + Р1Прил10Ст10Гр04 + Р1Прил10Ст10Гр05'.
	
	Р1Прил10Ст10Гр02 = ПоказательПоСтроке("Р1Прил10Ст10Гр02");
	Р1Прил10Ст10Гр03 = ПоказательПоСтроке("Р1Прил10Ст10Гр03");
	Р1Прил10Ст10Гр04 = ПоказательПоСтроке("Р1Прил10Ст10Гр04");
	Р1Прил10Ст10Гр05 = ПоказательПоСтроке("Р1Прил10Ст10Гр05");
	
	Раздел1Прил10 = мДанныеОтчета.Раздел1Прил10[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр02, "Раздел1Прил10");
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр03, "Раздел1Прил10");
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр04, "Раздел1Прил10");
	ВставитьЗначениеПоказателя(Раздел1Прил10, Р1Прил10Ст10Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил10Ст10Гр05, "Раздел1Прил10");
	
	КС = ПоказателиКС(Р1Прил10Ст10Гр02.Значение, Р1Прил10Ст10Гр03.Значение + Р1Прил10Ст10Гр04.Значение + Р1Прил10Ст10Гр05.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил10Ст10Гр03.ЗначениеСтр + " + " + Р1Прил10Ст10Гр04.ЗначениеСтр + " + "
		+ Р1Прил10Ст10Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_288(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка приложения 10 к Разделу 1 (КС 1.288)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат за последние три месяца (гр. 2 ст. 100 прил. 10 р. 1) = гр. 3 ст. 100 прил. "
		+ "10 р. 1 + гр. 4 ст. 100 прил. 10 р. 1 + гр. 5 ст. 100 прил. 10 р. 1 по каждой ст. 100 прил. 10 р. 1 СВ'");
	ОписаниеОшибки = НСтр("ru='Выплаты в пользу обучающихся (пп.1 п.3 ст.422 НК РФ) в разрезе каждого обучающегося за 3 "
		+ "последних месяца отчетного периода ≠ сумме аналогичных выплат в разрезе каждого обучающегося за каждый из "
		+ "3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Р1Прил10Ст100Гр02 = Р1Прил10Ст100Гр03 + Р1Прил10Ст100Гр04 + Р1Прил10Ст100Гр05'.
	
	Р1Прил10Ст100Гр02 = ПоказательПоСтроке("Р1Прил10Ст100Гр02");
	Р1Прил10Ст100Гр03 = ПоказательПоСтроке("Р1Прил10Ст100Гр03");
	Р1Прил10Ст100Гр04 = ПоказательПоСтроке("Р1Прил10Ст100Гр04");
	Р1Прил10Ст100Гр05 = ПоказательПоСтроке("Р1Прил10Ст100Гр05");
	
	Раздел1Прил10 = мДанныеОтчета.Раздел1Прил10[0].Данные;
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1Прил10, Р1Прил10Ст100Гр02.Имя);
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр02, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр02, "Раздел1Прил10");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр03, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр03, "Раздел1Прил10");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр04, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр04, "Раздел1Прил10");
		ВставитьЗначениеМногострочногоПоказателя(Раздел1Прил10, Р1Прил10Ст100Гр05, Инд);
		ВнестиПоказательВРасшифровку(Р1Прил10Ст100Гр05, "Раздел1Прил10");
		
		КС = ПоказателиКС(Р1Прил10Ст100Гр02.Значение, Р1Прил10Ст100Гр03.Значение + Р1Прил10Ст100Гр04.Значение + Р1Прил10Ст100Гр05.Значение);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил10Ст100Гр03.ЗначениеСтр + " + " + Р1Прил10Ст100Гр04.ЗначениеСтр + " + "
			+ Р1Прил10Ст100Гр05.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_289(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 2 (КС 1.289)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный период (ст. 030 р. 2) = ∑ всех "
		+ "гр. 1 ст. 090 прил. 1 р. 2'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС глав КФХ к уплате за отчетный период ≠ сумме всех страховых "
		+ "взносов на ОПС по каждому члену КФХ за отчетный период'");
	
	// Формула КС кратко: 'Р2Ст30Гр01 = Р2Пр1Ст90Гр01'.
	
	Р2Ст30Гр01 = ПоказательПоСтроке("Р2Ст30Гр01");
	Р2Пр1Ст90Гр01 = ПоказательПоСтроке("Р2Пр1Ст90Гр01");
	
	Раздел2 = мДанныеОтчета.Раздел2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел2, Р2Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р2Ст30Гр01, "Раздел2");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел2, Р2Пр1Ст90Гр01.Имя);
	СуммаР2Пр1Ст90Гр01 = 0;
	СуммаР2Пр1Ст90Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел2, Р2Пр1Ст90Гр01, Инд);
		ВнестиПоказательВРасшифровку(Р2Пр1Ст90Гр01, "Раздел2");
		СуммаР2Пр1Ст90Гр01 = СуммаР2Пр1Ст90Гр01 + Р2Пр1Ст90Гр01.Значение;
		СуммаР2Пр1Ст90Гр01Стр = СуммаР2Пр1Ст90Гр01Стр + Р2Пр1Ст90Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р2Ст30Гр01.Значение, СуммаР2Пр1Ст90Гр01);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР2Пр1Ст90Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_290(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 2 (КС 1.290)'");
	ОписаниеКС     = НСтр("ru='Сумма страховых взносов, подлежащая уплате за расчетный период (ст. 050 р. 2) = ∑ всех "
		+ "гр. 2 ст. 090 прил. 1 р. 2'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОМС глав КФХ к уплате за отчетный период ≠ сумме всех страховых "
		+ "взносов на ОМС по каждому члену КФХ за отчетный период'");
	
	// Формула КС кратко: 'Р2Ст50Гр01 = Р2Пр1Ст90Гр02'.
	
	Р2Ст50Гр01 = ПоказательПоСтроке("Р2Ст50Гр01");
	Р2Пр1Ст90Гр02 = ПоказательПоСтроке("Р2Пр1Ст90Гр02");
	
	Раздел2 = мДанныеОтчета.Раздел2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел2, Р2Ст50Гр01);
	ВнестиПоказательВРасшифровку(Р2Ст50Гр01, "Раздел2");
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел2, Р2Пр1Ст90Гр02.Имя);
	СуммаР2Пр1Ст90Гр02 = 0;
	СуммаР2Пр1Ст90Гр02Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел2, Р2Пр1Ст90Гр02, Инд);
		ВнестиПоказательВРасшифровку(Р2Пр1Ст90Гр02, "Раздел2");
		СуммаР2Пр1Ст90Гр02 = СуммаР2Пр1Ст90Гр02 + Р2Пр1Ст90Гр02.Значение;
		СуммаР2Пр1Ст90Гр02Стр = СуммаР2Пр1Ст90Гр02Стр + Р2Пр1Ст90Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(Р2Ст50Гр01.Значение, СуммаР2Пр1Ст90Гр02);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + РасшифровкаВСтр(СуммаР2Пр1Ст90Гр02Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_291(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.291)'");
	ОписаниеКС     = НСтр("ru='Сумма баз по страховым взносам на ОПС в размере, не превыш. пред. велич. за последние три "
		+ "месяца отчетного (расчетного) периода по всем видам тарифа (∑ (гр. 2 ст. 050 подр. 1.1 р.1 СВ - гр. 2 ст. "
		+ "051 подр. 1.1 р. 1 СВ) по всем значениям поля 001 прил. 1 р. 1 СВ) = ∑ гр. 2 ст. 250 р. 3 СВ'");
	ОписаниеОшибки = НСтр("ru='Сумма баз по страховым взносам на ОПС в размере, не превыш. пред. велич. за последние три "
		+ "месяца отчетного (расчетного) периода по всем видам тарифа ≠ сумме баз по страховым взносам на ОПС в размере "
		+ "не превыш. пред. велич. по физическим лицам за последние три месяца отчетного (расчетного) периода'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр02 - Пд11Пр1Ст51Гр02 = Пд321Ст250Гр02'.
	
	Пд11Пр1Ст50Гр02 = ПоказательПоСтроке("Пд11Пр1Ст50Гр02");
	Пд11Пр1Ст51Гр02 = ПоказательПоСтроке("Пд11Пр1Ст51Гр02");
	Пд321Ст250Гр02 = ПоказательПоСтроке("Пд321Ст250Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд11Пр1Ст50Гр02 = 0;
	СуммаПд11Пр1Ст50Гр02Стр = "";
	СуммаПд11Пр1Ст51Гр02 = 0;
	СуммаПд11Пр1Ст51Гр02Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст50Гр02 = СуммаПд11Пр1Ст50Гр02 + Пд11Пр1Ст50Гр02.Значение;
		СуммаПд11Пр1Ст50Гр02Стр = СуммаПд11Пр1Ст50Гр02Стр + Пд11Пр1Ст50Гр02.ЗначениеСтр + " + ";
		СуммаПд11Пр1Ст51Гр02 = СуммаПд11Пр1Ст51Гр02 + Пд11Пр1Ст51Гр02.Значение;
		СуммаПд11Пр1Ст51Гр02Стр = СуммаПд11Пр1Ст51Гр02Стр + Пд11Пр1Ст51Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	СуммаПд321Ст250Гр02 = 0;
	СуммаПд321Ст250Гр02Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр02);
		Если Число(" " + НомерСтраницыСтр) <= 9 Тогда
			ВнестиПоказательВРасшифровку(Пд321Ст250Гр02, "Раздел3", НомерСтраницыСтр);
			СуммаПд321Ст250Гр02Стр = СуммаПд321Ст250Гр02Стр + Пд321Ст250Гр02.ЗначениеСтр + " + ";
		ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
			СуммаПд321Ст250Гр02Стр = СуммаПд321Ст250Гр02Стр + ПредставлениеПродолжения;
			ПредставлениеПродолжения = "";
		КонецЕсли;
		СуммаПд321Ст250Гр02 = СуммаПд321Ст250Гр02 + Пд321Ст250Гр02.Значение;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд11Пр1Ст50Гр02 - СуммаПд11Пр1Ст51Гр02, СуммаПд321Ст250Гр02);
	Расшифровка = РасшифровкаВСтр(СуммаПд11Пр1Ст50Гр02Стр) + " - (" + РасшифровкаВСтр(СуммаПд11Пр1Ст51Гр02Стр)
		+ ") Итог [" + КС.ЛеваяЧастьСтр + "]" + " = " + РасшифровкаВСтр(СуммаПд321Ст250Гр02Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_292(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.292)'");
	ОписаниеКС     = НСтр("ru='∑ (гр. 3 ст. 050 подр. 1.1 прил. 1 р. 1 - гр. 3 ст. 051 подр. 1.1 прил. 1 р. 1 ) по всем "
		+ "значениям поля 001 прил. 1 р. 1 = ∑ ст. 220 р. 3 при условии соответствия значения ст. 190 р. 3 первому "
		+ "месяцу отчетного (расчетного) периода по всем р. 3'");
	ОписаниеОшибки = НСтр("ru='Сумма баз по страховым взносам на ОПС в размере не превыш.пред.велич. за 1-й из 3-х "
		+ "последних месяцев отчетного периода по всем видам тарифа ≠ сумме баз по страховым взносам на ОПС в размере "
		+ "не превыш.пред.велич. по каждому физическому лицу за 1-й из 3-х последних месяцев отчетного периода при "
		+ "условии соответствия значения месяца 1-му месяцу отчетного периода по каждому физическому лицу.'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр03 - Пд11Пр1Ст51Гр03 = Пд321СтМ1220Гр01'.
	
	Пд11Пр1Ст50Гр03 = ПоказательПоСтроке("Пд11Пр1Ст50Гр03");
	Пд11Пр1Ст51Гр03 = ПоказательПоСтроке("Пд11Пр1Ст51Гр03");
	Пд321СтМ1220Гр01 = ПоказательПоСтроке("Пд321СтМ1220Гр01");
	Пд321СтМ1190Гр01 = ПоказательПоСтроке("Пд321СтМ1190Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд11Пр1Ст50Гр03 = 0;
	СуммаПд11Пр1Ст50Гр03Стр = "";
	СуммаПд11Пр1Ст51Гр03 = 0;
	СуммаПд11Пр1Ст51Гр03Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр03);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр03, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст50Гр03 = СуммаПд11Пр1Ст50Гр03 + Пд11Пр1Ст50Гр03.Значение;
		СуммаПд11Пр1Ст50Гр03Стр = СуммаПд11Пр1Ст50Гр03Стр + Пд11Пр1Ст50Гр03.ЗначениеСтр + " + ";
		СуммаПд11Пр1Ст51Гр03 = СуммаПд11Пр1Ст51Гр03 + Пд11Пр1Ст51Гр03.Значение;
		СуммаПд11Пр1Ст51Гр03Стр = СуммаПд11Пр1Ст51Гр03Стр + Пд11Пр1Ст51Гр03.ЗначениеСтр + " + ";
	КонецЦикла;
	
	СуммаПд321СтМ1220Гр01 = 0;
	СуммаПд321СтМ1220Гр01Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1190Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1190Гр01, Инд);
			Если КодНайден(Пд321СтМ1190Гр01.Значение, "01,04,07,10") Тогда
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1220Гр01, Инд);
				Если Число(" " + НомерСтраницыСтр) <= 9 Тогда
					ВнестиПоказательВРасшифровку(Пд321СтМ1190Гр01, "Раздел3", НомерСтраницыСтр);
					ВнестиПоказательВРасшифровку(Пд321СтМ1220Гр01, "Раздел3", НомерСтраницыСтр);
					СуммаПд321СтМ1220Гр01Стр = СуммаПд321СтМ1220Гр01Стр + Пд321СтМ1220Гр01.ЗначениеСтр + " + ";
				ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
					СуммаПд321СтМ1220Гр01Стр = СуммаПд321СтМ1220Гр01Стр + ПредставлениеПродолжения;
					ПредставлениеПродолжения = "";
				КонецЕсли;
				СуммаПд321СтМ1220Гр01 = СуммаПд321СтМ1220Гр01 + Пд321СтМ1220Гр01.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд11Пр1Ст50Гр03 - СуммаПд11Пр1Ст51Гр03, СуммаПд321СтМ1220Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаПд11Пр1Ст50Гр03Стр) + " - (" + РасшифровкаВСтр(СуммаПд11Пр1Ст51Гр03Стр)
		+ ") Итог [" + КС.ЛеваяЧастьСтр + "]" + " = " + РасшифровкаВСтр(СуммаПд321СтМ1220Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_293(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.293)'");
	ОписаниеКС     = НСтр("ru='∑ (гр. 4 ст. 050 подр. 1.1 прил. 1 р. 1 - гр. 4 ст. 051 подр. 1.1 прил. 1 р. 1) по всем "
		+ "значениям поля 001 прил. 1 р. 1 = ∑ ст. 220 р. 3 при условии соответствия значения ст. 190 р. 3 второму "
		+ "месяцу отчетного (расчетного) периода по всем р. 3'");
	ОписаниеОшибки = НСтр("ru='Сумма баз по страховым взносам на ОПС в размере не превыш.пред.велич. за 2-й из 3-х "
		+ "последних месяцев отчетного периода по всем видам тарифа ≠ сумме баз по страховым взносам на ОПС в размере "
		+ "не превыш.пред.велич. по каждому физическому лицу за 2-й из 3-х последних месяцев отчетного периода при "
		+ "условии соответствия значения месяца 2-му месяцу отчетного периода по каждому физическому лицу.'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр04 - Пд11Пр1Ст51Гр04 = Пд321СтМ1220Гр01'.
	
	Пд11Пр1Ст50Гр04 = ПоказательПоСтроке("Пд11Пр1Ст50Гр04");
	Пд11Пр1Ст51Гр04 = ПоказательПоСтроке("Пд11Пр1Ст51Гр04");
	Пд321СтМ1220Гр01 = ПоказательПоСтроке("Пд321СтМ1220Гр01");
	Пд321СтМ1190Гр01 = ПоказательПоСтроке("Пд321СтМ1190Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд11Пр1Ст50Гр04 = 0;
	СуммаПд11Пр1Ст50Гр04Стр = "";
	СуммаПд11Пр1Ст51Гр04 = 0;
	СуммаПд11Пр1Ст51Гр04Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр04);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр04, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст50Гр04 = СуммаПд11Пр1Ст50Гр04 + Пд11Пр1Ст50Гр04.Значение;
		СуммаПд11Пр1Ст50Гр04Стр = СуммаПд11Пр1Ст50Гр04Стр + Пд11Пр1Ст50Гр04.ЗначениеСтр + " + ";
		СуммаПд11Пр1Ст51Гр04 = СуммаПд11Пр1Ст51Гр04 + Пд11Пр1Ст51Гр04.Значение;
		СуммаПд11Пр1Ст51Гр04Стр = СуммаПд11Пр1Ст51Гр04Стр + Пд11Пр1Ст51Гр04.ЗначениеСтр + " + ";
	КонецЦикла;
	
	СуммаПд321СтМ1220Гр01 = 0;
	СуммаПд321СтМ1220Гр01Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1190Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1190Гр01, Инд);
			Если КодНайден(Пд321СтМ1190Гр01.Значение, "02,05,08,11") Тогда
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1220Гр01, Инд);
				Если Число(" " + НомерСтраницыСтр) <= 9 Тогда
					ВнестиПоказательВРасшифровку(Пд321СтМ1190Гр01, "Раздел3", НомерСтраницыСтр);
					ВнестиПоказательВРасшифровку(Пд321СтМ1220Гр01, "Раздел3", НомерСтраницыСтр);
					СуммаПд321СтМ1220Гр01Стр = СуммаПд321СтМ1220Гр01Стр + Пд321СтМ1220Гр01.ЗначениеСтр + " + ";
				ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
					СуммаПд321СтМ1220Гр01Стр = СуммаПд321СтМ1220Гр01Стр + ПредставлениеПродолжения;
					ПредставлениеПродолжения = "";
				КонецЕсли;
				СуммаПд321СтМ1220Гр01 = СуммаПд321СтМ1220Гр01 + Пд321СтМ1220Гр01.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд11Пр1Ст50Гр04 - СуммаПд11Пр1Ст51Гр04, СуммаПд321СтМ1220Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаПд11Пр1Ст50Гр04Стр) + " - (" + РасшифровкаВСтр(СуммаПд11Пр1Ст51Гр04Стр)
		+ ") Итог [" + КС.ЛеваяЧастьСтр + "]" + " = " + РасшифровкаВСтр(СуммаПд321СтМ1220Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_294(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.294)'");
	ОписаниеКС     = НСтр("ru='∑ (гр. 5 ст. 050 подр. 1.1 прил. 1 р. 1 - гр.5 ст. 051 подр. 1.1 прил. 1 р. 1) по всем "
		+ "значениям поля 001 прил. 1 р. 1 = ∑ ст. 220 р. 3 при условии соответствия значения ст. 190 р. 3 третьему "
		+ "месяцу отчетного (расчетного) периода по всем р. 3'");
	ОписаниеОшибки = НСтр("ru='Сумма баз по страховым взносам на ОПС в размере не превыш.пред.велич. за 3-й из 3-х "
		+ "последних месяцев отчетного периода по всем видам тарифа ≠ сумме баз по страховым взносам на ОПС в размере "
		+ "не превыш.пред.велич. по каждому физическому лицу за 3-й из 3-х последних месяцев отчетного периода при "
		+ "условии соответствия значения месяца 3-му месяцу отчетного периода по каждому физическому лицу.'");
	
	// Формула КС кратко: 'Пд11Пр1Ст50Гр05 - Пд11Пр1Ст51Гр05 = Пд321СтМ1220Гр01'.
	
	Пд11Пр1Ст50Гр05 = ПоказательПоСтроке("Пд11Пр1Ст50Гр05");
	Пд11Пр1Ст51Гр05 = ПоказательПоСтроке("Пд11Пр1Ст51Гр05");
	Пд321СтМ1220Гр01 = ПоказательПоСтроке("Пд321СтМ1220Гр01");
	Пд321СтМ1190Гр01 = ПоказательПоСтроке("Пд321СтМ1190Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд11Пр1Ст50Гр05 = 0;
	СуммаПд11Пр1Ст50Гр05Стр = "";
	СуммаПд11Пр1Ст51Гр05 = 0;
	СуммаПд11Пр1Ст51Гр05Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст51Гр05);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст51Гр05, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст50Гр05 = СуммаПд11Пр1Ст50Гр05 + Пд11Пр1Ст50Гр05.Значение;
		СуммаПд11Пр1Ст50Гр05Стр = СуммаПд11Пр1Ст50Гр05Стр + Пд11Пр1Ст50Гр05.ЗначениеСтр + " + ";
		СуммаПд11Пр1Ст51Гр05 = СуммаПд11Пр1Ст51Гр05 + Пд11Пр1Ст51Гр05.Значение;
		СуммаПд11Пр1Ст51Гр05Стр = СуммаПд11Пр1Ст51Гр05Стр + Пд11Пр1Ст51Гр05.ЗначениеСтр + " + ";
	КонецЦикла;
	
	СуммаПд321СтМ1220Гр01 = 0;
	СуммаПд321СтМ1220Гр01Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1190Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1190Гр01, Инд);
			Если КодНайден(Пд321СтМ1190Гр01.Значение, "03,06,09,12") Тогда
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1220Гр01, Инд);
				Если Число(" " + НомерСтраницыСтр) <= 9 Тогда
					ВнестиПоказательВРасшифровку(Пд321СтМ1190Гр01, "Раздел3", НомерСтраницыСтр);
					ВнестиПоказательВРасшифровку(Пд321СтМ1220Гр01, "Раздел3", НомерСтраницыСтр);
					СуммаПд321СтМ1220Гр01Стр = СуммаПд321СтМ1220Гр01Стр + Пд321СтМ1220Гр01.ЗначениеСтр + " + ";
				ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
					СуммаПд321СтМ1220Гр01Стр = СуммаПд321СтМ1220Гр01Стр + ПредставлениеПродолжения;
					ПредставлениеПродолжения = "";
				КонецЕсли;
				СуммаПд321СтМ1220Гр01 = СуммаПд321СтМ1220Гр01 + Пд321СтМ1220Гр01.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд11Пр1Ст50Гр05 - СуммаПд11Пр1Ст51Гр05, СуммаПд321СтМ1220Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаПд11Пр1Ст50Гр05Стр) + " - (" + РасшифровкаВСтр(СуммаПд11Пр1Ст51Гр05Стр)
		+ ") Итог [" + КС.ЛеваяЧастьСтр + "]" + " = " + РасшифровкаВСтр(СуммаПд321СтМ1220Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_295(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.295)'");
	ОписаниеКС     = НСтр("ru='∑ всех гр. 3 ст. 040 подр. 1.3.1 прил. 1 р. 1 по всем значениям ст. 001 подр. 1.3.1 прил. "
		+ "1 р. 1 + ∑ всех гр. 3 ст. 040 подр. 1.3.2 прил. 1 р. 1 по всем комбинациям значений полей 001, 002, 003 "
		+ "подр. 1.3.2 прил. 1 р. 1 = ∑ ст. 280 р. 3 при условии соответствия значения ст. 260 р. 3 первому месяцу "
		+ "отчетного (расчетного) периода по всем р. 3'");
	ОписаниеОшибки = НСтр("ru='База для начисления страховых взносов на ОПС по доп. тарифу (п. 1 и п. 2 ст. 428) по всем "
		+ "основаниям для исчисления доп. тарифа и база для начисления страховых взносов на ОПС по доп. тарифу (п. 3 "
		+ "ст. 428) по всем комбинациям 001, 002 и 003 за 1-й из 3-х последних месяцев отчетного периода ≠ сумме выплат "
		+ "по страховым взносам на ОПС по доп. тарифу по каждому физическому лицу за 1-й из 3-х последних месяцев "
		+ "отчетного периода при условии соответствия значения месяца 1-му месяцу отчетного периода по каждому "
		+ "физическому лицу'");
	
	// Формула КС кратко: 'Пд131Пр1Ст40Гр03 + Пд132Пр1Ст40Гр03 = Пд322Ст280Гр01'.
	
	Пд131Пр1Ст40Гр03 = ПоказательПоСтроке("Пд131Пр1Ст40Гр03");
	Пд132Пр1Ст40Гр03 = ПоказательПоСтроке("Пд132Пр1Ст40Гр03");
	Пд322Ст280Гр01 = ПоказательПоСтроке("Пд322Ст280Гр01");
	Пд322Ст260Гр01 = ПоказательПоСтроке("Пд322Ст260Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд131Пр1Ст40Гр03 = 0;
	СуммаПд131Пр1Ст40Гр03Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст40Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр03, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			СуммаПд131Пр1Ст40Гр03 = СуммаПд131Пр1Ст40Гр03 + Пд131Пр1Ст40Гр03.Значение;
			СуммаПд131Пр1Ст40Гр03Стр = СуммаПд131Пр1Ст40Гр03Стр + Пд131Пр1Ст40Гр03.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	СуммаПд132Пр1Ст40Гр03 = 0;
	СуммаПд132Пр1Ст40Гр03Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст40Гр03.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр03, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр03, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			СуммаПд132Пр1Ст40Гр03 = СуммаПд132Пр1Ст40Гр03 + Пд132Пр1Ст40Гр03.Значение;
			СуммаПд132Пр1Ст40Гр03Стр = СуммаПд132Пр1Ст40Гр03Стр + Пд132Пр1Ст40Гр03.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	СуммаПд322Ст280Гр01 = 0;
	СуммаПд322Ст280Гр01Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд322Ст260Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст260Гр01, Инд);
			Если КодНайден(Пд322Ст260Гр01.Значение, "01,04,07,10") Тогда
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст280Гр01, Инд);
				Если Число(" " + НомерСтраницыСтр) <= 9 Тогда
					ВнестиПоказательВРасшифровку(Пд322Ст260Гр01, "Раздел3", НомерСтраницыСтр);
					ВнестиПоказательВРасшифровку(Пд322Ст280Гр01, "Раздел3", НомерСтраницыСтр);
					СуммаПд322Ст280Гр01Стр = СуммаПд322Ст280Гр01Стр + Пд322Ст280Гр01.ЗначениеСтр + " + ";
				ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
					СуммаПд322Ст280Гр01Стр = СуммаПд322Ст280Гр01Стр + ПредставлениеПродолжения;
					ПредставлениеПродолжения = "";
				КонецЕсли;
				СуммаПд322Ст280Гр01 = СуммаПд322Ст280Гр01 + Пд322Ст280Гр01.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд131Пр1Ст40Гр03 + СуммаПд132Пр1Ст40Гр03, СуммаПд322Ст280Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаПд131Пр1Ст40Гр03Стр) + " + " + РасшифровкаВСтр(СуммаПд132Пр1Ст40Гр03Стр)
		+ " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = " + РасшифровкаВСтр(СуммаПд322Ст280Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_296(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.296)'");
	ОписаниеКС     = НСтр("ru='∑ всех гр. 4 ст. 040 подр. 1.3.1 прил. 1 р. 1 СВ по всем значениям ст. 001 подр. 1.3.1 "
		+ "прил. 1 р. 1 СВ + ∑ всех гр. 4 ст. 040 подр. 1.3.2 прил. 1 р. 1 СВ по всем комбинациям значений полей 001, "
		+ "002, 003 подр. 1.3.2 прил. 1 р. 1 СВ = ∑ ст. 280 р. 3 СВ (при условии соответствия значения ст. 260 р. 3 СВ "
		+ "второму месяцу отчетного (расчетного) периода по всем р. 3 СВ)'");
	ОписаниеОшибки = НСтр("ru='База для начисления страховых взносов на ОПС по доп. тарифу (п. 1 и п. 2 ст. 428) по всем "
		+ "основаниям для исчисления доп. тарифа и база для начисления страховых взносов на ОПС по доп. тарифу (п. 3 "
		+ "ст. 428) по всем комбинациям 001, 002 и 003 за 2-й из 3-х последних месяцев отчетного периода ≠ сумме выплат "
		+ "по страховым взносам на ОПС по доп. тарифу по каждому физическому лицу за 2-й из 3-х последних месяцев "
		+ "отчетного периода при условии соответствия значения месяца 2-му месяцу отчетного периода по каждому "
		+ "физическому лицу'");
	
	// Формула КС кратко: 'Пд131Пр1Ст40Гр04 + Пд132Пр1Ст40Гр04 = Пд322Ст280Гр01'.
	
	Пд131Пр1Ст40Гр04 = ПоказательПоСтроке("Пд131Пр1Ст40Гр04");
	Пд132Пр1Ст40Гр04 = ПоказательПоСтроке("Пд132Пр1Ст40Гр04");
	Пд322Ст280Гр01 = ПоказательПоСтроке("Пд322Ст280Гр01");
	Пд322Ст260Гр01 = ПоказательПоСтроке("Пд322Ст260Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд131Пр1Ст40Гр04 = 0;
	СуммаПд131Пр1Ст40Гр04Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст40Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр04, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			СуммаПд131Пр1Ст40Гр04 = СуммаПд131Пр1Ст40Гр04 + Пд131Пр1Ст40Гр04.Значение;
			СуммаПд131Пр1Ст40Гр04Стр = СуммаПд131Пр1Ст40Гр04Стр + Пд131Пр1Ст40Гр04.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	СуммаПд132Пр1Ст40Гр04 = 0;
	СуммаПд132Пр1Ст40Гр04Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст40Гр04.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр04, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр04, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			СуммаПд132Пр1Ст40Гр04 = СуммаПд132Пр1Ст40Гр04 + Пд132Пр1Ст40Гр04.Значение;
			СуммаПд132Пр1Ст40Гр04Стр = СуммаПд132Пр1Ст40Гр04Стр + Пд132Пр1Ст40Гр04.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	СуммаПд322Ст280Гр01 = 0;
	СуммаПд322Ст280Гр01Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд322Ст260Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст260Гр01, Инд);
			Если КодНайден(Пд322Ст260Гр01.Значение, "02,05,08,11") Тогда
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст280Гр01, Инд);
				Если Число(" " + НомерСтраницыСтр) <= 9 Тогда
					ВнестиПоказательВРасшифровку(Пд322Ст260Гр01, "Раздел3", НомерСтраницыСтр);
					ВнестиПоказательВРасшифровку(Пд322Ст280Гр01, "Раздел3", НомерСтраницыСтр);
					СуммаПд322Ст280Гр01Стр = СуммаПд322Ст280Гр01Стр + Пд322Ст280Гр01.ЗначениеСтр + " + ";
				ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
					СуммаПд322Ст280Гр01Стр = СуммаПд322Ст280Гр01Стр + ПредставлениеПродолжения;
					ПредставлениеПродолжения = "";
				КонецЕсли;
				СуммаПд322Ст280Гр01 = СуммаПд322Ст280Гр01 + Пд322Ст280Гр01.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд131Пр1Ст40Гр04 + СуммаПд132Пр1Ст40Гр04, СуммаПд322Ст280Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаПд131Пр1Ст40Гр04Стр) + " + " + РасшифровкаВСтр(СуммаПд132Пр1Ст40Гр04Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = " + РасшифровкаВСтр(СуммаПд322Ст280Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_297(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.297)'");
	ОписаниеКС     = НСтр("ru='∑ всех гр. 5 ст. 040 подр. 1.3.1 прил. 1 р. 1 по всем значениям ст. 001 подр. 1.3.1 прил. "
		+ "1 р. 1 + ∑ всех гр. 5 ст. 040 подр. 1.3.2 прил. 1 р. 1 по всем комбинациям значений полей 001, 002, 003 "
		+ "подр. 1.3.2 прил. 1 р. 1 = ∑ ст. 280 р. 3 при условии соответствия значения ст. 260 р. 3 третьему месяцу "
		+ "отчетного (расчетного) периода по всем р. 3'");
	ОписаниеОшибки = НСтр("ru='База для начисления страховых взносов  на ОПС по доп. тарифу (п. 1 и п. 2 ст. 428) по "
		+ "всем основаниям для исчисления доп. тарифа и база для начисления страховых взносов на ОПС по доп. тарифу (п. "
		+ "3 ст. 428) по всем комбинациям 001, 002 и 003 за 3-й из 3-х последних месяцев отчетного периода ≠ сумме "
		+ "выплат по страховым взносам  на ОПС по доп. тарифу по каждому физическому лицу за 3-й из 3-х последних "
		+ "месяцев отчетного периода при условии соответствия значения месяца 3-му месяцу отчетного периода по каждому "
		+ "физическому лицу'");
	
	// Формула КС кратко: 'Пд131Пр1Ст40Гр05 + Пд132Пр1Ст40Гр05 = Пд322Ст280Гр01'.
	
	Пд131Пр1Ст40Гр05 = ПоказательПоСтроке("Пд131Пр1Ст40Гр05");
	Пд132Пр1Ст40Гр05 = ПоказательПоСтроке("Пд132Пр1Ст40Гр05");
	Пд322Ст280Гр01 = ПоказательПоСтроке("Пд322Ст280Гр01");
	Пд322Ст260Гр01 = ПоказательПоСтроке("Пд322Ст260Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд131Пр1Ст40Гр05 = 0;
	СуммаПд131Пр1Ст40Гр05Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд131Пр1Ст40Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд131Пр1Ст40Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд131Пр1Ст40Гр05, "Раздел1Прил1Подр1_3_1", НомерСтраницыСтр);
			СуммаПд131Пр1Ст40Гр05 = СуммаПд131Пр1Ст40Гр05 + Пд131Пр1Ст40Гр05.Значение;
			СуммаПд131Пр1Ст40Гр05Стр = СуммаПд131Пр1Ст40Гр05Стр + Пд131Пр1Ст40Гр05.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	СуммаПд132Пр1Ст40Гр05 = 0;
	СуммаПд132Пр1Ст40Гр05Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд132Пр1Ст40Гр05.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд132Пр1Ст40Гр05, Инд);
			ВнестиПоказательВРасшифровку(Пд132Пр1Ст40Гр05, "Раздел1Прил1Подр1_3_2", НомерСтраницыСтр);
			СуммаПд132Пр1Ст40Гр05 = СуммаПд132Пр1Ст40Гр05 + Пд132Пр1Ст40Гр05.Значение;
			СуммаПд132Пр1Ст40Гр05Стр = СуммаПд132Пр1Ст40Гр05Стр + Пд132Пр1Ст40Гр05.ЗначениеСтр + " + ";
		КонецЦикла;
	КонецЦикла;
	
	СуммаПд322Ст280Гр01 = 0;
	СуммаПд322Ст280Гр01Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд322Ст260Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст260Гр01, Инд);
			Если КодНайден(Пд322Ст260Гр01.Значение, "03,06,09,12") Тогда
				ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст280Гр01, Инд);
				Если Число(" " + НомерСтраницыСтр) <= 9 Тогда
					ВнестиПоказательВРасшифровку(Пд322Ст260Гр01, "Раздел3", НомерСтраницыСтр);
					ВнестиПоказательВРасшифровку(Пд322Ст280Гр01, "Раздел3", НомерСтраницыСтр);
					СуммаПд322Ст280Гр01Стр = СуммаПд322Ст280Гр01Стр + Пд322Ст280Гр01.ЗначениеСтр + " + ";
				ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
					СуммаПд322Ст280Гр01Стр = СуммаПд322Ст280Гр01Стр + ПредставлениеПродолжения;
					ПредставлениеПродолжения = "";
				КонецЕсли;
				СуммаПд322Ст280Гр01 = СуммаПд322Ст280Гр01 + Пд322Ст280Гр01.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд131Пр1Ст40Гр05 + СуммаПд132Пр1Ст40Гр05, СуммаПд322Ст280Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаПд131Пр1Ст40Гр05Стр) + " + " + РасшифровкаВСтр(СуммаПд132Пр1Ст40Гр05Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = " + РасшифровкаВСтр(СуммаПд322Ст280Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_298(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.298)'");
	ОписаниеКС     = НСтр("ru='Суммы выплат и иных вознаграждение за последние три месяца (гр. 1 ст. 250 р. 3) = ∑ ст. "
		+ "210 р. 3'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС в разрезе каждого физического лица за 3 "
		+ "последних месяца отчетного периода ≠ сумме выплат по страховым взносам на ОПС в разрезе каждого физического "
		+ "лица за каждый из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд321Ст250Гр01 = Пд321СтМ1210Гр01'.
	
	Пд321Ст250Гр01 = ПоказательПоСтроке("Пд321Ст250Гр01");
	Пд321СтМ1210Гр01 = ПоказательПоСтроке("Пд321СтМ1210Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр01);
		ВнестиПоказательВРасшифровку(Пд321Ст250Гр01, "Раздел3", НомерСтраницыСтр);
		
		СуммаПд321СтМ1210Гр01 = 0;
		СуммаПд321СтМ1210Гр01Стр = "";
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1210Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1210Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд321СтМ1210Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд321СтМ1210Гр01 = СуммаПд321СтМ1210Гр01 + Пд321СтМ1210Гр01.Значение;
			СуммаПд321СтМ1210Гр01Стр = СуммаПд321СтМ1210Гр01Стр + Пд321СтМ1210Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
		
		КС = ПоказателиКС(Пд321Ст250Гр01.Значение, СуммаПд321СтМ1210Гр01);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_299(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.299)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов на обязательное пенсионное страхование в пределах "
		+ "предельной величины за последние три месяца (гр. 2 ст. 250 р. 3) = ∑ ст. 220 р. 3'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОПС, не превышающая предельную величину, в разрезе каждого "
		+ "физического лица за 3 последних месяца отчетного периода ≠ сумме баз по страховым взносам на ОПС, не "
		+ "превыш.пред.величину, в разрезе каждого физического лица за каждый из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд321Ст250Гр02 = Пд321СтМ1220Гр01'.
	
	Пд321Ст250Гр02 = ПоказательПоСтроке("Пд321Ст250Гр02");
	Пд321СтМ1220Гр01 = ПоказательПоСтроке("Пд321СтМ1220Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр02);
		ВнестиПоказательВРасшифровку(Пд321Ст250Гр02, "Раздел3", НомерСтраницыСтр);
		
		СуммаПд321СтМ1220Гр01 = 0;
		СуммаПд321СтМ1220Гр01Стр = "";
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1220Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1220Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд321СтМ1220Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд321СтМ1220Гр01 = СуммаПд321СтМ1220Гр01 + Пд321СтМ1220Гр01.Значение;
			СуммаПд321СтМ1220Гр01Стр = СуммаПд321СтМ1220Гр01Стр + Пд321СтМ1220Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
		
		КС = ПоказателиКС(Пд321Ст250Гр02.Значение, СуммаПд321СтМ1220Гр01);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_300(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.300)'");
	ОписаниеКС     = НСтр("ru='База для исчисления страховых взносов на обязательное пенсионное страхование по "
		+ "гражданско-правовым договорам за последние три месяца (гр. 3 ст. 250 р. 3) = ∑ ст. 230 р. 3'");
	ОписаниеОшибки = НСтр("ru='База по страховым взносам на ОПС, не превышающая предельную величину по ГПД, в разрезе "
		+ "каждого физического лица за 3 последних месяца отчетного периода ≠ сумме баз по страховым взносам на ОПС, не "
		+ "превыш.пред.величину по ГПД, в разрезе каждого физического лица за каждый из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд321Ст250Гр03 = Пд321СтМ1230Гр01'.
	
	Пд321Ст250Гр03 = ПоказательПоСтроке("Пд321Ст250Гр03");
	Пд321СтМ1230Гр01 = ПоказательПоСтроке("Пд321СтМ1230Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр03);
		ВнестиПоказательВРасшифровку(Пд321Ст250Гр03, "Раздел3", НомерСтраницыСтр);
		
		СуммаПд321СтМ1230Гр01 = 0;
		СуммаПд321СтМ1230Гр01Стр = "";
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1230Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1230Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд321СтМ1230Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд321СтМ1230Гр01 = СуммаПд321СтМ1230Гр01 + Пд321СтМ1230Гр01.Значение;
			СуммаПд321СтМ1230Гр01Стр = СуммаПд321СтМ1230Гр01Стр + Пд321СтМ1230Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
		
		КС = ПоказателиКС(Пд321Ст250Гр03.Значение, СуммаПд321СтМ1230Гр01);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_301(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.301)'");
	ОписаниеКС     = НСтр("ru='Сумма исчисленных страховых взносов с базы исчисления страховых взносов, не превышающих "
		+ "предельную величину за последние три месяца (гр. 4 ст. 250 р. 3) = ∑ ст. 240 р. 3'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС с базы, не превыш.пред.величину, в разрезе каждого физического "
		+ "лица за 3 последних месяца отчетного периода ≠ сумме страховых взносов на ОПС с базы, не превышающей "
		+ "предельную величину, в разрезе каждого физического лица за каждый из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд321Ст250Гр04 = Пд321СтМ1240Гр01'.
	
	Пд321Ст250Гр04 = ПоказательПоСтроке("Пд321Ст250Гр04");
	Пд321СтМ1240Гр01 = ПоказательПоСтроке("Пд321СтМ1240Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр04);
		ВнестиПоказательВРасшифровку(Пд321Ст250Гр04, "Раздел3", НомерСтраницыСтр);
		
		СуммаПд321СтМ1240Гр01 = 0;
		СуммаПд321СтМ1240Гр01Стр = "";
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд321СтМ1240Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд321СтМ1240Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд321СтМ1240Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд321СтМ1240Гр01 = СуммаПд321СтМ1240Гр01 + Пд321СтМ1240Гр01.Значение;
			СуммаПд321СтМ1240Гр01Стр = СуммаПд321СтМ1240Гр01Стр + Пд321СтМ1240Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
		
		КС = ПоказателиКС(Пд321Ст250Гр04.Значение, СуммаПд321СтМ1240Гр01);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_302(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.302)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений, на которые начислены страховые взносы за последние "
		+ "три месяца (гр. 1 ст. 300 р. 3) = ∑ ст. 280 р. 3'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат по страховым взносам на ОПС по дополнительному тарифу, в разрезе каждого "
		+ "физического лица за 3 последних месяца отчетного периода ≠ сумме выплат по страховым взносам на ОПС по "
		+ "дополнительному тарифу, в разрезе каждого физического лица за каждый из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд322Ст300Гр01 = Пд322Ст280Гр01'.
	
	Пд322Ст300Гр01 = ПоказательПоСтроке("Пд322Ст300Гр01");
	Пд322Ст280Гр01 = ПоказательПоСтроке("Пд322Ст280Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд322Ст300Гр01);
		ВнестиПоказательВРасшифровку(Пд322Ст300Гр01, "Раздел3", НомерСтраницыСтр);
		
		СуммаПд322Ст280Гр01 = 0;
		СуммаПд322Ст280Гр01Стр = "";
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд322Ст280Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст280Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд322Ст280Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд322Ст280Гр01 = СуммаПд322Ст280Гр01 + Пд322Ст280Гр01.Значение;
			СуммаПд322Ст280Гр01Стр = СуммаПд322Ст280Гр01Стр + Пд322Ст280Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
		
		КС = ПоказателиКС(Пд322Ст300Гр01.Значение, СуммаПд322Ст280Гр01);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_303(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.303)'");
	ОписаниеКС     = НСтр("ru='Сумма исчисленных страховых взносов за последние три месяца (гр. 2 ст. 300 р. 3) = ∑ ст. "
		+ "290 р. 3'");
	ОписаниеОшибки = НСтр("ru='Страховые взносы на ОПС по доп.тарифу, в разрезе каждого физического лица за 3 последних "
		+ "месяца отчетного периода ≠ сумме страховых взносов на ОПС по дополнительному тарифу, в разрезе каждого "
		+ "физического лица за каждый из 3-х последних месяцев отчетного периода'");
	
	// Формула КС кратко: 'Пд322Ст300Гр02 = Пд322Ст290Гр01'.
	
	Пд322Ст300Гр02 = ПоказательПоСтроке("Пд322Ст300Гр02");
	Пд322Ст290Гр01 = ПоказательПоСтроке("Пд322Ст290Гр01");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд322Ст300Гр02);
		ВнестиПоказательВРасшифровку(Пд322Ст300Гр02, "Раздел3", НомерСтраницыСтр);
		
		СуммаПд322Ст290Гр01 = 0;
		СуммаПд322Ст290Гр01Стр = "";
		КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(ДанныеСтраницы, Пд322Ст290Гр01.Имя);
		Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
			ВставитьЗначениеМногострочногоПоказателя(ДанныеСтраницы, Пд322Ст290Гр01, Инд);
			ВнестиПоказательВРасшифровку(Пд322Ст290Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд322Ст290Гр01 = СуммаПд322Ст290Гр01 + Пд322Ст290Гр01.Значение;
			СуммаПд322Ст290Гр01Стр = СуммаПд322Ст290Гр01Стр + Пд322Ст290Гр01.ЗначениеСтр + " + ";
		КонецЦикла;
		
		КС = ПоказателиКС(Пд322Ст300Гр02.Значение, СуммаПд322Ст290Гр01);
		Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
		
		Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_304(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.304)'");
	ОписаниеКС     = НСтр("ru='Сумма базы по страховым взносам (гр. 2 ст. 250 р. 3 СВ оп + гр. 2 ст. 250 р. 3 СВ "
		+ "предыдущего отчетного периода (в пределах расчетного периода)) <= 876 000'");
	ОписаниеОшибки = НСтр("ru='Сумма базы по страховым взносам на ОПС, не превышающей предельную величину, в разрезе "
		+ "каждого физического лица за 3 последних месяца отчетного периода и суммы аналогичных баз за все предыдущие "
		+ "периоды в пределах отчетного периода больше предельной величины 876000'");
	
	// Формула КС кратко: 'Пд321Ст250Гр02 + Пд321Ст250Гр02ПРП <= 876000'.
	
	Пд321Ст250Гр02 = ПоказательПоСтроке("Пд321Ст250Гр02");
	Пд321Ст250Гр02ПРП = ПоказательПоСтроке("Пд321Ст250Гр02ПРП");
	
	Раздел3 = мДанныеОтчета.Раздел3;
	
	МесяцПредставленияОтчета = Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	
	ПроверятьКС = Ложь;
	Раздел3ПРП = Новый Структура();
	Если МесяцПредставленияОтчета = 3 Тогда
		ПроверятьКС = Истина;
	ИначеЕсли мДанныеОтчетаПРП <> Неопределено Тогда
		Раздел3ПРП = мДанныеОтчетаПРП.Раздел3;
		ПроверятьКС = Истина;
	КонецЕсли;
	
	КоличествоПроверенныхСтраниц = 0;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		
		КоличествоПроверенныхСтраниц = КоличествоПроверенныхСтраниц + 1;
		
		ИННФЛ = Неопределено;
		ДанныеСтраницы.Свойство("П000310006001", ИННФЛ);
		СНИЛС = Неопределено;
		ДанныеСтраницы.Свойство("П000310007001", СНИЛС);
		Если НЕ ЗначениеЗаполнено(ИННФЛ) И НЕ ЗначениеЗаполнено(СНИЛС) Тогда
			Продолжить;
		КонецЕсли;
		
		СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
		ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
		
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр02);
		ВнестиПоказательВРасшифровку(Пд321Ст250Гр02, "Раздел3", НомерСтраницыСтр);
		
		СуммаПд321Ст250Гр02ПРП = 0;
		СуммаПд321Ст250Гр02ПРПСтр = "";
		
		Если ПроверятьКС И МесяцПредставленияОтчета <> 3 Тогда
			Для Каждого СтраницаРазделаПРП Из Раздел3ПРП Цикл
				ДанныеСтраницыПРП = СтраницаРазделаПРП.Данные;
				НомерСтраницыСтрПРП = СтраницаРазделаПРП.НомерСтраницы;
				
				ИННФЛ_ПРП = Неопределено;
				ДанныеСтраницыПРП.Свойство("П000310006001", ИННФЛ_ПРП);
				СНИЛС_ПРП = Неопределено;
				ДанныеСтраницыПРП.Свойство("П000310007001", СНИЛС_ПРП);
				Если НЕ ЗначениеЗаполнено(ИННФЛ_ПРП) И НЕ ЗначениеЗаполнено(СНИЛС_ПРП) Тогда
					Продолжить;
				КонецЕсли;
				
				Если (ИННФЛ = ИННФЛ_ПРП) И (СНИЛС = СНИЛС_ПРП) Тогда
					ВставитьЗначениеПоказателя(ДанныеСтраницыПРП, Пд321Ст250Гр02ПРП);
					ВнестиПоказательВРасшифровку(Пд321Ст250Гр02ПРП, "Раздел3", НомерСтраницыСтрПРП, мДанныеОтчетаПРП.СохраненныйДокументОтчета);
					СуммаПд321Ст250Гр02ПРП = СуммаПд321Ст250Гр02ПРП + Пд321Ст250Гр02ПРП.Значение;
					СуммаПд321Ст250Гр02ПРПСтр = СуммаПд321Ст250Гр02ПРПСтр + Пд321Ст250Гр02ПРП.ЗначениеСтр + " + ";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		КС = ПоказателиКС(Пд321Ст250Гр02.Значение + СуммаПд321Ст250Гр02ПРП, 876000);
		Расшифровка = Пд321Ст250Гр02.ЗначениеСтр + " + " + РасшифровкаВСтр(СуммаПд321Ст250Гр02ПРПСтр)
			+ " Итог [" + КС.ЛеваяЧастьСтр + "]" + " <= " + КС.ПраваяЧастьСтр + ", когда существует отчет предыдущего отчетного периода";
		
		УсловиеВыполнено = ПроверятьКС;
		Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть <= КС.ПраваяЧасть) Тогда
			ЭтоОшибка = Ложь;
			ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
		Иначе
			ЭтоОшибка = Истина;
			ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
		КонецЕсли;
		
		Если КоличествоПроверенныхСтраниц >= 1000 Тогда
			Расшифровка = Расшифровка + Символы.ПС + Символы.ПС + НСтр("ru='Последняя проверка для этого КС (проверяется не более 1000 ФЛ)'");
		КонецЕсли;
		
		ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
			Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
		
		СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
		СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
		
		Если КоличествоПроверенныхСтраниц >= 1000 Тогда // Для этого КС установлено ограничение - 1000 проверок
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_305(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.305)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц на ОПС с начала расчетного периода (гр. 1 ст. 010 "
		+ "подразд.1.1 р. 1 СВ) > 0 при ст. 160 р. 3 СВ = 1'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц на ОПС с начала расчетного периода <= 0 при ст. 160 р. 3 СВ "
		+ "= 1'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр01 > 0, когда Пд31Ст160Гр01 = "1"'.
	
	Пд11Пр1Ст10Гр01 = ПоказательПоСтроке("Пд11Пр1Ст10Гр01");
	Пд31Ст160Гр01 = ПоказательПоСтроке("Пд31Ст160Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд31Ст160Гр01Стр = "0";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст160Гр01);
		Если Пд31Ст160Гр01.Значение = "1" Тогда
			ВнестиПоказательВРасшифровку(Пд31Ст160Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд31Ст160Гр01Стр = "1";
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд11Пр1Ст10Гр01 = 0;
	СуммаПд11Пр1Ст10Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст10Гр01 = СуммаПд11Пр1Ст10Гр01 + Пд11Пр1Ст10Гр01.Значение;
		СуммаПд11Пр1Ст10Гр01Стр = СуммаПд11Пр1Ст10Гр01Стр + Пд11Пр1Ст10Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд11Пр1Ст10Гр01, 0);
	Расшифровка = РасшифровкаВСтр(СуммаПд11Пр1Ст10Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " > "
		+ КС.ПраваяЧастьСтр + ", при " + СуммаПд31Ст160Гр01Стр + " = 1";
	
	УсловиеВыполнено = СуммаПд31Ст160Гр01Стр = "1";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_306(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.306)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц на ОМС с начала расчетного периода (гр. 1 ст. 010 подразд. "
		+ "1.2 р. 1 СВ) > 0 при ст. 170 р. 3 СВ = 1'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц на ОМС с начала расчетного периода <= 0 при ст. 170 р. 3 СВ "
		+ "= 1'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр01 > 0, когда Пд31Ст170Гр01 = "1"'.
	
	Пд12Пр1Ст10Гр01 = ПоказательПоСтроке("Пд12Пр1Ст10Гр01");
	Пд31Ст170Гр01 = ПоказательПоСтроке("Пд31Ст170Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд31Ст170Гр01Стр = "0";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст170Гр01);
		Если Пд31Ст170Гр01.Значение = "1" Тогда
			ВнестиПоказательВРасшифровку(Пд31Ст170Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд31Ст170Гр01Стр = "1";
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд12Пр1Ст10Гр01 = 0;
	СуммаПд12Пр1Ст10Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр01);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд12Пр1Ст10Гр01 = СуммаПд12Пр1Ст10Гр01 + Пд12Пр1Ст10Гр01.Значение;
		СуммаПд12Пр1Ст10Гр01Стр = СуммаПд12Пр1Ст10Гр01Стр + Пд12Пр1Ст10Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд12Пр1Ст10Гр01, 0);
	Расшифровка = РасшифровкаВСтр(СуммаПд12Пр1Ст10Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " > "
		+ КС.ПраваяЧастьСтр + ", при " + СуммаПд31Ст170Гр01Стр + " = 1";
	
	УсловиеВыполнено = СуммаПд31Ст170Гр01Стр = "1";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_307(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.307)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц на ОСС с начала расчетного периода (гр. 1 ст. 010 прилож. 2 "
		+ "р. 1 СВ) > 0 при ст. 180 р. 3 СВ = 1'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц на ОСС с начала расчетного периода <= 0 при ст. 180 р. 3 СВ "
		+ "= 1'");
	
	// Формула КС кратко: 'Р1Прил2Ст10Гр01 > 0, когда Пд31Ст180Гр01 = "1"'.
	
	Р1Прил2Ст10Гр01 = ПоказательПоСтроке("Р1Прил2Ст10Гр01");
	Пд31Ст180Гр01 = ПоказательПоСтроке("Пд31Ст180Гр01");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд31Ст180Гр01Стр = "0";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст180Гр01);
		Если Пд31Ст180Гр01.Значение = "1" Тогда
			ВнестиПоказательВРасшифровку(Пд31Ст180Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд31Ст180Гр01Стр = "1";
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр01, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст10Гр01.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", при " + СуммаПд31Ст180Гр01Стр + " = 1";
	
	УсловиеВыполнено = СуммаПд31Ст180Гр01Стр = "1";
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_308(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.308)'");
	ОписаниеКС     = НСтр("ru=' Количество застрахованных лиц на ОПС (гр. 2 ст. 010 подразд. 1.1 прилож. 1 р. 1 СВ) = "
		+ "количеству лиц застрахованных в системе ОПС (∑ стр. 160 р. 3 СВ = 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц на ОПС, указанных в расчете сумм страховых взносов ≠ "
		+ "количеству лиц застрахованных в системе ОПС, указанных в составе персонифицированных сведений'");
	
	// Формула КС кратко: 'Пд11Пр1Ст10Гр02 = СтрПд31Ст160Гр01ОПС, когда Пд31Ст160Гр01 = "1"'.
	
	Пд11Пр1Ст10Гр02 = ПоказательПоСтроке("Пд11Пр1Ст10Гр02");
	Пд31Ст160Гр01 = ПоказательПоСтроке("Пд31Ст160Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СтрПд31Ст160Гр01ОПС = 0;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст160Гр01);
		Если Пд31Ст160Гр01.Значение = "1" Тогда
			ВнестиПоказательВРасшифровку(Пд31Ст160Гр01, "Раздел3", НомерСтраницыСтр);
			СтрПд31Ст160Гр01ОПС = СтрПд31Ст160Гр01ОПС + 1;
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд11Пр1Ст10Гр02 = 0;
	СуммаПд11Пр1Ст10Гр02Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст10Гр02 = СуммаПд11Пр1Ст10Гр02 + Пд11Пр1Ст10Гр02.Значение;
		СуммаПд11Пр1Ст10Гр02Стр = СуммаПд11Пр1Ст10Гр02Стр + Пд11Пр1Ст10Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд11Пр1Ст10Гр02, СтрПд31Ст160Гр01ОПС);
	Расшифровка = РасшифровкаВСтр(СуммаПд11Пр1Ст10Гр02Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = " + КС.ПраваяЧастьСтр + ", когда стр. 160 р. 3 СВ = 1";
	
	УсловиеВыполнено = СтрПд31Ст160Гр01ОПС > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_309(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.309)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц на ОМС (гр. 2 ст. 010 подразд. 1.2 прилож. 1 р. 1 СВ) = "
		+ "количеству лиц застрахованных в системе ОМС (∑ стр. 170 р. 3 СВ = 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц на ОМС указанных в расчете сумм страховых взносов ≠ "
		+ "количеству лиц застрахованных в системе ОМС, указанных в составе персонифицированных сведений'");
	
	// Формула КС кратко: 'Пд12Пр1Ст10Гр02 = СтрПд31Ст170Гр01ОМС, когда Пд31Ст170Гр01 = "1"'.
	
	Пд12Пр1Ст10Гр02 = ПоказательПоСтроке("Пд12Пр1Ст10Гр02");
	Пд31Ст170Гр01 = ПоказательПоСтроке("Пд31Ст170Гр01");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СтрПд31Ст170Гр01ОМС = 0;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст170Гр01);
		Если Пд31Ст170Гр01.Значение = "1" Тогда
			ВнестиПоказательВРасшифровку(Пд31Ст170Гр01, "Раздел3", НомерСтраницыСтр);
			СтрПд31Ст170Гр01ОМС = СтрПд31Ст170Гр01ОМС + 1;
		КонецЕсли;
	КонецЦикла;
	
	СуммаПд12Пр1Ст10Гр02 = 0;
	СуммаПд12Пр1Ст10Гр02Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд12Пр1Ст10Гр02);
		ВнестиПоказательВРасшифровку(Пд12Пр1Ст10Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд12Пр1Ст10Гр02 = СуммаПд12Пр1Ст10Гр02 + Пд12Пр1Ст10Гр02.Значение;
		СуммаПд12Пр1Ст10Гр02Стр = СуммаПд12Пр1Ст10Гр02Стр + Пд12Пр1Ст10Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд12Пр1Ст10Гр02, СтрПд31Ст170Гр01ОМС);
	Расшифровка = РасшифровкаВСтр(СуммаПд12Пр1Ст10Гр02Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = " + КС.ПраваяЧастьСтр + ", когда стр. 170 р. 3 СВ = 1";
	
	УсловиеВыполнено = СтрПд31Ст170Гр01ОМС > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_310(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.310)'");
	ОписаниеКС     = НСтр("ru='Количество застрахованных лиц на ОСС (гр. 2 ст. 010 прилож. 2 р. 1 СВ) = количеству лиц "
		+ "застрахованных в системе ОСС (∑ стр. 180 р. 3 СВ = 1)'");
	ОписаниеОшибки = НСтр("ru='Количество застрахованных лиц на ОСС указанных в расчете сумм страховых взносов ≠ "
		+ "количеству лиц застрахованных в системе ОСС, указанных в составе персонифицированных сведений'");
	
	// Формула КС кратко: 'Р1Прил2Ст10Гр02 = СтрПд31Ст180Гр01ОСС, когда Пд31Ст180Гр01 = "1"'.
	
	Р1Прил2Ст10Гр02 = ПоказательПоСтроке("Р1Прил2Ст10Гр02");
	Пд31Ст180Гр01 = ПоказательПоСтроке("Пд31Ст180Гр01");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СтрПд31Ст180Гр01ОСС = 0;
	
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд31Ст180Гр01);
		Если Пд31Ст180Гр01.Значение = "1" Тогда
			ВнестиПоказательВРасшифровку(Пд31Ст180Гр01, "Раздел3", НомерСтраницыСтр);
			СтрПд31Ст180Гр01ОСС = СтрПд31Ст180Гр01ОСС + 1;
		КонецЕсли;
	КонецЦикла;
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст10Гр02, "Раздел1Прил2");
	
	КС = ПоказателиКС(Р1Прил2Ст10Гр02.Значение, СтрПд31Ст180Гр01ОСС);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр + ", когда стр. 180 р. 3 СВ = 1";
	
	УсловиеВыполнено = СтрПд31Ст180Гр01ОСС > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть = КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_1_311(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Раздела 3 (КС 1.311)'");
	ОписаниеКС     = НСтр("ru='Сумма выплат и иных вознаграждений по застрахованным лицам за последние три месяца "
		+ "отчетного (расчетного периода) (∑ гр. 1 ст. 250 р. 3 СВ) = сумме выплат и иных вознаграждений, начисленных в "
		+ "пользу физических лиц в целом по плательщику за последние три месяца отчетного (расчетного периода) (гр. 2 "
		+ "ст. 030  по всем значениям поля 001 прил.1 р. 1 подр. 1.1 р. 1 СВ)'");
	ОписаниеОшибки = НСтр("ru='Сумма выплат и иных вознаграждений по застрахованным лицам за последние три месяца "
		+ "отчетного (расчетного периода) ≠ сумме выплат и иных вознаграждений, начисленных в пользу физических лиц в "
		+ "целом по плательщику за последние три месяца отчетного (расчетного периода)'");
	
	// Формула КС кратко: 'Пд321Ст250Гр01 = Пд11Пр1Ст30Гр02'.
	
	Пд321Ст250Гр01 = ПоказательПоСтроке("Пд321Ст250Гр01");
	Пд11Пр1Ст30Гр02 = ПоказательПоСтроке("Пд11Пр1Ст30Гр02");
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	Раздел3 = мДанныеОтчета.Раздел3;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	СуммаПд321Ст250Гр01 = 0;
	СуммаПд321Ст250Гр01Стр = "";
	ПредставлениеПродолжения = "<...>";
	Для Каждого СтраницаРаздела Из Раздел3 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд321Ст250Гр01);
		Если Число(" " + НомерСтраницыСтр) <= 9 Тогда
			ВнестиПоказательВРасшифровку(Пд321Ст250Гр01, "Раздел3", НомерСтраницыСтр);
			СуммаПд321Ст250Гр01Стр = СуммаПд321Ст250Гр01Стр + Пд321Ст250Гр01.ЗначениеСтр + " + ";
		ИначеЕсли ЗначениеЗаполнено(ПредставлениеПродолжения) Тогда
			СуммаПд321Ст250Гр01Стр = СуммаПд321Ст250Гр01Стр + ПредставлениеПродолжения;
			ПредставлениеПродолжения = "";
		КонецЕсли;
		СуммаПд321Ст250Гр01 = СуммаПд321Ст250Гр01 + Пд321Ст250Гр01.Значение;
	КонецЦикла;
	
	СуммаПд11Пр1Ст30Гр02 = 0;
	СуммаПд11Пр1Ст30Гр02Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст30Гр02);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст30Гр02, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст30Гр02 = СуммаПд11Пр1Ст30Гр02 + Пд11Пр1Ст30Гр02.Значение;
		СуммаПд11Пр1Ст30Гр02Стр = СуммаПд11Пр1Ст30Гр02Стр + Пд11Пр1Ст30Гр02.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаПд321Ст250Гр01, СуммаПд11Пр1Ст30Гр02);
	Расшифровка = РасшифровкаВСтр(СуммаПд321Ст250Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " = " + РасшифровкаВСтр(СуммаПд11Пр1Ст30Гр02Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_2_1(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Расчета страховых взносов (КС 2.1)'");
	ОписаниеКС     = НСтр("ru='Обязательность представления Расчета страховых взносов в случае представления 6НДФЛ'");
	ОписаниеОшибки = НСтр("ru=''");
	
	Отчет6НДФЛ = РегламентированнаяОтчетность.ПолучитьДокументМДКС(СтруктураРеквизитовФормы.мСохраненныйДок, "РегламентированныйОтчет6НДФЛ");
	Если Отчет6НДФЛ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	Расшифровка = "Расчет страховых взносов должен быть обязательно представлен, т.к. существует отчет 6НДФЛ за отчетный период";
	
	ЭтоОшибка = Ложь;
	ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_2_2(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Расчета страховых взносов (КС 2.2)'");
	ОписаниеКС     = НСтр("ru='Сумма начисленного дохода (ст. 020 р. 1 6НДФЛ) - Сумма начисленного дохода в виде "
		+ "дивидендов (ст. 025 р.1 6НДФЛ) >= Сумма выплат и иных вознаграждений, исчисленных в пользу физических лиц, "
		+ "всего с начала расчетного периода (ст. 050 гр. 1 подр. 1.1 р. 1)'");
	ОписаниеОшибки = НСтр("ru='Сумма начисленного дохода налогоплательщика, за исключением сумм начисленного дохода на "
		+ "дивиденды < база для начисления страховых взносов'");
	
	// Формула КС кратко: 'Р1Ст20Гр01 - Р1Ст25Гр01 >= Пд11Пр1Ст50Гр01'.
	
	Пд11Пр1Ст50Гр01 = ПоказательПоСтроке("Пд11Пр1Ст50Гр01");
	Р1Ст20Гр01_6НДФЛ = ПоказательПоСтроке("Р1Ст20Гр01_6НДФЛ");
	Р1Ст25Гр01_6НДФЛ = ПоказательПоСтроке("Р1Ст25Гр01_6НДФЛ");
	
	Отчет6НДФЛ = РегламентированнаяОтчетность.ПолучитьДокументМДКС(СтруктураРеквизитовФормы.мСохраненныйДок, "РегламентированныйОтчет6НДФЛ");
	Если Отчет6НДФЛ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Раздел1_6НДФЛ = Неопределено;
	
	Данные6НДФЛ = РегламентированнаяОтчетность.ПолучитьДанныеСохрРегОтчета(Отчет6НДФЛ);
	Данные6НДФЛ.ДанныеРазделовРеглОтчета.Свойство("Раздел1", Раздел1_6НДФЛ);
	Если Раздел1_6НДФЛ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Раздел1Прил1 = мДанныеОтчета.Раздел1Прил1;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	КолвоСтрокВМногострочнойЧасти = КоличествоСтрок(Раздел1_6НДФЛ, Р1Ст20Гр01_6НДФЛ.Имя);
	СуммаР1Ст20_25Гр01 = 0;
	СуммаР1Ст20_25Гр01Стр = "";
	Для Инд = 1 По КолвоСтрокВМногострочнойЧасти Цикл
		ВставитьЗначениеМногострочногоПоказателя(Раздел1_6НДФЛ, Р1Ст20Гр01_6НДФЛ, Инд);
		ВнестиПоказательВРасшифровку(Р1Ст20Гр01_6НДФЛ, "Раздел1", , Отчет6НДФЛ);
		ВставитьЗначениеМногострочногоПоказателя(Раздел1_6НДФЛ, Р1Ст25Гр01_6НДФЛ, Инд);
		ВнестиПоказательВРасшифровку(Р1Ст25Гр01_6НДФЛ, "Раздел1", , Отчет6НДФЛ);
		СуммаР1Ст20_25Гр01 = СуммаР1Ст20_25Гр01 + Р1Ст20Гр01_6НДФЛ.Значение - Р1Ст25Гр01_6НДФЛ.Значение;
		СуммаР1Ст20_25Гр01Стр = СуммаР1Ст20_25Гр01Стр + Р1Ст20Гр01_6НДФЛ.ЗначениеСтр + " - " + Р1Ст25Гр01_6НДФЛ.ЗначениеСтр + " + ";
	КонецЦикла;
	
	СуммаПд11Пр1Ст50Гр01 = 0;
	СуммаПд11Пр1Ст50Гр01Стр = "";
	Для Каждого СтраницаРаздела Из Раздел1Прил1 Цикл
		ДанныеСтраницы = СтраницаРаздела.Данные;
		НомерСтраницыСтр = СтраницаРаздела.НомерСтраницы;
		ВставитьЗначениеПоказателя(ДанныеСтраницы, Пд11Пр1Ст50Гр01);
		ВнестиПоказательВРасшифровку(Пд11Пр1Ст50Гр01, "Раздел1Прил1Подр1_1и1_2", НомерСтраницыСтр);
		СуммаПд11Пр1Ст50Гр01 = СуммаПд11Пр1Ст50Гр01 + Пд11Пр1Ст50Гр01.Значение;
		СуммаПд11Пр1Ст50Гр01Стр = СуммаПд11Пр1Ст50Гр01Стр + Пд11Пр1Ст50Гр01.ЗначениеСтр + " + ";
	КонецЦикла;
	
	КС = ПоказателиКС(СуммаР1Ст20_25Гр01, СуммаПд11Пр1Ст50Гр01);
	Расшифровка = РасшифровкаВСтр(СуммаР1Ст20_25Гр01Стр) + " Итог [" + КС.ЛеваяЧастьСтр + "]" + " >= "
		+ РасшифровкаВСтр(СуммаПд11Пр1Ст50Гр01Стр) + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_2_3(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Расчета страховых взносов (КС 2.3)'");
	ОписаниеКС     = НСтр("ru='Сумма возмещенных расходов на выплату страхового обеспечения в 1-ом  месяце отчетного "
		+ "периода (гр. 3 ст. 80 прилож. 2 р. 1 СВ) = сумме выделенных ФСС России средств на осуществление (возмещение) "
		+ "расходов  на выплату страхового обеспечения в 1-ом месяце отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма возмещенных расходов на выплату страхового обеспечения в 1-ом  месяце отчетного "
		+ "периода > суммы выделенных ФСС России средств на осуществление (возмещение) расходов  на выплату страхового обеспечения'");
	
	// Формула КС кратко: 'Р1Прил2Ст80Гр03 = СуммаВыдСредствФСС'.
	
	Р1Прил2Ст80Гр03 = ПоказательПоСтроке("Р1Прил2Ст80Гр03");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр03, "Раздел1Прил2");
	
	СуммаВыдСредствФСС = Р1Прил2Ст80Гр03.Значение;
	
	КС = ПоказателиКС(Р1Прил2Ст80Гр03.Значение, СуммаВыдСредствФСС);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_2_4(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Расчета страховых взносов (КС 2.4)'");
	ОписаниеКС     = НСтр("ru='Сумма возмещенных расходов на выплату страхового обеспечения во 2-ом месяце отчетного "
		+ "периода (гр. 4 ст. 80 прилож. 2 р. 1 СВ) = сумме выделенных ФСС России средств на осуществление (возмещение) "
		+ "расходов  на выплату страхового обеспечения во 2-ом месяце отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма возмещенных расходов на выплату страхового обеспечения во 2-ом месяце отчетного "
		+ "периода > суммы выделенных ФСС России средств на осуществление (возмещение) расходов  на выплату страхового обеспечения'");
	
	// Формула КС кратко: 'Р1Прил2Ст80Гр04 = СуммаВыдСредствФСС'.
	
	Р1Прил2Ст80Гр04 = ПоказательПоСтроке("Р1Прил2Ст80Гр04");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр04, "Раздел1Прил2");
	
	СуммаВыдСредствФСС = Р1Прил2Ст80Гр04.Значение;
	
	КС = ПоказателиКС(Р1Прил2Ст80Гр04.Значение, СуммаВыдСредствФСС);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_2_5(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Расчета страховых взносов (КС 2.5)'");
	ОписаниеКС     = НСтр("ru='Сумма возмещенных расходов на выплату страхового обеспечения в 3-ем месяце отчетного "
		+ "периода (гр. 5 ст. 80 прилож. 2 р. 1 СВ) = сумме выделенных ФСС России средств на осуществление (возмещение) "
		+ "расходов  на выплату страхового обеспечения в 3-ем месяце отчетного периода'");
	ОписаниеОшибки = НСтр("ru='Сумма возмещенных расходов на выплату страхового обеспечения в 3-ем месяце отчетного "
		+ "периода > суммы выделенных ФСС России средств на осуществление (возмещение) расходов  на выплату страхового обеспечения'");
	
	// Формула КС кратко: 'Р1Прил2Ст80Гр05 = СуммаВыдСредствФСС'.
	
	Р1Прил2Ст80Гр05 = ПоказательПоСтроке("Р1Прил2Ст80Гр05");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст80Гр05);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст80Гр05, "Раздел1Прил2");
	
	СуммаВыдСредствФСС = Р1Прил2Ст80Гр05.Значение;
	
	КС = ПоказателиКС(Р1Прил2Ст80Гр05.Значение, СуммаВыдСредствФСС);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

// Контрольные соотношения ФСС.

&НаСервере
Процедура ПроверитьКС_1(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 2 к Разделу 1 (КС 1)'");
	ОписаниеКС     = НСтр("ru='Сумма произведенных расходов на выплату страхового обеспечения (строка 070 графа 1 "
		+ "Приложения 2) должна быть равна итоговой сумме расходов по строке 100 графы 3 Приложения 3'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил2Ст70Гр01 = Р1Прил3Ст100Гр03'.
	
	Р1Прил2Ст70Гр01 = ПоказательПоСтроке("Р1Прил2Ст70Гр01");
	Р1Прил3Ст100Гр03 = ПоказательПоСтроке("Р1Прил3Ст100Гр03");
	
	Раздел1Прил2 = мДанныеОтчета.Раздел1Прил2[0].Данные;
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил2, Р1Прил2Ст70Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил2Ст70Гр01, "Раздел1Прил2");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст100Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст100Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил2Ст70Гр01.Значение, Р1Прил3Ст100Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_2(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 2)'");
	ОписаниеКС     = НСтр("ru='Общее число получателей пособий по временной нетрудоспособности (строка 010 графа 1 "
		+ "Приложения 3) должно быть больше или равно числу получателей пособий по временной нетрудоспособности по "
		+ "внешнему совместительству (строка 011 графа 1 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр01 >= Р1Прил3Ст11Гр01'.
	
	Р1Прил3Ст10Гр01 = ПоказательПоСтроке("Р1Прил3Ст10Гр01");
	Р1Прил3Ст11Гр01 = ПоказательПоСтроке("Р1Прил3Ст11Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр01.Значение, Р1Прил3Ст11Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_3(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 3)'");
	ОписаниеКС     = НСтр("ru='Общее количество дней, выплат, пособий (строка 010 графа 2 Приложения 3) должно быть "
		+ "больше или равно количеству дней, выплат, пособий по внешнему совместительству (строка 011 графа 2 "
		+ "Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр02 >= Р1Прил3Ст11Гр02'.
	
	Р1Прил3Ст10Гр02 = ПоказательПоСтроке("Р1Прил3Ст10Гр02");
	Р1Прил3Ст11Гр02 = ПоказательПоСтроке("Р1Прил3Ст11Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр02.Значение, Р1Прил3Ст11Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_4(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 4)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по временной нетрудоспособности, всего (строка 010 графа 3 "
		+ "Приложения 3) должна быть больше или равны сумме расходов на пособия по временной нетрудоспособности по "
		+ "внешнему совместительству (строка 011 графа 3 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр03 >= Р1Прил3Ст11Гр03'.
	
	Р1Прил3Ст10Гр03 = ПоказательПоСтроке("Р1Прил3Ст10Гр03");
	Р1Прил3Ст11Гр03 = ПоказательПоСтроке("Р1Прил3Ст11Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр03.Значение, Р1Прил3Ст11Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_5(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 5)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по временной нетрудоспособности за счет средств, финансируемых "
		+ "из федерального бюджета (строка 010 графа 4 Приложения 3) должна быть больше или равна сумме расходов на "
		+ "пособия по временной нетрудоспособности по внешнему совместительству (строка 011 графа 4 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр04 >= Р1Прил3Ст11Гр04'.
	
	Р1Прил3Ст10Гр04 = ПоказательПоСтроке("Р1Прил3Ст10Гр04");
	Р1Прил3Ст11Гр04 = ПоказательПоСтроке("Р1Прил3Ст11Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр04, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр04.Значение, Р1Прил3Ст11Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_6(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 6)'");
	ОписаниеКС     = НСтр("ru='Общее число получателей пособий по временной нетрудоспособности работающим иностранным "
		+ "гражданам и лицам без гражданства (строка 020 графа 1 Приложения 3) должно быть больше или равно числу "
		+ "получателей пособий по временной нетрудоспособности по внешнему совместительству иностранным гражданам и "
		+ "лицам без гражданства (строка 021 графа 1 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст20Гр01 >= Р1Прил3Ст21Гр01'.
	
	Р1Прил3Ст20Гр01 = ПоказательПоСтроке("Р1Прил3Ст20Гр01");
	Р1Прил3Ст21Гр01 = ПоказательПоСтроке("Р1Прил3Ст21Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст20Гр01.Значение, Р1Прил3Ст21Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_7(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 7)'");
	ОписаниеКС     = НСтр("ru='Общее количество дней, выплат, пособий (строка 020 графа 2 Приложения 3) должно быть "
		+ "больше или равно количеству дней, выплат, пособий по внешнему совместительству (строка 021 графа 2 "
		+ "Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст20Гр02 >= Р1Прил3Ст21Гр02'.
	
	Р1Прил3Ст20Гр02 = ПоказательПоСтроке("Р1Прил3Ст20Гр02");
	Р1Прил3Ст21Гр02 = ПоказательПоСтроке("Р1Прил3Ст21Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст20Гр02.Значение, Р1Прил3Ст21Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_8(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 8)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по временной нетрудоспособности работающим иностранным "
		+ "гражданам и лицам без гражданства, всего (строка 020 графа 3 Приложения 3) должна быть больше или равны "
		+ "сумме расходов на пособия по временной нетрудоспособности работающим иностранным гражданам и лицам без "
		+ "гражданства по внешнему совместительству (строка 021 графа 3 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст20Гр03 >= Р1Прил3Ст21Гр03'.
	
	Р1Прил3Ст20Гр03 = ПоказательПоСтроке("Р1Прил3Ст20Гр03");
	Р1Прил3Ст21Гр03 = ПоказательПоСтроке("Р1Прил3Ст21Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст20Гр03.Значение, Р1Прил3Ст21Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_9(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 9)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по беременности и родам (строка 030 графа 1 Приложения 3) "
		+ "должно быть больше или равно числу получателей пособий по беременности и родам по внешнему совместительству "
		+ "(строка 031 графа 1 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр01 >= Р1Прил3Ст31Гр01'.
	
	Р1Прил3Ст30Гр01 = ПоказательПоСтроке("Р1Прил3Ст30Гр01");
	Р1Прил3Ст31Гр01 = ПоказательПоСтроке("Р1Прил3Ст31Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр01.Значение, Р1Прил3Ст31Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_10(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 10)'");
	ОписаниеКС     = НСтр("ru='Общее количество дней, выплат, пособий по беременности и родам (строка 030 графа 2 "
		+ "Приложения 3) должно быть больше или равно количеству дней, выплат, пособий по внешнему совместительству "
		+ "(строка 031 графа 2 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр02 >= Р1Прил3Ст31Гр02'.
	
	Р1Прил3Ст30Гр02 = ПоказательПоСтроке("Р1Прил3Ст30Гр02");
	Р1Прил3Ст31Гр02 = ПоказательПоСтроке("Р1Прил3Ст31Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр02.Значение, Р1Прил3Ст31Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_11(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 11)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по беременности и родам, всего (строка 030 графа 3 Приложения "
		+ "3) должна быть больше или равны сумме расходов на пособия по беременности и родам по внешнему "
		+ "совместительству (строка 031 графа 3 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр03 >= Р1Прил3Ст31Гр03'.
	
	Р1Прил3Ст30Гр03 = ПоказательПоСтроке("Р1Прил3Ст30Гр03");
	Р1Прил3Ст31Гр03 = ПоказательПоСтроке("Р1Прил3Ст31Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр03.Значение, Р1Прил3Ст31Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_12(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 12)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по беременности и родам за счет средств, финансируемых из "
		+ "федерального бюджета (строка 030 графа 4 Приложения 3) должна быть больше или равна сумме расходов на "
		+ "пособия по беременности и родам по внешнему совместительству (строка 031 графа 4 Приложения 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр04 >= Р1Прил3Ст31Гр04'.
	
	Р1Прил3Ст30Гр04 = ПоказательПоСтроке("Р1Прил3Ст30Гр04");
	Р1Прил3Ст31Гр04 = ПоказательПоСтроке("Р1Прил3Ст31Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр04, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр04.Значение, Р1Прил3Ст31Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_13(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 13)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по уходу за ребенком (строка 060 графа 1 Приложение 3) должно "
		+ "быть больше или равно числу получателей пособий по уходу за первым ребенком (строка 061 графа 1 Приложение 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр01 >= Р1Прил3Ст61Гр01'.
	
	Р1Прил3Ст60Гр01 = ПоказательПоСтроке("Р1Прил3Ст60Гр01");
	Р1Прил3Ст61Гр01 = ПоказательПоСтроке("Р1Прил3Ст61Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр01.Значение, Р1Прил3Ст61Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_14(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 14)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по уходу за ребенком (строка 060 графа 1 Приложение 3) должно "
		+ "быть больше или равно числу получателей пособий по уходу за вторым и последующими детьми (строка 062 графа 1 "
		+ "Приложение 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр01 >= Р1Прил3Ст62Гр01'.
	
	Р1Прил3Ст60Гр01 = ПоказательПоСтроке("Р1Прил3Ст60Гр01");
	Р1Прил3Ст62Гр01 = ПоказательПоСтроке("Р1Прил3Ст62Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр01.Значение, Р1Прил3Ст62Гр01.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_15(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 15)'");
	ОписаниеКС     = НСтр("ru='Количество дней, выплат, пособий по уходу за ребенком (строка 060 графа 2 Приложение 3) "
		+ "должно быть равно сумме показателей строк 061 и 062 графы 2 Приложения 3'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр02 = Р1Прил3Ст61Гр02 + Р1Прил3Ст62Гр02'.
	
	Р1Прил3Ст60Гр02 = ПоказательПоСтроке("Р1Прил3Ст60Гр02");
	Р1Прил3Ст61Гр02 = ПоказательПоСтроке("Р1Прил3Ст61Гр02");
	Р1Прил3Ст62Гр02 = ПоказательПоСтроке("Р1Прил3Ст62Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр02.Значение, Р1Прил3Ст61Гр02.Значение + Р1Прил3Ст62Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил3Ст61Гр02.ЗначениеСтр + " + " + Р1Прил3Ст62Гр02.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_16(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 16)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по уходу за ребенком, всего (строка 060 графа 3 Приложение 3) "
		+ "должна быть равна сумме показателей строк 061 и 062 графы 3 Приложения 3'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр03 = Р1Прил3Ст61Гр03 + Р1Прил3Ст62Гр03'.
	
	Р1Прил3Ст60Гр03 = ПоказательПоСтроке("Р1Прил3Ст60Гр03");
	Р1Прил3Ст61Гр03 = ПоказательПоСтроке("Р1Прил3Ст61Гр03");
	Р1Прил3Ст62Гр03 = ПоказательПоСтроке("Р1Прил3Ст62Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр03.Значение, Р1Прил3Ст61Гр03.Значение + Р1Прил3Ст62Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил3Ст61Гр03.ЗначениеСтр + " + " + Р1Прил3Ст62Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_17(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 17)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по уходу за ребенком, финансируемых из федерального бюджета "
		+ "(строка 060 графа 4 Приложение 3) должна быть равна сумме показателей строк 061 и 062 графы 4 Приложения 3'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр04 = Р1Прил3Ст61Гр04 + Р1Прил3Ст62Гр04'.
	
	Р1Прил3Ст60Гр04 = ПоказательПоСтроке("Р1Прил3Ст60Гр04");
	Р1Прил3Ст61Гр04 = ПоказательПоСтроке("Р1Прил3Ст61Гр04");
	Р1Прил3Ст62Гр04 = ПоказательПоСтроке("Р1Прил3Ст62Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр04, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр04.Значение, Р1Прил3Ст61Гр04.Значение + Р1Прил3Ст62Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил3Ст61Гр04.ЗначениеСтр + " + " + Р1Прил3Ст62Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_18(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 18)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на оплату дополнительных выходных дней для ухода за детьми-инвалидами, "
		+ "всего (строка 070 графа 3 Приложение 3) должна быть равна сумме расходов, финансируемых из федерального "
		+ "бюджета (строка 070 графа 4 Приложение 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст70Гр03 = Р1Прил3Ст70Гр04'.
	
	Р1Прил3Ст70Гр03 = ПоказательПоСтроке("Р1Прил3Ст70Гр03");
	Р1Прил3Ст70Гр04 = ПоказательПоСтроке("Р1Прил3Ст70Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр04, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст70Гр03.Значение, Р1Прил3Ст70Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_19(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 19)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по страховым взносам, исчисленных на оплату дополнительных выходных дней "
		+ "для ухода за детьми-инвалидами, всего (строка 080 графа 3 Приложение 3) должна быть равна сумме расходов по "
		+ "страховым взносам, исчисленных на оплату дополнительных выходных дней для ухода за детьми-инвалидами, "
		+ "финансируемых из федерального бюджета (строка 080 графа 4 Приложение 3)'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст80Гр03 = Р1Прил3Ст80Гр04'.
	
	Р1Прил3Ст80Гр03 = ПоказательПоСтроке("Р1Прил3Ст80Гр03");
	Р1Прил3Ст80Гр04 = ПоказательПоСтроке("Р1Прил3Ст80Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст80Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст80Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст80Гр04, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст80Гр03.Значение, Р1Прил3Ст80Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_20(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 20)'");
	ОписаниеКС     = НСтр("ru='Итоговая сумма расходов по строке 100 графы 3 Приложения 3 должна быть равна сумме строк "
		+ "010, 020, 030, 040, 050, 060, 070, 080 и 090 графы 3 Приложения 3'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст100Гр03 = Р1Прил3Ст10Гр03 + Р1Прил3Ст20Гр03 + Р1Прил3Ст30Гр03 + Р1Прил3Ст40Гр03 + Р1Прил3Ст50Гр03 + Р1Прил3Ст60Гр03 + Р1Прил3Ст70Гр03 + Р1Прил3Ст80Гр03 + Р1Прил3Ст90Гр03'.
	
	Р1Прил3Ст100Гр03 = ПоказательПоСтроке("Р1Прил3Ст100Гр03");
	Р1Прил3Ст10Гр03 = ПоказательПоСтроке("Р1Прил3Ст10Гр03");
	Р1Прил3Ст20Гр03 = ПоказательПоСтроке("Р1Прил3Ст20Гр03");
	Р1Прил3Ст30Гр03 = ПоказательПоСтроке("Р1Прил3Ст30Гр03");
	Р1Прил3Ст40Гр03 = ПоказательПоСтроке("Р1Прил3Ст40Гр03");
	Р1Прил3Ст50Гр03 = ПоказательПоСтроке("Р1Прил3Ст50Гр03");
	Р1Прил3Ст60Гр03 = ПоказательПоСтроке("Р1Прил3Ст60Гр03");
	Р1Прил3Ст70Гр03 = ПоказательПоСтроке("Р1Прил3Ст70Гр03");
	Р1Прил3Ст80Гр03 = ПоказательПоСтроке("Р1Прил3Ст80Гр03");
	Р1Прил3Ст90Гр03 = ПоказательПоСтроке("Р1Прил3Ст90Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст100Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст100Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст40Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст50Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст80Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст80Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст100Гр03.Значение, Р1Прил3Ст10Гр03.Значение + Р1Прил3Ст20Гр03.Значение + Р1Прил3Ст30Гр03.Значение + Р1Прил3Ст40Гр03.Значение + Р1Прил3Ст50Гр03.Значение + Р1Прил3Ст60Гр03.Значение + Р1Прил3Ст70Гр03.Значение + Р1Прил3Ст80Гр03.Значение + Р1Прил3Ст90Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил3Ст10Гр03.ЗначениеСтр + " + " + Р1Прил3Ст20Гр03.ЗначениеСтр + " + " + Р1Прил3Ст30Гр03.ЗначениеСтр + " + " + Р1Прил3Ст40Гр03.ЗначениеСтр + " + " + Р1Прил3Ст50Гр03.ЗначениеСтр + " + " + Р1Прил3Ст60Гр03.ЗначениеСтр + " + " + Р1Прил3Ст70Гр03.ЗначениеСтр + " + " + Р1Прил3Ст80Гр03.ЗначениеСтр + " + " + Р1Прил3Ст90Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_21(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 21)'");
	ОписаниеКС     = НСтр("ru='Итоговая сумма расходов, финансируемых из федерального бюджета (строка 100 графа 4 "
		+ "Приложение 3) должна быть равна сумме строк 010, 030, 060, 070, 080 графы 4 Приложения 3'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст100Гр04 = Р1Прил3Ст10Гр04 + Р1Прил3Ст30Гр04 + Р1Прил3Ст60Гр04 + Р1Прил3Ст70Гр04 + Р1Прил3Ст80Гр04'.
	
	Р1Прил3Ст100Гр04 = ПоказательПоСтроке("Р1Прил3Ст100Гр04");
	Р1Прил3Ст10Гр04 = ПоказательПоСтроке("Р1Прил3Ст10Гр04");
	Р1Прил3Ст30Гр04 = ПоказательПоСтроке("Р1Прил3Ст30Гр04");
	Р1Прил3Ст60Гр04 = ПоказательПоСтроке("Р1Прил3Ст60Гр04");
	Р1Прил3Ст70Гр04 = ПоказательПоСтроке("Р1Прил3Ст70Гр04");
	Р1Прил3Ст80Гр04 = ПоказательПоСтроке("Р1Прил3Ст80Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст100Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст100Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст80Гр04, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст100Гр04.Значение, Р1Прил3Ст10Гр04.Значение + Р1Прил3Ст30Гр04.Значение + Р1Прил3Ст60Гр04.Значение + Р1Прил3Ст70Гр04.Значение + Р1Прил3Ст80Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил3Ст10Гр04.ЗначениеСтр + " + " + Р1Прил3Ст30Гр04.ЗначениеСтр + " + " + Р1Прил3Ст60Гр04.ЗначениеСтр + " + " + Р1Прил3Ст70Гр04.ЗначениеСтр + " + " + Р1Прил3Ст80Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_22(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 22)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по временной нетрудоспособности за счет средств, финансируемых "
		+ "из федерального бюджета (строка 010 графа 4 Приложения 3) должна быть равна значению показателя строки 250 "
		+ "графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр04 = Р1Прил4Ст250Гр04'.
	
	Р1Прил3Ст10Гр04 = ПоказательПоСтроке("Р1Прил3Ст10Гр04");
	Р1Прил4Ст250Гр04 = ПоказательПоСтроке("Р1Прил4Ст250Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр04.Значение, Р1Прил4Ст250Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_23(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 23)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по беременности и родам за счет средств, финансируемых из "
		+ "федерального бюджета (строка 030 графа 4 Приложения 3) должна быть равна значению показателя строки 260 "
		+ "графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр04 = Р1Прил4Ст260Гр04'.
	
	Р1Прил3Ст30Гр04 = ПоказательПоСтроке("Р1Прил3Ст30Гр04");
	Р1Прил4Ст260Гр04 = ПоказательПоСтроке("Р1Прил4Ст260Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр04.Значение, Р1Прил4Ст260Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_24(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 24)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по уходу за ребенком, финансируемых из федерального бюджета "
		+ "(строка 060 графа 4 Приложение 3) должна быть равна значению показателя строки 270 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр04 = Р1Прил4Ст270Гр04'.
	
	Р1Прил3Ст60Гр04 = ПоказательПоСтроке("Р1Прил3Ст60Гр04");
	Р1Прил4Ст270Гр04 = ПоказательПоСтроке("Р1Прил4Ст270Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр04.Значение, Р1Прил4Ст270Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_25(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 25)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по уходу за первым ребенком, финансируемых из федерального "
		+ "бюджета (строка 061 графа 4 Приложение 3) должна быть равна значению показателя строки 280 графы 4 "
		+ "Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст61Гр04 = Р1Прил4Ст280Гр04'.
	
	Р1Прил3Ст61Гр04 = ПоказательПоСтроке("Р1Прил3Ст61Гр04");
	Р1Прил4Ст280Гр04 = ПоказательПоСтроке("Р1Прил4Ст280Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил3Ст61Гр04.Значение, Р1Прил4Ст280Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_26(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 26)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на пособия по уходу за вторым и последующими детьми, финансируемых из "
		+ "федерального бюджета (строка 062 графа 4 Приложение 3) должна быть равна значению показателя строки 290 "
		+ "графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст62Гр04 = Р1Прил4Ст290Гр04'.
	
	Р1Прил3Ст62Гр04 = ПоказательПоСтроке("Р1Прил3Ст62Гр04");
	Р1Прил4Ст290Гр04 = ПоказательПоСтроке("Р1Прил4Ст290Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил3Ст62Гр04.Значение, Р1Прил4Ст290Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_27(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 27)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов на оплату дополнительных выходных дней для ухода за детьми-инвалидами, "
		+ "финансируемых из федерального бюджета (строка 070 графа 4 Приложение 3) должна быть равна значению "
		+ "показателя строки 300 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст70Гр04 = Р1Прил4Ст300Гр04'.
	
	Р1Прил3Ст70Гр04 = ПоказательПоСтроке("Р1Прил3Ст70Гр04");
	Р1Прил4Ст300Гр04 = ПоказательПоСтроке("Р1Прил4Ст300Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст300Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст300Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил3Ст70Гр04.Значение, Р1Прил4Ст300Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_28(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 28)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по страховым взносам, исчисленных на оплату дополнительных выходных дней "
		+ "для ухода за детьми-инвалидами, финансируемых из федерального бюджета (строка 080 графа 4 Приложение 3) "
		+ "должна быть равна значению показателя строки 310 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст80Гр04 = Р1Прил4Ст310Гр04'.
	
	Р1Прил3Ст80Гр04 = ПоказательПоСтроке("Р1Прил3Ст80Гр04");
	Р1Прил4Ст310Гр04 = ПоказательПоСтроке("Р1Прил4Ст310Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст80Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст310Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст310Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил3Ст80Гр04.Значение, Р1Прил4Ст310Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_29(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 29)'");
	ОписаниеКС     = НСтр("ru='Итоговая сумма расходов, финансируемых из федерального бюджета (строка 100 графа 4 "
		+ "Приложение 3) должна быть равна значению показателя строки 240 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст100Гр04 = Р1Прил4Ст240Гр04'.
	
	Р1Прил3Ст100Гр04 = ПоказательПоСтроке("Р1Прил3Ст100Гр04");
	Р1Прил4Ст240Гр04 = ПоказательПоСтроке("Р1Прил4Ст240Гр04");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст100Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст100Гр04, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил3Ст100Гр04.Значение, Р1Прил4Ст240Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_30(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 30)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие катастрофы на Чернобыльской АЭС, всего (строка 010 графа 2 Приложения 4) должно быть "
		+ "больше или равно значению показателя строки 020 графы 2 Приложения 4 '");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст10Гр02 >= Р1Прил4Ст20Гр02'.
	
	Р1Прил4Ст10Гр02 = ПоказательПоСтроке("Р1Прил4Ст10Гр02");
	Р1Прил4Ст20Гр02 = ПоказательПоСтроке("Р1Прил4Ст20Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст10Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст20Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст10Гр02.Значение, Р1Прил4Ст20Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_31(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 31)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие катастрофы на Чернобыльской АЭС, всего (строка 010 графа 2 Приложения 4) должно быть "
		+ "больше или равно значению показателя строки 030 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст10Гр02 >= Р1Прил4Ст30Гр02'.
	
	Р1Прил4Ст10Гр02 = ПоказательПоСтроке("Р1Прил4Ст10Гр02");
	Р1Прил4Ст30Гр02 = ПоказательПоСтроке("Р1Прил4Ст30Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст10Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст30Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст10Гр02.Значение, Р1Прил4Ст30Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_32(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 32)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие катастрофы на Чернобыльской АЭС, всего (строка 010 графа 2 Приложения 4) должно быть "
		+ "больше или равно значению показателя строки 040 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст10Гр02 >= Р1Прил4Ст40Гр02'.
	
	Р1Прил4Ст10Гр02 = ПоказательПоСтроке("Р1Прил4Ст10Гр02");
	Р1Прил4Ст40Гр02 = ПоказательПоСтроке("Р1Прил4Ст40Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст10Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст10Гр02.Значение, Р1Прил4Ст40Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_33(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 33)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета гражданам, пострадавшим вследствие катастрофы на Чернобыльской АЭС, всего (строка 040 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 050 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст40Гр02 >= Р1Прил4Ст50Гр02'.
	
	Р1Прил4Ст40Гр02 = ПоказательПоСтроке("Р1Прил4Ст40Гр02");
	Р1Прил4Ст50Гр02 = ПоказательПоСтроке("Р1Прил4Ст50Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст40Гр02.Значение, Р1Прил4Ст50Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_34(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 34)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета гражданам, пострадавшим вследствие катастрофы на Чернобыльской АЭС, всего (строка 040 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 060 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст40Гр02 >= Р1Прил4Ст60Гр02'.
	
	Р1Прил4Ст40Гр02 = ПоказательПоСтроке("Р1Прил4Ст40Гр02");
	Р1Прил4Ст60Гр02 = ПоказательПоСтроке("Р1Прил4Ст60Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст40Гр02.Значение, Р1Прил4Ст60Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_35(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 35)'");
	ОписаниеКС     = НСтр("ru='Количество дней, выплат пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета гражданам, пострадавшим вследствие катастрофы на Чернобыльской АЭС, всего (строка 040 "
		+ "графа 3 Приложения 4) должно быть равно сумме значений строк 050 и 060 графы 3 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст40Гр03 = Р1Прил4Ст50Гр03 + Р1Прил4Ст60Гр03'.
	
	Р1Прил4Ст40Гр03 = ПоказательПоСтроке("Р1Прил4Ст40Гр03");
	Р1Прил4Ст50Гр03 = ПоказательПоСтроке("Р1Прил4Ст50Гр03");
	Р1Прил4Ст60Гр03 = ПоказательПоСтроке("Р1Прил4Ст60Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст40Гр03.Значение, Р1Прил4Ст50Гр03.Значение + Р1Прил4Ст60Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст50Гр03.ЗначениеСтр + " + " + Р1Прил4Ст60Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_36(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 36)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по выплатам, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие катастрофы на Чернобыльской АЭС, всего (строка 010 графа 4 Приложения 4) должна быть "
		+ "равна сумме значений строк 020, 030 и 040 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст10Гр04 = Р1Прил4Ст20Гр04 + Р1Прил4Ст30Гр04 + Р1Прил4Ст40Гр04'.
	
	Р1Прил4Ст10Гр04 = ПоказательПоСтроке("Р1Прил4Ст10Гр04");
	Р1Прил4Ст20Гр04 = ПоказательПоСтроке("Р1Прил4Ст20Гр04");
	Р1Прил4Ст30Гр04 = ПоказательПоСтроке("Р1Прил4Ст30Гр04");
	Р1Прил4Ст40Гр04 = ПоказательПоСтроке("Р1Прил4Ст40Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст10Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст10Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст20Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст30Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст10Гр04.Значение, Р1Прил4Ст20Гр04.Значение + Р1Прил4Ст30Гр04.Значение + Р1Прил4Ст40Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст20Гр04.ЗначениеСтр + " + " + Р1Прил4Ст30Гр04.ЗначениеСтр + " + " + Р1Прил4Ст40Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_37(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 37)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по выплатам пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета гражданам, пострадавшим вследствие катастрофы на Чернобыльской АЭС, всего (строка 040 "
		+ "графа 4 Приложения 4) должна быть равна сумме значений строк 050 и 060 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст40Гр04 = Р1Прил4Ст50Гр04 + Р1Прил4Ст60Гр04'.
	
	Р1Прил4Ст40Гр04 = ПоказательПоСтроке("Р1Прил4Ст40Гр04");
	Р1Прил4Ст50Гр04 = ПоказательПоСтроке("Р1Прил4Ст50Гр04");
	Р1Прил4Ст60Гр04 = ПоказательПоСтроке("Р1Прил4Ст60Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст40Гр04.Значение, Р1Прил4Ст50Гр04.Значение + Р1Прил4Ст60Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст50Гр04.ЗначениеСтр + " + " + Р1Прил4Ст60Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_38(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 38)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие аварии на производственном объединении ""Маяк"", всего (строка 070 графа 2 "
		+ "Приложения 4) должно быть больше или равно значению показателя строки 080 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст70Гр02 >= Р1Прил4Ст80Гр02'.
	
	Р1Прил4Ст70Гр02 = ПоказательПоСтроке("Р1Прил4Ст70Гр02");
	Р1Прил4Ст80Гр02 = ПоказательПоСтроке("Р1Прил4Ст80Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст70Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст80Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст80Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст70Гр02.Значение, Р1Прил4Ст80Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_39(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 39)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие аварии на производственном объединении ""Маяк"", всего (строка 070 графа 2 "
		+ "Приложения 4) должно быть больше или равно значению показателя строки 090 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст70Гр02 >= Р1Прил4Ст90Гр02'.
	
	Р1Прил4Ст70Гр02 = ПоказательПоСтроке("Р1Прил4Ст70Гр02");
	Р1Прил4Ст90Гр02 = ПоказательПоСтроке("Р1Прил4Ст90Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст70Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст90Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст90Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст70Гр02.Значение, Р1Прил4Ст90Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_40(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 40)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие аварии на производственном объединении ""Маяк"", всего (строка 070 графа 2 "
		+ "Приложения 4) должно быть больше или равно значению показателя строки 100 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст70Гр02 >= Р1Прил4Ст100Гр02'.
	
	Р1Прил4Ст70Гр02 = ПоказательПоСтроке("Р1Прил4Ст70Гр02");
	Р1Прил4Ст100Гр02 = ПоказательПоСтроке("Р1Прил4Ст100Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст70Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст70Гр02.Значение, Р1Прил4Ст100Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_41(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 41)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета гражданам, пострадавшим вследствие аварии на производственном объединении ""Маяк"", "
		+ "всего (строка 100 графа 2 Приложения 4) должно быть больше или равно значению показателя строки 110 графы 2 "
		+ "Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст100Гр02 >= Р1Прил4Ст110Гр02'.
	
	Р1Прил4Ст100Гр02 = ПоказательПоСтроке("Р1Прил4Ст100Гр02");
	Р1Прил4Ст110Гр02 = ПоказательПоСтроке("Р1Прил4Ст110Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст100Гр02.Значение, Р1Прил4Ст110Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_42(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 42)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета гражданам, пострадавшим вследствие аварии на производственном объединении ""Маяк"", "
		+ "всего (строка 100 графа 2 Приложения 4) должно быть больше или равно значению показателя строки 120 графы 2 "
		+ "Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст100Гр02 >= Р1Прил4Ст120Гр02'.
	
	Р1Прил4Ст100Гр02 = ПоказательПоСтроке("Р1Прил4Ст100Гр02");
	Р1Прил4Ст120Гр02 = ПоказательПоСтроке("Р1Прил4Ст120Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст100Гр02.Значение, Р1Прил4Ст120Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_43(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 43)'");
	ОписаниеКС     = НСтр("ru='Количество дней, выплат пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета гражданам, пострадавшим вследствие аварии на производственном объединении ""Маяк"", "
		+ "всего (строка 100 графа 3 Приложения 4) должно быть равно сумме показателей строк 110 и 120 графы 3 "
		+ "Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст100Гр03 = Р1Прил4Ст110Гр03 + Р1Прил4Ст120Гр03'.
	
	Р1Прил4Ст100Гр03 = ПоказательПоСтроке("Р1Прил4Ст100Гр03");
	Р1Прил4Ст110Гр03 = ПоказательПоСтроке("Р1Прил4Ст110Гр03");
	Р1Прил4Ст120Гр03 = ПоказательПоСтроке("Р1Прил4Ст120Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст100Гр03.Значение, Р1Прил4Ст110Гр03.Значение + Р1Прил4Ст120Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст110Гр03.ЗначениеСтр + " + " + Р1Прил4Ст120Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_44(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 44)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по выплатам, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие аварии на производственном объединении ""Маяк"", всего (строка 070 графа 4 "
		+ "Приложения 4) должна быть равна сумме показателей строк 080,  090, 100 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст70Гр04 = Р1Прил4Ст80Гр04 + Р1Прил4Ст90Гр04 + Р1Прил4Ст100Гр04'.
	
	Р1Прил4Ст70Гр04 = ПоказательПоСтроке("Р1Прил4Ст70Гр04");
	Р1Прил4Ст80Гр04 = ПоказательПоСтроке("Р1Прил4Ст80Гр04");
	Р1Прил4Ст90Гр04 = ПоказательПоСтроке("Р1Прил4Ст90Гр04");
	Р1Прил4Ст100Гр04 = ПоказательПоСтроке("Р1Прил4Ст100Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст70Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст70Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст80Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст90Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст90Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст70Гр04.Значение, Р1Прил4Ст80Гр04.Значение + Р1Прил4Ст90Гр04.Значение + Р1Прил4Ст100Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст80Гр04.ЗначениеСтр + " + " + Р1Прил4Ст90Гр04.ЗначениеСтр + " + " + Р1Прил4Ст100Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_45(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 45)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по выплатам пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета гражданам, пострадавшим вследствие аварии на производственном объединении ""Маяк"", "
		+ "всего (строка 100 графа 4 Приложения 4) должна быть равна сумме показателей строк 110 и 120 графы 4 "
		+ "Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст100Гр04 = Р1Прил4Ст110Гр04 + Р1Прил4Ст120Гр04'.
	
	Р1Прил4Ст100Гр04 = ПоказательПоСтроке("Р1Прил4Ст100Гр04");
	Р1Прил4Ст110Гр04 = ПоказательПоСтроке("Р1Прил4Ст110Гр04");
	Р1Прил4Ст120Гр04 = ПоказательПоСтроке("Р1Прил4Ст120Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст100Гр04.Значение, Р1Прил4Ст110Гр04.Значение + Р1Прил4Ст120Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст110Гр04.ЗначениеСтр + " + " + Р1Прил4Ст120Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_46(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 46)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие ядерных испытаний на Семипалатинском полигоне, всего (строка 130 графа 2 Приложения "
		+ "4) должно быть равно значению показателя строки 140 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст130Гр02 = Р1Прил4Ст140Гр02'.
	
	Р1Прил4Ст130Гр02 = ПоказательПоСтроке("Р1Прил4Ст130Гр02");
	Р1Прил4Ст140Гр02 = ПоказательПоСтроке("Р1Прил4Ст140Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст130Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст130Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст140Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст140Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст130Гр02.Значение, Р1Прил4Ст140Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_47(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 47)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по выплатам, финансируемых за счет средств федерального бюджета гражданам, "
		+ "пострадавшим вследствие ядерных испытаний на Семипалатинском полигоне, всего (строка 130 графа 4 Приложения "
		+ "4) должно быть равно значению показателя строки 140 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст130Гр04 = Р1Прил4Ст140Гр04'.
	
	Р1Прил4Ст130Гр04 = ПоказательПоСтроке("Р1Прил4Ст130Гр04");
	Р1Прил4Ст140Гр04 = ПоказательПоСтроке("Р1Прил4Ст140Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст130Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст130Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст140Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст140Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст130Гр04.Значение, Р1Прил4Ст140Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_48(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 48)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета лицам из "
		+ "подразделений особого риска, а также лицам, получившим или перенесшим лучевую болезнь или ставшими "
		+ "инвалидами радиационных аварий, кроме Чернобыльской АЭС, всего (строка 150 графа 2 Приложения 4) должно быть "
		+ "больше или равно значению показателя строки 160 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст150Гр02 >= Р1Прил4Ст160Гр02'.
	
	Р1Прил4Ст150Гр02 = ПоказательПоСтроке("Р1Прил4Ст150Гр02");
	Р1Прил4Ст160Гр02 = ПоказательПоСтроке("Р1Прил4Ст160Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст150Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст150Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст160Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст160Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст150Гр02.Значение, Р1Прил4Ст160Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_49(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 49)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета лицам из "
		+ "подразделений особого риска, а также лицам, получившим или перенесшим лучевую болезнь или ставшими "
		+ "инвалидами радиационных аварий, кроме Чернобыльской АЭС, всего (строка 150 графа 2 Приложения 4) должно быть "
		+ "больше или равно значению показателя строки 170 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст150Гр02 >= Р1Прил4Ст170Гр02'.
	
	Р1Прил4Ст150Гр02 = ПоказательПоСтроке("Р1Прил4Ст150Гр02");
	Р1Прил4Ст170Гр02 = ПоказательПоСтроке("Р1Прил4Ст170Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст150Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст150Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст170Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст170Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст150Гр02.Значение, Р1Прил4Ст170Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_50(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 50)'");
	ОписаниеКС     = НСтр("ru='Число получателей выплат, финансируемых за счет средств федерального бюджета лицам из "
		+ "подразделений особого риска, а также лицам, получившим или перенесшим лучевую болезнь или ставшими "
		+ "инвалидами радиационных аварий, кроме Чернобыльской АЭС, всего (строка 150 графа 2 Приложения 4) должно быть "
		+ "больше или равно значению показателя строки 180 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст150Гр02 >= Р1Прил4Ст180Гр02'.
	
	Р1Прил4Ст150Гр02 = ПоказательПоСтроке("Р1Прил4Ст150Гр02");
	Р1Прил4Ст180Гр02 = ПоказательПоСтроке("Р1Прил4Ст180Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст150Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст150Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст150Гр02.Значение, Р1Прил4Ст180Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_51(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 51)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета лицам из подразделений особого риска, а также лицам, получившим или перенесшим лучевую "
		+ "болезнь или ставшими инвалидами радиационных аварий, кроме Чернобыльской АЭС, всего (строка 180 графа 2 "
		+ "Приложения 4) должно быть больше или равно значению показателя строки 190 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст180Гр02 >= Р1Прил4Ст190Гр02'.
	
	Р1Прил4Ст180Гр02 = ПоказательПоСтроке("Р1Прил4Ст180Гр02");
	Р1Прил4Ст190Гр02 = ПоказательПоСтроке("Р1Прил4Ст190Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст180Гр02.Значение, Р1Прил4Ст190Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_52(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 52)'");
	ОписаниеКС     = НСтр("ru='Число получателей пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета лицам из подразделений особого риска, а также лицам, получившим или перенесшим лучевую "
		+ "болезнь или ставшими инвалидами радиационных аварий, кроме Чернобыльской АЭС, всего (строка 180 графа 2 "
		+ "Приложения 4) должно быть больше или равно значению показателя строки 200 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст180Гр02 >= Р1Прил4Ст200Гр02'.
	
	Р1Прил4Ст180Гр02 = ПоказательПоСтроке("Р1Прил4Ст180Гр02");
	Р1Прил4Ст200Гр02 = ПоказательПоСтроке("Р1Прил4Ст200Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст180Гр02.Значение, Р1Прил4Ст200Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_53(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 53)'");
	ОписаниеКС     = НСтр("ru='Количество дней, выплат пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета лицам из подразделений особого риска, а также лицам, получившим или перенесшим лучевую "
		+ "болезнь или ставшими инвалидами радиационных аварий, кроме Чернобыльской АЭС, всего (строка 180 графа 3 "
		+ "Приложения 4) должно быть равно сумме показателей строк 190 и 200 графы 3 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст180Гр03 = Р1Прил4Ст190Гр03 + Р1Прил4Ст200Гр03'.
	
	Р1Прил4Ст180Гр03 = ПоказательПоСтроке("Р1Прил4Ст180Гр03");
	Р1Прил4Ст190Гр03 = ПоказательПоСтроке("Р1Прил4Ст190Гр03");
	Р1Прил4Ст200Гр03 = ПоказательПоСтроке("Р1Прил4Ст200Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст180Гр03.Значение, Р1Прил4Ст190Гр03.Значение + Р1Прил4Ст200Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст190Гр03.ЗначениеСтр + " + " + Р1Прил4Ст200Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_54(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 54)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по выплатам, финансируемым за счет средств федерального бюджета лицам из "
		+ "подразделений особого риска, а также лицам, получившим или перенесшим лучевую болезнь или ставшими "
		+ "инвалидами радиационных аварий, кроме Чернобыльской АЭС, всего (строка 150 графа 4 Приложения 4) должна быть "
		+ "равна сумме показателей строк 160, 170, 180 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст150Гр04 = Р1Прил4Ст160Гр04 + Р1Прил4Ст170Гр04 + Р1Прил4Ст180Гр04'.
	
	Р1Прил4Ст150Гр04 = ПоказательПоСтроке("Р1Прил4Ст150Гр04");
	Р1Прил4Ст160Гр04 = ПоказательПоСтроке("Р1Прил4Ст160Гр04");
	Р1Прил4Ст170Гр04 = ПоказательПоСтроке("Р1Прил4Ст170Гр04");
	Р1Прил4Ст180Гр04 = ПоказательПоСтроке("Р1Прил4Ст180Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст150Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст150Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст160Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст160Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст170Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст170Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст150Гр04.Значение, Р1Прил4Ст160Гр04.Значение + Р1Прил4Ст170Гр04.Значение + Р1Прил4Ст180Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст160Гр04.ЗначениеСтр + " + " + Р1Прил4Ст170Гр04.ЗначениеСтр + " + " + Р1Прил4Ст180Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_55(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 55)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по выплатам пособий по уходу за ребенком, финансируемых за счет средств "
		+ "федерального бюджета лицам из подразделений особого риска, а также лицам, получившим или перенесшим лучевую "
		+ "болезнь или ставшими инвалидами радиационных аварий, кроме Чернобыльской АЭС, всего (строка 180 графа 4 "
		+ "Приложения 4) должна быть равна сумме показателей строк 190 и 200 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст180Гр04 = Р1Прил4Ст190Гр04 + Р1Прил4Ст200Гр04'.
	
	Р1Прил4Ст180Гр04 = ПоказательПоСтроке("Р1Прил4Ст180Гр04");
	Р1Прил4Ст190Гр04 = ПоказательПоСтроке("Р1Прил4Ст190Гр04");
	Р1Прил4Ст200Гр04 = ПоказательПоСтроке("Р1Прил4Ст200Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст180Гр04.Значение, Р1Прил4Ст190Гр04.Значение + Р1Прил4Ст200Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст190Гр04.ЗначениеСтр + " + " + Р1Прил4Ст200Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_56(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 56)'");
	ОписаниеКС     = НСтр("ru='Число получателей дополнительных выплат, финансируемых из федерального бюджета, всего "
		+ "(строка 210 графа 2 Приложения 4) должно быть больше или равно значению показателя строки 220 графы 2 "
		+ "Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст210Гр02 >= Р1Прил4Ст220Гр02'.
	
	Р1Прил4Ст210Гр02 = ПоказательПоСтроке("Р1Прил4Ст210Гр02");
	Р1Прил4Ст220Гр02 = ПоказательПоСтроке("Р1Прил4Ст220Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст210Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст210Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст220Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст220Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст210Гр02.Значение, Р1Прил4Ст220Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_57(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 57)'");
	ОписаниеКС     = НСтр("ru='Число получателей дополнительных выплат, финансируемых из федерального бюджета, всего "
		+ "(строка 210 графа 2 Приложения 4) должно быть больше или равно значению показателя строки 230 графы 2 "
		+ "Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст210Гр02 >= Р1Прил4Ст230Гр02'.
	
	Р1Прил4Ст210Гр02 = ПоказательПоСтроке("Р1Прил4Ст210Гр02");
	Р1Прил4Ст230Гр02 = ПоказательПоСтроке("Р1Прил4Ст230Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст210Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст210Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст230Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст230Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст210Гр02.Значение, Р1Прил4Ст230Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_58(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 58)'");
	ОписаниеКС     = НСтр("ru='Сумма расходов по дополнительным выплатам, финансируемых из федерального бюджета, всего "
		+ "(строка 210 графа 4 Приложения 4) должна быть равна сумме показателей строк 22 и 230 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст210Гр04 = Р1Прил4Ст220Гр04 + Р1Прил4Ст230Гр04'.
	
	Р1Прил4Ст210Гр04 = ПоказательПоСтроке("Р1Прил4Ст210Гр04");
	Р1Прил4Ст220Гр04 = ПоказательПоСтроке("Р1Прил4Ст220Гр04");
	Р1Прил4Ст230Гр04 = ПоказательПоСтроке("Р1Прил4Ст230Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст210Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст210Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст220Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст220Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст230Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст230Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст210Гр04.Значение, Р1Прил4Ст220Гр04.Значение + Р1Прил4Ст230Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст220Гр04.ЗначениеСтр + " + " + Р1Прил4Ст230Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_59(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 59)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей выплат, финансируемых из федерального бюджета, всего (строка 240 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 010 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр02 >= Р1Прил4Ст10Гр02'.
	
	Р1Прил4Ст240Гр02 = ПоказательПоСтроке("Р1Прил4Ст240Гр02");
	Р1Прил4Ст10Гр02 = ПоказательПоСтроке("Р1Прил4Ст10Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст10Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр02.Значение, Р1Прил4Ст10Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_60(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 60)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей выплат, финансируемых из федерального бюджета, всего (строка 240 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 070 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр02 >= Р1Прил4Ст70Гр02'.
	
	Р1Прил4Ст240Гр02 = ПоказательПоСтроке("Р1Прил4Ст240Гр02");
	Р1Прил4Ст70Гр02 = ПоказательПоСтроке("Р1Прил4Ст70Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст70Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр02.Значение, Р1Прил4Ст70Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_61(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 61)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей выплат, финансируемых из федерального бюджета, всего (строка 240 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 130 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр02 >= Р1Прил4Ст130Гр02'.
	
	Р1Прил4Ст240Гр02 = ПоказательПоСтроке("Р1Прил4Ст240Гр02");
	Р1Прил4Ст130Гр02 = ПоказательПоСтроке("Р1Прил4Ст130Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст130Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст130Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр02.Значение, Р1Прил4Ст130Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_62(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 62)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей выплат, финансируемых из федерального бюджета, всего (строка 240 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 150 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр02 >= Р1Прил4Ст150Гр02'.
	
	Р1Прил4Ст240Гр02 = ПоказательПоСтроке("Р1Прил4Ст240Гр02");
	Р1Прил4Ст150Гр02 = ПоказательПоСтроке("Р1Прил4Ст150Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст150Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст150Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр02.Значение, Р1Прил4Ст150Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_63(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 63)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей выплат, финансируемых из федерального бюджета, всего (строка 240 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 210 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр02 >= Р1Прил4Ст210Гр02'.
	
	Р1Прил4Ст240Гр02 = ПоказательПоСтроке("Р1Прил4Ст240Гр02");
	Р1Прил4Ст210Гр02 = ПоказательПоСтроке("Р1Прил4Ст210Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст210Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст210Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр02.Значение, Р1Прил4Ст210Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_64(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 64)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей выплат, финансируемых из федерального бюджета, всего (строка 240 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 250 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр02 >= Р1Прил4Ст250Гр02'.
	
	Р1Прил4Ст240Гр02 = ПоказательПоСтроке("Р1Прил4Ст240Гр02");
	Р1Прил4Ст250Гр02 = ПоказательПоСтроке("Р1Прил4Ст250Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр02.Значение, Р1Прил4Ст250Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_65(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 65)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей выплат, финансируемых из федерального бюджета, всего (строка 240 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 260 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр02 >= Р1Прил4Ст260Гр02'.
	
	Р1Прил4Ст240Гр02 = ПоказательПоСтроке("Р1Прил4Ст240Гр02");
	Р1Прил4Ст260Гр02 = ПоказательПоСтроке("Р1Прил4Ст260Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр02.Значение, Р1Прил4Ст260Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_66(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 66)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей выплат, финансируемых из федерального бюджета, всего (строка 240 "
		+ "графа 2 Приложения 4) должно быть больше или равно значению показателя строки 270 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр02 >= Р1Прил4Ст270Гр02'.
	
	Р1Прил4Ст240Гр02 = ПоказательПоСтроке("Р1Прил4Ст240Гр02");
	Р1Прил4Ст270Гр02 = ПоказательПоСтроке("Р1Прил4Ст270Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр02.Значение, Р1Прил4Ст270Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_67(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 67)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по временной нетрудоспособности, финансируемых из "
		+ "федерального бюджета (строка 250 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 020 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст250Гр02 >= Р1Прил4Ст20Гр02'.
	
	Р1Прил4Ст250Гр02 = ПоказательПоСтроке("Р1Прил4Ст250Гр02");
	Р1Прил4Ст20Гр02 = ПоказательПоСтроке("Р1Прил4Ст20Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст20Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст250Гр02.Значение, Р1Прил4Ст20Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_68(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 68)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по временной нетрудоспособности, финансируемых из "
		+ "федерального бюджета (строка 250 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 080 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст250Гр02 >= Р1Прил4Ст80Гр02'.
	
	Р1Прил4Ст250Гр02 = ПоказательПоСтроке("Р1Прил4Ст250Гр02");
	Р1Прил4Ст80Гр02 = ПоказательПоСтроке("Р1Прил4Ст80Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст80Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст80Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст250Гр02.Значение, Р1Прил4Ст80Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_69(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 69)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по временной нетрудоспособности, финансируемых из "
		+ "федерального бюджета (строка 250 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 140 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст250Гр02 >= Р1Прил4Ст140Гр02'.
	
	Р1Прил4Ст250Гр02 = ПоказательПоСтроке("Р1Прил4Ст250Гр02");
	Р1Прил4Ст140Гр02 = ПоказательПоСтроке("Р1Прил4Ст140Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст140Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст140Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст250Гр02.Значение, Р1Прил4Ст140Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_70(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 70)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по временной нетрудоспособности, финансируемых из "
		+ "федерального бюджета (строка 250 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 160 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст250Гр02 >= Р1Прил4Ст160Гр02'.
	
	Р1Прил4Ст250Гр02 = ПоказательПоСтроке("Р1Прил4Ст250Гр02");
	Р1Прил4Ст160Гр02 = ПоказательПоСтроке("Р1Прил4Ст160Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст160Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст160Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст250Гр02.Значение, Р1Прил4Ст160Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_71(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 71)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по временной нетрудоспособности, финансируемых из "
		+ "федерального бюджета (строка 250 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 220 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст250Гр02 >= Р1Прил4Ст220Гр02'.
	
	Р1Прил4Ст250Гр02 = ПоказательПоСтроке("Р1Прил4Ст250Гр02");
	Р1Прил4Ст220Гр02 = ПоказательПоСтроке("Р1Прил4Ст220Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст220Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст220Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст250Гр02.Значение, Р1Прил4Ст220Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_72(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 72)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по беременности и родам, финансируемых из федерального "
		+ "бюджета (строка 260 графа 2 Приложения 4) должно быть больше или равно значению показателя строки 030 графы "
		+ "2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст260Гр02 >= Р1Прил4Ст30Гр02'.
	
	Р1Прил4Ст260Гр02 = ПоказательПоСтроке("Р1Прил4Ст260Гр02");
	Р1Прил4Ст30Гр02 = ПоказательПоСтроке("Р1Прил4Ст30Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст30Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст260Гр02.Значение, Р1Прил4Ст30Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_73(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 73)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по беременности и родам, финансируемых из федерального "
		+ "бюджета (строка 260 графа 2 Приложения 4) должно быть больше или равно значению показателя строки 090 графы "
		+ "2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст260Гр02 >= Р1Прил4Ст90Гр02'.
	
	Р1Прил4Ст260Гр02 = ПоказательПоСтроке("Р1Прил4Ст260Гр02");
	Р1Прил4Ст90Гр02 = ПоказательПоСтроке("Р1Прил4Ст90Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст90Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст90Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст260Гр02.Значение, Р1Прил4Ст90Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_74(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 74)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по беременности и родам, финансируемых из федерального "
		+ "бюджета (строка 260 графа 2 Приложения 4) должно быть больше или равно значению показателя строки 170 графы "
		+ "2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст260Гр02 >= Р1Прил4Ст170Гр02'.
	
	Р1Прил4Ст260Гр02 = ПоказательПоСтроке("Р1Прил4Ст260Гр02");
	Р1Прил4Ст170Гр02 = ПоказательПоСтроке("Р1Прил4Ст170Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст170Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст170Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст260Гр02.Значение, Р1Прил4Ст170Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_75(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 75)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по беременности и родам, финансируемых из федерального "
		+ "бюджета (строка 260 графа 2 Приложения 4) должно быть больше или равно значению показателя строки 230 графы "
		+ "2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст260Гр02 >= Р1Прил4Ст230Гр02'.
	
	Р1Прил4Ст260Гр02 = ПоказательПоСтроке("Р1Прил4Ст260Гр02");
	Р1Прил4Ст230Гр02 = ПоказательПоСтроке("Р1Прил4Ст230Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст230Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст230Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст260Гр02.Значение, Р1Прил4Ст230Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_76(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 76)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за ребенком, всего, финансируемых из "
		+ "федерального бюджета (строка 270 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 040 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр02 >= Р1Прил4Ст40Гр02'.
	
	Р1Прил4Ст270Гр02 = ПоказательПоСтроке("Р1Прил4Ст270Гр02");
	Р1Прил4Ст40Гр02 = ПоказательПоСтроке("Р1Прил4Ст40Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр02.Значение, Р1Прил4Ст40Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_77(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 77)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за ребенком, всего, финансируемых из "
		+ "федерального бюджета (строка 270 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 100 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр02 >= Р1Прил4Ст100Гр02'.
	
	Р1Прил4Ст270Гр02 = ПоказательПоСтроке("Р1Прил4Ст270Гр02");
	Р1Прил4Ст100Гр02 = ПоказательПоСтроке("Р1Прил4Ст100Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр02.Значение, Р1Прил4Ст100Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_78(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 78)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за ребенком, всего, финансируемых из "
		+ "федерального бюджета (строка 270 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 180 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр02 >= Р1Прил4Ст180Гр02'.
	
	Р1Прил4Ст270Гр02 = ПоказательПоСтроке("Р1Прил4Ст270Гр02");
	Р1Прил4Ст180Гр02 = ПоказательПоСтроке("Р1Прил4Ст180Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр02.Значение, Р1Прил4Ст180Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_79(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 79)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за ребенком, всего, финансируемых из "
		+ "федерального бюджета (строка 270 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 280 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр02 >= Р1Прил4Ст280Гр02'.
	
	Р1Прил4Ст270Гр02 = ПоказательПоСтроке("Р1Прил4Ст270Гр02");
	Р1Прил4Ст280Гр02 = ПоказательПоСтроке("Р1Прил4Ст280Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр02.Значение, Р1Прил4Ст280Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_80(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 80)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за ребенком, всего, финансируемых из "
		+ "федерального бюджета (строка 270 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 290 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр02 >= Р1Прил4Ст290Гр02'.
	
	Р1Прил4Ст270Гр02 = ПоказательПоСтроке("Р1Прил4Ст270Гр02");
	Р1Прил4Ст290Гр02 = ПоказательПоСтроке("Р1Прил4Ст290Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр02.Значение, Р1Прил4Ст290Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_81(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 81)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за первым ребенком, финансируемых из "
		+ "федерального бюджета (строка 280 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 050 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст280Гр02 >= Р1Прил4Ст50Гр02'.
	
	Р1Прил4Ст280Гр02 = ПоказательПоСтроке("Р1Прил4Ст280Гр02");
	Р1Прил4Ст50Гр02 = ПоказательПоСтроке("Р1Прил4Ст50Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст280Гр02.Значение, Р1Прил4Ст50Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_82(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 82)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за первым ребенком, финансируемых из "
		+ "федерального бюджета (строка 280 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 110 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст280Гр02 >= Р1Прил4Ст110Гр02'.
	
	Р1Прил4Ст280Гр02 = ПоказательПоСтроке("Р1Прил4Ст280Гр02");
	Р1Прил4Ст110Гр02 = ПоказательПоСтроке("Р1Прил4Ст110Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст280Гр02.Значение, Р1Прил4Ст110Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_83(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 83)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за первым ребенком, финансируемых из "
		+ "федерального бюджета (строка 280 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 190 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст280Гр02 >= Р1Прил4Ст190Гр02'.
	
	Р1Прил4Ст280Гр02 = ПоказательПоСтроке("Р1Прил4Ст280Гр02");
	Р1Прил4Ст190Гр02 = ПоказательПоСтроке("Р1Прил4Ст190Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст280Гр02.Значение, Р1Прил4Ст190Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_84(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 84)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за вторым и последующими детьми, финансируемых "
		+ "из федерального бюджета (строка 290 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 060 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст290Гр02 >= Р1Прил4Ст60Гр02'.
	
	Р1Прил4Ст290Гр02 = ПоказательПоСтроке("Р1Прил4Ст290Гр02");
	Р1Прил4Ст60Гр02 = ПоказательПоСтроке("Р1Прил4Ст60Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст290Гр02.Значение, Р1Прил4Ст60Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_85(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 85)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за вторым и последующими детьми, финансируемых "
		+ "из федерального бюджета (строка 290 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 120 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст290Гр02 >= Р1Прил4Ст120Гр02'.
	
	Р1Прил4Ст290Гр02 = ПоказательПоСтроке("Р1Прил4Ст290Гр02");
	Р1Прил4Ст120Гр02 = ПоказательПоСтроке("Р1Прил4Ст120Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст290Гр02.Значение, Р1Прил4Ст120Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_86(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 86)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Число получателей пособий по уходу за вторым и последующими детьми, финансируемых "
		+ "из федерального бюджета (строка 290 графа 2 Приложения 4) должно быть больше или равно значению показателя "
		+ "строки 200 графы 2 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст290Гр02 >= Р1Прил4Ст200Гр02'.
	
	Р1Прил4Ст290Гр02 = ПоказательПоСтроке("Р1Прил4Ст290Гр02");
	Р1Прил4Ст200Гр02 = ПоказательПоСтроке("Р1Прил4Ст200Гр02");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр02, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст290Гр02.Значение, Р1Прил4Ст200Гр02.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " >= " + КС.ПраваяЧастьСтр;
	
	Если КС.ЛеваяЧасть >= КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_87(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 87)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Количество дней, выплат пособий по уходу за ребенком, всего, финансируемых из "
		+ "федерального бюджета (строка 270 графа 3 Приложения 4) должно быть равно сумме показателей строк 280 и 290 "
		+ "графы 3 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр03 = Р1Прил4Ст280Гр03 + Р1Прил4Ст290Гр03'.
	
	Р1Прил4Ст270Гр03 = ПоказательПоСтроке("Р1Прил4Ст270Гр03");
	Р1Прил4Ст280Гр03 = ПоказательПоСтроке("Р1Прил4Ст280Гр03");
	Р1Прил4Ст290Гр03 = ПоказательПоСтроке("Р1Прил4Ст290Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр03.Значение, Р1Прил4Ст280Гр03.Значение + Р1Прил4Ст290Гр03.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст280Гр03.ЗначениеСтр + " + " + Р1Прил4Ст290Гр03.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_88(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 88)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Сумма расходов по выплатам, финансируемым из федерального бюджета, всего (строка "
		+ "240 графа 4 Приложения 4) должна быть равна сумме показателей строк 250, 260, 270, 300, 310 графы 4 "
		+ "Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст240Гр04 = Р1Прил4Ст250Гр04 + Р1Прил4Ст260Гр04 + Р1Прил4Ст270Гр04 + Р1Прил4Ст300Гр04 + Р1Прил4Ст310Гр04'.
	
	Р1Прил4Ст240Гр04 = ПоказательПоСтроке("Р1Прил4Ст240Гр04");
	Р1Прил4Ст250Гр04 = ПоказательПоСтроке("Р1Прил4Ст250Гр04");
	Р1Прил4Ст260Гр04 = ПоказательПоСтроке("Р1Прил4Ст260Гр04");
	Р1Прил4Ст270Гр04 = ПоказательПоСтроке("Р1Прил4Ст270Гр04");
	Р1Прил4Ст300Гр04 = ПоказательПоСтроке("Р1Прил4Ст300Гр04");
	Р1Прил4Ст310Гр04 = ПоказательПоСтроке("Р1Прил4Ст310Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст240Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст240Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст300Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст300Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст310Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст310Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст240Гр04.Значение, Р1Прил4Ст250Гр04.Значение + Р1Прил4Ст260Гр04.Значение + Р1Прил4Ст270Гр04.Значение + Р1Прил4Ст300Гр04.Значение + Р1Прил4Ст310Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст250Гр04.ЗначениеСтр + " + " + Р1Прил4Ст260Гр04.ЗначениеСтр + " + " + Р1Прил4Ст270Гр04.ЗначениеСтр + " + " + Р1Прил4Ст300Гр04.ЗначениеСтр + " + " + Р1Прил4Ст310Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_89(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 89)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Сумма расходов по выплатам пособий по временной нетрудоспособности, финансируемых "
		+ "из федерального бюджета (строка 250 графа 4 Приложения 4) должна быть равна сумме показателей строк 020, "
		+ "080, 140, 160, 220 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст250Гр04 = Р1Прил4Ст20Гр04 + Р1Прил4Ст80Гр04 + Р1Прил4Ст140Гр04 + Р1Прил4Ст160Гр04 + Р1Прил4Ст220Гр04'.
	
	Р1Прил4Ст250Гр04 = ПоказательПоСтроке("Р1Прил4Ст250Гр04");
	Р1Прил4Ст20Гр04 = ПоказательПоСтроке("Р1Прил4Ст20Гр04");
	Р1Прил4Ст80Гр04 = ПоказательПоСтроке("Р1Прил4Ст80Гр04");
	Р1Прил4Ст140Гр04 = ПоказательПоСтроке("Р1Прил4Ст140Гр04");
	Р1Прил4Ст160Гр04 = ПоказательПоСтроке("Р1Прил4Ст160Гр04");
	Р1Прил4Ст220Гр04 = ПоказательПоСтроке("Р1Прил4Ст220Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст20Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст80Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст140Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст140Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст160Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст160Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст220Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст220Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст250Гр04.Значение, Р1Прил4Ст20Гр04.Значение + Р1Прил4Ст80Гр04.Значение + Р1Прил4Ст140Гр04.Значение + Р1Прил4Ст160Гр04.Значение + Р1Прил4Ст220Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст20Гр04.ЗначениеСтр + " + " + Р1Прил4Ст80Гр04.ЗначениеСтр + " + " + Р1Прил4Ст140Гр04.ЗначениеСтр + " + " + Р1Прил4Ст160Гр04.ЗначениеСтр + " + " + Р1Прил4Ст220Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_90(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 90)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Сумма расходов по выплатам пособий по беременности и родам, финансируемых из "
		+ "федерального бюджета (строка 260 графа 4 Приложения 4) должна быть равна сумме показателей строк 030, 090, "
		+ "170, 230 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст260Гр04 = Р1Прил4Ст30Гр04 + Р1Прил4Ст90Гр04 + Р1Прил4Ст170Гр04 + Р1Прил4Ст230Гр04'.
	
	Р1Прил4Ст260Гр04 = ПоказательПоСтроке("Р1Прил4Ст260Гр04");
	Р1Прил4Ст30Гр04 = ПоказательПоСтроке("Р1Прил4Ст30Гр04");
	Р1Прил4Ст90Гр04 = ПоказательПоСтроке("Р1Прил4Ст90Гр04");
	Р1Прил4Ст170Гр04 = ПоказательПоСтроке("Р1Прил4Ст170Гр04");
	Р1Прил4Ст230Гр04 = ПоказательПоСтроке("Р1Прил4Ст230Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст30Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст90Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст90Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст170Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст170Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст230Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст230Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст260Гр04.Значение, Р1Прил4Ст30Гр04.Значение + Р1Прил4Ст90Гр04.Значение + Р1Прил4Ст170Гр04.Значение + Р1Прил4Ст230Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст30Гр04.ЗначениеСтр + " + " + Р1Прил4Ст90Гр04.ЗначениеСтр + " + " + Р1Прил4Ст170Гр04.ЗначениеСтр + " + " + Р1Прил4Ст230Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_91(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 91)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Сумма расходов по выплатам пособий по уходу за ребенком, всего, финансируемых из "
		+ "федерального бюджета (строка 270 графа 2 Приложения 4) должна быть равна сумме показателе строк 280 и 290 "
		+ "графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр04 = Р1Прил4Ст280Гр04 + Р1Прил4Ст290Гр04'.
	
	Р1Прил4Ст270Гр04 = ПоказательПоСтроке("Р1Прил4Ст270Гр04");
	Р1Прил4Ст280Гр04 = ПоказательПоСтроке("Р1Прил4Ст280Гр04");
	Р1Прил4Ст290Гр04 = ПоказательПоСтроке("Р1Прил4Ст290Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр04.Значение, Р1Прил4Ст280Гр04.Значение + Р1Прил4Ст290Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст280Гр04.ЗначениеСтр + " + " + Р1Прил4Ст290Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_92(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 92)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Сумма расходов по выплатам пособий по уходу за первым ребенком, финансируемых из "
		+ "федерального бюджета (строка 280 графа 4 Приложения 4) должна быть равна сумме показателей строк 050, 110 и "
		+ "190 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст280Гр04 = Р1Прил4Ст50Гр04 + Р1Прил4Ст110Гр04 + Р1Прил4Ст190Гр04'.
	
	Р1Прил4Ст280Гр04 = ПоказательПоСтроке("Р1Прил4Ст280Гр04");
	Р1Прил4Ст50Гр04 = ПоказательПоСтроке("Р1Прил4Ст50Гр04");
	Р1Прил4Ст110Гр04 = ПоказательПоСтроке("Р1Прил4Ст110Гр04");
	Р1Прил4Ст190Гр04 = ПоказательПоСтроке("Р1Прил4Ст190Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст280Гр04.Значение, Р1Прил4Ст50Гр04.Значение + Р1Прил4Ст110Гр04.Значение + Р1Прил4Ст190Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст50Гр04.ЗначениеСтр + " + " + Р1Прил4Ст110Гр04.ЗначениеСтр + " + " + Р1Прил4Ст190Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_93(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 93)'");
	ОписаниеКС     = НСтр("ru='ИТОГО. Сумма расходов по выплатам пособий по уходу за вторым и последующими детьми, "
		+ "финансируемых из федерального бюджета (строка 290 графа 4 Приложения 4) должна быть равна сумме показателей "
		+ "строк 060, 120 и 200 графы 4 Приложения 4'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст290Гр04 = Р1Прил4Ст60Гр04 + Р1Прил4Ст120Гр04 + Р1Прил4Ст200Гр04'.
	
	Р1Прил4Ст290Гр04 = ПоказательПоСтроке("Р1Прил4Ст290Гр04");
	Р1Прил4Ст60Гр04 = ПоказательПоСтроке("Р1Прил4Ст60Гр04");
	Р1Прил4Ст120Гр04 = ПоказательПоСтроке("Р1Прил4Ст120Гр04");
	Р1Прил4Ст200Гр04 = ПоказательПоСтроке("Р1Прил4Ст200Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст290Гр04.Значение, Р1Прил4Ст60Гр04.Значение + Р1Прил4Ст120Гр04.Значение + Р1Прил4Ст200Гр04.Значение);
	Расшифровка = КС.ЛеваяЧастьСтр + " = " + Р1Прил4Ст60Гр04.ЗначениеСтр + " + " + Р1Прил4Ст120Гр04.ЗначениеСтр + " + " + Р1Прил4Ст200Гр04.ЗначениеСтр + " Итог [" + КС.ПраваяЧастьСтр + "]";
	
	Если КС.ЛеваяЧасть = КС.ПраваяЧасть Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_94а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 94а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 010 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 010 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр02 > 0, когда Р1Прил3Ст10Гр01 > 0'.
	
	Р1Прил3Ст10Гр01 = ПоказательПоСтроке("Р1Прил3Ст10Гр01");
	Р1Прил3Ст10Гр02 = ПоказательПоСтроке("Р1Прил3Ст10Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст10Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст10Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_94б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 94б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 010 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 010 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр03 > 0, когда Р1Прил3Ст10Гр01 > 0'.
	
	Р1Прил3Ст10Гр01 = ПоказательПоСтроке("Р1Прил3Ст10Гр01");
	Р1Прил3Ст10Гр03 = ПоказательПоСтроке("Р1Прил3Ст10Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст10Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст10Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_95а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 95а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 011 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 011 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст11Гр02 > 0, когда Р1Прил3Ст11Гр01 > 0'.
	
	Р1Прил3Ст11Гр01 = ПоказательПоСтроке("Р1Прил3Ст11Гр01");
	Р1Прил3Ст11Гр02 = ПоказательПоСтроке("Р1Прил3Ст11Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст11Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст11Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст11Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_95б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 95б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 011 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 011 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст11Гр03 > 0, когда Р1Прил3Ст11Гр01 > 0'.
	
	Р1Прил3Ст11Гр01 = ПоказательПоСтроке("Р1Прил3Ст11Гр01");
	Р1Прил3Ст11Гр03 = ПоказательПоСтроке("Р1Прил3Ст11Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст11Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст11Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст11Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_96а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 96а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 020 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 020 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст20Гр02 > 0, когда Р1Прил3Ст20Гр01 > 0'.
	
	Р1Прил3Ст20Гр01 = ПоказательПоСтроке("Р1Прил3Ст20Гр01");
	Р1Прил3Ст20Гр02 = ПоказательПоСтроке("Р1Прил3Ст20Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст20Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст20Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст20Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_96б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 96б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 020 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 020 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст20Гр03 > 0, когда Р1Прил3Ст20Гр01 > 0'.
	
	Р1Прил3Ст20Гр01 = ПоказательПоСтроке("Р1Прил3Ст20Гр01");
	Р1Прил3Ст20Гр03 = ПоказательПоСтроке("Р1Прил3Ст20Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст20Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст20Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст20Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_97а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 97а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 021 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 021 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст21Гр02 > 0, когда Р1Прил3Ст21Гр01 > 0'.
	
	Р1Прил3Ст21Гр01 = ПоказательПоСтроке("Р1Прил3Ст21Гр01");
	Р1Прил3Ст21Гр02 = ПоказательПоСтроке("Р1Прил3Ст21Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст21Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст21Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст21Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_97б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 97б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 021 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 021 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст21Гр03 > 0, когда Р1Прил3Ст21Гр01 > 0'.
	
	Р1Прил3Ст21Гр01 = ПоказательПоСтроке("Р1Прил3Ст21Гр01");
	Р1Прил3Ст21Гр03 = ПоказательПоСтроке("Р1Прил3Ст21Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст21Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст21Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст21Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_98а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 98а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 030 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 030 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр02 > 0, когда Р1Прил3Ст30Гр01 > 0'.
	
	Р1Прил3Ст30Гр01 = ПоказательПоСтроке("Р1Прил3Ст30Гр01");
	Р1Прил3Ст30Гр02 = ПоказательПоСтроке("Р1Прил3Ст30Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст30Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст30Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_98б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 98б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 030 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 030 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр03 > 0, когда Р1Прил3Ст30Гр01 > 0'.
	
	Р1Прил3Ст30Гр01 = ПоказательПоСтроке("Р1Прил3Ст30Гр01");
	Р1Прил3Ст30Гр03 = ПоказательПоСтроке("Р1Прил3Ст30Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст30Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст30Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_99а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 99а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 031 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 031 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст31Гр02 > 0, когда Р1Прил3Ст31Гр01 > 0'.
	
	Р1Прил3Ст31Гр01 = ПоказательПоСтроке("Р1Прил3Ст31Гр01");
	Р1Прил3Ст31Гр02 = ПоказательПоСтроке("Р1Прил3Ст31Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст31Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст31Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст31Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_99б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 99б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 031 Приложения 3 должно быть больше нуля, если значение графы 1 "
		+ "строки 031 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст31Гр03 > 0, когда Р1Прил3Ст31Гр01 > 0'.
	
	Р1Прил3Ст31Гр01 = ПоказательПоСтроке("Р1Прил3Ст31Гр01");
	Р1Прил3Ст31Гр03 = ПоказательПоСтроке("Р1Прил3Ст31Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст31Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст31Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст31Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_100(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 100)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 010 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 010 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр03 > 0, когда Р1Прил3Ст10Гр02 > 0'.
	
	Р1Прил3Ст10Гр02 = ПоказательПоСтроке("Р1Прил3Ст10Гр02");
	Р1Прил3Ст10Гр03 = ПоказательПоСтроке("Р1Прил3Ст10Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст10Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст10Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_101(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 101)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 011 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 011 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст11Гр03 > 0, когда Р1Прил3Ст11Гр02 > 0'.
	
	Р1Прил3Ст11Гр02 = ПоказательПоСтроке("Р1Прил3Ст11Гр02");
	Р1Прил3Ст11Гр03 = ПоказательПоСтроке("Р1Прил3Ст11Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст11Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст11Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст11Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_102(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 102)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 020 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 020 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст20Гр03 > 0, когда Р1Прил3Ст20Гр02 > 0'.
	
	Р1Прил3Ст20Гр02 = ПоказательПоСтроке("Р1Прил3Ст20Гр02");
	Р1Прил3Ст20Гр03 = ПоказательПоСтроке("Р1Прил3Ст20Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст20Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст20Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст20Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_103(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 103)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 021 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 021 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст21Гр03 > 0, когда Р1Прил3Ст21Гр02 > 0'.
	
	Р1Прил3Ст21Гр02 = ПоказательПоСтроке("Р1Прил3Ст21Гр02");
	Р1Прил3Ст21Гр03 = ПоказательПоСтроке("Р1Прил3Ст21Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст21Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст21Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст21Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_104(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 104)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 030 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 030 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр03 > 0, когда Р1Прил3Ст30Гр02 > 0'.
	
	Р1Прил3Ст30Гр02 = ПоказательПоСтроке("Р1Прил3Ст30Гр02");
	Р1Прил3Ст30Гр03 = ПоказательПоСтроке("Р1Прил3Ст30Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст30Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст30Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_105(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 105)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 031 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 031 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст31Гр03 > 0, когда Р1Прил3Ст31Гр02 > 0'.
	
	Р1Прил3Ст31Гр02 = ПоказательПоСтроке("Р1Прил3Ст31Гр02");
	Р1Прил3Ст31Гр03 = ПоказательПоСтроке("Р1Прил3Ст31Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст31Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст31Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст31Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_106(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 106)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 040 Приложения 3 должно быть больше нуля, если значение графы2 "
		+ "строки 040 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст40Гр03 > 0, когда Р1Прил3Ст40Гр02 > 0'.
	
	Р1Прил3Ст40Гр02 = ПоказательПоСтроке("Р1Прил3Ст40Гр02");
	Р1Прил3Ст40Гр03 = ПоказательПоСтроке("Р1Прил3Ст40Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст40Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст40Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст40Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст40Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст40Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_107(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 107)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 050 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 050 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст50Гр03 > 0, когда Р1Прил3Ст50Гр02 > 0'.
	
	Р1Прил3Ст50Гр02 = ПоказательПоСтроке("Р1Прил3Ст50Гр02");
	Р1Прил3Ст50Гр03 = ПоказательПоСтроке("Р1Прил3Ст50Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст50Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст50Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст50Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст50Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст50Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_108(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 108)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 010 Приложения 3 должно быть больше нуля, если значение графы 3 "
		+ "строки 010 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст10Гр02 > 0, когда Р1Прил3Ст10Гр03 > 0'.
	
	Р1Прил3Ст10Гр03 = ПоказательПоСтроке("Р1Прил3Ст10Гр03");
	Р1Прил3Ст10Гр02 = ПоказательПоСтроке("Р1Прил3Ст10Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст10Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст10Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст10Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст10Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст10Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_109(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 109)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 011 Приложения 3 должно быть больше нуля, если значение графы 3 "
		+ "строки 011 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст11Гр02 > 0, когда Р1Прил3Ст11Гр03 > 0'.
	
	Р1Прил3Ст11Гр03 = ПоказательПоСтроке("Р1Прил3Ст11Гр03");
	Р1Прил3Ст11Гр02 = ПоказательПоСтроке("Р1Прил3Ст11Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст11Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст11Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст11Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст11Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст11Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_110(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 110)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 020 Приложения 3 должно быть больше нуля, если значение графы 3 "
		+ "строки 020 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст20Гр02 > 0, когда Р1Прил3Ст20Гр03 > 0'.
	
	Р1Прил3Ст20Гр03 = ПоказательПоСтроке("Р1Прил3Ст20Гр03");
	Р1Прил3Ст20Гр02 = ПоказательПоСтроке("Р1Прил3Ст20Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст20Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст20Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст20Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст20Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст20Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_111(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 111)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 021 Приложения 3 должно быть больше нуля, если значение графы 3 "
		+ "строки 021 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст21Гр02 > 0, когда Р1Прил3Ст21Гр03 > 0'.
	
	Р1Прил3Ст21Гр03 = ПоказательПоСтроке("Р1Прил3Ст21Гр03");
	Р1Прил3Ст21Гр02 = ПоказательПоСтроке("Р1Прил3Ст21Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст21Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст21Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст21Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст21Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст21Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_112(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 112)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 030 Приложения 3 должно быть больше нуля, если значение графы 3 "
		+ "строки 030 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст30Гр02 > 0, когда Р1Прил3Ст30Гр03 > 0'.
	
	Р1Прил3Ст30Гр03 = ПоказательПоСтроке("Р1Прил3Ст30Гр03");
	Р1Прил3Ст30Гр02 = ПоказательПоСтроке("Р1Прил3Ст30Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст30Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст30Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст30Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст30Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст30Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_113(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 113)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 031 Приложения 3 должно быть больше нуля, если значение графы 3 "
		+ "строки 031 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст31Гр02 > 0, когда Р1Прил3Ст31Гр03 > 0'.
	
	Р1Прил3Ст31Гр03 = ПоказательПоСтроке("Р1Прил3Ст31Гр03");
	Р1Прил3Ст31Гр02 = ПоказательПоСтроке("Р1Прил3Ст31Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст31Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст31Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст31Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст31Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст31Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_114а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 114а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 по строке 060 Приложения 3 должно быть больше нуля, если значение графы "
		+ "1 строки 060 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр02 > 0, когда Р1Прил3Ст60Гр01 > 0'.
	
	Р1Прил3Ст60Гр01 = ПоказательПоСтроке("Р1Прил3Ст60Гр01");
	Р1Прил3Ст60Гр02 = ПоказательПоСтроке("Р1Прил3Ст60Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст60Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст60Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_114б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 114б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 060 Приложения 3 должно быть больше нуля, если значение графы "
		+ "1 строки 060 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр03 > 0, когда Р1Прил3Ст60Гр01 > 0'.
	
	Р1Прил3Ст60Гр01 = ПоказательПоСтроке("Р1Прил3Ст60Гр01");
	Р1Прил3Ст60Гр03 = ПоказательПоСтроке("Р1Прил3Ст60Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст60Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст60Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_115а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 115а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 1 по строке 060 Приложения 3 должно быть больше нуля, если значение графы "
		+ "2 строки 060 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр01 > 0, когда Р1Прил3Ст60Гр02 > 0'.
	
	Р1Прил3Ст60Гр02 = ПоказательПоСтроке("Р1Прил3Ст60Гр02");
	Р1Прил3Ст60Гр01 = ПоказательПоСтроке("Р1Прил3Ст60Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр01.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст60Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст60Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_115б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 115б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 060 Приложения 3 должно быть больше нуля, если значение графы "
		+ "2 строки 060 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр03 > 0, когда Р1Прил3Ст60Гр02 > 0'.
	
	Р1Прил3Ст60Гр02 = ПоказательПоСтроке("Р1Прил3Ст60Гр02");
	Р1Прил3Ст60Гр03 = ПоказательПоСтроке("Р1Прил3Ст60Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст60Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст60Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_116а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 116а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 1 по строке 060 Приложения 3 должно быть больше нуля, если значение графы "
		+ "3 строки 060 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр01 > 0, когда Р1Прил3Ст60Гр03 > 0'.
	
	Р1Прил3Ст60Гр03 = ПоказательПоСтроке("Р1Прил3Ст60Гр03");
	Р1Прил3Ст60Гр01 = ПоказательПоСтроке("Р1Прил3Ст60Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр01.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст60Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст60Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_116б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 116б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 по строке 060 Приложения 3 должно быть больше нуля, если значение графы "
		+ "3 строки 060 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст60Гр02 > 0, когда Р1Прил3Ст60Гр03 > 0'.
	
	Р1Прил3Ст60Гр03 = ПоказательПоСтроке("Р1Прил3Ст60Гр03");
	Р1Прил3Ст60Гр02 = ПоказательПоСтроке("Р1Прил3Ст60Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст60Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст60Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст60Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст60Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_117а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 117а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 по строке 061 Приложения 3 должно быть больше нуля, если значение графы "
		+ "1 строки 061 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст61Гр02 > 0, когда Р1Прил3Ст61Гр01 > 0'.
	
	Р1Прил3Ст61Гр01 = ПоказательПоСтроке("Р1Прил3Ст61Гр01");
	Р1Прил3Ст61Гр02 = ПоказательПоСтроке("Р1Прил3Ст61Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст61Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст61Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст61Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_117б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 117б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 061 Приложения 3 должно быть больше нуля, если значение графы "
		+ "1 строки 061 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст61Гр03 > 0, когда Р1Прил3Ст61Гр01 > 0'.
	
	Р1Прил3Ст61Гр01 = ПоказательПоСтроке("Р1Прил3Ст61Гр01");
	Р1Прил3Ст61Гр03 = ПоказательПоСтроке("Р1Прил3Ст61Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст61Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст61Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст61Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_118а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 118а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 1 по строке 061 Приложения 3 должно быть больше нуля, если значение графы "
		+ "2 строки 061 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст61Гр01 > 0, когда Р1Прил3Ст61Гр02 > 0'.
	
	Р1Прил3Ст61Гр02 = ПоказательПоСтроке("Р1Прил3Ст61Гр02");
	Р1Прил3Ст61Гр01 = ПоказательПоСтроке("Р1Прил3Ст61Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст61Гр01.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст61Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст61Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_118б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 118б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 061 Приложения 3 должно быть больше нуля, если значение графы "
		+ "2 строки 061 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст61Гр03 > 0, когда Р1Прил3Ст61Гр02 > 0'.
	
	Р1Прил3Ст61Гр02 = ПоказательПоСтроке("Р1Прил3Ст61Гр02");
	Р1Прил3Ст61Гр03 = ПоказательПоСтроке("Р1Прил3Ст61Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст61Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст61Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст61Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_119а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 119а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 1 по строке 061 Приложения 3 должно быть больше нуля, если значение графы "
		+ "3 строки 061 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст61Гр01 > 0, когда Р1Прил3Ст61Гр03 > 0'.
	
	Р1Прил3Ст61Гр03 = ПоказательПоСтроке("Р1Прил3Ст61Гр03");
	Р1Прил3Ст61Гр01 = ПоказательПоСтроке("Р1Прил3Ст61Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст61Гр01.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст61Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст61Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_119б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 119б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 по строке 061 Приложения 3 должно быть больше нуля, если значение графы "
		+ "3 строки 061 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст61Гр02 > 0, когда Р1Прил3Ст61Гр03 > 0'.
	
	Р1Прил3Ст61Гр03 = ПоказательПоСтроке("Р1Прил3Ст61Гр03");
	Р1Прил3Ст61Гр02 = ПоказательПоСтроке("Р1Прил3Ст61Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст61Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст61Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст61Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст61Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст61Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_120а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 120а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 по строке 062 Приложения 3 должно быть больше нуля, если значение графы "
		+ "1 строки 062 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст62Гр02 > 0, когда Р1Прил3Ст62Гр01 > 0'.
	
	Р1Прил3Ст62Гр01 = ПоказательПоСтроке("Р1Прил3Ст62Гр01");
	Р1Прил3Ст62Гр02 = ПоказательПоСтроке("Р1Прил3Ст62Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст62Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст62Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст62Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_120б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 120б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 062 Приложения 3 должно быть больше нуля, если значение графы "
		+ "1 строки 062 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст62Гр03 > 0, когда Р1Прил3Ст62Гр01 > 0'.
	
	Р1Прил3Ст62Гр01 = ПоказательПоСтроке("Р1Прил3Ст62Гр01");
	Р1Прил3Ст62Гр03 = ПоказательПоСтроке("Р1Прил3Ст62Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст62Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст62Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст62Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_121а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 121а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 1 по строке 062 Приложения 3 должно быть больше нуля, если значение графы "
		+ "2 строки 062 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст62Гр01 > 0, когда Р1Прил3Ст62Гр02 > 0'.
	
	Р1Прил3Ст62Гр02 = ПоказательПоСтроке("Р1Прил3Ст62Гр02");
	Р1Прил3Ст62Гр01 = ПоказательПоСтроке("Р1Прил3Ст62Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст62Гр01.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст62Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст62Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_121б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 121б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 062 Приложения 3 должно быть больше нуля, если значение графы "
		+ "2 строки 062 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст62Гр03 > 0, когда Р1Прил3Ст62Гр02 > 0'.
	
	Р1Прил3Ст62Гр02 = ПоказательПоСтроке("Р1Прил3Ст62Гр02");
	Р1Прил3Ст62Гр03 = ПоказательПоСтроке("Р1Прил3Ст62Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст62Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст62Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст62Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_122а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 122а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 1 по строке 062 Приложения 3 должно быть больше нуля, если значение графы "
		+ "3 строки 062 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст62Гр01 > 0, когда Р1Прил3Ст62Гр03 > 0'.
	
	Р1Прил3Ст62Гр03 = ПоказательПоСтроке("Р1Прил3Ст62Гр03");
	Р1Прил3Ст62Гр01 = ПоказательПоСтроке("Р1Прил3Ст62Гр01");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр01, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст62Гр01.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст62Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст62Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_122б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 122б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 по строке 062 Приложения 3 должно быть больше нуля, если значение графы "
		+ "3 строки 062 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст62Гр02 > 0, когда Р1Прил3Ст62Гр03 > 0'.
	
	Р1Прил3Ст62Гр03 = ПоказательПоСтроке("Р1Прил3Ст62Гр03");
	Р1Прил3Ст62Гр02 = ПоказательПоСтроке("Р1Прил3Ст62Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст62Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст62Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст62Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст62Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст62Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_123(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 123)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 070 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 070 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст70Гр03 > 0, когда Р1Прил3Ст70Гр02 > 0'.
	
	Р1Прил3Ст70Гр02 = ПоказательПоСтроке("Р1Прил3Ст70Гр02");
	Р1Прил3Ст70Гр03 = ПоказательПоСтроке("Р1Прил3Ст70Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст70Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст70Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст70Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_124(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 124)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 070 Приложения 3 должно быть больше нуля, если значение графы 3 "
		+ "строки 070 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст70Гр02 > 0, когда Р1Прил3Ст70Гр03 > 0'.
	
	Р1Прил3Ст70Гр03 = ПоказательПоСтроке("Р1Прил3Ст70Гр03");
	Р1Прил3Ст70Гр02 = ПоказательПоСтроке("Р1Прил3Ст70Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст70Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст70Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст70Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст70Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст70Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_125а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 125а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 по строке 090 Приложения 3 должно быть больше нуля, если значение графы "
		+ "1 строки 090 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст90Гр02 > 0, когда Р1Прил3Ст90Гр01 > 0'.
	
	Р1Прил3Ст90Гр01 = ПоказательПоСтроке("Р1Прил3Ст90Гр01");
	Р1Прил3Ст90Гр02 = ПоказательПоСтроке("Р1Прил3Ст90Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст90Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст90Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст90Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_125б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 125б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 090 Приложения 3 должно быть больше нуля, если значение графы "
		+ "1 строки 090 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст90Гр03 > 0, когда Р1Прил3Ст90Гр01 > 0'.
	
	Р1Прил3Ст90Гр01 = ПоказательПоСтроке("Р1Прил3Ст90Гр01");
	Р1Прил3Ст90Гр03 = ПоказательПоСтроке("Р1Прил3Ст90Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр01);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр01, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст90Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст90Гр01.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст90Гр01.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_126(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 126)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 090 Приложения 3 должно быть больше нуля, если значение графы 2 "
		+ "строки 090 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст90Гр03 > 0, когда Р1Прил3Ст90Гр02 > 0'.
	
	Р1Прил3Ст90Гр02 = ПоказательПоСтроке("Р1Прил3Ст90Гр02");
	Р1Прил3Ст90Гр03 = ПоказательПоСтроке("Р1Прил3Ст90Гр03");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр02, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр03, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст90Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст90Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст90Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_127(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 3 к Разделу 1 (КС 127)'");
	ОписаниеКС     = НСтр("ru='Значение графы 2 строки 090 Приложения 3 должно быть больше нуля, если значение графы 3 "
		+ "строки 090 Приложения 3 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил3Ст90Гр02 > 0, когда Р1Прил3Ст90Гр03 > 0'.
	
	Р1Прил3Ст90Гр03 = ПоказательПоСтроке("Р1Прил3Ст90Гр03");
	Р1Прил3Ст90Гр02 = ПоказательПоСтроке("Р1Прил3Ст90Гр02");
	
	Раздел1Прил3 = мДанныеОтчета.Раздел1Прил3[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр03, "Раздел1Прил3");
	ВставитьЗначениеПоказателя(Раздел1Прил3, Р1Прил3Ст90Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил3Ст90Гр02, "Раздел1Прил3");
	
	КС = ПоказателиКС(Р1Прил3Ст90Гр02.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил3Ст90Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил3Ст90Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_128(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 128)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 020 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 020 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст20Гр04 > 0, когда Р1Прил4Ст20Гр03 > 0'.
	
	Р1Прил4Ст20Гр03 = ПоказательПоСтроке("Р1Прил4Ст20Гр03");
	Р1Прил4Ст20Гр04 = ПоказательПоСтроке("Р1Прил4Ст20Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст20Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст20Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст20Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст20Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст20Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_129(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 129)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 020 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 020 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст20Гр03 > 0, когда Р1Прил4Ст20Гр04 > 0'.
	
	Р1Прил4Ст20Гр04 = ПоказательПоСтроке("Р1Прил4Ст20Гр04");
	Р1Прил4Ст20Гр03 = ПоказательПоСтроке("Р1Прил4Ст20Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст20Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст20Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст20Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст20Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст20Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст20Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст20Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_130(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 130)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 030 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 030 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст30Гр04 > 0, когда Р1Прил4Ст30Гр03 > 0'.
	
	Р1Прил4Ст30Гр03 = ПоказательПоСтроке("Р1Прил4Ст30Гр03");
	Р1Прил4Ст30Гр04 = ПоказательПоСтроке("Р1Прил4Ст30Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст30Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст30Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст30Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст30Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст30Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_131(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 131)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 030 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 030 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст30Гр03 > 0, когда Р1Прил4Ст30Гр04 > 0'.
	
	Р1Прил4Ст30Гр04 = ПоказательПоСтроке("Р1Прил4Ст30Гр04");
	Р1Прил4Ст30Гр03 = ПоказательПоСтроке("Р1Прил4Ст30Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст30Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст30Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст30Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст30Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст30Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст30Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст30Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_132а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 132а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 040 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 040 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст40Гр03 > 0, когда Р1Прил4Ст40Гр02 > 0'.
	
	Р1Прил4Ст40Гр02 = ПоказательПоСтроке("Р1Прил4Ст40Гр02");
	Р1Прил4Ст40Гр03 = ПоказательПоСтроке("Р1Прил4Ст40Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст40Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст40Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст40Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_132б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 132б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 040 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 040 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст40Гр04 > 0, когда Р1Прил4Ст40Гр02 > 0'.
	
	Р1Прил4Ст40Гр02 = ПоказательПоСтроке("Р1Прил4Ст40Гр02");
	Р1Прил4Ст40Гр04 = ПоказательПоСтроке("Р1Прил4Ст40Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст40Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст40Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст40Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_133(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 133)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 040 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 040 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст40Гр04 > 0, когда Р1Прил4Ст40Гр03 > 0'.
	
	Р1Прил4Ст40Гр03 = ПоказательПоСтроке("Р1Прил4Ст40Гр03");
	Р1Прил4Ст40Гр04 = ПоказательПоСтроке("Р1Прил4Ст40Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст40Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст40Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст40Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_134(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 134)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 040 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 040 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст40Гр03 > 0, когда Р1Прил4Ст40Гр04 > 0'.
	
	Р1Прил4Ст40Гр04 = ПоказательПоСтроке("Р1Прил4Ст40Гр04");
	Р1Прил4Ст40Гр03 = ПоказательПоСтроке("Р1Прил4Ст40Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст40Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст40Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст40Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст40Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст40Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_135а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 135а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 050 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 050 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст50Гр03 > 0, когда Р1Прил4Ст50Гр02 > 0'.
	
	Р1Прил4Ст50Гр02 = ПоказательПоСтроке("Р1Прил4Ст50Гр02");
	Р1Прил4Ст50Гр03 = ПоказательПоСтроке("Р1Прил4Ст50Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст50Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст50Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст50Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_135б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 135б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 050 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 050 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст50Гр04 > 0, когда Р1Прил4Ст50Гр02 > 0'.
	
	Р1Прил4Ст50Гр02 = ПоказательПоСтроке("Р1Прил4Ст50Гр02");
	Р1Прил4Ст50Гр04 = ПоказательПоСтроке("Р1Прил4Ст50Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст50Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст50Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст50Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_136(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 136)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 050 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 050 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст50Гр04 > 0, когда Р1Прил4Ст50Гр03 > 0'.
	
	Р1Прил4Ст50Гр03 = ПоказательПоСтроке("Р1Прил4Ст50Гр03");
	Р1Прил4Ст50Гр04 = ПоказательПоСтроке("Р1Прил4Ст50Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст50Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст50Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст50Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_137(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 137)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 050 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 050 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст50Гр03 > 0, когда Р1Прил4Ст50Гр04 > 0'.
	
	Р1Прил4Ст50Гр04 = ПоказательПоСтроке("Р1Прил4Ст50Гр04");
	Р1Прил4Ст50Гр03 = ПоказательПоСтроке("Р1Прил4Ст50Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст50Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст50Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст50Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст50Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст50Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_138а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 138а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 060 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 060 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст60Гр03 > 0, когда Р1Прил4Ст60Гр02 > 0'.
	
	Р1Прил4Ст60Гр02 = ПоказательПоСтроке("Р1Прил4Ст60Гр02");
	Р1Прил4Ст60Гр03 = ПоказательПоСтроке("Р1Прил4Ст60Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст60Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст60Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст60Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_138б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 138б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 060 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 060 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст60Гр04 > 0, когда Р1Прил4Ст60Гр02 > 0'.
	
	Р1Прил4Ст60Гр02 = ПоказательПоСтроке("Р1Прил4Ст60Гр02");
	Р1Прил4Ст60Гр04 = ПоказательПоСтроке("Р1Прил4Ст60Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст60Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст60Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст60Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_139(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 139)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 060 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 060 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст60Гр04 > 0, когда Р1Прил4Ст60Гр03 > 0'.
	
	Р1Прил4Ст60Гр03 = ПоказательПоСтроке("Р1Прил4Ст60Гр03");
	Р1Прил4Ст60Гр04 = ПоказательПоСтроке("Р1Прил4Ст60Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст60Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст60Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст60Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_140(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 140)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 060 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 060 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст60Гр03 > 0, когда Р1Прил4Ст60Гр04 > 0'.
	
	Р1Прил4Ст60Гр04 = ПоказательПоСтроке("Р1Прил4Ст60Гр04");
	Р1Прил4Ст60Гр03 = ПоказательПоСтроке("Р1Прил4Ст60Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст60Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст60Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст60Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст60Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст60Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_141(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 141)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 080 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 080 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст80Гр04 > 0, когда Р1Прил4Ст80Гр03 > 0'.
	
	Р1Прил4Ст80Гр03 = ПоказательПоСтроке("Р1Прил4Ст80Гр03");
	Р1Прил4Ст80Гр04 = ПоказательПоСтроке("Р1Прил4Ст80Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст80Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст80Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст80Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст80Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст80Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст80Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_142(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 142)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 080 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 080 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст80Гр03 > 0, когда Р1Прил4Ст80Гр04 > 0'.
	
	Р1Прил4Ст80Гр04 = ПоказательПоСтроке("Р1Прил4Ст80Гр04");
	Р1Прил4Ст80Гр03 = ПоказательПоСтроке("Р1Прил4Ст80Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст80Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст80Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст80Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст80Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст80Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст80Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст80Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_143(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 143)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 090 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 090 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст90Гр04 > 0, когда Р1Прил4Ст90Гр03 > 0'.
	
	Р1Прил4Ст90Гр03 = ПоказательПоСтроке("Р1Прил4Ст90Гр03");
	Р1Прил4Ст90Гр04 = ПоказательПоСтроке("Р1Прил4Ст90Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст90Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст90Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст90Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст90Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст90Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст90Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст90Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_144(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 144)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 090 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 090 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст90Гр03 > 0, когда Р1Прил4Ст90Гр04 > 0'.
	
	Р1Прил4Ст90Гр04 = ПоказательПоСтроке("Р1Прил4Ст90Гр04");
	Р1Прил4Ст90Гр03 = ПоказательПоСтроке("Р1Прил4Ст90Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст90Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст90Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст90Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст90Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст90Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст90Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст90Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_145а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 145а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 100 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 100 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст100Гр03 > 0, когда Р1Прил4Ст100Гр02 > 0'.
	
	Р1Прил4Ст100Гр02 = ПоказательПоСтроке("Р1Прил4Ст100Гр02");
	Р1Прил4Ст100Гр03 = ПоказательПоСтроке("Р1Прил4Ст100Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст100Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст100Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст100Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_145б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 145б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 100 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 100 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст100Гр04 > 0, когда Р1Прил4Ст100Гр02 > 0'.
	
	Р1Прил4Ст100Гр02 = ПоказательПоСтроке("Р1Прил4Ст100Гр02");
	Р1Прил4Ст100Гр04 = ПоказательПоСтроке("Р1Прил4Ст100Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст100Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст100Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст100Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_146(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 146)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 100 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 100 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст100Гр04 > 0, когда Р1Прил4Ст100Гр03 > 0'.
	
	Р1Прил4Ст100Гр03 = ПоказательПоСтроке("Р1Прил4Ст100Гр03");
	Р1Прил4Ст100Гр04 = ПоказательПоСтроке("Р1Прил4Ст100Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст100Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст100Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст100Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_147(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 147)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 100 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 100 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст100Гр03 > 0, когда Р1Прил4Ст100Гр04 > 0'.
	
	Р1Прил4Ст100Гр04 = ПоказательПоСтроке("Р1Прил4Ст100Гр04");
	Р1Прил4Ст100Гр03 = ПоказательПоСтроке("Р1Прил4Ст100Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст100Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст100Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст100Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст100Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст100Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_148а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 148а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 110 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 110 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст110Гр03 > 0, когда Р1Прил4Ст110Гр02 > 0'.
	
	Р1Прил4Ст110Гр02 = ПоказательПоСтроке("Р1Прил4Ст110Гр02");
	Р1Прил4Ст110Гр03 = ПоказательПоСтроке("Р1Прил4Ст110Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст110Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст110Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст110Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_148б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 148б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 110 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 110 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст110Гр04 > 0, когда Р1Прил4Ст110Гр02 > 0'.
	
	Р1Прил4Ст110Гр02 = ПоказательПоСтроке("Р1Прил4Ст110Гр02");
	Р1Прил4Ст110Гр04 = ПоказательПоСтроке("Р1Прил4Ст110Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст110Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст110Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст110Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_149(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 149)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 110 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 110 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст110Гр04 > 0, когда Р1Прил4Ст110Гр03 > 0'.
	
	Р1Прил4Ст110Гр03 = ПоказательПоСтроке("Р1Прил4Ст110Гр03");
	Р1Прил4Ст110Гр04 = ПоказательПоСтроке("Р1Прил4Ст110Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст110Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст110Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст110Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_150(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 150)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 110 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 110 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст110Гр03 > 0, когда Р1Прил4Ст110Гр04 > 0'.
	
	Р1Прил4Ст110Гр04 = ПоказательПоСтроке("Р1Прил4Ст110Гр04");
	Р1Прил4Ст110Гр03 = ПоказательПоСтроке("Р1Прил4Ст110Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст110Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст110Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст110Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст110Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст110Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_151а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 151а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 120 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 120 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст120Гр03 > 0, когда Р1Прил4Ст120Гр02 > 0'.
	
	Р1Прил4Ст120Гр02 = ПоказательПоСтроке("Р1Прил4Ст120Гр02");
	Р1Прил4Ст120Гр03 = ПоказательПоСтроке("Р1Прил4Ст120Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст120Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст120Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст120Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_151б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 151б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 120 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 120 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст120Гр04 > 0, когда Р1Прил4Ст120Гр02 > 0'.
	
	Р1Прил4Ст120Гр02 = ПоказательПоСтроке("Р1Прил4Ст120Гр02");
	Р1Прил4Ст120Гр04 = ПоказательПоСтроке("Р1Прил4Ст120Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст120Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст120Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст120Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_152(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 152)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 120 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 120 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст120Гр04 > 0, когда Р1Прил4Ст120Гр03 > 0'.
	
	Р1Прил4Ст120Гр03 = ПоказательПоСтроке("Р1Прил4Ст120Гр03");
	Р1Прил4Ст120Гр04 = ПоказательПоСтроке("Р1Прил4Ст120Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст120Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст120Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст120Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_153(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 153)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 120 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 120 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст120Гр03 > 0, когда Р1Прил4Ст120Гр04 > 0'.
	
	Р1Прил4Ст120Гр04 = ПоказательПоСтроке("Р1Прил4Ст120Гр04");
	Р1Прил4Ст120Гр03 = ПоказательПоСтроке("Р1Прил4Ст120Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст120Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст120Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст120Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст120Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст120Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_154(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 154)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 140 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 140 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст140Гр04 > 0, когда Р1Прил4Ст140Гр03 > 0'.
	
	Р1Прил4Ст140Гр03 = ПоказательПоСтроке("Р1Прил4Ст140Гр03");
	Р1Прил4Ст140Гр04 = ПоказательПоСтроке("Р1Прил4Ст140Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст140Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст140Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст140Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст140Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст140Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст140Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст140Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_155(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 155)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 140 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 140 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст140Гр03 > 0, когда Р1Прил4Ст140Гр04 > 0'.
	
	Р1Прил4Ст140Гр04 = ПоказательПоСтроке("Р1Прил4Ст140Гр04");
	Р1Прил4Ст140Гр03 = ПоказательПоСтроке("Р1Прил4Ст140Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст140Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст140Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст140Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст140Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст140Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст140Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст140Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_156(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 156)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 160 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 160 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст160Гр04 > 0, когда Р1Прил4Ст160Гр03 > 0'.
	
	Р1Прил4Ст160Гр03 = ПоказательПоСтроке("Р1Прил4Ст160Гр03");
	Р1Прил4Ст160Гр04 = ПоказательПоСтроке("Р1Прил4Ст160Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст160Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст160Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст160Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст160Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст160Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст160Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст160Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_157(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 157)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 160 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 160 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст160Гр03 > 0, когда Р1Прил4Ст160Гр04 > 0'.
	
	Р1Прил4Ст160Гр04 = ПоказательПоСтроке("Р1Прил4Ст160Гр04");
	Р1Прил4Ст160Гр03 = ПоказательПоСтроке("Р1Прил4Ст160Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст160Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст160Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст160Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст160Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст160Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст160Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст160Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_158(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 158)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 170 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 170 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст170Гр04 > 0, когда Р1Прил4Ст170Гр03 > 0'.
	
	Р1Прил4Ст170Гр03 = ПоказательПоСтроке("Р1Прил4Ст170Гр03");
	Р1Прил4Ст170Гр04 = ПоказательПоСтроке("Р1Прил4Ст170Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст170Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст170Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст170Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст170Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст170Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст170Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст170Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_159(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 159)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 170 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 170 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст170Гр03 > 0, когда Р1Прил4Ст170Гр04 > 0'.
	
	Р1Прил4Ст170Гр04 = ПоказательПоСтроке("Р1Прил4Ст170Гр04");
	Р1Прил4Ст170Гр03 = ПоказательПоСтроке("Р1Прил4Ст170Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст170Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст170Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст170Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст170Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст170Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст170Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст170Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_160а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 160а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 180 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 180 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст180Гр03 > 0, когда Р1Прил4Ст180Гр02 > 0'.
	
	Р1Прил4Ст180Гр02 = ПоказательПоСтроке("Р1Прил4Ст180Гр02");
	Р1Прил4Ст180Гр03 = ПоказательПоСтроке("Р1Прил4Ст180Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст180Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст180Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст180Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_160б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 160б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 180 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 180 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст180Гр04 > 0, когда Р1Прил4Ст180Гр02 > 0'.
	
	Р1Прил4Ст180Гр02 = ПоказательПоСтроке("Р1Прил4Ст180Гр02");
	Р1Прил4Ст180Гр04 = ПоказательПоСтроке("Р1Прил4Ст180Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст180Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст180Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст180Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_161(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 161)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 180 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 180 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст180Гр04 > 0, когда Р1Прил4Ст180Гр03 > 0'.
	
	Р1Прил4Ст180Гр03 = ПоказательПоСтроке("Р1Прил4Ст180Гр03");
	Р1Прил4Ст180Гр04 = ПоказательПоСтроке("Р1Прил4Ст180Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст180Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст180Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст180Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_162(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 162)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 180 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 180 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст180Гр03 > 0, когда Р1Прил4Ст180Гр04 > 0'.
	
	Р1Прил4Ст180Гр04 = ПоказательПоСтроке("Р1Прил4Ст180Гр04");
	Р1Прил4Ст180Гр03 = ПоказательПоСтроке("Р1Прил4Ст180Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст180Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст180Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст180Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст180Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст180Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_163а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 163а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 190 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 190 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст190Гр03 > 0, когда Р1Прил4Ст190Гр02 > 0'.
	
	Р1Прил4Ст190Гр02 = ПоказательПоСтроке("Р1Прил4Ст190Гр02");
	Р1Прил4Ст190Гр03 = ПоказательПоСтроке("Р1Прил4Ст190Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст190Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст190Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст190Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_163б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 163б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 190 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 190 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст190Гр04 > 0, когда Р1Прил4Ст190Гр02 > 0'.
	
	Р1Прил4Ст190Гр02 = ПоказательПоСтроке("Р1Прил4Ст190Гр02");
	Р1Прил4Ст190Гр04 = ПоказательПоСтроке("Р1Прил4Ст190Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст190Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст190Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст190Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_164(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 164)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 190 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 190 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст190Гр04 > 0, когда Р1Прил4Ст190Гр03 > 0'.
	
	Р1Прил4Ст190Гр03 = ПоказательПоСтроке("Р1Прил4Ст190Гр03");
	Р1Прил4Ст190Гр04 = ПоказательПоСтроке("Р1Прил4Ст190Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст190Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст190Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст190Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_165(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 165)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 190 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 190 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст190Гр03 > 0, когда Р1Прил4Ст190Гр04 > 0'.
	
	Р1Прил4Ст190Гр04 = ПоказательПоСтроке("Р1Прил4Ст190Гр04");
	Р1Прил4Ст190Гр03 = ПоказательПоСтроке("Р1Прил4Ст190Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст190Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст190Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст190Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст190Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст190Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_166а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 166а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 200 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 200 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст200Гр03 > 0, когда Р1Прил4Ст200Гр02 > 0'.
	
	Р1Прил4Ст200Гр02 = ПоказательПоСтроке("Р1Прил4Ст200Гр02");
	Р1Прил4Ст200Гр03 = ПоказательПоСтроке("Р1Прил4Ст200Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст200Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст200Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст200Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_166б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 166б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 200 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 200 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст200Гр04 > 0, когда Р1Прил4Ст200Гр02 > 0'.
	
	Р1Прил4Ст200Гр02 = ПоказательПоСтроке("Р1Прил4Ст200Гр02");
	Р1Прил4Ст200Гр04 = ПоказательПоСтроке("Р1Прил4Ст200Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст200Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст200Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст200Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_167(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 167)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 200 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 200 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст200Гр04 > 0, когда Р1Прил4Ст200Гр03 > 0'.
	
	Р1Прил4Ст200Гр03 = ПоказательПоСтроке("Р1Прил4Ст200Гр03");
	Р1Прил4Ст200Гр04 = ПоказательПоСтроке("Р1Прил4Ст200Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст200Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст200Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст200Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_168(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 168)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 200 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 200 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст200Гр03 > 0, когда Р1Прил4Ст200Гр04 > 0'.
	
	Р1Прил4Ст200Гр04 = ПоказательПоСтроке("Р1Прил4Ст200Гр04");
	Р1Прил4Ст200Гр03 = ПоказательПоСтроке("Р1Прил4Ст200Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст200Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст200Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст200Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст200Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст200Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_169(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 169)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 220 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 220 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст220Гр04 > 0, когда Р1Прил4Ст220Гр03 > 0'.
	
	Р1Прил4Ст220Гр03 = ПоказательПоСтроке("Р1Прил4Ст220Гр03");
	Р1Прил4Ст220Гр04 = ПоказательПоСтроке("Р1Прил4Ст220Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст220Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст220Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст220Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст220Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст220Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст220Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст220Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_170(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 170)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 220 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 220 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст220Гр03 > 0, когда Р1Прил4Ст220Гр04 > 0'.
	
	Р1Прил4Ст220Гр04 = ПоказательПоСтроке("Р1Прил4Ст220Гр04");
	Р1Прил4Ст220Гр03 = ПоказательПоСтроке("Р1Прил4Ст220Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст220Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст220Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст220Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст220Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст220Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст220Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст220Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_171(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 171)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 230 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 230 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст230Гр04 > 0, когда Р1Прил4Ст230Гр03 > 0'.
	
	Р1Прил4Ст230Гр03 = ПоказательПоСтроке("Р1Прил4Ст230Гр03");
	Р1Прил4Ст230Гр04 = ПоказательПоСтроке("Р1Прил4Ст230Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст230Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст230Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст230Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст230Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст230Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст230Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст230Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_172(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 172)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 250 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 250 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст250Гр04 > 0, когда Р1Прил4Ст250Гр03 > 0'.
	
	Р1Прил4Ст250Гр03 = ПоказательПоСтроке("Р1Прил4Ст250Гр03");
	Р1Прил4Ст250Гр04 = ПоказательПоСтроке("Р1Прил4Ст250Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст250Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст250Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст250Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_173(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 173)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 250 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 250 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст250Гр03 > 0, когда Р1Прил4Ст250Гр04 > 0'.
	
	Р1Прил4Ст250Гр04 = ПоказательПоСтроке("Р1Прил4Ст250Гр04");
	Р1Прил4Ст250Гр03 = ПоказательПоСтроке("Р1Прил4Ст250Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст250Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст250Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст250Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст250Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст250Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_174(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 174)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 260 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 260 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст260Гр04 > 0, когда Р1Прил4Ст260Гр03 > 0'.
	
	Р1Прил4Ст260Гр03 = ПоказательПоСтроке("Р1Прил4Ст260Гр03");
	Р1Прил4Ст260Гр04 = ПоказательПоСтроке("Р1Прил4Ст260Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст260Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст260Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст260Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_175(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 175)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 260 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 260 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст260Гр03 > 0, когда Р1Прил4Ст260Гр04 > 0'.
	
	Р1Прил4Ст260Гр04 = ПоказательПоСтроке("Р1Прил4Ст260Гр04");
	Р1Прил4Ст260Гр03 = ПоказательПоСтроке("Р1Прил4Ст260Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст260Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст260Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст260Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст260Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст260Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_176а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 176а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 270 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 270 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр03 > 0, когда Р1Прил4Ст270Гр02 > 0'.
	
	Р1Прил4Ст270Гр02 = ПоказательПоСтроке("Р1Прил4Ст270Гр02");
	Р1Прил4Ст270Гр03 = ПоказательПоСтроке("Р1Прил4Ст270Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст270Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст270Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_176б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 176б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 270 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 270 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр04 > 0, когда Р1Прил4Ст270Гр02 > 0'.
	
	Р1Прил4Ст270Гр02 = ПоказательПоСтроке("Р1Прил4Ст270Гр02");
	Р1Прил4Ст270Гр04 = ПоказательПоСтроке("Р1Прил4Ст270Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст270Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст270Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_177(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 177)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 270 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 270 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр04 > 0, когда Р1Прил4Ст270Гр03 > 0'.
	
	Р1Прил4Ст270Гр03 = ПоказательПоСтроке("Р1Прил4Ст270Гр03");
	Р1Прил4Ст270Гр04 = ПоказательПоСтроке("Р1Прил4Ст270Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст270Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст270Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_178(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 178)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 270 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 270 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст270Гр03 > 0, когда Р1Прил4Ст270Гр04 > 0'.
	
	Р1Прил4Ст270Гр04 = ПоказательПоСтроке("Р1Прил4Ст270Гр04");
	Р1Прил4Ст270Гр03 = ПоказательПоСтроке("Р1Прил4Ст270Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст270Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст270Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст270Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст270Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст270Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_179а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 179а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 280 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 280 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст280Гр03 > 0, когда Р1Прил4Ст280Гр02 > 0'.
	
	Р1Прил4Ст280Гр02 = ПоказательПоСтроке("Р1Прил4Ст280Гр02");
	Р1Прил4Ст280Гр03 = ПоказательПоСтроке("Р1Прил4Ст280Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст280Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст280Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст280Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_179б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 179б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 280 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 280 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст280Гр04 > 0, когда Р1Прил4Ст280Гр02 > 0'.
	
	Р1Прил4Ст280Гр02 = ПоказательПоСтроке("Р1Прил4Ст280Гр02");
	Р1Прил4Ст280Гр04 = ПоказательПоСтроке("Р1Прил4Ст280Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст280Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст280Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст280Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_180(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 180)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 280 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 280 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст280Гр04 > 0, когда Р1Прил4Ст280Гр03 > 0'.
	
	Р1Прил4Ст280Гр03 = ПоказательПоСтроке("Р1Прил4Ст280Гр03");
	Р1Прил4Ст280Гр04 = ПоказательПоСтроке("Р1Прил4Ст280Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст280Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст280Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст280Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_181(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 181)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 280 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 280 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст280Гр03 > 0, когда Р1Прил4Ст280Гр04 > 0'.
	
	Р1Прил4Ст280Гр04 = ПоказательПоСтроке("Р1Прил4Ст280Гр04");
	Р1Прил4Ст280Гр03 = ПоказательПоСтроке("Р1Прил4Ст280Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст280Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст280Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст280Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст280Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст280Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_182а(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 182а)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 по строке 290 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 290 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст290Гр03 > 0, когда Р1Прил4Ст290Гр02 > 0'.
	
	Р1Прил4Ст290Гр02 = ПоказательПоСтроке("Р1Прил4Ст290Гр02");
	Р1Прил4Ст290Гр03 = ПоказательПоСтроке("Р1Прил4Ст290Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст290Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст290Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст290Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_182б(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 182б)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 по строке 290 Приложения 4 должно быть больше нуля, если значение графы "
		+ "2 строки 290 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст290Гр04 > 0, когда Р1Прил4Ст290Гр02 > 0'.
	
	Р1Прил4Ст290Гр02 = ПоказательПоСтроке("Р1Прил4Ст290Гр02");
	Р1Прил4Ст290Гр04 = ПоказательПоСтроке("Р1Прил4Ст290Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр02);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр02, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст290Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст290Гр02.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст290Гр02.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_183(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 183)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 290 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 290 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст290Гр04 > 0, когда Р1Прил4Ст290Гр03 > 0'.
	
	Р1Прил4Ст290Гр03 = ПоказательПоСтроке("Р1Прил4Ст290Гр03");
	Р1Прил4Ст290Гр04 = ПоказательПоСтроке("Р1Прил4Ст290Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст290Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст290Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст290Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_184(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 184)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 290 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 290 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст290Гр03 > 0, когда Р1Прил4Ст290Гр04 > 0'.
	
	Р1Прил4Ст290Гр04 = ПоказательПоСтроке("Р1Прил4Ст290Гр04");
	Р1Прил4Ст290Гр03 = ПоказательПоСтроке("Р1Прил4Ст290Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст290Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст290Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст290Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст290Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст290Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_185(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 185)'");
	ОписаниеКС     = НСтр("ru='Значение графы 4 строки 300 Приложения 4 должно быть больше нуля, если значение графы 3 "
		+ "строки 300 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст300Гр04 > 0, когда Р1Прил4Ст300Гр03 > 0'.
	
	Р1Прил4Ст300Гр03 = ПоказательПоСтроке("Р1Прил4Ст300Гр03");
	Р1Прил4Ст300Гр04 = ПоказательПоСтроке("Р1Прил4Ст300Гр04");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст300Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст300Гр03, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст300Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст300Гр04, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст300Гр04.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст300Гр03.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст300Гр03.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьКС_186(СтруктураРезультата)
	
	ОбщееЧислоОшибок    = СтруктураРезультата.КоличествоНайденныхОшибок;
	ОбщееЧислоБезОшибок = СтруктураРезультата.КоличествоНайденныхБезОшибок;
	СтруктураОшибок     = СтруктураРезультата.СтруктураОшибок;
	
	ТекстФормулы   = НСтр("ru='Проверка Приложения 4 к Разделу 1 (КС 186)'");
	ОписаниеКС     = НСтр("ru='Значение графы 3 строки 300 Приложения 4 должно быть больше нуля, если значение графы 4 "
		+ "строки 300 Приложения 4 больше нуля'");
	ОписаниеОшибки = НСтр("ru='Арифметическая ошибка'");
	
	// Формула КС кратко: 'Р1Прил4Ст300Гр03 > 0, когда Р1Прил4Ст300Гр04 > 0'.
	
	Р1Прил4Ст300Гр04 = ПоказательПоСтроке("Р1Прил4Ст300Гр04");
	Р1Прил4Ст300Гр03 = ПоказательПоСтроке("Р1Прил4Ст300Гр03");
	
	Раздел1Прил4 = мДанныеОтчета.Раздел1Прил4[0].Данные;
	
	СчетчикФормулДляРасшифровок = СчетчикФормулДляРасшифровок + 1;
	ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст300Гр04);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст300Гр04, "Раздел1Прил4");
	ВставитьЗначениеПоказателя(Раздел1Прил4, Р1Прил4Ст300Гр03);
	ВнестиПоказательВРасшифровку(Р1Прил4Ст300Гр03, "Раздел1Прил4");
	
	КС = ПоказателиКС(Р1Прил4Ст300Гр03.Значение, 0);
	Расшифровка = КС.ЛеваяЧастьСтр + " > " + КС.ПраваяЧастьСтр + ", когда " + Р1Прил4Ст300Гр04.ЗначениеСтр + " > 0";
	
	УсловиеВыполнено = Р1Прил4Ст300Гр04.Значение > 0;
	Если НЕ УсловиеВыполнено ИЛИ (УсловиеВыполнено И КС.ЛеваяЧасть > КС.ПраваяЧасть) Тогда
		ЭтоОшибка = Ложь;
		ОбщееЧислоБезОшибок = ОбщееЧислоБезОшибок + 1;
	Иначе
		ЭтоОшибка = Истина;
		ОбщееЧислоОшибок = ОбщееЧислоОшибок + 1;
	КонецЕсли;
	
	ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок,
		Расшифровка, ЭтоОшибка, ОписаниеОшибки, , );
	
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок",    ОбщееЧислоОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок", ОбщееЧислоБезОшибок);
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////

&НаСервере
Функция СтруктураДанныхДокументаОтчета(ДокументОтчета)
	
	СтруктураДанныхОтчета = Новый Структура;
	
	СохраненнаяСтруктураДанныхОтчета = ДокументОтчета.ДанныеОтчета.Получить();
	
	// Данные обычных разделов.
	Для Каждого Раздел Из СохраненнаяСтруктураДанныхОтчета.ПоказателиОтчета Цикл
		СтруктураДанныхОтчета.Вставить(СтрЗаменить(Раздел.Ключ, "ПолеТабличногоДокумента", ""),
			РегламентированнаяОтчетность.СвернутьДанныеТабличногоПоля(Раздел.Значение));
	КонецЦикла;
	
	// Данные многоуровневых разделов.
	Для Каждого Раздел Из СохраненнаяСтруктураДанныхОтчета.ДанныеМногоуровневыхРазделов Цикл
		СтруктураДанныхОтчета.Вставить(Раздел.Ключ, ТаблицаДанныхДерева(Раздел.Значение));
	КонецЦикла;
	
	Возврат СтруктураДанныхОтчета;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ДеревоВТаблицу(Дерево, Таблица, МнЧ = Ложь, НомСтраницы = Неопределено)
	
	Для Каждого СтрокаДерева Из Дерево.Строки Цикл
		
		Индекс = СтрокаЧГ0(Дерево.Строки.Индекс(СтрокаДерева) + 1);
		
		Если (НомСтраницы = Неопределено)
		 ИЛИ (СтрокаДерева.Уровень() = 0 И НЕ МнЧ) Тогда
			НомСтраницы = Индекс;
		КонецЕсли;
		
		Если ТипЗнч(СтрокаДерева.Данные) = Тип("Структура") Тогда
			Для Каждого Элемент Из СтрокаДерева.Данные Цикл
				НоваяСтрока = Таблица.Добавить();
				НоваяСтрока.Страница = НомСтраницы;
				НоваяСтрока.Имя = Элемент.Ключ;
				НоваяСтрока.Значение = Элемент.Значение;
				НоваяСтрока.Строка = ?(МнЧ, Индекс, "");
			КонецЦикла;
			
			Для Каждого Элемент Из СтрокаДерева.ДанныеМногострочныхЧастей Цикл
				Если ТипЗнч(Элемент.Значение) = Тип("ДеревоЗначений") Тогда
					ДеревоВТаблицу(Элемент.Значение, Таблица, Истина, НомСтраницы);
				Иначе
					НоваяСтрока = Таблица.Добавить();
					НоваяСтрока.Страница = НомСтраницы;
					НоваяСтрока.Имя = Элемент.Ключ;
					НоваяСтрока.Значение = Элемент.Значение;
					НоваяСтрока.Строка = ?(МнЧ, Индекс, "");
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если СтрокаДерева.Строки.Количество() > 0 Тогда
			ДеревоВТаблицу(СтрокаДерева, Таблица, , НомСтраницы);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТаблицаДанныхДерева(ДанныеРаздела)
	
	ТаблицаЗаполнения = ТаблицаДляЗаполнения();
	ДеревоВТаблицу(ДанныеРаздела, ТаблицаЗаполнения);
	
	ТаблицаДанных = ТаблицаДляДанных();
	
	Страница = Неопределено;
	ДанныеСтраницы = Новый Структура;
	
	Для Каждого Элемент Из ТаблицаЗаполнения Цикл
		
		Если Страница <> Элемент.Страница Тогда
			
			Страница = Элемент.Страница;
			ДанныеСтраницы = Новый Структура;
			
			НоваяСтрока = ТаблицаДанных.Добавить();
			НоваяСтрока.НомерСтраницы = Страница;
			НоваяСтрока.Данные = ДанныеСтраницы;
			
		КонецЕсли;
		
		ДанныеСтраницы.Вставить(Элемент.Имя + ?(Элемент.Строка = "", "", "_" + Элемент.Строка), Элемент.Значение);
		
	КонецЦикла;
	
	Возврат ТаблицаДанных;
	
КонецФункции

&НаСервереБезКонтекста
Функция ТаблицаДляДанных()
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("НомерСтраницы");
	Таблица.Колонки.Добавить("Данные");
	
	Возврат Таблица;
	
КонецФункции

&НаСервереБезКонтекста
Функция ТаблицаДляЗаполнения()
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Страница");
	Таблица.Колонки.Добавить("Имя");
	Таблица.Колонки.Добавить("Значение");
	Таблица.Колонки.Добавить("Строка");
	
	Возврат Таблица;
	
КонецФункции

&НаСервереБезКонтекста
Функция ТаблицаГрупп(СписокДопКолонок)
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Ключ", Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("СчетчикФормул", Новый ОписаниеТипов("Число"));
	
	Если ЗначениеЗаполнено(СписокДопКолонок) Тогда
		КолонкиТаблицы = СтрРазделить(СписокДопКолонок, ",");
		Для Каждого КолонкаТаблицы Из КолонкиТаблицы Цикл
			Таблица.Колонки.Добавить(КолонкаТаблицы, Новый ОписаниеТипов("Число"));
			Таблица.Колонки.Добавить(КолонкаТаблицы + "Стр", Новый ОписаниеТипов("Строка"));
		КонецЦикла;
	КонецЕсли;
	
	Таблица.Индексы.Добавить("Ключ");
	
	Возврат Таблица;
	
КонецФункции

//////////////////////////////////////////////////////////////////////////////////

&НаСервере
Функция ПоказательПоСтроке(УсловныйКодПоказателя)
	
	Результат = Новый Структура;
	Результат.Вставить("Имя");
	Результат.Вставить("Представление");
	
	Если УсловныйКодПоказателя = "ТитульныйСт001" Тогда
		Результат.Вставить("Имя", "ДатаПодписи");
		Результат.Вставить("Представление", НСтр("ru='Титульный лист (ст. 001) ""Дата представления Расчета""'"));
	
	ИначеЕсли УсловныйКодПоказателя = "ТитульныйКодРП" Тогда
		Результат.Вставить("Имя", "Период");
		Результат.Вставить("Представление", НСтр("ru='Титульный лист ""Расчетный (отчетный) период (код)""'"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст20Гр01_6НДФЛ" Тогда
		Результат.Вставить("Имя", "П000010002001_%1");
		Результат.Вставить("Представление", Нстр("ru='Графа 1 строка 020 Раздела 1 отчета 6-НДФЛ'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст25Гр01_6НДФЛ" Тогда
		Результат.Вставить("Имя", "П000010002501_%1");
		Результат.Вставить("Представление", Нстр("ru='Графа 1 строка 025 Раздела 1 отчета 6-НДФЛ'"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П000010002001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст25Гр01" Тогда
		Результат.Вставить("Имя", "П000010002501");
		Результат.Вставить("Представление", НСтр("ru=''"));
		Результат.Вставить("ИзменяемаяРазмерность", Истина);
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П000010003001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст30Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000010003001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 030 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст31Гр01" Тогда
		Результат.Вставить("Имя", "П000010003101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст32Гр01" Тогда
		Результат.Вставить("Имя", "П000010003201");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст33Гр01" Тогда
		Результат.Вставить("Имя", "П000010003301");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П000010005001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст50Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000010005001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 050 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст51Гр01" Тогда
		Результат.Вставить("Имя", "П000010005101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст52Гр01" Тогда
		Результат.Вставить("Имя", "П000010005201");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст53Гр01" Тогда
		Результат.Вставить("Имя", "П000010005301");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст110Гр01" Тогда
		Результат.Вставить("Имя", "П000010011001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст110Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000010011001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 110 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст111Гр01" Тогда
		Результат.Вставить("Имя", "П000010011101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст112Гр01" Тогда
		Результат.Вставить("Имя", "П000010011201");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст113Гр01" Тогда
		Результат.Вставить("Имя", "П000010011301");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст120Гр01" Тогда
		Результат.Вставить("Имя", "П000010012001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст120Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000010012001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 120 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст121Гр01" Тогда
		Результат.Вставить("Имя", "П000010012101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст122Гр01" Тогда
		Результат.Вставить("Имя", "П000010012201");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Ст123Гр01" Тогда
		Результат.Вставить("Имя", "П000010012301");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ1060Гр01" Тогда
		Результат.Вставить("Имя", "П00001М106001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ1060Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00001М106001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 060 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ1070Гр01" Тогда
		Результат.Вставить("Имя", "П00001М107001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ1070Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00001М107001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 070 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ1071Гр01" Тогда
		Результат.Вставить("Имя", "П00001М107101_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ1072Гр01" Тогда
		Результат.Вставить("Имя", "П00001М107201_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ1073Гр01" Тогда
		Результат.Вставить("Имя", "П00001М107301_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ2080Гр01" Тогда
		Результат.Вставить("Имя", "П00001М208001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ2080Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00001М208001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 080 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ2090Гр01" Тогда
		Результат.Вставить("Имя", "П00001М209001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ2090Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П00001М209001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 090 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ2091Гр01" Тогда
		Результат.Вставить("Имя", "П00001М209101_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ2092Гр01" Тогда
		Результат.Вставить("Имя", "П00001М209201_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1СтМ2093Гр01" Тогда
		Результат.Вставить("Имя", "П00001М209301_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р2Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П000020003001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р2Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П000020005001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Пр1Ст1Гр01" Тогда
		Результат.Вставить("Имя", "П000110000101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Пр1Ст1Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000110000101");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 001 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст1Гр01" Тогда
		Результат.Вставить("Имя", "П000120000101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст1Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120000101");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 001 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П000120001001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст10Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120001001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 010 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П000120001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П000120001003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П000120001004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст10Гр05" Тогда
		Результат.Вставить("Имя", "П000120001005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П000120002001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст20Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120002001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 020 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П000120002002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П000120002003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст20Гр04" Тогда
		Результат.Вставить("Имя", "П000120002004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст20Гр05" Тогда
		Результат.Вставить("Имя", "П000120002005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П000120003001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст30Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120003001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 030 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П000120003002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П000120003003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст30Гр04" Тогда
		Результат.Вставить("Имя", "П000120003004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст30Гр05" Тогда
		Результат.Вставить("Имя", "П000120003005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст40Гр01" Тогда
		Результат.Вставить("Имя", "П000120004001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст40Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120004001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 040 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П000120004002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П000120004003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст40Гр04" Тогда
		Результат.Вставить("Имя", "П000120004004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст40Гр05" Тогда
		Результат.Вставить("Имя", "П000120004005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П000120005001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст50Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120005001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 050 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П000120005002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П000120005003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П000120005004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст50Гр05" Тогда
		Результат.Вставить("Имя", "П000120005005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст51Гр01" Тогда
		Результат.Вставить("Имя", "П000120005101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст51Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120005101");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 051 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст51Гр02" Тогда
		Результат.Вставить("Имя", "П000120005102");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст51Гр03" Тогда
		Результат.Вставить("Имя", "П000120005103");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст51Гр04" Тогда
		Результат.Вставить("Имя", "П000120005104");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст51Гр05" Тогда
		Результат.Вставить("Имя", "П000120005105");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст52Гр01" Тогда
		Результат.Вставить("Имя", "П000120005201");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст52Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120005201");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 052 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст52Гр02" Тогда
		Результат.Вставить("Имя", "П000120005202");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст52Гр03" Тогда
		Результат.Вставить("Имя", "П000120005203");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст52Гр04" Тогда
		Результат.Вставить("Имя", "П000120005204");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст52Гр05" Тогда
		Результат.Вставить("Имя", "П000120005205");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст53Гр01" Тогда
		Результат.Вставить("Имя", "П000120005301");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст53Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120005301");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 053 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст53Гр02" Тогда
		Результат.Вставить("Имя", "П000120005302");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст53Гр03" Тогда
		Результат.Вставить("Имя", "П000120005303");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст53Гр04" Тогда
		Результат.Вставить("Имя", "П000120005304");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст53Гр05" Тогда
		Результат.Вставить("Имя", "П000120005305");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст54Гр01" Тогда
		Результат.Вставить("Имя", "П000120005401");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст54Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120005401");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 054 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст54Гр02" Тогда
		Результат.Вставить("Имя", "П000120005402");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст54Гр03" Тогда
		Результат.Вставить("Имя", "П000120005403");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст54Гр04" Тогда
		Результат.Вставить("Имя", "П000120005404");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст54Гр05" Тогда
		Результат.Вставить("Имя", "П000120005405");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст60Гр01" Тогда
		Результат.Вставить("Имя", "П000120006001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст60Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120006001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 060 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст60Гр02" Тогда
		Результат.Вставить("Имя", "П000120006002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст60Гр03" Тогда
		Результат.Вставить("Имя", "П000120006003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст60Гр04" Тогда
		Результат.Вставить("Имя", "П000120006004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст60Гр05" Тогда
		Результат.Вставить("Имя", "П000120006005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст70Гр01" Тогда
		Результат.Вставить("Имя", "П000120007001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст70Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120007001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 070 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст70Гр02" Тогда
		Результат.Вставить("Имя", "П000120007002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст70Гр03" Тогда
		Результат.Вставить("Имя", "П000120007003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст70Гр04" Тогда
		Результат.Вставить("Имя", "П000120007004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст70Гр05" Тогда
		Результат.Вставить("Имя", "П000120007005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст80Гр01" Тогда
		Результат.Вставить("Имя", "П000120008001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст80Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000120008001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 080 Приложения 2 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст80Гр02" Тогда
		Результат.Вставить("Имя", "П000120008002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст80Гр03" Тогда
		Результат.Вставить("Имя", "П000120008003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст80Гр04" Тогда
		Результат.Вставить("Имя", "П000120008004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст80Гр05" Тогда
		Результат.Вставить("Имя", "П000120008005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст90Гр01" Тогда
		Результат.Вставить("Имя", "П000120009001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст90Гр02" Тогда
		Результат.Вставить("Имя", "П000120009002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст90Гр05" Тогда
		Результат.Вставить("Имя", "П000120009005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст90Гр06" Тогда
		Результат.Вставить("Имя", "П000120009006");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст90Гр07" Тогда
		Результат.Вставить("Имя", "П000120009007");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст90Гр08" Тогда
		Результат.Вставить("Имя", "П000120009008");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст90Гр09" Тогда
		Результат.Вставить("Имя", "П000120009009");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил2Ст90Гр10" Тогда
		Результат.Вставить("Имя", "П000120009010");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П000130001001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П000130001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П000130001003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П000130001004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст11Гр01" Тогда
		Результат.Вставить("Имя", "П000130001101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст11Гр02" Тогда
		Результат.Вставить("Имя", "П000130001102");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст11Гр03" Тогда
		Результат.Вставить("Имя", "П000130001103");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст11Гр04" Тогда
		Результат.Вставить("Имя", "П000130001104");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П000130002001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П000130002002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П000130002003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст21Гр01" Тогда
		Результат.Вставить("Имя", "П000130002101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст21Гр02" Тогда
		Результат.Вставить("Имя", "П000130002102");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст21Гр03" Тогда
		Результат.Вставить("Имя", "П000130002103");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П000130003001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П000130003002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П000130003003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст30Гр04" Тогда
		Результат.Вставить("Имя", "П000130003004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст31Гр01" Тогда
		Результат.Вставить("Имя", "П000130003101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст31Гр02" Тогда
		Результат.Вставить("Имя", "П000130003102");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст31Гр03" Тогда
		Результат.Вставить("Имя", "П000130003103");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст31Гр04" Тогда
		Результат.Вставить("Имя", "П000130003104");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П000130004002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П000130004003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П000130005002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П000130005003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст60Гр01" Тогда
		Результат.Вставить("Имя", "П000130006001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст60Гр02" Тогда
		Результат.Вставить("Имя", "П000130006002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст60Гр03" Тогда
		Результат.Вставить("Имя", "П000130006003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст60Гр04" Тогда
		Результат.Вставить("Имя", "П000130006004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст61Гр01" Тогда
		Результат.Вставить("Имя", "П000130006101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст61Гр02" Тогда
		Результат.Вставить("Имя", "П000130006102");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст61Гр03" Тогда
		Результат.Вставить("Имя", "П000130006103");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст61Гр04" Тогда
		Результат.Вставить("Имя", "П000130006104");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст62Гр01" Тогда
		Результат.Вставить("Имя", "П000130006201");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст62Гр02" Тогда
		Результат.Вставить("Имя", "П000130006202");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст62Гр03" Тогда
		Результат.Вставить("Имя", "П000130006203");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст62Гр04" Тогда
		Результат.Вставить("Имя", "П000130006204");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст70Гр02" Тогда
		Результат.Вставить("Имя", "П000130007002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст70Гр03" Тогда
		Результат.Вставить("Имя", "П000130007003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст70Гр04" Тогда
		Результат.Вставить("Имя", "П000130007004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст80Гр03" Тогда
		Результат.Вставить("Имя", "П000130008003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст80Гр04" Тогда
		Результат.Вставить("Имя", "П000130008004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст90Гр01" Тогда
		Результат.Вставить("Имя", "П000130009001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст90Гр02" Тогда
		Результат.Вставить("Имя", "П000130009002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст90Гр03" Тогда
		Результат.Вставить("Имя", "П000130009003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст100Гр03" Тогда
		Результат.Вставить("Имя", "П000130010003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил3Ст100Гр04" Тогда
		Результат.Вставить("Имя", "П000130010004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П000140001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П000140001004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П000140002002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П000140002003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст20Гр04" Тогда
		Результат.Вставить("Имя", "П000140002004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П000140003002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П000140003003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст30Гр04" Тогда
		Результат.Вставить("Имя", "П000140003004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П000140004002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П000140004003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст40Гр04" Тогда
		Результат.Вставить("Имя", "П000140004004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П000140005002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П000140005003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П000140005004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст60Гр02" Тогда
		Результат.Вставить("Имя", "П000140006002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст60Гр03" Тогда
		Результат.Вставить("Имя", "П000140006003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст60Гр04" Тогда
		Результат.Вставить("Имя", "П000140006004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст70Гр02" Тогда
		Результат.Вставить("Имя", "П000140007002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст70Гр04" Тогда
		Результат.Вставить("Имя", "П000140007004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст80Гр02" Тогда
		Результат.Вставить("Имя", "П000140008002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст80Гр03" Тогда
		Результат.Вставить("Имя", "П000140008003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст80Гр04" Тогда
		Результат.Вставить("Имя", "П000140008004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст90Гр02" Тогда
		Результат.Вставить("Имя", "П000140009002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст90Гр03" Тогда
		Результат.Вставить("Имя", "П000140009003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст90Гр04" Тогда
		Результат.Вставить("Имя", "П000140009004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст100Гр02" Тогда
		Результат.Вставить("Имя", "П000140010002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст100Гр03" Тогда
		Результат.Вставить("Имя", "П000140010003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст100Гр04" Тогда
		Результат.Вставить("Имя", "П000140010004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст110Гр02" Тогда
		Результат.Вставить("Имя", "П000140011002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст110Гр03" Тогда
		Результат.Вставить("Имя", "П000140011003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст110Гр04" Тогда
		Результат.Вставить("Имя", "П000140011004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст120Гр02" Тогда
		Результат.Вставить("Имя", "П000140012002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст120Гр03" Тогда
		Результат.Вставить("Имя", "П000140012003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст120Гр04" Тогда
		Результат.Вставить("Имя", "П000140012004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст130Гр02" Тогда
		Результат.Вставить("Имя", "П000140013002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст130Гр04" Тогда
		Результат.Вставить("Имя", "П000140013004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст140Гр02" Тогда
		Результат.Вставить("Имя", "П000140014002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст140Гр03" Тогда
		Результат.Вставить("Имя", "П000140014003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст140Гр04" Тогда
		Результат.Вставить("Имя", "П000140014004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст150Гр02" Тогда
		Результат.Вставить("Имя", "П000140015002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст150Гр04" Тогда
		Результат.Вставить("Имя", "П000140015004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст160Гр02" Тогда
		Результат.Вставить("Имя", "П000140016002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст160Гр03" Тогда
		Результат.Вставить("Имя", "П000140016003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст160Гр04" Тогда
		Результат.Вставить("Имя", "П000140016004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст170Гр02" Тогда
		Результат.Вставить("Имя", "П000140017002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст170Гр03" Тогда
		Результат.Вставить("Имя", "П000140017003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст170Гр04" Тогда
		Результат.Вставить("Имя", "П000140017004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст180Гр02" Тогда
		Результат.Вставить("Имя", "П000140018002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст180Гр03" Тогда
		Результат.Вставить("Имя", "П000140018003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст180Гр04" Тогда
		Результат.Вставить("Имя", "П000140018004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст190Гр02" Тогда
		Результат.Вставить("Имя", "П000140019002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст190Гр03" Тогда
		Результат.Вставить("Имя", "П000140019003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст190Гр04" Тогда
		Результат.Вставить("Имя", "П000140019004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст200Гр02" Тогда
		Результат.Вставить("Имя", "П000140020002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст200Гр03" Тогда
		Результат.Вставить("Имя", "П000140020003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст200Гр04" Тогда
		Результат.Вставить("Имя", "П000140020004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст210Гр02" Тогда
		Результат.Вставить("Имя", "П000140021002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст210Гр04" Тогда
		Результат.Вставить("Имя", "П000140021004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст220Гр02" Тогда
		Результат.Вставить("Имя", "П000140022002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст220Гр03" Тогда
		Результат.Вставить("Имя", "П000140022003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст220Гр04" Тогда
		Результат.Вставить("Имя", "П000140022004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст230Гр02" Тогда
		Результат.Вставить("Имя", "П000140023002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст230Гр03" Тогда
		Результат.Вставить("Имя", "П000140023003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст230Гр04" Тогда
		Результат.Вставить("Имя", "П000140023004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст240Гр02" Тогда
		Результат.Вставить("Имя", "П000140024002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст240Гр04" Тогда
		Результат.Вставить("Имя", "П000140024004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст250Гр02" Тогда
		Результат.Вставить("Имя", "П000140025002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст250Гр03" Тогда
		Результат.Вставить("Имя", "П000140025003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст250Гр04" Тогда
		Результат.Вставить("Имя", "П000140025004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст260Гр02" Тогда
		Результат.Вставить("Имя", "П000140026002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст260Гр03" Тогда
		Результат.Вставить("Имя", "П000140026003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст260Гр04" Тогда
		Результат.Вставить("Имя", "П000140026004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст270Гр02" Тогда
		Результат.Вставить("Имя", "П000140027002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст270Гр03" Тогда
		Результат.Вставить("Имя", "П000140027003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст270Гр04" Тогда
		Результат.Вставить("Имя", "П000140027004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст280Гр02" Тогда
		Результат.Вставить("Имя", "П000140028002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст280Гр03" Тогда
		Результат.Вставить("Имя", "П000140028003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст280Гр04" Тогда
		Результат.Вставить("Имя", "П000140028004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст290Гр02" Тогда
		Результат.Вставить("Имя", "П000140029002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст290Гр03" Тогда
		Результат.Вставить("Имя", "П000140029003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст290Гр04" Тогда
		Результат.Вставить("Имя", "П000140029004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст300Гр03" Тогда
		Результат.Вставить("Имя", "П000140030003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст300Гр04" Тогда
		Результат.Вставить("Имя", "П000140030004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил4Ст310Гр04" Тогда
		Результат.Вставить("Имя", "П000140031004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П000150001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П000150001003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П000150002002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П000150002003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П000150003002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П000150003003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П000150004002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П000150004003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст60Гр02" Тогда
		Результат.Вставить("Имя", "П000160006002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст70Гр02" Тогда
		Результат.Вставить("Имя", "П000160007002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил5Ст80Гр02" Тогда
		Результат.Вставить("Имя", "П000160008002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П000170001001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П000170001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П000170002001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П000170002002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П000170003001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П000170003002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст40Гр01" Тогда
		Результат.Вставить("Имя", "П000170004001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П000170004002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П000170005001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил7Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П000170005002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П000180001001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст10Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000180001001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 010 Приложения 8 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П000180001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П000180001003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П000180001004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст10Гр05" Тогда
		Результат.Вставить("Имя", "П000180001005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст60Гр01" Тогда
		Результат.Вставить("Имя", "П00018М106001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст60Гр02" Тогда
		Результат.Вставить("Имя", "П00018М106002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст60Гр03" Тогда
		Результат.Вставить("Имя", "П00018М106003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст60Гр04" Тогда
		Результат.Вставить("Имя", "П00018М106004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил8Ст60Гр05" Тогда
		Результат.Вставить("Имя", "П00018М106005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П000190001001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст10Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П000190001001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 010 Приложения 9 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П000190001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П000190001003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П000190001004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст10Гр05" Тогда
		Результат.Вставить("Имя", "П000190001005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст80Гр01" Тогда
		Результат.Вставить("Имя", "П00019М108001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст80Гр02" Тогда
		Результат.Вставить("Имя", "П00019М108002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст80Гр03" Тогда
		Результат.Вставить("Имя", "П00019М108003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст80Гр04" Тогда
		Результат.Вставить("Имя", "П00019М108004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил9Ст80Гр05" Тогда
		Результат.Вставить("Имя", "П00019М108005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р2Пр1Ст90Гр01" Тогда
		Результат.Вставить("Имя", "П00021М109001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р2Пр1Ст90Гр02" Тогда
		Результат.Вставить("Имя", "П00021М109002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд31Ст160Гр01" Тогда
		Результат.Вставить("Имя", "П000310016001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд31Ст170Гр01" Тогда
		Результат.Вставить("Имя", "П000310017001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд31Ст180Гр01" Тогда
		Результат.Вставить("Имя", "П000310018001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П001100001001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст10Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П001100001001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 010 Приложения 10 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П001100001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П001100001003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П001100001004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст10Гр05" Тогда
		Результат.Вставить("Имя", "П001100001005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст100Гр01" Тогда
		Результат.Вставить("Имя", "П00110М110001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст100Гр02" Тогда
		Результат.Вставить("Имя", "П00110М110002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст100Гр03" Тогда
		Результат.Вставить("Имя", "П00110М110003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст100Гр04" Тогда
		Результат.Вставить("Имя", "П00110М110004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р1Прил10Ст100Гр05" Тогда
		Результат.Вставить("Имя", "П00110М110005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321Ст250Гр01" Тогда
		Результат.Вставить("Имя", "П003210025001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321Ст250Гр02" Тогда
		Результат.Вставить("Имя", "П003210025002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321Ст250Гр02ПРП" Тогда
		Результат.Вставить("Имя", "П003210025002");
		Результат.Вставить("Представление", НСтр("ru='Графа 2 строка 250 Раздела 3 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321Ст250Гр03" Тогда
		Результат.Вставить("Имя", "П003210025003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321Ст250Гр04" Тогда
		Результат.Вставить("Имя", "П003210025004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321СтМ1190Гр01" Тогда
		Результат.Вставить("Имя", "П00321М119001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321СтМ1210Гр01" Тогда
		Результат.Вставить("Имя", "П00321М121001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321СтМ1220Гр01" Тогда
		Результат.Вставить("Имя", "П00321М122001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321СтМ1230Гр01" Тогда
		Результат.Вставить("Имя", "П00321М123001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд321СтМ1240Гр01" Тогда
		Результат.Вставить("Имя", "П00321М124001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд322Ст300Гр01" Тогда
		Результат.Вставить("Имя", "П003220030001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд322Ст300Гр02" Тогда
		Результат.Вставить("Имя", "П003220030002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд322Ст260Гр01" Тогда
		Результат.Вставить("Имя", "П00322М126001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд322Ст280Гр01" Тогда
		Результат.Вставить("Имя", "П00322М128001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд322Ст290Гр01" Тогда
		Результат.Вставить("Имя", "П00322М129001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Ст61Гр03" Тогда
		Результат.Вставить("Имя", "П011110006103");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Ст61Гр04" Тогда
		Результат.Вставить("Имя", "П011110006104");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Ст61Гр05" Тогда
		Результат.Вставить("Имя", "П011110006105");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Пр131Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П11131М105003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Пр132Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П11132М105003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Пр131Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П11131М105004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Пр132Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П11132М105004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Пр131Ст50Гр05" Тогда
		Результат.Вставить("Имя", "П11131М105005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р1П1Пр132Ст50Гр05" Тогда
		Результат.Вставить("Имя", "П11132М105005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П011110001001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст10Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110001001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 010 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П011110001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П011110001003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П011110001004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст10Гр05" Тогда
		Результат.Вставить("Имя", "П011110001005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П011110002001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст20Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110002001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 020 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П011110002002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П011110002003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст20Гр04" Тогда
		Результат.Вставить("Имя", "П011110002004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст20Гр05" Тогда
		Результат.Вставить("Имя", "П011110002005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст21Гр01" Тогда
		Результат.Вставить("Имя", "П011110002101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст21Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110002101");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 021 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст21Гр02" Тогда
		Результат.Вставить("Имя", "П011110002102");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст21Гр03" Тогда
		Результат.Вставить("Имя", "П011110002103");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст21Гр04" Тогда
		Результат.Вставить("Имя", "П011110002104");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст21Гр05" Тогда
		Результат.Вставить("Имя", "П011110002105");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П011110003001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст30Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110003001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 030 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П011110003002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П011110003003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст30Гр04" Тогда
		Результат.Вставить("Имя", "П011110003004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст30Гр05" Тогда
		Результат.Вставить("Имя", "П011110003005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст40Гр01" Тогда
		Результат.Вставить("Имя", "П011110004001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст40Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110004001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 040 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П011110004002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П011110004003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст40Гр04" Тогда
		Результат.Вставить("Имя", "П011110004004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст40Гр05" Тогда
		Результат.Вставить("Имя", "П011110004005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П011110005001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст50Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110005001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 050 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П011110005002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П011110005003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П011110005004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст50Гр05" Тогда
		Результат.Вставить("Имя", "П011110005005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст51Гр01" Тогда
		Результат.Вставить("Имя", "П011110005101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст51Гр02" Тогда
		Результат.Вставить("Имя", "П011110005102");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст51Гр03" Тогда
		Результат.Вставить("Имя", "П011110005103");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст51Гр04" Тогда
		Результат.Вставить("Имя", "П011110005104");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст51Гр05" Тогда
		Результат.Вставить("Имя", "П011110005105");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст60Гр01" Тогда
		Результат.Вставить("Имя", "П011110006001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст60Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110006001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 060 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст60Гр02" Тогда
		Результат.Вставить("Имя", "П011110006002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст60Гр03" Тогда
		Результат.Вставить("Имя", "П011110006003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст60Гр04" Тогда
		Результат.Вставить("Имя", "П011110006004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст60Гр05" Тогда
		Результат.Вставить("Имя", "П011110006005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст61Гр01" Тогда
		Результат.Вставить("Имя", "П011110006101");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст61Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110006101");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 061 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст61Гр02" Тогда
		Результат.Вставить("Имя", "П011110006102");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст61Гр03" Тогда
		Результат.Вставить("Имя", "П011110006103");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст61Гр04" Тогда
		Результат.Вставить("Имя", "П011110006104");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст61Гр05" Тогда
		Результат.Вставить("Имя", "П011110006105");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст62Гр01" Тогда
		Результат.Вставить("Имя", "П011110006201");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст62Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011110006201");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 062 Подраздела 1.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст62Гр02" Тогда
		Результат.Вставить("Имя", "П011110006202");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст62Гр03" Тогда
		Результат.Вставить("Имя", "П011110006203");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст62Гр04" Тогда
		Результат.Вставить("Имя", "П011110006204");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд11Пр1Ст62Гр05" Тогда
		Результат.Вставить("Имя", "П011110006205");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П011120001001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст10Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011120001001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 010 Подраздела 1.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П011120001002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П011120001003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П011120001004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст10Гр05" Тогда
		Результат.Вставить("Имя", "П011120001005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П011120002001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст20Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011120002001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 020 Подраздела 1.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П011120002002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П011120002003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст20Гр04" Тогда
		Результат.Вставить("Имя", "П011120002004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст20Гр05" Тогда
		Результат.Вставить("Имя", "П011120002005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П011120003001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст30Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011120003001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 030 Подраздела 1.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П011120003002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П011120003003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст30Гр04" Тогда
		Результат.Вставить("Имя", "П011120003004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст30Гр05" Тогда
		Результат.Вставить("Имя", "П011120003005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст40Гр01" Тогда
		Результат.Вставить("Имя", "П011120004001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст40Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011120004001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 040 Подраздела 1.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П011120004002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П011120004003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст40Гр04" Тогда
		Результат.Вставить("Имя", "П011120004004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст40Гр05" Тогда
		Результат.Вставить("Имя", "П011120004005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П011120005001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П011120005002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П011120005003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П011120005004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст50Гр05" Тогда
		Результат.Вставить("Имя", "П011120005005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст60Гр01" Тогда
		Результат.Вставить("Имя", "П011120006001");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст60Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П011120006001");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 060 Подраздела 1.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст60Гр02" Тогда
		Результат.Вставить("Имя", "П011120006002");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст60Гр03" Тогда
		Результат.Вставить("Имя", "П011120006003");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст60Гр04" Тогда
		Результат.Вставить("Имя", "П011120006004");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд12Пр1Ст60Гр05" Тогда
		Результат.Вставить("Имя", "П011120006005");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст1Гр01" Тогда
		Результат.Вставить("Имя", "П01114М100101_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст1Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П01114М100101_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 001 Подраздела 1.4 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П01114М102001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П01114М102002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П01114М102003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст20Гр04" Тогда
		Результат.Вставить("Имя", "П01114М102004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст20Гр05" Тогда
		Результат.Вставить("Имя", "П01114М102005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П01114М103001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст30Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П01114М103001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 030 Подраздела 1.4 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П01114М103002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П01114М103003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст30Гр04" Тогда
		Результат.Вставить("Имя", "П01114М103004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст30Гр05" Тогда
		Результат.Вставить("Имя", "П01114М103005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст40Гр01" Тогда
		Результат.Вставить("Имя", "П01114М104001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П01114М104002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П01114М104003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст40Гр04" Тогда
		Результат.Вставить("Имя", "П01114М104004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст40Гр05" Тогда
		Результат.Вставить("Имя", "П01114М104005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П01114М105001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст50Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П01114М105001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 050 Подраздела 1.4 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П01114М105002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П01114М105003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П01114М105004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд14Пр1Ст50Гр05" Тогда
		Результат.Вставить("Имя", "П01114М105005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст1Гр01" Тогда
		Результат.Вставить("Имя", "П11131М100101_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст1Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11131М100101_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 001 Подраздела 1.3.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П11131М101001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст10Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11131М101001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 010 Подраздела 1.3.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П11131М101002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П11131М101003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П11131М101004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст10Гр05" Тогда
		Результат.Вставить("Имя", "П11131М101005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П11131М102001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст20Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11131М102001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 020 Подраздела 1.3.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П11131М102002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П11131М102003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст20Гр04" Тогда
		Результат.Вставить("Имя", "П11131М102004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст20Гр05" Тогда
		Результат.Вставить("Имя", "П11131М102005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П11131М103001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст30Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11131М103001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 030 Подраздела 1.3.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П11131М103002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П11131М103003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст30Гр04" Тогда
		Результат.Вставить("Имя", "П11131М103004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст30Гр05" Тогда
		Результат.Вставить("Имя", "П11131М103005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст40Гр01" Тогда
		Результат.Вставить("Имя", "П11131М104001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П11131М104002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П11131М104003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст40Гр04" Тогда
		Результат.Вставить("Имя", "П11131М104004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст40Гр05" Тогда
		Результат.Вставить("Имя", "П11131М104005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П11131М105001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст50Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11131М105001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 050 Подраздела 1.3.1 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П11131М105002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П11131М105003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П11131М105004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд131Пр1Ст50Гр05" Тогда
		Результат.Вставить("Имя", "П11131М105005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст1Гр01" Тогда
		Результат.Вставить("Имя", "П11132М100101_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст1Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11132М100101_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 001 Подраздела 1.3.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст2Гр01" Тогда
		Результат.Вставить("Имя", "П11132М100201_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст2Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11132М100201_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 002 Подраздела 1.3.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст3Гр01" Тогда
		Результат.Вставить("Имя", "П11132М100301_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст3Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11132М100301_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 003 Подраздела 1.3.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст10Гр01" Тогда
		Результат.Вставить("Имя", "П11132М101001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст10Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11132М101001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 010 Подраздела 1.3.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст10Гр02" Тогда
		Результат.Вставить("Имя", "П11132М101002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст10Гр03" Тогда
		Результат.Вставить("Имя", "П11132М101003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст10Гр04" Тогда
		Результат.Вставить("Имя", "П11132М101004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст10Гр05" Тогда
		Результат.Вставить("Имя", "П11132М101005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст20Гр01" Тогда
		Результат.Вставить("Имя", "П11132М102001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст20Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11132М102001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 020 Подраздела 1.3.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст20Гр02" Тогда
		Результат.Вставить("Имя", "П11132М102002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст20Гр03" Тогда
		Результат.Вставить("Имя", "П11132М102003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст20Гр04" Тогда
		Результат.Вставить("Имя", "П11132М102004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст20Гр05" Тогда
		Результат.Вставить("Имя", "П11132М102005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст30Гр01" Тогда
		Результат.Вставить("Имя", "П11132М103001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст30Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11132М103001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 030 Подраздела 1.3.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст30Гр02" Тогда
		Результат.Вставить("Имя", "П11132М103002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст30Гр03" Тогда
		Результат.Вставить("Имя", "П11132М103003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст30Гр04" Тогда
		Результат.Вставить("Имя", "П11132М103004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст30Гр05" Тогда
		Результат.Вставить("Имя", "П11132М103005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст40Гр01" Тогда
		Результат.Вставить("Имя", "П11132М104001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст40Гр02" Тогда
		Результат.Вставить("Имя", "П11132М104002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст40Гр03" Тогда
		Результат.Вставить("Имя", "П11132М104003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст40Гр04" Тогда
		Результат.Вставить("Имя", "П11132М104004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст40Гр05" Тогда
		Результат.Вставить("Имя", "П11132М104005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст50Гр01" Тогда
		Результат.Вставить("Имя", "П11132М105001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст50Гр01ПРП" Тогда
		Результат.Вставить("Имя", "П11132М105001_%1");
		Результат.Вставить("Представление", НСтр("ru='Графа 1 строка 050 Подраздела 1.3.2 Приложения 1 Раздела 1 предыдущего расчетного периода'"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст50Гр02" Тогда
		Результат.Вставить("Имя", "П11132М105002_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст50Гр03" Тогда
		Результат.Вставить("Имя", "П11132М105003_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст50Гр04" Тогда
		Результат.Вставить("Имя", "П11132М105004_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Пд132Пр1Ст50Гр05" Тогда
		Результат.Вставить("Имя", "П11132М105005_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р3Ст240Гр01" Тогда
		Результат.Вставить("Имя", "П00321М124001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
	
	ИначеЕсли УсловныйКодПоказателя = "Р3Ст190Гр01" Тогда
		Результат.Вставить("Имя", "П00321М119001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р3Ст290Гр01" Тогда
		Результат.Вставить("Имя", "П00322М129001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	ИначеЕсли УсловныйКодПоказателя = "Р3Ст260Гр01" Тогда
		Результат.Вставить("Имя", "П00322М126001_%1");
		Результат.Вставить("Представление", НСтр("ru=''"));
		
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр(
		"ru='Не найден показатель соответствующий условному коду: """ + УсловныйКодПоказателя + """'");
		Сообщение.Сообщить();
		
		Возврат Результат;
		
	КонецЕсли;
	
	Если Результат.Представление = "" Тогда
		Результат.Вставить("Представление", ПредставлениеПоказателя(Результат.Имя));
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ПредставлениеПоказателя(ИмяПоказателя)
	
	Раздел = Новый Структура();
	Раздел.Вставить("П00001", "Раздел 1");
	Раздел.Вставить("П01111", "Подраздела 1.1 Приложения 1");
	Раздел.Вставить("П01112", "Подраздела 1.2 Приложения 1");
	Раздел.Вставить("П11131", "Подраздела 1.3.1 Приложения 1");
	Раздел.Вставить("П11132", "Подраздела 1.3.2 Приложения 1");
	Раздел.Вставить("П01114", "Подраздела 1.4 Приложения 1");
	Раздел.Вставить("П00011", "Раздел 1 Приложение 1");
	Раздел.Вставить("П00012", "Раздел 1 Приложение 2");
	Раздел.Вставить("П00013", "Раздел 1 Приложение 3");
	Раздел.Вставить("П00014", "Раздел 1 Приложение 4");
	Раздел.Вставить("П00015", "Раздел 1 Приложение 5");
	Раздел.Вставить("П00016", "Раздел 1 Приложение 6");
	Раздел.Вставить("П00017", "Раздел 1 Приложение 7");
	Раздел.Вставить("П00018", "Раздел 1 Приложение 8");
	Раздел.Вставить("П00019", "Раздел 1 Приложение 9");
	Раздел.Вставить("П00110", "Раздел 1 Приложение 10");
	Раздел.Вставить("П00002", "Раздел 2");
	Раздел.Вставить("П00021", "Раздел 2 Приложение 1");
	Раздел.Вставить("П00003", "Раздел 3");
	Раздел.Вставить("П00031", "Подраздел 3.1");
	Раздел.Вставить("П00321", "Подраздела 3.2.1");
	Раздел.Вставить("П00322", "Подраздела 3.2.2");
	
	ПодстрокаРаздела = Раздел[Лев(ИмяПоказателя, 6)];
	ПодстрокаСтроки = Сред(ИмяПоказателя, 9, 3);
	Если Прав(ИмяПоказателя, 2) = "%1" Тогда
		ПодстрокаГрафы = Сред(ИмяПоказателя, 12, 2);
	Иначе
		ПодстрокаГрафы = Прав(ИмяПоказателя,2);
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Нстр("ru='Графа %1 строка %2 %3'"), ПодстрокаГрафы,
		ПодстрокаСтроки, ПодстрокаРаздела);
	
КонецФункции

&НаСервере
Процедура ВставитьЗначениеПоказателя(ИсточникДанных, Показатель)
	
	Если ИсточникДанных.Свойство(Показатель.Имя) Тогда
		ЗначениеПоказателя = ИсточникДанных[Показатель.Имя];
	Иначе
		ЗначениеПоказателя = 0;
	КонецЕсли;
	
	Если Показатель.Свойство("Формат") И ЗначениеЗаполнено(Показатель.Формат) Тогда
		ПредставлениеЗначения = Формат(ЗначениеПоказателя, Показатель.Формат);
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Строка") Тогда
		ПредставлениеЗначения = ЗначениеПоказателя;
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
		ПредставлениеЗначения = Формат(ЗначениеПоказателя, "ДЛФ=D");
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Число") Тогда
		ПредставлениеЗначения = Формат(ЗначениеПоказателя, "ЧРД=,; ЧН=");
	Иначе
		ПредставлениеЗначения = Строка(ЗначениеПоказателя);
	КонецЕсли;
	
	Показатель.Вставить("Значение", ЗначениеПоказателя);
	Показатель.Вставить("ЗначениеСтр", ПредставлениеЗначения);
	
КонецПроцедуры

&НаСервере
Процедура ВставитьЗначениеМногострочногоПоказателя(ИсточникДанных, Показатель, НомерСтроки)
	
	НомерСтрокиСтр = СтрокаЧГ0(НомерСтроки);
	ИмяПоказателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Показатель.Имя, НомерСтрокиСтр);
	
	Если ИсточникДанных.Свойство(ИмяПоказателя) Тогда
		ЗначениеПоказателя = ИсточникДанных[ИмяПоказателя];
	Иначе
		ЗначениеПоказателя = 0;
	КонецЕсли;
	
	Если Показатель.Свойство("Формат") И ЗначениеЗаполнено(Показатель.Формат) Тогда
		ПредставлениеЗначения = Формат(ЗначениеПоказателя, Показатель.Формат);
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Строка") Тогда
		ПредставлениеЗначения = ЗначениеПоказателя;
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
		ПредставлениеЗначения = Формат(ЗначениеПоказателя, "ДЛФ=D");
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Число") Тогда
		ПредставлениеЗначения = Формат(ЗначениеПоказателя, "ЧРД=,; ЧН=");
	Иначе
		ПредставлениеЗначения = Строка(ЗначениеПоказателя);
	КонецЕсли;
	
	Показатель.Вставить("Значение", ЗначениеПоказателя);
	Показатель.Вставить("ЗначениеСтр", ПредставлениеЗначения);
	Показатель.Вставить("НомерСтроки", НомерСтрокиСтр);
	
КонецПроцедуры

&НаСервере
Процедура ЗарегистрироватьФормулуДляРасшифровки(ОписаниеКС);
	
	РегламентированнаяОтчетность.ЗарегистрироватьФормулуДляРасшифровки(СписокРасшифровкиФормулы, ОписаниеКС, , СчетчикФормулДляРасшифровок);
	
КонецПроцедуры

&НаСервере
Процедура ВнестиПоказательВРасшифровку(Показатель, ИмяСтраницы, НомерСтраницы = Неопределено, ДокументРО = Неопределено)
	
	ПредставлениеПоказателя = Показатель.Представление;
	
	ЗначениеПоказателя = ?(ТипЗнч(Показатель.Значение) = Тип ("Дата"), Показатель.ЗначениеСтр, Показатель.Значение);
	
	Если Показатель.Свойство("НомерСтроки") Тогда
		ИмяПоказателя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Показатель.Имя, Показатель.НомерСтроки);
	Иначе
		ИмяПоказателя = Показатель.Имя;
	КонецЕсли;
	
	НомСтраницы = НомерСтраницы;
	
	Если ИмяСтраницы = "Раздел1Прил1Подр1_1и1_2" Тогда
		НомСтраницы = НомерСтраницы + ",1";
	ИначеЕсли ИмяСтраницы = "Раздел1Прил1Подр1_3_1" Тогда
		НомСтраницы = НомерСтраницы + ",2";
	ИначеЕсли ИмяСтраницы = "Раздел1Прил1Подр1_3_2" Тогда
		НомСтраницы = НомерСтраницы + ",3";
	ИначеЕсли ИмяСтраницы = "Раздел1Прил1Подр1_4" Тогда
		НомСтраницы = НомерСтраницы + ",4";
	КонецЕсли;
	
	РегламентированнаяОтчетность.ЗарегистрироватьПоказательДляРасшифровки(
		СписокРасшифровкиПоказателей,
		ИмяПоказателя,
		ПредставлениеПоказателя,
		ЗначениеПоказателя,
		"",
		?(ДокументРО = Неопределено, СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка, ДокументРО.Ссылка),
		ИмяСтраницы,
		Неопределено,
		НомСтраницы,
		СчетчикФормулДляРасшифровок);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементВСтруктуруОшибок(СтруктураОшибок, ТекстФормулы, ОписаниеКС, ОбщееЧислоОшибок, ОбщееЧислоБезОшибок, Расшифровка,
	ЭтоОшибка, Описание = Неопределено, Нарушение = Неопределено, Коммент = Неопределено)
	
	ТекстовоеПредставлениеФормулы = ?(ПустаяСтрока(ТекстФормулы), "", ТекстФормулы + ". ") + ОписаниеКС;
	СтруктураОшибок.Вставить("Описание" + Формат(ОбщееЧислоОшибок + ОбщееЧислоБезОшибок, "ЧГ=0"), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), Описание));
	СтруктураОшибок.Вставить("Нарушение" + Формат(ОбщееЧислоОшибок + ОбщееЧислоБезОшибок, "ЧГ=0"), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), Нарушение));
	СтруктураОшибок.Вставить("Расшифровка" + Формат(ОбщееЧислоОшибок + ОбщееЧислоБезОшибок, "ЧГ=0"), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), Расшифровка));
	СтруктураОшибок.Вставить("ЭтоОшибка" + Формат(ОбщееЧислоОшибок + ОбщееЧислоБезОшибок, "ЧГ=0"), ЭтоОшибка);
	СтруктураОшибок.Вставить("ТекстовоеПредставлениеФормулы" + Формат(ОбщееЧислоОшибок + ОбщееЧислоБезОшибок, "ЧГ=0"), СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), ТекстовоеПредставлениеФормулы));
	СтруктураОшибок.Вставить("Комментарий" + Формат(ОбщееЧислоОшибок + ОбщееЧислоБезОшибок, "ЧГ=0"), Коммент);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СтрокаЧГ0(ИсходноеЧисло)
	
	Возврат Формат(ИсходноеЧисло, "ЧН=; ЧГ=0");
	
КонецФункции

&НаСервере
Функция КССучетомОтклонения(ЛеваяЧасть, ПраваяЧасть, Отклонение)
	
	Возврат (ЛеваяЧасть >= ПраваяЧасть - Отклонение И ЛеваяЧасть <= ПраваяЧасть + Отклонение);
	
КонецФункции

&НаСервере
Функция ПоказателиКС(ЛеваяЧасть, ПраваяЧасть, РазмерЛев = Ложь, РазмерПрав = Ложь)
	
	ПоказателиКС = Новый Структура();
	
	Если РазмерЛев Тогда
		ЛеваяЧасть = РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(ЭтаФорма, ЛеваяЧасть);
	КонецЕсли;
	
	Если РазмерПрав Тогда
		ПраваяЧасть = РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(ЭтаФорма, ПраваяЧасть);
	КонецЕсли;
	
	ПоказателиКС.Вставить("ЛеваяЧасть", ЛеваяЧасть);
	ПоказателиКС.Вставить("ЛеваяЧастьСтр", Формат(ЛеваяЧасть, "ЧРД=,; ЧН="));
	
	ПоказателиКС.Вставить("ПраваяЧасть", ПраваяЧасть);
	ПоказателиКС.Вставить("ПраваяЧастьСтр", Формат(ПраваяЧасть, "ЧРД=,; ЧН="));
	
	Возврат ПоказателиКС;
	
КонецФункции

&НаСервере
Функция КодНайден(ЗначениеКода, Условия = Неопределено)
	
	МассивКодов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Условия);
	Возврат МассивКодов.Найти(ЗначениеКода) <> Неопределено;
	
КонецФункции

&НаСервере
Функция КоличествоСтрок(Данные, Показатель)
	Инд = 1; Количество = 0;
	Показатель_ = СтрЗаменить(Показатель, "%1", "");
	Пока Данные.Свойство(Показатель_ + СтрокаЧГ0(Инд)) Цикл
		Количество = Количество + 1;
		Инд = Инд + 1;
	КонецЦикла;
	Возврат Количество;
КонецФункции

&НаСервере
Функция РазделЗаполнен(ДанныеРаздела, ИмяПодраздела = Неопределено)
	
	Результат = Ложь;
	
	ПрефиксПоказателя = ИмяПодраздела;
	
	Если ИмяПодраздела = "Подраздел11" Тогда
		ПрефиксПоказателя = "П01111";
	ИначеЕсли ИмяПодраздела = "Подраздел12" Тогда
		ПрефиксПоказателя = "П01112";
	ИначеЕсли ИмяПодраздела = "Подраздел131" Тогда
		ПрефиксПоказателя = СтруктураРеквизитовФормы.мИдГруппы11131М1;
	ИначеЕсли ИмяПодраздела = "Подраздел132" Тогда
		ПрефиксПоказателя = СтруктураРеквизитовФормы.мИдГруппы11132М1;
	ИначеЕсли ИмяПодраздела = "Подраздел14" Тогда
		ПрефиксПоказателя = СтруктураРеквизитовФормы.мИдГруппы1114М1;
	ИначеЕсли ИмяПодраздела = "Приложение5" Тогда
		ПрефиксПоказателя = "П00015";
	ИначеЕсли ИмяПодраздела = "Приложение6" Тогда
		ПрефиксПоказателя = "П00016";
	ИначеЕсли ИмяПодраздела = "Подраздел321" Тогда
		ПрефиксПоказателя = СтруктураРеквизитовФормы.мИдГруппы321М1;
	ИначеЕсли ИмяПодраздела = "Подраздел322" Тогда
		ПрефиксПоказателя = СтруктураРеквизитовФормы.мИдГруппы322М1;
	КонецЕсли;
	
	Для Каждого СтраницаРаздела Из ДанныеРаздела Цикл
		
		Для Каждого Показатель Из СтраницаРаздела.Данные Цикл
			Результат = ЗначениеЗаполнено(Показатель.Значение);
			
			Если ПрефиксПоказателя = Неопределено Тогда
				Если Результат Тогда
					Возврат Результат;
				КонецЕсли;
			ИначеЕсли СтрНайти(Показатель.Ключ, ПрефиксПоказателя) > 0 Тогда
				Если Результат Тогда
					Возврат Результат;
				КонецЕсли;
			КонецЕсли;
			
			Результат = Ложь;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция РасшифровкаВСтр(СтрокаДляРасшифровки)
	Если ТипЗнч(СтрокаДляРасшифровки) = Тип("Строка") Тогда
		Если Прав(СтрокаДляРасшифровки, 3) = " + " Тогда
			Возврат Лев(СтрокаДляРасшифровки, СтрДлина(СтрокаДляРасшифровки) - 3);
		ИначеЕсли Прав(СтрокаДляРасшифровки, 3) = " - " Тогда
			Возврат Лев(СтрокаДляРасшифровки, СтрДлина(СтрокаДляРасшифровки) - 3);
		ИначеЕсли Прав(СтрокаДляРасшифровки, 3) = " и " Тогда
			Возврат Лев(СтрокаДляРасшифровки, СтрДлина(СтрокаДляРасшифровки) - 3);
		Иначе
			Возврат СтрокаДляРасшифровки;
		КонецЕсли;
	ИначеЕсли ТипЗнч(СтрокаДляРасшифровки) = Тип("Число") Тогда
		Возврат СтрокаЧГ0(РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(ЭтаФорма, СтрокаДляРасшифровки));
	Иначе
		Возврат СтрокаДляРасшифровки;
	КонецЕсли;
КонецФункции

#КонецОбласти