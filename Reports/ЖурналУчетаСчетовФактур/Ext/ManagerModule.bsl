#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПолучитьЗаписиЖурналаСчетовФактур(СтруктураПараметров) Экспорт
	Перем СформироватьОтчетПоСтандартнойФорме;
	Перем ГруппироватьПоКонтрагентам;
	Перем ОтбиратьПоКонтрагенту;
	Перем КонтрагентДляОтбора, МассивКонтрагентовДляОтбора;
	Перем КонецПериодаОтчета;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если НЕ СтруктураПараметров.Свойство("СформироватьОтчетПоСтандартнойФорме", СформироватьОтчетПоСтандартнойФорме) Тогда
		СформироватьОтчетПоСтандартнойФорме = Истина;
	КонецЕсли;
	
	Если НЕ СтруктураПараметров.Свойство("ЗаполнениеДекларации") Тогда
		СтруктураПараметров.Вставить("ЗаполнениеДекларации", Ложь);
	ИначеЕсли СтруктураПараметров.ЗаполнениеДекларации И СтруктураПараметров.НалоговыйПериод < '20150101' Тогда
		СтруктураПараметров.ЗаполнениеДекларации = Ложь;
	КонецЕсли;
	
	Если НЕ СтруктураПараметров.Свойство("ГруппироватьПоКонтрагентам", ГруппироватьПоКонтрагентам) Тогда
		ГруппироватьПоКонтрагентам = Ложь;
	КонецЕсли;
	ГруппироватьПоКонтрагентам = НЕ СформироватьОтчетПоСтандартнойФорме И ГруппироватьПоКонтрагентам;
		
	Если НЕ СтруктураПараметров.Свойство("ОтбиратьПоКонтрагенту", ОтбиратьПоКонтрагенту) Тогда
		ОтбиратьПоКонтрагенту = Ложь;
	КонецЕсли;
	
	ОтбиратьПоКонтрагенту = НЕ СформироватьОтчетПоСтандартнойФорме И ОтбиратьПоКонтрагенту;
	
	Если ОтбиратьПоКонтрагенту И СтруктураПараметров.Свойство("КонтрагентДляОтбора", КонтрагентДляОтбора) Тогда
		
		Если ТипЗнч(КонтрагентДляОтбора) = Тип("СправочникСсылка.Контрагенты") Тогда
			// Массив контрагентов и их обособленных подразделений.
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Контрагент", КонтрагентДляОтбора);
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Контрагенты.Ссылка КАК Контрагент
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	НЕ Контрагенты.ОбособленноеПодразделение
			|	И Контрагенты.Ссылка В ИЕРАРХИИ(&Контрагент)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Контрагенты.Ссылка
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.ОбособленноеПодразделение
			|	И Контрагенты.ГоловнойКонтрагент В ИЕРАРХИИ(&Контрагент)";
			
			Результат	= Запрос.Выполнить();
			МассивКонтрагентовДляОтбора	= Результат.Выгрузить().ВыгрузитьКолонку("Контрагент");

		Иначе
			МассивКонтрагентовДляОтбора = Новый Массив;
			МассивКонтрагентовДляОтбора.Добавить(КонтрагентДляОтбора);
		
		КонецЕсли;

	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокОрганизаций",	СтруктураПараметров.СписокОрганизаций);
	Запрос.УстановитьПараметр("Квартал",			НачалоКвартала(СтруктураПараметров.НалоговыйПериод));
	Запрос.УстановитьПараметр("МассивКонтрагентов",	МассивКонтрагентовДляОтбора);

	// Определим список документов счетов-фактур, которые являются корректировочными.
	Отбор = Новый Структура();
	Отбор.Вставить("СписокОрганизаций", СтруктураПараметров.СписокОрганизаций);
	Если СформироватьОтчетПоСтандартнойФорме Тогда
		Если ОтбиратьПоКонтрагенту Тогда
			ОтборПоКонтрагенту = Новый Структура;
			ОтборПоКонтрагенту.Вставить("ВидСравнения", ВидСравнения.ВИерархии);
			ОтборПоКонтрагенту.Вставить("Значение", КонтрагентДляОтбора);
			Отбор.Вставить("Контрагент", ОтборПоКонтрагенту);
		КонецЕсли;
	КонецЕсли;
	
	ТекстКорректировочныеСчетаФактуры = УчетНДСПереопределяемый.ТекстЗапросаКорректировочныеСчетаФактуры(
		Запрос, КонецКвартала(СтруктураПараметров.НалоговыйПериод), Отбор);

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КорректировочныеСчетаФактуры.СчетФактура КАК СчетФактура,
	|	КорректировочныеСчетаФактуры.Организация КАК Организация
	|	
	|ПОМЕСТИТЬ ВТ_КорректировочныеСчетаФактуры
	|ИЗ
	|	(" + ТекстКорректировочныеСчетаФактуры + ") КАК КорректировочныеСчетаФактуры
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	Организация
	|";
	
	Запрос.Выполнить();
	
	ТекстСводныеКомиссионныеСчетаФактуры = УчетНДСПереопределяемый.ТекстЗапросаСводныеКомиссионныеСчетаФактуры(
		Запрос, КонецКвартала(СтруктураПараметров.НалоговыйПериод), Отбор);

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	СводныеКомиссионныеСчетаФактуры.СчетФактура КАК СчетФактура,
	|	СводныеКомиссионныеСчетаФактуры.Организация КАК Организация
	|	
	|ПОМЕСТИТЬ ВТ_СводныеКомиссионныеСчетаФактуры
	|ИЗ
	|	(" + ТекстСводныеКомиссионныеСчетаФактуры + ") КАК СводныеКомиссионныеСчетаФактуры
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	Организация
	|";

	Запрос.Выполнить();
	
	// Поддержка возможности формирования отчета за произвольный период.
	Если СтруктураПараметров.Свойство("КонецПериодаОтчета", КонецПериодаОтчета) Тогда
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(СтруктураПараметров.НалоговыйПериод));
		Запрос.УстановитьПараметр("КонецПериода",  КонецДня(СтруктураПараметров.КонецПериодаОтчета));
		Запрос.УстановитьПараметр("ПравилаПостановления735", 
			УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(СтруктураПараметров.КонецПериодаОтчета) = 3);
	Иначе
		Запрос.УстановитьПараметр("ПравилаПостановления735", 
			УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(СтруктураПараметров.НалоговыйПериод) = 3);		
	КонецЕсли;
	
	// Для совместимости с УП.
	ТипыРесурса = Метаданные.РегистрыСведений.ЖурналУчетаСчетовФактур.Измерения.СчетФактураВыданныйПокупателю.Тип.Типы();
	МассивПустыеСсылкиСчетовФактур = ОбщегоНазначенияБП.ПустыеСсылки(ТипыРесурса);
	Запрос.УстановитьПараметр("МассивПустыеСсылкиСчетовФактур", МассивПустыеСсылкиСчетовФактур);

	ТипыРесурса = Метаданные.РегистрыСведений.ЖурналУчетаСчетовФактур.Измерения.СчетФактураПолученныйОтПродавца.Тип.Типы();
	МассивПустыеСсылкиСчетовФактурПолученных = ОбщегоНазначенияБП.ПустыеСсылки(ТипыРесурса);
	Запрос.УстановитьПараметр("МассивПустыеСсылкиСчетовФактурПолученных", МассивПустыеСсылкиСчетовФактурПолученных);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактурСрезПоследних.Организация,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура КАК СчетФактура,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Контрагент КАК КомитентСсылка,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуре,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДС,
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерСчетаФактуры КАК НомерСчетаФактурыКомитента,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаСчетаФактуры КАК ДатаСчетаФактурыКомитента,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУменьшение,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУвеличение,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУменьшение,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ИННКонтрагента,
	|	ЖурналУчетаСчетовФактурСрезПоследних.КППКонтрагента
	|ПОМЕСТИТЬ ВТ_СчетаФактурыОтКомитента
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
	|			,
	|			&ПравилаПостановления735
	|				И Организация В (&СписокОрганизаций)
	|				И ЧастьЖурнала = ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры)
	|				И НЕ СчетФактураВыданныйПокупателю В (&МассивПустыеСсылкиСчетовФактур)
	|				И ДатаВыставленияПолучения < ДАТАВРЕМЯ(2015, 1, 1)
	|				И НЕ ИсправлениеСобственнойОшибки) КАК ЖурналУчетаСчетовФактурСрезПоследних
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактурСрезПоследних.Организация,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Контрагент,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреКомиссия,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСКомиссия,
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерСчетаФактурыПродавца,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ИННКонтрагента,
	|	ЖурналУчетаСчетовФактурСрезПоследних.КППКонтрагента
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
	|			,
	|			&ПравилаПостановления735
	|				И Организация В (&СписокОрганизаций)
	|				И ЧастьЖурнала = ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры)
	|				И НЕ СчетФактураВыданныйПокупателю В (&МассивПустыеСсылкиСчетовФактур)
	|				И ДатаВыставленияПолучения >= ДАТАВРЕМЯ(2015, 1, 1)
	|				И НЕ ИсправлениеСобственнойОшибки) КАК ЖурналУчетаСчетовФактурСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерСтроки,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Организация,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И ЖурналУчетаСчетовФактурСрезПоследних.ЧастьЖурнала = ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.Продавец
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактурСрезПоследних.КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактурСрезПоследних.КодВидаОперации,
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерИсправления,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаИсправления,
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Валюта,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуре КАК СуммаПоСчетуФактуре,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_СчетаФактурыОтКомитента.СуммаНДС ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналУчетаСчетовФактурСрезПоследних.Сторно
	|						ТОГДА -ВТ_СчетаФактурыОтКомитента.СуммаНДС
	|					ИНАЧЕ ВТ_СчетаФактурыОтКомитента.СуммаНДС
	|				КОНЕЦ
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДС
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_СчетаФактурыОтКомитента.СуммаПоСчетуФактуреРазницаУменьшение ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналУчетаСчетовФактурСрезПоследних.Сторно
	|						ТОГДА -ВТ_СчетаФактурыОтКомитента.СуммаПоСчетуФактуреРазницаУменьшение
	|					ИНАЧЕ ВТ_СчетаФактурыОтКомитента.СуммаПоСчетуФактуреРазницаУменьшение
	|				КОНЕЦ
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУменьшение
	|	КОНЕЦ КАК СуммаПоСчетуФактуреРазницаУменьшение,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_СчетаФактурыОтКомитента.СуммаПоСчетуФактуреРазницаУвеличение ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналУчетаСчетовФактурСрезПоследних.Сторно
	|						ТОГДА -ВТ_СчетаФактурыОтКомитента.СуммаПоСчетуФактуреРазницаУвеличение
	|					ИНАЧЕ ВТ_СчетаФактурыОтКомитента.СуммаПоСчетуФактуреРазницаУвеличение
	|				КОНЕЦ
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУвеличение
	|	КОНЕЦ КАК СуммаПоСчетуФактуреРазницаУвеличение,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_СчетаФактурыОтКомитента.СуммаНДСРазницаУменьшение ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналУчетаСчетовФактурСрезПоследних.Сторно
	|						ТОГДА -ВТ_СчетаФактурыОтКомитента.СуммаНДСРазницаУменьшение
	|					ИНАЧЕ ВТ_СчетаФактурыОтКомитента.СуммаНДСРазницаУменьшение
	|				КОНЕЦ
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУменьшение
	|	КОНЕЦ КАК СуммаНДСРазницаУменьшение,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_СчетаФактурыОтКомитента.СуммаНДСРазницаУвеличение ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналУчетаСчетовФактурСрезПоследних.Сторно
	|						ТОГДА -ВТ_СчетаФактурыОтКомитента.СуммаНДСРазницаУвеличение
	|					ИНАЧЕ ВТ_СчетаФактурыОтКомитента.СуммаНДСРазницаУвеличение
	|				КОНЕЦ
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУвеличение
	|	КОНЕЦ КАК СуммаНДСРазницаУвеличение,
	|	ЕСТЬNULL(ВТ_СчетаФактурыОтКомитента.ПоСтавкеБезНДС, ЖурналУчетаСчетовФактурСрезПоследних.ПоСтавкеБезНДС) КАК ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураНеВыставляется,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И ЖурналУчетаСчетовФактурСрезПоследних.ЧастьЖурнала = ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.КПППродавца
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.КППКонтрагента
	|	КОНЕЦ КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Субкомиссионер КАК СубкомиссионерСсылка,
	|	ЖурналУчетаСчетовФактурСрезПоследних.КодВидаСделки,
	|	ЕСТЬNULL(ВТ_СчетаФактурыОтКомитента.КомитентСсылка, ЖурналУчетаСчетовФактурСрезПоследних.Продавец) КАК КомитентСсылка,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.НомерСчетаФактурыПродавца <> """"
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.НомерСчетаФактурыПродавца
	|		КОГДА НЕ ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Документ ЕСТЬ NULL
	|			ТОГДА ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Номер
	|		ИНАЧЕ ЕСТЬNULL(ВТ_СчетаФактурыОтКомитента.НомерСчетаФактурыКомитента, """")
	|	КОНЕЦ КАК НомерСчетаФактурыКомитента,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаСчетаФактурыПродавца <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаСчетаФактурыПродавца
	|		КОГДА НЕ ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Документ ЕСТЬ NULL
	|			ТОГДА ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Дата
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.НомерСчетаФактурыПродавца <> """"
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаСчетаФактуры
	|		ИНАЧЕ ЕСТЬNULL(ВТ_СчетаФактурыОтКомитента.ДатаСчетаФактурыКомитента, """")
	|	КОНЕЦ КАК ДатаСчетаФактурыКомитента,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДС КАК СуммаНДСИтоговая,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУменьшение КАК СуммаПоСчетуФактуреРазницаУменьшениеИтоговая,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУвеличение КАК СуммаПоСчетуФактуреРазницаУвеличениеИтоговая,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшениеИтоговая,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличениеИтоговая,
	|	ЛОЖЬ КАК СводныйКорректировочный,
	|	ЛОЖЬ КАК СводныйКомиссионный,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаИсправленияКорректировочногоСчетаФактуры <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаИсправленияКорректировочногоСчетаФактуры
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаКорректировочногоСчетаФактуры <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаКорректировочногоСчетаФактуры
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаИсправления <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаИсправления
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаСчетаФактуры <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаСчетаФактуры
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.Период
	|	КОНЕЦ КАК ДатаСведений,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ИсправлениеСобственнойОшибки,
	|	ЕСТЬNULL(ВТ_СчетаФактурыОтКомитента.СчетФактура, ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца) КАК СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Сторно,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Период,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И ЖурналУчетаСчетовФактурСрезПоследних.ЧастьЖурнала = ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.ИННПродавца
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.ИННКонтрагента
	|	КОНЕЦ КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Регистратор,
	|	ЕСТЬNULL(ВТ_СчетаФактурыОтКомитента.ИННКонтрагента, ЖурналУчетаСчетовФактурСрезПоследних.ИННПродавца) КАК ИННКомитента,
	|	ЕСТЬNULL(ВТ_СчетаФактурыОтКомитента.КППКонтрагента, ЖурналУчетаСчетовФактурСрезПоследних.КПППродавца) КАК КППКомитента,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактурСрезПоследних.КППСубкомиссионера
	|ПОМЕСТИТЬ ВТ_ЖурналУчетаСчетовФактурСрезПоследних
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
	|			,
	|			НАЧАЛОПЕРИОДА(ДатаВыставленияПолучения, КВАРТАЛ) = &Квартал
	|				И Организация В (&СписокОрганизаций)
	|				И ДатаВыставленияПолучения < ДАТАВРЕМЯ(2015, 1, 1)) КАК ЖурналУчетаСчетовФактурСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыОтКомитента КАК ВТ_СчетаФактурыОтКомитента
	|		ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура = ВТ_СчетаФактурыОтКомитента.СчетФактураВыданныйПокупателю
	|			И (ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца В (&МассивПустыеСсылкиСчетовФактурПолученных))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца
	|			ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Документ
	|				И ЖурналУчетаСчетовФактурСрезПоследних.Организация = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Организация
	|ГДЕ
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаВыставленияПолучения <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерСтроки,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Организация,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И ЖурналУчетаСчетовФактурСрезПоследних.ЧастьЖурнала = ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.Продавец
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.Контрагент
	|	КОНЕЦ,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактурСрезПоследних.КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактурСрезПоследних.КодВидаОперацииКомиссия,
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерИсправления,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаИсправления,
	|	ЖурналУчетаСчетовФактурСрезПоследних.НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Валюта,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.ЧастьЖурнала = ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуре
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреКомиссия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_СчетаФактурыОтКомитента.СуммаНДС ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналУчетаСчетовФактурСрезПоследних.Сторно
	|						ТОГДА -ВТ_СчетаФактурыОтКомитента.СуммаНДС
	|					ИНАЧЕ ВТ_СчетаФактурыОтКомитента.СуммаНДС
	|				КОНЕЦ
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСКомиссия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_СчетаФактурыОтКомитента.СуммаПоСчетуФактуреРазницаУменьшение ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналУчетаСчетовФактурСрезПоследних.Сторно
	|						ТОГДА -ВТ_СчетаФактурыОтКомитента.СуммаПоСчетуФактуреРазницаУменьшение
	|					ИНАЧЕ ВТ_СчетаФактурыОтКомитента.СуммаПоСчетуФактуреРазницаУменьшение
	|				КОНЕЦ
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_СчетаФактурыОтКомитента.СуммаПоСчетуФактуреРазницаУвеличение ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналУчетаСчетовФактурСрезПоследних.Сторно
	|						ТОГДА -ВТ_СчетаФактурыОтКомитента.СуммаПоСчетуФактуреРазницаУвеличение
	|					ИНАЧЕ ВТ_СчетаФактурыОтКомитента.СуммаПоСчетуФактуреРазницаУвеличение
	|				КОНЕЦ
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_СчетаФактурыОтКомитента.СуммаНДСРазницаУменьшение ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналУчетаСчетовФактурСрезПоследних.Сторно
	|						ТОГДА -ВТ_СчетаФактурыОтКомитента.СуммаНДСРазницаУменьшение
	|					ИНАЧЕ ВТ_СчетаФактурыОтКомитента.СуммаНДСРазницаУменьшение
	|				КОНЕЦ
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУменьшениеКомиссия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_СчетаФактурыОтКомитента.СуммаНДСРазницаУвеличение ЕСТЬ NULL 
	|			ТОГДА ВЫБОР
	|					КОГДА ЖурналУчетаСчетовФактурСрезПоследних.Сторно
	|						ТОГДА -ВТ_СчетаФактурыОтКомитента.СуммаНДСРазницаУвеличение
	|					ИНАЧЕ ВТ_СчетаФактурыОтКомитента.СуммаНДСРазницаУвеличение
	|				КОНЕЦ
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУвеличениеКомиссия
	|	КОНЕЦ,
	|	ЕСТЬNULL(ВТ_СчетаФактурыОтКомитента.ПоСтавкеБезНДС, ЖурналУчетаСчетовФактурСрезПоследних.ПоСтавкеБезНДС),
	|	ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураНеВыставляется,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И ЖурналУчетаСчетовФактурСрезПоследних.ЧастьЖурнала = ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.КПППродавца
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.КППКонтрагента
	|	КОНЕЦ,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураВыданныйПокупателю,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Субкомиссионер,
	|	ЖурналУчетаСчетовФактурСрезПоследних.КодВидаСделки,
	|	ЕСТЬNULL(ВТ_СчетаФактурыОтКомитента.КомитентСсылка, ЖурналУчетаСчетовФактурСрезПоследних.Продавец),
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.НомерСчетаФактурыПродавца <> """"
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.НомерСчетаФактурыПродавца
	|		КОГДА НЕ ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Документ ЕСТЬ NULL
	|			ТОГДА ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Номер
	|		ИНАЧЕ ЕСТЬNULL(ВТ_СчетаФактурыОтКомитента.НомерСчетаФактурыКомитента, """")
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаСчетаФактурыПродавца <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаСчетаФактурыПродавца
	|		КОГДА НЕ ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Документ ЕСТЬ NULL
	|			ТОГДА ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Дата
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.НомерСчетаФактурыПродавца <> """"
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаСчетаФактуры
	|		ИНАЧЕ ЕСТЬNULL(ВТ_СчетаФактурыОтКомитента.ДатаСчетаФактурыКомитента, """")
	|	КОНЕЦ,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСКомиссия,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУменьшениеКомиссия,
	|	ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУвеличениеКомиссия,
	|	ЛОЖЬ КАК СводныйКорректировочный,
	|	ЛОЖЬ КАК СводныйКомиссионный,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаИсправленияКорректировочногоСчетаФактуры <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаИсправленияКорректировочногоСчетаФактуры
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаКорректировочногоСчетаФактуры <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаКорректировочногоСчетаФактуры
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаИсправления <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаИсправления
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаСчетаФактуры <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.ДатаСчетаФактуры
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.Период
	|	КОНЕЦ,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ИсправлениеСобственнойОшибки,
	|	ЕСТЬNULL(ВТ_СчетаФактурыОтКомитента.СчетФактура, ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца),
	|	ЖурналУчетаСчетовФактурСрезПоследних.Сторно,
	|	ЖурналУчетаСчетовФактурСрезПоследних.ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Период,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактурСрезПоследних.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И ЖурналУчетаСчетовФактурСрезПоследних.ЧастьЖурнала = ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры)
	|			ТОГДА ЖурналУчетаСчетовФактурСрезПоследних.ИННПродавца
	|		ИНАЧЕ ЖурналУчетаСчетовФактурСрезПоследних.ИННКонтрагента
	|	КОНЕЦ,
	|	ЖурналУчетаСчетовФактурСрезПоследних.Регистратор,
	|	ЕСТЬNULL(ВТ_СчетаФактурыОтКомитента.ИННКонтрагента, ЖурналУчетаСчетовФактурСрезПоследних.ИННПродавца),
	|	ЕСТЬNULL(ВТ_СчетаФактурыОтКомитента.КППКонтрагента, ЖурналУчетаСчетовФактурСрезПоследних.КПППродавца),
	|	ЖурналУчетаСчетовФактурСрезПоследних.ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактурСрезПоследних.КППСубкомиссионера
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
	|			,
	|			НАЧАЛОПЕРИОДА(ДатаВыставленияПолучения, КВАРТАЛ) = &Квартал
	|				И Организация В (&СписокОрганизаций)
	|				И ДатаВыставленияПолучения >= ДАТАВРЕМЯ(2015, 1, 1)) КАК ЖурналУчетаСчетовФактурСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыОтКомитента КАК ВТ_СчетаФактурыОтКомитента
	|		ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура = ВТ_СчетаФактурыОтКомитента.СчетФактураВыданныйПокупателю
	|			И (ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца В (&МассивПустыеСсылкиСчетовФактурПолученных))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца
	|			ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Документ
	|				И ЖурналУчетаСчетовФактурСрезПоследних.Организация = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Организация
	|ГДЕ
	|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаВыставленияПолучения <> ДАТАВРЕМЯ(1, 1, 1)
	|	И (ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреКомиссия <> 0
	|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСКомиссия <> 0
	|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия <> 0
	|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия <> 0
	|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУменьшениеКомиссия <> 0
	|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУвеличениеКомиссия <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.Организация,
	|	ЖурналУчетаСчетовФактур.Контрагент КАК КонтрагентСсылка,
	|	ЖурналУчетаСчетовФактур.КППКонтрагента КАК КППКонтрагента,
	|	ЖурналУчетаСчетовФактур.СчетФактура,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации,
	|	ВЫБОР
	|		КОГДА ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры
	|		КОГДА ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры
	|		КОГДА ЖурналУчетаСчетовФактур.ДатаИсправления <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЖурналУчетаСчетовФактур.ДатаИсправления
	|		КОГДА ЖурналУчетаСчетовФактур.ДатаСчетаФактуры <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЖурналУчетаСчетовФактур.ДатаСчетаФактуры
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.ДатаСведений
	|	КОНЕЦ КАК ДатаСведений,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.Валюта,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.КомитентСсылка,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре,
	|	ЖурналУчетаСчетовФактур.СуммаНДС,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыКомитента,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыКомитента,
	|	ЖурналУчетаСчетовФактур.СуммаНДСИтоговая,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеИтоговая,
	|	ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеИтоговая,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеИтоговая,
	|	ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеИтоговая,
	|	ЖурналУчетаСчетовФактур.СводныйКорректировочный,
	|	ВЫБОР
	|		КОГДА НЕ (ВТ_СводныеКомиссионныеСчетаФактуры.СчетФактура ЕСТЬ NULL)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СводныйКомиссионный,
	|	ВЫБОР
	|		КОГДА НЕ (ВТ_КорректировочныеСчетаФактуры.СчетФактура ЕСТЬ NULL)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КорректировочныйСчетФактура,
	|	ДанныеПервичныхДокументов.НомерРегистратора КАК СчетФактураВыданныйНомер,
	|	ЖурналУчетаСчетовФактур.СубкомиссионерСсылка,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца,
	|	ЖурналУчетаСчетовФактур.Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.Период,
	|	ЖурналУчетаСчетовФактур.Регистратор,
	|	ЖурналУчетаСчетовФактур.ИННКомитента,
	|	ЖурналУчетаСчетовФактур.КППКомитента,
	|	ЖурналУчетаСчетовФактур.ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.ИННСубкомиссионера,
	|	ЖурналУчетаСчетовФактур.КППСубкомиссионера
	|ПОМЕСТИТЬ ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам
	|ИЗ
	|	ВТ_ЖурналУчетаСчетовФактурСрезПоследних КАК ЖурналУчетаСчетовФактур
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КорректировочныеСчетаФактуры
	|		ПО ЖурналУчетаСчетовФактур.СчетФактура = ВТ_КорректировочныеСчетаФактуры.СчетФактура
	|			И ЖурналУчетаСчетовФактур.Организация = ВТ_КорректировочныеСчетаФактуры.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СводныеКомиссионныеСчетаФактуры
	|		ПО ЖурналУчетаСчетовФактур.СчетФактура = ВТ_СводныеКомиссионныеСчетаФактуры.СчетФактура
	|			И ЖурналУчетаСчетовФактур.Организация = ВТ_СводныеКомиссионныеСчетаФактуры.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ЖурналУчетаСчетовФактур.Организация = ДанныеПервичныхДокументов.Организация
	|			И ЖурналУчетаСчетовФактур.СчетФактура = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	ЖурналУчетаСчетовФактур.Контрагент В(&МассивКонтрагентов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЖурналУчетаСчетовФактур.СчетФактура";

	Если НЕ ОтбиратьПоКонтрагенту Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЖурналУчетаСчетовФактур.Контрагент В(&МассивКонтрагентов)", "ИСТИНА");
	КонецЕсли;
	
	// Поддержка возможности формирования отчета за произвольный период.
	Если СтруктураПараметров.Свойство("КонецПериодаОтчета", КонецПериодаОтчета) Тогда
		
		ЗаменяемыйСтандартныйТекст1 = "ИЗ
		|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
		|			,
		|			НАЧАЛОПЕРИОДА(ДатаВыставленияПолучения, КВАРТАЛ) = &Квартал
		|				И Организация В (&СписокОрганизаций)
		|				И ДатаВыставленияПолучения < ДАТАВРЕМЯ(2015, 1, 1)) КАК ЖурналУчетаСчетовФактурСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыОтКомитента КАК ВТ_СчетаФактурыОтКомитента
		|		ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура = ВТ_СчетаФактурыОтКомитента.СчетФактураВыданныйПокупателю
		|			И (ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца В (&МассивПустыеСсылкиСчетовФактурПолученных))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца
		|			ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Документ
		|				И ЖурналУчетаСчетовФактурСрезПоследних.Организация = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Организация
		|ГДЕ
		|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаВыставленияПолучения <> ДАТАВРЕМЯ(1, 1, 1)";

		
		ЗаменяемыйСтандартныйТекст2 = "ИЗ
		|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
		|			,
		|			НАЧАЛОПЕРИОДА(ДатаВыставленияПолучения, КВАРТАЛ) = &Квартал
		|				И Организация В (&СписокОрганизаций)
		|				И ДатаВыставленияПолучения >= ДАТАВРЕМЯ(2015, 1, 1)) КАК ЖурналУчетаСчетовФактурСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыОтКомитента КАК ВТ_СчетаФактурыОтКомитента
		|		ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура = ВТ_СчетаФактурыОтКомитента.СчетФактураВыданныйПокупателю
		|			И (ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца В (&МассивПустыеСсылкиСчетовФактурПолученных))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца
		|			ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Документ
		|				И ЖурналУчетаСчетовФактурСрезПоследних.Организация = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Организация
		|ГДЕ
		|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаВыставленияПолучения <> ДАТАВРЕМЯ(1, 1, 1)
		|	И (ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреКомиссия <> 0
		|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСКомиссия <> 0
		|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия <> 0
		|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия <> 0
		|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУменьшениеКомиссия <> 0
		|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУвеличениеКомиссия <> 0)";
		
		Если КонецКвартала(СтруктураПараметров.КонецПериодаОтчета) = КонецКвартала(СтруктураПараметров.НалоговыйПериод) Тогда
			
			// Мы делаем отчет за период внутри квартала.
			НовыйТекст1 = "ИЗ
			|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
			|			,
			|			НАЧАЛОПЕРИОДА(ДатаВыставленияПолучения, КВАРТАЛ) = &Квартал
			|				И Организация В (&СписокОрганизаций)
			|				И ДатаВыставленияПолучения < ДАТАВРЕМЯ(2015, 1, 1)) КАК ЖурналУчетаСчетовФактурСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыОтКомитента КАК ВТ_СчетаФактурыОтКомитента
			|		ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура = ВТ_СчетаФактурыОтКомитента.СчетФактураВыданныйПокупателю
			|			И (ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца В (&МассивПустыеСсылкиСчетовФактурПолученных))
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца
			|			ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Документ
			|				И ЖурналУчетаСчетовФактурСрезПоследних.Организация = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Организация
			|ГДЕ
			|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаВыставленияПолучения МЕЖДУ &НачалоПериода И &КонецПериода";
			
			НовыйТекст2 = "ИЗ
			|	РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних(
			|			,
			|			НАЧАЛОПЕРИОДА(ДатаВыставленияПолучения, КВАРТАЛ) = &Квартал
			|				И Организация В (&СписокОрганизаций)
			|				И ДатаВыставленияПолучения >= ДАТАВРЕМЯ(2015, 1, 1)) КАК ЖурналУчетаСчетовФактурСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыОтКомитента КАК ВТ_СчетаФактурыОтКомитента
			|		ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура = ВТ_СчетаФактурыОтКомитента.СчетФактураВыданныйПокупателю
			|			И (ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца В (&МассивПустыеСсылкиСчетовФактурПолученных))
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца
			|			ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Документ
			|				И ЖурналУчетаСчетовФактурСрезПоследних.Организация = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Организация
			|ГДЕ
			|	ЖурналУчетаСчетовФактурСрезПоследних.ДатаВыставленияПолучения МЕЖДУ &НачалоПериода И &КонецПериода
			|	И (ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреКомиссия <> 0
			|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСКомиссия <> 0
			|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия <> 0
			|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия <> 0
			|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУменьшениеКомиссия <> 0
			|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУвеличениеКомиссия <> 0)";
			
		Иначе
			
			// Мы делаем отчет за период, который не попадает целиком в один квартал
			Если НачалоКвартала(СтруктураПараметров.НалоговыйПериод) >= '20150101' Тогда
				// Правила заполнения с 2015 года.
				НовыйТекст1 = "ИЗ
				|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактурСрезПоследних
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыОтКомитента КАК ВТ_СчетаФактурыОтКомитента
				|		ПО ЛОЖЬ
				|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца
				|		ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Документ
				|			И ЖурналУчетаСчетовФактурСрезПоследних.Организация = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Организация";
				
				НовыйТекст2 = "ИЗ
				|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактурСрезПоследних
				|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыОтКомитента КАК ВТ_СчетаФактурыОтКомитента
				|	ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура = ВТ_СчетаФактурыОтКомитента.СчетФактураВыданныйПокупателю
				|			И (ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца В (&МассивПустыеСсылкиСчетовФактурПолученных))
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца
				|			ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Документ
				|				И ЖурналУчетаСчетовФактурСрезПоследних.Организация = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Организация
				|ГДЕ
				|	ЖурналУчетаСчетовФактурСрезПоследних.Организация В (&СписокОрганизаций) 
				|	И ЖурналУчетаСчетовФактурСрезПоследних.ДатаВыставленияПолучения МЕЖДУ &НачалоПериода И &КонецПериода
				|	И (ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреКомиссия <> 0
				|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСКомиссия <> 0
				|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия <> 0
				|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия <> 0
				|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУменьшениеКомиссия <> 0
				|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУвеличениеКомиссия <> 0)";
				
			ИначеЕсли КонецКвартала(СтруктураПараметров.КонецПериодаОтчета) <'20150101' Тогда
				// Правила заполнения до 2015 года.				
				НовыйТекст1 = "ИЗ
				|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактурСрезПоследних
				| 	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыОтКомитента КАК ВТ_СчетаФактурыОтКомитента
				|	ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура = ВТ_СчетаФактурыОтКомитента.СчетФактураВыданныйПокупателю
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца
				|			ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Документ
				|				И ЖурналУчетаСчетовФактурСрезПоследних.Организация = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Организация
				|ГДЕ
				|	ЖурналУчетаСчетовФактурСрезПоследних.Организация В (&СписокОрганизаций) 
				|			И (ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца В (&МассивПустыеСсылкиСчетовФактурПолученных))
				|И ЖурналУчетаСчетовФактурСрезПоследних.ДатаВыставленияПолучения МЕЖДУ &НачалоПериода И &КонецПериода";
				
				НовыйТекст2 = "ИЗ
				|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактурСрезПоследних
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыОтКомитента КАК ВТ_СчетаФактурыОтКомитента
				|		ПО ЛОЖЬ
				|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца
				|		ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Документ
				|			И ЖурналУчетаСчетовФактурСрезПоследних.Организация = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Организация";
			Иначе
				// Ранее 2015 года и 2015 год.
				НовыйТекст1 = "ИЗ
				|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактурСрезПоследних
				| 	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыОтКомитента КАК ВТ_СчетаФактурыОтКомитента
				|	ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура = ВТ_СчетаФактурыОтКомитента.СчетФактураВыданныйПокупателю
				|			И (ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца В (&МассивПустыеСсылкиСчетовФактурПолученных))
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца
				|			ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Документ
				|				И ЖурналУчетаСчетовФактурСрезПоследних.Организация = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Организация
				|ГДЕ 
				|	ЖурналУчетаСчетовФактурСрезПоследних.Организация В (&СписокОрганизаций) 
				|И ЖурналУчетаСчетовФактурСрезПоследних.ДатаВыставленияПолучения >= &НачалоПериода
				|И ЖурналУчетаСчетовФактурСрезПоследних.ДатаВыставленияПолучения < ДАТАВРЕМЯ(2015,1,1)";
				
				НовыйТекст2 = "ИЗ
				|	РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактурСрезПоследних
				| 	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СчетаФактурыОтКомитента КАК ВТ_СчетаФактурыОтКомитента
				|	ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура = ВТ_СчетаФактурыОтКомитента.СчетФактураВыданныйПокупателю
				|			И (ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца В (&МассивПустыеСсылкиСчетовФактурПолученных))
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца
				|			ПО ЖурналУчетаСчетовФактурСрезПоследних.СчетФактураПолученныйОтПродавца = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Документ
				|				И ЖурналУчетаСчетовФактурСрезПоследних.Организация = ДанныеПервичныхДокументовСчетФактураПолученныйОтПродавца.Организация
				|ГДЕ 
				|	ЖурналУчетаСчетовФактурСрезПоследних.Организация В (&СписокОрганизаций) 
				|	И ЖурналУчетаСчетовФактурСрезПоследних.ДатаВыставленияПолучения МЕЖДУ ДАТАВРЕМЯ(2015,1,1) И &КонецПериода
				|	И (ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреКомиссия <> 0
				|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСКомиссия <> 0
				|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУменьшениеКомиссия <> 0
				|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаПоСчетуФактуреРазницаУвеличениеКомиссия <> 0
				|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУменьшениеКомиссия <> 0
				|			ИЛИ ЖурналУчетаСчетовФактурСрезПоследних.СуммаНДСРазницаУвеличениеКомиссия <> 0)";
			КонецЕсли;
			
		КонецЕсли;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ЗаменяемыйСтандартныйТекст1, НовыйТекст1);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ЗаменяемыйСтандартныйТекст2, НовыйТекст2);
		  
	КонецЕсли;  

	Запрос.Выполнить();
	
	// Выданные счета-фактуры сортируем по дате передачи и далее по номеру с учетом префиксов,
	// чтобы обеспечить правильную сортировку для номеров разной значности.
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КонтрагентСсылка КАК Ссылка,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаСведений
	|ПОМЕСТИТЬ СсылкиНаДаты
	|ИЗ
	|	ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам КАК ЗаписиРегистраЖурналУчетаСчетовФактур
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КомитентСсылка,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаСведений
	|ИЗ
	|	ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам КАК ЗаписиРегистраЖурналУчетаСчетовФактур
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СубкомиссионерСсылка,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаСведений
	|ИЗ
	|	ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам КАК ЗаписиРегистраЖурналУчетаСчетовФактур";
	
	Запрос.Выполнить();
	
	УчетНДСПереопределяемый.РегистрационныеСведенияНаДаты(Запрос.МенеджерВременныхТаблиц);

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам.КонтрагентСсылка КАК Контрагент,
	|	ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам.СчетФактура КАК СчетФактура,
	|	ОшибочныеРеквизитыКонтрагентовСрезПоследних.ИНН,
	|	ОшибочныеРеквизитыКонтрагентовСрезПоследних.КПП
	|ПОМЕСТИТЬ ОшибочныеРеквизитыКонтрагентов
	|ИЗ
	|	ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам КАК ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОшибочныеРеквизитыКонтрагентов.СрезПоследних КАК ОшибочныеРеквизитыКонтрагентовСрезПоследних
	|		ПО ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам.СчетФактура = ОшибочныеРеквизитыКонтрагентовСрезПоследних.СчетФактура
	|			И ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам.КонтрагентСсылка = ОшибочныеРеквизитыКонтрагентовСрезПоследних.Контрагент
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам.КомитентСсылка КАК Комитент,
	|	ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам.СчетФактураПолученныйОтПродавца КАК СчетФактура,
	|	ОшибочныеРеквизитыКонтрагентовСрезПоследних.ИНН,
	|	ОшибочныеРеквизитыКонтрагентовСрезПоследних.КПП
	|ПОМЕСТИТЬ ОшибочныеРеквизитыКомитентов
	|ИЗ
	|	ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам КАК ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОшибочныеРеквизитыКонтрагентов.СрезПоследних КАК ОшибочныеРеквизитыКонтрагентовСрезПоследних
	|		ПО ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам.КомитентСсылка = ОшибочныеРеквизитыКонтрагентовСрезПоследних.Контрагент
	|			И ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам.СчетФактураПолученныйОтПродавца = ОшибочныеРеквизитыКонтрагентовСрезПоследних.СчетФактура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	Комитент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам.СубкомиссионерСсылка КАК Субкомиссионер,
	|	ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам.СчетФактура,
	|	ОшибочныеРеквизитыКонтрагентовСрезПоследних.ИНН,
	|	ОшибочныеРеквизитыКонтрагентовСрезПоследних.КПП
	|ПОМЕСТИТЬ ОшибочныеРеквизитыСубкомиссионеров
	|ИЗ
	|	ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам КАК ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОшибочныеРеквизитыКонтрагентов.СрезПоследних КАК ОшибочныеРеквизитыКонтрагентовСрезПоследних
	|		ПО ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам.СубкомиссионерСсылка = ОшибочныеРеквизитыКонтрагентовСрезПоследних.Контрагент
	|			И ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам.СчетФактура = ОшибочныеРеквизитыКонтрагентовСрезПоследних.СчетФактура";
	
	Запрос.Выполнить();

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЖурналУчетаСчетовФактур.Организация КАК Организация,
	|	ЖурналУчетаСчетовФактур.СчетФактура КАК СчетФактураДокумент,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения КАК ДатаПередачиПолучения,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.КонтрагентСсылка КАК Контрагент,
	|	ЕСТЬNULL(СведенияОКонтрагентах.Наименование, """") КАК КонтрагентНаименование,
	|	ВЫБОР
	|		КОГДА НЕ ОшибочныеРеквизитыКонтрагентов.ИНН ЕСТЬ NULL 
	|			ТОГДА ОшибочныеРеквизитыКонтрагентов.ИНН
	|		КОГДА ЖурналУчетаСчетовФактур.ИННКонтрагента ПОДОБНО """"
	|			ТОГДА ЕСТЬNULL(СведенияОКонтрагентах.ИНН, """")
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.ИННКонтрагента
	|	КОНЕЦ КАК КонтрагентИНН,
	|	ВЫБОР
	|		КОГДА НЕ ОшибочныеРеквизитыКонтрагентов.КПП ЕСТЬ NULL 
	|			ТОГДА ОшибочныеРеквизитыКонтрагентов.КПП
	|		КОГДА ЖурналУчетаСчетовФактур.КППКонтрагента ПОДОБНО """"
	|			ТОГДА ЕСТЬNULL(СведенияОКонтрагентах.КПП, """")
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.КППКонтрагента
	|	КОНЕЦ КАК КонтрагентКПП,
	|	ЖурналУчетаСчетовФактур.Валюта.НаименованиеПолное КАК НаименованиеВалюты,
	|	ЖурналУчетаСчетовФактур.Валюта.Код КАК КодВалюты,
	|	ЖурналУчетаСчетовФактур.Валюта.Наименование КАК НаименованиеВалютыКраткое,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала КАК ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации КАК КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС КАК СчетФактураБезНДС,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения КАК КодСпособаВыставления,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры КАК НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры КАК ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления КАК НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления КАК ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется КАК СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.КорректировочныйСчетФактура КАК КорректировочныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйНомер КАК СчетФактураВыданныйНомер,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки,
	|	ЖурналУчетаСчетовФактур.КомитентСсылка КАК КомитентСсылка,
	|	ЕСТЬNULL(СведенияОКомитентах.Наименование, """") КАК Комитент,
	|	ВЫБОР
	|		КОГДА НЕ ОшибочныеРеквизитыКомитентов.ИНН ЕСТЬ NULL 
	|			ТОГДА ОшибочныеРеквизитыКомитентов.ИНН
	|		КОГДА ЖурналУчетаСчетовФактур.ИННКомитента ПОДОБНО """"
	|			ТОГДА ЕСТЬNULL(СведенияОКомитентах.ИНН, """")
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.ИННКомитента
	|	КОНЕЦ КАК КомитентИНН,
	|	ВЫБОР
	|		КОГДА НЕ ОшибочныеРеквизитыКомитентов.КПП ЕСТЬ NULL 
	|			ТОГДА ОшибочныеРеквизитыКомитентов.КПП
	|		КОГДА ЖурналУчетаСчетовФактур.КППКомитента ПОДОБНО """"
	|			ТОГДА ЕСТЬNULL(СведенияОКомитентах.КПП, """")
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.КППКомитента
	|	КОНЕЦ КАК КомитентКПП,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыКомитента,
	|	ЖурналУчетаСчетовФактур.СводныйКорректировочный,
	|	ЖурналУчетаСчетовФактур.СводныйКомиссионный,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыКомитента,
	|	СУММА(ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшение) КАК СуммаДокументаРазницаУменьшение,
	|	СУММА(ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличение) КАК СуммаДокументаРазницаУвеличение,
	|	СУММА(ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение) КАК СуммаНДСРазницаУменьшение,
	|	СУММА(ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение) КАК СуммаНДСРазницаУвеличение,
	|	СУММА(ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре) КАК СуммаДокумента,
	|	СУММА(ЖурналУчетаСчетовФактур.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ЖурналУчетаСчетовФактур.СуммаНДСИтоговая) КАК СуммаНДСИтоговая,
	|	СУММА(ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеИтоговая) КАК СуммаПоСчетуФактуреРазницаУменьшениеИтоговая,
	|	СУММА(ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеИтоговая) КАК СуммаПоСчетуФактуреРазницаУвеличениеИтоговая,
	|	СУММА(ЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеИтоговая) КАК СуммаНДСРазницаУменьшениеИтоговая,
	|	СУММА(ЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеИтоговая) КАК СуммаНДСРазницаУвеличениеИтоговая,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.Период,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца,
	|	ОшибочныеРеквизитыКомитентов.ИНН КАК ИННКомитента,
	|	ОшибочныеРеквизитыКонтрагентов.ИНН КАК ИННКонтрагента,
	|	ЖурналУчетаСчетовФактур.Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.Регистратор
	|ПОМЕСТИТЬ ЗаписиРегистраЖурналУчетаСчетовФактур
	|ИЗ
	|	ВТ_ЖурналУчетаСчетовФактурПоКонтрагентам КАК ЖурналУчетаСчетовФактур
	|		ЛЕВОЕ СОЕДИНЕНИЕ СведенияОСсылкахНаДаты КАК СведенияОКонтрагентах
	|		ПО (СведенияОКонтрагентах.Ссылка = ЖурналУчетаСчетовФактур.КонтрагентСсылка)
	|			И (СведенияОКонтрагентах.ДатаСведений = ЖурналУчетаСчетовФактур.ДатаСведений)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СведенияОСсылкахНаДаты КАК СведенияОКомитентах
	|		ПО (СведенияОКомитентах.Ссылка = ЖурналУчетаСчетовФактур.КомитентСсылка)
	|			И (СведенияОКомитентах.ДатаСведений = ЖурналУчетаСчетовФактур.ДатаСведений)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОшибочныеРеквизитыКонтрагентов КАК ОшибочныеРеквизитыКонтрагентов
	|		ПО ЖурналУчетаСчетовФактур.СчетФактура = ОшибочныеРеквизитыКонтрагентов.СчетФактура
	|			И ЖурналУчетаСчетовФактур.КонтрагентСсылка = ОшибочныеРеквизитыКонтрагентов.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОшибочныеРеквизитыКомитентов КАК ОшибочныеРеквизитыКомитентов
	|		ПО ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца = ОшибочныеРеквизитыКомитентов.СчетФактура
	|			И ЖурналУчетаСчетовФактур.КомитентСсылка = ОшибочныеРеквизитыКомитентов.Комитент
	|
	|СГРУППИРОВАТЬ ПО
	|	ЖурналУчетаСчетовФактур.Организация,
	|	ЖурналУчетаСчетовФактур.СчетФактура,
	|	ЖурналУчетаСчетовФактур.ДатаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.КонтрагентСсылка,
	|	ЖурналУчетаСчетовФактур.КомитентСсылка,
	|	ЕСТЬNULL(СведенияОКонтрагентах.Наименование, """"),
	|	ЖурналУчетаСчетовФактур.Валюта.НаименованиеПолное,
	|	ЖурналУчетаСчетовФактур.Валюта.Наименование,
	|	ЖурналУчетаСчетовФактур.Валюта.Код,
	|	ЖурналУчетаСчетовФактур.ЧастьЖурнала,
	|	ЖурналУчетаСчетовФактур.КодВидаОперации,
	|	ЖурналУчетаСчетовФактур.ПоСтавкеБезНДС,
	|	ЖурналУчетаСчетовФактур.КодСпособаВыставленияПолучения,
	|	ЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.НомерИсправления,
	|	ЖурналУчетаСчетовФактур.ДатаИсправления,
	|	ЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЖурналУчетаСчетовФактур.СчетФактураНеВыставляется,
	|	ЖурналУчетаСчетовФактур.КорректировочныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.СчетФактураВыданныйНомер,
	|	ЖурналУчетаСчетовФактур.КодВидаСделки,
	|	ЕСТЬNULL(СведенияОКомитентах.Наименование, """"),
	|	ЖурналУчетаСчетовФактур.НомерСчетаФактурыКомитента,
	|	ЖурналУчетаСчетовФактур.СводныйКорректировочный,
	|	ЖурналУчетаСчетовФактур.СводныйКомиссионный,
	|	ЖурналУчетаСчетовФактур.ДатаСчетаФактурыКомитента,
	|	ЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки,
	|	ЖурналУчетаСчетовФактур.Период,
	|	ЖурналУчетаСчетовФактур.СчетФактураПолученныйОтПродавца,
	|	ОшибочныеРеквизитыКомитентов.ИНН,
	|	ОшибочныеРеквизитыКонтрагентов.ИНН,
	|	ЖурналУчетаСчетовФактур.Сторно,
	|	ЖурналУчетаСчетовФактур.ИсправленныйСчетФактура,
	|	ЖурналУчетаСчетовФактур.Регистратор,
	|	ВЫБОР
	|		КОГДА НЕ ОшибочныеРеквизитыКомитентов.ИНН ЕСТЬ NULL 
	|			ТОГДА ОшибочныеРеквизитыКомитентов.ИНН
	|		КОГДА ЖурналУчетаСчетовФактур.ИННКомитента ПОДОБНО """"
	|			ТОГДА ЕСТЬNULL(СведенияОКомитентах.ИНН, """")
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.ИННКомитента
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ОшибочныеРеквизитыКомитентов.КПП ЕСТЬ NULL 
	|			ТОГДА ОшибочныеРеквизитыКомитентов.КПП
	|		КОГДА ЖурналУчетаСчетовФактур.КППКомитента ПОДОБНО """"
	|			ТОГДА ЕСТЬNULL(СведенияОКомитентах.КПП, """")
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.КППКомитента
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ОшибочныеРеквизитыКонтрагентов.ИНН ЕСТЬ NULL 
	|			ТОГДА ОшибочныеРеквизитыКонтрагентов.ИНН
	|		КОГДА ЖурналУчетаСчетовФактур.ИННКонтрагента ПОДОБНО """"
	|			ТОГДА ЕСТЬNULL(СведенияОКонтрагентах.ИНН, """")
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.ИННКонтрагента
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ОшибочныеРеквизитыКонтрагентов.КПП ЕСТЬ NULL 
	|			ТОГДА ОшибочныеРеквизитыКонтрагентов.КПП
	|		КОГДА ЖурналУчетаСчетовФактур.КППКонтрагента ПОДОБНО """"
	|			ТОГДА ЕСТЬNULL(СведенияОКонтрагентах.КПП, """")
	|		ИНАЧЕ ЖурналУчетаСчетовФактур.КППКонтрагента
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЧастьЖурнала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура КАК СчетФактура,
	|	ЕСТЬNULL(СведенияОСубкомиссионерах.Наименование, """") КАК Субкомиссионер,
	|	ВТ_ЖурналУчетаСчетовФактурСрезПоследних.СубкомиссионерСсылка КАК СубкомиссионерСсылка,
	|	ВЫБОР
	|		КОГДА НЕ ОшибочныеРеквизитыСубкомиссионеров.ИНН ЕСТЬ NULL 
	|			ТОГДА ОшибочныеРеквизитыСубкомиссионеров.ИНН
	|		КОГДА ВТ_ЖурналУчетаСчетовФактурСрезПоследних.ИННСубкомиссионера ПОДОБНО """"
	|			ТОГДА ЕСТЬNULL(СведенияОСубкомиссионерах.ИНН, """")
	|		ИНАЧЕ ВТ_ЖурналУчетаСчетовФактурСрезПоследних.ИННСубкомиссионера
	|	КОНЕЦ КАК СубкомиссионерИНН,
	|	ВЫБОР
	|		КОГДА НЕ ОшибочныеРеквизитыСубкомиссионеров.КПП ЕСТЬ NULL 
	|			ТОГДА ОшибочныеРеквизитыСубкомиссионеров.КПП
	|		КОГДА ВТ_ЖурналУчетаСчетовФактурСрезПоследних.КППСубкомиссионера ПОДОБНО """"
	|			ТОГДА ЕСТЬNULL(СведенияОСубкомиссионерах.КПП, """")
	|		ИНАЧЕ ВТ_ЖурналУчетаСчетовФактурСрезПоследних.КППСубкомиссионера
	|	КОНЕЦ КАК СубкомиссионерКПП,
	|	МИНИМУМ(ВТ_ЖурналУчетаСчетовФактурСрезПоследних.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	ВТ_ЖурналУчетаСчетовФактурСрезПоследних КАК ВТ_ЖурналУчетаСчетовФактурСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ СведенияОСсылкахНаДаты КАК СведенияОСубкомиссионерах
	|		ПО (СведенияОСубкомиссионерах.Ссылка = ВТ_ЖурналУчетаСчетовФактурСрезПоследних.СубкомиссионерСсылка)
	|			И (СведенияОСубкомиссионерах.ДатаСведений = ВТ_ЖурналУчетаСчетовФактурСрезПоследних.ДатаСведений)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОшибочныеРеквизитыСубкомиссионеров КАК ОшибочныеРеквизитыСубкомиссионеров
	|		ПО ВТ_ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура = ОшибочныеРеквизитыСубкомиссионеров.СчетФактура
	|			И ВТ_ЖурналУчетаСчетовФактурСрезПоследних.СубкомиссионерСсылка = ОшибочныеРеквизитыСубкомиссионеров.Субкомиссионер
	|ГДЕ
	|	ВТ_ЖурналУчетаСчетовФактурСрезПоследних.СубкомиссионерСсылка <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ЖурналУчетаСчетовФактурСрезПоследних.СчетФактура,
	|	ЕСТЬNULL(СведенияОСубкомиссионерах.Наименование, """"),
	|	ВТ_ЖурналУчетаСчетовФактурСрезПоследних.СубкомиссионерСсылка,
	|	ВЫБОР
	|		КОГДА НЕ ОшибочныеРеквизитыСубкомиссионеров.ИНН ЕСТЬ NULL 
	|			ТОГДА ОшибочныеРеквизитыСубкомиссионеров.ИНН
	|		КОГДА ВТ_ЖурналУчетаСчетовФактурСрезПоследних.ИННСубкомиссионера ПОДОБНО """"
	|			ТОГДА ЕСТЬNULL(СведенияОСубкомиссионерах.ИНН, """")
	|		ИНАЧЕ ВТ_ЖурналУчетаСчетовФактурСрезПоследних.ИННСубкомиссионера
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ОшибочныеРеквизитыСубкомиссионеров.КПП ЕСТЬ NULL 
	|			ТОГДА ОшибочныеРеквизитыСубкомиссионеров.КПП
	|		КОГДА ВТ_ЖурналУчетаСчетовФактурСрезПоследних.КППСубкомиссионера ПОДОБНО """"
	|			ТОГДА ЕСТЬNULL(СведенияОСубкомиссионерах.КПП, """")
	|		ИНАЧЕ ВТ_ЖурналУчетаСчетовФактурСрезПоследних.КППСубкомиссионера
	|	КОНЕЦ";
	
	ДополнительныеСвойства = Запрос.Выполнить().Выгрузить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Организация,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СчетФактураДокумент КАК СчетФактураДокумент,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодВидаОперации,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаПередачиПолучения,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КонтрагентНаименование КАК КонтрагентНаименование,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НаименованиеВалюты,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НаименованиеВалютыКраткое,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодВалюты,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента КАК СуммаДокумента,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС КАК СуммаНДС,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СчетФактураБезНДС,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СводныйКорректировочный КАК СводныйКорректировочный,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ЧастьЖурнала,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КонтрагентИНН,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КонтрагентКПП,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокументаРазницаУменьшение КАК СуммаДокументаРазницаУменьшение,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокументаРазницаУвеличение КАК СуммаДокументаРазницаУвеличение,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение КАК СуммаНДСРазницаУменьшение,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение КАК СуммаНДСРазницаУвеличение,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодСпособаВыставления,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодВидаСделки,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КомитентСсылка,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Комитент КАК Комитент,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КомитентИНН,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КомитентКПП,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерСчетаФактурыКомитента КАК НомерСчетаФактурыКомитента,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаСчетаФактурыКомитента КАК ДатаСчетаФактурыКомитента,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДСИтоговая КАК СуммаНДСИтоговая,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеИтоговая КАК СуммаПоСчетуФактуреРазницаУменьшениеИтоговая,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеИтоговая КАК СуммаПоСчетуФактуреРазницаУвеличениеИтоговая,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеИтоговая КАК СуммаНДСРазницаУменьшениеИтоговая,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеИтоговая КАК СуммаНДСРазницаУвеличениеИтоговая,
	|	ВЫБОР
	|		КОГДА НЕ &ПравилаПостановления735
	|				И ЗаписиРегистраЖурналУчетаСчетовФактур.КорректировочныйСчетФактура
	|			ТОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры
	|		ИНАЧЕ ЗаписиРегистраЖурналУчетаСчетовФактур.НомерИсправления
	|	КОНЕЦ КАК НомерИсправления,
	|	ВЫБОР
	|		КОГДА НЕ &ПравилаПостановления735
	|				И ЗаписиРегистраЖурналУчетаСчетовФактур.КорректировочныйСчетФактура
	|			ТОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры
	|		ИНАЧЕ ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаИсправления
	|	КОНЕЦ КАК ДатаИсправления,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СчетФактураНеВыставляется,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КорректировочныйСчетФактура,
	|	ЕСТЬNULL(ЗаписиРегистраЖурналУчетаСчетовФактур.СчетФактураВыданныйНомер, ЗаписиРегистраЖурналУчетаСчетовФактур.НомерСчетаФактуры) КАК НомерСчетаФактурыДляСортировки,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СводныйКомиссионный,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Регистратор КАК Регистратор,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Сторно КАК Сторно,
	|	ВЫБОР
	|		КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки
	|			ТОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.Период
	|		ИНАЧЕ ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаПередачиПолучения
	|	КОНЕЦ КАК ПериодДляСортировки
	|ИЗ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур КАК ЗаписиРегистраЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ЧастьЖурнала = ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИсправлениеСобственнойОшибки,
	|	ПериодДляСортировки,
	|	НомерСчетаФактурыДляСортировки,
	|	Сторно УБЫВ,
	|	ДатаСчетаФактурыКомитента,
	|	Комитент,
	|	НомерСчетаФактурыКомитента
	|ИТОГИ
	|	МАКСИМУМ(КонтрагентНаименование),
	|	МАКСИМУМ(СуммаДокумента),
	|	СУММА(СуммаНДС),
	|	МАКСИМУМ(СводныйКорректировочный),
	|	СУММА(СуммаДокументаРазницаУменьшение),
	|	СУММА(СуммаДокументаРазницаУвеличение),
	|	СУММА(СуммаНДСРазницаУменьшение),
	|	СУММА(СуммаНДСРазницаУвеличение),
	|	МАКСИМУМ(СуммаНДСИтоговая),
	|	МАКСИМУМ(СуммаПоСчетуФактуреРазницаУменьшениеИтоговая),
	|	МАКСИМУМ(СуммаПоСчетуФактуреРазницаУвеличениеИтоговая),
	|	МАКСИМУМ(СуммаНДСРазницаУменьшениеИтоговая),
	|	МАКСИМУМ(СуммаНДСРазницаУвеличениеИтоговая)
	|ПО
	|	ИсправлениеСобственнойОшибки,
	|	Регистратор,
	|	СчетФактураДокумент,
	|	Сторно";
	
	Если ГруппироватьПоКонтрагентам Тогда
		
		ЗаменяемыйСтандартныйТекст = "ПО
		|	ИсправлениеСобственнойОшибки";
		
		НовыйТекст = "ПО
		|	Контрагент,
		|	ИсправлениеСобственнойОшибки";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ЗаменяемыйСтандартныйТекст, НовыйТекст);
			
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО
			|КонтрагентНаименование, ");
	КонецЕсли;
			
	ВыставленныеСчетаФактуры = Запрос.Выполнить();
	
	// Полученные счета-фактуры сортируем по дате получения, наименованию контрагента,
	// номер счета-фактуры контрагента.
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Организация,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СчетФактураДокумент,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодВидаОперации,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаПередачиПолучения,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Контрагент КАК Контрагент,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КонтрагентНаименование,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НаименованиеВалюты,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НаименованиеВалютыКраткое,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодВалюты,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокумента,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДС,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СчетФактураБезНДС,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ЧастьЖурнала,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КонтрагентИНН,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КонтрагентКПП,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокументаРазницаУменьшение,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаДокументаРазницаУвеличение,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшение,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличение,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодСпособаВыставления,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры,
	|	ВЫБОР
	|		КОГДА НЕ &ПравилаПостановления735
	|				И ЗаписиРегистраЖурналУчетаСчетовФактур.КорректировочныйСчетФактура
	|			ТОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры
	|		ИНАЧЕ ЗаписиРегистраЖурналУчетаСчетовФактур.НомерИсправления
	|	КОНЕЦ КАК НомерИсправления,
	|	ВЫБОР
	|		КОГДА НЕ &ПравилаПостановления735
	|				И ЗаписиРегистраЖурналУчетаСчетовФактур.КорректировочныйСчетФактура
	|			ТОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры
	|		ИНАЧЕ ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаИсправления
	|	КОНЕЦ КАК ДатаИсправления,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СчетФактураНеВыставляется,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КорректировочныйСчетФактура,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КодВидаСделки,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.Комитент,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КомитентИНН,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КомитентКПП,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерСчетаФактурыКомитента,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаСчетаФактурыКомитента,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДСИтоговая,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУменьшениеИтоговая,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаПоСчетуФактуреРазницаУвеличениеИтоговая,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДСРазницаУменьшениеИтоговая,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.СуммаНДСРазницаУвеличениеИтоговая,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки КАК ИсправлениеСобственнойОшибки,
	|	ВЫБОР
	|		КОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.ИсправлениеСобственнойОшибки
	|			ТОГДА ЗаписиРегистраЖурналУчетаСчетовФактур.Период
	|		ИНАЧЕ ЗаписиРегистраЖурналУчетаСчетовФактур.ДатаПередачиПолучения
	|	КОНЕЦ КАК ПериодДляСортировки
	|ИЗ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур КАК ЗаписиРегистраЖурналУчетаСчетовФактур
	|ГДЕ
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.ЧастьЖурнала = ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИсправлениеСобственнойОшибки,
	|	ПериодДляСортировки,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.КонтрагентНаименование,
	|	ЗаписиРегистраЖурналУчетаСчетовФактур.НомерСчетаФактуры";
	
	Если ГруппироватьПоКонтрагентам Тогда
		Запрос.Текст = Запрос.Текст + "
			|ИТОГИ
			|	МАКСИМУМ(СуммаДокумента),
			|	СУММА(СуммаНДС),
			|	МАКСИМУМ(СуммаНДСИтоговая),
			|	МАКСИМУМ(СуммаПоСчетуФактуреРазницаУменьшениеИтоговая),
			|	МАКСИМУМ(СуммаПоСчетуФактуреРазницаУвеличениеИтоговая),
			|	МАКСИМУМ(СуммаНДСРазницаУменьшениеИтоговая),
			|	МАКСИМУМ(СуммаНДСРазницаУвеличениеИтоговая),
			|	МАКСИМУМ(КонтрагентНаименование)
			|ПО
			|	Контрагент";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УПОРЯДОЧИТЬ ПО", "УПОРЯДОЧИТЬ ПО
			|КонтрагентНаименование, ");
	КонецЕсли;
	
	ПолученныеСчетаФактуры = Запрос.Выполнить();

	ДанныеОтчета = Новый Структура();
	ДанныеОтчета.Вставить("ВыставленныеСчетаФактуры", 	ВыставленныеСчетаФактуры);
	ДанныеОтчета.Вставить("ПолученныеСчетаФактуры", 	ПолученныеСчетаФактуры);
	ДанныеОтчета.Вставить("ДополнительныеСвойства", 	ДополнительныеСвойства);

	// СтандартныеПодсистемы.РаботаСКонтрагентами
	ПроверкаКонтрагентов.ЗапомнитьДанныеОтчета(СтруктураПараметров, ДанныеОтчета);
	// Конец СтандартныеПодсистемы.РаботаСКонтрагентами

	Возврат Новый Структура("ВыставленныеСчетаФактуры, ПолученныеСчетаФактуры, ДополнительныеСвойства", 
		ВыставленныеСчетаФактуры, ПолученныеСчетаФактуры, ДополнительныеСвойства);

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	СтруктураПараметров = Новый Структура;
	
	Если ПараметрыОтчета.Свойство("КонецПериодаОтчета") Тогда
		КонецПериодаОтчета = ПараметрыОтчета.КонецПериодаОтчета;
		// Поддержка возможности формирования отчета за произвольный период
		СтруктураПараметров.Вставить("КонецПериодаОтчета", ПараметрыОтчета.КонецПериодаОтчета); 
	Иначе
		КонецПериодаОтчета = КонецКвартала(ПараметрыОтчета.НалоговыйПериод);
	КонецЕсли;

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЖурналУчетаСчетовФактур";

	СведенияОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
		ПараметрыОтчета.Организация, КонецПериодаОтчета);
	НаименованиеОрганизацииДляПечатныхФорм = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
		СведенияОрганизации, "НаименованиеДляПечатныхФорм,");
	ИННОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОрганизации, "ИНН", Ложь);
	КППОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОрганизации, "КПП", Ложь);
		
	Если ПараметрыОтчета.ЗаполнениеДекларации Тогда
		СписокОрганизацийОтбора = ПараметрыОтчета.СписокОрганизаций;
	ИначеЕсли НЕ ПараметрыОтчета.ВключатьОбособленныеПодразделения Тогда
		СписокОрганизацийОтбора = Новый СписокЗначений;
		СписокОрганизацийОтбора.Добавить(ПараметрыОтчета.Организация);
	Иначе
		СписокОрганизацийОтбора = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьСписокОбособленныхПодразделений(
			ПараметрыОтчета.Организация);
	КонецЕсли;
	
	СписокДоступныхОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсеОрганизацииДанныеКоторыхДоступныПоRLS(ложь);
	
	СписокОрганизаций = Новый СписокЗначений;
	
	Для Каждого ОрганизацияСписка Из СписокОрганизацийОтбора Цикл
		Если СписокДоступныхОрганизаций.Найти(ОрганизацияСписка.Значение) <> Неопределено Тогда
			СписокОрганизаций.Добавить(ОрганизацияСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Организация = ?(СписокДоступныхОрганизаций.Найти(ПараметрыОтчета.Организация) <> Неопределено,
		ПараметрыОтчета.Организация, Справочники.Организации.ПустаяСсылка());
		
	ПериодОтчетаСоответствуетНалоговому = УчетНДСПереопределяемый.ПериодОтчетаСоответствуетНалоговому(
		ПараметрыОтчета.Организация, ПараметрыОтчета.НалоговыйПериод, КонецПериодаОтчета);
		
	СтруктураПараметров.Вставить("Организация", Организация);
	СтруктураПараметров.Вставить("НалоговыйПериод", ПараметрыОтчета.НалоговыйПериод);
	СтруктураПараметров.Вставить("НаименованиеОрганизацииДляПечатныхФорм", НаименованиеОрганизацииДляПечатныхФорм);
	СтруктураПараметров.Вставить("СписокОрганизаций", СписокОрганизаций);
	
	СтруктураПараметров.Вставить("СформироватьОтчетПоСтандартнойФорме",
		ПараметрыОтчета.СформироватьОтчетПоСтандартнойФорме И ПериодОтчетаСоответствуетНалоговому);
	СтруктураПараметров.Вставить("ГруппироватьПоКонтрагентам",          ПараметрыОтчета.ГруппироватьПоКонтрагентам);
	СтруктураПараметров.Вставить("ОтбиратьПоКонтрагенту",               ПараметрыОтчета.ОтбиратьПоКонтрагенту);
	СтруктураПараметров.Вставить("КонтрагентДляОтбора",                 ПараметрыОтчета.КонтрагентДляОтбора);
	СтруктураПараметров.Вставить("ЗаполнениеДекларации",                ПараметрыОтчета.ЗаполнениеДекларации);
	
	СтруктураПараметров.Вставить("ЗаполнениеДокумента",
		?(ПараметрыОтчета.Свойство("ЗаполнениеДокумента"), ПараметрыОтчета.ЗаполнениеДокумента, Ложь));
	СтруктураПараметров.Вставить("ФорматПоПостановлению735",
		?(ПараметрыОтчета.Свойство("ФорматПоПостановлению735"), ПараметрыОтчета.ФорматПоПостановлению735, Ложь));
	СтруктураПараметров.Вставить("ПравилаЗаполнения", 
		?(ПараметрыОтчета.Свойство("ПравилаЗаполнения"), ПараметрыОтчета.ПравилаЗаполнения, "2017Кв1"));
	
	ИнициализироватьТаблицыДанныхНДС(СтруктураПараметров);
	
	ВерсияПостановленияНДС1137 = УчетНДСПереопределяемый.ВерсияПостановленияНДС1137(КонецПериодаОтчета);
	Если ВерсияПостановленияНДС1137 = 3 Тогда
		Если СтруктураПараметров.ЗаполнениеДекларации
		   И СтруктураПараметров.ПравилаЗаполнения = "2017Кв1" Тогда
			Макет = ПолучитьОбщийМакет("ЖурналУчетаСчетовФактур1137_2017");
		Иначе
			Макет = ПолучитьОбщийМакет("ЖурналУчетаСчетовФактур735");
		КонецЕсли;
	Иначе
		Макет = ПолучитьОбщийМакет("ЖурналУчетаСчетовФактур1137");
	КонецЕсли; 
	
	ОткрыватьПомощникИзМакета = УчетНДСПереопределяемый.ОткрыватьПомощникИзМакета(
		СтруктураПараметров.Организация, КонецПериодаОтчета)
		И НЕ СтруктураПараметров.ЗаполнениеДекларации
		И НЕ СтруктураПараметров.ЗаполнениеДокумента;
	СтруктураПараметров.Вставить("ОткрыватьПомощникИзМакета", ОткрыватьПомощникИзМакета);
	
	СтруктураПараметров.Вставить("ДанныеДляПроверкиКонтрагентов", ПараметрыОтчета.ДанныеДляПроверкиКонтрагентов);
	СтруктураПараметров.Вставить("ЭтоЖурналУчетаСчетовФактур",    ПараметрыОтчета.ЭтоЖурналУчетаСчетовФактур);
	
	СтруктураЗаписейЖурнала = Неопределено;
	// СтандартныеПодсистемы.РаботаСКонтрагентами
	Если ПроверкаКонтрагентов.ФормироватьОтчетСтандартнымСпособом(СтруктураПараметров, СтруктураЗаписейЖурнала) Тогда
	// Конец СтандартныеПодсистемы.РаботаСКонтрагентами
		СтруктураЗаписейЖурнала = ПолучитьЗаписиЖурналаСчетовФактур(СтруктураПараметров);
	КонецЕсли;
	
	Если СтруктураПараметров.ОткрыватьПомощникИзМакета Тогда
		ТабличныйДокумент.Вывести(УчетНДСПереопределяемый.ПолучитьМакетОткрытияПомощника(
			СтруктураПараметров.Организация, КонецПериодаОтчета));
	КонецЕсли;
	
	// ШАПКА
	
	Отступ = Макет.ПолучитьОбласть("Отступ");
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		
		СтруктураСекций = Новый Структура();
		СтруктураСекций.Вставить("ШапкаРаздел10", Макет.ПолучитьОбласть("ШапкаРаздел10"));
		ШапкаТаблицыРаздел10 = Макет.ПолучитьОбласть("ШапкаТаблицыРаздел10");
		ШапкаТаблицыРаздел10.Область("НомераГрафЖурналЧ1").Видимость = Ложь;
		СтруктураСекций.Вставить("ШапкаТаблицыРаздел10", ШапкаТаблицыРаздел10);
		
		ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаРаздел10);
		ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаТаблицыРаздел10);
		
	Иначе
		
		Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
			Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
			ТабличныйДокумент.Вывести(Секция);
		КонецЕсли;
		
		Шапка = Макет.ПолучитьОбласть("Шапка");
		
		Шапка.Параметры.Организация = НаименованиеОрганизацииДляПечатныхФорм;
		Шапка.Параметры.ИННКПП = ИННОрганизации 
			+ ?(НЕ ЗначениеЗаполнено(КППОрганизации), "", ("/" + КППОрганизации));
		
		Если ПериодОтчетаСоответствуетНалоговому Тогда
			Шапка.Параметры.Квартал = Формат(КонецПериодаОтчета, "ДФ = к");
			Шапка.Параметры.Год     = Формат(КонецПериодаОтчета, "ДФ = гггг");
		Иначе
			Шапка.Параметры.Квартал = "-";
			Шапка.Параметры.Год     = "----";
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(Шапка);
		ТабличныйДокумент.Вывести(Отступ);
		
		Часть1Заголовок = Макет.ПолучитьОбласть("Часть1Заголовок");
		Если Часть1Заголовок.Области.Найти("НомераГрафКДекларацияР10") <> Неопределено Тогда
			Часть1Заголовок.Область("НомераГрафКДекларацияР10").Видимость = Ложь;
		КонецЕсли;
		ТабличныйДокумент.Вывести(Часть1Заголовок);
		
	КонецЕсли;
	
#Область Часть1

	Часть1Строка_Обычная = Макет.ПолучитьОбласть("Часть1Строка");
	Если ВерсияПостановленияНДС1137 = 3 Тогда
		Часть1Строка_Многострочная1 = Макет.ПолучитьОбласть("Часть1Строка_Многострочная1");
		Часть1Строка_Многострочная2 = Макет.ПолучитьОбласть("Часть1Строка_Многострочная2");
		Часть1Строка_Многострочная3 = Макет.ПолучитьОбласть("Часть1Строка_Многострочная3");
	КонецЕсли;
	
	СтрокиЧасть1 = СтруктураЗаписейЖурнала.ВыставленныеСчетаФактуры;
	
	НомерПП = 1;
	СчетчикСтрокТекущегоСегмента = 0;
	
#Область ГруппировкаПоКонтрагентам

	Если НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме И ПараметрыОтчета.ГруппироватьПоКонтрагентам Тогда
		
		// Режим построения с группировкой по контрагенту.
		СекцияКонтрагента = Макет.ПолучитьОбласть("Контрагент");
		ГруппировкаПоКонтрагенту = СтрокиЧасть1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если ГруппировкаПоКонтрагенту.Количество() > 0 Тогда
			
			ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
			
			Пока ГруппировкаПоКонтрагенту.Следующий() Цикл
				Если УчетНДС.ВыводитьСтроку(СтруктураПараметров, ГруппировкаПоКонтрагенту, Истина) Тогда
					
					СекцияКонтрагента.Параметры.Заполнить(ГруппировкаПоКонтрагенту);
					ТабличныйДокумент.Вывести(СекцияКонтрагента, 1);
					
					ГруппировкаПоИсходнымИИсправительнымЗаписям = ГруппировкаПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ГруппировкаПоИсходнымИИсправительнымЗаписям.Следующий() Цикл
						ГруппировкаПоСчетамФактурам = ГруппировкаПоИсходнымИИсправительнымЗаписям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ГруппировкаПоСчетамФактурам.Следующий() Цикл
							
							ГруппировкаПоРегистратору = ГруппировкаПоСчетамФактурам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ГруппировкаПоРегистратору.Следующий() Цикл
								ГруппировкаПоПризнакуСторно = ГруппировкаПоРегистратору.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ГруппировкаПоПризнакуСторно.Следующий() Цикл
									
									СчетаФактурыЗаписи = ГруппировкаПоПризнакуСторно.Выбрать();
									КоличествоСгруппированных = СчетаФактурыЗаписи.Количество();
									
									НомерСтрокиВГруппировке = 1;
									// Итоговые данные по счету-фактуре.
									СуммаНДСИтоговая 							 = ГруппировкаПоПризнакуСторно.СуммаНДСИтоговая;
									СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = ГруппировкаПоПризнакуСторно.СуммаПоСчетуФактуреРазницаУменьшениеИтоговая;
									СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = ГруппировкаПоПризнакуСторно.СуммаПоСчетуФактуреРазницаУвеличениеИтоговая;
									СуммаНДСРазницаУменьшениеИтоговая 			 = ГруппировкаПоПризнакуСторно.СуммаНДСРазницаУменьшениеИтоговая;
									СуммаНДСРазницаУвеличениеИтоговая 			 = ГруппировкаПоПризнакуСторно.СуммаНДСРазницаУвеличениеИтоговая;
									
									Пока СчетаФактурыЗаписи.Следующий() Цикл
										Если УчетНДС.ВыводитьСтроку(СтруктураПараметров, СчетаФактурыЗаписи) Тогда
											ВыводитьОстатокПоСчетуФактуре = Ложь;
											
											Если ВерсияПостановленияНДС1137 = 3 Тогда
												// Пересчитаем остаток по счету-фактуре.
												СуммаНДСИтоговая 							 = СуммаНДСИтоговая - СчетаФактурыЗаписи.СуммаНДС;
												СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = СуммаПоСчетуФактуреРазницаУменьшениеИтоговая - СчетаФактурыЗаписи.СуммаДокументаРазницаУменьшение;
												СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = СуммаПоСчетуФактуреРазницаУвеличениеИтоговая - СчетаФактурыЗаписи.СуммаДокументаРазницаУвеличение;
												СуммаНДСРазницаУменьшениеИтоговая 			 = СуммаНДСРазницаУменьшениеИтоговая - СчетаФактурыЗаписи.СуммаНДСРазницаУменьшение;
												СуммаНДСРазницаУвеличениеИтоговая 			 = СуммаНДСРазницаУвеличениеИтоговая - СчетаФактурыЗаписи.СуммаНДСРазницаУвеличение;
											КонецЕсли;
											
											Если КоличествоСгруппированных > 1 
												И ВерсияПостановленияНДС1137 = 3
												И НЕ СчетаФактурыЗаписи.СводныйКорректировочный Тогда
												
												// Переопределим макет
												Если НомерСтрокиВГруппировке = 1 Тогда 
													Часть1Строка = Часть1Строка_Многострочная1;
													Часть1Строка.Параметры.Ном = НомерПП;
													НомерПП = НомерПП + 1;
												Иначе
													Если НомерСтрокиВГруппировке < КоличествоСгруппированных Тогда
														Часть1Строка = Часть1Строка_Многострочная2;
													Иначе
														// Последняя строка
														Если НЕ СчетаФактурыЗаписи.ИсправлениеСобственнойОшибки
															И НЕ СчетаФактурыЗаписи.СводныйКомиссионный 
															И (СуммаНДСИтоговая <> 0
															ИЛИ СуммаПоСчетуФактуреРазницаУменьшениеИтоговая <> 0
															ИЛИ СуммаПоСчетуФактуреРазницаУвеличениеИтоговая <> 0
															ИЛИ СуммаНДСРазницаУменьшениеИтоговая <> 0
															ИЛИ СуммаНДСРазницаУвеличениеИтоговая <> 0) Тогда
															ВыводитьОстатокПоСчетуФактуре = Истина;
															Часть1Строка = Часть1Строка_Многострочная2;
														Иначе
															Часть1Строка = Часть1Строка_Многострочная3;
														КонецЕсли;
													КонецЕсли;
												КонецЕсли;
												
											Иначе
												
												Если ВерсияПостановленияНДС1137 = 3
													И НЕ СчетаФактурыЗаписи.ИсправлениеСобственнойОшибки
													И НЕ СчетаФактурыЗаписи.СводныйКорректировочный
													И НЕ СчетаФактурыЗаписи.СводныйКомиссионный
													И (СуммаНДСИтоговая <> 0
													ИЛИ СуммаПоСчетуФактуреРазницаУменьшениеИтоговая <> 0
													ИЛИ СуммаПоСчетуФактуреРазницаУвеличениеИтоговая <> 0
													ИЛИ СуммаНДСРазницаУменьшениеИтоговая <> 0
													ИЛИ СуммаНДСРазницаУвеличениеИтоговая <> 0) Тогда
													// Если пока только один СФ от комитента.
													ВыводитьОстатокПоСчетуФактуре = Истина;
													Часть1Строка = Часть1Строка_Многострочная1;
												Иначе
													Часть1Строка = Часть1Строка_Обычная;
												КонецЕсли;
												
												Часть1Строка.Параметры.Ном = НомерПП;
												НомерПП = НомерПП + 1;
												
											КонецЕсли;
											
											ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(
												Часть1Строка.Параметры, СчетаФактурыЗаписи, СтруктураПараметров, , НомерПП);
											ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(Часть1Строка, 2);
											УчетНДС.ДобавитьКонтрагентаНаПроверку(СтруктураПараметров, СчетаФактурыЗаписи, ОбластьТабличногоДокумента);
											
											Если ВыводитьОстатокПоСчетуФактуре Тогда 
												СтрокаОстаток = Макет.ПолучитьОбласть("Часть1Строка_Многострочная3");
												СтрокаОстаток.Параметры.Валюта = СокрП(СчетаФактурыЗаписи.НаименованиеВалюты) + ", " + СчетаФактурыЗаписи.КодВалюты;	
												СтрокаОстаток.Параметры.СуммаДокумента = ?(ГруппировкаПоПризнакуСторно.СуммаДокумента = 0, "", ГруппировкаПоПризнакуСторно.СуммаДокумента);
												СтрокаОстаток.Параметры.СуммаНДС = ?(СуммаНДСИтоговая = 0, "", СуммаНДСИтоговая);
												СтрокаОстаток.Параметры.СуммаДокументаРазницаУменьшение = ?(СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУменьшениеИтоговая);
												СтрокаОстаток.Параметры.СуммаДокументаРазницаУвеличение = ?(СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУвеличениеИтоговая);
												СтрокаОстаток.Параметры.СуммаНДСРазницаУменьшение = ?(СуммаНДСРазницаУменьшениеИтоговая = 0, "", СуммаНДСРазницаУменьшениеИтоговая);
												СтрокаОстаток.Параметры.СуммаНДСРазницаУвеличение = ?(СуммаНДСРазницаУвеличениеИтоговая = 0, "", СуммаНДСРазницаУвеличениеИтоговая);
												ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(СтрокаОстаток, 2);
												УчетНДС.ДобавитьКонтрагентаНаПроверку(СтруктураПараметров, СчетаФактурыЗаписи, ОбластьТабличногоДокумента);
											КонецЕсли;
											
											НомерСтрокиВГруппировке = НомерСтрокиВГруппировке + 1;
										КонецЕсли;
									КонецЦикла;
								КонецЦикла;
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
		КонецЕсли;
		
#КонецОбласти
	
#Область СтандартнаяФорма
	
	Иначе
		
		ГруппировкаПоИсходнымИИсправительнымЗаписям = СтрокиЧасть1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ГруппировкаПоИсходнымИИсправительнымЗаписям.Следующий() Цикл
			ГруппировкаПоСчетамФактурам = ГруппировкаПоИсходнымИИсправительнымЗаписям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ГруппировкаПоСчетамФактурам.Следующий() Цикл
				
				ГруппировкаПоРегистратору = ГруппировкаПоСчетамФактурам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ГруппировкаПоРегистратору.Следующий() Цикл
					ГруппировкаПоПризнакуСторно = ГруппировкаПоРегистратору.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ГруппировкаПоПризнакуСторно.Следующий() Цикл
						СчетаФактурыЗаписи = ГруппировкаПоПризнакуСторно.Выбрать();
						КоличествоСгруппированных = СчетаФактурыЗаписи.Количество();
						
						НомерСтрокиВГруппировке = 1;
						// Итоговые данные по счету-фактуре
						СуммаНДСИтоговая                             = ГруппировкаПоПризнакуСторно.СуммаНДСИтоговая;
						СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = ГруппировкаПоПризнакуСторно.СуммаПоСчетуФактуреРазницаУменьшениеИтоговая;
						СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = ГруппировкаПоПризнакуСторно.СуммаПоСчетуФактуреРазницаУвеличениеИтоговая;
						СуммаНДСРазницаУменьшениеИтоговая            = ГруппировкаПоПризнакуСторно.СуммаНДСРазницаУменьшениеИтоговая;
						СуммаНДСРазницаУвеличениеИтоговая            = ГруппировкаПоПризнакуСторно.СуммаНДСРазницаУвеличениеИтоговая;
						
						Пока СчетаФактурыЗаписи.Следующий() Цикл
							Если УчетНДС.ВыводитьСтроку(СтруктураПараметров, СчетаФактурыЗаписи) Тогда
								
								ВыводитьОстатокПоСчетуФактуре = Ложь;
								
								Если ВерсияПостановленияНДС1137 = 3 Тогда
									// Пересчитаем остаток по счету-фактуре
									СуммаНДСИтоговая                             = СуммаНДСИтоговая - СчетаФактурыЗаписи.СуммаНДС;
									СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = СуммаПоСчетуФактуреРазницаУменьшениеИтоговая - СчетаФактурыЗаписи.СуммаДокументаРазницаУменьшение;
									СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = СуммаПоСчетуФактуреРазницаУвеличениеИтоговая - СчетаФактурыЗаписи.СуммаДокументаРазницаУвеличение;
									СуммаНДСРазницаУменьшениеИтоговая            = СуммаНДСРазницаУменьшениеИтоговая - СчетаФактурыЗаписи.СуммаНДСРазницаУменьшение;
									СуммаНДСРазницаУвеличениеИтоговая            = СуммаНДСРазницаУвеличениеИтоговая - СчетаФактурыЗаписи.СуммаНДСРазницаУвеличение;
								КонецЕсли;
								
								Если КоличествоСгруппированных > 1 
									И ВерсияПостановленияНДС1137 = 3
									И НЕ СчетаФактурыЗаписи.СводныйКорректировочный Тогда
									
									// Переопределим макет
									Если НомерСтрокиВГруппировке = 1 Тогда 
										Часть1Строка = Часть1Строка_Многострочная1;
										Часть1Строка.Параметры.Ном = НомерПП;
										НомерПП = НомерПП + 1;
										СчетчикСтрокТекущегоСегмента = СчетчикСтрокТекущегоСегмента + 1;
									Иначе
										Если НомерСтрокиВГруппировке < КоличествоСгруппированных Тогда
											Часть1Строка = Часть1Строка_Многострочная2;
										Иначе
											// Последняя строка
											Если НЕ СчетаФактурыЗаписи.ИсправлениеСобственнойОшибки
												И НЕ СчетаФактурыЗаписи.СводныйКомиссионный
												И (СуммаНДСИтоговая <> 0
												ИЛИ СуммаПоСчетуФактуреРазницаУменьшениеИтоговая <> 0
												ИЛИ СуммаПоСчетуФактуреРазницаУвеличениеИтоговая <> 0
												ИЛИ СуммаНДСРазницаУменьшениеИтоговая <> 0
												ИЛИ СуммаНДСРазницаУвеличениеИтоговая <> 0) Тогда
												ВыводитьОстатокПоСчетуФактуре = Истина;
												Часть1Строка = Часть1Строка_Многострочная2;
											Иначе
												Часть1Строка = Часть1Строка_Многострочная3;
											КонецЕсли;
										КонецЕсли;
									КонецЕсли;
									
								Иначе
									
									Если ВерсияПостановленияНДС1137 = 3
										И НЕ СчетаФактурыЗаписи.ИсправлениеСобственнойОшибки
										И НЕ СчетаФактурыЗаписи.СводныйКорректировочный
										И НЕ СчетаФактурыЗаписи.СводныйКомиссионный
										И (СуммаНДСИтоговая <> 0
										ИЛИ СуммаПоСчетуФактуреРазницаУменьшениеИтоговая <> 0
										ИЛИ СуммаПоСчетуФактуреРазницаУвеличениеИтоговая <> 0
										ИЛИ СуммаНДСРазницаУменьшениеИтоговая <> 0
										ИЛИ СуммаНДСРазницаУвеличениеИтоговая <> 0) Тогда
										// Если пока только один СФ от комитента
										ВыводитьОстатокПоСчетуФактуре = Истина;
										Часть1Строка = Часть1Строка_Многострочная1;
									Иначе
										Часть1Строка = Часть1Строка_Обычная;
									КонецЕсли;
									
									Часть1Строка.Параметры.Ном = НомерПП;
									НомерПП = НомерПП + 1;
									СчетчикСтрокТекущегоСегмента = СчетчикСтрокТекущегоСегмента + 1;
								КонецЕсли;
								
								ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(
									Часть1Строка.Параметры, СчетаФактурыЗаписи, СтруктураПараметров, , НомерПП - 1);
								Часть1Строка.Область(1, , Часть1Строка.ВысотаТаблицы).Имя = "Строка_" + Формат(НомерПП - 1, "ЧГ=");
								ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(Часть1Строка);
								
								УчетНДС.ДобавитьКонтрагентаНаПроверку(СтруктураПараметров, СчетаФактурыЗаписи, ОбластьТабличногоДокумента);
								
								Если ВыводитьОстатокПоСчетуФактуре Тогда 
									
									Если СтруктураПараметров.ЗаполнениеДекларации Тогда
										
										СтруктураСвПосрДеят = Новый Структура(
										"НомСчФОтПрод,ДатаСчФОтПрод,ОКВ,СтоимТовСчФВс,СумНДССчФ,РазСтКСчФУм,РазСтКСчФУв,РазНДСКСчФУм,РазНДСКСчФУв,СвПрод");
										
										СтруктураСвПосрДеят.ОКВ           = СчетаФактурыЗаписи.КодВалюты;
										
										СтруктураСвПосрДеят.СтоимТовСчФВс = ?(ГруппировкаПоПризнакуСторно.СуммаДокумента = 0,
											"", ГруппировкаПоПризнакуСторно.СуммаДокумента);
										СтруктураСвПосрДеят.СумНДССчФ     = ?(СуммаНДСИтоговая = 0, "", СуммаНДСИтоговая);
										
										СтруктураСвПосрДеят.РазСтКСчФУм   = ?(СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУменьшениеИтоговая);
										СтруктураСвПосрДеят.РазСтКСчФУв   = ?(СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУвеличениеИтоговая);
										СтруктураСвПосрДеят.РазНДСКСчФУм  = ?(СуммаНДСРазницаУменьшениеИтоговая = 0, "", СуммаНДСРазницаУменьшениеИтоговая);
										СтруктураСвПосрДеят.РазНДСКСчФУв  = ?(СуммаНДСРазницаУвеличениеИтоговая = 0, "", СуммаНДСРазницаУвеличениеИтоговая);
										
										СтрокаРаздела = СтруктураПараметров.ТаблицаРаздел10[СчетчикСтрокТекущегоСегмента - 1];
										Если СтруктураПараметров.ПравилаЗаполнения = "2015Кв1" Тогда
											МассивСвПосрДеят = СтрокаРаздела.СвПосрДеят;
										ИначеЕсли СтруктураПараметров.ПравилаЗаполнения = "2017Кв1" Тогда
											МассивСвПосрДеят = СтрокаРаздела.СвСчФОтПрод;
										КонецЕсли;
										МассивСвПосрДеят.Добавить(СтруктураСвПосрДеят);
										
									КонецЕсли;
									
									СтрокаОстаток = Макет.ПолучитьОбласть("Часть1Строка_Многострочная3");
									СтрокаОстаток.Параметры.Валюта = СокрП(СчетаФактурыЗаписи.НаименованиеВалюты) + ", " + СчетаФактурыЗаписи.КодВалюты;
									СтрокаОстаток.Параметры.СуммаДокумента = ?(ГруппировкаПоПризнакуСторно.СуммаДокумента = 0,
										"", ГруппировкаПоПризнакуСторно.СуммаДокумента);
									СтрокаОстаток.Параметры.СуммаНДС = ?(СуммаНДСИтоговая = 0, "", СуммаНДСИтоговая);
									СтрокаОстаток.Параметры.СуммаДокументаРазницаУменьшение = ?(СуммаПоСчетуФактуреРазницаУменьшениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУменьшениеИтоговая);
									СтрокаОстаток.Параметры.СуммаДокументаРазницаУвеличение = ?(СуммаПоСчетуФактуреРазницаУвеличениеИтоговая = 0, "", СуммаПоСчетуФактуреРазницаУвеличениеИтоговая);
									СтрокаОстаток.Параметры.СуммаНДСРазницаУменьшение = ?(СуммаНДСРазницаУменьшениеИтоговая = 0, "", СуммаНДСРазницаУменьшениеИтоговая);
									СтрокаОстаток.Параметры.СуммаНДСРазницаУвеличение = ?(СуммаНДСРазницаУвеличениеИтоговая = 0, "", СуммаНДСРазницаУвеличениеИтоговая);
									ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(СтрокаОстаток);
									УчетНДС.ДобавитьКонтрагентаНаПроверку(СтруктураПараметров, СчетаФактурыЗаписи, ОбластьТабличногоДокумента);
								КонецЕсли;
								
								НомерСтрокиВГруппировке = НомерСтрокиВГруппировке + 1;
								
								Если СтруктураПараметров.ЗаполнениеДекларации 
									И СчетчикСтрокТекущегоСегмента = ПараметрыОтчета.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС Тогда
									
									// Запишем сегмент
									ПерваяСтрокаСегмента = НомерПП - СчетчикСтрокТекущегоСегмента;

									//++ НЕ УТ
									
									РегламентированнаяОтчетность.ЗаписатьСегментДанныхРазделаДекларацииНДС(
									ПараметрыОтчета.СсылкаНаДекларацию,
									"Раздел10",
									ПерваяСтрокаСегмента,
									СтруктураПараметров.ТаблицаРаздел10);
									
									РегламентированнаяОтчетность.ЗаписатьСегментТабличногоДокументаРазделаДекларацииНДС(
									ПараметрыОтчета.СсылкаНаДекларацию,
									"Раздел10",
									ПерваяСтрокаСегмента,
									ТабличныйДокумент);

									//-- НЕ УТ
									
									// Очистим табличный документ и таблицу
									ТабличныйДокумент.Очистить();
									ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаРаздел10);
									ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаТаблицыРаздел10);
									
									СтруктураПараметров.ТаблицаРаздел10.Очистить();
									
									// Обнулим счетчик текущего сегмента
									СчетчикСтрокТекущегоСегмента = 0;
									
								КонецЕсли;
								
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
#КонецОбласти 
	
	// Запишем последний сегмент
	
	Если СтруктураПараметров.ЗаполнениеДекларации
		И СчетчикСтрокТекущегоСегмента <> 0
		И СчетчикСтрокТекущегоСегмента <> ПараметрыОтчета.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС Тогда
		
		// Записать сегменты
		ПерваяСтрокаСегмента = НомерПП - СчетчикСтрокТекущегоСегмента;

		//++ НЕ УТ
		
		РегламентированнаяОтчетность.ЗаписатьСегментДанныхРазделаДекларацииНДС(
			ПараметрыОтчета.СсылкаНаДекларацию,
			"Раздел10",
			ПерваяСтрокаСегмента,
			СтруктураПараметров.ТаблицаРаздел10);
		
		РегламентированнаяОтчетность.ЗаписатьСегментТабличногоДокументаРазделаДекларацииНДС(
			ПараметрыОтчета.СсылкаНаДекларацию,
			"Раздел10",
			ПерваяСтрокаСегмента,
			ТабличныйДокумент);

		//-- НЕ УТ
		
	КонецЕсли;
	
#КонецОбласти

#Область Часть2

	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
	
		ТабличныйДокумент = Новый ТабличныйДокумент;
		
		СтруктураСекций.Вставить("ШапкаРаздел11", Макет.ПолучитьОбласть("ШапкаРаздел11"));
		ШапкаТаблицыРаздел11 = Макет.ПолучитьОбласть("ШапкаТаблицыРаздел11");
		ШапкаТаблицыРаздел11.Область("НомераГрафЖурналЧ2").Видимость = Ложь;
		СтруктураСекций.Вставить("ШапкаТаблицыРаздел11", ШапкаТаблицыРаздел11);
		ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаРаздел11);
		ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаТаблицыРаздел11);
		
	Иначе
		
		ТабличныйДокумент.Вывести(Отступ);
		Часть2Заголовок = Макет.ПолучитьОбласть("Часть2Заголовок");
		Если Часть2Заголовок.Области.Найти("НомераГрафКДекларацияР11") <> Неопределено Тогда
			Часть2Заголовок.Область("НомераГрафКДекларацияР11").Видимость = Ложь;
		КонецЕсли;
		ТабличныйДокумент.Вывести(Часть2Заголовок);
		
	КонецЕсли;
	
	Часть2Строка = Макет.ПолучитьОбласть("Часть2Строка");
	
	СтрокиЧасть2 = СтруктураЗаписейЖурнала.ПолученныеСчетаФактуры;
	ДополнительныеСвойства = СтруктураЗаписейЖурнала.ДополнительныеСвойства;
	ДополнительныеСвойства.Индексы.Добавить("СчетФактура");
	
	НомерПП = 1;
	СчетчикСтрокТекущегоСегмента = 0;
	
	Если НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме И ПараметрыОтчета.ГруппироватьПоКонтрагентам Тогда
		// Режим построения с группировкой по контрагенту.
		СекцияКонтрагента = Макет.ПолучитьОбласть("Контрагент");
		ГруппировкаПоКонтрагенту = СтрокиЧасть2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ГруппировкаПоКонтрагенту.Количество() > 0 Тогда
			ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
			Пока ГруппировкаПоКонтрагенту.Следующий() Цикл
				Если УчетНДС.ВыводитьСтроку(СтруктураПараметров, ГруппировкаПоКонтрагенту, Истина) Тогда
					СекцияКонтрагента.Параметры.Заполнить(ГруппировкаПоКонтрагенту);
					ТабличныйДокумент.Вывести(СекцияКонтрагента, 1);
					ГруппировкаПоСчетуФактуре = ГруппировкаПоКонтрагенту.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ГруппировкаПоСчетуФактуре.Следующий() Цикл
						Если УчетНДС.ВыводитьСтроку(СтруктураПараметров, ГруппировкаПоСчетуФактуре) Тогда
							ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(
								Часть2Строка.Параметры, ГруппировкаПоСчетуФактуре, СтруктураПараметров, ДополнительныеСвойства, НомерПП);
							ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(Часть2Строка, 2);
							УчетНДС.ДобавитьКонтрагентаНаПроверку(СтруктураПараметров, ГруппировкаПоСчетуФактуре, ОбластьТабличногоДокумента);
							НомерПП = НомерПП + 1;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
		КонецЕсли;
	Иначе
		
		Выборка = СтрокиЧасть2.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если УчетНДС.ВыводитьСтроку(СтруктураПараметров, Выборка) Тогда 
				ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(
					Часть2Строка.Параметры, Выборка, СтруктураПараметров, ДополнительныеСвойства, НомерПП);
				Часть2Строка.Область(1, , Часть2Строка.ВысотаТаблицы).Имя = "Строка_" + Формат(НомерПП, "ЧГ=");
				Часть2Строка.Параметры.Ном = НомерПП;
				ОбластьТабличногоДокумента = ТабличныйДокумент.Вывести(Часть2Строка);
				УчетНДС.ДобавитьКонтрагентаНаПроверку(СтруктураПараметров, Выборка, ОбластьТабличногоДокумента);
				
				НомерПП = НомерПП + 1;
				СчетчикСтрокТекущегоСегмента = СчетчикСтрокТекущегоСегмента + 1;
				
				// Запись сегмента.
				
				Если СтруктураПараметров.ЗаполнениеДекларации 
					И СчетчикСтрокТекущегоСегмента = ПараметрыОтчета.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС Тогда
					
					// Запишем сегмент.
					ПерваяСтрокаСегмента = НомерПП - СчетчикСтрокТекущегоСегмента;

					//++ НЕ УТ
					
					РегламентированнаяОтчетность.ЗаписатьСегментДанныхРазделаДекларацииНДС(
						ПараметрыОтчета.СсылкаНаДекларацию,
						"Раздел11",
						ПерваяСтрокаСегмента,
						СтруктураПараметров.ТаблицаРаздел11);
					
					РегламентированнаяОтчетность.ЗаписатьСегментТабличногоДокументаРазделаДекларацииНДС(
						ПараметрыОтчета.СсылкаНаДекларацию,
						"Раздел11",
						ПерваяСтрокаСегмента,
						ТабличныйДокумент);

					//-- НЕ УТ
					
					// Очистим табличный документ и таблицу.
					ТабличныйДокумент.Очистить();
					ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаРаздел11);
					ТабличныйДокумент.Вывести(СтруктураСекций.ШапкаТаблицыРаздел11);
					
					СтруктураПараметров.ТаблицаРаздел11.Очистить();
					
					// Обнулим счетчик текущего сегмента.
					СчетчикСтрокТекущегоСегмента = 0;
					
				КонецЕсли;
				
			КонецЕсли;
		
		КонецЦикла;
		
	КонецЕсли;
	
	// Запишем последний сегмент.
	
	Если СтруктураПараметров.ЗаполнениеДекларации
		И СчетчикСтрокТекущегоСегмента <> 0
		И СчетчикСтрокТекущегоСегмента <> ПараметрыОтчета.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС Тогда
		
		// Записать сегменты.
		ПерваяСтрокаСегмента = НомерПП - СчетчикСтрокТекущегоСегмента;

		//++ НЕ УТ
		
		РегламентированнаяОтчетность.ЗаписатьСегментДанныхРазделаДекларацииНДС(
			ПараметрыОтчета.СсылкаНаДекларацию,
			"Раздел11",
			ПерваяСтрокаСегмента,
			СтруктураПараметров.ТаблицаРаздел11);
		
		РегламентированнаяОтчетность.ЗаписатьСегментТабличногоДокументаРазделаДекларацииНДС(
			ПараметрыОтчета.СсылкаНаДекларацию,
			"Раздел11",
			ПерваяСтрокаСегмента,
			ТабличныйДокумент);

		//-- НЕ УТ
		
	КонецЕсли;

	ТабличныйДокумент.Вывести(Отступ);
	
#КонецОбласти
	
	// ПОДВАЛ
	
	ОтветственныеЛица = ОтветственныеЛицаБП.ОтветственныеЛица(СтруктураПараметров.Организация, КонецКвартала(СтруктураПараметров.НалоговыйПериод));
	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(СтруктураПараметров.Организация) Тогда
		ИмяРук = ОтветственныеЛица.РуководительПредставление;
		ИмяОрг = "";
		Свидетельство = "";
	Иначе
		ИмяРук = "";
		ИмяОрг = ОтветственныеЛица.РуководительПредставление;
		СведенияОЮрФизЛице = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
			СтруктураПараметров.Организация, КонецПериодаОтчета);
		Свидетельство = СведенияОЮрФизЛице.Свидетельство;
	КонецЕсли;
		
	Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме
		И НЕ СтруктураПараметров.ЗаполнениеДекларации Тогда
		
		Подвал = Макет.ПолучитьОбласть("Подвал");
		
		Подвал.Параметры.ИмяРук = ИмяРук;
		Подвал.Параметры.ИмяОрг = ИмяОрг;
		Подвал.Параметры.Свидетельство = Свидетельство;

		ТабличныйДокумент.Вывести(Подвал);
		
	КонецЕсли;
	
	УправлениеКолонтитулами.УстановитьКолонтитулы(ТабличныйДокумент);
	
	СтруктураПараметров.Вставить("СформированныйЖурнал", ТабличныйДокумент);
	
	Результат = СтруктураПараметров;
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьТаблицыДанныхНДС(СтруктураПараметров)
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда 
		
		Раздел10 = Новый ТаблицаЗначений; // Часть 1: выставленные счета-фактуры
		
		Раздел10.Колонки.Добавить("НомерПор", ОбщегоНазначения.ОписаниеТипаЧисло(12, 0));
		
		
		Раздел10.Колонки.Добавить("НомСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
		Раздел10.Колонки.Добавить("ДатаСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		Раздел10.Колонки.Добавить("НомИспрСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
		Раздел10.Колонки.Добавить("ДатаИспрСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		Раздел10.Колонки.Добавить("НомКСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
		Раздел10.Колонки.Добавить("ДатаКСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		Раздел10.Колонки.Добавить("НомИспрКСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
		Раздел10.Колонки.Добавить("ДатаИспрКСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		Раздел10.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
		
		Раздел10.Колонки.Добавить("СвПокуп");
		
		Если СтруктураПараметров.ПравилаЗаполнения = "2015Кв1" Тогда
			Раздел10.Колонки.Добавить("ДатаВыст", ОбщегоНазначения.ОписаниеТипаСтрока(10));
			Раздел10.Колонки.Добавить("СвПосрДеят");
		ИначеЕсли СтруктураПараметров.ПравилаЗаполнения = "2017Кв1" Тогда
			Раздел10.Колонки.Добавить("СвСчФОтПрод");
		КонецЕсли;
		
		Раздел10.Колонки.Добавить("ДополнительныеСведения");
		
		Раздел10.Колонки.Добавить("СуммаПосрДеят", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
		
		Раздел11 = Новый ТаблицаЗначений; // Часть 2: полученные счета-фактуры
		
		Раздел11.Колонки.Добавить("НомерПор", ОбщегоНазначения.ОписаниеТипаЧисло(12, 0));
		
		Если СтруктураПараметров.ПравилаЗаполнения = "2015Кв1" Тогда
			Раздел11.Колонки.Добавить("ДатаПолуч", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		КонецЕсли;
		
		Раздел11.Колонки.Добавить("НомСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
		Раздел11.Колонки.Добавить("ДатаСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		Раздел11.Колонки.Добавить("НомИспрСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
		Раздел11.Колонки.Добавить("ДатаИспрСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		Раздел11.Колонки.Добавить("НомКСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(0));
		Раздел11.Колонки.Добавить("ДатаКСчФПрод", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		Раздел11.Колонки.Добавить("НомИспрКСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
		Раздел11.Колонки.Добавить("ДатаИспрКСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		Раздел11.Колонки.Добавить("КодВидСд", ОбщегоНазначения.ОписаниеТипаСтрока(1));
		Раздел11.Колонки.Добавить("ОКВ", ОбщегоНазначения.ОписаниеТипаСтрока(3));
		
		Раздел11.Колонки.Добавить("СтоимТовСчФВс", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
		Раздел11.Колонки.Добавить("СумНДССчФ", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
		
		Раздел11.Колонки.Добавить("РазСтКСчФУм", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
		Раздел11.Колонки.Добавить("РазСтКСчФУв", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
		Раздел11.Колонки.Добавить("РазНДСКСчФУм", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
		Раздел11.Колонки.Добавить("РазНДСКСчФУв", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
		
		Раздел11.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
		Раздел11.Колонки.Добавить("СвПрод");
		Раздел11.Колонки.Добавить("СвКомис");
		Раздел11.Колонки.Добавить("ДополнительныеСведения");
		
		СтруктураПараметров.Вставить("ТаблицаРаздел10", Раздел10);
		СтруктураПараметров.Вставить("ТаблицаРаздел11", Раздел11);
		
		СтруктураПараметров.Вставить("ТабличныйДокументРаздел10");
		СтруктураПараметров.Вставить("ТабличныйДокументРаздел11");
		
	ИначеЕсли СтруктураПараметров.ЗаполнениеДокумента Тогда
		
		ЗаписиВыставленных = Новый ТаблицаЗначений; // Часть 1: выставленные счета-фактуры
		
		ЗаписиВыставленных.Колонки.Добавить("НомПП",       ОбщегоНазначения.ОписаниеТипаЧисло(12, 0));
		ЗаписиВыставленных.Колонки.Добавить("ДатаВыстСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		ЗаписиВыставленных.Колонки.Добавить("НомерСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(1000));
		ЗаписиВыставленных.Колонки.Добавить("ДатаСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		ЗаписиВыставленных.Колонки.Добавить("НомерИспрСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
		ЗаписиВыставленных.Колонки.Добавить("ДатаИспрСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		ЗаписиВыставленных.Колонки.Добавить("НомерКСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(1000));
		ЗаписиВыставленных.Колонки.Добавить("ДатаКСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		ЗаписиВыставленных.Колонки.Добавить("НомерИспрКСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
		ЗаписиВыставленных.Колонки.Добавить("ДатаИспрКСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		ЗаписиВыставленных.Колонки.Добавить("НаимПок", ОбщегоНазначения.ОписаниеТипаСтрока(1000));
		
		ЗаписиВыставленных.Колонки.Добавить("ИННЮЛ", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		ЗаписиВыставленных.Колонки.Добавить("КПП", ОбщегоНазначения.ОписаниеТипаСтрока(9));
		ЗаписиВыставленных.Колонки.Добавить("ИННФЛ", ОбщегоНазначения.ОписаниеТипаСтрока(12));
		
		ЗаписиВыставленных.Колонки.Добавить("КодОКВ", ОбщегоНазначения.ОписаниеТипаСтрока(3));
		ЗаписиВыставленных.Колонки.Добавить("СтТовУчНалВсего", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
		
		ЗаписиВыставленных.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
		
		ЗаписиВыставленных.Колонки.Добавить("СвПосредн");
		ЗаписиВыставленных.Колонки.Добавить("ВтчСумНДС", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
		ЗаписиВыставленных.Колонки.Добавить("РазнСтоимКСчФ");
		ЗаписиВыставленных.Колонки.Добавить("РазнНДСКСчФ");
		
		ЗаписиПолученных = Новый ТаблицаЗначений; // Часть 2: полученные счета-фактуры
		
		ЗаписиПолученных.Колонки.Добавить("НомПП", ОбщегоНазначения.ОписаниеТипаЧисло(12, 0));
		ЗаписиПолученных.Колонки.Добавить("ДатаПолСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		ЗаписиПолученных.Колонки.Добавить("НомерСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(1000));
		ЗаписиПолученных.Колонки.Добавить("ДатаСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		ЗаписиПолученных.Колонки.Добавить("НомерИспрСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
		ЗаписиПолученных.Колонки.Добавить("ДатаИспрСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		ЗаписиПолученных.Колонки.Добавить("НомерКСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(1000));
		ЗаписиПолученных.Колонки.Добавить("ДатаКСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		ЗаписиПолученных.Колонки.Добавить("НомерИспрКСчФ", ОбщегоНазначения.ОписаниеТипаЧисло(3, 0));
		ЗаписиПолученных.Колонки.Добавить("ДатаИспрКСчФ", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		
		ЗаписиПолученных.Колонки.Добавить("НаимПрод", ОбщегоНазначения.ОписаниеТипаСтрока(1000));
		ЗаписиПолученных.Колонки.Добавить("ИННЮЛ", ОбщегоНазначения.ОписаниеТипаСтрока(10));
		ЗаписиПолученных.Колонки.Добавить("КПП", ОбщегоНазначения.ОписаниеТипаСтрока(9));
		ЗаписиПолученных.Колонки.Добавить("ИННФЛ", ОбщегоНазначения.ОписаниеТипаСтрока(12));
		
		ЗаписиПолученных.Колонки.Добавить("КодОКВ", ОбщегоНазначения.ОписаниеТипаСтрока(3));
		ЗаписиПолученных.Колонки.Добавить("СтТовУчНалВсего", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
		ЗаписиПолученных.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
		ЗаписиПолученных.Колонки.Добавить("СвПосредн");

		ЗаписиПолученных.Колонки.Добавить("ВтчСумНДС", ОбщегоНазначения.ОписаниеТипаЧисло(19, 2));
		
		ЗаписиПолученных.Колонки.Добавить("РазнСтоимКСчФ");
		ЗаписиПолученных.Колонки.Добавить("РазнНДСКСчФ");
		
		СтруктураПараметров.Вставить("ЗаписиВыставленных", ЗаписиВыставленных);
		СтруктураПараметров.Вставить("ЗаписиПолученных", ЗаписиПолученных);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуЖурналаУчетаСчетовФактур(
	ПараметрыСтроки, ЗаписьЖурналаУчетаСчетовФактур, СтруктураПараметров, ДополнительныеСвойства = Неопределено, НомерПП = 1) Экспорт
	
	ТекстБезНДС = "без НДС";
	ТекстПустаяСтрока = "";
	
	ЗаполнитьЗначенияСвойств(ПараметрыСтроки, ЗаписьЖурналаУчетаСчетовФактур);
	
	// Универсальная структура для заполнения журнала по разным версиям постановления
	СоставСтроки = Новый Структура;
	СоставСтроки.Вставить("КодОперации", 	 		ЗаписьЖурналаУчетаСчетовФактур.КодВидаОперации);
	СоставСтроки.Вставить("НомерСчетаФактуры", 	 	ЗаписьЖурналаУчетаСчетовФактур.НомерСчетаФактуры);
	СоставСтроки.Вставить("ДатаСчетаФактуры", 	 	Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy"));
	СоставСтроки.Вставить("НомерДата", 	 			"" + ЗаписьЖурналаУчетаСчетовФактур.НомерСчетаФактуры 
		+ ?(ЗначениеЗаполнено(ЗаписьЖурналаУчетаСчетовФактур.НомерСчетаФактуры), ";", "") + Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy"));
	СоставСтроки.Вставить("НомерИсправления", 	 	ЗаписьЖурналаУчетаСчетовФактур.НомерИсправления);
	СоставСтроки.Вставить("ДатаИсправления", 	 	Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаИсправления, "ДФ=dd.MM.yyyy"));
	СоставСтроки.Вставить("НомерДатаИсправления", 	"" + ЗаписьЖурналаУчетаСчетовФактур.НомерИсправления
		+ ?(ЗначениеЗаполнено(ЗаписьЖурналаУчетаСчетовФактур.НомерИсправления), ";", "") + Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаИсправления, "ДФ=dd.MM.yyyy"));
	СоставСтроки.Вставить("НомерКорректировочногоСчетаФактуры", 	ЗаписьЖурналаУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры);
	СоставСтроки.Вставить("ДатаКорректировочногоСчетаФактуры", 	 	Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры, "ДФ=dd.MM.yyyy"));
	СоставСтроки.Вставить("НомерДатаКорректировки",	"" + ЗаписьЖурналаУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры
		+ ?(ЗначениеЗаполнено(ЗаписьЖурналаУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры), ";", "") 
		+ Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры, "ДФ=dd.MM.yyyy"));
	СоставСтроки.Вставить("НомерДатаИсправленияКорректировки", 	"" + ЗаписьЖурналаУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры
		+ ?(ЗначениеЗаполнено(ЗаписьЖурналаУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры), ";", "")
		+ Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры, "ДФ=dd.MM.yyyy"));	
	СоставСтроки.Вставить("ДатаПередачиПолучения",	Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаПередачиПолучения, "ДФ=dd.MM.yyyy"));
	СоставСтроки.Вставить("КонтрагентИННКПП",		СокрЛП(ЗаписьЖурналаУчетаСчетовФактур.КонтрагентИНН)
		+ ?(НЕ ПустаяСтрока(ЗаписьЖурналаУчетаСчетовФактур.КонтрагентКПП),"/", "") + СокрЛП(ЗаписьЖурналаУчетаСчетовФактур.КонтрагентКПП));
	СоставСтроки.Вставить("Валюта",					СокрП(ЗаписьЖурналаУчетаСчетовФактур.НаименованиеВалюты) 
		+ ", " + ЗаписьЖурналаУчетаСчетовФактур.КодВалюты);
		
	СвПоКомиссионеруДляДокумента= 	Новый Структура();
	СвПоКомиссионеруДляДокумента.Вставить("КодВидСдел", ЗаписьЖурналаУчетаСчетовФактур.КодВидаСделки);
	Если ДополнительныеСвойства <> Неопределено Тогда
		ДопСвойстваСчетаФактуры = ДополнительныеСвойства.НайтиСтроки(Новый Структура("СчетФактура", ЗаписьЖурналаУчетаСчетовФактур.СчетФактураДокумент));
		Субкомиссионер          = "";
		СубкомиссионерИНН_КПП   = "";
		Если ДопСвойстваСчетаФактуры.Количество() > 0 Тогда
			ТаблицаДопСвойств = ДополнительныеСвойства.СкопироватьКолонки();
			Для каждого СтрокаДопСвойства Из ДопСвойстваСчетаФактуры Цикл
				НоваяСтрока = ТаблицаДопСвойств.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДопСвойства);
			КонецЦикла;
			ТаблицаДопСвойств.Сортировать("НомерСтроки");
			Для каждого СтрокаТаблицы Из ТаблицаДопСвойств Цикл
				Субкомиссионер = Субкомиссионер + ?(ПустаяСтрока(Субкомиссионер), "", ";") 
					+ СтрокаТаблицы.Субкомиссионер;
				СубкомиссионерИНН_КПП = СубкомиссионерИНН_КПП + ?(ПустаяСтрока(СубкомиссионерИНН_КПП), "", ";")
					+ СокрЛП(СтрокаТаблицы.СубкомиссионерИНН)
					+ ?(НЕ ПустаяСтрока(СтрокаТаблицы.СубкомиссионерКПП),"/", "") 
					+ СокрЛП(СтрокаТаблицы.СубкомиссионерКПП);
			КонецЦикла;
			
			// Формат выгрузки раздела 11 декларации по НДС (с 1 квартала 2015 года)
			// не учитывает возможность реализации товаров комитента через нескольких субкомиссионеров
			// в один день (и получение на все реализации сводного счета-фактуры от комитента).
			// Для выгрузки используется один из субкомиссионеров (по последней или единственной строке ТаблицаДопСвойств).
			
			Если НЕ ПустаяСтрока(СтрокаТаблицы.СубкомиссионерИНН) Тогда
				
				СвПоКомиссионеру = Новый Структура();
				СвПоКомиссионеру = УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(СтрокаТаблицы.СубкомиссионерИНН, СтрокаТаблицы.СубкомиссионерКПП, СтрокаТаблицы.Субкомиссионер);
				
				СвПоКомиссионеруДляДекларации = Новый Структура();
				
				Если СвПоКомиссионеру.Свойство("ИННФЛ") Тогда
					СвПоКомиссионеруДляДекларации.Вставить("ИННФЛ", 	СвПоКомиссионеру.ИННФЛ);
					
					СвПоКомиссионеруДляДокумента.Вставить("ИННФЛСубКом", СвПоКомиссионеру.ИННФЛ);
					СвПоКомиссионеруДляДокумента.Вставить("Фамилия",     СвПоКомиссионеру.Фамилия);
					СвПоКомиссионеруДляДокумента.Вставить("Имя",         СвПоКомиссионеру.Имя);
					СвПоКомиссионеруДляДокумента.Вставить("Отчество",    СвПоКомиссионеру.Отчество);
				Иначе
					СвПоКомиссионеруДляДекларации.Вставить("ИННЮЛ", СвПоКомиссионеру.ИННЮЛ);
					СвПоКомиссионеруДляДекларации.Вставить("КПП",   СвПоКомиссионеру.КПП);
					
					СвПоКомиссионеруДляДокумента.Вставить("ИННЮЛСубКом", СвПоКомиссионеру.ИННЮЛ);
					СвПоКомиссионеруДляДокумента.Вставить("КППСубКом",   СвПоКомиссионеру.КПП);
					СвПоКомиссионеруДляДокумента.Вставить("НаимСубКом",  СвПоКомиссионеру.НаимОрг);
				КонецЕсли;
				
				СвПоКомиссионеруДляДекларации.Вставить("Контрагент", СтрокаТаблицы.СубкомиссионерСсылка);
				СвПоКомиссионеруДляДекларации.Вставить("КонтрагентНаименование", СтрокаТаблицы.Субкомиссионер);
				
				СоставСтроки.Вставить("СвКомис", СвПоКомиссионеруДляДекларации);
				
			КонецЕсли;
			
		КонецЕсли;
		
		СоставСтроки.Вставить("Субкомиссионер",        Субкомиссионер);
		СоставСтроки.Вставить("СубкомиссионерИНН_КПП", СубкомиссионерИНН_КПП);
		
	КонецЕсли;
	
	СоставСтроки.Вставить("КомитентИНН_КПП", СокрЛП(ЗаписьЖурналаУчетаСчетовФактур.КомитентИНН)
		+ ?(НЕ ПустаяСтрока(ЗаписьЖурналаУчетаСчетовФактур.КомитентКПП),"/", "") + СокрЛП(ЗаписьЖурналаУчетаСчетовФактур.КомитентКПП));	
	СоставСтроки.Вставить("НомерДатаСчетаФактурыКомитента",	СокрЛП(ЗаписьЖурналаУчетаСчетовФактур.НомерСчетаФактурыКомитента)
		+ ?(НЕ ПустаяСтрока(ЗаписьЖурналаУчетаСчетовФактур.НомерСчетаФактурыКомитента),";", "") 
		+ Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаСчетаФактурыКомитента, "ДФ=dd.MM.yyyy"));	
		
	Если ЗаписьЖурналаУчетаСчетовФактур.КорректировочныйСчетФактура Тогда
		
		СоставСтроки.Вставить("СуммаДокумента", ТекстПустаяСтрока);
		СоставСтроки.Вставить("СуммаНДС", ТекстПустаяСтрока);
		
		СоставСтроки.Вставить("СуммаДокументаРазницаУменьшение", ЗаписьЖурналаУчетаСчетовФактур.СуммаДокументаРазницаУменьшение);
		СоставСтроки.Вставить("СуммаДокументаРазницаУвеличение", ЗаписьЖурналаУчетаСчетовФактур.СуммаДокументаРазницаУвеличение);
		СоставСтроки.Вставить("СуммаНДСРазницаУменьшение", ЗаписьЖурналаУчетаСчетовФактур.СуммаНДСРазницаУменьшение);
		СоставСтроки.Вставить("СуммаНДСРазницаУвеличение", ЗаписьЖурналаУчетаСчетовФактур.СуммаНДСРазницаУвеличение);
		
	Иначе
		
		СоставСтроки.Вставить("СуммаДокумента", ЗаписьЖурналаУчетаСчетовФактур.СуммаДокумента);
		СоставСтроки.Вставить("СуммаНДС", ЗаписьЖурналаУчетаСчетовФактур.СуммаНДС);
		
		СоставСтроки.Вставить("НомерКорректировочногоСчетаФактуры", ТекстПустаяСтрока);
		СоставСтроки.Вставить("ДатаКорректировочногоСчетаФактуры", ТекстПустаяСтрока);
		
		СоставСтроки.Вставить("СуммаДокументаРазницаУменьшение", ТекстПустаяСтрока);
		СоставСтроки.Вставить("СуммаДокументаРазницаУвеличение", ТекстПустаяСтрока);
		СоставСтроки.Вставить("СуммаНДСРазницаУменьшение", ТекстПустаяСтрока);
		СоставСтроки.Вставить("СуммаНДСРазницаУвеличение", ТекстПустаяСтрока);
		
	КонецЕсли;
	
	Если ЗаписьЖурналаУчетаСчетовФактур.Контрагент = ЗаписьЖурналаУчетаСчетовФактур.Организация Тогда
		СоставСтроки.Вставить("КонтрагентНаименование", СтруктураПараметров.НаименованиеОрганизацииДляПечатныхФорм);
	КонецЕсли;
	
	Если ЗаписьЖурналаУчетаСчетовФактур.СчетФактураБезНДС Тогда
		
		Если ЗаписьЖурналаУчетаСчетовФактур.КорректировочныйСчетФактура Тогда
			СоставСтроки.Вставить("СуммаНДСРазницаУменьшение", ТекстБезНДС);
			СоставСтроки.Вставить("СуммаНДСРазницаУвеличение", ТекстБезНДС);
		Иначе
			СоставСтроки.Вставить("СуммаНДС", ТекстБезНДС);
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ПараметрыСтроки, СоставСтроки);
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		
		ДополнительныеСведения = Новый Структура("Контрагент,ПредставлениеКонтрагента,Документ,ПредставлениеДокумента");
		ДополнительныеСведения.Документ = ЗаписьЖурналаУчетаСчетовФактур.СчетФактураДокумент;
		ДополнительныеСведения.Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		ДополнительныеСведения.ПредставлениеКонтрагента = "";
		
		Если ЗаписьЖурналаУчетаСчетовФактур.ЧастьЖурнала = Перечисления.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры Тогда
			
			// Раздел 10
			
			ДополнительныеСведения.ПредставлениеДокумента = СтрШаблон(
				НСтр("ru='Счет-фактура выданный № %1 от %2 на сумму %3 %4'"), 
				ЗаписьЖурналаУчетаСчетовФактур.НомерСчетаФактуры, 
				Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy"),
				Формат(СоставСтроки.СуммаДокумента, "ЧДЦ=2; ЧН="),
				ЗаписьЖурналаУчетаСчетовФактур.НаименованиеВалютыКраткое);
			
			// Массив структур со сведениями о посреднической деятельности
			СтруктураСвПосрДеят = Новый Структура(
				"НомСчФОтПрод,ДатаСчФОтПрод,ОКВ,СтоимТовСчФВс,СумНДССчФ,РазСтКСчФУм,РазСтКСчФУв,РазНДСКСчФУм,РазНДСКСчФУв,СвПрод");
				
			СтруктураСвПосрДеят.НомСчФОтПрод  = СокрЛП(ЗаписьЖурналаУчетаСчетовФактур.НомерСчетаФактурыКомитента);
			СтруктураСвПосрДеят.ДатаСчФОтПрод = Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаСчетаФактурыКомитента, "ДФ=dd.MM.yyyy");
			СтруктураСвПосрДеят.ОКВ           = ЗаписьЖурналаУчетаСчетовФактур.КодВалюты;
			
			СтруктураСвПосрДеят.СтоимТовСчФВс =
				ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаДокумента, ТекстБезНДС, ТекстПустаяСтрока);
			СтруктураСвПосрДеят.СумНДССчФ =
				ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаНДС, ТекстБезНДС, ТекстПустаяСтрока);
			СтруктураСвПосрДеят.РазСтКСчФУм =
				ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаДокументаРазницаУменьшение, ТекстБезНДС, ТекстПустаяСтрока);
			СтруктураСвПосрДеят.РазСтКСчФУв =
				ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаДокументаРазницаУвеличение, ТекстБезНДС, ТекстПустаяСтрока);
			СтруктураСвПосрДеят.РазНДСКСчФУм =
				ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаНДСРазницаУменьшение, ТекстБезНДС, ТекстПустаяСтрока);
			СтруктураСвПосрДеят.РазНДСКСчФУв =
				ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаНДСРазницаУвеличение, ТекстБезНДС, ТекстПустаяСтрока);
			
			Если НЕ ПустаяСтрока(ЗаписьЖурналаУчетаСчетовФактур.КомитентИНН) Тогда
				СтруктуруРеквизитовКомитента = УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(
					ЗаписьЖурналаУчетаСчетовФактур.КомитентИНН, ЗаписьЖурналаУчетаСчетовФактур.КомитентКПП);
				СтруктуруРеквизитовКомитента.Вставить("Контрагент", ЗаписьЖурналаУчетаСчетовФактур.КомитентСсылка);
				СтруктуруРеквизитовКомитента.Вставить("КонтрагентНаименование", ЗаписьЖурналаУчетаСчетовФактур.Комитент);
				СтруктураСвПосрДеят.СвПрод = СтруктуруРеквизитовКомитента;
			КонецЕсли;

			СоставСтроки.Вставить("ДополнительныеСведения", ДополнительныеСведения);
			
			СтруктураОтбора = Новый Структура("НомерПор", НомерПП);
			// Осуществляем поиск по таблице, в случае если записи нет - добавляем новую строку,
			// иначе добавляем сведения о комитенте в колонку "СвПосрДеят" (с 1 кв 2017 года в "СвСчФОтПрод").
			СтрокиРаздела10 = СтруктураПараметров.ТаблицаРаздел10.НайтиСтроки(СтруктураОтбора);
			
			Если СтрокиРаздела10.Количество() = 0 Тогда
				
				СтрокаРаздела = СтруктураПараметров.ТаблицаРаздел10.Добавить();
				
				СоставСтроки.Вставить("НомерПор", НомерПП);
				Если СтруктураПараметров.ПравилаЗаполнения = "2015Кв1" Тогда
					СоставСтроки.Вставить("ДатаВыст", Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаПередачиПолучения, "ДФ=dd.MM.yyyy"));
				КонецЕсли;
				
				СоставСтроки.Вставить("НомСчФПрод", ЗаписьЖурналаУчетаСчетовФактур.НомерСчетаФактуры);
				СоставСтроки.Вставить("ДатаСчФПрод", Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy"));
				
				СоставСтроки.Вставить("НомИспрСчФ", ЗаписьЖурналаУчетаСчетовФактур.НомерИсправления);
				СоставСтроки.Вставить("ДатаИспрСчФ", Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаИсправления, "ДФ=dd.MM.yyyy"));
				
				СоставСтроки.Вставить("НомКСчФПрод", ЗаписьЖурналаУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры);
				СоставСтроки.Вставить("ДатаКСчФПрод", Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры, "ДФ=dd.MM.yyyy"));
				
				СоставСтроки.Вставить("НомИспрКСчФ", ЗаписьЖурналаУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры);
				СоставСтроки.Вставить("ДатаИспрКСчФ", Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры, "ДФ=dd.MM.yyyy"));
				
				МассивКодовОпераций = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЗаписьЖурналаУчетаСчетовФактур.КодВидаОперации, ";");
				СоставСтроки.Вставить("КодВидОпер", МассивКодовОпераций);
				
				Если НЕ ПустаяСтрока(ЗаписьЖурналаУчетаСчетовФактур.КонтрагентИНН) Тогда
					СтруктураРеквизитовКонтрагента = УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ЗаписьЖурналаУчетаСчетовФактур.КонтрагентИНН, ЗаписьЖурналаУчетаСчетовФактур.КонтрагентКПП);
					СтруктураРеквизитовКонтрагента.Вставить("Контрагент", ЗаписьЖурналаУчетаСчетовФактур.Контрагент);
					СтруктураРеквизитовКонтрагента.Вставить("КонтрагентНаименование", ЗаписьЖурналаУчетаСчетовФактур.КонтрагентНаименование);
					СоставСтроки.Вставить("СвПокуп", СтруктураРеквизитовКонтрагента);
				КонецЕсли;
				
				ДополнительныеСведения.Контрагент = ЗаписьЖурналаУчетаСчетовФактур.Контрагент;
				ДополнительныеСведения.ПредставлениеКонтрагента = ЗаписьЖурналаУчетаСчетовФактур.КонтрагентНаименование;
				
				МассивСвПосрДеят = Новый Массив();
				МассивСвПосрДеят.Добавить(СтруктураСвПосрДеят);
				
				Если СтруктураПараметров.ПравилаЗаполнения = "2015Кв1" Тогда
					СоставСтроки.Вставить("СвПосрДеят", МассивСвПосрДеят);
				ИначеЕсли СтруктураПараметров.ПравилаЗаполнения = "2017Кв1" Тогда
					СоставСтроки.Вставить("СвСчФОтПрод", МассивСвПосрДеят);
				КонецЕсли; 
				
				СоставСтроки.Вставить("СуммаПосрДеят", СтруктураСвПосрДеят.СтоимТовСчФВс);
				
				ЗаполнитьЗначенияСвойств(СтрокаРаздела, СоставСтроки);
				
			Иначе
				
				СтрокаРаздела = СтрокиРаздела10[0];
				СтрокаРаздела.СуммаПосрДеят = СтрокаРаздела.СуммаПосрДеят + СтруктураСвПосрДеят.СтоимТовСчФВс;
				
				Если СтруктураПараметров.ПравилаЗаполнения = "2015Кв1" Тогда
					МассивСвПосрДеят = СтрокаРаздела.СвПосрДеят;
				ИначеЕсли СтруктураПараметров.ПравилаЗаполнения = "2017Кв1" Тогда
					МассивСвПосрДеят = СтрокаРаздела.СвСчФОтПрод;
				КонецЕсли;
				МассивСвПосрДеят.Добавить(СтруктураСвПосрДеят);
				
				ДополнительныеСведения = СтрокаРаздела.ДополнительныеСведения;
				ДополнительныеСведения.ПредставлениеДокумента = СтрШаблон(
					НСтр("ru='Счет-фактура выданный № %1 от %2 на сумму %3 %4'"), 
					ЗаписьЖурналаУчетаСчетовФактур.НомерСчетаФактуры, 
					Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy"),
					Формат(СтрокаРаздела.СуммаПосрДеят, "ЧДЦ=2; ЧН="),
					ЗаписьЖурналаУчетаСчетовФактур.НаименованиеВалютыКраткое);
				
			КонецЕсли;
			
		Иначе
			
			// Раздел 11
			
			ДополнительныеСведения.ПредставлениеДокумента = СтрШаблон(
				НСтр("ru='Счет-фактура полученный № %1 от %2 на сумму %3 %4'"), 
				ЗаписьЖурналаУчетаСчетовФактур.НомерСчетаФактуры, 
				Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy"),
				Формат(СоставСтроки.СуммаДокумента, "ЧДЦ=2; ЧН="),
				ЗаписьЖурналаУчетаСчетовФактур.НаименованиеВалютыКраткое);
			
			СоставСтроки.Вставить("НомерПор", НомерПП);
			Если СтруктураПараметров.ПравилаЗаполнения = "2015Кв1" Тогда
				СоставСтроки.Вставить("ДатаПолуч", Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаПередачиПолучения, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
			
			СоставСтроки.Вставить("НомСчФПрод", ЗаписьЖурналаУчетаСчетовФактур.НомерСчетаФактуры);
			СоставСтроки.Вставить("ДатаСчФПрод", Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy"));
			
			СоставСтроки.Вставить("НомИспрСчФ", ЗаписьЖурналаУчетаСчетовФактур.НомерИсправления);
			СоставСтроки.Вставить("ДатаИспрСчФ", Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаИсправления, "ДФ=dd.MM.yyyy"));
			
			СоставСтроки.Вставить("НомКСчФПрод", ЗаписьЖурналаУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры);
			СоставСтроки.Вставить("ДатаКСчФПрод", Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры, "ДФ=dd.MM.yyyy"));
			
			СоставСтроки.Вставить("НомИспрКСчФ", ЗаписьЖурналаУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры);
			СоставСтроки.Вставить("ДатаИспрКСчФ", Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры, "ДФ=dd.MM.yyyy"));
			
			МассивКодовОпераций = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЗаписьЖурналаУчетаСчетовФактур.КодВидаОперации, ";");
			СоставСтроки.Вставить("КодВидОпер", МассивКодовОпераций);
			СоставСтроки.Вставить("КодВидСд", ЗаписьЖурналаУчетаСчетовФактур.КодВидаСделки);
			СоставСтроки.Вставить("ОКВ", ЗаписьЖурналаУчетаСчетовФактур.КодВалюты);
			
			СоставСтроки.Вставить("СтоимТовСчФВс",
				ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаДокумента, ТекстБезНДС, ТекстПустаяСтрока));
			СоставСтроки.Вставить("СумНДССчФ",
				ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаНДС, ТекстБезНДС, ТекстПустаяСтрока));
			СоставСтроки.Вставить("РазСтКСчФУм",
				ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаДокументаРазницаУменьшение, ТекстБезНДС, ТекстПустаяСтрока));
			СоставСтроки.Вставить("РазСтКСчФУв",
				ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаДокументаРазницаУвеличение, ТекстБезНДС, ТекстПустаяСтрока));
			СоставСтроки.Вставить("РазНДСКСчФУм",
				ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаНДСРазницаУменьшение, ТекстБезНДС, ТекстПустаяСтрока));
			СоставСтроки.Вставить("РазНДСКСчФУв",
				ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаНДСРазницаУвеличение, ТекстБезНДС, ТекстПустаяСтрока));
			
			Если НЕ ПустаяСтрока(ЗаписьЖурналаУчетаСчетовФактур.КонтрагентИНН) Тогда
				СтруктураРеквизитовПродавца = УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ЗаписьЖурналаУчетаСчетовФактур.КонтрагентИНН, ЗаписьЖурналаУчетаСчетовФактур.КонтрагентКПП);
				СтруктураРеквизитовПродавца.Вставить("Контрагент", ЗаписьЖурналаУчетаСчетовФактур.Контрагент);
				СтруктураРеквизитовПродавца.Вставить("КонтрагентНаименование", ЗаписьЖурналаУчетаСчетовФактур.КонтрагентНаименование);
				СоставСтроки.Вставить("СвПрод", СтруктураРеквизитовПродавца);
			КонецЕсли;
			
			ДополнительныеСведения.Контрагент = ЗаписьЖурналаУчетаСчетовФактур.Контрагент;
			ДополнительныеСведения.ПредставлениеКонтрагента = ЗаписьЖурналаУчетаСчетовФактур.КонтрагентНаименование;
		
			СоставСтроки.Вставить("ДополнительныеСведения", ДополнительныеСведения);
			
			СтрокаРаздела = СтруктураПараметров.ТаблицаРаздел11.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРаздела, СоставСтроки);
			
		КонецЕсли;
		
	ИначеЕсли СтруктураПараметров.ЗаполнениеДокумента 
		И СтруктураПараметров.ФорматПоПостановлению735 Тогда
		
		Если ЗаписьЖурналаУчетаСчетовФактур.ЧастьЖурнала = Перечисления.ЧастиЖурналаУчетаСчетовФактур.ВыставленныеСчетаФактуры Тогда
			
			СтруктураОтбора = Новый Структура("НомПП", НомерПП);
			// Осуществляем поиск по таблице, в случе если записи нет - добавляем новую строку,
			// иначе не добавляем - не предусмотрено форматом.
			СтрокиЧ1 = СтруктураПараметров.ЗаписиВыставленных.НайтиСтроки(СтруктураОтбора);
			Если СтрокиЧ1.Количество()= 0 Тогда 
				
				СоставСтроки.Вставить("НомПП", 			НомерПП);
				СоставСтроки.Вставить("ДатаВыстСчФ", 	Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаПередачиПолучения, "ДФ=dd.MM.yyyy"));
				СоставСтроки.Вставить("НомерСчФ", 		ЗаписьЖурналаУчетаСчетовФактур.НомерСчетаФактуры);
				СоставСтроки.Вставить("ДатаСчФ", 		Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy"));
				СоставСтроки.Вставить("НомерИспрСчФ", 	ЗаписьЖурналаУчетаСчетовФактур.НомерИсправления);
				СоставСтроки.Вставить("ДатаИспрСчФ", 	Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаИсправления, "ДФ=dd.MM.yyyy"));
				СоставСтроки.Вставить("НомерКСчФ", 		ЗаписьЖурналаУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры);
				СоставСтроки.Вставить("ДатаКСчФ", 		Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры, "ДФ=dd.MM.yyyy"));
				СоставСтроки.Вставить("НомерИспрКСчФ", 	ЗаписьЖурналаУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры);
				СоставСтроки.Вставить("ДатаИспрКСчФ", 	Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры, "ДФ=dd.MM.yyyy"));
				СоставСтроки.Вставить("НаимПок", 		ПараметрыСтроки.КонтрагентНаименование);
				
				Если НЕ ПустаяСтрока(ЗаписьЖурналаУчетаСчетовФактур.КонтрагентИНН) Тогда
					СтруктураРеквизитовКонтрагента = УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ЗаписьЖурналаУчетаСчетовФактур.КонтрагентИНН, ЗаписьЖурналаУчетаСчетовФактур.КонтрагентКПП);
					Если СтруктураРеквизитовКонтрагента.Свойство("ИННФЛ") Тогда
						СоставСтроки.Вставить("ИННФЛ", 	СтруктураРеквизитовКонтрагента.ИННФЛ);
					Иначе
						СоставСтроки.Вставить("ИННЮЛ", 	СтруктураРеквизитовКонтрагента.ИННЮЛ);
						СоставСтроки.Вставить("КПП",	СтруктураРеквизитовКонтрагента.КПП);
					КонецЕсли;
				КонецЕсли;
				
				СоставСтроки.Вставить("КодОКВ", 	ЗаписьЖурналаУчетаСчетовФактур.КодВалюты);
				СоставСтроки.Вставить("СтТовУчНалВсего",
					ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаДокумента, ТекстБезНДС, ТекстПустаяСтрока));
				МассивКодовОпераций = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЗаписьЖурналаУчетаСчетовФактур.КодВидаОперации, ";");	
				СоставСтроки.Вставить("КодВидОпер", МассивКодовОпераций);
				
				СвПосредн = Новый Структура();
				СвПосредн.Вставить("НомерСчФпрод", 	СокрЛП(ЗаписьЖурналаУчетаСчетовФактур.НомерСчетаФактурыКомитента));
				СвПосредн.Вставить("ДатаСчФпрод", 	Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаСчетаФактурыКомитента, "ДФ=dd.MM.yyyy"));
				
				Если НЕ ПустаяСтрока(ЗаписьЖурналаУчетаСчетовФактур.КомитентИНН) Тогда
					
					СтруктураРеквизитовКонтрагента = УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ЗаписьЖурналаУчетаСчетовФактур.КомитентИНН, ЗаписьЖурналаУчетаСчетовФактур.КомитентКПП, ЗаписьЖурналаУчетаСчетовФактур.Комитент);
					
					Если СтруктураРеквизитовКонтрагента.Свойство("ИННФЛ") Тогда
						СвПосредн.Вставить("ИННФЛ", 	СтруктураРеквизитовКонтрагента.ИННФЛ);
						СвПосредн.Вставить("Фамилия", 	СтруктураРеквизитовКонтрагента.Фамилия);
						СвПосредн.Вставить("Имя", 		СтруктураРеквизитовКонтрагента.Имя);
						СвПосредн.Вставить("Отчество", 	СтруктураРеквизитовКонтрагента.Отчество);
					Иначе
						СвПосредн.Вставить("ИННЮЛ", 	СтруктураРеквизитовКонтрагента.ИННЮЛ);
						СвПосредн.Вставить("КПП", 		СтруктураРеквизитовКонтрагента.КПП);
						СвПосредн.Вставить("НаимОрг ", 	СтруктураРеквизитовКонтрагента.НаимОрг );
					КонецЕсли;
					
					Если СвПосредн.НомерСчФпрод <> "" Тогда 
						СоставСтроки.Вставить("СвПосредн", СвПосредн);
					КонецЕсли;
				
				КонецЕсли;
				
				СоставСтроки.Вставить("ВтчСумНДС",
				ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаНДС, ТекстБезНДС, ТекстПустаяСтрока));
				
				РазнСтоимКСчФ = Новый Структура();
				Ум = ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаДокументаРазницаУменьшение, ТекстБезНДС, ТекстПустаяСтрока);
				Если Ум <> 0 Тогда 
					РазнСтоимКСчФ.Вставить("Ум", Ум);
				КонецЕсли;
				Увел = ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаДокументаРазницаУвеличение, ТекстБезНДС, ТекстПустаяСтрока);
				Если Увел <> 0 Тогда 
					РазнСтоимКСчФ.Вставить("Увел", Увел);
				КонецЕсли;
				
				Если РазнСтоимКСчФ.Свойство("Ум")
					ИЛИ РазнСтоимКСчФ.Свойство("Увел") Тогда 
					СоставСтроки.Вставить("РазнСтоимКСчФ", РазнСтоимКСчФ);
				КонецЕсли;
				
				РазнНДСКСчФ = Новый Структура();
				Ум = ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаНДСРазницаУменьшение, ТекстБезНДС, ТекстПустаяСтрока);
				Если Ум <> 0 Тогда 
					РазнНДСКСчФ.Вставить("Ум", Ум);
				КонецЕсли;
				Увел = ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаНДСРазницаУвеличение, ТекстБезНДС, ТекстПустаяСтрока);
				Если Увел <> 0 Тогда 
					РазнНДСКСчФ.Вставить("Увел", Увел);
				КонецЕсли;
				
				Если РазнНДСКСчФ.Свойство("Ум")
					ИЛИ РазнНДСКСчФ.Свойство("Увел") Тогда 
					СоставСтроки.Вставить("РазнНДСКСчФ", РазнНДСКСчФ);
				КонецЕсли;
				
				СтрокаРаздела = СтруктураПараметров.ЗаписиВыставленных.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРаздела, СоставСтроки);
			КонецЕсли;
		Иначе
			
			СоставСтроки.Вставить("НомПП", НомерПП);
			СоставСтроки.Вставить("ДатаПолСчФ", Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаПередачиПолучения, "ДФ=dd.MM.yyyy"));
			
			СоставСтроки.Вставить("НомерСчФ", ЗаписьЖурналаУчетаСчетовФактур.НомерСчетаФактуры);
			СоставСтроки.Вставить("ДатаСчФ", Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy"));
			
			СоставСтроки.Вставить("НомерИспрСчФ", ЗаписьЖурналаУчетаСчетовФактур.НомерИсправления);
			СоставСтроки.Вставить("ДатаИспрСчФ", Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаИсправления, "ДФ=dd.MM.yyyy"));
			
			СоставСтроки.Вставить("НомерКСчФ", ЗаписьЖурналаУчетаСчетовФактур.НомерКорректировочногоСчетаФактуры);
			СоставСтроки.Вставить("ДатаКСчФ", Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаКорректировочногоСчетаФактуры, "ДФ=dd.MM.yyyy"));
			
			СоставСтроки.Вставить("НомерИспрКСчФ", ЗаписьЖурналаУчетаСчетовФактур.НомерИсправленияКорректировочногоСчетаФактуры);
			СоставСтроки.Вставить("ДатаИспрКСчФ", Формат(ЗаписьЖурналаУчетаСчетовФактур.ДатаИсправленияКорректировочногоСчетаФактуры, "ДФ=dd.MM.yyyy"));
			
			СоставСтроки.Вставить("НаимПрод", ПараметрыСтроки.КонтрагентНаименование);
			
			Если НЕ ПустаяСтрока(ЗаписьЖурналаУчетаСчетовФактур.КонтрагентИНН) Тогда
				СтруктураРеквизитовКонтрагента = УчетНДС.ПолучитьСтруктуруРеквизитовКонтрагента(ЗаписьЖурналаУчетаСчетовФактур.КонтрагентИНН, ЗаписьЖурналаУчетаСчетовФактур.КонтрагентКПП, ПараметрыСтроки.КонтрагентНаименование);
				Если СтруктураРеквизитовКонтрагента.Свойство("ИННФЛ") Тогда
					СоставСтроки.Вставить("ИННФЛ", 	СтруктураРеквизитовКонтрагента.ИННФЛ);
				Иначе
					СоставСтроки.Вставить("ИННЮЛ", 	СтруктураРеквизитовКонтрагента.ИННЮЛ);
					СоставСтроки.Вставить("КПП",	СтруктураРеквизитовКонтрагента.КПП);
				КонецЕсли;
				// Формат выгрузки предполагает обязательное присутствие субкомиссионера
				Если НЕ СвПоКомиссионеруДляДокумента.Свойство("НаимСубКом")
					И НЕ СвПоКомиссионеруДляДокумента.Свойство("Фамилия")
					И СвПоКомиссионеруДляДокумента.КодВидСдел <> "" Тогда
					Если СоставСтроки.Свойство("ИННЮЛ") Тогда 
						СвПоКомиссионеруДляДокумента.Вставить("ИННЮЛСубКом", СоставСтроки.ИННЮЛ);
						СвПоКомиссионеруДляДокумента.Вставить("КППСубКом", СоставСтроки.КПП);
						СвПоКомиссионеруДляДокумента.Вставить("НаимСубКом", ПараметрыСтроки.КонтрагентНаименование);
					Иначе
						СвПоКомиссионеруДляДокумента.Вставить("ИННФЛСубКом ", СоставСтроки.ИННФЛ);
						СвПоКомиссионеруДляДокумента.Вставить("Фамилия", СтруктураРеквизитовКонтрагента.Фамилия);
						СвПоКомиссионеруДляДокумента.Вставить("Имя", СтруктураРеквизитовКонтрагента.Имя);
						СвПоКомиссионеруДляДокумента.Вставить("Отчество", СтруктураРеквизитовКонтрагента.Отчество);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			СоставСтроки.Вставить("КодОКВ", 	ЗаписьЖурналаУчетаСчетовФактур.КодВалюты);
			СоставСтроки.Вставить("СтТовУчНалВсего",
					ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаДокумента, ТекстБезНДС, ТекстПустаяСтрока));
			МассивКодовОпераций = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЗаписьЖурналаУчетаСчетовФактур.КодВидаОперации, ";");
			СоставСтроки.Вставить("КодВидОпер", МассивКодовОпераций);
			
			Если СвПоКомиссионеруДляДокумента.КодВидСдел <> "" Тогда 
				СоставСтроки.Вставить("СвПосредн",	СвПоКомиссионеруДляДокумента);
			КонецЕсли;
			СоставСтроки.Вставить("ВтчСумНДС",
			ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаНДС, ТекстБезНДС, ТекстПустаяСтрока));
			
			РазнСтоимКСчФ = Новый Структура();
			Ум = ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаДокументаРазницаУменьшение, ТекстБезНДС, ТекстПустаяСтрока);
			Если Ум <> 0 Тогда 
				РазнСтоимКСчФ.Вставить("Ум", Ум);
			КонецЕсли;
			Увел = ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаДокументаРазницаУвеличение, ТекстБезНДС, ТекстПустаяСтрока);
			Если Увел <> 0 Тогда 
				РазнСтоимКСчФ.Вставить("Увел", Увел);
			КонецЕсли;
			
			Если РазнСтоимКСчФ.Свойство("Ум")
				ИЛИ РазнСтоимКСчФ.Свойство("Увел") Тогда 
				СоставСтроки.Вставить("РазнСтоимКСчФ", РазнСтоимКСчФ);
			КонецЕсли;
			
			РазнНДСКСчФ = Новый Структура();
			Ум = ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаНДСРазницаУменьшение, ТекстБезНДС, ТекстПустаяСтрока);
			Если Ум <> 0 Тогда 
				РазнНДСКСчФ.Вставить("Ум", Ум);
			КонецЕсли;
			Увел = ПреобразоватьСтрокуВФорматДекларации(СоставСтроки.СуммаНДСРазницаУвеличение, ТекстБезНДС, ТекстПустаяСтрока);
			Если Увел <> 0 Тогда 
				РазнНДСКСчФ.Вставить("Увел", Увел);
			КонецЕсли;
			
			Если РазнНДСКСчФ.Свойство("Ум")
				ИЛИ РазнНДСКСчФ.Свойство("Увел") Тогда 
				СоставСтроки.Вставить("РазнНДСКСчФ", РазнНДСКСчФ);
			КонецЕсли;
			
			СтрокаРаздела = СтруктураПараметров.ЗаписиПолученных.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРаздела, СоставСтроки);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПреобразоватьСтрокуВФорматДекларации(ИсходныйПоказатель, ТекстБезНДС, ТекстПустаяСтрока)
	
	Если Строка(ИсходныйПоказатель) = ТекстБезНДС
		ИЛИ Строка(ИсходныйПоказатель) = ТекстПустаяСтрока Тогда
		Возврат 0;
	Иначе
		Возврат ИсходныйПоказатель;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецЕсли