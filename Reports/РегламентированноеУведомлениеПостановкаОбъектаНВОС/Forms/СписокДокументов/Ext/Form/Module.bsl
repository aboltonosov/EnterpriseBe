
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Адрес = Параметры.Адрес;
	ФильтрПоТипу = Параметры.ФильтрПоТипу;
	ПараметрыДокументов = ПолучитьИзВременногоХранилища(Адрес);
	Для Каждого Док Из ПараметрыДокументов.ДанныеДокументов Цикл 
		НовСтр = ДанныеЛицензий.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Док);
	КонецЦикла;
	
	Типы = Отчеты.РегламентированноеУведомлениеПостановкаОбъектаНВОС.ПолучитьСписокТиповСопровождающихДокументов();
	Заголовок = Типы[ФильтрПоТипу];
	ТипыДокументов = ПоместитьВоВременноеХранилище(Типы, УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДокумент(Команда)
	ПараметрыДокумента = Новый Структура("ЗаголовокФормы, ФильтрПоТипу",
										ПолучитьИзВременногоХранилища(ТипыДокументов)[ФильтрПоТипу],
										ФильтрПоТипу);
	
	ДополнительныеПараметры = Новый Структура;
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьДокументЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОткрытьФорму("Отчет.РегламентированноеУведомлениеПостановкаОбъектаНВОС.Форма.ФормаРедактированияДокумента", ПараметрыДокумента, ЭтотОбъект,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДокументЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	Если РезультатВыбора <> Неопределено Тогда 
		Если РезультатВыбора.Свойство("РедактируемыйУИД") Тогда 
			НовСтр = ДанныеЛицензий.НайтиСтроки(Новый Структура("УИД", РезультатВыбора.РедактируемыйУИД))[0];
			ЗаполнитьЗначенияСвойств(НовСтр, ПолучитьИзВременногоХранилища(РезультатВыбора.Адрес));
		Иначе
			НовСтр = ДанныеЛицензий.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, ПолучитьИзВременногоХранилища(РезультатВыбора.Адрес));
			НовСтр.УИД = РезультатВыбора.УИД;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СформироватьРезультат()
	Результат = Новый Структура;
	Результат.Вставить("ДанныеЛицензий", ДанныеФормыВЗначение(ДанныеЛицензий, Тип("ТаблицаЗначений")));
	Возврат ПоместитьВоВременноеХранилище(Результат, Новый УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура ЗакрытьКоманда(Команда)
	Результат = СформироватьРезультат();
	Закрыть(Результат);
КонецПроцедуры

&НаКлиенте
Процедура ДанныеЛицензийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ДанныеЛицензии = Новый Структура("ДатаВыдачи,ДатаНачалаДействия,ДатаОкончанияДействия,НомерДокумента,Орган,ИмяФайла,АдресДД");
	ЗаполнитьЗначенияСвойств(ДанныеЛицензии, ТекущиеДанные);
	
	ПараметрыДокумента = Новый Структура("ЗаголовокФормы, ФильтрПоТипу, РедактируемыйУИД, ДанныеЛицензии",
										ПолучитьИзВременногоХранилища(ТипыДокументов)[ФильтрПоТипу],
										ФильтрПоТипу, ТекущиеДанные.УИД, ДанныеЛицензии);
	
	ДополнительныеПараметры = Новый Структура;
	ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьДокументЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Отчет.РегламентированноеУведомлениеПостановкаОбъектаНВОС.Форма.ФормаРедактированияДокумента", ПараметрыДокумента, ЭтотОбъект,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ДанныеЛицензийПриАктивизацииСтроки(Элемент)
	Элементы.ДанныеЛицензийУдалитьДокумент.Доступность = ДанныеЛицензий.Количество() > 0 И (Элементы.ДанныеЛицензий.ТекущиеДанные <> Неопределено);
КонецПроцедуры

&НаСервере
Процедура УдалитьДокументНаСервере(УИД)
	НовСтр = ДанныеЛицензий.НайтиСтроки(Новый Структура("УИД", УИД))[0];
	ДанныеЛицензий.Удалить(НовСтр);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДокумент(Команда)
	ТекущиеДанные = Элементы.ДанныеЛицензий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	УдалитьДокументНаСервере(ТекущиеДанные.УИД);
КонецПроцедуры
