
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция возвращает параметры отчета, см. БухгалтерскиеОтчетыВызовСервера.СформироватьОтчет
// Возвращаемое значение:
//	Структура
//
Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ИспользоватьПередКомпоновкойМакета", Истина);
	СтруктураВозврата.Вставить("ИспользоватьПослеВыводаРезультата", Истина);
	СтруктураВозврата.Вставить("ИспользоватьДанныеРасшифровки", Истина);
	СтруктураВозврата.Вставить("ИспользоватьВнешниеНаборыДанных", Истина);
	СтруктураВозврата.Вставить("ИспользоватьПривилегированныйРежим", Ложь);
	Возврат СтруктураВозврата;
							
КонецФункции

// Функция возвращает параметры отчета, см. БухгалтерскиеОтчетыВызовСервера.СформироватьОтчет
// Возвращаемое значение:
//	Структура
//
Функция ПолучитьВнешниеНаборыДанных(ПараметрыОтчета, МакетКомпоновки) Экспорт
	
	Настройки = ПараметрыОтчета.НастройкиКомпоновкиДанных;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Документы.УведомлениеОКонтролируемыхСделках.ПолучитьВременныеТаблицыДляЗаполненияУведомления(ПараметрыОтчета.Уведомление);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтролируемыеСделки.Организация КАК Организация,
	|	КонтролируемыеСделки.ОтчетныйГод КАК ОтчетныйГод,
	|	КонтролируемыеСделки.ГоловнойКонтрагент КАК Контрагент,
	|	КонтролируемыеСделки.Контрагент КАК ОбособленноеПодразделениеКонтрагента,
	|	КонтролируемыеСделки.Договор КАК Договор,
	|	КонтролируемыеСделки.Соглашение КАК Соглашение,
	|	КонтролируемыеСделки.ПредметСделки КАК ПредметСделки,
	|	КонтролируемыеСделки.СделкаВнешнейТорговлиТоваромМировойБиржевойТорговли КАК СделкаВнешнейТорговлиТоваромМировойБиржевойТорговли,
	|	СУММА(КонтролируемыеСделки.СуммаБезНДСВРублях) КАК СуммаБезНДСВРублях,
	|	КонтролируемыеСделки.КонтрагентЗарегистрированВРФ КАК КонтрагентЗарегистрированВРФ,
	|	КонтролируемыеСделки.ЗарегистрированВСтранеСЛьготнымНалогообложением КАК ЗарегистрированВСтранеСЛьготнымНалогообложением,
	|	КонтролируемыеСделки.ТипВзаимозависимости КАК ТипВзаимозависимости,
	|	КонтролируемыеСделки.СделкаОблагаетсяЕНВД КАК СделкаОблагаетсяЕНВД,
	|	КонтролируемыеСделки.СделкаСПлательщикомЕСХН КАК СделкаСПлательщикомЕСХН,
	|	КонтролируемыеСделки.СделкаКонтролируетсяПоНалогуНаПрибыль КАК СделкаКонтролируетсяПоНалогуНаПрибыль,
	|	КонтролируемыеСделки.СделкаКонтролируетсяПоНДПИ КАК СделкаКонтролируетсяПоНДПИ,
	|	ЕСТЬNULL(КонтролируемыеСделки.Соглашение.КодУсловийПоставки, """") КАК КодУсловийПоставки,
	|	ЕСТЬNULL(КонтролируемыеСделки.Соглашение.СпособОпределенияЦеныСделки, ЗНАЧЕНИЕ(Справочник.СпособыОпределенияЦенКонтролируемыхСделок.ПустаяСсылка)) КАК СпособОпределенияЦеныСделки,
	|	ЕСТЬNULL(КонтролируемыеСделки.Соглашение.КодНаименованияСделки, """") КАК КодНаименованияСделки,
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА КонтролируемыеСделки.ЗарегистрированВСтранеСЛьготнымНалогообложением
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтролируемыеСделки.СделкаВнешнейТорговлиТоваромМировойБиржевойТорговли
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтролируемыеСделки.СделкаОблагаетсяЕНВД
	|					ТОГДА 0.5
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтролируемыеСделки.СделкаСПлательщикомЕСХН
	|					ТОГДА 0.5
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтролируемыеСделки.СделкаКонтролируетсяПоНалогуНаПрибыль
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтролируемыеСделки.СделкаКонтролируетсяПоРегистрацииВОЭЗ
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтролируемыеСделки.СделкаКонтролируетсяПоНДПИ
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтролируемыеСделки.СтороныВзаимозависимыПоКодексу
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтролируемыеСделки.ТипВзаимозависимости = ЗНАЧЕНИЕ(Перечисление.ТипыВзаимозависимости.НеВзаимозависимыйПосредник)
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтрагентыКонтролируемыеПоОбщейСумме.ГоловнойКонтрагент ЕСТЬ NULL 
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ > 1
	|			ТОГДА ""1""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КонтролируемыеСделки.СделкаВнешнейТорговлиТоваромМировойБиржевойТорговли
	|					ТОГДА ""2""
	|				КОГДА КонтролируемыеСделки.СделкаОблагаетсяЕНВД
	|						ИЛИ КонтролируемыеСделки.СделкаСПлательщикомЕСХН
	|					ТОГДА ""3""
	|				КОГДА КонтролируемыеСделки.СделкаКонтролируетсяПоНалогуНаПрибыль
	|					ТОГДА ""4""
	|				КОГДА КонтролируемыеСделки.СделкаКонтролируетсяПоРегистрацииВОЭЗ
	|					ТОГДА ""5""
	|				КОГДА КонтролируемыеСделки.СделкаКонтролируетсяПоНДПИ
	|					ТОГДА ""6""
	|				КОГДА КонтролируемыеСделки.ЗарегистрированВСтранеСЛьготнымНалогообложением
	|					ТОГДА ""7""
	|				КОГДА КонтролируемыеСделки.СтороныВзаимозависимыПоКодексу
	|						И НЕ КонтролируемыеСделки.КонтрагентЗарегистрированВРФ
	|					ТОГДА ""11""
	|				КОГДА КонтролируемыеСделки.СтороныВзаимозависимыПоКодексу
	|						И КонтролируемыеСделки.КонтрагентЗарегистрированВРФ
	|					ТОГДА ""8""
	|				КОГДА КонтролируемыеСделки.ТипВзаимозависимости = ЗНАЧЕНИЕ(Перечисление.ТипыВзаимозависимости.НеВзаимозависимыйПосредник)
	|					ТОГДА ""9""
	|				КОГДА НЕ КонтрагентыКонтролируемыеПоОбщейСумме.ГоловнойКонтрагент ЕСТЬ NULL 
	|					ТОГДА ""10""
	|			КОНЕЦ
	|	КОНЕЦ КАК ПричинаПопаданияВКонтролируемыеСделки,
	|	КонтролируемыеСделки.СделкаКонтролируетсяПоРегистрацииВОЭЗ КАК СделкаКонтролируетсяПоРегистрацииВОЭЗ,
	|	КонтролируемыеСделки.СтороныВзаимозависимыПоКодексу,
	|	ВЫБОР
	|		КОГДА КонтролируемыеСделки.ТипВзаимозависимости = ЗНАЧЕНИЕ(Перечисление.ТипыВзаимозависимости.НеВзаимозависимыйПосредник)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеВзаимозависимыйПосредник,
	|	ВЫБОР
	|		КОГДА НЕ КонтрагентыПоМинимальнойСумме.ГоловнойКонтрагент ЕСТЬ NULL 
	|				И (КонтролируемыеСделки.ТипВзаимозависимости = ЗНАЧЕНИЕ(Перечисление.ТипыВзаимозависимости.НеВзаимозависимыйПосредник)
	|					ИЛИ КонтролируемыеСделки.СтороныВзаимозависимыПоКодексу
	|						И НЕ КонтролируемыеСделки.КонтрагентЗарегистрированВРФ
	|					ИЛИ НЕ КонтрагентыКонтролируемыеПоОбщейСумме.ГоловнойКонтрагент ЕСТЬ NULL 
	|					ИЛИ НЕ КонтрагентыКонтролируемыеПоНДПИ.ГоловнойКонтрагент ЕСТЬ NULL 
	|					ИЛИ НЕ КонтрагентыКонтролируемыеПоСпецРежиму.ГоловнойКонтрагент ЕСТЬ NULL 
	|					ИЛИ НЕ КонтрагентыКонтролируемыеПоПрибыли.ГоловнойКонтрагент ЕСТЬ NULL 
	|					ИЛИ НЕ КонтрагентыКонтролируемыеПоОЭЗ.ГоловнойКонтрагент ЕСТЬ NULL 
	|					ИЛИ НЕ КонтрагентыКонтролируемыеПоРегистрацииНеВРФ.ГоловнойКонтрагент ЕСТЬ NULL )
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СделкаПопалаВУведомление,
	|	ВЫБОР
	|		КОГДА КонтрагентыКонтролируемыеПоОбщейСумме.ГоловнойКонтрагент ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СуммаДоходовПоСделкеПревышаетОбщийПредел
	|ИЗ
	|	КонтролируемыеСделки КАК КонтролируемыеСделки
	|		ЛЕВОЕ СОЕДИНЕНИЕ КонтрагентыКонтролируемыеПоОбщейСумме КАК КонтрагентыКонтролируемыеПоОбщейСумме
	|		ПО КонтролируемыеСделки.ГоловнойКонтрагент = КонтрагентыКонтролируемыеПоОбщейСумме.ГоловнойКонтрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ КонтрагентыКонтролируемыеПоНДПИ КАК КонтрагентыКонтролируемыеПоНДПИ
	|		ПО КонтролируемыеСделки.ГоловнойКонтрагент = КонтрагентыКонтролируемыеПоНДПИ.ГоловнойКонтрагент
	|			И (КонтролируемыеСделки.СделкаКонтролируетсяПоНДПИ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КонтрагентыКонтролируемыеПоСпецРежиму КАК КонтрагентыКонтролируемыеПоСпецРежиму
	|		ПО КонтролируемыеСделки.ГоловнойКонтрагент = КонтрагентыКонтролируемыеПоСпецРежиму.ГоловнойКонтрагент
	|			И (КонтролируемыеСделки.СделкаОблагаетсяЕНВД
	|				ИЛИ КонтролируемыеСделки.СделкаСПлательщикомЕСХН)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КонтрагентыКонтролируемыеПоПрибыли КАК КонтрагентыКонтролируемыеПоПрибыли
	|		ПО КонтролируемыеСделки.ГоловнойКонтрагент = КонтрагентыКонтролируемыеПоПрибыли.ГоловнойКонтрагент
	|			И (КонтролируемыеСделки.СделкаКонтролируетсяПоНалогуНаПрибыль)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КонтрагентыКонтролируемыеПоОЭЗ КАК КонтрагентыКонтролируемыеПоОЭЗ
	|		ПО КонтролируемыеСделки.ГоловнойКонтрагент = КонтрагентыКонтролируемыеПоОЭЗ.ГоловнойКонтрагент
	|			И (КонтролируемыеСделки.СделкаКонтролируетсяПоРегистрацииВОЭЗ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КонтрагентыКонтролируемыеПоРегистрацииНеВРФ КАК КонтрагентыКонтролируемыеПоРегистрацииНеВРФ
	|		ПО КонтролируемыеСделки.ГоловнойКонтрагент = КонтрагентыКонтролируемыеПоРегистрацииНеВРФ.ГоловнойКонтрагент
	|			И (КонтролируемыеСделки.ЗарегистрированВСтранеСЛьготнымНалогообложением
	|				ИЛИ КонтролируемыеСделки.СделкаВнешнейТорговлиТоваромМировойБиржевойТорговли)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КонтрагентыПоМинимальнойСумме КАК КонтрагентыПоМинимальнойСумме
	|		ПО КонтролируемыеСделки.ГоловнойКонтрагент = КонтрагентыПоМинимальнойСумме.ГоловнойКонтрагент
	|
	|СГРУППИРОВАТЬ ПО
	|	КонтролируемыеСделки.ГоловнойКонтрагент,
	|	КонтролируемыеСделки.Контрагент,
	|	КонтролируемыеСделки.Договор,
	|	КонтролируемыеСделки.Соглашение,
	|	КонтролируемыеСделки.ПредметСделки,
	|	КонтролируемыеСделки.Организация,
	|	КонтролируемыеСделки.ОтчетныйГод,
	|	КонтролируемыеСделки.СделкаВнешнейТорговлиТоваромМировойБиржевойТорговли,
	|	КонтролируемыеСделки.КонтрагентЗарегистрированВРФ,
	|	КонтролируемыеСделки.ЗарегистрированВСтранеСЛьготнымНалогообложением,
	|	КонтролируемыеСделки.ТипВзаимозависимости,
	|	КонтролируемыеСделки.СделкаОблагаетсяЕНВД,
	|	КонтролируемыеСделки.СделкаСПлательщикомЕСХН,
	|	КонтролируемыеСделки.СделкаКонтролируетсяПоНалогуНаПрибыль,
	|	КонтролируемыеСделки.СделкаКонтролируетсяПоНДПИ,
	|	КонтролируемыеСделки.СделкаКонтролируетсяПоРегистрацииВОЭЗ,
	|	КонтролируемыеСделки.СтороныВзаимозависимыПоКодексу,
	|	ВЫБОР
	|		КОГДА КонтрагентыКонтролируемыеПоОбщейСумме.ГоловнойКонтрагент ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ЕСТЬNULL(КонтролируемыеСделки.Соглашение.КодНаименованияСделки, """"),
	|	ЕСТЬNULL(КонтролируемыеСделки.Соглашение.КодУсловийПоставки, """"),
	|	ЕСТЬNULL(КонтролируемыеСделки.Соглашение.СпособОпределенияЦеныСделки, ЗНАЧЕНИЕ(Справочник.СпособыОпределенияЦенКонтролируемыхСделок.ПустаяСсылка)),
	|	ВЫБОР
	|		КОГДА ВЫБОР
	|				КОГДА КонтролируемыеСделки.ЗарегистрированВСтранеСЛьготнымНалогообложением
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтролируемыеСделки.СделкаВнешнейТорговлиТоваромМировойБиржевойТорговли
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтролируемыеСделки.СделкаОблагаетсяЕНВД
	|					ТОГДА 0.5
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтролируемыеСделки.СделкаСПлательщикомЕСХН
	|					ТОГДА 0.5
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтролируемыеСделки.СделкаКонтролируетсяПоНалогуНаПрибыль
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтролируемыеСделки.СделкаКонтролируетсяПоРегистрацииВОЭЗ
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтролируемыеСделки.СделкаКонтролируетсяПоНДПИ
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтролируемыеСделки.СтороныВзаимозависимыПоКодексу
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтролируемыеСделки.ТипВзаимозависимости = ЗНАЧЕНИЕ(Перечисление.ТипыВзаимозависимости.НеВзаимозависимыйПосредник)
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ + ВЫБОР
	|				КОГДА КонтрагентыКонтролируемыеПоОбщейСумме.ГоловнойКонтрагент ЕСТЬ NULL 
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ > 1
	|			ТОГДА ""1""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КонтролируемыеСделки.СделкаВнешнейТорговлиТоваромМировойБиржевойТорговли
	|					ТОГДА ""2""
	|				КОГДА КонтролируемыеСделки.СделкаОблагаетсяЕНВД
	|						ИЛИ КонтролируемыеСделки.СделкаСПлательщикомЕСХН
	|					ТОГДА ""3""
	|				КОГДА КонтролируемыеСделки.СделкаКонтролируетсяПоНалогуНаПрибыль
	|					ТОГДА ""4""
	|				КОГДА КонтролируемыеСделки.СделкаКонтролируетсяПоРегистрацииВОЭЗ
	|					ТОГДА ""5""
	|				КОГДА КонтролируемыеСделки.СделкаКонтролируетсяПоНДПИ
	|					ТОГДА ""6""
	|				КОГДА КонтролируемыеСделки.ЗарегистрированВСтранеСЛьготнымНалогообложением
	|					ТОГДА ""7""
	|				КОГДА КонтролируемыеСделки.СтороныВзаимозависимыПоКодексу
	|						И НЕ КонтролируемыеСделки.КонтрагентЗарегистрированВРФ
	|					ТОГДА ""11""
	|				КОГДА КонтролируемыеСделки.СтороныВзаимозависимыПоКодексу
	|						И КонтролируемыеСделки.КонтрагентЗарегистрированВРФ
	|					ТОГДА ""8""
	|				КОГДА КонтролируемыеСделки.ТипВзаимозависимости = ЗНАЧЕНИЕ(Перечисление.ТипыВзаимозависимости.НеВзаимозависимыйПосредник)
	|					ТОГДА ""9""
	|				КОГДА НЕ КонтрагентыКонтролируемыеПоОбщейСумме.ГоловнойКонтрагент ЕСТЬ NULL 
	|					ТОГДА ""10""
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ КонтрагентыПоМинимальнойСумме.ГоловнойКонтрагент ЕСТЬ NULL 
	|				И (КонтролируемыеСделки.ТипВзаимозависимости = ЗНАЧЕНИЕ(Перечисление.ТипыВзаимозависимости.НеВзаимозависимыйПосредник)
	|					ИЛИ КонтролируемыеСделки.СтороныВзаимозависимыПоКодексу
	|						И НЕ КонтролируемыеСделки.КонтрагентЗарегистрированВРФ
	|					ИЛИ НЕ КонтрагентыКонтролируемыеПоОбщейСумме.ГоловнойКонтрагент ЕСТЬ NULL 
	|					ИЛИ НЕ КонтрагентыКонтролируемыеПоНДПИ.ГоловнойКонтрагент ЕСТЬ NULL 
	|					ИЛИ НЕ КонтрагентыКонтролируемыеПоСпецРежиму.ГоловнойКонтрагент ЕСТЬ NULL 
	|					ИЛИ НЕ КонтрагентыКонтролируемыеПоПрибыли.ГоловнойКонтрагент ЕСТЬ NULL 
	|					ИЛИ НЕ КонтрагентыКонтролируемыеПоОЭЗ.ГоловнойКонтрагент ЕСТЬ NULL 
	|					ИЛИ НЕ КонтрагентыКонтролируемыеПоРегистрацииНеВРФ.ГоловнойКонтрагент ЕСТЬ NULL )
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ";
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("КонтролируемыеСделки", Таблица);
	
	Возврат ВнешниеНаборыДанных;
	
КонецФункции

// Функция возвращает заголовок отчета, см. БухгалтерскиеОтчетыВызовСервера.ВывестиЗаголовокОтчета
// Возвращаемое значение:
//	Строка
//
Функция ПолучитьТекстЗаголовка(ПараметрыОтчета, ОрганизацияВНачале = Истина) Экспорт 
	
	Возврат НСтр("ru = 'Контролируемые сделки для включения в уведомление'");
	
КонецФункции

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ПередКомпоновкойМакета(ПараметрыОтчета, Схема, КомпоновщикНастроек) Экспорт
	
	ПредопределенныеНастройки = ПараметрыОтчета.СхемаКомпоновкиДанных.ВариантыНастроек[0].Настройки;
	
	КомпоновщикНастроек.Настройки.Структура.Очистить();
	КомпоновщикНастроек.Настройки.Выбор.Элементы.Очистить();
		
	Таблица = КомпоновщикНастроек.Настройки.Структура.Добавить(Тип("ТаблицаКомпоновкиДанных"));
		
	КолонкаСумма = Таблица.Колонки.Добавить();
	КолонкаСумма.Имя           = "Сумма";
	КолонкаСумма.Использование = Истина;
	БухгалтерскиеОтчетыКлиентСервер.ДобавитьВыбранноеПоле(КолонкаСумма.Выбор, "СуммаБезНДСВРублях");			
	
	Структура =  Новый Структура("Структура",Таблица.Строки);	
	
	КоличествоГруппировок = 0;
	Для Каждого ПолеВыбраннойГруппировки Из ПараметрыОтчета.Группировка Цикл 
		Если ПолеВыбраннойГруппировки.Использование Тогда
			Структура = Структура.Структура.Добавить();
			
			ПолеГруппировки = Структура.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
			ПолеГруппировки.Использование  = Истина;
			ПолеГруппировки.Поле           = Новый ПолеКомпоновкиДанных(ПолеВыбраннойГруппировки.Поле);
			
			Если ПолеВыбраннойГруппировки.ТипГруппировки = 1 Тогда
				ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Иерархия;
			ИначеЕсли ПолеВыбраннойГруппировки.ТипГруппировки = 2 Тогда
				ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.ТолькоИерархия;
			Иначе
				ПолеГруппировки.ТипГруппировки = ТипГруппировкиКомпоновкиДанных.Элементы;
			КонецЕсли;
			
			Структура.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
			ПолеСуммы = Структура.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			
			
			Структура.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));
						
			КоличествоГруппировок = КоличествоГруппировок + 1;
		КонецЕсли;
	КонецЦикла;
	
	//Добавляем предопределенные недоступные группировки (всегда в конце)
	
	ПредопределеннаяГруппировка = ПредопределенныеНастройки.Структура[0].Строки;
	Пока ПредопределеннаяГруппировка.Количество() > 0 Цикл
		
		Если ПредопределеннаяГруппировка[0].ПоляГруппировки.Элементы.Количество() > 0 Тогда
			
			Если ПредопределеннаяГруппировка[0].РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный и ПредопределеннаяГруппировка[0].Состояние = СостояниеЭлементаНастройкиКомпоновкиДанных.Включен Тогда
				Структура = Структура.Структура.Добавить();
				
				//Поля группировок
				Для Каждого ПолеПредопределеннойГруппировки Из ПредопределеннаяГруппировка[0].ПоляГруппировки.Элементы Цикл
					Если Тип(ПолеПредопределеннойГруппировки) = Тип("АвтоПолеГруппировкиКомпоновкиДанных") Тогда
						ПолеГруппировки = Структура.ПоляГруппировки.Элементы.Добавить(Тип("АвтоПолеГруппировкиКомпоновкиДанных"));
					Иначе
						Если НайтиГруппировку(Таблица.Строки, ПолеПредопределеннойГруппировки.Поле) = Неопределено Тогда
							ПолеГруппировки = Структура.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
							ЗаполнитьЗначенияСвойств(ПолеГруппировки,ПолеПредопределеннойГруппировки);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;	
				
				//Отборы
				Для Каждого ОтборПредопределеннойГруппировки Из ПредопределеннаяГруппировка[0].Отбор.Элементы Цикл
					ОтборГруппировки =  Структура.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
					ЗаполнитьЗначенияСвойств(ОтборГруппировки,ОтборПредопределеннойГруппировки);
				КонецЦикла;	
				
				//Условное оформление
				Для Каждого УсловноеОформлениеПредопределеннойГруппировки Из ПредопределеннаяГруппировка[0].УсловноеОформление.Элементы Цикл
					УсловноеОформлениеГруппировки =  Структура.УсловноеОформление.Элементы.Добавить();
					ЗаполнитьЗначенияСвойств(УсловноеОформлениеГруппировки,УсловноеОформлениеПредопределеннойГруппировки);
					
					//Отбор
					Для Каждого ОтборПредопределенногоОформления Из УсловноеОформлениеПредопределеннойГруппировки.Отбор.Элементы Цикл
						ОтборОформления =  УсловноеОформлениеГруппировки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
						ЗаполнитьЗначенияСвойств(ОтборОформления,ОтборПредопределенногоОформления);
					КонецЦикла;	
					
					//Параметры оформления
					Для ИндексПараметра = 0 По УсловноеОформлениеПредопределеннойГруппировки.Оформление.Элементы.Количество() - 1 Цикл
						ОформлениеПредопределеннаяГруппировка = УсловноеОформлениеПредопределеннойГруппировки.Оформление.Элементы[ИндексПараметра];
						ОформлениеГруппировки =  УсловноеОформлениеГруппировки.Оформление.Элементы[ИндексПараметра];
						ЗаполнитьЗначенияСвойств(ОформлениеГруппировки,ОформлениеПредопределеннаяГруппировка);
					КонецЦикла;	
					
					Для Каждого ПредопределенноеОформляемоеПолеГруппировки Из УсловноеОформлениеПредопределеннойГруппировки.Поля.Элементы Цикл
						ОформляемоеПоле = УсловноеОформлениеГруппировки.Поля.Элементы.Добавить();
						ЗаполнитьЗначенияСвойств(ОформляемоеПоле,ПредопределенноеОформляемоеПолеГруппировки);
					КонецЦикла;	
					
				КонецЦикла;	
				
				//Выбор
				Для Каждого ВыборПредопределеннойГруппировки Из ПредопределеннаяГруппировка[0].Выбор.Элементы Цикл
					Если Тип(ВыборПредопределеннойГруппировки) = Тип("АвтоВыбранноеПолеКомпоновкиДанных") Тогда
						Структура.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));	
					Иначе
						Если НайтиГруппировку(Таблица.Строки, ВыборПредопределеннойГруппировки.Поле) = Неопределено Тогда
							ДобавитьВыбранноеПолеИлиГруппу(ВыборПредопределеннойГруппировки,Структура.Выбор);	
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;	
				
				//Порядок
				Для Каждого ПорядокПредопределеннойГруппировки Из ПредопределеннаяГруппировка[0].Порядок.Элементы Цикл
					Если Тип(ПорядокПредопределеннойГруппировки) = Тип("АвтоЭлементПорядкаКомпоновкиДанных") Тогда
						Структура.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));	
					Иначе	
						ПорядокГруппировки =  Структура.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
						ЗаполнитьЗначенияСвойств(ПорядокГруппировки,ПорядокПредопределеннойГруппировки);
					КонецЕсли;
				КонецЦикла;	
				
				//Параметры вывода
				Для ИндексПараметра = 0 По ПредопределеннаяГруппировка[0].ПараметрыВывода.Элементы.Количество() - 1 Цикл
					ПараметрыВыводаПредопределеннаяГруппировка = ПредопределеннаяГруппировка[0].ПараметрыВывода.Элементы[ИндексПараметра];
					ПараметрыВыводаГруппировки =  Структура.ПараметрыВывода.Элементы[ИндексПараметра];
					ЗаполнитьЗначенияСвойств(ПараметрыВыводаГруппировки,ПараметрыВыводаПредопределеннаяГруппировка);
				КонецЦикла;	
				
			КонецЕсли;
		КонецЕсли;
		
		ПредопределеннаяГруппировка = ПредопределеннаяГруппировка[0].Структура;
		
	КонецЦикла;
	
	// Дополнительные данные
	БухгалтерскиеОтчетыВызовСервера.ДобавитьДополнительныеПоля(ПараметрыОтчета, КомпоновщикНастроек);
					
КонецПроцедуры

// Процедура выполняет обработку результата отчета, см. БухгалтерскиеОтчетыВызовСервера.СформироватьОтчет
//
Процедура ПослеВыводаРезультата(ПараметрыОтчета, Результат) Экспорт
	
	БухгалтерскиеОтчетыВызовСервера.ОбработкаРезультатаОтчета(ПараметрыОтчета.ИдентификаторОтчета, Результат);
	
	Если Результат.Области.Найти("Заголовок") = Неопределено Тогда
		Результат.ФиксацияСверху = 0;
	Иначе
		Результат.ФиксацияСверху = Результат.Области.Заголовок.Низ;
	КонецЕсли;
	Результат.ФиксацияСлева = 0;
	
КонецПроцедуры

// Функция возвращает показатели отчета, см. БухгалтерскиеОтчетыВызовСервера.ОбработкаПроверкиЗаполнения
// Возвращаемое значение:
//	Массив - массив значений строкового типа
//
Функция ПолучитьНаборПоказателей() Экспорт
	
	НаборПоказателей = Новый Массив;
	НаборПоказателей.Добавить("БУ");
	НаборПоказателей.Добавить("НУ");
	НаборПоказателей.Добавить("ПР");
	НаборПоказателей.Добавить("ВР");
	
	Возврат НаборПоказателей;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НайтиГруппировку(Структура, Имя)
	
	Для каждого Элемент Из Структура Цикл
		
		Для каждого Поле Из Элемент.ПоляГруппировки.Элементы Цикл
			Если Не ТипЗнч(Поле) = Тип("АвтоПолеГруппировкиКомпоновкиДанных") Тогда
				Если Поле.Поле = Новый ПолеКомпоновкиДанных(Имя) Тогда
					Возврат Элемент;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если Элемент.Структура.Количество() = 0 Тогда
			Возврат Неопределено;
		Иначе
			Группировка = НайтиГруппировку(Элемент.Структура, Имя);
		КонецЕсли;
	КонецЦикла;
	Возврат Группировка;
	
КонецФункции

Процедура ДобавитьВыбранноеПолеИлиГруппу(Поле,Выбор)
	
	Если ТипЗнч(Поле) = Тип("ВыбранноеПолеКомпоновкиДанных") Тогда
		ВыборГруппировки =  Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(ВыборГруппировки,Поле);
	ИначеЕсли ТипЗнч(Поле) = Тип("ГруппаВыбранныхПолейКомпоновкиДанных") Тогда
		ВыборГруппировки =  Выбор.Элементы.Добавить(Тип("ГруппаВыбранныхПолейКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(ВыборГруппировки,Поле);
		Для Каждого ПолеГруппы Из Поле.Элементы  Цикл
			ДобавитьВыбранноеПолеИлиГруппу(ПолеГруппы,ВыборГруппировки);
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли