#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Перем ТаблицаВариантовОтчета Экспорт;      // Таблица вариантов доступных текущему пользователю.
Перем ДатаНачалаНП, ДатаКонцаНП;
Перем УчитыватьОбособленноеПодразделение Экспорт;

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДокументРезультат.Очистить();
	
	ДокументРезультат.ТолькоПросмотр = Истина;
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ПолеСправа = 0;
	ДокументРезультат.ПолеСнизу = 0;
	ДокументРезультат.ПолеСправа = 0;
	ДокументРезультат.АвтоМасштаб = Истина;
	
	ДокументРезультат.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КарточкаУчетаПоСтраховымВзносам";
			
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	ЗначениеПараметра = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	Если ЗначениеПараметра <> Неопределено Тогда
		ДатаНачалаНП = Дата(ЗначениеПараметра.Значение.ДатаНачала);
		ДатаКонцаНП  = Дата(ЗначениеПараметра.Значение.ДатаОкончания);
	КонецЕсли;
	
	Если ДатаНачалаНП = '00010101' Тогда
		ДатаНачалаНП = НачалоГода(ТекущаяДатаСеанса());
	КонецЕсли;
	Если ДатаКонцаНП = '00010101' Тогда
		ДатаКонцаНП = НачалоГода(ТекущаяДатаСеанса());
	КонецЕсли;
	
	УчитыватьОбособленноеПодразделение = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("УчитыватьОбособленноеПодразделение")).Значение;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
		
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ТаблицаЗначений =  Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаЗначений);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	Если ТаблицаЗначений.Количество() > 0 Тогда
		СформироватьМакет(ДокументРезультат, ТаблицаЗначений);
	Иначе
		СформироватьПустографку(ДокументРезультат, Год(ДатаКонцаНП));
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Для общей формы "Форма отчета" подсистемы "Варианты отчетов".
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт

КонецПроцедуры

// 4D:ERP для Беларуси, Яна, 08.09.2017 15:12:28 
// Локализация документов зарплатного модуля, №15480
// {
Процедура СформироватьМакет(ДокументРезультат, ФизЛицаОрганизаций)
	
	НачалоПериода = НачалоГода(ДатаНачалаНП);
	ОкончаниеПериода = КонецГода(ДатаКонцаНП);
	
	// Расчет вычисляемых параметров.
	
	ТарифОрганизацийИнвалидов = ОбщегоНазначенияКлиентСервер.ПредопределенныйЭлемент("Справочник.ВидыТарифовСтраховыхВзносов.ОрганизацияИнвалидов");
	
	// Создание запроса и установка всех необходимых параметров.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц; 
	Запрос.УстановитьПараметр("ТаблицаФизЛицОрганизаций", ФизЛицаОрганизаций);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("ДатаСтрахованияВременноПребывающих", УчетСтраховыхВзносов.ДатаСтрахованияВременноПребывающих());
	Запрос.УстановитьПараметр("ДатаСтрахованияВсехВременноПребывающих", УчетСтраховыхВзносов.ДатаСтрахованияВсехВременноПребывающих());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаФизЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТаблицаФизЛиц.Организация КАК Организация,
	|	ТаблицаФизЛиц.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ПОМЕСТИТЬ ВТФизЛицаОрганизаций
	|ИЗ
	|	&ТаблицаФизЛицОрганизаций КАК ТаблицаФизЛиц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизЛицаОрганизаций.ФизическоеЛицо,
	|	ФизЛицаОрганизаций.ГоловнаяОрганизация,
	|	&НачалоПериода КАК НачалоПериода,
	|	&КонецПериода КАК ОкончаниеПериода
	|ИЗ
	|	ВТФизЛицаОрганизаций КАК ФизЛицаОрганизаций";
	ФизЛицаОрганизаций = Запрос.Выполнить().Выгрузить();
	Запрос.УстановитьПараметр("ТаблицаФизЛицОрганизаций", Неопределено);
	
	
	// Получаем временные таблицы, используя общие алгоритмы.
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, НачалоПериода, ОкончаниеПериода);
	УчетСтраховыхВзносов.СформироватьВТРасширенныеСведенияОДоходахИВзносах(НачалоПериода, ОкончаниеПериода, , Запрос.МенеджерВременныхТаблиц, Истина, Истина, Истина, Истина, , Макс(ТекущаяДатаСеанса(), ОкончаниеПериода));
	КадровыеДанные = "Фамилия, Имя, Отчество, ФИОПолные, ИНН, СтраховойНомерПФР, ДатаРождения, Наименование, Страна";
	КадровыйУчет.СоздатьНаДатуВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, Истина, ФизЛицаОрганизаций.ВыгрузитьКолонку("ФизическоеЛицо"), КадровыеДанные, ОкончаниеПериода);	
	
	//УчетСтраховыхВзносов.СоздатьВТОписаниеТарифов(НачалоПериода, ОкончаниеПериода, Запрос.МенеджерВременныхТаблиц);
		
	//ОписаниеФильтра = ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра("ВТПериоды");
	//ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	//ПараметрыПостроения.ВсеЗаписи = Истина;
		
	//ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
	//	"ТарифыВзносовЗаЗанятыхНаРаботахСДосрочнойПенсией",
	//	Запрос.МенеджерВременныхТаблиц,
	//	Истина,
	//	ОписаниеФильтра,
	//	ПараметрыПостроения);
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПредельнаяВеличинаБазыСтраховыхВзносовСрезПоследних.Размер   КАК ПревышениеФСЗН
	|ИЗ
	|	РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов.СрезПоследних(&КонецПериода, ) КАК ПредельнаяВеличинаБазыСтраховыхВзносовСрезПоследних";
	ВыборкаПревышения = Запрос.Выполнить().Выбрать();
	ВыборкаПревышения.Следующий();
	
	ДанныеРасчетаТекст = 
	"ВЫБРАТЬ
	|	Инвалиды.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Инвалиды.Период КАК РасчетныйПериод,
	|	МАКСИМУМ(Инвалиды.Инвалид) КАК Инвалидность,
	|	МАКСИМУМ(Инвалиды.СправкаОбИнвалидностиДатаВыдачи) КАК ДатаВыдачи,
	|	МАКСИМУМ(Инвалиды.СправкаОбИнвалидностиСрокДействия) КАК СрокДействияСправки
	|ПОМЕСТИТЬ ВТСправкиОбИнвалидности
	|ИЗ
	|	ВТДанныеОбИнвалидности КАК Инвалиды
	|ГДЕ
	|	Инвалиды.Инвалид
	|
	|СГРУППИРОВАТЬ ПО
	|	Инвалиды.ФизическоеЛицо,
	|	Инвалиды.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	РасчетныйПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФизЛица.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ФизЛица.ФизическоеЛицо.ИНН КАК ФизическоеЛицоИНН,
	|	ФизЛица.ФизическоеЛицо.ФИО КАК ФизическоеЛицоНаименование,
	|	ФизЛица.ФизическоеЛицо.СтраховойНомерПФР КАК ФизическоеЛицоСтраховойНомерПФР,
	|	ФизЛица.ФизическоеЛицо.ДатаРождения КАК ФизическоеЛицоДатаРождения,
	|	ФизЛица.Организация КАК Организация,
	|	ФизЛица.Организация.ИНН КАК ОрганизацияИНН,
	|	ФизЛица.Организация.РегистрацияВНалоговомОргане.КПП КАК ОрганизацияКПП,
	|	ФизЛица.Организация.Наименование КАК ОрганизацияНаименование,
	|	ФизЛица.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ФизЛица.ГоловнаяОрганизация.ИНН КАК ГоловнаяОрганизацияИНН,
	|	ФизЛица.ГоловнаяОрганизация.РегистрацияВНалоговомОргане.КПП КАК ГоловнаяОрганизацияКПП,
	|	ФизЛица.ГоловнаяОрганизация.Наименование КАК ГоловнаяОрганизацияНаименование,
	|	Периоды.Период КАК Период,
	|	ТарифыСтраховыхВзносов.Ссылка КАК ВидТарифа
	|ПОМЕСТИТЬ ВТПериодыФизлицаСтавки
	|ИЗ
	|	ВТФизЛицаОрганизаций КАК ФизЛица,
	|	ВТПериоды КАК Периоды,
	|	Справочник.ВидыТарифовСтраховыхВзносов КАК ТарифыСтраховыхВзносов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	Период,
	|	Организация,
	|	ВидТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходах.ВидЗастрахованногоЛица,
	|	СведенияОДоходах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СведенияОДоходах.Организация КАК Организация,
	|	СведенияОДоходах.Период КАК ПериодРегистрации,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
	|	СУММА(СведенияОДоходах.Сумма) КАК НачисленоВсего,
	|	СУММА(СведенияОДоходах.НеОблагаетсяПолностью) КАК НеОблагается,
	|	СУММА(СведенияОДоходах.БольничныйИзФСЗН) КАК БольничныйИзФСЗН,
	|	СУММА(СведенияОДоходах.ПособияИзФСЗН) КАК ПособияИзФСЗН,
	|	СУММА(СведенияОДоходах.БазаФСЗН - СведенияОДоходах.СуммаПревысившаяПределФСЗН) КАК БазаФСЗН,
	|	СУММА(СведенияОДоходах.БазаБелгосстрах) КАК БазаБелгосстрах,
	|	СУММА(СведенияОДоходах.СуммаПревысившаяПределФСЗН) КАК СуммаПревысившаяПределФСЗН,
	|	СУММА(СведенияОДоходах.ФСЗН) КАК ФСЗН,
	|	СУММА(СведенияОДоходах.ПенсионныйФонд) КАК ПенсионныйФонд,
	|	СУММА(СведенияОДоходах.ПС) КАК ПС,
	|	СУММА(СведенияОДоходах.СС) КАК СС,
	|	СУММА(СведенияОДоходах.Белгосстрах) КАК Белгосстрах
	|ПОМЕСТИТЬ ВТБазаДляОтчета
	|ИЗ
	|	ВТРасширенныеСведенияОДоходахИВзносах КАК СведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОписаниеТарифов КАК ОписаниеТарифов
	|		ПО СведенияОДоходах.ВидТарифаСтраховыхВзносов = ОписаниеТарифов.ВидТарифа
	|			И СведенияОДоходах.Период = ОписаниеТарифов.Период
	|ГДЕ
	|	СведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеОблагаетсяПолностью)
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.ГоловнаяОрганизация,
	|	СведенияОДоходах.Организация,
	|	СведенияОДоходах.Период,
	|	СведенияОДоходах.ВидЗастрахованногоЛица,
	|	СведенияОДоходах.ВидТарифаСтраховыхВзносов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	ПериодРегистрации,
	|	Организация,
	|	ВидТарифаСтраховыхВзносов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГОД(СписокФизЛиц.Период) КАК Год,
	|	СписокФизЛиц.Организация КАК Организация,
	|	СписокФизЛиц.ОрганизацияНаименование КАК НаименованиеОрганизации,
	|	СписокФизЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА КадровыеДанные.ФИОПолные = """"
	|			ТОГДА КадровыеДанные.Наименование
	|		ИНАЧЕ КадровыеДанные.ФИОПолные
	|	КОНЕЦ КАК АлфавитныйПорядок,
	|	КадровыеДанные.Фамилия КАК Фамилия,
	|	КадровыеДанные.Имя КАК Имя,
	|	КадровыеДанные.Отчество КАК Отчество,
	|	КадровыеДанные.ИНН КАК ИНН,
	|	КадровыеДанные.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	КадровыеДанные.ДатаРождения КАК ДатаРождения,
	|	СписокФизЛиц.ВидТарифа КАК ВидТарифаСтраховыхВзносов,
	|	СписокФизЛиц.Период КАК ПериодРегистрации,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КадровыеДанные.Страна, ЗНАЧЕНИЕ(Справочник.СтраныМира.Беларусь)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Беларусь)
	|			ТОГДА ""Беларусь""
	|		КОГДА КадровыеДанные.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|			ТОГДА ""Лицо без гражданства""
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(КадровыеДанные.Страна)
	|	КОНЕЦ КАК Гражданство,
	|	ЕСТЬNULL(СправкиОбИнвалидности.Инвалидность, ЛОЖЬ) КАК ЕстьИнвалидность,
	|	ЕСТЬNULL(СправкиОбИнвалидности.ДатаВыдачи, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаВыдачи,
	|	ЕСТЬNULL(СправкиОбИнвалидности.СрокДействияСправки, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокДействияСправки,
	|	БазаДляОтчета.ВидЗастрахованногоЛица КАК ВидЗастрахованногоЛица,
	|	СУММА(БазаДляОтчета.НачисленоВсего) КАК НачисленоВсего,
	|	СУММА(БазаДляОтчета.НеОблагается) КАК НеОблагается,
	|	СУММА(БазаДляОтчета.БольничныйИзФСЗН) КАК БольничныйИзФСЗН,
	|	СУММА(БазаДляОтчета.ПособияИзФСЗН) КАК ПособияИзФСЗН,
	|	СУММА(БазаДляОтчета.БазаФСЗН) КАК БазаФСЗН,
	|	СУММА(БазаДляОтчета.БазаБелгосстрах) КАК БазаБелгосстрах,
	|	СУММА(БазаДляОтчета.СуммаПревысившаяПределФСЗН) КАК СуммаПревысившаяПределФСЗН,
	|	СУММА(БазаДляОтчета.ФСЗН) КАК ФСЗН,
	|	СУММА(БазаДляОтчета.ПенсионныйФонд) КАК ПенсионныйФонд,
	|	СУММА(БазаДляОтчета.ПС) КАК ПС,
	|	СУММА(БазаДляОтчета.СС) КАК СС,
	|	СУММА(БазаДляОтчета.Белгосстрах) КАК Белгосстрах
	|ИЗ
	|	ВТПериодыФизлицаСтавки КАК СписокФизЛиц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаДляОтчета КАК БазаДляОтчета
	|		ПО СписокФизЛиц.ФизическоеЛицо = БазаДляОтчета.ФизическоеЛицо
	|			И СписокФизЛиц.Организация = БазаДляОтчета.Организация
	|			И СписокФизЛиц.ВидТарифа = БазаДляОтчета.ВидТарифаСтраховыхВзносов
	|			И СписокФизЛиц.Период = БазаДляОтчета.ПериодРегистрации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанные
	|		ПО СписокФизЛиц.ФизическоеЛицо = КадровыеДанные.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерыТарифныхСтавок КАК ТарифныеСтавки
	|		ПО СписокФизЛиц.Период = ТарифныеСтавки.РасчетныйПериод
	|			И СписокФизЛиц.ВидТарифа = ТарифныеСтавки.ВидТарифа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСправкиОбИнвалидности КАК СправкиОбИнвалидности
	|		ПО СписокФизЛиц.ФизическоеЛицо = СправкиОбИнвалидности.ФизическоеЛицо
	|			И СписокФизЛиц.Период = СправкиОбИнвалидности.РасчетныйПериод
	|ГДЕ
	|	БазаДляОтчета.ВидТарифаСтраховыхВзносов ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ГОД(СписокФизЛиц.Период),
	|	СписокФизЛиц.Организация,
	|	СписокФизЛиц.ОрганизацияНаименование,
	|	СписокФизЛиц.ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА КадровыеДанные.ФИОПолные = """"
	|			ТОГДА КадровыеДанные.Наименование
	|		ИНАЧЕ КадровыеДанные.ФИОПолные
	|	КОНЕЦ,
	|	КадровыеДанные.Фамилия,
	|	КадровыеДанные.Имя,
	|	КадровыеДанные.Отчество,
	|	КадровыеДанные.ИНН,
	|	КадровыеДанные.СтраховойНомерПФР,
	|	КадровыеДанные.ДатаРождения,
	|	СписокФизЛиц.ВидТарифа,
	|	СписокФизЛиц.Период,
	|	ЕСТЬNULL(СправкиОбИнвалидности.Инвалидность, ЛОЖЬ),
	|	ЕСТЬNULL(СправкиОбИнвалидности.ДатаВыдачи, ДАТАВРЕМЯ(1, 1, 1)),
	|	ЕСТЬNULL(СправкиОбИнвалидности.СрокДействияСправки, ДАТАВРЕМЯ(1, 1, 1)),
	|	БазаДляОтчета.ВидЗастрахованногоЛица,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КадровыеДанные.Страна, ЗНАЧЕНИЕ(Справочник.СтраныМира.Беларусь)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Беларусь)
	|			ТОГДА ""Беларусь""
	|		КОГДА КадровыеДанные.Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)
	|			ТОГДА ""Лицо без гражданства""
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕССЫЛКИ(КадровыеДанные.Страна)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Год,
	|	Организация,
	|	АлфавитныйПорядок,
	|	ФизическоеЛицо,
	|	ВидТарифаСтраховыхВзносов,
	|	ПериодРегистрации";
			
	// -----------------------------------------------------------------------------
	// ВЫПОЛНЕНИЕ ЗАПРОСОВ
	
	// Данные расчета
	//Запрос.Текст = ДанныеРасчетаТекст;
	//МассивЗапросов = Запрос.ВыполнитьПакет();
	//Выборка = МассивЗапросов[МассивЗапросов.Количество() - 1].Выбрать();
	//ВыборкаДоходов = МассивЗапросов[МассивЗапросов.Количество() - 2].Выбрать();
	//ВыборкаДопВзносов = МассивЗапросов[МассивЗапросов.Количество() - 3].Выбрать();
	//ОснованияВыплатЗаСчетФедеральногоБюджета = МассивЗапросов[МассивЗапросов.Количество() - 4].Выгрузить();
	//ВыборкаНСиПЗ = МассивЗапросов[МассивЗапросов.Количество() - 5].Выбрать();
	//ВыборкаПособий = МассивЗапросов[МассивЗапросов.Количество() - 6].Выбрать();
	
	Запрос.Текст = ДанныеРасчетаТекст;
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();

	
	// -----------------------------------------------------------------------------
	// ЗАПОЛНЕНИЕ ФОРМЫ
	
	// Области макета
			
	МакетЛокализация =	УправлениеПечатью.МакетПечатнойФормы("Отчет.КарточкаУчетаПоСтраховымВзносам.Локализация");

		
	Пока Выборка.СледующийПоЗначениюПоля("Год") Цикл
		
		Макет = МакетЛокализация;	
	
		ОбластьШапка						= Макет.ПолучитьОбласть("Шапка");
		ОбластьПодвал 					    = Макет.ПолучитьОбласть("Подвал");
		ОбластьСтрока						= Макет.ПолучитьОбласть("Строка");
		ОбластьПустаяСтрока					= Макет.ПолучитьОбласть("ПустаяСтрока");
		
		
		СНачалаГода = Новый Структура("ИтогоБазаФСЗН, 
								|	ИтогоБольничныйИзФСЗН, 
								|	ИтогоПенсионныйФонд, 
								|	ИтогоФСЗН, 
								|	ИтогоПС, 
								|	ИтогоСС, 
								|	ИтогоБазаБелгосстрах, 
								|	ИтогоБелгосстрах");

			
		Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
				
			Пока Выборка.СледующийПоЗначениюПоля("АлфавитныйПорядок") Цикл
				
				Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
							
						ОбластьШапка.Параметры.Заполнить(Выборка);
						ОбластьШапка.Параметры.НалоговыйПериод = Формат(Выборка.Год,"ЧГ=");

						ДокументРезультат.Вывести(ОбластьШапка);
						СНачалаГода.ИтогоБазаФСЗН = 0;
						СНачалаГода.ИтогоБольничныйИзФСЗН = 0;
						СНачалаГода.ИтогоПенсионныйФонд = 0;
						СНачалаГода.ИтогоФСЗН = 0;
						СНачалаГода.ИтогоПС = 0;
						СНачалаГода.ИтогоСС = 0;
						СНачалаГода.ИтогоБазаБелгосстрах = 0;
						СНачалаГода.ИтогоБелгосстрах = 0;
						
						Месяц = 0;
						
						// Выводим данные за все 12 месяцев.
						Пока Выборка.Следующий() Цикл
							
							МесяцНовый = Месяц(Выборка.ПериодРегистрации); // месяц, который выводим
							
							Если МесяцНовый > Месяц + 1 Тогда
								Для СчМесяцев = Месяц + 1 По МесяцНовый - 1 Цикл
									ОбластьПустаяСтрока.Параметры.Месяц = Дата(Выборка.Год,СчМесяцев,1,0,0,0);
									ДокументРезультат.Вывести(ОбластьПустаяСтрока);
								КонецЦикла;	
							КонецЕсли;
							Месяц = МесяцНовый;

							ОбластьСтрока.Параметры.Заполнить(Выборка);
							ОбластьПустаяСтрока.Параметры.Месяц = Выборка.ПериодРегистрации;
							
							СНачалаГода.ИтогоБазаФСЗН = СНачалаГода.ИтогоБазаФСЗН + ОбластьСтрока.Параметры.БазаФСЗН;
							СНачалаГода.ИтогоБольничныйИзФСЗН = СНачалаГода.ИтогоБольничныйИзФСЗН + ОбластьСтрока.Параметры.БольничныйИзФСЗН;
							СНачалаГода.ИтогоПенсионныйФонд = СНачалаГода.ИтогоПенсионныйФонд + ОбластьСтрока.Параметры.ПенсионныйФонд;
							СНачалаГода.ИтогоФСЗН = СНачалаГода.ИтогоФСЗН + ОбластьСтрока.Параметры.ФСЗН;
							СНачалаГода.ИтогоПС = СНачалаГода.ИтогоПС + ОбластьСтрока.Параметры.ПС;
							СНачалаГода.ИтогоСС = СНачалаГода.ИтогоСС + ОбластьСтрока.Параметры.СС;
							СНачалаГода.ИтогоБазаБелгосстрах = СНачалаГода.ИтогоБазаБелгосстрах + ОбластьСтрока.Параметры.БазаБелгосстрах;
							СНачалаГода.ИтогоБелгосстрах = СНачалаГода.ИтогоБелгосстрах + ОбластьСтрока.Параметры.Белгосстрах;
	
							// Выведем месяц
							ДокументРезультат.Вывести(ОбластьСтрока);
							
						КонецЦикла; 
						
						Если Месяц < 12 Тогда  // Дополним таблицу пустыми строками.
							Для СчМесяцев = Месяц + 1 По 12 Цикл
								// Выведем пустой месяц
								ОбластьПустаяСтрока.Параметры.Месяц = Дата(Выборка.Год,СчМесяцев,1,0,0,0);
								ДокументРезультат.Вывести(ОбластьПустаяСтрока);								
							КонецЦикла;		
						КонецЕсли;
					
						ОбластьПодвал.Параметры.Заполнить(СНачалаГода);
						ДокументРезультат.Вывести(ОбластьПодвал);
						ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					
				КонецЦикла; 
			
			КонецЦикла; 
			
		КонецЦикла; 
		
	КонецЦикла; 
	
	// -----------------------------------------------------------------------------
	
	// Параметры документа
	УстановитьПараметрыВыводаТабличногоДокумента(ДокументРезультат);
	
КонецПроцедуры
// }
// 4D

Процедура УдалитьПустыеРазделыУсловийТруда(ТабличныйДокумент)
	
	НачалоРаздела = ТабличныйДокумент.ВысотаТаблицы - 131;
	Для Сч = 1 По 12 Цикл
		Если РазделЗаполнен(ТабличныйДокумент.ПолучитьОбласть(НачалоРаздела,,НачалоРаздела + 10)) Тогда
			НачалоРаздела = НачалоРаздела + 11;
			Продолжить;
		КонецЕсли;
		ТабличныйДокумент.УдалитьОбласть(ТабличныйДокумент.Область(НачалоРаздела,,НачалоРаздела + 10), ТипСмещенияТабличногоДокумента.ПоВертикали);	
	КонецЦикла;

КонецПроцедуры

Функция РазделЗаполнен(ТабличныйДокумент)

	ПроверяемыхСтрок = ТабличныйДокумент.ВысотаТаблицы - 1;
	ПроверяемыхКолонок = ТабличныйДокумент.ШиринаТаблицы - 3;
	
	Для СчСтрок = 1 По ПроверяемыхСтрок Цикл
		Для СчКолонок = 1 По ПроверяемыхКолонок Цикл
			Если ЗначениеЗаполнено(ТабличныйДокумент.Область("R" + (СчСтрок + 1) + "C" + (СчКолонок + 3)).Текст) Тогда
				Возврат Истина
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Ложь
	
КонецФункции

Процедура СформироватьПустографку(ДокументРезультат, Год)
	
	Если Год > 2016 Тогда
		Макет = УправлениеПечатью.МакетПечатнойФормы("Отчет.КарточкаУчетаПоСтраховымВзносам.ПФ_MXL_КарточкаСтраховыхВзносов2017");
	ИначеЕсли Год > 2014 Тогда
		Макет = УправлениеПечатью.МакетПечатнойФормы("Отчет.КарточкаУчетаПоСтраховымВзносам.ПФ_MXL_КарточкаСтраховыхВзносов2015");
	ИначеЕсли Год = 2014 Тогда
		Макет = УправлениеПечатью.МакетПечатнойФормы("Отчет.КарточкаУчетаПоСтраховымВзносам.ПФ_MXL_КарточкаСтраховыхВзносов2014");
	ИначеЕсли Год = 2013 Тогда
		Макет = УправлениеПечатью.МакетПечатнойФормы("Отчет.КарточкаУчетаПоСтраховымВзносам.ПФ_MXL_КарточкаСтраховыхВзносов2013");
	ИначеЕсли Год = 2012 Тогда
		Макет = УправлениеПечатью.МакетПечатнойФормы("Отчет.КарточкаУчетаПоСтраховымВзносам.ПФ_MXL_КарточкаСтраховыхВзносов2012");
	Иначе 	
		Макет =	УправлениеПечатью.МакетПечатнойФормы("Отчет.КарточкаУчетаПоСтраховымВзносам.ПФ_MXL_КарточкаСтраховыхВзносов");
	КонецЕсли;
	
	ОбластьЗаглавие    = Макет.ПолучитьОбласть("Заглавие");
	ОбластьШапка       = Макет.ПолучитьОбласть("Шапка");
	ОбластьПустойМесяц = Макет.ПолучитьОбласть("ПустойМесяц");
	ОбластьПодвал      = Макет.ПолучитьОбласть("Подвал");
	
	ОбластьЗаглавие.Параметры.НалоговыйПериод = Формат(Год,"ЧГ=");
	
	ДокументРезультат.Вывести(ОбластьЗаглавие);
	ДокументРезультат.Вывести(ОбластьШапка);
	Для Сч = 1 По 12 Цикл
		ДокументРезультат.Присоединить(ОбластьПустойМесяц);
	КонецЦикла;
	ДокументРезультат.Вывести(ОбластьПодвал);
	
	// Параметры документа
	УстановитьПараметрыВыводаТабличногоДокумента(ДокументРезультат);
	
КонецПроцедуры

Процедура УстановитьПараметрыВыводаТабличногоДокумента(ДокументРезультат)
	ДокументРезультат.Автомасштаб 			= 	Истина;
	ДокументРезультат.ОриентацияСтраницы 	= 	ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ТолькоПросмотр		= 	Истина;
	ДокументРезультат.ПолеСверху			= 	5;
	ДокументРезультат.ПолеСнизу				= 	0;
	ДокументРезультат.ПолеСлева				= 	15;
КонецПроцедуры

#КонецОбласти

#КонецЕсли