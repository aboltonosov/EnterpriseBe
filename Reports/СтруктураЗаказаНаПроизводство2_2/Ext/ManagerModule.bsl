#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получает данные, необходимые для вывода структуры заказа на производство.
//
// Параметры:
//  Параметры - Структура - параметры чтения данных.
//  АдресХранилища - Строка - адрес хранилища, в которое будет помещен результат.
//
Процедура ПрочитатьСтруктуруЗаказов(Параметры, АдресХранилища) Экспорт
	
	Номенклатура = Параметры.Номенклатура;
	Номенклатура.Очистить();
	
	Этапы = Параметры.Этапы;
	Этапы.Очистить();
	
	ИндексыСтрокПродукции = Новый Массив;
	
	Данные = ДанныеДляЗаполненияСтруктурыЗаказов(Параметры.Заказы);
	
	ОтборРегистратор = Новый Структура("Регистратор");
	ОтборНоменклатура = Новый Структура("Заказ, Номенклатура, Характеристика, Спецификация, Получатель, Этап, Назначение");
	
	Для каждого Заказ Из Параметры.Заказы Цикл
		
		ОтборРегистратор.Регистратор = Заказ;
		
		СтрокиРегистратор = Данные.НоменклатураВПроизводстве.НайтиСтроки(ОтборРегистратор);
		
		ПланированиеПроизводства.СортироватьМассив(СтрокиРегистратор, НаправлениеСортировки.Возр, "НомерСтроки");
		
		Для каждого СтрокаРегистратор Из СтрокиРегистратор Цикл
			
			НоваяСтрока = Номенклатура.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРегистратор);
			
			НоваяСтрока.ПредставлениеНоменклатураЭтап = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
				СтрокаРегистратор.НоменклатураПредставление,
				СтрокаРегистратор.ХарактеристикаПредставление);
			
			НоваяСтрока.ИндексыЭтапов = Новый Массив;
			
			НоваяСтрока.КоличествоПлан      = СтрокаРегистратор.План;
			НоваяСтрока.КоличествоПланИтого = СтрокаРегистратор.План;
			
			ЗаполнитьЗначенияСвойств(ОтборНоменклатура, СтрокаРегистратор);
			НайденныеСтроки = Данные.НоменклатураВПроизводстве.НайтиСтроки(ОтборНоменклатура);
			
			Для каждого Строка Из НайденныеСтроки Цикл
				
				Если НЕ ЗначениеЗаполнено(Строка.План) Тогда
					
					НоваяСтрока.КоличествоФакт      = НоваяСтрока.КоличествоФакт + Строка.Факт;
					НоваяСтрока.КоличествоФактИтого = НоваяСтрока.КоличествоФактИтого + Строка.Факт;
					
					НоваяСтрока.ВыпускающийЭтап = Строка.Регистратор;
					
					ЗаполнитьЭтапыЦепочки(Номенклатура, Этапы, НоваяСтрока, Строка.Регистратор, Данные);
					
				КонецЕсли;
				
			КонецЦикла;
			
			ИндексыСтрокПродукции.Добавить(Номенклатура.Индекс(НоваяСтрока));
			
		КонецЦикла;
		
	КонецЦикла;
	
	Результат = Новый Структура("Номенклатура, Этапы, ИндексыСтрокПродукции", Номенклатура, Этапы, ИндексыСтрокПродукции);
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляЗаполненияСтруктурыЗаказов(Заказы)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Регистраторы.Регистратор КАК Регистратор,
		|	Регистраторы.Заказ       КАК Заказ
		|ПОМЕСТИТЬ ВТРегистраторы
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаОтбора.Регистратор  КАК Регистратор,
		|		ТаблицаОтбора.Распоряжение КАК Заказ
		|	ИЗ
		|		РегистрНакопления.ПродукцияИПолуфабрикатыВПроизводстве КАК ТаблицаОтбора
		|	ГДЕ
		|		ТаблицаОтбора.Распоряжение В(&Заказы)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаОтбора.Регистратор  КАК Регистратор,
		|		ТаблицаОтбора.Распоряжение КАК Заказ
		|	ИЗ
		|		РегистрНакопления.ПродукцияИПолуфабрикатыВПроизводстве КАК ТаблицаОтбора
		|	ГДЕ
		|		ТаблицаОтбора.Этап.Распоряжение В(&Заказы)
		|
		|	) КАК Регистраторы
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Регистратор
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НоменклатураВПроизводстве.Регистратор  КАК Регистратор,
		|	НоменклатураВПроизводстве.Распоряжение КАК Заказ,
		|
		|	ВЫБОР
		|		КОГДА НоменклатураВПроизводстве.Регистратор ССЫЛКА Документ.ЗаказНаПроизводство2_2
		|			ТОГДА НоменклатураВПроизводстве.НомерСтроки
		|		ИНАЧЕ -1
		|	КОНЕЦ КАК НомерСтроки,
		|
		|	НоменклатураВПроизводстве.Номенклатура                  КАК Номенклатура,
		|	НоменклатураВПроизводстве.Номенклатура.Представление    КАК НоменклатураПредставление,
		|	НоменклатураВПроизводстве.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|
		|	НоменклатураВПроизводстве.Характеристика               КАК Характеристика,
		|	НоменклатураВПроизводстве.Характеристика.Представление КАК ХарактеристикаПредставление,
		|
		|	НоменклатураВПроизводстве.Спецификация КАК Спецификация,
		|	НоменклатураВПроизводстве.Получатель   КАК Получатель,
		|
		|	НоменклатураВПроизводстве.Этап       КАК Этап,
		|	НоменклатураВПроизводстве.Назначение КАК Назначение,
		|
		|	СУММА(НоменклатураВПроизводстве.Требуется)   КАК План,
		|	СУММА(НоменклатураВПроизводстве.Произведено) КАК Факт
		|ИЗ
		|	РегистрНакопления.ПродукцияИПолуфабрикатыВПроизводстве КАК НоменклатураВПроизводстве
		|ГДЕ
		|	НоменклатураВПроизводстве.Регистратор В
		|			(ВЫБРАТЬ
		|				ВТРегистраторы.Регистратор
		|			ИЗ
		|				ВТРегистраторы)
		|	И (НоменклатураВПроизводстве.Этап <> &ПустаяСсылкаЭтап
		|			И НоменклатураВПроизводстве.Спецификация <> &ПустаяСсылкаСпецификация
		|		ИЛИ НоменклатураВПроизводстве.Этап = &ПустаяСсылкаЭтап)
		|
		|СГРУППИРОВАТЬ ПО
		|	НоменклатураВПроизводстве.Регистратор,
		|	НоменклатураВПроизводстве.Распоряжение,
		|
		|	ВЫБОР
		|		КОГДА НоменклатураВПроизводстве.Регистратор ССЫЛКА Документ.ЗаказНаПроизводство2_2
		|			ТОГДА НоменклатураВПроизводстве.НомерСтроки
		|		ИНАЧЕ -1
		|	КОНЕЦ,
		|
		|	НоменклатураВПроизводстве.Номенклатура,
		|	НоменклатураВПроизводстве.Характеристика,
		|
		|	НоменклатураВПроизводстве.Номенклатура.Представление,
		|	НоменклатураВПроизводстве.Номенклатура.ЕдиницаИзмерения,
		|	НоменклатураВПроизводстве.Характеристика.Представление,
		|
		|	НоменклатураВПроизводстве.Спецификация,
		|	НоменклатураВПроизводстве.Получатель,
		|
		|	НоменклатураВПроизводстве.Этап,
		|	НоменклатураВПроизводстве.Назначение
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗависисмостиЭтапов.Ссылка КАК Этап,
		|	ЗависисмостиЭтапов.Этап   КАК СледующийЭтап
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.Последователи КАК ЗависисмостиЭтапов
		|ГДЕ
		|	ЗависисмостиЭтапов.Ссылка.Распоряжение В(&Заказы)
		|	И ЗависисмостиЭтапов.ТипСвязи = 0
		|	И ЗависисмостиЭтапов.Ссылка.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Этапы.Распоряжение КАК Заказ,
		|	Этапы.Ссылка       КАК Этап,
		|
		|	Этапы.НаименованиеЭтапа КАК НаименованиеЭтапа,
		|	Этапы.Подразделение     КАК Подразделение,
		|
		|	ВЫБОР
		|		КОГДА Этапы.Статус = &СтатусЭтапаВыполнен
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ               КАК Выполнен,
		|	Этапы.Запланировано КАК План,
		|	Этапы.Выполнено     КАК Факт,
		|
		|	Этапы.НомерЭтапа           КАК НомерЭтапа,
		|	Этапы.НомерСледующегоЭтапа КАК НомерСледующегоЭтапа,
		|
		|	ЕСТЬNULL(ГрафикПроизводства.ОкончаниеЭтапа, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОкончанияПлан,
		|	Этапы.ФактическоеОкончаниеЭтапа                                 КАК ДатаОкончанияФакт
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Этапы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
		|		ПО Этапы.Ссылка = ГрафикПроизводства.ЭтапПроизводства
		|			И (ГрафикПроизводства.СтатусГрафика = &СтатусРабочийГрафик)
		|ГДЕ
		|	Этапы.Распоряжение В (&Заказы)
		|	И Этапы.Проведен
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Этапы.Распоряжение КАК Заказ,
		|	Этапы.Ссылка       КАК Этап,
		|
		|	Этапы.НаименованиеЭтапа КАК НаименованиеЭтапа,
		|	Этапы.Подразделение     КАК Подразделение,
		|
		|	ВЫБОР
		|		КОГДА Этапы.Статус = &СтатусЭтапаВыполнен
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ               КАК Выполнен,
		|	Этапы.Запланировано КАК План,
		|	Этапы.Выполнено     КАК Факт,
		|
		|	Этапы.НомерЭтапа           КАК НомерЭтапа,
		|	Этапы.НомерСледующегоЭтапа КАК НомерСледующегоЭтапа,
		|
		|	ЕСТЬNULL(ГрафикПроизводства.ОкончаниеЭтапа, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОкончанияПлан,
		|	Этапы.ФактическоеОкончаниеЭтапа                                 КАК ДатаОкончанияФакт
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Этапы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикПроизводства
		|		ПО Этапы.Ссылка = ГрафикПроизводства.ЭтапПроизводства
		|			И (ГрафикПроизводства.СтатусГрафика = &СтатусРабочийГрафик)
		|ГДЕ
		|	ЭтапПроизводства.Ссылка В
		|		(ВЫБРАТЬ
		|				ВТРегистраторы.Регистратор КАК Ссылка
		|			ИЗ
		|				ВТРегистраторы
		|			ГДЕ
		|				ВТРегистраторы.Регистратор ССЫЛКА Документ.ЭтапПроизводства2_2 И НЕ ВТРегистраторы.Заказ В (&Заказы) 
		|		)
		|	И Этапы.Проведен");

	Запрос.УстановитьПараметр("Заказы", Заказы);
	Запрос.УстановитьПараметр("ПустаяСсылкаЭтап", Документы.ЭтапПроизводства2_2.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСсылкаСпецификация", Справочники.РесурсныеСпецификации.ПустаяСсылка());
	Запрос.УстановитьПараметр("СтатусЭтапаВыполнен", Перечисления.СтатусыЭтаповПроизводства2_2.Завершен);
	Запрос.УстановитьПараметр("СтатусРабочийГрафик", РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ВГраница = МассивРезультатов.ВГраница();
	
	// НоменклатураВПроизводстве
	НоменклатураВПроизводстве = МассивРезультатов[ВГраница-2].Выгрузить();
	НоменклатураВПроизводстве.Индексы.Добавить("Регистратор");
	НоменклатураВПроизводстве.Индексы.Добавить("Этап");
	НоменклатураВПроизводстве.Индексы.Добавить("Заказ, Номенклатура, Характеристика, Спецификация, Получатель, Этап, Назначение");
	НоменклатураВПроизводстве.Индексы.Добавить("Номенклатура, Характеристика, Спецификация, Этап, Назначение");
	НоменклатураВПроизводстве.Индексы.Добавить("Регистратор, Номенклатура, Характеристика, Спецификация");
	
	// ЗависисмостиЭтапов
	ЗависисмостиЭтапов = МассивРезультатов[ВГраница-1].Выгрузить();
	ЗависисмостиЭтапов.Индексы.Добавить("СледующийЭтап");
	
	// ДанныеЭтапов
	ДанныеЭтапов = МассивРезультатов[ВГраница].Выгрузить();
	ДанныеЭтапов.Индексы.Добавить("Этап");
	
	Результат = Новый Структура;
	
	Результат.Вставить("НоменклатураВПроизводстве", НоменклатураВПроизводстве);
	Результат.Вставить("ЗависисмостиЭтапов", ЗависисмостиЭтапов);
	Результат.Вставить("ДанныеЭтапов", ДанныеЭтапов);
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьЭтапыЦепочки(Номенклатура, Этапы, СтрокаНоменклатура, ВыпускающийЭтап, Данные)
	
	НоваяСтрока = ДобавитьСтрокуВЭтапы(Номенклатура, Этапы, ВыпускающийЭтап, ВыпускающийЭтап, Данные);
	
	СтрокаНоменклатура.ИндексыЭтапов.Добавить(Этапы.Индекс(НоваяСтрока));
	ЗаполнитьРеквизитыНоменклатурыПоДаннымЭтапа(СтрокаНоменклатура, НоваяСтрока);
	
	ОчередьОбработки = Новый Массив;
	
	ДобавитьЭтапыПредшественникиВОчередьОбработки(ОчередьОбработки, ВыпускающийЭтап, Данные);
	
	Пока ОчередьОбработки.Количество() > 0 Цикл
		
		Этап = ОчередьОбработки[0];
		НоваяСтрока = ДобавитьСтрокуВЭтапы(Номенклатура, Этапы, Этап, ВыпускающийЭтап, Данные);
		
		СтрокаНоменклатура.ИндексыЭтапов.Добавить(Этапы.Индекс(НоваяСтрока));
		
		ДобавитьЭтапыПредшественникиВОчередьОбработки(ОчередьОбработки, Этап, Данные);
		
		ОчередьОбработки.Удалить(0);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ДобавитьСтрокуВЭтапы(Номенклатура, Этапы, Этап, ВыпускающийЭтап, Данные)
	
	НоваяСтрока = Этапы.Добавить();
	НоваяСтрока.ВыпускающийЭтап = ВыпускающийЭтап;
	
	ДанныеЭтапа = Данные.ДанныеЭтапов.Найти(Этап, "Этап");
	Если ДанныеЭтапа <> Неопределено Тогда
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеЭтапа);
		
		НоваяСтрока.ПредставлениеНоменклатураЭтап = ДанныеЭтапа.НаименованиеЭтапа;
		НоваяСтрока.КоличествоПлан      = ДанныеЭтапа.План;
		НоваяСтрока.КоличествоПланИтого = ДанныеЭтапа.План;
		НоваяСтрока.КоличествоФакт      = ДанныеЭтапа.Факт;
		НоваяСтрока.КоличествоФактИтого = ДанныеЭтапа.Факт;
		
		ЗаполнитьПолуфабрикатыЭтапа(Номенклатура, Этапы, НоваяСтрока, ДанныеЭтапа.Этап, Данные);
		
	КонецЕсли;
	
	Возврат НоваяСтрока;
	
КонецФункции

Процедура ЗаполнитьПолуфабрикатыЭтапа(Номенклатура, Этапы, СтрокаЭтапы, Этап, Данные)
	
	СтруктураПоиска = Новый Структура("Этап", Этап);
	СтрокиЭтапа = Данные.НоменклатураВПроизводстве.НайтиСтроки(СтруктураПоиска);
	
	Если СтрокиЭтапа.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаЭтапы.ИндексыНоменклатуры = Новый Массив;
	
	Полуфабрикаты = Данные.НоменклатураВПроизводстве.Скопировать(
		СтрокиЭтапа, "Номенклатура, Характеристика, Спецификация, Заказ");
	Полуфабрикаты.Свернуть("Номенклатура, Характеристика, Спецификация, Заказ");
	
	Для каждого Полуфабрикат Из Полуфабрикаты Цикл
		
		НоваяСтрока = Номенклатура.Добавить();
		НоваяСтрока.ИндексыЭтапов = Новый Массив;
		ЗаполнитьРеквизитыСтроки = Истина;
		
		СтрокаЭтапы.ИндексыНоменклатуры.Добавить(Номенклатура.Индекс(НоваяСтрока));
		
		ОбработанныеСтрокиФакт = Новый Массив;
		ОбработанныеСтрокиПлан = Новый Массив;
		РазвернутыеЭтапы = Новый Массив;
		
		Для каждого Строка Из СтрокиЭтапа Цикл
			
			Если НЕ Строка.Номенклатура = Полуфабрикат.Номенклатура
				ИЛИ НЕ Строка.Характеристика = Полуфабрикат.Характеристика
				ИЛИ НЕ Строка.Спецификация = Полуфабрикат.Спецификация
				ИЛИ НЕ Строка.Заказ = Полуфабрикат.Заказ Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Если ЗаполнитьРеквизитыСтроки Тогда
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				
				НоваяСтрока.ПредставлениеНоменклатураЭтап = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
					Строка.НоменклатураПредставление,
					Строка.ХарактеристикаПредставление);
				
				ЗаполнитьРеквизитыСтроки = Ложь;
				
			КонецЕсли;
			
			НоваяСтрока.КоличествоПлан = НоваяСтрока.КоличествоПлан + Строка.План;
			НоваяСтрока.КоличествоФакт = НоваяСтрока.КоличествоФакт + Строка.Факт;
			
			Если Строка.Заказ = СтрокаЭтапы.Заказ Тогда
				
				Если НЕ ЗначениеЗаполнено(Строка.План) Тогда
					
					#Область ЗаполнениеКоличестваИтого
					
					// Выпускающий этап.
					СтруктураПоискаФакт = Новый Структура("Регистратор, Номенклатура, Характеристика, Спецификация");
					ЗаполнитьЗначенияСвойств(СтруктураПоискаФакт, Строка);
					
					СтрокиФакт = Данные.НоменклатураВПроизводстве.НайтиСтроки(СтруктураПоискаФакт);
					Для каждого СтрокаФакт Из СтрокиФакт Цикл
						
						ИндексСтроки = Данные.НоменклатураВПроизводстве.Индекс(СтрокаФакт);
						Если ОбработанныеСтрокиФакт.Найти(ИндексСтроки) = Неопределено Тогда
							ОбработанныеСтрокиФакт.Добавить(ИндексСтроки);
						Иначе
							Продолжить;
						КонецЕсли;
						
						НоваяСтрока.КоличествоФактИтого = НоваяСтрока.КоличествоФактИтого + СтрокаФакт.Факт;
						
						СтруктураПоискаПлан = Новый Структура("Номенклатура, Характеристика, Спецификация, Этап, Назначение");
						ЗаполнитьЗначенияСвойств(СтруктураПоискаПлан, СтрокаФакт);
						
						СтрокиПлан = Данные.НоменклатураВПроизводстве.НайтиСтроки(СтруктураПоискаПлан);
						Для каждого СтрокаПлан Из СтрокиПлан Цикл
							
							ИндексСтроки = Данные.НоменклатураВПроизводстве.Индекс(СтрокаПлан);
							Если ОбработанныеСтрокиПлан.Найти(ИндексСтроки) = Неопределено Тогда
								
								НоваяСтрока.КоличествоПланИтого = НоваяСтрока.КоличествоПланИтого + СтрокаПлан.План;
								ОбработанныеСтрокиПлан.Добавить(ИндексСтроки);
								
							КонецЕсли;
							
						КонецЦикла;
					
					КонецЦикла;
					
					#КонецОбласти
					
					Если РазвернутыеЭтапы.Найти(Строка.Регистратор) = Неопределено Тогда
						
						ЗаполнитьЭтапыЦепочки(Номенклатура, Этапы, НоваяСтрока, Строка.Регистратор, Данные);
						РазвернутыеЭтапы.Добавить(Строка.Регистратор);
						
						НоваяСтрока.ВыпускающийЭтап = Строка.Регистратор;
						
					КонецЕсли;
					
				КонецЕсли;
				
			Иначе
				
				Если НЕ ЗначениеЗаполнено(Строка.План) Тогда
					
					ДанныеЭтапа = Данные.ДанныеЭтапов.Найти(Строка.Регистратор, "Этап");
					Если ДанныеЭтапа <> Неопределено Тогда
						ЗаполнитьРеквизитыНоменклатурыПоДаннымЭтапа(НоваяСтрока, ДанныеЭтапа);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.КоличествоПланИтого) Тогда
			НоваяСтрока.КоличествоПланИтого = НоваяСтрока.КоличествоПлан;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.КоличествоФактИтого) Тогда
			НоваяСтрока.КоличествоФактИтого = НоваяСтрока.КоличествоФакт;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьЭтапыПредшественникиВОчередьОбработки(ОчередьОбработки, Этап, Данные)
	
	СтруктураПоиска = Новый Структура("СледующийЭтап", Этап);
	
	НайденныеСтроки = Данные.ЗависисмостиЭтапов.НайтиСтроки(СтруктураПоиска);
	
	Для каждого Строка Из НайденныеСтроки Цикл
		
		ОчередьОбработки.Добавить(Строка.Этап);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыНоменклатурыПоДаннымЭтапа(СтрокаНоменклатура, ЗначенияЗаполнения)
	
	ЗаполнитьЗначенияСвойств(
		СтрокаНоменклатура,
		ЗначенияЗаполнения,
		"Подразделение, ДатаОкончанияПлан, ДатаОкончанияФакт");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли