#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает список реквизитов, которые разрешается редактировать
// с помощью обработки группового изменения объектов.
//
// Возвращаемое значение:
//  Массив - список имен реквизитов объекта.
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	Возврат ПрисоединенныеФайлы.РеквизитыРедактируемыеВГрупповойОбработке();
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления КА.
//Удаляем служебные присоединенные файлы, для очистки кэша Экземпляров бюджета.
// 
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЭкземплярБюджетаПрисоединенныеФайлы.Ссылка
	|ИЗ
	|	Документ.ЭкземплярБюджета КАК ЭкземплярБюджета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭкземплярБюджетаПрисоединенныеФайлы КАК ЭкземплярБюджетаПрисоединенныеФайлы
	|		ПО ЭкземплярБюджета.Ссылка = ЭкземплярБюджетаПрисоединенныеФайлы.ВладелецФайла
	|			И (ЭкземплярБюджетаПрисоединенныеФайлы.ТипСлужебногоФайла <> ЗНАЧЕНИЕ(Перечисление.ТипыСлужебныхФайловЭкземпляраБюджета.ПустаяСсылка))";

	Выборка = Запрос.Выполнить().Выбрать();
	
	ДанныеМассив = Новый Массив();
	
	Пока Выборка.Следующий() Цикл
				
		ДанныеМассив.Добавить(Выборка.Ссылка);

	КонецЦикла;
		
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ДанныеМассив);
		
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Справочник.ЭкземплярБюджетаПрисоединенныеФайлы";
		
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);	
	
	Пока Выборка.Следующий() Цикл
		Попытка	
			НачатьТранзакцию();
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(СпрОбъект);
			СпрОбъект.Удалить();
						
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать: %Элемент% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Элемент%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
									Метаданные.Справочники.ЭкземплярБюджетаПрисоединенныеФайлы, Выборка.Ссылка, ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);

КонецПроцедуры

Функция ДанныеОбновленыНаНовуюВерсиюПрограммы(МетаданныеИОтбор) Экспорт
	
	Если Не МетаданныеИОтбор.МетаданныеОбъекта = Метаданные.Документы.ЭкземплярБюджета Тогда
		Возврат ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы(МетаданныеИОтбор);
	КонецЕсли;
	
	Если МетаданныеИОтбор.ЭтоНовый Тогда
		Возврат Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЭкземплярБюджетаПрисоединенныеФайлы.Ссылка
	|ИЗ
	|	Документ.ЭкземплярБюджета КАК ЭкземплярБюджета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭкземплярБюджетаПрисоединенныеФайлы КАК ЭкземплярБюджетаПрисоединенныеФайлы
	|		ПО ЭкземплярБюджета.Ссылка = ЭкземплярБюджетаПрисоединенныеФайлы.ВладелецФайла
	|			И (ЭкземплярБюджетаПрисоединенныеФайлы.ТипСлужебногоФайла <> ЗНАЧЕНИЕ(Перечисление.ТипыСлужебныхФайловЭкземпляраБюджета.ПустаяСсылка))
	|ГДЕ
	|	ЭкземплярБюджета.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", МетаданныеИОтбор.Данные);

	Выборка = Запрос.Выполнить().Выбрать();
	
	МожноЧитатьИМенять = Истина;
	
	Пока Выборка.Следующий() Цикл
		МожноЧитатьИМенять = ОбновлениеИнформационнойБазы.МожноЧитатьИМенять(Неопределено, Выборка.Ссылка);
		Если Не МожноЧитатьИМенять Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат МожноЧитатьИМенять;
		
КонецФункции

#КонецОбласти


#КонецЕсли
