#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Устарела. Следует использовать новую (см. ИсточникиДанныхСервер.СхемаКомпоновкиДанныхПравила)
// Возвращает схему для получения факта по показателям бюджетов
// 
// Параметры:
// 	 Правило - СправочникСсылка.ПравилаПолученияФактаПоПоказателямБюджетов, Выборка,
// 				СтрокаТаблицыЗначений, Структура - Правило получения факта по показателям бюджетов.
//	РежимПолученияДанных - ПеречислениеСсылка.РежимПолученияДанныхБюджетирования - Режим получения данных бюджетирования.
// 
// Возвращаемое значение:
// 	 СхемаКомпоновкиДанных - схема получения фактических данных, соотвествующая источнику.
//
Функция СхемаПолученияДанных(Правило, РежимПолученияДанных = Неопределено) Экспорт
	
	СхемаПолученияДанных = ФинансоваяОтчетностьСервер.НоваяСхема();
	НаборДанных = ФинансоваяОтчетностьСервер.НовыйНабор(СхемаПолученияДанных);
	НаборДанных.Запрос =
		"ВЫБРАТЬ
		|*";
	
	Если Правило.РазделИсточникаДанных = Перечисления.РазделыИсточниковДанныхБюджетирования.ОперативныйУчет Тогда
		Если ЗначениеЗаполнено(Правило.ИсточникДанных) Тогда
			ИмяПредопределенныхДанных = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				Правило.ИсточникДанных, "ИмяПредопределенныхДанных");
			МакетыИсточниковДанных = Метаданные.Справочники.ПравилаПолученияФактаПоПоказателямБюджетов.Макеты;
			МакетИсточникаДанных = МакетыИсточниковДанных.Найти(ИмяПредопределенныхДанных);
			Если МакетИсточникаДанных = Неопределено Тогда
				МакетИсточникаДанных = МакетыИсточниковДанных.ПрочиеАктивыПассивы;
			КонецЕсли;
			ИмяСхемы = МакетИсточникаДанных.Имя;
			СхемаПолученияДанных = Справочники.ПравилаПолученияФактаПоПоказателямБюджетов.ПолучитьМакет(ИмяСхемы);
		КонецЕсли;
	ИначеЕсли Правило.РазделИсточникаДанных = Перечисления.РазделыИсточниковДанныхБюджетирования.РегламентированныйУчет Тогда
		ИмяСхемы = "РегламентированныйУчет";
		СхемаПолученияДанных = Справочники.ПравилаПолученияФактаПоПоказателямБюджетов.ПолучитьМакет(ИмяСхемы);
	ИначеЕсли Правило.РазделИсточникаДанных = Перечисления.РазделыИсточниковДанныхБюджетирования.МеждународныйУчет Тогда
		ИмяСхемы = "МеждународныйУчет";
		СхемаПолученияДанных = Справочники.ПравилаПолученияФактаПоПоказателямБюджетов.ПолучитьМакет(ИмяСхемы);
	ИначеЕсли Правило.РазделИсточникаДанных = Перечисления.РазделыИсточниковДанныхБюджетирования.ПроизвольныеДанные Тогда
		СхемаПолученияДанныхПравила = Правило.СхемаИсточникаДанных.Получить();
		Если СхемаПолученияДанныхПравила <> Неопределено Тогда
			СхемаПолученияДанных = СхемаПолученияДанныхПравила
		КонецЕсли;
	Иначе
		ВызватьИсключение НСтр("ru = 'Не определен раздел источника получения данных. Получение схемы невозможно.'");
	КонецЕсли;
	
	Если РежимПолученияДанных = Перечисления.РежимПолученияДанныхБюджетирования.Все Тогда
		Для Каждого Набор Из СхемаПолученияДанных.НаборыДанных Цикл
			Если ЗначениеЗаполнено(Набор.Запрос) Тогда 
				Набор.Запрос = СтрЗаменить(Набор.Запрос, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ ");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат СхемаПолученияДанных;
	
КонецФункции

#КонецОбласти

#Область Отчеты

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	//++ НЕ УТ
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуРезультатРаботыПравилПолученияФактическихДанныхПоПоказателюБюджетов(КомандыОтчетов);
	//-- НЕ УТ

КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Правила.Ссылка
	|ИЗ
	|	Справочник.ПравилаПолученияФактаПоПоказателямБюджетов КАК Правила
	|ГДЕ
	|	Правила.ХешНастроек = """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Правила.Ссылка
	|ИЗ
	|	Справочник.ПравилаПолученияФактаПоПоказателямБюджетов КАК Правила
	|ГДЕ
	|	Правила.РазделИсточникаДанных = ЗНАЧЕНИЕ(Перечисление.РазделыИсточниковДанныхБюджетирования.ПроизвольныеДанные)
	|	И Правила.ХешСхемыКомпоновкиДанных = """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПравилаПолученияФактаПоПоказателямБюджетов.Ссылка
	|ИЗ
	|	Справочник.ПравилаПолученияФактаПоПоказателямБюджетов КАК ПравилаПолученияФактаПоПоказателямБюджетов
	|ГДЕ
	|	НЕ ПравилаПолученияФактаПоПоказателямБюджетов.РасширеныйРежимНастройкиЗаполненияАналитики
	|	И (ВЫБОР
	|				КОГДА ПравилаПолученияФактаПоПоказателямБюджетов.ПоказательБюджетов.КоличествоИспользуемыхАналитик = 1
	|					ТОГДА (ВЫРАЗИТЬ(ПравилаПолученияФактаПоПоказателямБюджетов.ВыражениеЗаполненияАналитики1 КАК СТРОКА(1))) = """"
	|							И НЕ ПравилаПолученияФактаПоПоказателямБюджетов.ЗаполнятьУказаннымЗначениемАналитику1
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|			ИЛИ ВЫБОР
	|				КОГДА ПравилаПолученияФактаПоПоказателямБюджетов.ПоказательБюджетов.КоличествоИспользуемыхАналитик = 2
	|					ТОГДА (ВЫРАЗИТЬ(ПравилаПолученияФактаПоПоказателямБюджетов.ВыражениеЗаполненияАналитики2 КАК СТРОКА(1))) = """"
	|							И НЕ ПравилаПолученияФактаПоПоказателямБюджетов.ЗаполнятьУказаннымЗначениемАналитику2
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|			ИЛИ ВЫБОР
	|				КОГДА ПравилаПолученияФактаПоПоказателямБюджетов.ПоказательБюджетов.КоличествоИспользуемыхАналитик = 3
	|					ТОГДА (ВЫРАЗИТЬ(ПравилаПолученияФактаПоПоказателямБюджетов.ВыражениеЗаполненияАналитики3 КАК СТРОКА(1))) = """"
	|							И НЕ ПравилаПолученияФактаПоПоказателямБюджетов.ЗаполнятьУказаннымЗначениемАналитику3
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|			ИЛИ ВЫБОР
	|				КОГДА ПравилаПолученияФактаПоПоказателямБюджетов.ПоказательБюджетов.КоличествоИспользуемыхАналитик = 4
	|					ТОГДА (ВЫРАЗИТЬ(ПравилаПолученияФактаПоПоказателямБюджетов.ВыражениеЗаполненияАналитики4 КАК СТРОКА(1))) = """"
	|							И НЕ ПравилаПолученияФактаПоПоказателямБюджетов.ЗаполнятьУказаннымЗначениемАналитику4
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|			ИЛИ ВЫБОР
	|				КОГДА ПравилаПолученияФактаПоПоказателямБюджетов.ПоказательБюджетов.КоличествоИспользуемыхАналитик = 5
	|					ТОГДА (ВЫРАЗИТЬ(ПравилаПолученияФактаПоПоказателямБюджетов.ВыражениеЗаполненияАналитики5 КАК СТРОКА(1))) = """"
	|							И НЕ ПравилаПолученияФактаПоПоказателямБюджетов.ЗаполнятьУказаннымЗначениемАналитику5
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|			ИЛИ ВЫБОР
	|				КОГДА ПравилаПолученияФактаПоПоказателямБюджетов.ПоказательБюджетов.КоличествоИспользуемыхАналитик = 6
	|					ТОГДА (ВЫРАЗИТЬ(ПравилаПолученияФактаПоПоказателямБюджетов.ВыражениеЗаполненияАналитики6 КАК СТРОКА(1))) = """"
	|							И НЕ ПравилаПолученияФактаПоПоказателямБюджетов.ЗаполнятьУказаннымЗначениемАналитику6
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|	И НЕ ПравилаПолученияФактаПоПоказателямБюджетов.ПоказательБюджетов.ЭтоГруппа";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Справочник.ПравилаПолученияФактаПоПоказателямБюджетов";
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);	
			
	Пока Выборка.Следующий() Цикл
		Попытка			
			НачатьТранзакцию();
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			// Сделаем слепок настроек и схемы для будущего сравнения их между собой без анализа каждого элемента
			БюджетированиеСервер.ЗаполнитьРеквизитыХешейНастроекИСхемы(СпрОбъект);
			
			// Заполним настройки заполнения аналитик
			Если Не СпрОбъект.РасширеныйРежимНастройкиЗаполненияАналитики 
				И НЕ СпрОбъект.ПоказательБюджетов.ЭтоГруппа Тогда
				БюджетированиеСервер.ЗаполнитьРеквизитыОбъектаНастроекЗаполненияАналитики(СпрОбъект);
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(СпрОбъект);
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать: %Правило% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Правило%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
									Метаданные.Справочники.ВидыБюджетов, Выборка.Ссылка, ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь,ПолноеИмяОбъекта);

КонецПроцедуры

#КонецОбласти

#КонецЕсли