
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ДоступноИзменениеДанныхФизическихЛицЗарплатаКадрыРасширенная = ПольЗователи.РолиДоступны("ДобавлениеИзменениеДанныхФизическихЛицЗарплатаКадрыРасширенная");
	
	ДатаОтсчетаПериодическихСведений = ЗарплатаКадрыКлиентСервер.ДатаОтсчетаПериодическихСведений();
	ВидыСтажаСеверный = Справочники.ВидыСтажа.ВидыСтажаПоКатегории(Перечисления.КатегорииСтажа.Северный); 
	
	Если ЗначениеЗаполнено(Параметры.Сотрудник) Тогда
		Физическоелицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Сотрудник, "Физическоелицо");
	Иначе
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Физическоелицо");
	КонецЕсли;
	
	ДатаСведений = Параметры.ДатаСведений;
	Если Не ЗначениеЗаполнено(ДатаСведений) Тогда
		ДатаСведений = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если Параметры.Свойство("СтажиФизическихЛиц") Тогда
		СтажиФизическихЛиц.Загрузить(Параметры.СтажиФизическихЛиц.Выгрузить());
	Иначе
		
		НаборЗаписей = РегистрыСведений.СтажиФизическихЛиц.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
		
		НаборЗаписей.Прочитать();
		
		СтажиФизическихЛиц.Загрузить(НаборЗаписей.Выгрузить());
		
	КонецЕсли;
	
	Параметры.Свойство("ВидСтажа", ВидСтажа);
	Если Не ЗначениеЗаполнено(ВидСтажа) Тогда
		
		Для каждого СтрокаСтажа Из СтажиФизическихЛиц Цикл
			
			Если ВидыСтажаСеверный.Найти(СтрокаСтажа.ВидСтажа) <> Неопределено Тогда
				ВидСтажа = СтрокаСтажа.ВидСтажа;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ВыбиратьСтаж = (Не ВидыСтажаСеверный.Количество() = 1) И Не ЗначениеЗаполнено(ВидСтажа);
	
	Если Не ЗначениеЗаполнено(ВидСтажа) И ВидыСтажаСеверный.Количество() > 0 Тогда
		ВидСтажа = ВидыСтажаСеверный[0];
	КонецЕсли;
	
	// Определение минимальной даты приема
	ДатаПриема = КадровыйУчетРасширенный.ДатаПриемаФизическогоЛица(ФизическоеЛицо, ДатаСведений);
	
	// Если дату приема не удалось определеить, то датой отсчета по умолчанию является дата сведений
	Если Не ЗначениеЗаполнено(ДатаПриема) Тогда 
		ДатаПриема = ДатаСведений;
	КонецЕсли;
	
	ЗаполнитьНаборЗаписейВидаСтажа();
	
	Если НаборЗаписейСеверногоСтажа.Количество() = 1 Тогда
		
		ИсчисляетсяСДатыПриема = ?(НаборЗаписейСеверногоСтажа[0].ИсчисляетсяСДатыПриема, 1, 0);
		Если ИсчисляетсяСДатыПриема = 1 Тогда
			ДатаПриема = НаборЗаписейСеверногоСтажа[0].ДатаОтсчета;
		Иначе
			ДатаСтажа = НаборЗаписейСеверногоСтажа[0].ДатаОтсчета;
		КонецЕсли;
		
		ДнейСтажа = НаборЗаписейСеверногоСтажа[0].РазмерДней;
		
		ЛетСтажа = НаборЗаписейСеверногоСтажа[0].Лет;
		МесяцевСтажа = НаборЗаписейСеверногоСтажа[0].РазмерМесяцев;
		
	ИначеЕсли НаборЗаписейСеверногоСтажа.Количество() > 1 Тогда
		РасширенныйВводСтажа = Истина;
	КонецЕсли;
	
	УстановитьДоступностьКомандыИзменитьСведенияОСтажеСохранивТекущие(ЭтаФорма);
	
	ПрочитатьДанныеОПроцентеСевернойНадбавки();
	
	Если ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц.ПроцентСевернойНадбавкиИзменяется Тогда
		ПроцентСевернойНадбавкиИзменяетсяЧисло = 1;
	КонецЕсли;
	
	МассивЗаписей = Неопределено;
	Параметры.Свойство("МассивЗаписей", МассивЗаписей);
	
	Если НЕ МассивЗаписей = Неопределено Тогда
		Для Каждого Запись Из МассивЗаписей Цикл
			ЗаполнитьЗначенияСвойств(ПроцентыСевернойНадбавкиФизическихЛицНаборЗаписей.Добавить(), Запись);
		КонецЦикла;
	КонецЕсли;
	
	УстановитьДоступность(ПроцентСевернойНадбавкиИзменяетсяЧисло, Элементы);
	
	КатегорияСтажа = Перечисления.КатегорииСтажа.Северный;
	
	ОбработатьВидСтажа();
	
	УстановитьДоступностьВводаДанныхСтажа(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы, ТекстПредупреждения);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ПроцентСевернойНадбавкиИзменяетсяЧисло = 0 Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЗначениеИзМассива(ПроверяемыеРеквизиты, "ДатаСтажа");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПроцентСевернойНадбавкиИзменяетсяЧислоПриИзменении(Элемент)
	
	ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц.ПроцентСевернойНадбавкиИзменяется =
		(ПроцентСевернойНадбавкиИзменяетсяЧисло > 0);
		
	УстановитьДоступность(ПроцентСевернойНадбавкиИзменяетсяЧисло, Элементы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПорядокИсчисленияПроцентаСевернойНадбавкиПриИзменении(Элемент)
	
	Если ПроцентыСевернойНадбавкиФизическихЛицНаборЗаписей.Количество() = 0 Тогда
		ЗаполнитьБудущиеИзмененияСДаты();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентыСевернойНадбавкиФизическихЛицНаборЗаписейПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			Элемент.ТекущиеДанные.ФизическоеЛицо = ФизическоеЛицо;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВидСтажаНабораЗаписейПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ВидСтажа) Тогда
		ЗаполнитьНаборЗаписейВидаСтажа();
	Иначе
		НаборЗаписейСеверногоСтажа.Очистить();
	КонецЕсли;
	
	УстановитьДоступностьКомандыИзменитьСведенияОСтажеСохранивТекущие(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсчисляетсяСДатыПриемаПриИзменении(Элемент)
	
	УстановитьДоступностьВводаДанныхСтажа(ЭтаФорма);
	УстановитьДоступностьКомандыИзменитьСведенияОСтажеСохранивТекущие(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаСтажаПриИзменении(Элемент)
	
	УстановитьДоступностьКомандыИзменитьСведенияОСтажеСохранивТекущие(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЛетСтажаПриИзменении(Элемент)
	
	ПриИзмененииСтажа();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцевСтажаПриИзменении(Элемент)
	
	ПриИзмененииСтажа();
	
КонецПроцедуры

&НаКлиенте
Процедура ДнейСтажаПриИзменении(Элемент)
	
	ПриИзмененииСтажа();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыНаборЗаписейСеверногоСтажа

&НаКлиенте
Процедура НаборЗаписейСеверногоСтажаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Запись = НаборЗаписейСеверногоСтажа.Добавить();
	Запись.ДатаОтсчета = ДатаСведений;
	Запись.ФизическоеЛицо = ФизическоеЛицо;
	Запись.ВидСтажа = ВидСтажа;
	
	Если НаборЗаписейСеверногоСтажа.Количество() = 1 Тогда
		Запись.Период = ДатаОтсчетаПериодическихСведений;
	Иначе
		
		Запись.Период = ОбщегоНазначенияКлиент.ДатаСеанса();
		
		Если НаборЗаписейСеверногоСтажа.Количество() > 2 Тогда
			
			ПоследняяЗапись = НаборЗаписейСеверногоСтажа[НаборЗаписейСеверногоСтажа.Количество() - 2];
			Если Запись.Период <= ПоследняяЗапись.Период Тогда
				Запись.Период = КонецДня(ПоследняяЗапись.Период) + 1;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Элемент.ТекущаяСтрока = Запись.ПолучитьИдентификатор();
	Отказ = Истина;
	
	УстановитьДоступностьКомандыИзменитьСведенияОСтажеСохранивТекущие(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейСеверногоСтажаПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные.Период <= ДатаОтсчетаПериодическихСведений Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейСеверногоСтажаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не ОтменаРедактирования Тогда
		
		Если Элемент.ТекущиеДанные <> Неопределено
			И Элемент.ТекущиеДанные.Период < ДатаОтсчетаПериодическихСведений Тогда
			
			Элемент.ТекущиеДанные.Период = ДатаОтсчетаПериодическихСведений;
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьДоступностьКомандыИзменитьСведенияОСтажеСохранивТекущие(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НаборЗаписейСеверногоСтажаПослеУдаления(Элемент)
	
	УстановитьДоступностьКомандыИзменитьСведенияОСтажеСохранивТекущие(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Отказ = Ложь;
	ОповеститьОбИзменениях(Отказ);
	
	Если НЕ Отказ Тогда
		Закрыть();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьБудущиеИзменения(Команда)
	
	ЗаполнитьБудущиеИзмененияСДаты(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьБудущиеИзмененияСДаты(УточнятьДату = Ложь)
	
	Если ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц.ПорядокИсчисленияПроцентаСевернойНадбавки.Пустая() Тогда
		ТекстПредупрежедения = НСтр("ru = 'Не указан порядок исчисления процента надбавки.'"); 
		ЗаголовокПредупреждения = НСтр("ru = 'Заполнение невозможно.'"); 
		ПоказатьПредупреждение(, ТекстПредупрежедения);
		Возврат;
	КонецЕсли;
	
	ДатаНачалаЗаполнения = ?(ЗначениеЗаполнено(ДатаСведений), ДатаСведений, ОбщегоНазначенияКлиент.ДатаСеанса());
	
	СтруктураИсторииИзмененияПроцентаНаДату  = СтруктураИсторииИзмененияПроцента(ДатаНачалаЗаполнения);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("УточнятьДату", УточнятьДату);
	ДополнительныеПараметры.Вставить("ДатаНачалаЗаполнения", ДатаНачалаЗаполнения);
	ДополнительныеПараметры.Вставить("СтруктураИсторииИзмененияПроцентаНаДату", СтруктураИсторииИзмененияПроцентаНаДату);
	
	Если СтруктураИсторииИзмененияПроцентаНаДату.ЕстьБудущиеЗаписи Тогда 
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьБудущиеИзмененияСДатыПродолжение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Будущие изменения будут перезаполнены. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	Иначе 
		ЗаполнитьБудущиеИзмененияСДатыПродолжение(КодВозвратаДиалога.Да, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьБудущиеИзмененияСДатыПродолжение(Ответ, ДополнительныеПараметры) Экспорт 
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда 
		Возврат;
	КонецЕсли;
	
	УточнятьДату = ДополнительныеПараметры.УточнятьДату;
	ДатаНачалаЗаполнения = ДополнительныеПараметры.ДатаНачалаЗаполнения;
	СтруктураИсторииИзмененияПроцентаНаДату = ДополнительныеПараметры.СтруктураИсторииИзмененияПроцентаНаДату;
	
	ТекущаяЗапись = СтруктураИсторииИзмененияПроцентаНаДату.ТекущаяЗапись;
	
	ДополнительныеПараметры = Новый Структура("ТекущаяЗапись", ТекущаяЗапись);
	
	Если ТекущаяЗапись = Неопределено И УточнятьДату Тогда
		Оповещение = Новый ОписаниеОповещения("ЗаполнитьБудущиеИзмененияСДатыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВводДаты(Оповещение, ДатаНачалаЗаполнения, НСтр("ru = 'Введите дату с которой необходимо заполнить надбавку'"), ЧастиДаты.Дата);
	Иначе 
		ЗаполнитьБудущиеИзмененияСДатыЗавершение(ДатаНачалаЗаполнения, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьБудущиеИзмененияСДатыЗавершение(ДатаНачалаЗаполнения, ДополнительныеПараметры) Экспорт 

	ТекущаяЗапись = ДополнительныеПараметры.ТекущаяЗапись;
	
	Если ТекущаяЗапись = Неопределено Тогда
		ТекущаяЗапись = ПроцентыСевернойНадбавкиФизическихЛицНаборЗаписей.Добавить();
		ТекущаяЗапись.ФизическоеЛицо = ФизическоеЛицо;
		ТекущаяЗапись.Период = ДатаНачалаЗаполнения;
	КонецЕсли;
	
	ЗаполнитьИсториюИзмененияПроцента(ТекущаяЗапись);
	
КонецПроцедуры

&НаКлиенте
Функция СтруктураИсторииИзмененияПроцента(ДатаНачалаЗаполнения)
	
	ЕстьБудущиеЗаписи = Ложь;
	
	Для каждого Запись Из ПроцентыСевернойНадбавкиФизическихЛицНаборЗаписей Цикл
		Если Запись.Период <= ДатаНачалаЗаполнения ИЛИ НЕ ЗначениеЗаполнено(Запись.Период) Тогда
			ТекущаяЗапись =  Запись;
		Иначе
			ЕстьБудущиеЗаписи = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Новый Структура("ТекущаяЗапись,ЕстьБудущиеЗаписи", ТекущаяЗапись, ЕстьБудущиеЗаписи);
	
КонецФункции

&НаКлиенте
Процедура ИзменитьСведенияОСтажеСохранивТекущие(Команда)
	
	РасширенныйВводСтажа = Не РасширенныйВводСтажа;
	ДанныеСтажаВНабор(ЭтаФорма, Не РасширенныйВводСтажа);
	УстановитьОтображениеПолейВводаСтажа(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	Отказ = Ложь;
	ОповеститьОбИзменениях(Отказ);
	
	Если Не Отказ Тогда 
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОбИзменениях(Отказ)
	
	Если Модифицированность Тогда
		
		СохранитьДанные(Отказ);
		
		Если НЕ Отказ Тогда
			
			ПараметрыОповещения = Новый Структура;
			ПараметрыОповещения.Вставить("Сотрудник", Сотрудник);
			ПараметрыОповещения.Вставить("ФизическоеЛицо", 	ФизическоеЛицо);
			
			Если ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц.ПроцентСевернойНадбавкиИзменяется Тогда
				
				Если НЕ ЗначениеЗаполнено(ДатаСведений) Тогда
					ДатаСведений = ОбщегоНазначенияКлиент.ДатаСеанса();
				КонецЕсли; 
				
				ПроцентСевернойНадбавки = 0;
				Для каждого СтрокаПроцента Из ПроцентыСевернойНадбавкиФизическихЛицНаборЗаписей Цикл
					
					Если СтрокаПроцента.Период <= ДатаСведений Тогда
						ПроцентСевернойНадбавки = СтрокаПроцента.ПроцентСевернойНадбавки;
					Иначе
						Прервать;
					КонецЕсли; 
					
				КонецЦикла;
				
			Иначе
				ПроцентСевернойНадбавки = ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц.ПроцентСевернойНадбавки;
			КонецЕсли;
			
			ПараметрыОповещения.Вставить("ПроцентСевернойНадбавки", ПроцентСевернойНадбавки); 
			ПараметрыОповещения.Вставить("Сотрудник", Сотрудник);
			
			Если ДоступноИзменениеДанныхФизическихЛицЗарплатаКадрыРасширенная Тогда
				
				СтрокиСтажа = СтажиФизическихЛиц.НайтиСтроки(Новый Структура("ВидСтажа", ВидСтажа));
				Если СтрокиСтажа.Количество() = 0 Тогда
					ЛетСтажа = 0;
					МесяцевСтажа = 0;
					ДнейСтажа = 0;
				Иначе
					
					ПоследняяЗаписьСтажа = Неопределено;
					Для каждого СтрокаСтажа Из СтрокиСтажа Цикл
						
						Если ПоследняяЗаписьСтажа = Неопределено
							Или ПоследняяЗаписьСтажа.Период < СтрокаСтажа.Период Тогда
							
							ПоследняяЗаписьСтажа = СтрокаСтажа;
							
						КонецЕсли;
						
					КонецЦикла;
					
					ДатаСтажа = ПоследняяЗаписьСтажа.ДатаОтсчета;
					ЛетСтажа = Цел(ПоследняяЗаписьСтажа.РазмерМесяцев / 12);
					МесяцевСтажа = ПоследняяЗаписьСтажа.РазмерМесяцев - ЛетСтажа * 12;
					ДнейСтажа = ПоследняяЗаписьСтажа.РазмерДней;
					
				КонецЕсли;
				
				
				ПараметрыОповещения.Вставить("ДатаСтажа",		ДатаСтажа);
				ПараметрыОповещения.Вставить("МесяцевСтажа",	ЛетСтажа * 12 + МесяцевСтажа);
				ПараметрыОповещения.Вставить("ДнейСтажа",		ДнейСтажа);
				ПараметрыОповещения.Вставить("ВидСтажа",		ВидСтажа);
				
			КонецЕсли;
			
			ПараметрыОповещения.Вставить("ДанныеСтажей", СтажиФизическихЛиц);
			
			Оповестить("ИзмененСтажФизическогоЛица", ПараметрыОповещения, ЭтотОбъект);
			Оповестить("РедактированиеПроцентаСевернойНадбавки", ПараметрыОповещения, ФизическоеЛицо);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИсториюИзмененияПроцента(ТекущаяЗапись)
	
	Период = ТекущаяЗапись.Период; 
	ПроцентНадбавки = ТекущаяЗапись.ПроцентСевернойНадбавки; 
	
	МассивУдаляемыхЗаписей = Новый Массив;
	Для каждого Запись Из ПроцентыСевернойНадбавкиФизическихЛицНаборЗаписей Цикл
		Если Запись.Период > Период  Тогда
			МассивУдаляемыхЗаписей.Добавить(Запись);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Запись Из МассивУдаляемыхЗаписей Цикл
		ПроцентыСевернойНадбавкиФизическихЛицНаборЗаписей.Удалить(Запись);
	КонецЦикла;
	
	МассивИзмененийПроцента = РассчитатьПроцентыСеверногоСтажа(Период, ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц.ПорядокИсчисленияПроцентаСевернойНадбавки, 
	ПроцентНадбавки);
	
	Для каждого Элемент Из МассивИзмененийПроцента Цикл
		НоваяЗапись = ПроцентыСевернойНадбавкиФизическихЛицНаборЗаписей.Добавить();
		НоваяЗапись.ФизическоеЛицо 						= ФизическоеЛицо;
		НоваяЗапись.Период 								= Элемент.Период;
		НоваяЗапись.ПроцентСевернойНадбавки 			= Элемент.Процент;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция РассчитатьПроцентыСеверногоСтажа(ДатаОтсчета, ПорядокНачисления, НачальныйПроцент)
	
	МассивПериодов = Новый Массив;
	
	ОписаниеШкалы = ЗарплатаКадрыРасширенныйКлиентПовтИсп.ОписаниеШкалыПорядкаНачисленияПроцентовСевернойНадбавки(ПорядокНачисления);
	
	Процент = НачальныйПроцент;
	ДатаСменыПроцента = ДатаОтсчета;
	
	Для каждого УчастокШкалы Из ОписаниеШкалы Цикл
		Пока Процент < УчастокШкалы.Ограничение Цикл
			ДатаСменыПроцента = ДобавитьМесяц(ДатаСменыПроцента, УчастокШкалы.РазмерПериода);
			Процент = Мин(Процент + УчастокШкалы.РазмерПрироста, УчастокШкалы.Ограничение);
			Элемент = Новый Структура("Период, Процент", ДатаСменыПроцента, Процент);
			МассивПериодов.Добавить(Элемент);
		КонецЦикла;
	КонецЦикла;
	
	Возврат МассивПериодов;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступность(ПроцентСевернойНадбавкиИзменяетсяЧисло, Элементы)
	
	Изменяется = ПроцентСевернойНадбавкиИзменяетсяЧисло = 1;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПроцентСевернойНадбавки",
		"Доступность",
		НЕ Изменяется);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ПорядокПроценты",
		"Доступность",
		Изменяется);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ДатаСтажа",
		"АвтоОтметкаНезаполненного",
		Изменяется);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьВидСтажа()

	Если НЕ Пользователи.РолиДоступны("ДобавлениеИзменениеДанныхФизическихЛицЗарплатаКадрыРасширенная") Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ВидСтажа",
			"АвтоОтметкаНезаполненного",
			Ложь);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ДатаСтажа",
			"АвтоОтметкаНезаполненного",
			Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеОПроцентеСевернойНадбавки()
	
	Если НЕ ПроцентыСевернойНадбавкиФизическихЛицНаборЗаписейПрочитан Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц.ФизическоеЛицо,
			|	ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц.ПроцентСевернойНадбавки,
			|	ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц.ПроцентСевернойНадбавкиИзменяется,
			|	ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц.ПорядокИсчисленияПроцентаСевернойНадбавки
			|ИЗ
			|	РегистрСведений.ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц КАК ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц
			|ГДЕ
			|	ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц.ФизическоеЛицо = &ФизическоеЛицоСсылка";
			
		Запрос.УстановитьПараметр("ФизическоеЛицоСсылка", ФизическоеЛицо);
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			ЗаполнитьЗначенияСвойств(ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц, Выборка);
			
		Иначе
			
			ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц.ФизическоеЛицо = ФизическоеЛицо;
			
		КонецЕсли; 
		
		СтрукутраЗаписи = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(
			ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц,
			Метаданные.РегистрыСведений.ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц);
		ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛицПрежняя = Новый ФиксированнаяСтруктура(СтрукутраЗаписи);
		
		Набор = РегистрыСведений.ПроцентыСевернойНадбавкиФизическихЛиц.СоздатьНаборЗаписей();
		Набор.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
		Набор.Прочитать();
		
		ПроцентыСевернойНадбавкиФизическихЛицНаборЗаписей.Загрузить(Набор.Выгрузить());
	
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные(Отказ);
	
	Если Пользователи.РолиДоступны("ДобавлениеИзменениеДанныхФизическихЛицЗарплатаКадрыРасширенная") Тогда
		
		ДанныеСтажаВНабор(ЭтаФорма, РасширенныйВводСтажа);
		
		Если НЕ ПроверитьЗаполнение() Тогда
			Отказ = Истина;
		Иначе
			
			СтрокиСтажей = СтажиФизическихЛиц.НайтиСтроки(Новый Структура("ВидСтажа", ВидСтажа));
			Для каждого СтрокаСтажа Из СтрокиСтажей Цикл
				СтажиФизическихЛиц.Удалить(СтрокаСтажа);
			КонецЦикла;
			
			Для каждого СтрокаНабора Из НаборЗаписейСеверногоСтажа Цикл
				
				СтрокаСтажиФизическихЛиц = СтажиФизическихЛиц.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаСтажиФизическихЛиц, СтрокаНабора);
				
				СтрокаНабора.РазмерМесяцев = СтрокаНабора.Лет * 12 + СтрокаНабора.РазмерМесяцев;
				СтрокаСтажиФизическихЛиц.РазмерМесяцев = СтрокаНабора.РазмерМесяцев;
				
			КонецЦикла;
			
			НаборЗаписейСтажиФизическихЛиц = РеквизитФормыВЗначение("НаборЗаписейСеверногоСтажа");
			НаборЗаписейСтажиФизическихЛиц.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
			НаборЗаписейСтажиФизическихЛиц.Отбор.ВидСтажа.Установить(ВидСтажа);
			
			НаборЗаписейСтажиФизическихЛиц.Записать();
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		
		Если Пользователи.РолиДоступны("ДобавлениеИзменениеДанныхДляНачисленияЗарплатыРасширенная") Тогда
			
			Набор = РегистрыСведений.ПроцентыСевернойНадбавкиФизическихЛиц.СоздатьНаборЗаписей();
			Набор.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
			Набор.Прочитать();
			
			ТекущиеЗаписи = Набор.Выгрузить();
			
			Для каждого ЗаписьНовогоНабора Из ПроцентыСевернойНадбавкиФизическихЛицНаборЗаписей Цикл
				
				СтрокиТекущихЗаписей = ТекущиеЗаписи.НайтиСтроки(Новый Структура("Период,ФизическоеЛицо", ЗаписьНовогоНабора.Период, ФизическоеЛицо));
				
				Если СтрокиТекущихЗаписей.Количество() = 0
					Или СтрокиТекущихЗаписей[0].ПроцентСевернойНадбавки <> ЗаписьНовогоНабора.ПроцентСевернойНадбавки Тогда
					
					Набор = РегистрыСведений.ПроцентыСевернойНадбавкиФизическихЛиц.СоздатьНаборЗаписей();
					Набор.Отбор.Период.Установить(ЗаписьНовогоНабора.Период);
					Набор.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
					
					Запись = Набор.Добавить();
					Запись.Период = ЗаписьНовогоНабора.Период;
					Запись.ФизическоеЛицо = ФизическоеЛицо;
					Запись.ПроцентСевернойНадбавки = ЗаписьНовогоНабора.ПроцентСевернойНадбавки;
					
					Набор.Записать();
					
				КонецЕсли;
				
				Если СтрокиТекущихЗаписей.Количество() > 0  Тогда
					ТекущиеЗаписи.Удалить(СтрокиТекущихЗаписей[0]);
				КонецЕсли;
				
			КонецЦикла;
			
			Для каждого СтрокаТекущихЗаписей Из ТекущиеЗаписи Цикл
				
				Набор = РегистрыСведений.ПроцентыСевернойНадбавкиФизическихЛиц.СоздатьНаборЗаписей();
				Набор.Отбор.Период.Установить(СтрокаТекущихЗаписей.Период);
				Набор.Отбор.ФизическоеЛицо.Установить(ФизическоеЛицо);
				Набор.Записать();
				
			КонецЦикла;
			
		КонецЕсли;
		
		ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛицИзменены = Ложь;
		Если Пользователи.РолиДоступны("ДобавлениеИзменениеДанныхДляНачисленияЗарплатыРасширенная") Тогда
			Для каждого ЭлементСтруктуры Из ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛицПрежняя Цикл
				ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛицИзменены = 
					ЭлементСтруктуры.Значение <> ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц[ЭлементСтруктуры.Ключ];
				Если ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛицИзменены Тогда
					МенеджерЗаписи = РеквизитФормыВЗначение("ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц");
					МенеджерЗаписи.Записать();
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Модифицированность = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтображениеПолейВводаСтажа(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ФормаИзменитьСведенияОСтажеСохранивТекущие",
		"Пометка",
		Форма.РасширенныйВводСтажа);
	
	Если Форма.РасширенныйВводСтажа Или Форма.НаборЗаписейСеверногоСтажа.Количество() > 1 Тогда
		КомпактныйВид = Ложь;
	Иначе
		КомпактныйВид = Истина;
	КонецЕсли;
	
	Если КомпактныйВид Тогда
		ТекущаяСтраница = Форма.Элементы.Найти("СтажиФизическихЛицМесяцДатаГруппа");
	Иначе
		ТекущаяСтраница = Форма.Элементы.Найти("СтажиФизическихЛицНаборЗаписейГруппа");
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"СтажиФизическихЛицГруппа",
		"ТекущаяСтраница",
		ТекущаяСтраница);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДанныеСтажаВНабор(Форма, ТекущийРежимВводаРасширенный)
	
	Если Не ТекущийРежимВводаРасширенный Тогда
		
		Если Форма.НаборЗаписейСеверногоСтажа.Количество() = 0 Тогда
			Запись = Форма.НаборЗаписейСеверногоСтажа.Добавить();
			Запись.ФизическоеЛицо = Форма.ФизическоеЛицо;
			Запись.Период = Форма.ДатаОтсчетаПериодическихСведений;
		Иначе
			Запись = Форма.НаборЗаписейСеверногоСтажа[0];
		КонецЕсли;
		
		Запись.ВидСтажа					= Форма.ВидСтажа;
		Запись.ИсчисляетсяСДатыПриема	= Форма.ИсчисляетсяСДатыПриема = 1;
		Запись.ДатаОтсчета				= ?(Запись.ИсчисляетсяСДатыПриема, Форма.ДатаПриема, Форма.ДатаСтажа);
		
		Если Запись.ИсчисляетсяСДатыПриема Тогда
			
			Запись.Лет				= 0;
			Запись.РазмерМесяцев	= 0;
			Запись.РазмерДней		= 1;
			
		Иначе
			
			Запись.Лет				= Форма.ЛетСтажа;
			Запись.РазмерМесяцев	= Форма.МесяцевСтажа;
			Запись.РазмерДней		= Форма.ДнейСтажа;
			
		КонецЕсли;
		
	Иначе
		
		Если Форма.НаборЗаписейСеверногоСтажа.Количество() = 1 Тогда
			
			Форма.ИсчисляетсяСДатыПриема = ?(Форма.НаборЗаписейСеверногоСтажа[0].ИсчисляетсяСДатыПриема, 1, 0);
			
			Если Форма.НаборЗаписейСеверногоСтажа[0].ИсчисляетсяСДатыПриема Тогда
				
				Форма.ДатаПриема = Форма.НаборЗаписейСеверногоСтажа[0].ДатаОтсчета;
				
				Форма.ЛетСтажа = 0;
				Форма.МесяцевСтажа = 0;
				Форма.ДнейСтажа = 1;
			
			Иначе
				
				Форма.ДатаСтажа = Форма.НаборЗаписейСеверногоСтажа[0].ДатаОтсчета;
				
				Форма.ЛетСтажа = Форма.НаборЗаписейСеверногоСтажа[0].Лет;
				Форма.МесяцевСтажа = Форма.НаборЗаписейСеверногоСтажа[0].РазмерМесяцев;
				Форма.ДнейСтажа = Форма.НаборЗаписейСеверногоСтажа[0].РазмерДней;
			
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьКомандыИзменитьСведенияОСтажеСохранивТекущие(Форма)
	
	ДоступностьИзмененияСведенийОСтажеСохранивТекущие = Ложь;
	Если Форма.ИсчисляетсяСДатыПриема = 0
		И ЗначениеЗаполнено(Форма.ДатаСтажа) Тогда
		
		ДоступностьИзмененияСведенийОСтажеСохранивТекущие = Истина;
		
	ИначеЕсли Форма.ИсчисляетсяСДатыПриема = 1
		И ЗначениеЗаполнено(Форма.ДатаПриема) Тогда
		
		ДоступностьИзмененияСведенийОСтажеСохранивТекущие = Истина;
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ФормаИзменитьСведенияОСтажеСохранивТекущие",
		"Доступность",
		ДоступностьИзмененияСведенийОСтажеСохранивТекущие И Форма.НаборЗаписейСеверногоСтажа.Количество() <= 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСтажа()
	
	Если Не ЗначениеЗаполнено(ДатаСтажа) Тогда
		
		ДатаСтажа = ДатаСведений;
		УстановитьДоступностьКомандыИзменитьСведенияОСтажеСохранивТекущие(ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаборЗаписейВидаСтажа()
	
	НаборЗаписейСеверногоСтажа.Очистить();
	Если ЗначениеЗаполнено(ВидСтажа) Тогда
		
		СтрокиСеверногоСтажа = СтажиФизическихЛиц.НайтиСтроки(Новый Структура("ВидСтажа", ВидСтажа));
		Для каждого СтрокаСтажа Из СтрокиСеверногоСтажа Цикл
			
			СтрокаНаборЗаписейСеверногоСтажа = НаборЗаписейСеверногоСтажа.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНаборЗаписейСеверногоСтажа, СтрокаСтажа);
			
			СтрокаНаборЗаписейСеверногоСтажа.Лет = Цел(СтрокаНаборЗаписейСеверногоСтажа.РазмерМесяцев / 12);
			СтрокаНаборЗаписейСеверногоСтажа.РазмерМесяцев = СтрокаНаборЗаписейСеверногоСтажа.РазмерМесяцев - СтрокаНаборЗаписейСеверногоСтажа.Лет * 12;
		
		КонецЦикла;
		
	КонецЕсли;
	
	УстановитьОтображениеПолейВводаСтажа(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьВводаДанныхСтажа(Форма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, 
		"ДанныеПоТрудовойКнижкеГруппа", "Доступность", Форма.ИсчисляетсяСДатыПриема = 0);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, 
		"ДатаПриема", "Доступность", Форма.ИсчисляетсяСДатыПриема = 1);
	
КонецПроцедуры

#КонецОбласти
