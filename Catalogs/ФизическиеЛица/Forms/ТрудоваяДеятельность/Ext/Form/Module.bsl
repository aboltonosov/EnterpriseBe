
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "Заголовок,ФизическоеЛицоСсылка");
	
	СотрудникиФормы.ПрочитатьДанныеИзХранилищаВФорму(
		ЭтаФорма,
		СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы),
		Параметры.АдресВХранилище);
	
	ПроинициализироватьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СотрудникиКлиент.ЗарегистрироватьОткрытиеФормы(ЭтаФорма, ИмяФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы, ТекстПредупреждения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	СотрудникиКлиент.ОбработкаОповещения(ЭтаФорма, ИмяСобытия, Параметр, Источник);
	
	Если ИмяСобытия = "РедактированиеПроцентаСевернойНадбавки" 
		И ФизическоеЛицоСсылка = Источник Тогда
		
		ФизическоеЛицоПроцентСевернойНадбавкиОбработкаОповещения(ИмяСобытия, Параметр, Источник);
		
	КонецЕсли;
	
	Если ИмяСобытия = "ИзмененСтажФизическогоЛица" И Источник.ВладелецФормы = ЭтаФорма Тогда
		ОбработатьИзменениеСтажаФизическогоЛица(Параметр.ДанныеСтажей);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НадписьПроцентСевернойНадбавкиНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПроцентыСевернойНадбавкиИзменить();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСведенияОСтажах

&НаКлиенте
Процедура СведенияОСтажахВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "СведенияОСтажахПредставлениеСтажа" Тогда
		
		ДатаСведений = ОбщегоНазначенияКлиент.ДатаСеанса();
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		ВидыСтажа = Новый ФиксированныйМассив(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТекущиеДанные.ВидСтажа));
		
		КадровыйУчетРасширенныйКлиент.ОткрытьФормуРедактированияСтажейФизическогоЛица(
			ЭтотОбъект, ФизическоеЛицоСсылка, ДатаСведений, ВидыСтажа, СтажиФизическихЛиц, Заголовок);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОСтажахПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	ОчиститьСведенияОСтаже();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыТрудоваяДеятельностьфизическихлиц

&НаКлиенте
Процедура ТрудоваяДеятельностьФизическихЛицПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ФизическоеЛицо = ФизическоеЛицоСсылка;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыНаградыфизическихлиц

&НаКлиенте
Процедура НаградыФизическихЛицПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ФизическоеЛицо = ФизическоеЛицоСсылка;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Ок(Команда)
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроинициализироватьФорму()
	
	Если НЕ СтажиФизическихЛицПрочитан Тогда
		СотрудникиФормыРасширенный.ПрочитатьНаборЗаписей(ЭтаФорма, "СтажиФизическихЛиц");
		СтажиФизическихЛицПрочитан = Истина;
	КонецЕсли; 
	
	ЗаполнитьДанныеОСтаже();
	
	Если НЕ НаградыФизическихЛицПрочитан Тогда
		СотрудникиФормыРасширенный.ПрочитатьНаборЗаписей(ЭтаФорма, "НаградыФизическихЛиц");
		НаградыФизическихЛицПрочитан = Истина;
	КонецЕсли; 
	
	Если НЕ ТрудоваяДеятельностьФизическихЛицПрочитан Тогда
		СотрудникиФормыРасширенный.ПрочитатьНаборЗаписей(ЭтаФорма, "ТрудоваяДеятельностьФизическихЛиц");
		ТрудоваяДеятельностьФизическихЛицПрочитан = Истина;
	КонецЕсли; 
	
	Если Пользователи.РолиДоступны("ДобавлениеИзменениеДанныхДляНачисленияЗарплатыРасширенная,ЧтениеДанныхДляНачисленияЗарплатыРасширенная") Тогда
		
		УстановитьПредставлениеПроцентаСевернойНадбавки();
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"НадписьПроцентСевернойНадбавки",
			"ГиперСсылка",
			Ложь);
			
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЗакрытыйДокумент);
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить(); 
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("СведенияОСтажах");
	
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СведенияОСтажах.ДатаОтсчета");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеОСтаже()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВидыСтажа.Ссылка КАК ВидСтажа
		|ИЗ
		|	Справочник.ВидыСтажа КАК ВидыСтажа
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВидыСтажа.Наименование";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СведенияОСтажах.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		СформироватьПредставлениеСтажа(НоваяСтрока, ТекущаяДатаСеанса());
	КонецЦикла;
	
	СтажиФизическихЛицВСведенияОСтажах();
	
КонецПроцедуры

&НаСервере
Процедура СтажиФизическихЛицВСведенияОСтажах()
	
	Для каждого СтрокаСтажа Из СведенияОСтажах Цикл
		
		НайденныеСтроки = СтажиФизическихЛиц.НайтиСтроки(Новый Структура("ВидСтажа", СтрокаСтажа.ВидСтажа));
		Если НайденныеСтроки.Количество() <> 0 Тогда
			
			ДанныеСтажа = Неопределено;
			Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				
				Если ДанныеСтажа = Неопределено
					Или ДанныеСтажа.Период < НайденнаяСтрока.Период Тогда
					
					ДанныеСтажа = НайденнаяСтрока;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ЗаполнитьЗначенияСвойств(СтрокаСтажа, ДанныеСтажа);
			СтрокаСтажа.Лет = Цел(ДанныеСтажа.РазмерМесяцев / 12);
			СтрокаСтажа.Месяцев = ДанныеСтажа.РазмерМесяцев - СтрокаСтажа.Лет * 12;
			СтрокаСтажа.Дней = ДанныеСтажа.РазмерДней;
			
			СформироватьПредставлениеСтажа(СтрокаСтажа, ТекущаяДатаСеанса());
			
		КонеЦЕсли;
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтажиНеЗаданыГруппа", "Видимость", Не СтажиЗаданы(ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьИзменениеСтажаФизическогоЛица(ДанныеСтажей)
	
	СтажиФизическихЛиц.Очистить();
	Для каждого СтрокаДанныеСтажей Из ДанныеСтажей Цикл
		
		НоваяСтрокаСтажиФизическихЛиц = СтажиФизическихЛиц.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСтажиФизическихЛиц, СтрокаДанныеСтажей);
		НоваяСтрокаСтажиФизическихЛиц.Период = СтрокаДанныеСтажей.Период;
		
	КонецЦикла;
	
	СтажиФизическихЛицВСведенияОСтажах();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьПредставлениеСтажа(ДанныеСтажа, ДатаАктуальности)
	
	ПредставлениеСтажа = "";
	Если Не ЗначениеЗаполнено(ДанныеСтажа.ДатаОтсчета) Тогда
		ПредставлениеСтажа = НСтр("ru = 'Нажмите, чтобы заполнить'");
	КонецЕсли;
	
	Если ПредставлениеСтажа = "" Тогда 
	
		СведенияОСтаже = ЗарплатаКадрыРасширенныйКлиентСервер.СведенияОСтаже();
		СведенияОСтаже.ДатаОтсчета = ДанныеСтажа.ДатаОтсчета;
		СведенияОСтаже.Лет = ДанныеСтажа.Лет;
		СведенияОСтаже.Месяцев = ДанныеСтажа.Месяцев;
		СведенияОСтаже.Дней = ДанныеСтажа.Дней;
		СведенияОСтаже.ИсчисляетсяСДатыПриема = ДанныеСтажа.ИсчисляетсяСДатыПриема;
		
		ПродолжительностьСтажа = ЗарплатаКадрыРасширенныйКлиентСервер.ПродолжительностьСтажа(СведенияОСтаже, ДатаАктуальности);
		
		Если СведенияОСтаже.ИсчисляетсяСДатыПриема Тогда
			
			ПредставлениеСтажа = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'С момента приема на работу (%1) на %2 составил %3'"), 
				Формат(ДанныеСтажа.ДатаОтсчета, "ДЛФ=Д"),
				Формат(ДатаАктуальности, "ДЛФ=Д"),
				ЗарплатаКадрыРасширенныйКлиентСервер.ПредставлениеСтажа(ПродолжительностьСтажа.Лет, ПродолжительностьСтажа.Месяцев, ПродолжительностьСтажа.Дней));
			
		Иначе
			
			ПредставлениеСтажа = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По трудовой книжке на %1 составил %2'"), 
				Формат(ДатаАктуальности, "ДЛФ=Д"), 
				ЗарплатаКадрыРасширенныйКлиентСервер.ПредставлениеСтажа(ПродолжительностьСтажа.Лет, ПродолжительностьСтажа.Месяцев, ПродолжительностьСтажа.Дней));
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеСтажа.ПредставлениеСтажа = ПредставлениеСтажа;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСведенияОСтаже()
	
	ТекущиеДанные = Элементы.СведенияОСтажах.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.ДатаОтсчета) Тогда 
		Возврат;
	КонецЕсли;
	
	СтрокиСтажа = СтажиФизическихЛиц.НайтиСтроки(Новый Структура("ВидСтажа", ТекущиеДанные.ВидСтажа));
	Для каждого СтрокаСтажа Из СтрокиСтажа Цикл
		СтажиФизическихЛиц.Удалить(СтрокаСтажа);
	КонецЦикла;
	
	ТекущиеДанные.Лет = 0;
	ТекущиеДанные.Месяцев = 0;
	ТекущиеДанные.Дней = 0;
	ТекущиеДанные.ИсчисляетсяСДатыПриема = Ложь;
	ТекущиеДанные.ДатаОтсчета = '00010101';
	
	СформироватьПредставлениеСтажа(ТекущиеДанные, ОбщегоНазначенияКлиент.ДатаСеанса());
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СтажиНеЗаданыГруппа", "Видимость", Не СтажиЗаданы(ЭтотОбъект));
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанные(Отказ) Экспорт
	
	Если Модифицированность Тогда
		
		Если Не Отказ Тогда
			
			Если ПроверитьЗаполнение() Тогда
				
				Возвращаемыйпараметр = Новый Структура;
				Возвращаемыйпараметр.Вставить("ИмяФормы", ИмяФормы);
				Возвращаемыйпараметр.Вставить("АдресВХранилище", АдресДанныхДополнительнойФормыНаСервере(СотрудникиКлиентСервер.ОписаниеДополнительнойФормы(ИмяФормы)));
				
				Оповестить(
					"ИзмененыДанныеДополнительнойФормы",
					Возвращаемыйпараметр,
					ВладелецФормы);
				
			Иначе
				Отказ = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	СохранитьИЗакрытьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиенте(ЗакрытьФорму = Истина) Экспорт

	Если НЕ ТолькоПросмотр Тогда
		ТекущийЭлемент = Элементы.ФормаОк;
	КонецЕсли; 
	
	Отказ = Ложь;

	СохранитьДанные(Отказ);
	
	Если НЕ Отказ  Тогда
		
		Модифицированность = Ложь;
		Если ЗакрытьФорму И Открыта() Тогда
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеКомандыИзменитьПроцентСевернойНадбавки(Форма) Экспорт
	ТекстНадписи = НСтр("ru = 'Изменить процент надбавки'");
	Если Форма.ПараметрыИсчисленияПроцентаСевернойНадбавкиФизическихЛиц.ПроцентСевернойНадбавки = 0 Тогда
		ТекстНадписи = НСтр("ru = 'Задать процент надбавки'");
	КонецЕсли;
	Возврат ТекстНадписи
КонецФункции

&НаКлиенте
Процедура ФизическоеЛицоПроцентСевернойНадбавкиОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр.Свойство("ДатаСтажа") Тогда
		
		НайденныеСтроки = СведенияОСтажах.НайтиСтроки(Новый Структура("ВидСтажа", Параметр.ВидСтажа));
		Если НайденныеСтроки.Количество() = 0 Тогда 
			Возврат;
		КонецЕсли;
		
		СтрокаСтажа = НайденныеСтроки[0];
		
		СтрокаСтажа.ДатаОтсчета = Параметр.ДатаСтажа;
		СтрокаСтажа.Лет = Цел(Параметр.МесяцевСтажа / 12);
		СтрокаСтажа.Месяцев = Параметр.МесяцевСтажа - СтрокаСтажа.Лет * 12;
		СтрокаСтажа.Дней = Параметр.ДнейСтажа;
		
		СформироватьПредставлениеСтажа(СтрокаСтажа, ОбщегоНазначенияКлиент.ДатаСеанса());
		
	КонецЕсли;
	
	УстановитьПредставлениеПроцентаСевернойНадбавки();
	
	Если Параметр.Свойство("ДанныеСтажей") Тогда
		ОбработатьИзменениеСтажаФизическогоЛица(Параметр.ДанныеСтажей);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПредставлениеПроцентаСевернойНадбавки()
	
	ФизическоеЛицоПроцентСевернойНадбавкиТекст = СотрудникиФормыРасширенный.ПредставлениеПроцентаСевернойНадбавки(ФизическоеЛицоСсылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентыСевернойНадбавкиИзменить()
	
	ИзСотрудника = ТипЗнч(ВладелецФормы.Параметры.Ключ) = Тип("СправочникСсылка.Сотрудники");
	
	Если ИзСотрудника Тогда
		ФизлицоЗаблокировано = СотрудникиКлиент.ЗаблокироватьФизическоеЛицоПриРедактировании(ВладелецФормы, Ложь);
	Иначе
		ФизлицоЗаблокировано = Истина;
	КонецЕсли;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("ФизическоеЛицо", ФизическоеЛицоСсылка);
	ПараметрыОткрытияФормы.Вставить("ТолькоПросмотр", ТолькоПросмотр ИЛИ НЕ ФизлицоЗаблокировано);
	
	ИдентификаторСтрокиСтажа = ИдентификаторСтрокиСеверногоСтажа(СведенияОСтажах);
	Если ИдентификаторСтрокиСтажа <> Неопределено Тогда
		СтрокаСтажа = СведенияОСтажах.НайтиПоИдентификатору(ИдентификаторСтрокиСтажа);
		ПараметрыОткрытияФормы.Вставить("ВидСтажа", СтрокаСтажа.ВидСтажа);
		ПараметрыОткрытияФормы.Вставить("ДатаСтажа", СтрокаСтажа.ДатаОтсчета);
		ПараметрыОткрытияФормы.Вставить("МесяцевСтажа", СотрудникиКлиентСерверРасширенный.ВсегоМесяцевПоСтрокеСтажа(СтрокаСтажа));
		ПараметрыОткрытияФормы.Вставить("ДнейСтажа", СтрокаСтажа.Дней);
	КонецЕсли;
	
	ПараметрыОткрытияФормы.Вставить("СтажиФизическихЛиц", СтажиФизическихЛиц);
	
	ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФормаРедактированияПроцентаСевернойНадбавки", ПараметрыОткрытияФормы, ЭтаФорма);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИдентификаторСтрокиСеверногоСтажа(Знач СведенияОСтажах)
	
	ВидыСтажа = ОбщегоНазначения.ВыгрузитьКолонку(СведенияОСтажах, "ВидСтажа", Истина);
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ВидыСтажа", ВидыСтажа);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВидыСтажа.Ссылка КАК ВидСтажа
		|ИЗ
		|	Справочник.ВидыСтажа КАК ВидыСтажа
		|ГДЕ
		|	ВидыСтажа.Ссылка В(&ВидыСтажа)
		|	И ВидыСтажа.КатегорияСтажа = ЗНАЧЕНИЕ(Перечисление.КатегорииСтажа.Северный)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОтборСтажа = Новый Структура("ВидСтажа", Выборка.ВидСтажа);
		Строки = СведенияОСтажах.НайтиСтроки(ОтборСтажа);
		Если Строки.Количество() > 0 Тогда
			Возврат Строки[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция АдресДанныхДополнительнойФормыНаСервере(ОписаниеДополнительнойФормы)
	
	Возврат СотрудникиФормы.АдресДанныхДополнительнойФормы(ОписаниеДополнительнойФормы, ЭтаФорма);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтажиЗаданы(Форма)
	
	СтажиЗаданы = Ложь;
	
	Для Каждого СтрокаСтажа Из Форма.СведенияОСтажах Цикл 
		
		Если СтрокаСтажа.ИсчисляетсяСДатыПриема Или ЗначениеЗаполнено(СтрокаСтажа.ДатаОтсчета)
			Или СтрокаСтажа.Лет <> 0 Или СтрокаСтажа.Месяцев <> 0 Или СтрокаСтажа.Дней <> 0 Тогда 
			
			СтажиЗаданы = Истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтажиЗаданы;
	
КонецФункции

#КонецОбласти
