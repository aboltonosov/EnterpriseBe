#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает список реквизитов, которые разрешается редактировать
//  с помощью обработки группового изменения объектов.
// 
// Возвращаемое значение:
//  Массив - список имен реквизитов объекта.
//
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	Возврат ПрисоединенныеФайлы.РеквизитыРедактируемыеВГрупповойОбработке();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ПолноеИмяОбъекта = "Справочник.ПередачаМатериаловВПроизводствоПрисоединенныеФайлы";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТаблицаСсылокДляОбработки = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
									Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Параметры.ОбработкаЗавершена = НЕ ТаблицаСсылокДляОбработки.ЕстьДанныеДляОбработки;
	Если НЕ ТаблицаСсылокДляОбработки.ЕстьДанныеДляОбработки Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ТаблицаСсылокДляОбработки.ЕстьЗаписиВоВременнойТаблице Тогда
		Возврат;
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НовыйФайл.Ссылка КАК НовыйФайлСсылка,
	|	МАКСИМУМ(ЕСТЬNULL(СтарыйФайл.Ссылка, НЕОПРЕДЕЛЕНО)) КАК СтарыйФайлСсылка
	|ПОМЕСТИТЬ ТаблицаФайлов
	|ИЗ
	|	ВТОбъектыДляОбработки КАК ВТОбъектыДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПередачаМатериаловВПроизводствоПрисоединенныеФайлы КАК НовыйФайл
	|		ПО НовыйФайл.Ссылка = ВТОбъектыДляОбработки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрисоединенныеФайлы КАК ДанныеНовогоФайла
	|		ПО НовыйФайл.Ссылка = ДанныеНовогоФайла.ПрисоединенныйФайл
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВПроизводство КАК НовыйДокумент
	|		ПО (НовыйДокумент.Ссылка = НовыйФайл.ВладелецФайла)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК СтарыйДокумент
	|		ПО (СтарыйДокумент.Номер = НовыйДокумент.Номер)
	|			И (СтарыйДокумент.Дата = НовыйДокумент.Дата)
	|			И (СтарыйДокумент.ХозяйственнаяОперация = &ХозяйственнаяОперация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВнутреннееПотреблениеТоваровПрисоединенныеФайлы КАК СтарыйФайл
	|		ПО (СтарыйФайл.ВладелецФайла = СтарыйДокумент.Ссылка)
	|			И (СтарыйФайл.Наименование = НовыйФайл.Наименование)
	|			И (СтарыйФайл.Размер = НовыйФайл.Размер)
	|			И (СтарыйФайл.ДатаСоздания = НовыйФайл.ДатаСоздания)
	|			И (СтарыйФайл.ДатаМодификацииУниверсальная = НовыйФайл.ДатаМодификацииУниверсальная)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрисоединенныеФайлы КАК ДанныеСтарогоФайла
	|		ПО (СтарыйФайл.Ссылка = ДанныеСтарогоФайла.ПрисоединенныйФайл)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоСтарыйФайл КАК ВТЗаблокированоСтарыйФайл
	|		ПО (ВТЗаблокированоСтарыйФайл.Ссылка = СтарыйФайл.Ссылка)
	|ГДЕ
	|	ВТЗаблокированоСтарыйФайл.Ссылка ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	НовыйФайл.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаФайлов.НовыйФайлСсылка,
	|	ТаблицаФайлов.СтарыйФайлСсылка,
	|	НовыйФайл.ВерсияДанных КАК НовыйФайлВерсияДанных,
	|	СтарыйФайл.ВерсияДанных КАК СтарыйФайлВерсияДанных
	|ИЗ
	|	ТаблицаФайлов КАК ТаблицаФайлов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПередачаМатериаловВПроизводствоПрисоединенныеФайлы КАК НовыйФайл
	|		ПО (НовыйФайл.Ссылка = ТаблицаФайлов.НовыйФайлСсылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВнутреннееПотреблениеТоваровПрисоединенныеФайлы КАК СтарыйФайл
	|		ПО (СтарыйФайл.Ссылка = ТаблицаФайлов.СтарыйФайлСсылка)";
	
	// Нужно получить заблокированные объекты, чтобы начать обновление только после их разблокировки
	ТаблицыДляЧтения = Новый СписокЗначений;
	ТаблицыДляЧтения.Добавить("Справочник.ВнутреннееПотреблениеТоваровПрисоединенныеФайлы", "ВТЗаблокированоСтарыйФайл");
	Для каждого ПолноеИмяОбъекта Из ТаблицыДляЧтения Цикл
		Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияСсылок(
							Параметры.Очередь, 
							ПолноеИмяОбъекта.Значение,
							МенеджерВременныхТаблиц);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ПолноеИмяОбъекта.Представление, Результат.ИмяВременнойТаблицы);
	КонецЦикла; 
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТОбъектыДляОбработки", ТаблицаСсылокДляОбработки.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПередачаВПроизводство);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
 	Пока Выборка.Следующий() Цикл
 		
 		НачатьТранзакцию();
		
 		Попытка
			
 			Блокировка = Новый БлокировкаДанных;
 			ЭлементБлокировки = Блокировка.Добавить("Справочник.ПередачаМатериаловВПроизводствоПрисоединенныеФайлы");
 			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.НовыйФайлСсылка);
 			ЭлементБлокировки = Блокировка.Добавить("Справочник.ВнутреннееПотреблениеТоваровПрисоединенныеФайлы");
 			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.СтарыйФайлСсылка);
 			Блокировка.Заблокировать();
 			
 			НовыйФайлОбъект = Выборка.НовыйФайлСсылка.ПолучитьОбъект();
 			СтарыйФайлОбъект = Выборка.СтарыйФайлСсылка.ПолучитьОбъект();

			Если НовыйФайлОбъект = Неопределено 
				ИЛИ СтарыйФайлОбъект = Неопределено 
				ИЛИ НЕ ЗначениеЗаполнено(Выборка.СтарыйФайлСсылка) Тогда
 				ОтменитьТранзакцию();
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.НовыйФайлСсылка);
 				Продолжить;
 			КонецЕсли;
			
			Если НовыйФайлОбъект.ВерсияДанных <> Выборка.НовыйФайлВерсияДанных
				ИЛИ СтарыйФайлОбъект.ВерсияДанных <> Выборка.СтарыйФайлВерсияДанных Тогда
 				ОтменитьТранзакцию();
				Продолжить;
			КонецЕсли; 
			
			НаборЗаписей = РегистрыСведений.ПрисоединенныеФайлы.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ПрисоединенныйФайл.Установить(Выборка.СтарыйФайлСсылка);
			НаборЗаписей.Прочитать();
			НаборЗаписей.Отбор.ПрисоединенныйФайл.Установить(Выборка.НовыйФайлСсылка);
			Для каждого ЗаписьНабора Из НаборЗаписей Цикл
				ЗаписьНабора.ПрисоединенныйФайл = Выборка.НовыйФайлСсылка;
			КонецЦикла; 
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей, Истина);
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.НовыйФайлСсылка);
	
			ЗафиксироватьТранзакцию();
			
 		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать объект: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.НовыйФайлСсылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									Выборка.НовыйФайлСсылка.Метаданные(),
									Выборка.НовыйФайлСсылка,
									ТекстСообщения);
									
 		КонецПопытки;
 
 	КонецЦикла;
 		
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НовыйФайл.Ссылка КАК НовыйФайлСсылка
	|ИЗ
	|	Справочник.ПередачаМатериаловВПроизводствоПрисоединенныеФайлы КАК НовыйФайл
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрисоединенныеФайлы КАК ДанныеНовогоФайла
	|		ПО НовыйФайл.Ссылка = ДанныеНовогоФайла.ПрисоединенныйФайл
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаМатериаловВПроизводство КАК НовыйДокумент
	|		ПО (НовыйДокумент.Ссылка = НовыйФайл.ВладелецФайла)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК СтарыйДокумент
	|		ПО (СтарыйДокумент.Номер = НовыйДокумент.Номер)
	|			И (СтарыйДокумент.Дата = НовыйДокумент.Дата)
	|			И (СтарыйДокумент.ХозяйственнаяОперация = &ХозяйственнаяОперация)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВнутреннееПотреблениеТоваровПрисоединенныеФайлы КАК СтарыйФайл
	|		ПО (СтарыйФайл.ВладелецФайла = СтарыйДокумент.Ссылка)
	|			И (СтарыйФайл.Наименование = НовыйФайл.Наименование)
	|			И (СтарыйФайл.Размер = НовыйФайл.Размер)
	|			И (СтарыйФайл.ДатаСоздания = НовыйФайл.ДатаСоздания)
	|			И (СтарыйФайл.ДатаМодификацииУниверсальная = НовыйФайл.ДатаМодификацииУниверсальная)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПрисоединенныеФайлы КАК ДанныеСтарогоФайла
	|		ПО (СтарыйФайл.Ссылка = ДанныеСтарогоФайла.ПрисоединенныйФайл)
	|ГДЕ
	|	ДанныеНовогоФайла.ПрисоединенныйФайл ЕСТЬ NULL ";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПередачаВПроизводство);
	СписокСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("НовыйФайлСсылка");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, СписокСсылок);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
