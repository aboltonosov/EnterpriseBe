
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	//++ НЕ УТКА
	Если НЕ ЗначениеЗаполнено(Параметры.Источник)
		ИЛИ ТипЗнч(Параметры.Источник) <> Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
	//-- НЕ УТКА
		
		ВызватьИсключение НСтр("ru='Не реализован выбор назначения из этой формы.'"); 
		
	//++ НЕ УТКА
	КонецЕсли;
	//-- НЕ УТКА
	
	Если НЕ Параметры.Свойство("Получатель") ИЛИ НЕ ЗначениеЗаполнено(Параметры.Получатель) Тогда
		
		ВариантыВыбора = ЗначениеПотребностьВсехПолучателей();
		
	Иначе
		
		ВариантыВыбора = ЗначениеПотребностьПолучателя();
		
	КонецЕсли;
	
	НастроитьДинамическийСписок();
	
	УстановитьЗаголовокФормы();
	
	МодификацияКонфигурацииПереопределяемый.ПриСозданииНаСервере(ЭтаФорма, СтандартнаяОбработка, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПереключательВариантыВыбораПриИзменении(Элемент)
	
	НастроитьСписокПоВариантуВыбораНазначения();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьСписокПоВариантуВыбораНазначения()
	
	ПоПрочимНазначениям = ВариантыВыбора = ЗначениеПрочиеНазначения();
	ПоВсемПолучателям   = ВариантыВыбора = ЗначениеПрочиеНазначения()
		ИЛИ ВариантыВыбора = ЗначениеПотребностьВсехПолучателей();
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ПоПрочимНазначениям", ПоПрочимНазначениям);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ПоВсемПолучателям", ПоВсемПолучателям);

	Элементы.ПроизводитсяВПроцессе.Видимость = НЕ ПоПрочимНазначениям;
	Элементы.Потребность.Видимость = НЕ ПоПрочимНазначениям;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаголовокРасшифровкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьЗначение(,Параметры.Распоряжение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовСписка

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	//++ НЕ УТКА
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	ЗначениеВыбора = УправлениеПроизводствомКлиентСервер.КлючВыбораНазначения();
	ЗаполнитьЗначенияСвойств(ЗначениеВыбора,ТекущиеДанные);
	
	ОповеститьОВыборе(ЗначениеВыбора);
	//-- НЕ УТКА
	Возврат; // в данной конфигурации действия не предусмотрены

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Возврат; // в данной конфигурации действия не предусмотрены
	
КонецПроцедуры

&НаСервере
Процедура НастроитьДинамическийСписок()
	
	//++ НЕ УТКА
	
	ТекстЗапроса = РегистрыНакопления.ПродукцияИПолуфабрикатыВПроизводстве.ТекстЗапросаДоступныхНазначений();
	Список.ТекстЗапроса = ТекстЗапроса;
	
	// отбор по потребности
	#Область Параметры_Потребности
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, 
		"Распоряжение", Параметры.Распоряжение);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, 
		"Номенклатура", Параметры.Номенклатура);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, 
		"Характеристика", Параметры.Характеристика);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, 
		"ВыпускающийЭтап", Параметры.ВыпускающийЭтап);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, 
		"Предшественники", Документы.ЭтапПроизводства2_2.ВсеПредшественники(Параметры.Источник));
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, 
		"Спецификация", Параметры.Спецификация);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, 
		"Получатель", Параметры.Получатель);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, 
		"Регистратор", Параметры.Источник);
	
	#КонецОбласти
	
	// отбор по схеме обособления
	#Область СхемаОбособления
	
	СписокДоступныхНазначений = Документы.ЭтапПроизводства2_2.СписокДоступныхНазначений(Параметры);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список,
		"НазначенияПродукции", СписокДоступныхНазначений);
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, 
		"Обособленно", СписокДоступныхНазначений <> Неопределено);
		
	#КонецОбласти
	
	// отбор по варианту выбора
	#Область ВариантВыбора
	
	НастроитьСписокПоВариантуВыбораНазначения();
	
	#КонецОбласти

	// прочие назначения
	#Область ПрочиеНазначения
	
	ПрочиеНазначения = Новый Массив;
	
	ТолкающееНазначение = НаправленияДеятельностиСервер.ТолкающееНазначение(Параметры.НаправлениеДеятельности);
	Если Не ТолкающееНазначение.Пустая() Тогда
		ПрочиеНазначения.Добавить(ТолкающееНазначение);
	КонецЕсли;
	
	Если Параметры.Свойство("Партнер") И ЗначениеЗаполнено(Параметры.Партнер) Тогда 
		
		ШаблонНазначения = Справочники.Назначения.ШаблонНового();
		ШаблонНазначения.Партнер = Параметры.Партнер;
		ШаблонНазначения.Договор = Параметры.Договор;
		ШаблонНазначения.НаправлениеДеятельности = Параметры.НаправлениеДеятельности;
		
		НазначениеДавальца = Справочники.Назначения.НайтиПоШаблону(ШаблонНазначения);
		ПрочиеНазначения.Добавить(НазначениеДавальца);
		
		НазначениеДавальца = Документы.ЭтапПроизводства2_2.НазначениеПобочногоВыпускаДавальцу(Параметры.Источник);
		ПрочиеНазначения.Добавить(НазначениеДавальца);
		
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список,
		"ПрочиеНазначения", ПрочиеНазначения);
	
	#КонецОбласти
	
	// константы
	#Область Константы
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, "ПустаяСсылкаЭтап", Документы.ЭтапПроизводства2_2.ПустаяСсылка());
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, "ПустаяСсылкаСпецификация", Справочники.РесурсныеСпецификации.ПустаяСсылка());
		
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, "ПустаяСсылкаНазначение", Справочники.Назначения.ПустаяСсылка());

	#КонецОбласти
	
	//-- НЕ УТКА
	Возврат; // в данной конфигурации действия не предусмотрены
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	ТекстНоменклатура = СтрШаблон(НСтр("ru = 'Номенклатура: %1'"), Параметры.Номенклатура);
	
	Если ЗначениеЗаполнено(Параметры.Характеристика) Тогда
		
		ТекстНоменклатура = ТекстНоменклатура + ", " + СтрШаблон(НСтр("ru = 'Характеристика: %1'"), Параметры.Характеристика);
		
	КонецЕсли;
	
	Заголовок = СтрШаблон(НСтр("ru = 'Выбор назначения (%1)'"), ТекстНоменклатура);
	
	ЗаголовокРасшифровка = Новый ФорматированнаяСтрока(
		НСтр("ru = 'Отобраны назначения по заказу:'"),
		" ",
		Новый ФорматированнаяСтрока(Строка(Параметры.Распоряжение),,,, "#ОткрытьРаспоряжение"));

КонецПроцедуры

#Область Константы

&НаКлиентеНаСервереБезКонтекста
Функция ЗначениеПотребностьПолучателя()

	Возврат 0;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЗначениеПотребностьВсехПолучателей()

	Возврат 1;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЗначениеПрочиеНазначения()

	Возврат 2;
	
КонецФункции

#КонецОбласти

#КонецОбласти
