
#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВидДокументаЕГАИС", ПредопределенноеЗначение("Перечисление.ВидыДокументовЕГАИС.ЗапросСправки2"));
	
	ОткрытьФорму(
		"ОбщаяФорма.ФормированиеИсходящегоЗапросаЕГАИС",
		ПараметрыФормы,
		ЭтотОбъект,,,,
		Новый ОписаниеОповещения("ФормированиеЗапросаСправки_Завершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ФормированиеЗапросаСправки_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") ИЛИ НЕ Результат.Результат Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСправки = ИнтеграцияЕГАИСКлиентСервер.СтруктураДанныхСправки2();
	ДанныеСправки.РегистрационныйНомер = Результат.ЗначениеПараметра;
	ДанныеСправки.Наименование = Результат.ЗначениеПараметра;
	
	НоваяСправка = СоздатьСправку2НаСервере(ДанныеСправки);
	
	Если НоваяСправка <> Неопределено Тогда
		Оповестить("Запись_Справка2", НоваяСправка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьСправку2НаСервере(ДанныеСправки)
	
	ТекстОшибки = "";
	НоваяСправка = ИнтеграцияЕГАИС.СоздатьСправку(ДанныеСправки, Перечисления.ВидыДокументовЕГАИС.Справка2, Неопределено, ТекстОшибки, Ложь);
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;
	
	Возврат НоваяСправка;
	
КонецФункции

#КонецОбласти