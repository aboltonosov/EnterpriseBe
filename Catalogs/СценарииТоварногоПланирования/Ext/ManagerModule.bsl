#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


//Возвращает имена блокруемых реквизитов для механизма блокирования реквизитов БСП
//	Возвращаемое значание:
//		Массив - имена блокируемых реквизитов
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт

	Результат = Новый Массив;
	Результат.Добавить("Валюта");
	Результат.Добавить("Периодичность");
	Результат.Добавить("ПланЗакупокПланироватьПоСумме;ПланЗакупокПланировать");
	Результат.Добавить("ПланПродажПланироватьПоСумме;ПланПродажПланировать");
	Результат.Добавить("ПланированиеПоНазначениям");
	
	Результат.Добавить("ИспользоватьВПланированииЗакупок");
	Результат.Добавить("ИспользоватьДляЗаказовПоставщику");
	Результат.Добавить("ИспользоватьВПланированииПродажПоКатегориям");
	Результат.Добавить("ИспользоватьРасчетПоСкоростиПродаж");
	Результат.Добавить("ИспользоватьВПланированииПродаж");
	Результат.Добавить("ИспользоватьВПланированииПроизводства");
	Результат.Добавить("ИспользоватьВПланированииСборкиРазборки");
	Результат.Добавить("ИспользоватьДляЗаказовНаСборкуРазборку");
	Результат.Добавить("ИспользоватьДляЗаказовНаПроизводство");
	Результат.Добавить("ИспользоватьДляЗаказовНаВнутреннееПотребление");
	Результат.Добавить("ИспользоватьДляПланированияМатериалов");
	Результат.Добавить("ПолучатьДанныеПлановВСтатусе");
	//++ НЕ УТ
	Результат.Добавить("ОтражаетсяВБюджетировании");
	//-- НЕ УТ
	
	Возврат Результат;

КонецФункции

// Список статусов планов по сценарию
//
// Параметры:
//  Сценарий - СправочникСсылка.СценарииТоварногоПланирования	 - Сценарий по которому необходимо получать данные
// 
// Возвращаемое значение:
//  СписокЗначений - Список статусов планов, которые разрешено получать
//
Функция СписокСтатусовПланов(Сценарий) Экспорт 
	
	Если ЗначениеЗаполнено(Сценарий) Тогда
	
		Статус = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Сценарий, "ПолучатьДанныеПлановВСтатусе");
	
	Иначе
	
		Статус = Перечисления.СтатусыПланов.ПустаяСсылка();
	
	КонецЕсли; 
	
	СписокСтатусов = Новый СписокЗначений;
	
	Если Статус = Перечисления.СтатусыПланов.Отменен Тогда
	
		СписокСтатусов.Добавить(Перечисления.СтатусыПланов.Отменен);
		СписокСтатусов.Добавить(Перечисления.СтатусыПланов.ВПодготовке);
		СписокСтатусов.Добавить(Перечисления.СтатусыПланов.НаУтверждении);
		
		
	ИначеЕсли Статус = Перечисления.СтатусыПланов.ВПодготовке Тогда
	
		СписокСтатусов.Добавить(Перечисления.СтатусыПланов.ВПодготовке);
		СписокСтатусов.Добавить(Перечисления.СтатусыПланов.НаУтверждении);
		
		
	ИначеЕсли Статус = Перечисления.СтатусыПланов.НаУтверждении Тогда
	
		СписокСтатусов.Добавить(Перечисления.СтатусыПланов.НаУтверждении);
		
	КонецЕсли; 
	
	СписокСтатусов.Добавить(Перечисления.СтатусыПланов.Утвержден);
	
	Возврат СписокСтатусов;

КонецФункции 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СценарииТоварногоПланирования.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.СценарииТоварногоПланирования КАК СценарииТоварногоПланирования
	|ГДЕ
	|	(СценарииТоварногоПланирования.ПолучатьДанныеПлановВСтатусе = ЗНАЧЕНИЕ(Перечисление.СтатусыПланов.ПустаяСсылка)
	|			ИЛИ НЕ &УправлениеПредприятием
	|				И СценарииТоварногоПланирования.ИспользоватьДляЗаказовНаПроизводство)";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("УправлениеПредприятием",ПолучитьФункциональнуюОпцию("УправлениеПредприятием"));
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Обработчик обновления УТ 11.3.2.23
// Процедура заполняет новый реквизит ПолучатьДанныеПлановВСтатусе значением по умолчанию
// Заполняет реквизит ИспользоватьДляЗаказовНаПроизводство в справочнике ""Сценарии товарного планирования"" значением Ложь. Формирование заказов на передачу в производство будет работать не корректно
Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	УправлениеПредприятием = ПолучитьФункциональнуюОпцию("УправлениеПредприятием");
	ПолноеИмяОбъекта = "Справочник.СценарииТоварногоПланирования";
	ОбъектыДляОбработки = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
	Пока ОбъектыДляОбработки.Следующий() Цикл
		НачатьТранзакцию();
		
		Попытка
			
			// Устанавливаем управляемую блокировку, чтобы провести ответственное чтение объекта
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ОбъектыДляОбработки.Ссылка);
			
			Блокировка.Заблокировать();
			
			Объект = ОбъектыДляОбработки.Ссылка.ПолучитьОбъект();
			
			Если Объект = Неопределено Тогда
				ОтменитьТранзакцию();
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ОбъектыДляОбработки.Ссылка);
				Продолжить;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Объект.ПолучатьДанныеПлановВСтатусе) Тогда
				Объект.ПолучатьДанныеПлановВСтатусе = Перечисления.СтатусыПланов.Утвержден;
			КонецЕсли;
			Если Не УправлениеПредприятием И Объект.ИспользоватьДляЗаказовНаПроизводство Тогда
				Объект.ИспользоватьДляЗаказовНаПроизводство = Ложь;
			КонецЕсли;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
			
			ТекстСообщения = НСтр("ru = 'Не удалось обработать %ИмяОбъекта%: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяОбъекта%", ПолноеИмяОбъекта);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ОбъектыДляОбработки.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
										УровеньЖурналаРегистрации.Предупреждение,
										МетаданныеОбъекта,
										ОбъектыДляОбработки.Ссылка,
										ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;	
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти


#КонецЕсли