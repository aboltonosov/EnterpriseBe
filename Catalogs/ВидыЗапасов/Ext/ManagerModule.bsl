#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция определяет реквизиты выбранного вида запасов.
//
// Параметры:
//  ВидЗапасов - СправочникСсылка.ВидыЗапасов - Ссылка на вид запасов
//
// Возвращаемое значение:
//	Структура - реквизиты выбранного вида запасов
//
Функция ПолучитьРеквизитыВидаЗапасов(ВидЗапасов) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВидыЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ВидыЗапасов.Организация КАК Организация,
	|	ВидыЗапасов.Валюта КАК Валюта,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Ссылка = &ВидЗапасов
	|");
	
	Запрос.УстановитьПараметр("ВидЗапасов", ВидЗапасов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		РеализацияЗапасовДругойОрганизации = Выборка.РеализацияЗапасовДругойОрганизации;
		Организация = Выборка.Организация;
		Валюта = Выборка.Валюта;
		ТипЗапасов = Выборка.ТипЗапасов;
	Иначе
		РеализацияЗапасовДругойОрганизации = Ложь;
		Организация = Справочники.Организации.ПустаяСсылка();
		Валюта = Справочники.Валюты.ПустаяСсылка();
		ТипЗапасов = Перечисления.ТипыЗапасов.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("РеализацияЗапасовДругойОрганизации, Организация, Валюта, ТипЗапасов", 
		РеализацияЗапасовДругойОрганизации,
		Организация,
		Валюта,
		ТипЗапасов);
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Функция формирует строку наименования вида запаса.
//
// Параметры:
//	СправочникОбъект - СправочникОбъект - Вид запасов, для которого необходимо определить наименование
//
// Возвращаемое значение:
//	Строка - Наименование вида запасов
//
Функция ПолучитьНаименованиеВидаЗапасов(СправочникОбъект) Экспорт
	
	Если СправочникОбъект.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС Тогда
		СтрокаНалогообложение = НСтр("ru='Облагается НДС'");
	ИначеЕсли СправочникОбъект.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС Тогда
		СтрокаНалогообложение = НСтр("ru='Не облагается НДС'");
	ИначеЕсли СправочникОбъект.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
		СтрокаНалогообложение = НСтр("ru='Облагается ЕНВД'");
	ИначеЕсли СправочникОбъект.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт Тогда
		СтрокаНалогообложение = НСтр("ru='Экспорт'");
	ИначеЕсли СправочникОбъект.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров Тогда
		СтрокаНалогообложение = НСтр("ru='Экспорт несырьевых товаров'");	
	ИначеЕсли СправочникОбъект.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг Тогда
		СтрокаНалогообложение = НСтр("ru='Экспорт сырьевых товаров, услуг (работ)'");
	ИначеЕсли СправочникОбъект.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию Тогда
		СтрокаНалогообложение = НСтр("ru='Определяется использованием ОС/НМА'");
	Иначе
		СтрокаНалогообложение = "";
	КонецЕсли;
	
	Если СправочникОбъект.Предназначение = Перечисления.ТипыПредназначенияВидовЗапасов.ПредназначенДляЗаказа Тогда
		АналитикаУчета = Строка(СправочникОбъект.УдалитьНазначение);
	ИначеЕсли СправочникОбъект.Предназначение = Перечисления.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки Тогда
		АналитикаУчета = НСтр("ru='Сделка'") + ": " + Строка(СправочникОбъект.Сделка);
	ИначеЕсли СправочникОбъект.Предназначение = Перечисления.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера Тогда
		АналитикаУчета = НСтр("ru='Менеджер'") + ": " + Строка(СправочникОбъект.Менеджер);
	ИначеЕсли СправочникОбъект.Предназначение = Перечисления.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения Тогда
		АналитикаУчета = НСтр("ru='Подразделение'") + ": " + Строка(СправочникОбъект.Подразделение);
	Иначе
		АналитикаУчета = "";
	КонецЕсли;
	
	Если СправочникОбъект.ТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар Тогда
		Наименование = СокрЛП(СправочникОбъект.ТипЗапасов) + "; "
			+ ?(Не ПустаяСтрока(АналитикаУчета), АналитикаУчета + "; ", "")
			+ НСтр("ru='Комитент'") + ": " + Строка(СправочникОбъект.Комитент) + "; "
			+ ?(ЗначениеЗаполнено(СправочникОбъект.Соглашение), НСтр("ru='Соглашение'") + ": " + Строка(СправочникОбъект.Соглашение) + "; ", "")
			+ СтрокаНалогообложение + "; "
			+ НСтр("ru='Валюта'") + ": " + Строка(СправочникОбъект.Валюта);
	//++ НЕ УТ
		ИначеЕсли СправочникОбъект.ТипЗапасов = Перечисления.ТипыЗапасов.ПродукцияДавальца 
			 ИЛИ СправочникОбъект.ТипЗапасов = Перечисления.ТипыЗапасов.МатериалДавальца Тогда
		Наименование = СокрЛП(СправочникОбъект.ТипЗапасов) + "; "
			+ ?(Не ПустаяСтрока(АналитикаУчета), АналитикаУчета + "; ", "")
			+ НСтр("ru='Давалец'") + ": " + Строка(СправочникОбъект.Комитент)
		;
	//-- НЕ УТ
	Иначе // собственный товар
		Наименование = СокрЛП(СправочникОбъект.ТипЗапасов) + "; "
			+ ?(Не ПустаяСтрока(АналитикаУчета), АналитикаУчета + "; ", "")
			+ ?(ЗначениеЗаполнено(СправочникОбъект.Поставщик), НСтр("ru='Поставщик'") + ": " + Строка(СправочникОбъект.Поставщик) + "; ", "")
			+ ?(Не ПустаяСтрока(СтрокаНалогообложение), СтрокаНалогообложение, "")
		;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СправочникОбъект.ГруппаФинансовогоУчета) Тогда
		Наименование = Наименование
			+ ?(Прав(СокрЛП(Наименование), 1) <> ";", "; ", "") 
			+ НСтр("ru='Группа'") + ": " + СправочникОбъект.ГруппаФинансовогоУчета;
	КонецЕсли;
		
	Если ЗначениеЗаполнено(СправочникОбъект.ГруппаПродукции) Тогда
		Наименование = Наименование
			+ ?(Прав(СокрЛП(Наименование), 1) <> ";", "; ", "") 
			+ НСтр("ru='Группа продукции'") + ": " + СправочникОбъект.ГруппаПродукции;
	КонецЕсли;	
	
	Если СправочникОбъект.РеализацияЗапасовДругойОрганизации Тогда
		Наименование = Наименование
			+ ?(Прав(СокрЛП(Наименование), 1) <> ";", "; ", "") 
			+ НСтр("ru='Запасы другой организации'");
	КонецЕсли;
		
	Если Прав(СокрЛП(Наименование), 1) =  ";" Тогда
		Наименование = Сред(СокрЛП(Наименование), 1, СтрДлина(СокрЛП(Наименование)) - 1);
	КонецЕсли;
		
	Возврат Наименование;

КонецФункции

// Функция получает вид запасов для текущего документа.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация документа
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Операция документа
//	РеквизитыДокумента - Структура, ВыборкаИзРезультатаЗапроса - Данные документа
//
// Возвращаемое значение:
//	СправочникСсылка.ВидыЗапасов - Найденный вид запасов
//
Функция ВидЗапасовДокумента(Организация, ХозяйственнаяОперация, РеквизитыДокумента = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ЗначениеЗаполнено(РеквизитыДокумента) Тогда
		Реквизиты = Новый Структура("
			|Организация,
			|ТипЗапасов,
			|Комитент,
			|Контрагент,
			|Соглашение,
			|Договор,
			|Валюта,
			|НалогообложениеНДС,
			|НалогообложениеОрганизации,
			|Поставщик,
			|Предназначение,
			|Менеджер,
			|Подразделение,
			|Сделка,
			|Назначение,
			|ОбособленныйУчетТоваровПоСделке,
			|ВариантОбособленногоУчетаТоваров,
			|ВидЗапасов,
			|ГруппаФинансовогоУчета,
			|ГруппаПродукции,
			|ХозяйственнаяОперация,
			|СохраняемыйВидЗапасов
			|");
		ЗаполнитьЗначенияСвойств(Реквизиты, РеквизитыДокумента);
	Иначе
		Реквизиты = Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Реквизиты) И ЗначениеЗаполнено(Реквизиты.СохраняемыйВидЗапасов) Тогда
		
		// Вид запасов уже известен - не надо пытаться его переформировать
		Результат = Реквизиты.СохраняемыйВидЗапасов;
		
	Иначе
		
		СтруктураВидЗапасов = СтруктураВидаЗапасов(Организация, ХозяйственнаяОперация, Реквизиты);
		
		МенеджерЗаписи = РегистрыСведений.АналитикаВидовЗапасов.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтруктураВидЗапасов);
		МенеджерЗаписи.Прочитать();
		
		Если МенеджерЗаписи.Выбран() Тогда
			Результат = МенеджерЗаписи.КлючАналитики;
		Иначе
			Результат = СоздатьКлючАналитики(СтруктураВидЗапасов);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

// Функция получает вид запасов для передачи товаров между организациями.
//
// Параметры:
//	ВидЗапасовВладельца - СправочникСсылка.ВидыЗапасов - Вид запасов организации - владельца
//	ОрганизацияПродавец - СправочникСсылка.Организации - Организация - продавец
//	ПередачаПодДеятельность - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение деятельности
//	ДатаДокумента - Дата - Дата документа, для определения попадает ли документ под действие 150ФЗ
//	СырьевойТовар - Булево - Признак, указывающий на то, является ли данный товар сырьевым или нет
//
// Возвращаемое значение:
//	СправочникСсылка.ВидыЗапасов - Созданный вид запасов
//
Функция ВидЗапасовДляПередачиМеждуОрганизациями(ВидЗапасовВладельца, ОрганизацияПродавец, Знач ПередачаПодДеятельность, Знач ДатаДокумента = Неопределено, СырьевойТовар = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВидыЗапасовВладельца.Ссылка КАК ВидЗапасовВладельца,
	|
	|	Настройка.ОрганизацияПродавец КАК Организация,
	|	ВидыЗапасовВладельца.Организация КАК Комитент,
	|	ВидыЗапасовВладельца.Организация КАК Контрагент,
	|	(ВЫБОР
	|		КОГДА Настройка.СпособПередачиТоваров В (
	|			ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию),
	|			ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссиюВозврат))
	|		ТОГДА Настройка.Валюта
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КОНЕЦ) КАК Валюта,
	|	Настройка.СпособПередачиТоваров КАК СпособПередачиТоваров,
	|	Истина КАК РеализацияЗапасовДругойОрганизации,
	|
	|	ВидыЗапасовВладельца.Предназначение КАК Предназначение,
	|	ВидыЗапасовВладельца.Сделка КАК Сделка,
	|	ВидыЗапасовВладельца.Менеджер КАК Менеджер,
	|	ВидыЗапасовВладельца.Подразделение КАК Подразделение,
	|	ВидыЗапасовВладельца.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	(ВЫБОР
	|		КОГДА Настройка.СпособПередачиТоваров В (
	|			ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию),
	|			ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссиюВозврат))
	|		ТОГДА ВидыЗапасовВладельца.Организация
	|		ИНАЧЕ ВидыЗапасовВладельца.Поставщик КОНЕЦ) КАК Поставщик,
	|	(ВЫБОР
	|		КОГДА Настройка.СпособПередачиТоваров В (
	|			ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию),
	|			ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссиюВозврат))
	|		ТОГДА
	|			ВЫБОР
	|				КОГДА ВидыЗапасовВладельца.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|					ТОГДА ВидыЗапасовВладельца.НалогообложениеНДС
	|				ИНАЧЕ &НалогообложениеКомитента КОНЕЦ 
	|		ИНАЧЕ &ПередачаПодДеятельность КОНЕЦ) КАК НалогообложениеНДС
	|ПОМЕСТИТЬ
	|	РеквизитыВидаЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|	ПО
	|		ВидыЗапасовВладельца.Организация = Настройка.ОрганизацияВладелец
	|		И ВидыЗапасовВладельца.ТипЗапасов = Настройка.ТипЗапасов
	|		И Настройка.ОрганизацияПродавец = &ОрганизацияПродавец
	|		И Настройка.СпособПередачиТоваров <> ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.НеПередается)
	|ГДЕ
	|	ВидыЗапасовВладельца.Ссылка = &ВидЗапасовВладельца
	|;
	|ВЫБРАТЬ
	|	Реквизиты.ВидЗапасовВладельца,
	|	ВидыЗапасовПродавца.Ссылка КАК ВидЗапасов,
	|
	|	Реквизиты.Организация,
	|	Реквизиты.Комитент,
	|	Реквизиты.Контрагент,
	|	Реквизиты.Валюта,
	|	Реквизиты.СпособПередачиТоваров,
	|	Реквизиты.РеализацияЗапасовДругойОрганизации,
	|
	|	Реквизиты.Предназначение КАК Предназначение,
	|	Реквизиты.Сделка КАК Сделка,
	|	Реквизиты.Менеджер КАК Менеджер,
	|	Реквизиты.Подразделение КАК Подразделение,
	|	Реквизиты.ГруппаФинансовогоУчета,
	|	Реквизиты.Поставщик,
	|	Реквизиты.НалогообложениеНДС
	|ИЗ
	|	РеквизитыВидаЗапасов КАК Реквизиты
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасовПродавца
	|	ПО
	|		Реквизиты.ВидЗапасовВладельца = ВидыЗапасовПродавца.ВидЗапасовВладельца
	|		И Реквизиты.Организация = ВидыЗапасовПродавца.Организация
	|		И Реквизиты.СпособПередачиТоваров = ВидыЗапасовПродавца.СпособПередачиТоваров
	|		И Реквизиты.Валюта = ВидыЗапасовПродавца.Валюта 
	|		И Реквизиты.НалогообложениеНДС = ВидыЗапасовПродавца.НалогообложениеНДС
	|");
	
	Запрос.УстановитьПараметр("ОрганизацияПродавец", ОрганизацияПродавец);
	Запрос.УстановитьПараметр("ВидЗапасовВладельца", ВидЗапасовВладельца);
	ИспользоватьРаздельныйУчетПоНалогообложению = ПолучитьФункциональнуюОпцию("ИспользоватьРаздельныйУчетПоНалогообложению");
	Если ИспользоватьРаздельныйУчетПоНалогообложению Тогда
		Если ПередачаПодДеятельность = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
		 И ДатаДокумента <> Неопределено
		 И ДатаДокумента >= УчетНДСУТ.ДатаНачалаДействия150ФЗ() Тогда
			Если СырьевойТовар Тогда
				ПередачаПодДеятельность = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг;
			Иначе
				ПередачаПодДеятельность = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ПередачаПодДеятельность = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка();
	КонецЕсли;
	Запрос.УстановитьПараметр("ПередачаПодДеятельность", ПередачаПодДеятельность);
	
	Комитент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидЗапасовВладельца, "Организация");
	НалогообложениеКомитента = Справочники.Организации.НалогообложениеНДС(Комитент,, ДатаДокумента);
	Запрос.УстановитьПараметр("НалогообложениеКомитента", НалогообложениеКомитента);
	
	ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
			ВидЗапасов = Выборка.ВидЗапасов;
		Иначе
			СтруктураПараметры = Новый Структура("
				|Организация,
				|СпособПередачиТоваров,
				|Комитент,
				|Контрагент,
				|Валюта,
				|ВидЗапасовВладельца,
				|РеализацияЗапасовДругойОрганизации,
				|Предназначение,
				|Сделка,
				|Менеджер,
				|Подразделение,
				|ГруппаФинансовогоУчета,
				|Поставщик,
				|НалогообложениеНДС
				|");
			ЗаполнитьЗначенияСвойств(СтруктураПараметры, Выборка);
			
			СправочникОбъект = Справочники.ВидыЗапасов.СоздатьЭлемент();
			СправочникОбъект.Заполнить(СтруктураПараметры);
			СправочникОбъект.Записать();
			
			ВидЗапасов = СправочникОбъект.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ВидЗапасов;
	
КонецФункции

// Функция получает вид запасов для возврата товаров от клиента.
//
// Параметры:
//	ВидЗапасовОтгрузки - СправочникСсылка.ВидыЗапасов - Вид запасов реализованного товара
//	Организация - СправочникСсылка.Организации - Организация в документе возврата товаров
//				- Неопределено - Организация берется из вида запасов отгрузки
//
// Возвращаемое значение:
//	СправочникСсылка.ВидыЗапасов - Созданный вид запасов
//
Функция ВидЗапасовДляВозвратаТоваровОтКлиента(ВидЗапасовОтгрузки, Организация = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка					КАК ВидЗапасов,
	|	ВидыЗапасов.Организация				КАК Организация,
	|	ВидыЗапасов.ТипЗапасов				КАК ТипЗапасов,
	|	ВидыЗапасов.Комитент				КАК Комитент,
	|	ВидыЗапасов.Контрагент				КАК Контрагент,
	|	ВидыЗапасов.Договор					КАК Договор,
	|	ВидыЗапасов.Соглашение				КАК Соглашение,
	|	ВидыЗапасов.Валюта					КАК Валюта,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ВидыЗапасов.Комитент
	|	ИНАЧЕ
	|		ВидыЗапасов.Поставщик
	|	КОНЕЦ КАК Поставщик,
	|	ВидыЗапасов.ГруппаФинансовогоУчета	КАК ГруппаФинансовогоУчета,
	|
	|	ВидыЗапасов.НалогообложениеНДС КАК НалогообложениеНДС,
	|
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК МатериалДавальца,
	|
	|	ЕСТЬNULL(ВидыЗапасов.Сделка.ОбособленныйУчетТоваровПоСделке, ЛОЖЬ)		КАК ОбособленныйУчетТоваровПоСделке,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)				КАК НалогообложениеОрганизации,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)					КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)							КАК Менеджер,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)						КАК Сделка,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПустаяСсылка)	КАК ВариантОбособленногоУчетаТоваров,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)							КАК Назначение,
	|	ЛОЖЬ																	КАК РеализацияЗапасовДругойОрганизации,
	|	НЕОПРЕДЕЛЕНО															КАК ВидЗапасовВладельца
	|
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Ссылка = &ВидЗапасовОтгрузки
	|");
	
	Запрос.УстановитьПараметр("ВидЗапасовОтгрузки", ВидЗапасовОтгрузки);
	
	ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		Если Выборка.МатериалДавальца Тогда
			
			ВидЗапасов = Выборка.ВидЗапасов;
			
		Иначе
			
			ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
				?(Организация = Неопределено, Выборка.Организация, Организация),
				Выборка.ХозяйственнаяОперация,
				Выборка);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ВидЗапасов;
	
КонецФункции

// Функция определяет вид запасов по умолчанию для передачи между организациями.
//
// Параметры:
//  ОрганизацияВладелец - СправочникСсылка.Организации - Ссылка на владельца
//  ОрганизацияПродавец - СправочникСсылка.Организации - Ссылка на продавца
//
// Возвращаемое значение:
//	СправочникСсылка.ВидыЗапасов - Найденный вид запасов
//
Функция ВидЗапасовДляПередачиМеждуОрганизациямиПоУмолчанию(ОрганизацияВладелец, ОрганизацияПродавец) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	Не ВидыЗапасов.ПометкаУдаления
	|	И ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация = &ОрганизацияПродавец
	|	И ВидыЗапасов.ВидЗапасовВладельца.Организация = &ОрганизацияВладелец
	|");
	
	Запрос.УстановитьПараметр("ОрганизацияВладелец", ОрганизацияВладелец);
	Запрос.УстановитьПараметр("ОрганизацияПродавец", ОрганизацияПродавец);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 
	   И Выборка.Следующий()
	Тогда
		ВидЗапасов = Выборка.ВидЗапасов;
	Иначе
		ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ВидЗапасов;

КонецФункции

// Процедура устанавливает пометку на удаление для найденных элементов справочника.
//
// Параметры:
//	СтруктураПараметров - Структура - Параметры выбора элементов справочника
//	ПометкаУдаления - Булево - Признак установки пометки на удаление
//
Процедура УстановитьПометкуУдаления(СтруктураПараметров, ПометкаУдаления) Экспорт

	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыЗапасов КАК Таблица
	|ГДЕ
	|	Таблица.ПометкаУдаления <> &ПометкаУдаления
	|");
	Если СтруктураПараметров.Свойство("Организация") Тогда

		Запрос.УстановитьПараметр("Организация", СтруктураПараметров.Организация);
		Запрос.Текст = Запрос.Текст + " И (Таблица.Организация = &Организация ИЛИ Таблица.Комитент = &Организация ИЛИ Таблица.Поставщик = &Организация)";

	КонецЕсли;
	Если СтруктураПараметров.Свойство("Партнер") Тогда

		Запрос.УстановитьПараметр("Партнер", СтруктураПараметров.Партнер);
		Запрос.Текст = Запрос.Текст + " И (Таблица.Комитент = &Партнер ИЛИ Таблица.Поставщик = &Партнер)";

	КонецЕсли;
	Если СтруктураПараметров.Свойство("Соглашение") Тогда

		Запрос.УстановитьПараметр("Соглашение", СтруктураПараметров.Соглашение);
		Запрос.Текст = Запрос.Текст + " И Таблица.Соглашение = &Соглашение";

	КонецЕсли;
	Если СтруктураПараметров.Свойство("Договор") Тогда

		Запрос.УстановитьПараметр("Договор", СтруктураПараметров.Договор);
		Запрос.Текст = Запрос.Текст + " И Таблица.Договор = &Договор";

	КонецЕсли;
	Если СтруктураПараметров.Свойство("Назначение") Тогда

		Запрос.УстановитьПараметр("Назначение", СтруктураПараметров.Назначение);
		Запрос.Текст = Запрос.Текст + " И Таблица.УдалитьНазначение = &Назначение";

	КонецЕсли;
	Запрос.УстановитьПараметр("ПометкаУдаления", ПометкаУдаления);

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		Выборка.Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(ПометкаУдаления);

	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаменаДублейВидовЗапасов

Процедура ЗаменитьДублиКлючейАналитики() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеСправочника.Ссылка КАК Ссылка,
	|	ДанныеСправочника.ПометкаУдаления,
	|	ДанныеСправочника.Организация,
	|	ДанныеСправочника.ТипЗапасов,
	|	ДанныеСправочника.НалогообложениеНДС,
	|	ДанныеСправочника.Соглашение,
	|	ДанныеСправочника.Валюта,
	|
	|	ВЫБОР КОГДА ДанныеСправочника.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ДанныеСправочника.Комитент
	|	ИНАЧЕ
	|		ВЫБОР КОГДА ДанныеСправочника.Поставщик ССЫЛКА Справочник.Партнеры
	|			И ДанныеСправочника.Поставщик <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|		ТОГДА
	|			ДанныеСправочника.Поставщик
	|		КОГДА ДанныеСправочника.Поставщик ССЫЛКА Справочник.Организации
	|			И ДанныеСправочника.Поставщик <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		ТОГДА
	|			ДанныеСправочника.Поставщик	
	|		ИНАЧЕ
	|			Неопределено
	|		КОНЕЦ
	|	КОНЕЦ КАК Поставщик,
	|
	|	ВЫБОР КОГДА ДанныеСправочника.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки) ТОГДА
	|		ДанныеСправочника.Сделка
	|	КОГДА ДанныеСправочника.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера) ТОГДА
	|		ДанныеСправочника.Менеджер
	|	КОГДА ДанныеСправочника.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения) ТОГДА
	|		ДанныеСправочника.Подразделение
	|	КОГДА ДанныеСправочника.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляЗаказа) ТОГДА
	|		Неопределено
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК АналитикаПредназначения,
	|
	|	ДанныеСправочника.ГруппаФинансовогоУчета,
	|	ДанныеСправочника.Контрагент,
	|	ДанныеСправочника.Договор,
	|	ДанныеСправочника.ГруппаПродукции
	|
	|ПОМЕСТИТЬ СвободныеВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ДанныеСправочника
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидовЗапасов КАК ДанныеРегистра
	|	ПО
	|		ДанныеСправочника.Ссылка = ДанныеРегистра.КлючАналитики
	|ГДЕ
	|	ДанныеРегистра.КлючАналитики ЕСТЬ NULL
	|	И Не ДанныеСправочника.РеализацияЗапасовДругойОрганизации
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СвободныеВидыЗапасов.Ссылка КАК Ссылка,
	|	СвободныеВидыЗапасов.ПометкаУдаления КАК ПометкаУдаления,
	|	Аналитика.КлючАналитики КАК КлючАналитики
	|ИЗ
	|	СвободныеВидыЗапасов КАК СвободныеВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидовЗапасов КАК Аналитика
	|	ПО
	|		СвободныеВидыЗапасов.Организация = Аналитика.Организация
	|		И СвободныеВидыЗапасов.ТипЗапасов = Аналитика.ТипЗапасов
	|		И СвободныеВидыЗапасов.НалогообложениеНДС = Аналитика.НалогообложениеНДС
	|		И СвободныеВидыЗапасов.Поставщик = Аналитика.Поставщик
	|		И СвободныеВидыЗапасов.Соглашение = Аналитика.Соглашение
	|		И СвободныеВидыЗапасов.Валюта = Аналитика.Валюта
	|		И СвободныеВидыЗапасов.АналитикаПредназначения = Аналитика.АналитикаПредназначения
	|		И СвободныеВидыЗапасов.ГруппаФинансовогоУчета = Аналитика.ГруппаФинансовогоУчета
	|		И СвободныеВидыЗапасов.Контрагент = Аналитика.Контрагент
	|		И СвободныеВидыЗапасов.Договор = Аналитика.Договор
	|		И СвободныеВидыЗапасов.ГруппаПродукции = Аналитика.ГруппаПродукции
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеСправочника.Ссылка КАК Ссылка,
	|	ДанныеСправочника.ПометкаУдаления КАК ПометкаУдаления,
	|	ДанныеСправочника.Организация КАК ОрганизацияПродавец,
	|	ДанныеСправочника.НалогообложениеНДС КАК НалогообложениеНДС,
	|	СвободныеВидыЗапасов.Ссылка КАК ВидЗапасовВладельца
	|ИЗ
	|	СвободныеВидыЗапасов КАК СвободныеВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидовЗапасов КАК Аналитика
	|	ПО
	|		СвободныеВидыЗапасов.Организация = Аналитика.Организация
	|		И СвободныеВидыЗапасов.ТипЗапасов = Аналитика.ТипЗапасов
	|		И СвободныеВидыЗапасов.НалогообложениеНДС = Аналитика.НалогообложениеНДС
	|		И СвободныеВидыЗапасов.Поставщик = Аналитика.Поставщик
	|		И СвободныеВидыЗапасов.Соглашение = Аналитика.Соглашение
	|		И СвободныеВидыЗапасов.Валюта = Аналитика.Валюта
	|		И СвободныеВидыЗапасов.АналитикаПредназначения = Аналитика.АналитикаПредназначения
	|		И СвободныеВидыЗапасов.ГруппаФинансовогоУчета = Аналитика.ГруппаФинансовогоУчета
	|		И СвободныеВидыЗапасов.Контрагент = Аналитика.Контрагент
	|		И СвободныеВидыЗапасов.Договор = Аналитика.Договор
	|		И СвободныеВидыЗапасов.ГруппаПродукции = Аналитика.ГруппаПродукции
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ДанныеСправочника
	|	ПО
	|		СвободныеВидыЗапасов.Ссылка = ДанныеСправочника.ВидЗапасовВладельца
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ДанныеСправочника.Ссылка) КАК Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеСправочника.Ссылка) КАК ЕстьДубли,
	|	ДанныеСправочника.Организация,
	|	ДанныеСправочника.ТипЗапасов,
	|	ДанныеСправочника.Комитент,
	|	ДанныеСправочника.Соглашение,
	|	ДанныеСправочника.Валюта,
	|	ДанныеСправочника.УдалитьНазначение,
	|	ДанныеСправочника.ВидЗапасовВладельца,
	|	ДанныеСправочника.НалогообложениеНДС
	|ПОМЕСТИТЬ
	|	Дубли
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ДанныеСправочника
	|ГДЕ
	|	ДанныеСправочника.РеализацияЗапасовДругойОрганизации
	|	И НЕ ДанныеСправочника.ПометкаУдаления
	|СГРУППИРОВАТЬ ПО
	|	ДанныеСправочника.Организация,
	|	ДанныеСправочника.ТипЗапасов,
	|	ДанныеСправочника.Комитент,
	|	ДанныеСправочника.Соглашение,
	|	ДанныеСправочника.Валюта,
	|	ДанныеСправочника.УдалитьНазначение,
	|	ДанныеСправочника.ВидЗапасовВладельца,
	|	ДанныеСправочника.НалогообложениеНДС
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДанныеСправочника.Ссылка) > 1
	|;
	|ВЫБРАТЬ
	|	СправочникВидыЗапасов.Ссылка КАК Ссылка,
	|	Дубли.Ссылка КАК ВидЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК СправочникВидыЗапасов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Дубли КАК Дубли
	|		ПО Дубли.Организация = СправочникВидыЗапасов.Организация
	|		И Дубли.ТипЗапасов = СправочникВидыЗапасов.ТипЗапасов
	|		И Дубли.Комитент = СправочникВидыЗапасов.Комитент
	|		И Дубли.Соглашение = СправочникВидыЗапасов.Соглашение
	|		И Дубли.Валюта = СправочникВидыЗапасов.Валюта
	|		И Дубли.УдалитьНазначение = СправочникВидыЗапасов.УдалитьНазначение
	|		И Дубли.ВидЗапасовВладельца = СправочникВидыЗапасов.ВидЗапасовВладельца
	|		И Дубли.НалогообложениеНДС = СправочникВидыЗапасов.НалогообложениеНДС
	|ГДЕ
	|	СправочникВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И Не СправочникВидыЗапасов.ПометкаУдаления
	|	И СправочникВидыЗапасов.Ссылка <> Дубли.Ссылка
	|");
	
	// Сформируем соответствие ключей аналитики.
	СоответствиеАналитик = Новый Соответствие;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	// МассивРезультатов[0] - СвободныеВидыЗапасов
	РезультатЗапросаВидыЗапасовКУдалению = МассивРезультатов[1];
	РезультатЗапросаИнтеркампани = МассивРезультатов[2];
	// Временная таблица Дубли - МассивРезультатов[3]
	РезультатЗапросаДублиИнтеркампани = МассивРезультатов[4];
	
	Если Не РезультатЗапросаВидыЗапасовКУдалению.Пустой()
	 ИЛИ Не РезультатЗапросаДублиИнтеркампани.Пустой() Тогда
	
		// Собственные виды запасов.
		Выборка = РезультатЗапросаВидыЗапасовКУдалению.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СоответствиеАналитик.Вставить(Выборка.Ссылка, Выборка.КлючАналитики);
			
			Если Не Выборка.ПометкаУдаления Тогда
				СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
				СправочникОбъект.УстановитьПометкуУдаления(Истина, Ложь);
			КонецЕсли;

		КонецЦикла;
		
		// Виды запасов интеркампани.
		Выборка = РезультатЗапросаИнтеркампани.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ВидЗапасовВладельца = СоответствиеАналитик[Выборка.ВидЗапасовВладельца];
			ВидЗапасов = ВидЗапасовДляПередачиМеждуОрганизациями(
				ВидЗапасовВладельца,
				Выборка.ОрганизацияПродавец,
				Выборка.НалогообложениеНДС);
			Если ЗначениеЗаполнено(ВидЗапасов) Тогда
				СоответствиеАналитик.Вставить(Выборка.Ссылка, ВидЗапасов);
			КонецЕсли;
			
			Если Не Выборка.ПометкаУдаления Тогда
				СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
				СправочникОбъект.УстановитьПометкуУдаления(Истина, Ложь);
			КонецЕсли;

		КонецЦикла;
		
		// Дубли видов запасов интеркампани.
		Выборка = РезультатЗапросаДублиИнтеркампани.Выбрать();
		Пока Выборка.Следующий() Цикл
			СоответствиеАналитик.Вставить(Выборка.Ссылка, Выборка.ВидЗапасов);
			СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
			СправочникОбъект.УстановитьПометкуУдаления(Истина, Ложь);
		КонецЦикла;
		
		Исключения = Новый Массив;
		Если Константы.УчитыватьСебестоимостьТоваровПоВидамЗапасов.Получить() Тогда
			Исключения.Добавить(Метаданные.РегистрыСведений.СтоимостьТоваров);
		КонецЕсли;
		ОбщегоНазначенияУТ.ЗаменитьСсылки(СоответствиеАналитик, Исключения);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция СтруктураВидаЗапасов(Организация, ХозяйственнаяОперация, РеквизитыДокумента) Экспорт
	
	СтруктураВидЗапасов = Новый Структура("
		|Организация,
		|ТипЗапасов,
		|Комитент,
		|Контрагент,
		|Соглашение,
		|Договор,
		|Валюта,
		|НалогообложениеНДС,
		|Поставщик,
		|Предназначение,
		|Менеджер,
		|Подразделение,
		|Сделка,
		|Назначение,
		|АналитикаПредназначения,
		|ГруппаФинансовогоУчета,
		|ГруппаПродукции
		|");
	СтруктураВидЗапасов.Организация = Организация;
	СтруктураВидЗапасов.Комитент = Неопределено;
	СтруктураВидЗапасов.Контрагент = Неопределено;
	СтруктураВидЗапасов.Поставщик = Неопределено;
	СтруктураВидЗапасов.Соглашение = Справочники.СоглашенияСПоставщиками.ПустаяСсылка();
	СтруктураВидЗапасов.Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	СтруктураВидЗапасов.Валюта = Справочники.Валюты.ПустаяСсылка();
	СтруктураВидЗапасов.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка();
	СтруктураВидЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.Товар;
	
	СтруктураВидЗапасов.Сделка = Справочники.СделкиСКлиентами.ПустаяСсылка();
	СтруктураВидЗапасов.Менеджер = Справочники.Пользователи.ПустаяСсылка();
	СтруктураВидЗапасов.Подразделение = Справочники.СтруктураПредприятия.ПустаяСсылка();
	СтруктураВидЗапасов.Предназначение = Перечисления.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено;
	СтруктураВидЗапасов.АналитикаПредназначения = Неопределено;
	СтруктураВидЗапасов.ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка();
	СтруктураВидЗапасов.ГруппаПродукции = Справочники.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка();
	
	Если РеквизитыДокумента <> Неопределено Тогда
		
		Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемНаКомиссию
		 ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту
		 ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию
		 ИЛИ РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар Тогда
			СтруктураВидЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар;
			СтруктураВидЗапасов.Комитент = РеквизитыДокумента.Поставщик;
			СтруктураВидЗапасов.Контрагент = ?(ЗначениеЗаполнено(РеквизитыДокумента.Контрагент), РеквизитыДокумента.Контрагент, Неопределено);
			СтруктураВидЗапасов.Соглашение = ?(ЗначениеЗаполнено(РеквизитыДокумента.Соглашение), РеквизитыДокумента.Соглашение, Справочники.СоглашенияСПоставщиками.ПустаяСсылка());
			СтруктураВидЗапасов.Договор = ?(ЗначениеЗаполнено(РеквизитыДокумента.Договор), РеквизитыДокумента.Договор, Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
			СтруктураВидЗапасов.Валюта = РеквизитыДокумента.Валюта;
			СтруктураВидЗапасов.НалогообложениеНДС = РеквизитыДокумента.НалогообложениеНДС;
			СтруктураВидЗапасов.Поставщик = РеквизитыДокумента.Поставщик;
		//++ НЕ УТ
		ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОтДавальца
		 ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДавальцу
		 ИЛИ РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.МатериалДавальца Тогда
			СтруктураВидЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.МатериалДавальца;
			СтруктураВидЗапасов.Комитент = РеквизитыДокумента.Поставщик;
			СтруктураВидЗапасов.Контрагент = ?(ЗначениеЗаполнено(РеквизитыДокумента.Контрагент), РеквизитыДокумента.Контрагент, Неопределено);
			СтруктураВидЗапасов.Соглашение = Справочники.СоглашенияСПоставщиками.ПустаяСсылка();
			СтруктураВидЗапасов.Договор = ?(ЗначениеЗаполнено(РеквизитыДокумента.Договор), РеквизитыДокумента.Договор, Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
			СтруктураВидЗапасов.Валюта = Справочники.Валюты.ПустаяСсылка();
			СтруктураВидЗапасов.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка();
			СтруктураВидЗапасов.Поставщик = РеквизитыДокумента.Поставщик;
			
		ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья
		 ИЛИ РеквизитыДокумента.ТипЗапасов = Перечисления.ТипыЗапасов.ПродукцияДавальца Тогда
			СтруктураВидЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.ПродукцияДавальца;
			СтруктураВидЗапасов.Комитент = РеквизитыДокумента.Поставщик;
			СтруктураВидЗапасов.Контрагент = ?(ЗначениеЗаполнено(РеквизитыДокумента.Контрагент), РеквизитыДокумента.Контрагент, Неопределено);
			СтруктураВидЗапасов.Соглашение = Справочники.СоглашенияСПоставщиками.ПустаяСсылка();
			СтруктураВидЗапасов.Договор = ?(ЗначениеЗаполнено(РеквизитыДокумента.Договор), РеквизитыДокумента.Договор, Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
			СтруктураВидЗапасов.Валюта = Справочники.Валюты.ПустаяСсылка();
			СтруктураВидЗапасов.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка();
			СтруктураВидЗапасов.Поставщик = РеквизитыДокумента.Поставщик;
		//-- НЕ УТ
		Иначе
			Если ЗначениеЗаполнено(РеквизитыДокумента.ТипЗапасов) Тогда
				СтруктураВидЗапасов.ТипЗапасов = РеквизитыДокумента.ТипЗапасов;
			Иначе
				СтруктураВидЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.Товар;
			КонецЕсли;
			Если РеквизитыДокумента.НалогообложениеНДС = РеквизитыДокумента.НалогообложениеОрганизации
			 ИЛИ Не ПолучитьФункциональнуюОпцию("ИспользоватьРаздельныйУчетПоНалогообложению") Тогда
				СтруктураВидЗапасов.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка();
			Иначе
				СтруктураВидЗапасов.НалогообложениеНДС = РеквизитыДокумента.НалогообложениеНДС;
			КонецЕсли;
		КонецЕсли;
		
		СтруктураВидЗапасов.ГруппаФинансовогоУчета = РеквизитыДокумента.ГруппаФинансовогоУчета;
		//++ НЕ УТ
		Если ПолучитьФункциональнуюОпцию("АналитическийУчетПоГруппамПродукции") Тогда
			СтруктураВидЗапасов.ГруппаПродукции = РеквизитыДокумента.ГруппаПродукции;
		КонецЕсли;
		//-- НЕ УТ
		
	КонецЕсли;
	
	Возврат СтруктураВидЗапасов;
	
КонецФункции

Функция СоздатьКлючАналитики(ПараметрыАналитики)

	МенеджерЗаписи = РегистрыСведений.АналитикаВидовЗапасов.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ПараметрыАналитики);
	Если ЗначениеЗаполнено(ПараметрыАналитики.Комитент) Тогда
		МенеджерЗаписи.Поставщик = ПараметрыАналитики.Комитент;
	КонецЕсли;
	
	СправочникОбъект = Справочники.ВидыЗапасов.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(СправочникОбъект, ПараметрыАналитики);
	СправочникОбъект.Наименование = ПолучитьНаименованиеВидаЗапасов(СправочникОбъект);
	СправочникОбъект.Записать();

	МенеджерЗаписи.КлючАналитики = СправочникОбъект.Ссылка;
	МенеджерЗаписи.Записать(Ложь);

	Возврат СправочникОбъект.Ссылка;

КонецФункции

// Возвращает соответствие назначения и его вида запасов, полученное из движений документа по регистру себестоимости товаров.
//
Функция СохраняемыеВидыЗапасовДляРабот(Ссылка, Организация) Экспорт
	
	СохраняемыеВидыЗапасовПоНазначению = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", 	 Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасов.УдалитьНазначение КАК Назначение,
	|	ДД.ВидЗапасов КАК ВидЗапасов
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ДД.ВидЗапасов = ВидыЗапасов.Ссылка
	|ГДЕ
	|	ДД.Регистратор = &Ссылка
	|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ДД.Активность
	|	И ВидыЗапасов.Организация = &Организация
	|	И ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	И ВидыЗапасов.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Назначение,
	|	ВидЗапасов";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СохраняемыеВидыЗапасовПоНазначению.Вставить(Выборка.Назначение, Выборка.ВидЗапасов);
	КонецЦикла;
	
	Возврат СохраняемыеВидыЗапасовПоНазначению;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Обработчик обновления УТ 11.3.2,
// заполняет реквизит "Группа финансового учета" справочника "ВидыЗапасов",
// обновляет справочник по данным регистра сведений.
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасов.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВидыЗапасов.Ссылка КАК Ссылка
	|	ИЗ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|			ПО ВидыЗапасовВладельца.Ссылка = ВидыЗапасов.ВидЗапасовВладельца
	|	ГДЕ
	|		НЕ ВидыЗапасов.ПометкаУдаления
	|		И ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|		И ВидыЗапасов.ГруппаФинансовогоУчета <> ВидыЗапасовВладельца.ГруппаФинансовогоУчета
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВидыЗапасов.Ссылка КАК Ссылка
	|	ИЗ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	ГДЕ
	|		НЕ ВидыЗапасов.ПометкаУдаления
	|		И ВидыЗапасов.Комитент <> НЕОПРЕДЕЛЕНО
	|		И ВидыЗапасов.Поставщик <> ВидыЗапасов.Комитент
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВидыЗапасов.Ссылка КАК Ссылка
	|	ИЗ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаВидовЗапасов КАК Аналитика
	|			ПО ВидыЗапасов.Ссылка = Аналитика.КлючАналитики
	|	ГДЕ
	|		ВидыЗапасов.Организация <> Аналитика.Организация
	|		ИЛИ ВидыЗапасов.ТипЗапасов <> Аналитика.ТипЗапасов
	|		ИЛИ ВидыЗапасов.НалогообложениеНДС <> Аналитика.НалогообложениеНДС
	|		ИЛИ (ВидыЗапасов.Поставщик <> НЕОПРЕДЕЛЕНО
	|			И ВидыЗапасов.Поставщик <> Аналитика.Поставщик)
	|		ИЛИ (ВидыЗапасов.Комитент <> НЕОПРЕДЕЛЕНО
	|			И ВидыЗапасов.Комитент <> Аналитика.Поставщик)
	|		ИЛИ ВидыЗапасов.Соглашение <> Аналитика.Соглашение
	|		ИЛИ ВидыЗапасов.Валюта <> Аналитика.Валюта
	|		ИЛИ ВидыЗапасов.ГруппаФинансовогоУчета <> Аналитика.ГруппаФинансовогоУчета
	|		ИЛИ ВидыЗапасов.Контрагент <> Аналитика.Контрагент
	|		ИЛИ ВидыЗапасов.Договор <> Аналитика.Договор
	|		ИЛИ ВидыЗапасов.ГруппаПродукции <> Аналитика.ГруппаПродукции
	|
	|	) КАК ВидыЗапасов
	|");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
 	ПолноеИмяОбъекта = "Справочник.ВидыЗапасов";
	МетаданныеСправочника = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОбработке.Ссылка КАК Ссылка,
	|	КОбработке.Ссылка.ВерсияДанных КАК ВерсияДанных,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА НЕ ВидыЗапасов.ПометкаУдаления
	|			И ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			И ВидыЗапасов.ГруппаФинансовогоУчета <> ВидыЗапасовВладельца.ГруппаФинансовогоУчета
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	) КАК НекорректнаяГФУ,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА ВидыЗапасов.Комитент <> НЕОПРЕДЕЛЕНО
	|				И ВидыЗапасов.Поставщик <> ВидыЗапасов.Комитент
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	) КАК НекорректныйПоставщик,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА ВидыЗапасов.Организация <> Аналитика.Организация
	|			ИЛИ ВидыЗапасов.ТипЗапасов <> Аналитика.ТипЗапасов
	|			ИЛИ ВидыЗапасов.НалогообложениеНДС <> Аналитика.НалогообложениеНДС
	|			ИЛИ (ВидыЗапасов.Поставщик <> НЕОПРЕДЕЛЕНО
	|				И ВидыЗапасов.Поставщик <> Аналитика.Поставщик)
	|			ИЛИ (ВидыЗапасов.Комитент <> НЕОПРЕДЕЛЕНО
	|				И ВидыЗапасов.Комитент <> Аналитика.Поставщик)
	|			ИЛИ ВидыЗапасов.Соглашение <> Аналитика.Соглашение
	|			ИЛИ ВидыЗапасов.Валюта <> Аналитика.Валюта
	|			ИЛИ ВидыЗапасов.ГруппаФинансовогоУчета <> Аналитика.ГруппаФинансовогоУчета
	|			ИЛИ ВидыЗапасов.Контрагент <> Аналитика.Контрагент
	|			ИЛИ ВидыЗапасов.Договор <> Аналитика.Договор
	|			ИЛИ ВидыЗапасов.ГруппаПродукции <> Аналитика.ГруппаПродукции
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	) КАК ТребуетсяОбновлениеПоДаннымРС,
	|	МАКСИМУМ(Аналитика.Организация) КАК Организация,
	|	МАКСИМУМ(Аналитика.ТипЗапасов) КАК ТипЗапасов,
	|	МАКСИМУМ(Аналитика.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(Аналитика.Поставщик) КАК Поставщик,
	|	МАКСИМУМ(Аналитика.Соглашение) КАК Соглашение,
	|	МАКСИМУМ(Аналитика.Валюта) КАК Валюта,
	|	МАКСИМУМ(Аналитика.АналитикаПредназначения) КАК АналитикаПредназначения,
	|	МАКСИМУМ(Аналитика.ГруппаФинансовогоУчета) КАК ГруппаФинансовогоУчета,
	|	МАКСИМУМ(Аналитика.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Аналитика.Договор) КАК Договор,
	|	МАКСИМУМ(Аналитика.ГруппаПродукции) КАК ГруппаПродукции,
	|	МАКСИМУМ(ВидыЗапасовВладельца.Ссылка) КАК ВидЗапасовВладельца
	|ИЗ
	|	&ВТДанныеДляОбработки КАК КОбработке
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|			ПО ВидыЗапасов.Ссылка = КОбработке.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаВидовЗапасов КАК Аналитика
	|		ПО КОбработке.Ссылка = Аналитика.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|			ПО ВидыЗапасовВладельца.Ссылка = ВидыЗапасов.ВидЗапасовВладельца
	|
	|СГРУППИРОВАТЬ ПО
	|	КОбработке.Ссылка,
	|	КОбработке.Ссылка.ВерсияДанных
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДанныеДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТекстДанныеЗаполненияПоРС = "
	|ВЫБРАТЬ
	|	Аналитика.Организация,
	|	Аналитика.ТипЗапасов,
	|	Аналитика.НалогообложениеНДС,
	|	Аналитика.Поставщик,
	|	Аналитика.Соглашение,
	|	Аналитика.Валюта,
	|	Аналитика.АналитикаПредназначения,
	|	Аналитика.ГруппаФинансовогоУчета,
	|	Аналитика.Договор,
	|	Аналитика.Контрагент,
	|	Аналитика.ГруппаПродукции
	|ИЗ
	|	РегистрСведений.АналитикаВидовЗапасов КАК Аналитика
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ #ЗаблокированныеЗаписи КАК ЗаблокированныеЗаписи
	|	ПО ЗаблокированныеЗаписи.Организация = Аналитика.Организация
	|		И ЗаблокированныеЗаписи.ТипЗапасов = Аналитика.ТипЗапасов
	|		И ЗаблокированныеЗаписи.НалогообложениеНДС = Аналитика.НалогообложениеНДС
	|		И ЗаблокированныеЗаписи.Поставщик = Аналитика.Поставщик
	|		И ЗаблокированныеЗаписи.Соглашение = Аналитика.Соглашение
	|		И ЗаблокированныеЗаписи.Валюта = Аналитика.Валюта
	|		И ЗаблокированныеЗаписи.АналитикаПредназначения = Аналитика.АналитикаПредназначения
	|		И ЗаблокированныеЗаписи.ГруппаФинансовогоУчета = Аналитика.ГруппаФинансовогоУчета
	|		И ЗаблокированныеЗаписи.Контрагент = Аналитика.Контрагент
	|		И ЗаблокированныеЗаписи.Договор = Аналитика.Договор
	|		И ЗаблокированныеЗаписи.ГруппаПродукции = Аналитика.ГруппаПродукции
	|ГДЕ
	|	Аналитика.КлючАналитики = &КлючАналитики
	|	И ЗаблокированныеЗаписи.Организация ЕСТЬ NULL
	|";
	
	ТаблицаЗаблокированныхЗаписей = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
		"РегистрСведений.АналитикаВидовЗапасов",
		МенеджерВременныхТаблиц);
		
	ТекстДанныеЗаполненияПоРС = СтрЗаменить(ТекстДанныеЗаполненияПоРС, "#ЗаблокированныеЗаписи", ТаблицаЗаблокированныхЗаписей.ИмяВременнойТаблицы);
	Запрос.Текст = ТекстДанныеЗаполненияПоРС;
	
	Пока Выборка.Следующий() Цикл
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Если Выборка.ТребуетсяОбновлениеПоДаннымРС Тогда
				ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.АналитикаВидовЗапасов");
				ЭлементБлокировки.УстановитьЗначение("Организация", Выборка.Организация);
				ЭлементБлокировки.УстановитьЗначение("ТипЗапасов", Выборка.ТипЗапасов);
				ЭлементБлокировки.УстановитьЗначение("Организация", Выборка.Организация);
				ЭлементБлокировки.УстановитьЗначение("НалогообложениеНДС", Выборка.НалогообложениеНДС);
				ЭлементБлокировки.УстановитьЗначение("Поставщик", Выборка.Поставщик);
				ЭлементБлокировки.УстановитьЗначение("Соглашение", Выборка.Соглашение);
				ЭлементБлокировки.УстановитьЗначение("Валюта", Выборка.Валюта);
				ЭлементБлокировки.УстановитьЗначение("АналитикаПредназначения", Выборка.АналитикаПредназначения);
				ЭлементБлокировки.УстановитьЗначение("ГруппаФинансовогоУчета", Выборка.ГруппаФинансовогоУчета);
				ЭлементБлокировки.УстановитьЗначение("Контрагент", Выборка.Контрагент);
				ЭлементБлокировки.УстановитьЗначение("Договор", Выборка.Договор);
				ЭлементБлокировки.УстановитьЗначение("ГруппаПродукции", Выборка.ГруппаПродукции);
				
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			КонецЕсли;
			
			Если Выборка.НекорректнаяГФУ Тогда
				ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.ВидЗапасовВладельца);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			КонецЕсли;
			
			Блокировка.Заблокировать();
			
			СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если СправочникОбъект = Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
		
			ОбъектИзменен = Ложь;
		
			Если Выборка.НекорректнаяГФУ Тогда
				СправочникОбъект.ГруппаФинансовогоУчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СправочникОбъект.ВидЗапасовВладельца, "ГруппаФинансовогоУчета");
				СправочникОбъект.Наименование = ПолучитьНаименованиеВидаЗапасов(СправочникОбъект);
				
				ОбъектИзменен = Истина;
			КонецЕсли;
		
			Если Выборка.НекорректныйПоставщик Тогда
				СправочникОбъект.Поставщик = СправочникОбъект.Комитент;
				
				ОбъектИзменен = Истина;
			КонецЕсли;
		
			Если Выборка.ТребуетсяОбновлениеПоДаннымРС Тогда
				
				Запрос.УстановитьПараметр("КлючАналитики", Выборка.Ссылка);
				ДанныеПоРС = Запрос.Выполнить().Выгрузить()[0];
				
				Если СправочникОбъект.Организация <> ДанныеПоРС.Организация
					И ЗначениеЗаполнено(ДанныеПоРС.Организация) Тогда
					СправочникОбъект.Организация = ДанныеПоРС.Организация;
				КонецЕсли;
				
				Если СправочникОбъект.ТипЗапасов <> ДанныеПоРС.ТипЗапасов
					И ЗначениеЗаполнено(ДанныеПоРС.ТипЗапасов) Тогда
					СправочникОбъект.ТипЗапасов = ДанныеПоРС.ТипЗапасов;
				КонецЕсли;
				
				Если СправочникОбъект.НалогообложениеНДС <> ДанныеПоРС.НалогообложениеНДС
					И ЗначениеЗаполнено(ДанныеПоРС.НалогообложениеНДС) Тогда
					СправочникОбъект.НалогообложениеНДС = ДанныеПоРС.НалогообложениеНДС;
				КонецЕсли;
				
				Если СправочникОбъект.Поставщик <> ДанныеПоРС.Поставщик
					И СправочникОбъект.Комитент = ДанныеПоРС.Поставщик Тогда
					СправочникОбъект.Поставщик = ДанныеПоРС.Поставщик;
				КонецЕсли;
				
				Если СправочникОбъект.Соглашение <> ДанныеПоРС.Соглашение
					И ЗначениеЗаполнено(ДанныеПоРС.Соглашение) Тогда
					СправочникОбъект.Соглашение = ДанныеПоРС.Соглашение;
				КонецЕсли;
				
				Если СправочникОбъект.Валюта <> ДанныеПоРС.Валюта
					И ЗначениеЗаполнено(ДанныеПоРС.Валюта) Тогда
					СправочникОбъект.Валюта = ДанныеПоРС.Валюта;
				КонецЕсли;
				
				Если СправочникОбъект.ГруппаФинансовогоУчета <> ДанныеПоРС.ГруппаФинансовогоУчета
					И ЗначениеЗаполнено(ДанныеПоРС.ГруппаФинансовогоУчета)
					И НЕ СправочникОбъект.РеализацияЗапасовДругойОрганизации Тогда
					СправочникОбъект.ГруппаФинансовогоУчета = ДанныеПоРС.ГруппаФинансовогоУчета;
				КонецЕсли;
				
				Если СправочникОбъект.Контрагент <> ДанныеПоРС.Контрагент
					И ЗначениеЗаполнено(ДанныеПоРС.Контрагент) Тогда
					СправочникОбъект.Контрагент = ДанныеПоРС.Контрагент;
				КонецЕсли;
				
				Если СправочникОбъект.Договор <> ДанныеПоРС.Договор
					И ЗначениеЗаполнено(ДанныеПоРС.Договор) Тогда
					СправочникОбъект.Договор = ДанныеПоРС.Договор;
				КонецЕсли;
				
				Если СправочникОбъект.ГруппаПродукции <> ДанныеПоРС.ГруппаПродукции
					И ЗначениеЗаполнено(ДанныеПоРС.ГруппаПродукции) Тогда
					СправочникОбъект.ГруппаПродукции = ДанныеПоРС.ГруппаПродукции;
				КонецЕсли;
				ОбъектИзменен = Истина;
			КонецЕсли;
			Если ОбъектИзменен Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(СправочникОбъект, Истина);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать : %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеСправочника,
				Выборка.Ссылка,
				ТекстСообщения);
			ВызватьИсключение;
		КонецПопытки;
	КонецЦикла;
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
