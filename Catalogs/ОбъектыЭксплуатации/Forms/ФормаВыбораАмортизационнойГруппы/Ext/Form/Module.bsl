#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВызовНеИзЗаполненияСписка = Истина;
	
	ЗапросГрупп = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Группы.Ссылка КАК АмортизационнаяГруппа,
		|	Группы.Порядок КАК Порядок
		|ИЗ
		|	Перечисление.АмортизационныеГруппы КАК Группы");
	
	ВыборкаГрупп = ЗапросГрупп.Выполнить().Выбрать();
	
	Индекс = 0;
	Пока ВыборкаГрупп.Следующий() Цикл 
		РазличныеАмортизационныеГруппы.Вставить(
			Индекс,
			Новый Структура(
				"АмортизационнаяГруппа,Порядок",
				ВыборкаГрупп.АмортизационнаяГруппа,ВыборкаГрупп.Порядок));
		
		Индекс = Индекс +1;
	КонецЦикла;
	
	ЗапросПустогоОКОФ = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОКОФ.Ссылка
		|ИЗ
		|	Справочник.ОбщероссийскийКлассификаторОсновныхФондов КАК ОКОФ");
	
	Если ЗапросПустогоОКОФ.Выполнить().Пустой() Тогда
		Элементы.ПеренестиВСправочник.Доступность = Ложь;
	КонецЕсли;
	
	Элементы.ИерархияОКОФ.ТекущаяСтрока = Параметры.КодПоОКОФ;
	Элементы.ИерархияОКОФ.ТекущийЭлемент = Параметры.АмортизационнаяГруппа;

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИерархияОКОФ

&НаКлиенте
Процедура ИерархияОКОФВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытьСВыбраннымРезультатом();
	СтандартнаяОбработка = Ложь; 

КонецПроцедуры

&НаКлиенте
Процедура ИерархияОКОФПриАктивизацииСтроки(Элемент)
	
	Если ВызовНеИзЗаполненияСписка И Элемент.ТекущаяСтрока <> Неопределено Тогда
		
		ОбработатьВыборОКОФ(Элементы.ИерархияОКОФ.ТекущаяСтрока);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыАмортизационныеГруппыТаблица

&НаКлиенте
Процедура АмортизационныеГруппыТаблицаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ЗакрытьСВыбраннымРезультатом();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбработатьВыборОКОФ(ОКОФ)
	
	ВызовНеИзЗаполненияСписка = Ложь;
	Если Не ЗначениеЗаполнено(ОКОФ) Тогда
		
		АмортизационныеГруппыТаблица.Очистить();
		Элементы.ПеренестиВСправочник.Доступность = Ложь;
		
	Иначе
		
		ЗапросГрупп = Новый Запрос;
		ЗапросГрупп.УстановитьПараметр("ОКОФ", ОКОФ);
		ЗапросГрупп.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Группы.АмортизационнаяГруппа,
		|	Группы.Примечание КАК Комментарий,
		|	АмортизационныеГруппы.Порядок КАК Порядок
		|ИЗ
		|	РегистрСведений.АмортизационныеГруппыОКОФ КАК Группы  ЛЕВОЕ СОЕДИНЕНИЕ
		|	Перечисление.АмортизационныеГруппы КАК АмортизационныеГруппы ПО
		|	АмортизационныеГруппы.Ссылка = Группы.АмортизационнаяГруппа
		|ГДЕ
		|	Группы.ОКОФ = &ОКОФ";
		
		ВыборкаГрупп = ЗапросГрупп.Выполнить().Выбрать();
		
		АмортизационныеГруппыТаблица.Очистить();
		Элементы.ПеренестиВСправочник.Доступность = Истина;
		
		КоличествоГрупп = ВыборкаГрупп.Количество();
		Если КоличествоГрупп = 1 Тогда 
			
			ВыборкаГрупп.Следующий();
			Строка = АмортизационныеГруппыТаблица.Вставить(0);
			Строка.АмортизационнаяГруппа = ВыборкаГрупп.АмортизационнаяГруппа;
			Строка.Комментарий = ВыборкаГрупп.Комментарий;
			
			Элементы.АмортизационныеГруппыТаблицаКомментарий.Видимость = Истина;
			
		ИначеЕсли КоличествоГрупп = 0 Тогда
			
			Индекс = 0;
			Для Каждого Группа Из РазличныеАмортизационныеГруппы Цикл
				
				Строка = АмортизационныеГруппыТаблица.Вставить(Индекс);
				Строка.АмортизационнаяГруппа = Группа.Значение.АмортизационнаяГруппа;
				Строка.Порядок = Группа.Значение.Порядок;
				Индекс = Индекс +1;
				
			КонецЦикла;
			
			Элементы.АмортизационныеГруппыТаблицаКомментарий.Видимость = Ложь;
			
		Иначе
			
			Индекс = 0;
			Пока ВыборкаГрупп.Следующий() Цикл
				
				Строка = АмортизационныеГруппыТаблица.Вставить(Индекс);
				Строка.АмортизационнаяГруппа = ВыборкаГрупп.АмортизационнаяГруппа;
				Строка.Комментарий = ВыборкаГрупп.Комментарий;
				Строка.Порядок = ВыборкаГрупп.Порядок;
				Индекс = Индекс +1;
				
			КонецЦикла;
			
			Элементы.АмортизационныеГруппыТаблицаКомментарий.Видимость = Истина;
			
		КонецЕсли;
		
		АмортизационныеГруппыТаблица.Сортировать("Порядок");
		
	КонецЕсли;
	ВызовНеИзЗаполненияСписка = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиОКОФиАмортизационнуюГруппу(Команда)
	
	ЗакрытьСВыбраннымРезультатом();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСВыбраннымРезультатом()
	
	ТекущийКодПоОКОФ = Элементы.ИерархияОКОФ.ТекущиеДанные;
	Если ТекущийКодПоОКОФ <> Неопределено Тогда
		ОКОФ = ТекущийКодПоОКОФ.Ссылка;
		ОКОФНаименование = ТекущийКодПоОКОФ.Наименование;
	Иначе
		ОКОФ = ПредопределенноеЗначение("Справочник.ОбщероссийскийКлассификаторОсновныхФондов.ПустаяСсылка");
		ОКОФНаименование = "";
	КонецЕсли;
	
	ТекущаяАмортизационнаяГруппа = Элементы.АмортизационныеГруппыТаблица.ТекущиеДанные;
	Если ТекущаяАмортизационнаяГруппа <> Неопределено Тогда
		АмортизационнаяГруппа = ТекущаяАмортизационнаяГруппа.АмортизационнаяГруппа;
	Иначе
		АмортизационнаяГруппа = ПредопределенноеЗначение("Перечисление.АмортизационныеГруппы.ПустаяСсылка");
	КонецЕсли;
	
	ПараметрЗакрытия = Новый Структура("ОКОФ, ОКОФНаименование, АмортизационнаяГруппа", 
										ОКОФ, ОКОФНаименование, АмортизационнаяГруппа);
	
	Оповестить("ВыборАмортизационнойГруппыОС", ПараметрЗакрытия, ВладелецФормы.УникальныйИдентификатор);
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти