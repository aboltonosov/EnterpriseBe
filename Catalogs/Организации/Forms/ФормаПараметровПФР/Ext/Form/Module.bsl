// 4D:ERP для Беларуси
// {
// Форма изменена
// }
// 4D

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// 4D:ERP для Беларуси, АлексейЧ, 15.11.2017 11:34:57 
	// Локализовать документ "Отражение зарплаты в финансовом учете", № 15826
	// {
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "ВидОрганизации, КодОрганаПФР, НаименованиеТерриториальногоОрганаПФР, ИПРегистрационныйНомерПФР, Организация, КонтрагентБелгосстрах, ДоговорБелгосстрах");
	// }
	// 4D
	
	Если ВидОрганизации = "ИндивидуальныйПредприниматель" Тогда
		Элементы.ГруппаОтступПФРИП.Видимость = Истина;
		Элементы.ГруппаОтступРеквизитыПФР.ОтображатьЗаголовок = Истина;
		Элементы.ГруппаОтступРеквизитыПФР.Заголовок = НСтр("ru = 'Отчетность за сотрудников:'");
	Иначе
		Элементы.ГруппаОтступПФРИП.Видимость = Ложь;;
	КонецЕсли;
	
	//++ НЕ УТ
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФорме(ЭтаФорма, "ИсторияРегистрацийВОрганеПФР", Организация);
	ИсторияРегистрацийВОрганеПФРПериодСтрокой = ПредставлениеПериода(ИсторияРегистрацийВОрганеПФР.Период, КонецКвартала(ИсторияРегистрацийВОрганеПФР.Период), "ФП = Истина");
	//-- НЕ УТ
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	//++ НЕ УТ
	РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(ЭтаФорма, Организация, ИмяСобытия, Параметр, Источник);
	ИсторияРегистрацийВОрганеПФРПериодСтрокой = ПредставлениеПериода(ИсторияРегистрацийВОрганеПФР.Период, КонецКвартала(ИсторияРегистрацийВОрганеПФР.Период), "ФП = Истина");
	//-- НЕ УТ
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы,, ТекстПредупреждения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Отображение полного наименования контрагента в форме реквизитов Белгосстрах
// 4D:ERP для Беларуси, АлексейЧ, 15.11.2017 11:34:57 
// Локализовать документ "Отражение зарплаты в финансовом учете", № 15826
&НаКлиенте
Процедура КонтрагентБелгосстрахПриИзменении(Элемент)
		
	НаименованиеТерриториальногоОрганаПФР	=	НайтиПолноеНаименованиеКонтрагента(КонтрагентБелгосстрах);	
	
КонецПроцедуры

&НаКлиенте
Процедура РегистрационныйНомерПФРПриИзменении(Элемент)
	//++ НЕ УТ
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВвода(ЭтаФорма, "ИсторияРегистрацийВОрганеПФР", Организация);
	//-- НЕ УТ
	Возврат; // в УТ11 не используется
КонецПроцедуры

&НаКлиенте
Процедура ИсторияРегистрацийВОрганеПФРПериодПриИзменении(Элемент)
	//++ НЕ УТ
	ЗарплатаКадрыКлиент.ОрганизацииФормаЭлементаИсторияРегистрацийВОрганеПФРПериодПриИзменении(ЭтаФорма);
	//-- НЕ УТ
	Возврат; // в УТ11 не используется
КонецПроцедуры

&НаКлиенте
Процедура ИсторияРегистрацийВОрганеПФРПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//++ НЕ УТ
	ЗарплатаКадрыКлиент.ОрганизацииФормаЭлементаИсторияРегистрацийВОрганеПФРПериодНачалоВыбора(ЭтаФорма);
	//-- НЕ УТ
	Возврат             
КонецПроцедуры

&НаКлиенте
Процедура ИсторияРегистрацийВОрганеПФРПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	//++ НЕ УТ
	ЗарплатаКадрыКлиент.ОрганизацииФормаЭлементаИсторияРегистрацийВОрганеПФРПериодРегулирование(ЭтаФорма, Направление);
	//-- НЕ УТ
	Возврат
КонецПроцедуры

&НаКлиенте
Процедура ИсторияРегистрацийВОрганеПФРПериодАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	//++ НЕ УТ
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	//-- НЕ УТ
	Возврат
КонецПроцедуры

&НаКлиенте
Процедура ИсторияРегистрацийВОрганеПФРПериодОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	//++ НЕ УТ
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	//-- НЕ УТ
	Возврат
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	СохранитьИЗакрытьНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ИсторияРегистрацийВОрганеПФРИстория(Команда)
	//++ НЕ УТ
	РедактированиеПериодическихСведенийКлиент.ОткрытьИсторию("ИсторияРегистрацийВОрганеПФР", Организация, ЭтаФорма, ТолькоПросмотр);
	//-- НЕ УТ
	Возврат
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат, ДополнительныеПараметры) Экспорт 
	
	Отказ = Ложь;
	СохранитьДанныеНаСервере(Отказ);
	
	Если Не Отказ Тогда
		
		СтруктураПараметров = Новый Структура;
		//++ НЕ УТ
		СтруктураПараметров.Вставить("КодОрганаПФР", КодОрганаПФР);
		СтруктураПараметров.Вставить("НаименованиеТерриториальногоОрганаПФР", НаименованиеТерриториальногоОрганаПФР);
		СтруктураПараметров.Вставить("РегистрационныйНомерПФР", ИсторияРегистрацийВОрганеПФР.РегистрационныйНомерПФР);
		СтруктураПараметров.Вставить("ИПРегистрационныйНомерПФР", ИПРегистрационныйНомерПФР);
		
		// 4D:ERP для Беларуси, АлексейЧ, 15.11.2017 11:34:57 
		// Локализовать документ "Отражение зарплаты в финансовом учете", № 15826
		// {
		СтруктураПараметров.Вставить("КонтрагентБелгосстрах", КонтрагентБелгосстрах);
		СтруктураПараметров.Вставить("ДоговорБелгосстрах", ДоговорБелгосстрах);
		// }
		// 4D
		
		//-- НЕ УТ
		Закрыть(СтруктураПараметров);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиенте(ЗакрытьФорму = Истина) Экспорт 

	ДополнительныеПараметры = Новый Структура("ЗакрытьФорму", ЗакрытьФорму);
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрытьНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	СохранитьДанные(Ложь, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры) Экспорт 

	Если Не Отказ И Открыта() Тогда
		
		Модифицированность = Ложь;
		Если ДополнительныеПараметры.ЗакрытьФорму Тогда
			
			СтруктураПараметров = Новый Структура;
			//++ НЕ УТ
			СтруктураПараметров.Вставить("КодОрганаПФР", КодОрганаПФР);
			СтруктураПараметров.Вставить("НаименованиеТерриториальногоОрганаПФР", НаименованиеТерриториальногоОрганаПФР);
			СтруктураПараметров.Вставить("РегистрационныйНомерПФР", ИсторияРегистрацийВОрганеПФР.РегистрационныйНомерПФР);
			СтруктураПараметров.Вставить("ИПРегистрационныйНомерПФР", ИПРегистрационныйНомерПФР);
			
			// 4D:ERP для Беларуси, АлексейЧ, 15.11.2017 11:34:57 
			// Локализовать документ "Отражение зарплаты в финансовом учете", № 15826
			// {
			СтруктураПараметров.Вставить("КонтрагентБелгосстрах", КонтрагентБелгосстрах);
			СтруктураПараметров.Вставить("ДоговорБелгосстрах", ДоговорБелгосстрах);
			// }
			// 4D
			
			//-- НЕ УТ
			Закрыть(СтруктураПараметров);
			
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанные(Отказ, ОповещениеЗавершения = Неопределено) Экспорт
	
	Если Не Модифицированность Тогда
		Если ОповещениеЗавершения <> Неопределено Тогда 
			ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
		КонецЕсли;
		Возврат;
	КонецЕсли; 
		
	//++ НЕ УТ
	ЗапроситьРежимИзмененияРегистрацийПФР(ИсторияРегистрацийВОрганеПФР.Период, Отказ, ОповещениеЗавершения);
	//-- НЕ УТ
	
КонецПроцедуры

//++ НЕ УТ
&НаКлиенте
Процедура ЗапроситьРежимИзмененияРегистрацийПФР(ДатаИзменения, Отказ, ОповещениеЗавершения)
	
	ТекстКнопкиДа = НСтр("ru = 'Изменились реквизиты Белгосстрах'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru =  'При редактировании изменены реквизиты Белгосстрах.
						|Если исправлена прежняя запись (она была ошибочной), нажмите ""Исправлена ошибка"".
						|Если изменились сведения с %1, нажмите'") + " ""%2""",
			Формат(ДатаИзменения, "ДФ='д ММММ гггг ""г""'"),
			ТекстКнопкиДа);
			
	Оповещение = Новый ОписаниеОповещения("СохранитьДанныеЗавершение", ЭтотОбъект, ОповещениеЗавершения);
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтаФорма, "ИсторияРегистрацийВОрганеПФР", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
	
КонецПроцедуры
//-- НЕ УТ

&НаКлиенте
Процедура СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения) Экспорт  
	
	СохранитьДанныеНаСервере(Отказ);
	
	Если НЕ Отказ И ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьДанныеНаСервере(Отказ)
	
	Если Не ПроверитьЗаполнение() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
		
	РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФорме(ЭтаФорма, "ИсторияРегистрацийВОрганеПФР", Организация);
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	//++ НЕ УТ
	Если ЗначениеЗаполнено(ИсторияРегистрацийВОрганеПФР.РегистрационныйНомерПФР)
		И Не ЗначениеЗаполнено(ИсторияРегистрацийВОрганеПФР.Период) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Поле ""Действует с"" не заполнено.'"),,
				"ИсторияРегистрацийВОрганеПФР.Период",,
				Отказ);
	КонецЕсли;
	//-- НЕ УТ
	Возврат;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	//++ НЕ УТ
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтаФорма, ИмяРегистра, ВедущийОбъект);
	//-- НЕ УТ
	Возврат
КонецПроцедуры

// Функция для отображения полного наименования контрагента в форме реквизитов Белгосстрах
// 4D:ERP для Беларуси, АлексейЧ, 15.11.2017 11:34:57 
// Локализовать документ "Отражение зарплаты в финансовом учете", № 15826
&НаСервере
Функция НайтиПолноеНаименованиеКонтрагента(ИмяКонтрагента) Экспорт
	
	ПолноеНаименование	=	Справочники.Контрагенты.НайтиПоНаименованию(ИмяКонтрагента).ПолучитьОбъект().НаименованиеПолное;
	Возврат ПолноеНаименование;
	
КонецФункции

// 4D:ERP для Беларуси, Петр, 18.01.2018 13:05:45 
// Редактирование закладок "Регистрационные данные" и "Зарплата и кадры" спр. Организации, № 16293
// {
&НаКлиенте
Процедура РегистрационныйНомерПФРОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ПриОкончанииВВодаБелгосстрах(Текст, Элемент.Имя)
	
КонецПроцедуры

&НаКлиенте
Процедура ИПРегистрационныйНомерПФРОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	ПриОкончанииВВодаБелгосстрах(Текст, Элемент.Имя)
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОкончанииВВодаБелгосстрах(ТекстРедактирования, ИмяПоля)
	
	Перем ТекстСообщения;
	
	ОчиститьСообщения();
	
	Если НЕ ПустаяСтрока(ТекстРедактирования) 
		И НЕ РегламентированныеДанныеКлиентСервер.БелгосстрахСоответствуетТребованиям(ТекстРедактирования, 
			ТекстСообщения) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			,"Объект." + ИмяПоля,,);
		
	КонецЕсли;
	
КонецПроцедуры
// }
// 4D

#КонецОбласти
