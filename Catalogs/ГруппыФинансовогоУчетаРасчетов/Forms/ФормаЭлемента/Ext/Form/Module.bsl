
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет") Тогда
		Элементы.ГруппаОтражениеВРеглУчете.Видимость = Ложь;
	КонецЕсли;
	Элементы.ГруппаОтражениеВМеждународномУчете.Видимость = Ложь;
	//++ НЕ УТ
	ДоступныеСчетаУчетаРасчетов();
	//-- НЕ УТ
	//++ НЕ УТКА
	ПолучитьСостояниеУточненияСчетовМеждународногоУчета();
	//-- НЕ УТКА
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	//++ НЕ УТКА
	Если ИмяСобытия = "ИзмененыНастройкиУточненияСчетовУчета" Тогда
		ПолучитьСостояниеУточненияСчетовМеждународногоУчета();
	КонецЕсли;
	//-- НЕ УТКА
	Возврат; // в УТ11 обработчик пустой
	
КонецПроцедуры

&НаКлиенте
Процедура  ПослеЗаписи(ПараметрыЗаписи)

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	//++ НЕ УТ
	ПолучитьСостояниеНастройкиСчетовРеглУчетаПоОрганизациям();
	//-- НЕ УТ
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьСчетаРеглУчетаПоОрганизациям(Команда)
	
	//++ НЕ УТ
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОписаниеОповещения = новый ОписаниеОповещения("ОбработкаВопросЗаписиОбъекта", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Для продолжения необходимо записать объект. Записать?'");
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Записать'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки);
		Возврат;
	КонецЕсли;
	ОткрытьФормуНастройкиСчетовРеглУчетаПоОрганизациям();
	//-- НЕ УТ
	
	Возврат; // Чтобы в УТ был не пустой обработчик
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ НЕ УТ

&НаКлиенте
Процедура ОбработкаВопросЗаписиОбъекта(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если Не Записать() Тогда
			Возврат;
		КонецЕсли;
		ОткрытьФормуНастройкиСчетовРеглУчетаПоОрганизациям();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНастройкиСчетовРеглУчетаПоОрганизациям()
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ГруппаФинансовогоУчета", Объект.Ссылка);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеНастройкиСчетовРеглУчетаПоОрганизациям", ЭтотОбъект);
	
	ОткрытьФорму("РегистрСведений.ПорядокОтраженияРасчетовСПартнерами.Форма.ФормаНастройки", 
		ПараметрыФормы, ЭтаФорма, , , , ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеНастройкиСчетовРеглУчетаПоОрганизациям(Результат, ДополнительныеПараметры) Экспорт
	
	ПолучитьСостояниеНастройкиСчетовРеглУчетаПоОрганизациям();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСостояниеНастройкиСчетовРеглУчетаПоОрганизациям()
	
	ЗаголовокКоманды = НСтр("ru = 'Посмотреть настройки счетов учета по организациям'");
	
	Если ПравоДоступа("Редактирование", Метаданные.РегистрыСведений.ПорядокОтраженияРасчетовСПартнерами) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Количество
		|ИЗ
		|	РегистрСведений.ПорядокОтраженияРасчетовСПартнерами КАК ПорядокОтражения
		|ГДЕ
		|	ПорядокОтражения.ГруппаФинансовогоУчета = &ГруппаФинансовогоУчета";
		Запрос.УстановитьПараметр("ГруппаФинансовогоУчета", Объект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			ЗаголовокКоманды = НСтр("ru = 'Настроить счета учета по организациям'");
		Иначе
			ЗаголовокКоманды = НСтр("ru = 'Изменить настройки счетов учета по организациям'");
		КонецЕсли;
	КонецЕсли;
	
	Элементы.НастроитьСчетаРеглУчетаПоОрганизациям.Заголовок = ЗаголовокКоманды;
	
КонецПроцедуры

&НаСервере
Процедура ДоступныеСчетаУчетаРасчетов()
	
	Если Не ПравоДоступа("Просмотр",  Метаданные.ПланыСчетов.Хозрасчетный) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураСчетовУчета = Обработки.НастройкаОтраженияДокументовВРеглУчете.ДоступныеСчетаУчетаРасчетов();
	
	// Счета учета расчетов с поставщиками.
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета.СчетаРасчетовСПоставщиками)));
	Элементы.СчетУчетаРасчетовСПоставщиками.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	Элементы.СчетУчетаРасчетовСПоставщикамиТара.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	// Счета учета расчетов по авансам выданным.
	МассивПараметров.Очистить();
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета.СчетаРасчетовПоАвансаВыданным)));
	Элементы.СчетУчетаАвансовВыданных.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	Элементы.СчетУчетаРасчетовПоПретензиям.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	// Счета учета расчетов с клиентами.
	МассивПараметров.Очистить();
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета.СчетаРасчетовСКлиентами)));
	Элементы.СчетУчетаРасчетовСКлиентами.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	Элементы.СчетУчетаРасчетовСКлиентамиТара.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	// Счета учета расчетов по авансам полученным.
	МассивПараметров.Очистить();
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета.СчетаРасчетовПоАвансаПолученным)));
	Элементы.СчетУчетаАвансовПолученных.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	// Счета учета расчетов по комиссионному вознаграждению.
	МассивПараметров.Очистить();
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(СтруктураСчетовУчета.СчетаРасчетовПоКомиссии)));
	Элементы.СчетУчетаРасчетовПоВознаграждению.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);

КонецПроцедуры

//-- НЕ УТ

//++ НЕ УТКА
&НаСервере
Процедура ПолучитьСостояниеУточненияСчетовМеждународногоУчета()
	
	МеждународныйУчетОбщегоНазначения.УстановитьВидимостьНастроекМФУ(
		Объект.Ссылка,
		Элементы.ГруппаОтражениеВМеждународномУчете,
		Элементы.Найти("НастроитьУточнениеСчетов"));// у ограниченных пользователей элмент вырезается с формы
	
КонецПроцедуры
//-- НЕ УТКА

#КонецОбласти
