
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ДоговорыСЗаказчиками.Загрузить(Параметры.СписокДоговоров.Выгрузить());
	
	ДоговорСУчастникомГОЗ = Параметры.ДоговорСУчастникомГОЗ;
	СуммаДокумента = Параметры.СуммаДокумента;
	
	ДенежныеСредстваСервер.УстановитьПараметрыВыбораДоговораСЗаказчиком(Элементы.ДоговорыСЗаказчикамиДоговорСЗаказчиком);
	
	Элементы.ДоговорыСЗаказчикамиСумма.Видимость = Параметры.ВидимостьСуммы;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Не ПеренестиВДоговор И Модифицированность Тогда
		
		Отказ = Истина;
		
		ТекстВопроса = НСтр("ru = 'Отказаться от переноса изменений и перейти в договор?'");
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить("Отказаться", НСтр("ru = 'Отказаться от переноса'"));
		СписокКнопок.Добавить("Перенести", НСтр("ru = 'Перенести'"));
		СписокКнопок.Добавить("Отмена", НСтр("ru = 'Отмена'"));
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект), ТекстВопроса, СписокКнопок);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	
	Если Ответ = "Перенести" Тогда
		
		Отказ = Ложь;
		ПроверитьЗаполнениеСписка(Отказ);
		Если Не Отказ Тогда
			ПеренестиВДоговор = Истина;
			Закрыть(ДоговорыСЗаказчиками);
		КонецЕсли;
		
	ИначеЕсли Ответ = "Отказаться" Тогда
		
		ПеренестиВДоговор = Ложь;
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДоговорыСЗаказчикамиПроцентПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДоговорыСЗаказчиками.ТекущиеДанные;
	
	Если ТекущиеДанные.Процент > 0 И ДоговорыСЗаказчиками.Итог("Процент") = 100 Тогда
		
		Сумма = 0;
		Для Каждого ТекСтрока Из ДоговорыСЗаказчиками Цикл
			Если ТекСтрока.НомерСтроки <> ТекущиеДанные.НомерСтроки Тогда
				Сумма = Сумма + ТекСтрока.Сумма;
			КонецЕсли;
		КонецЦикла;
		ТекущиеДанные.Сумма = СуммаДокумента - Сумма;
	Иначе
		
		ТекущиеДанные.Сумма = СуммаДокумента * ТекущиеДанные.Процент / 100;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорыСЗаказчикамиСуммаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДоговорыСЗаказчиками.ТекущиеДанные;
	
	Если СуммаДокумента <> 0 Тогда
		
		Если ТекущиеДанные.Сумма <> 0 И ДоговорыСЗаказчиками.Итог("Сумма") = СуммаДокумента Тогда
			
			Процент = 0;
			Для Каждого ТекСтрока Из ДоговорыСЗаказчиками Цикл
				Если ТекСтрока.НомерСтроки <> ТекущиеДанные.НомерСтроки Тогда
					Процент = Процент + ТекСтрока.Процент;
				КонецЕсли;
			КонецЦикла;
			
			ТекущиеДанные.Процент = 100 - Процент;
		Иначе
			ТекущиеДанные.Процент = ТекущиеДанные.Сумма * 100 / СуммаДокумента;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДоговор(Команда)
	
	Отказ = Ложь;
	ПроверитьЗаполнениеСписка(Отказ);
	Если Не Отказ Тогда
		ПеренестиВДоговор = Истина;
		Закрыть(ДоговорыСЗаказчиками);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроверитьЗаполнениеСписка(Отказ)
	
	Если ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	ИтогПроцент = 0; ИтогСумма = 0;
	
	ШаблонАдресаОшибки = НСтр("ru='в строке %НомерСтроки% списка ""Договоры с заказчиками""'");
	
	Для каждого СтрокаДоговора Из ДоговорыСЗаказчиками Цикл
		
		НомерСтроки = ДоговорыСЗаказчиками.Индекс(СтрокаДоговора) + 1;
		АдресОшибки = СтрЗаменить(ШаблонАдресаОшибки, "%НомерСтроки%", НомерСтроки);
		
		Если Не ЗначениеЗаполнено(СтрокаДоговора.ДоговорСЗаказчиком) Тогда
			ТекстОшибки = НСтр("ru='Не заполнена колонка ""Договор с заказчиком""'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки + " " + АдресОшибки,
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ДоговорыСЗаказчиками", НомерСтроки, "ДоговорСЗаказчиком"),
				,
				Отказ);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаДоговора.Процент) Тогда
			ТекстОшибки = НСтр("ru='Не заполнена колонка ""% (процент)""'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки + " " + АдресОшибки,
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ДоговорыСЗаказчиками", НомерСтроки, "Процент"),
				,
				Отказ);
		КонецЕсли;
	КонецЦикла;
	
	ИтогПроцент = ДоговорыСЗаказчиками.Итог("Процент");
	Если ДоговорСУчастникомГОЗ Тогда
		Если ИтогПроцент <> 100 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='Процент платежей по всем договорам должен быть равен ""100%""'"),
				,
				"ДоговорыСЗаказчиками[0].Процент",
				,
				Отказ);
		КонецЕсли;
	Иначе
		Если ИтогПроцент > 100 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='Процент платежей по всем договорам не должен превышать ""100%""'"),
				,
				"ДоговорыСЗаказчиками[0].Процент",
				,
				Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти