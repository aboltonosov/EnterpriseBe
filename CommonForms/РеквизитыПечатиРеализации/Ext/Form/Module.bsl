// 4D:ERP для Беларуси
// {
// Форма изменена
// }
// 4D

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	МассивЭлементов = Новый Массив();
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры,,"ЗакрыватьПриВыборе,ЗакрыватьПриЗакрытииВладельца,КлючНазначенияИспользования, ТаблицаОснованийДляПечати");
	
	Если ТолькоПросмотр Тогда
		
		СтруктураПараметров = ИзменяемыеРеквизиты(Параметры);
		МассивЭлементов = Новый Массив();
		
		Для Каждого ЭлементСтруктуры из СтруктураПараметров Цикл
			МассивЭлементов.Добавить(ЭлементСтруктуры.Ключ);
		КонецЦикла;
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "ТолькоПросмотр", Истина);
		
	КонецЕсли;
	
	Если Параметры.НеПоказыватьРеквизиты <> Неопределено Тогда
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, Параметры.НеПоказыватьРеквизиты, "Видимость", Ложь);
	КонецЕсли;
	
	// 4D:ERP для Беларуси, Дмитрий, 07.12.2014 11:33:53 
	// Подсистемы "Стандартные подсистемы" и "НСИ", №7790
	// {
	Если ЗначениеЗаполнено(Параметры.ТаблицаОснованийДляПечати) Тогда 
		ТаблицаОснованийДляПечати.Загрузить(Параметры.ТаблицаОснованийДляПечати.Выгрузить());
	КонецЕсли;
		
	Грузополучатель = Параметры.Контрагент;
	
	Если ЗначениеЗаполнено(Параметры.Склад) И ЗначениеЗаполнено(Параметры.Менеджер) И НЕ ЗначениеЗаполнено(Параметры.Отпустил) Тогда
		СтруктураОтветственного = ПродажиСервер.ПолучитьОтветственногоПоСкладу(Параметры.Склад, Параметры.Менеджер);
		Если СтруктураОтветственного <> Неопределено Тогда
			Отпустил = СтруктураОтветственного.Ответственный;
			ОтпустилДолжность = СтруктураОтветственного.ОтветственныйДолжность;
		КонецЕсли;
	КонецЕсли;	
	
	ЗаполнитьСписокВыбораОснование();
	ПродажиСервер.ЗаполнитьСписокВыбораАдреса(Элементы.АдресДоставки, Партнер, Истина);
	ПродажиСервер.ЗаполнитьСписокВыбораАдреса(Элементы.АдресДоставки, Грузополучатель, Ложь);
	// }
	// 4D
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЗакрытьФормуПринудительно Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность И Не СохранитьПараметры Тогда
		
		СписокКнопок = Новый СписокЗначений();
		СписокКнопок.Добавить("Закрыть", НСтр("ru = 'Закрыть'"));
		СписокКнопок.Добавить("НеЗакрывать", НСтр("ru = 'Не закрывать'"));
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПередЗакрытиемВопросЗавершение", ЭтотОбъект),
			НСтр("ru = 'Реквизиты печати реализации товаров и услуг были изменены. Закрыть форму без сохранения реквизитов?'"),
			СписокКнопок);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемВопросЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = "НеЗакрывать" Тогда
		СохранитьПараметры = Ложь;
	ИначеЕсли ОтветНаВопрос = "Закрыть" Тогда
		ЗакрытьФормуПринудительно = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если СохранитьПараметры Тогда
		
		СтруктураПараметров = ИзменяемыеРеквизиты(ЭтаФорма);
		ОповеститьОВыборе(СтруктураПараметров);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОснованиеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ОбъектОснование) Тогда
		ОснованиеИзменено = (СокрЛП(Основание) <> СокрЛП(ОбъектОснование));
	Иначе
		ОснованиеИзменено = Ложь;
	КонецЕсли;
	ОбъектОснование = Основание;
	
	ВыбранныеОснования = ТаблицаОснованийДляПечати.НайтиСтроки(Новый Структура("Основание", СокрЛП(Основание)));
	Если ВыбранныеОснования.Количество() > 0 Тогда
		ВыбранноеОснование = ВыбранныеОснования.Получить(0);
		ОснованиеНомер = ВыбранноеОснование.ОснованиеНомер;
		ОснованиеДата  = ВыбранноеОснование.ОснованиеДата;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеНомерПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ОбъектОснованиеНомер)Тогда
		ОснованиеИзменено = (СокрЛП(ОснованиеНомер) <> СокрЛП(ОбъектОснованиеНомер));
	Иначе
		ОснованиеИзменено = Ложь;
	КонецЕсли;
	ОбъектОснованиеНомер = ОснованиеНомер;
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеДатаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ОбъектОснованиеДата) Тогда
		ОснованиеИзменено = (СокрЛП(ОснованиеДата) <> СокрЛП(ОбъектОснованиеДата));
	Иначе
		ОснованиеИзменено = Ложь;
	КонецЕсли;
	ОбъектОснованиеДата = ОснованиеДата;
КонецПроцедуры

&НаКлиенте
Процедура ГрузоотправительПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Грузоотправитель) Тогда
		БанковскийСчетГрузоотправителя = ПолучитьБанковскийСчетКонтрагентаПоУмолчаниюСервер(Грузоотправитель);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Грузополучатель) Тогда
		БанковскийСчетГрузополучателя = ПолучитьБанковскийСчетКонтрагентаПоУмолчаниюСервер(Грузополучатель);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоверенностьНомерПриИзменении(Элемент)
	
	Если ПустаяСтрока(ДоверенностьВыдана) Тогда
		ДоверенностьВыдана = Грузополучатель;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоверенностьДатаПриИзменении(Элемент)
	
	Если ПустаяСтрока(ДоверенностьВыдана) Тогда
		ДоверенностьВыдана = Грузополучатель;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоверенностьЛицоПриИзменении(Элемент)
	
	Если ПустаяСтрока(Принял) Тогда
		Принял = ДоверенностьЛицо;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если Не ТолькоПросмотр Тогда
		СохранитьПараметры = Истина;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаКлиентеНаСервереБезКонтекста
Функция ИзменяемыеРеквизиты(Источник)
	
	// 4D:ERP для Беларуси, Дмитрий, 07.12.2014 11:53:47 
	// Подсистемы "Стандартные подсистемы" и "НСИ", №7790
	// {
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("БанковскийСчетОрганизации",      Источник.БанковскийСчетОрганизации);
	СтруктураПараметров.Вставить("АдресДоставки",                  Источник.АдресДоставки);
	СтруктураПараметров.Вставить("Грузоотправитель",               Источник.Грузоотправитель);
	СтруктураПараметров.Вставить("Грузополучатель",                Источник.Грузополучатель);
	СтруктураПараметров.Вставить("ДоверенностьВыдана",             Источник.ДоверенностьВыдана);
	СтруктураПараметров.Вставить("ДоверенностьДата",               Источник.ДоверенностьДата);
	СтруктураПараметров.Вставить("ДоверенностьЛицо",               Источник.ДоверенностьЛицо);
	СтруктураПараметров.Вставить("ДоверенностьНомер",              Источник.ДоверенностьНомер);
	СтруктураПараметров.Вставить("Руководитель",                   Источник.Руководитель);
	СтруктураПараметров.Вставить("Отпустил",                       Источник.Отпустил);
	СтруктураПараметров.Вставить("ОтпустилДолжность",              Источник.ОтпустилДолжность);
	СтруктураПараметров.Вставить("Принял",              		   Источник.Принял);
	СтруктураПараметров.Вставить("НомерИсходящегоДокумента",       Источник.НомерИсходящегоДокумента);
	СтруктураПараметров.Вставить("СерияИсходящегоДокумента",       Источник.СерияИсходящегоДокумента);
	СтруктураПараметров.Вставить("ПереданыДокументы",       	   Источник.ПереданыДокументы);
	СтруктураПараметров.Вставить("Основание",                      Источник.Основание);
	СтруктураПараметров.Вставить("ОснованиеДата",                  Источник.ОснованиеДата);
	СтруктураПараметров.Вставить("ОснованиеНомер",                 Источник.ОснованиеНомер);
	СтруктураПараметров.Вставить("ТипБСО",                 		   Источник.ТипБСО);
	// }
	// 4D
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьБанковскийСчетКонтрагентаПоУмолчаниюСервер(Контрагент)
	
	Возврат ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетКонтрагентаПоУмолчанию(Контрагент);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокВыбораОснование()
	
	Для Каждого СтрокаТаблицы Из ТаблицаОснованийДляПечати Цикл 
		Элементы.Основание.СписокВыбора.Добавить(СтрокаТаблицы.Основание);
		Если ЗначениеЗаполнено(СтрокаТаблицы.ОснованиеНомер) Тогда
			Элементы.ОснованиеНомер.СписокВыбора.Добавить(СтрокаТаблицы.ОснованиеНомер);
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаТаблицы.ОснованиеДата) Тогда
			Элементы.ОснованиеДата.СписокВыбора.Добавить(СтрокаТаблицы.ОснованиеДата,Формат(СтрокаТаблицы.ОснованиеДата,"ДЛФ=D"));
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// 4D:ERP для Беларуси, Дмитрий, 07.12.2014 11:53:47 
// Подсистемы "Стандартные подсистемы" и "НСИ", №7790
// {
&НаКлиенте
Процедура НомерИсходящегоДокументаПриИзменении(Элемент)
	СформироватьПереданыеДокументы();
КонецПроцедуры

&НаКлиенте
Процедура ТипБСОПриИзменении(Элемент)
	СформироватьПереданыеДокументы();
КонецПроцедуры

&НаКлиенте
Процедура СерияИсходящегоДокументаПриИзменении(Элемент)
	СформироватьПереданыеДокументы();
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПереданыеДокументы()
	
	Если ЗначениеЗаполнено(СерияИсходящегоДокумента) И ЗначениеЗаполнено(НомерИсходящегоДокумента) И ЗначениеЗаполнено(ТипБСО) Тогда
		ПереданыДокументы = СокрЛП(ТипБСО) + " " + СокрЛП(СерияИсходящегоДокумента) + " №" + СокрЛП(НомерИсходящегоДокумента);
	КонецЕсли;	
		
КонецПроцедуры
// }
// 4D

#КонецОбласти

#КонецОбласти
