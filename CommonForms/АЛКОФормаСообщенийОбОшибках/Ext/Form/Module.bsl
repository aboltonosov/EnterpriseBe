
////////////////////////////////////////////////////////////////////////////////
//
// Параметры формы:
//
//	 	СохраненныйОтчет					- Документ.РегламентированныйОтчет.Ссылка - документ отчета, 
//											ошибки которого показываются.
// 		ПредставлениеОшибок					- ТабличныйДокумент - Сформированный табличный документ с ошибками.
// 		НазваниеДекларации					- Строка - Представление отчета.
//		АдресХранилищаПредставленияОшибок	- Адрес внутреннего хранилища, в котором сохранен табличный документ
//											ПредставлениеОшибок. Позволяет экономить память на Клиенте.
//
// Данные представления ошибок передаются либо через свойство
// ПредставлениеОшибок, либо через АдресХранилищаПредставленияОшибок.
//  
////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем Макет;
	Перем НазваниеДекларации;
	Перем АдресХранилищаПредставленияОшибок;
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	НужноОбнулитьФорму = Истина;
	
	Параметры.Свойство("СохраненныйОтчет", Отчет);
	Параметры.Свойство("ПредставлениеОшибок", Макет);
	Параметры.Свойство("НазваниеДекларации", НазваниеДекларации);
	Параметры.Свойство("АдресХранилищаПредставленияОшибок", АдресХранилищаПредставленияОшибок);
	
	// Данные представления ошибок передаются либо через свойство
	// ПредставлениеОшибок, либо через АдресХранилищаПредставленияОшибок.
	Если ЭтоАдресВременногоХранилища(АдресХранилищаПредставленияОшибок) Тогда
	
		СтруктураПредставленияОшибок = ПолучитьИзВременногоХранилища(АдресХранилищаПредставленияОшибок);
		
		Если ТипЗнч(СтруктураПредставленияОшибок) = Тип("Структура") Тогда
			
			МакетИзХранилища = Неопределено;
			СтруктураПредставленияОшибок.Свойство("ПредставлениеОшибок", МакетИзХранилища);
			
			Если МакетИзХранилища = Неопределено Тогда
			    СтруктураПредставленияОшибок.Свойство("ПредставлениеСообщенийДляСведения", МакетИзХранилища);			
			КонецЕсли; 
		
		КонецЕсли;
				
		УдалитьИзВременногоХранилища(АдресХранилищаПредставленияОшибок);
	
	КонецЕсли;
	
	Если (НЕ МакетИзХранилища = Неопределено) и ( ТипЗнч(МакетИзХранилища) = Тип("ТабличныйДокумент") ) Тогда
	
		Макет = МакетИзХранилища;
	
	КонецЕсли; 
	
	Ошибки.Вывести(Макет);
	
	Если ЗначениеЗаполнено(НазваниеДекларации) Тогда
		Заголовок = "Результаты проверки выгрузки" + " (" + НазваниеДекларации + ")";
	КонецЕсли;
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Отчет, "ДатаНачала, ДатаОкончания, Организация, ВыбраннаяФорма");
	
	мДатаНачалаПериодаОтчета = Реквизиты.ДатаНачала;
	мДатаКонцаПериодаОтчета = Реквизиты.ДатаОкончания;
	Организация = Реквизиты.Организация;
	мВыбраннаяФорма = Реквизиты.ВыбраннаяФорма;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВладелецФормы = Неопределено Тогда
	    Отказ = Истина;
		ТекстПредупреждения = НСтр("ru='Данная форма вспомогательная, предназначена для 
										|показа ошибок, обнаруженных при проверке
										|из форм регламентированных отчетов!'");
		ПоказатьПредупреждение(, ТекстПредупреждения, , НСтр("ru='Форма показа ошибок.'"));
		Возврат;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОшибкиВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Если Область.ТипОбласти <> ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.Гиперссылка = Истина Тогда 
		Текст = Область.Текст;
		Если СтрНайти(НРег(Текст), "http") > 0 Тогда 
			СтандартнаяОбработка = Ложь;
			ПерейтиПоНавигационнойСсылке(Текст);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОшибкиОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		ОбработкаРасшифровкиСтруктуры(Расшифровка, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработкаРасшифровкиСтруктуры(Расшифровка, СтандартнаяОбработка)
	
	Перем ИмяЯчейки;
	Перем Раздел;
	Перем Страница;
	
	СтандартнаяОбработка = Ложь;
	
	Расшифровка.Свойство("Показатель", ИмяЯчейки);
	Расшифровка.Свойство("Раздел", Раздел);
	Расшифровка.Свойство("Страница", Страница);
	
	Ячейка = Новый Структура("Раздел,Страница,ИмяЯчейки", Раздел, Страница, ИмяЯчейки);
	
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("мСохраненныйДок", Отчет);
	ПараметрыФормы.Вставить("мДатаНачалаПериодаОтчета", мДатаНачалаПериодаОтчета);
	ПараметрыФормы.Вставить("мДатаКонцаПериодаОтчета", мДатаКонцаПериодаОтчета);
	ПараметрыФормы.Вставить("Организация", Организация);
	ПараметрыФормы.Вставить("мВыбраннаяФорма", мВыбраннаяФорма);
	ПараметрыФормы.Вставить("ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417", Ложь);
	
	СтрФормаРеглОтчета = РегламентированнаяОтчетностьВызовСервера.ПолучитьСсылкуНаФормуРеглОтчета(Отчет, ПараметрыФормы);
	Если СтрЧислоВхождений(СтрФормаРеглОтчета, "ОтчетМенеджер") > 0 Тогда
		
		СтрФормаРеглОтчета = СтрЗаменить(СтрФормаРеглОтчета, "ОтчетМенеджер.", "");
		СтрФормаРеглОтчета = "Отчет." + СтрФормаРеглОтчета;
		
	ИначеЕсли СтрЧислоВхождений(СтрФормаРеглОтчета, "ВнешнийОтчетОбъект") > 0 Тогда
		
		СтрФормаРеглОтчета = СтрЗаменить(СтрФормаРеглОтчета, "ВнешнийОтчетОбъект.", "");
		СтрФормаРеглОтчета = "ВнешнийОтчет." + СтрФормаРеглОтчета;
		
	КонецЕсли;
	
	ФормаРеглОтчета = ОткрытьФорму(СтрФормаРеглОтчета, ПараметрыФормы, , ПараметрыФормы.мСохраненныйДок);
	
	ФормаРеглОтчета.Активизировать();		
	ФормаРеглОтчета.АктивизироватьЯчейку(Ячейка);
	
КонецПроцедуры


#КонецОбласти



