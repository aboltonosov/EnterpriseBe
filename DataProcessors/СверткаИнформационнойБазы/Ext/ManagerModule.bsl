#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОграниченияСвертки") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОграниченияСвертки",
			НСтр("ru='Ограничения свертки'"),
			СформироватьТабличныйДокументОграниченияСвертки(
				МассивОбъектов,
				ОбъектыПечати,
				ПараметрыПечати));
	КонецЕсли;
КонецПроцедуры

Функция СформироватьТабличныйДокументОграниченияСвертки(МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	УстановитьПривилегированныйРежим(Истина);

	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОграниченияСвертки";
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	
	ДатаСверткиИБ = МассивОбъектов[0];
	
	СтруктураИсходныеДанные = ПолучитьИсходныеДанныеОбОграниченияхСвертки(ДатаСверткиИБ);
	ВозможныеОграничения = СтруктураИсходныеДанные.ТаблицаОграничений;
	ЕстьОграничения = СтруктураИсходныеДанные.ЕстьОграничения;
	МенеджерВТ = СтруктураИсходныеДанные.МенеджерВТ;
	
	Макет = ПолучитьМакет("МакетОграниченияСвертки");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(ОбластьЗаголовок);
	
	//Это для страховки. Если ограничений нет, гиперссылка с отчетом не видна на форме.
	Если НЕ ЕстьОграничения Тогда
		Область = Макет.ПолучитьОбласть("НетОграничений");
		ТабДок.Вывести(Область);
		УстановитьПривилегированныйРежим(Ложь);
		Возврат ТабДок;
	КонецЕсли;
	//Вывод списка ограничений с рекомендациями
	Область = Макет.ПолучитьОбласть("Шапка_ОбщийСписок");
	ТабДок.Вывести(Область);
	Для Каждого СтрокаОграничения ИЗ ВозможныеОграничения Цикл
		Если НЕ СтрокаОграничения.Обнаружено Тогда
			Продолжить;
		КонецЕсли;
		Область = Макет.ПолучитьОбласть("Строка_ОбщийСписок");
		Область.Параметры.Заполнить(СтрокаОграничения);
		ТабДок.Вывести(Область);
	КонецЦикла;
	//Вывод детальных данных по ограничениям
	Для Каждого СтрокаОграничения ИЗ ВозможныеОграничения Цикл
		Если НЕ СтрокаОграничения.Обнаружено Тогда
			Продолжить;
		КонецЕсли;
		Область = Макет.ПолучитьОбласть("Заголовок_Ограничение");
		Область.Параметры.Заполнить(СтрокаОграничения);
		ТабДок.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Шапка_"+СтрокаОграничения.Ограничение);
		ТабДок.Вывести(Область);
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = "ВЫБРАТЬ * ИЗ " + СтрокаОграничения.Ограничение;
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Область = Макет.ПолучитьОбласть("Строка_"+СтрокаОграничения.Ограничение);
			Область.Параметры.Заполнить(Выборка);
			ТабДок.Вывести(Область);
		КонецЦикла;
	КонецЦикла;

	УстановитьПривилегированныйРежим(Ложь);

	Возврат ТабДок;

КонецФункции

#КонецОбласти

#Область ДанныеОбОграниченияхСверткиДляПечатиИДляУправленияВидимостьюРеквизитовФормы

Функция ПолучитьИсходныеДанныеОбОграниченияхСвертки(ДатаСверткиИБ, ДляОтчета = Истина) Экспорт
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	//Запрос на получение исходных данных
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ %НеДляОтчета%
	|ДокументРеализации КАК Документ
	|ПОМЕСТИТЬ НеподтвержденныйНДС
	|ИЗ РегистрСведений.НДССостояниеРеализации0
	|ГДЕ ДатаПодтверждения > &ДатаОст
	|;
	|/////////////////////////////////////
	|ВЫБРАТЬ %НеДляОтчета%
	|ТабРегОстатки.ОрганизацияВладелец КАК Организация,
	|ТабРегОстатки.Склад КАК Склад,
	|ТабРегОбороты.Регистратор.Организация КАК Покупатель
	|ПОМЕСТИТЬ ПередачаТоваров
	|ИЗ РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(&ДатаОст) КАК ТабРегОстатки
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|	РегистрНакопления.ТоварыОрганизацийКПередаче.Обороты(,&ДатаОст,Регистратор) КАК ТабРегОбороты
	|	ПО ТабРегОстатки.ОрганизацияВладелец = ТабРегОбороты.ОрганизацияВладелец 
	|	И ТабРегОстатки.Склад = ТабРегОбороты.Склад 
	|	И ТабРегОстатки.Номенклатура = ТабРегОбороты.Номенклатура 
	|	И ТабРегОстатки.Характеристика = ТабРегОбороты.Характеристика 
	|	И ТабРегОстатки.ВидЗапасовПродавца = ТабРегОбороты.ВидЗапасовПродавца 
	|ГДЕ ТабРегОстатки.КоличествоОстаток > 0 И ТабРегОбороты.КоличествоПриход > 0
	|СГРУППИРОВАТЬ ПО
	|ТабРегОстатки.ОрганизацияВладелец, 
	|ТабРегОстатки.Склад, 
	|ТабРегОбороты.Регистратор.Организация 
	|;
	|/////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ %НеДляОтчета%
	|ВидЗапасов.Комитент КАК Комитент
	|ПОМЕСТИТЬ ОтчетКомитенту
	|ИЗ РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Остатки(&ДатаОст)
	|ГДЕ КоличествоОстаток > 0
	|;
	|/////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ %НеДляОтчета%
	|ДокументОснование КАК Документ
	|ПОМЕСТИТЬ ИзлишкиНедостачи
	|ИЗ РегистрНакопления.ТоварыКОформлениюИзлишковНедостач.Остатки(&ДатаОст)
	|ГДЕ КОформлениюАктовОстаток > 0 ИЛИ КОформлениюОрдеровОстаток > 0
	|;
	|/////////////////////////////////////
	|ВЫБРАТЬ %НеДляОтчета%
	|Организация КАК Организация,
	|Касса КАК Касса
	|ПОМЕСТИТЬ НаличныеКПоступлению
	|ИЗ РегистрНакопления.ДенежныеСредстваВПути.Остатки(&ДатаОст,
	|	ВидПереводаДенежныхСредств В (
	|		ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеремещениеВДругуюКассу),
	|		ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияИзБанка)
	|	))
	|ГДЕ СуммаОстаток > 0
	|СГРУППИРОВАТЬ ПО Организация, Касса
	|;
	|/////////////////////////////////////
	|ВЫБРАТЬ %НеДляОтчета%
	|ТабРегОстатки.Организация КАК Организация,
	|ТабРегОстатки.Поставщик КАК Поставщик,
	|ТабРегОбороты.Регистратор КАК Документ
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ РегистрНакопления.ТоварыОрганизацийКОформлению.Остатки(&ДатаОст) КАК ТабРегОстатки
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|	РегистрНакопления.ТоварыОрганизацийКОформлению.Обороты(,&ДатаОст,Регистратор) КАК ТабРегОбороты
	|	ПО ТабРегОстатки.Организация = ТабРегОбороты.Организация 
	|	И ТабРегОстатки.Поставщик = ТабРегОбороты.Поставщик 
	|	И ТабРегОстатки.Склад = ТабРегОбороты.Склад 
	|	И ТабРегОстатки.Номенклатура = ТабРегОбороты.Номенклатура 
	|	И ТабРегОстатки.Характеристика = ТабРегОбороты.Характеристика 
	|	И ТабРегОстатки.ВидЗапасов = ТабРегОбороты.ВидЗапасов 
	|ГДЕ ТабРегОстатки.КоличествоОстаток > 0 И ТабРегОбороты.КоличествоПриход > 0
	|СГРУППИРОВАТЬ ПО
	|ТабРегОстатки.Организация, 
	|ТабРегОстатки.Поставщик, 
	|ТабРегОбороты.Регистратор
	|;
	|/////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ %НеДляОтчета%
	|Договор
	|ПОМЕСТИТЬ РасчетыПоДоговорамКредитов
	|ИЗ РегистрНакопления.РасчетыПоДоговорамКредитовИДепозитов.Остатки(&ДатаОст)
	|ГДЕ СуммаВВалютеОстаток <> 0
	|;
	|/////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ %НеДляОтчета%
	|Организация,
	|Подразделение КАК Склад
	|ПОМЕСТИТЬ ПроизводственныеЗатраты
	|ИЗ РегистрНакопления.МатериалыИРаботыВПроизводстве.Остатки(&ДатаОст)
	|ГДЕ КоличествоОстаток <> 0
	|";
	Если ДляОтчета Тогда
		//Нужны все данные
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%НеДляОтчета%", "");
	Иначе
		//Нужны данные только о том, какие ограничения есть
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%НеДляОтчета%", "ПЕРВЫЕ 1");
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаОст", КонецДня(ДатаСверткиИБ));
	Запрос.Выполнить();
	
	//Заполнение списка ограничений
	ВозможныеОграничения = Новый ТаблицаЗначений;
	ВозможныеОграничения.Колонки.Добавить("Ограничение");
	ВозможныеОграничения.Колонки.Добавить("Содержание");
	ВозможныеОграничения.Колонки.Добавить("Рекомендация");
	ВозможныеОграничения.Колонки.Добавить("Обнаружено");
	
	ДобавитьВозможноеОграничение(ВозможныеОграничения,"НеподтвержденныйНДС",
								НСтр("ru='Неподтвержденный НДС по ставке 0%'"),
								НСтр("ru='Данные будут потеряны. Не рекомендуется выполнять свертку'"));

	ДобавитьВозможноеОграничение(ВозможныеОграничения,"ТоварыКОформлению",
								НСтр("ru='Поступившие импортные товары, на которые не оформлена ГТД'"),
								НСтр("ru='Данные будут потеряны. Не рекомендуется выполнять свертку'"));

	ДобавитьВозможноеОграничение(ВозможныеОграничения,"ПроизводственныеЗатраты",
								НСтр("ru='Производственные затраты'"),
								НСтр("ru='Данные будут потеряны. Не рекомендуется выполнять свертку'"));
	
	ДобавитьВозможноеОграничение(ВозможныеОграничения,"РасчетыПоДоговорамКредитов",
								НСтр("ru='Расчеты по договорам кредитов и депозитов'"),
								НСтр("ru='Данные будут потеряны. Не рекомендуется выполнять свертку'"));
								
	ДобавитьВозможноеОграничение(ВозможныеОграничения,"ИзлишкиНедостачи",
								НСтр("ru='Не оформлены излишки и недостачи товаров'"),
								НСтр("ru='Перед сверткой оформить излишки и недостачи'"));

	ДобавитьВозможноеОграничение(ВозможныеОграничения,"ОтчетКомитенту",
								НСтр("ru='Не оформлены отчеты комитенту о продажах'"),
								НСтр("ru='Перед сверткой оформить отчеты комитенту'"));

	ДобавитьВозможноеОграничение(ВозможныеОграничения,"ПередачаТоваров",
								НСтр("ru='Не оформлена передача товаров между организациями'"),
								НСтр("ru='Перед сверткой оформить передачу товаров между организациями'"));

	ДобавитьВозможноеОграничение(ВозможныеОграничения,"НаличныеКПоступлению",
								НСтр("ru='Не оформлено поступление наличных денежных средств'"),
								НСтр("ru='Перед сверткой оформить поступление наличных денежных средств'"));
	
	ЕстьОграничения = Ложь;
	Для Каждого СтрокаОграничения ИЗ ВозможныеОграничения Цикл
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 * ИЗ "+СтрокаОграничения.Ограничение;
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			СтрокаОграничения.Обнаружено = Истина;
			ЕстьОграничения = Истина;
			Если НЕ ДляОтчета Тогда
				Прервать;
			КонецЕсли;
		Иначе
			СтрокаОграничения.Обнаружено = Ложь;
		КонецЕсли;
	КонецЦикла;
	Если ДляОтчета Тогда
		Возврат Новый Структура("ЕстьОграничения, ТаблицаОграничений, МенеджерВТ", ЕстьОграничения, ВозможныеОграничения, МенеджерВТ);
	Иначе
		Возврат Новый Структура("ЕстьОграничения", ЕстьОграничения);
	КонецЕсли;
	
КонецФункции

Процедура ДобавитьВозможноеОграничение(ВозможныеОграничения,Ограничение, Содержание, Рекомендация)
	СтрокаОграничения = ВозможныеОграничения.Добавить();
	СтрокаОграничения.Ограничение = Ограничение;
	СтрокаОграничения.Содержание = Содержание;
	СтрокаОграничения.Рекомендация = Рекомендация;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
