#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выполняет загрузку модели международного учета из файла
//
// Параметры:
// 	Параметры - Структура - Содержит адрес данных для загрузки
// 	АдресХранилища - Строка - Адрес во временном хранилище для помещения результата
//
Процедура ЗагрузитьМодельУчета(Параметры, АдресХранилища) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Обработка = Обработки.УниверсальныйОбменДаннымиXML.Создать();	
	
	ИмяВременногоФайлаДанных = ПолучитьИмяВременногоФайла("xml");
	Параметры.ДвоичныеДанные.Записать(ИмяВременногоФайлаДанных);
	
	Обработка.ИмяФайлаОбмена                        = ИмяВременногоФайлаДанных;
	Обработка.РежимОбмена                           = "Загрузка";
	Обработка.ЗапоминатьЗагруженныеОбъекты          = Ложь;
	Обработка.ВыводВПротоколСообщенийОбОшибках      = Истина;
	
	ИмяВременногоФайлаПротоколаОбмена = ПолучитьИмяВременногоФайла("txt");
	Обработка.ВыводВПротоколИнформационныхСообщений = Ложь;
	Обработка.ИмяФайлаПротоколаОбмена               = ИмяВременногоФайлаПротоколаОбмена;
	
	Обработка.ЗагружатьДанныеВРежимеОбмена               			= Истина;
	Обработка.ОбъектыПоСсылкеЗагружатьБезПометкиУдаления 			= Истина;
	Обработка.ОптимизированнаяЗаписьОбъектов             			= Истина;
	Обработка.ЗапоминатьЗагруженныеОбъекты               			= Истина;
	Обработка.НеВыводитьНикакихИнформационныхСообщенийПользователю	= Истина;
	Обработка.ВыводВОкноСообщенийИнформационныхСообщений 			= Ложь;

	УстановитьПривилегированныйРежим(Истина);
	
	РаботаВозможна = Обработка.ВыполнитьДействияПередЧтениемДанных();
	Если РаботаВозможна Тогда
		УстановитьПараметрКД(Обработка,"ВыбранныеВидыБюджета",Параметры.ВыбранныеВидыБюджета);
		УстановитьПараметрКД(Обработка,"ВыбранныеЭтапыПодготовкиБюджета",Параметры.ВыбранныеЭтапыПодготовкиБюджета);
		УстановитьПараметрКД(Обработка,"ЗаменаЗначенийАналитик",Параметры.ЗаменаЗначенийАналитик);
		УстановитьПараметрКД(Обработка,"ЗагружаемыеНпп",Параметры.ЗагружаемыеНпп);
		УстановитьПараметрКД(Обработка,"ПараметрыОбновленияНпп",Параметры.ПараметрыОбновленияНпп);
		Обработка.ПроизвестиЧтениеДанных();
		Обработка.ВыполнитьДействияПослеЗавершенияЧтенияДанных(); 
	КонецЕсли;	

	УстановитьПривилегированныйРежим(Ложь);
	
	ПротоколОбмена = Новый ТекстовыйДокумент;
	ПротоколОбмена.Прочитать(ИмяВременногоФайлаПротоколаОбмена);
	
	УдалитьФайлы(ИмяВременногоФайлаПротоколаОбмена);
	УдалитьФайлы(ИмяВременногоФайлаДанных);
	
	Результат = Новый Структура("ЗагрузкаВыполнена", НЕ Обработка.ФлагОшибки);
	Результат.Вставить("ПротоколОбмена", ПротоколОбмена.ПолучитьТекст());
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

// Выполняет выгрузку модели международного учета в файла
//
// Параметры:
// 	Параметры - Структура - Пустая структура. Для совместимости с механизмом выполнения длительных операций
// 	АдресХранилища - Строка - Адрес во временном хранилище для помещения результата
//
Процедура ВыгрузитьМодельУчета(Параметры, АдресХранилища) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЭтоКА = ПолучитьФункциональнуюОпцию("КомплекснаяАвтоматизация");

	Обработка = Обработки.УниверсальныйОбменДаннымиXML.Создать();
	
	Если Не ЭтоКА Тогда
		ИмяВременногоФайлаПравилОбмена = ПолучитьИмяВременногоФайла("xml");
		МакетПравилОбмена = Обработки.ПомощникВыгрузкиЗагрузкиМоделиБюджетирования.ПолучитьМакет("ПравилаОбмена");
		МакетПравилОбмена.Записать(ИмяВременногоФайлаПравилОбмена);
			
		Обработка.ИмяФайлаПравилОбмена = ИмяВременногоФайлаПравилОбмена;
		Обработка.ЗагрузитьПравилаОбмена();
		
		УстановитьПараметрКД(Обработка,"МодельБюджетирования",Параметры.МодельБюджетирования,Истина);
		УстановитьПараметрКД(Обработка,"АдресВидовБюджета",Параметры.ВыбранныеВидыБюджета,Истина);
		УстановитьПараметрКД(Обработка,"АдресЭтапыПодготовкиБюджетов",Параметры.ВыбранныеЭтапыПодготовкиБюджета,Истина);
		
		ИмяВременногоФайлаПротоколаОбмена = ПолучитьИмяВременногоФайла("txt");
		Обработка.ВыводВПротоколИнформационныхСообщений = Ложь;
		Обработка.ИмяФайлаПротоколаОбмена               = ИмяВременногоФайлаПротоколаОбмена;
				
		ИмяФайлаВыгрузки = ПолучитьИмяВременногоФайла("xml");
		Обработка.ИмяФайлаОбмена = ИмяФайлаВыгрузки;
		Обработка.РежимОбмена    = "Выгрузка";
		Обработка.НеВыводитьНикакихИнформационныхСообщенийПользователю = Истина;
		
		УстановитьПривилегированныйРежим(Истина);
		Обработка.ВыполнитьВыгрузку();
		УстановитьПривилегированныйРежим(Ложь);
		
		ПротоколОбмена = Новый ТекстовыйДокумент;
		ПротоколОбмена.Прочитать(ИмяВременногоФайлаПротоколаОбмена);
		ПротоколОбменаТекст = ПротоколОбмена.ПолучитьТекст();
		
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяФайлаВыгрузки);	
		ФлагОшибки = Обработка.ФлагОшибки;
	Иначе
		ФлагОшибки = Ложь;
		ДвоичныеДанные = Неопределено;
		ПротоколОбменаТекст = "";
	КонецЕсли;
	
	// Выгрузка по правилам КА
	ИмяВременногоФайлаПравилОбменаКА = ПолучитьИмяВременногоФайла("xml");
	МакетПравилОбменаКА = Обработки.ПомощникВыгрузкиЗагрузкиМоделиБюджетирования.ПолучитьМакет("ПравилаОбменаКА");
	МакетПравилОбменаКА.Записать(ИмяВременногоФайлаПравилОбменаКА);
	
	Обработка.ИмяФайлаПравилОбмена = ИмяВременногоФайлаПравилОбменаКА;
	Обработка.ЗагрузитьПравилаОбмена();
	
	УстановитьПараметрКД(Обработка,"МодельБюджетирования",Параметры.МодельБюджетирования,Истина);
	УстановитьПараметрКД(Обработка,"АдресВидовБюджета",Параметры.ВыбранныеВидыБюджета,Истина);
	УстановитьПараметрКД(Обработка,"АдресЭтапыПодготовкиБюджетов",Параметры.ВыбранныеЭтапыПодготовкиБюджета,Истина);
	
	ИмяВременногоФайлаПротоколаОбменаКА = ПолучитьИмяВременногоФайла("txt");
	Обработка.ВыводВПротоколИнформационныхСообщений = Ложь;
	Обработка.ИмяФайлаПротоколаОбмена               = ИмяВременногоФайлаПротоколаОбменаКА;
			
	ИмяФайлаВыгрузкиКА = ПолучитьИмяВременногоФайла("xml");
	Обработка.ИмяФайлаОбмена = ИмяФайлаВыгрузкиКА;
	Обработка.РежимОбмена    = "Выгрузка";
	Обработка.НеВыводитьНикакихИнформационныхСообщенийПользователю = Истина;
	
	УстановитьПривилегированныйРежим(Истина);
	Обработка.ВыполнитьВыгрузку();
	УстановитьПривилегированныйРежим(Ложь);
	
	ПротоколОбменаКА = Новый ТекстовыйДокумент;
	ПротоколОбменаКА.Прочитать(ИмяВременногоФайлаПротоколаОбменаКА);
	ПротоколОбменаТекстКА = ПротоколОбменаКА.ПолучитьТекст();
	
	ДвоичныеДанныеКА = Новый ДвоичныеДанные(ИмяФайлаВыгрузкиКА);
	ФлагОшибкиКА = Обработка.ФлагОшибки;
	
	Результат = Новый Структура("ЗагрузкаВыполнена", НЕ ФлагОшибки И НЕ ФлагОшибкиКА);
	Результат.Вставить("ФайлВыгрузки", ДвоичныеДанные);
	Результат.Вставить("ФайлВыгрузкиКА", ДвоичныеДанныеКА);
	Результат.Вставить("ПротоколОбмена", ПротоколОбменаТекст + Символы.ПС + ПротоколОбменаТекстКА);
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьПараметрКД(КД,ИмяПараметра,ЗначениеПараметра,ТаблицаНастроек=Ложь)
	
	Если ТаблицаНастроек Тогда
			
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Наименование", ИмяПараметра);
		НайденныеНастройки = КД.ТаблицаНастройкиПараметров.НайтиСтроки(ПараметрыОтбора);
		
		Если НайденныеНастройки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		// Массивы передаем через временное хранилище
		Если ТипЗнч(ЗначениеПараметра) = Тип("Массив") Тогда
			УИД = Новый УникальныйИдентификатор();
			АдресХранилища = ПоместитьВоВременноеХранилище(ЗначениеПараметра,УИД);		
			НайденныеНастройки[0].Значение = АдресХранилища;
		Иначе
			НайденныеНастройки[0].Значение = ЗначениеПараметра;
		КонецЕсли;
		
	Иначе

		Если Не КД.Параметры.Свойство(ИмяПараметра) Тогда
			Возврат;
		КонецЕсли;
		
		КД.Параметры[ИмяПараметра] = ЗначениеПараметра;

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

