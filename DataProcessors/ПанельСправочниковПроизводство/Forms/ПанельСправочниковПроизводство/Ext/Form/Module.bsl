
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеЭлементами();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НаборКонстант" Тогда
		// Изменены настройки программы в панелях администрирования
		УправлениеЭлементами();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьСтруктуруПредприятия(Команда)
	
	ПараметрыФормы = Новый Структура("ТолькоПроизводственныеПодразделения", Истина);
	ОткрытьФорму("Справочник.СтруктураПредприятия.ФормаСписка", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКалендари(Команда)
	
	ОткрытьФорму("Справочник.Календари.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПриоритетыЗаказов(Команда)
	
	ОткрытьФорму("Справочник.Приоритеты.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОчередьПроизводственныхПодразделений(Команда)
	
	ОткрытьФорму("Справочник.СтруктураПредприятия.Форма.НастройкаПриоритетовПроизводственныхПодразделений", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПричиныЗадержкиВыполненияЭтаповПроизводства(Команда)
	
	//++ НЕ УТКА
	ОткрытьФорму("Справочник.ПричиныЗадержкиВыполненияЭтаповПроизводства.ФормаСписка", , ЭтаФорма);
	//-- НЕ УТКА
	Возврат; // в КА2 не используется
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПараметрыМежоперационныхПереходов(Команда)
	
	//++ НЕ УТКА
	ОткрытьФорму("РегистрСведений.ПараметрыМежоперационныхПереходов.ФормаСписка", , ЭтаФорма);
	//-- НЕ УТКА
	Возврат; // в КА2 не используется
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьМоделиПооперационногоПланирования(Команда)
	
	//++ НЕ УТКА
	ОткрытьФорму("Справочник.МоделиПооперационногоПланирования.ФормаСписка", , ЭтаФорма);
	//-- НЕ УТКА
	Возврат; // в КА2 не используется
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСценарииПооперационногоПланирования(Команда)
	
	//++ НЕ УТКА
	ОткрытьФорму("Справочник.СценарииПооперационногоПланирования.ФормаСписка", , ЭтаФорма);
	//-- НЕ УТКА
	Возврат; // в КА2 не используется
	
КонецПроцедуры

#Область Ремонты

&НаКлиенте
Процедура ОткрытьКлассыОбъектовЭксплуатации(Команда)
	
	//++ НЕ УТКА
	ОткрытьФорму("Справочник.КлассыОбъектовЭксплуатации.ФормаСписка", , ЭтаФорма);
	//-- НЕ УТКА
	Возврат; // в КА2 не используется

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОбщиеВидыРемонтов(Команда)
	
	//++ НЕ УТКА
	ОткрытьФорму("Справочник.ОбщиеВидыРемонтов.ФормаСписка", , ЭтаФорма);
	//-- НЕ УТКА
	Возврат; // в КА2 не используется

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыДефектов(Команда)
	
	//++ НЕ УТКА
	ОткрытьФорму("Справочник.ВидыДефектов.ФормаСписка", , ЭтаФорма);
	//-- НЕ УТКА
	Возврат; // в КА2 не используется
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПоказателиНаработки(Команда)
	
	//++ НЕ УТКА
	ОткрытьФорму("Справочник.ПоказателиНаработки.ФормаСписка", , ЭтаФорма);
	//-- НЕ УТКА
	Возврат; // в КА2 не используется
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеЭлементами()
	
	УправлениеПредприятием = ПолучитьФункциональнуюОпцию("УправлениеПредприятием");
	
	#Область ПроизводственнаяСтруктура
	
	//
	ПравоДоступаПодразделения = ПравоДоступа("Просмотр", Метаданные.Справочники.СтруктураПредприятия);
	Элементы.ГруппаСтруктураПредприятия.Видимость = ПравоДоступаПодразделения;
	
	//
	ПравоДоступаРабочиеЦентры  = Ложь;
//++ НЕ УТКА
	ПравоДоступаРабочиеЦентры  = ПравоДоступа("Просмотр", Метаданные.Справочники.РабочиеЦентры);
//-- НЕ УТКА
	Элементы.ГруппаСтруктураРабочихЦентров.Видимость = ПравоДоступаРабочиеЦентры И УправлениеПредприятием;
	
	//
	ПравоДоступаКалендари = ПравоДоступа("Просмотр", Метаданные.Справочники.Календари);
	Элементы.ГруппаКалендари.Видимость = ПравоДоступаКалендари;
	
	// Заголовок группы
	Элементы.ГруппаПроизводственнаяСтруктура.Видимость =
		ПравоДоступаПодразделения
		ИЛИ ПравоДоступаРабочиеЦентры
		ИЛИ ПравоДоступаКалендари;
	#КонецОбласти
	
	#Область МежцеховоеУправление
	
	Элементы.ОткрытьПриоритетыЗаказов.Видимость = УправлениеПредприятием
		И ПравоДоступа("Просмотр", Метаданные.Справочники.Приоритеты);
	
	Элементы.ОткрытьНастройкуОчередиПроизводственныхПодразделений.Видимость = УправлениеПредприятием
		И ПравоДоступа("Просмотр", Метаданные.Справочники.СтруктураПредприятия);
	
	#КонецОбласти
	
	#Область ВнутрицеховоеУправление
//++ НЕ УТКА
	ИспользуетсяПроизводство21 = УправлениеПроизводством.ИспользуетсяПроизводство21();
	
	//
	ПравоПричиныЗадержкиВыполненияЭтаповПроизводства = ПравоДоступа("Просмотр", Метаданные.Справочники.ПричиныЗадержкиВыполненияЭтаповПроизводства);
	Элементы.ГруппаПричиныЗадержкиЭтаповПроизводства.Видимость = ПравоПричиныЗадержкиВыполненияЭтаповПроизводства;
	
	//
	ПравоПараметрыМежоперационныхПереходов = ИспользуетсяПроизводство21 
		И ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ПараметрыМежоперационныхПереходов);
	Элементы.ГруппаПараметрыМежоперационныхПереходов.Видимость = ПравоПараметрыМежоперационныхПереходов;
	
	//
	ПравоМоделиПооперационногоПланирования = ИспользуетсяПроизводство21 
		И ПравоДоступа("Просмотр", Метаданные.Справочники.МоделиПооперационногоПланирования);
	Элементы.ГруппаМоделиПооперационногоПланирования.Видимость = ПравоМоделиПооперационногоПланирования;
	
	//
	ПравоСценарииПооперационногоПланирования = ИспользуетсяПроизводство21 
		И ПравоДоступа("Просмотр", Метаданные.Справочники.СценарииПооперационногоПланирования);
	Элементы.ГруппаСценарииПооперационногоПланирования.Видимость = ПравоСценарииПооперационногоПланирования;
//-- НЕ УТКА
	
	// Заголовок группы
	
	Элементы.ГруппаВнутрицеховоеУправление.ОтображатьЗаголовок = 
		УправлениеПредприятием
//++ НЕ УТКА
		И (ПравоПараметрыМежоперационныхПереходов 
			ИЛИ ПравоМоделиПооперационногоПланирования
			ИЛИ ПравоСценарииПооперационногоПланирования)
//-- НЕ УТКА
			;
	
	Элементы.ГруппаВнутрицеховоеУправление.Видимость = 
		УправлениеПредприятием
//++ НЕ УТКА
		И (ПравоПричиныЗадержкиВыполненияЭтаповПроизводства
			ИЛИ ПравоПараметрыМежоперационныхПереходов 
			ИЛИ ПравоМоделиПооперационногоПланирования
			ИЛИ ПравоСценарииПооперационногоПланирования)
//-- НЕ УТКА
			;
	#КонецОбласти
	
	#Область Ремонты
	
	Элементы.ОткрытьКлассыОбъектовЭксплуатации.Видимость = УправлениеПредприятием
	//++ НЕ УТКА
		И ПравоДоступа("Просмотр", Метаданные.Справочники.КлассыОбъектовЭксплуатации)
	//-- НЕ УТКА
		;
	
	Элементы.ОткрытьОбщиеВидыРемонтов.Видимость = УправлениеПредприятием
	//++ НЕ УТКА
		И ПравоДоступа("Просмотр", Метаданные.Справочники.ОбщиеВидыРемонтов)
	//-- НЕ УТКА
		;
	
	Элементы.ОткрытьВидыДефектов.Видимость = УправлениеПредприятием
	//++ НЕ УТКА
		И ПравоДоступа("Просмотр", Метаданные.Справочники.ВидыДефектов)
	//-- НЕ УТКА
		;
	
	Элементы.ОткрытьПоказателиНаработки.Видимость = УправлениеПредприятием
	//++ НЕ УТКА
		И ПравоДоступа("Просмотр", Метаданные.Справочники.ПоказателиНаработки)
	//-- НЕ УТКА
		;
	
	#КонецОбласти
	
КонецПроцедуры

#КонецОбласти
