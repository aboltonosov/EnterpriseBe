#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Функция возвращает информацию о количестве документов по учету НДС к обработке по организации за период.
//
// Параметры:
//	ПараметрыЗапроса - Структура вида "Организация, НачалоПериода, КонецПериода"
//	СтруктураВидимостиЭлементов - Структура, определяет - формировать ли запрос по документу. 
// 									См. ПолучитьСтруктуруВидимостиЭлементов()
//	ТолькоОбязательныеОперации - Булево, Отбирать для анализа только обязательыне операции (требуется для 
//									индикации состояния в помощнике закрытия месяца)
// Возвращаемое значение:
//	ТаблицаЗначений - Таблица документов в обработке и уже сформированных (Документ, КоличествоКОформлению, КоличествоОформленных)
//
Функция СформироватьЗапросПоДокументамКОформлению(ПараметрыЗапроса, СтруктураВидимостиЭлементов = Неопределено, ТолькоОбязательныеОперации = Ложь) Экспорт
	
	Если СтруктураВидимостиЭлементов = Неопределено Тогда
		СтруктураВидимостиЭлементов = ПолучитьСтруктуруВидимостиЭлементов(ПараметрыЗапроса.Организация, ПараметрыЗапроса.НачалоПериода);
	КонецЕсли;
	
	Если ПараметрыЗапроса.Организация = Неопределено Тогда
		ПараметрыЗапроса.Организация = Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыЗапроса.КонецПериода) Тогда
		ПараметрыЗапроса.КонецПериода = Дата('209901010000');
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",		ПараметрыЗапроса.Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям",	Не ЗначениеЗаполнено(ПараметрыЗапроса.Организация));
	Запрос.УстановитьПараметр("НачалоПериода",		ПараметрыЗапроса.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",		ПараметрыЗапроса.КонецПериода);
	
	Запрос.Текст = 
		  ТекстЗапросаСчетФактураВыданный(СтруктураВидимостиЭлементов, ПараметрыЗапроса)
		+ ТекстЗапросаСчетФактураВыданныйАванс(СтруктураВидимостиЭлементов, ПараметрыЗапроса)
		+ ТекстЗапросаСчетФактураКомиссионеру(СтруктураВидимостиЭлементов, ПараметрыЗапроса)
		+ ТекстЗапросаЗаявлениеОВвозеТоваров(СтруктураВидимостиЭлементов, ПараметрыЗапроса)
		+ ТекстЗапросаСчетФактураНалоговыйАгент(СтруктураВидимостиЭлементов, ПараметрыЗапроса);
		
	Если ТолькоОбязательныеОперации = Ложь Тогда
		Запрос.Текст = Запрос.Текст
			+ ТекстЗапросаСчетФактураПолученный(СтруктураВидимостиЭлементов, ПараметрыЗапроса)
			+ ТекстЗапросаСчетФактураПолученныйАванс(СтруктураВидимостиЭлементов, ПараметрыЗапроса)
			+ ТекстЗапросаСчетФактураКомитента(СтруктураВидимостиЭлементов, ПараметрыЗапроса)
			//++ НЕ УТ
			+ ТекстЗапросаТаможеннаяДекларацияЭкспорт(СтруктураВидимостиЭлементов, ПараметрыЗапроса)
			//-- НЕ УТ
			+ ТекстЗапросаНДССостояниеРеализации0(СтруктураВидимостиЭлементов, ПараметрыЗапроса);
	КонецЕсли;
		
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция СформироватьЗапросПоПрочимОперациям(ПараметрыЗапроса) Экспорт
	
	Если ПараметрыЗапроса.Организация = Неопределено Тогда
		ПараметрыЗапроса.Организация = Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыЗапроса.КонецПериода) Тогда
		ПараметрыЗапроса.КонецПериода = Дата('209901010000');
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(1) КАК Количество
	|ИЗ
	|	Документ.ЗаписьКнигиПродаж КАК ЗаписьКнигиПродаж
	|ГДЕ
	|	ЗаписьКнигиПродаж.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ЗаписьКнигиПродаж.Проведен
	|	И (ЗаписьКнигиПродаж.Организация = &Организация
	|			ИЛИ &ПоВсемОрганизациям)
	|;
	|
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(1) КАК Количество
	|ИЗ
	|	Документ.ЗаписьКнигиПокупок КАК ЗаписьКнигиПокупок
	|ГДЕ
	|	ЗаписьКнигиПокупок.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ЗаписьКнигиПокупок.Проведен
	|	И (ЗаписьКнигиПокупок.Организация = &Организация
	|			ИЛИ &ПоВсемОрганизациям)
	|;
	|
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(1) КАК Количество
	|ИЗ
	|	РегистрСведений.СостоянияБлокировкиВычетаНДСПоСчетамФактурам.СрезПоследних(&КонецПериода, 
	|			(Организация = &Организация ИЛИ &ПоВсемОрганизациям)) КАК СостоянияБлокировки 
	|ГДЕ
	|	СостоянияБлокировки.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияБлокировкиВычетаНДС.Установлена)
	|;
	|
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(1) КАК Количество
	|ИЗ
	|	Документ.СписаниеНДСнаРасходы КАК СписаниеНДСнаРасходы
	|ГДЕ
	|	СписаниеНДСнаРасходы.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СписаниеНДСнаРасходы.Проведен
	|	И (СписаниеНДСнаРасходы.Организация = &Организация
	|			ИЛИ &ПоВсемОрганизациям)
	|";
	Запрос.УстановитьПараметр("Организация",		ПараметрыЗапроса.Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям",	Не ЗначениеЗаполнено(ПараметрыЗапроса.Организация));
	Запрос.УстановитьПараметр("НачалоПериода",		ПараметрыЗапроса.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",		ПараметрыЗапроса.КонецПериода);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Результат = Новый Структура;
	Результат.Вставить("ЗаписиКнигиПродаж",   0);
	Результат.Вставить("ЗаписиКнигиПокупок",  0);
	Результат.Вставить("БлокировкиВычетаНДС", 0);
	Результат.Вставить("СписанияНДСнаРасходы", 0);
	
	Выборка = РезультатЗапроса[0].Выбрать();
	Если Выборка.Следующий() Тогда
		Результат.Вставить("ЗаписиКнигиПродаж", Выборка.Количество);
	КонецЕсли;
	
	Выборка = РезультатЗапроса[1].Выбрать();
	Если Выборка.Следующий() Тогда
		Результат.Вставить("ЗаписиКнигиПокупок", Выборка.Количество);
	КонецЕсли;
	
	Выборка = РезультатЗапроса[2].Выбрать();
	Если Выборка.Следующий() Тогда
		Результат.Вставить("БлокировкиВычетаНДС", Выборка.Количество);
	КонецЕсли;

	Выборка = РезультатЗапроса[3].Выбрать();
	Если Выборка.Следующий() Тогда
		Результат.Вставить("СписанияНДСнаРасходы", Выборка.Количество);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Функция возвращает информацию о количестве документов по учету НДС к обработке по организации за период.
//
// Параметры:
//	ПараметрыЗапроса - Структура вида "Организация, НачалоПериода, КонецПериода"
//
// Возвращаемое значение:
//	Структура - (ЕстьНевыполненныеОперации, ЕстьОбязательныеНевыполненныеОперации), тип элементов структуры - булево 
//
Функция ОперацииПоНДСКВыполнению(ПараметрыЗапроса) Экспорт
	
	НевыполненныеОперации = 0;
	ОбязательныеНевыполненныеОперации = 0;
	
	ТолькоОбязательныеОперации = Истина;
	СтруктураВидимостиЭлементов = Неопределено;
	ТаблицаНевыполненныхОпераций = СформироватьЗапросПоДокументамКОформлению(ПараметрыЗапроса, СтруктураВидимостиЭлементов, ТолькоОбязательныеОперации);
	Для Каждого Строка Из ТаблицаНевыполненныхОпераций Цикл
		
		Если	Строка.Документ = "СчетФактураВыданный" 
			Или Строка.Документ = "СчетФактураВыданныйАванс" 
			Или Строка.Документ = "СчетФактураКомиссионеру"
			Или Строка.Документ = "ЗаявлениеОВвозеТоваров"
			Или Строка.Документ = "СчетФактураНалоговыйАгент" Тогда
			
			ОбязательныеНевыполненныеОперации = ОбязательныеНевыполненныеОперации + Строка.КоличествоКОформлению;
		КонецЕсли;
		
		НевыполненныеОперации = НевыполненныеОперации + Строка.КоличествоКОформлению;
		
	КонецЦикла;
	
	Возврат 
		Новый Структура("ЕстьОперацииКВыполнению, ЕстьОбязательныеОперацииКВыполнению", 
							(НевыполненныеОперации > 0), (ОбязательныеНевыполненныеОперации > 0));
	
КонецФункции

#КонецОбласти

#Область ТекстыЗапросов

Функция ТекстЗапросаСчетФактураВыданный(СтруктураВидимостиЭлементов, Параметры)
	
	ИмяИсточника = "СчетФактураВыданный";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&ИмяИсточника КАК Документ,
	|	0 КАК КоличествоКОформлению,
	|	0 КАК КоличествоОформленных";
	
	Если СтруктураВидимостиЭлементов[ИмяИсточника] Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&ИмяИсточника КАК Документ,
		|	СУММА(ДанныеКОформлению.КоличествоДокументовКОформлению) КАК КоличествоКОформлению,
		|	СУММА(ДанныеКОформлению.КоличествоОформленыхДокументов) КАК КоличествоОформленных
		|ИЗ
		|	(ВЫБРАТЬ
		|		1 КАК КоличествоДокументовКОформлению,
		|		0 КАК КоличествоОформленыхДокументов
		|	ИЗ
		|		РегистрСведений.ТребуетсяОформлениеСчетаФактуры КАК ТребуетсяОформлениеСчетаФактуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеОснования
		|		ПО 
		|			ТребуетсяОформлениеСчетаФактуры.Организация = ДанныеОснования.Организация
		|			И ТребуетсяОформлениеСчетаФактуры.Основание = ДанныеОснования.Документ
		|	ГДЕ
		|		ЕСТЬNULL(ДанныеОснования.Дата, ДАТАВРЕМЯ(1,1,1)) <= &КонецПериода
		|		И (&ПоВсемОрганизациям ИЛИ ТребуетсяОформлениеСчетаФактуры.Организация = &Организация)
		|		И ТребуетсяОформлениеСчетаФактуры.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		0,
		|		КОЛИЧЕСТВО(СчетФактураВыданный.Ссылка)
		|	ИЗ
		|		Документ.СчетФактураВыданный КАК СчетФактураВыданный
		|	ГДЕ
		|		НЕ СчетФактураВыданный.ПометкаУдаления
		|		И (&ПоВсемОрганизациям ИЛИ СчетФактураВыданный.Организация = &Организация)
		|		И СчетФактураВыданный.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|		И СчетФактураВыданный.Дата МЕЖДУ &НачалоПериода И &КонецПериода) КАК ДанныеКОформлению";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяИсточника", """" + ИмяИсточника + """");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСчетФактураПолученный(СтруктураВидимостиЭлементов, Параметры)
	
	ИмяИсточника = "СчетФактураПолученный";
	
	ТекстЗапроса = РазделительЗапросов() +
	"ВЫБРАТЬ
	|	&ИмяИсточника КАК Документ,
	|	&КоличествоКОформлению КАК КоличествоКОформлению,
	|	КОЛИЧЕСТВО(СчетФактураПолученный.Ссылка) КАК КоличествоОформленных
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	НЕ СчетФактураПолученный.ПометкаУдаления
	|	И (&ПоВсемОрганизациям ИЛИ СчетФактураПолученный.Организация = &Организация)
	|	И СчетФактураПолученный.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|";
	
	Если СтруктураВидимостиЭлементов[ИмяИсточника] Тогда
	
		ПараметрыПоискаСчетовФактур = УчетНДС.НовыйПараметрыПоискаСчетовФактур();		

		ПараметрыПоискаСчетовФактур.НачалоПериода 	= Параметры.НачалоПериода;
		ПараметрыПоискаСчетовФактур.КонецПериода 	= Параметры.КонецПериода;
		ПараметрыПоискаСчетовФактур.Организация		= ?(ЗначениеЗаполнено(Параметры.Организация), Параметры.Организация, Неопределено);
		ПараметрыПоискаСчетовФактур.Фильтр			= Неопределено;
		ПараметрыПоискаСчетовФактур.ВсеКромеФильтра	= Истина;
		ПараметрыПоискаСчетовФактур.НаличиеСчетаФактуры = Ложь;
		ПараметрыПоискаСчетовФактур.СчетФактураПроведен = Неопределено;
		ПараметрыПоискаСчетовФактур.ДатаСФНеБолее		= Неопределено;
		ПараметрыПоискаСчетовФактур.ИскатьПоОборотам	= Ложь;

		ТаблицаДокументов = УчетНДСПереопределяемый.ОпределитьНаличиеСчетовФактурПолученных(ПараметрыПоискаСчетовФактур);
		КоличествоДокументов = ТаблицаДокументов.Количество();
	Иначе
		КоличествоДокументов = 0;
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КоличествоКОформлению", Формат(КоличествоДокументов, "ЧН=; ЧГ=0"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяИсточника", """" + ИмяИсточника + """");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСчетФактураВыданныйАванс(СтруктураВидимостиЭлементов, Параметры)
	
	ИмяИсточника = "СчетФактураВыданныйАванс";
	
	ТекстЗапроса = РазделительЗапросов() +
	"ВЫБРАТЬ
	|	&ИмяИсточника КАК Документ,
	|	&КоличествоКОформлению КАК КоличествоКОформлению,
	|	КОЛИЧЕСТВО(СчетФактураВыданныйАванс.Ссылка) КАК КоличествоОформленных
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
	|ГДЕ
	|	НЕ СчетФактураВыданныйАванс.ПометкаУдаления
	|	И (&ПоВсемОрганизациям ИЛИ СчетФактураВыданныйАванс.Организация = &Организация)
	|	И СчетФактураВыданныйАванс.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И СчетФактураВыданныйАванс.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|";
	
	Если СтруктураВидимостиЭлементов[ИмяИсточника] Тогда
		ПолученныеАвансы = Новый ТаблицаЗначений;
		ПолученныеАвансы.Колонки.Добавить("СФсформирован");
		ПолученныеАвансы.Колонки.Добавить("Контрагент");
		ПолученныеАвансы.Колонки.Добавить("Сумма");
		ПолученныеАвансы.Колонки.Добавить("СтавкаНДС");
		ПолученныеАвансы.Колонки.Добавить("СуммаНДС");
		ПолученныеАвансы.Колонки.Добавить("ДокументОснование");
		ПолученныеАвансы.Колонки.Добавить("ДатаВыписки");
		ПолученныеАвансы.Колонки.Добавить("ВалютаДокумента");
		ПолученныеАвансы.Колонки.Добавить("ВалютнаяСумма");
		ПолученныеАвансы.Колонки.Добавить("СуммаСчетаФактуры");
		ПолученныеАвансы.Колонки.Добавить("СчетФактура");
		
		ОтборАвансов = Новый Структура;
		ОтборАвансов.Вставить("НачалоПериода", Параметры.НачалоПериода);
		ОтборАвансов.Вставить("КонецПериода", Параметры.КонецПериода);
		ОтборАвансов.Вставить("РасчетныйДокумент", Неопределено);
		ОтборАвансов.Вставить("Организация", Параметры.Организация);
		ОтборАвансов.Вставить("СтавкаНДСПоУмолчанию", Неопределено);
		ОтборАвансов.Вставить("ПравилоОтбораАванса", 
						Перечисления.ПорядокРегистрацииСчетовФактурНаАванс.ВсеОплаты);
	
		Документы.СчетФактураВыданныйАванс.ЗаполнитьПолученныеАвансыДляСФ(ОтборАвансов, ПолученныеАвансы);
		
		КоличествоДокументов = ПолученныеАвансы.НайтиСтроки(Новый Структура("СФсформирован", Ложь)).Количество();
	Иначе
		КоличествоДокументов = 0;
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КоличествоКОформлению", Формат(КоличествоДокументов, "ЧН=; ЧГ=0"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяИсточника", """" + ИмяИсточника + """");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаСчетФактураПолученныйАванс(СтруктураВидимостиЭлементов, Параметры)
	
	ИмяИсточника = "СчетФактураПолученныйАванс";
	
	ТекстЗапроса = РазделительЗапросов() +
	"ВЫБРАТЬ
	|	&ИмяИсточника КАК Документ,
	|	&КоличествоКОформлению КАК КоличествоКОформлению,
	|	КОЛИЧЕСТВО(СчетФактураПолученныйАванс.Ссылка) КАК КоличествоОформленных
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
	|ГДЕ
	|	НЕ СчетФактураПолученныйАванс.ПометкаУдаления
	|	И (&ПоВсемОрганизациям ИЛИ СчетФактураПолученныйАванс.Организация = &Организация)
	|	И СчетФактураПолученныйАванс.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И СчетФактураПолученныйАванс.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|";
	
	Если СтруктураВидимостиЭлементов[ИмяИсточника] Тогда
		ПолученныеАвансы = Документы.СчетФактураПолученныйАванс.ПолучитьВыданныеАвансы(
											?(ЗначениеЗаполнено(Параметры.Организация), Параметры.Организация, Неопределено), 
											Параметры.НачалоПериода, 
											Параметры.КонецПериода);
		
		КоличествоДокументов = ПолученныеАвансы.НайтиСтроки(Новый Структура("СчетФактура", Документы.СчетФактураПолученныйАванс.ПустаяСсылка())).Количество();
	Иначе
		КоличествоДокументов = 0;
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КоличествоКОформлению", Формат(КоличествоДокументов, "ЧН=; ЧГ=0"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяИсточника", """" + ИмяИсточника + """");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаСчетФактураНалоговыйАгент(СтруктураВидимостиЭлементов, Параметры)
	
	ИмяИсточника = "СчетФактураНалоговыйАгент";
	
	ТекстЗапроса = РазделительЗапросов() +
	"ВЫБРАТЬ
	|	&ИмяИсточника КАК Документ,
	|	&КоличествоКОформлению КАК КоличествоКОформлению,
	|	КОЛИЧЕСТВО(СчетФактураНалоговыйАгент.Ссылка) КАК КоличествоОформленных
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК СчетФактураНалоговыйАгент
	|ГДЕ
	|	НЕ СчетФактураНалоговыйАгент.ПометкаУдаления
	|	И (&ПоВсемОрганизациям ИЛИ СчетФактураНалоговыйАгент.Организация = &Организация)
	|	И СчетФактураНалоговыйАгент.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И СчетФактураНалоговыйАгент.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|";
	
	Если СтруктураВидимостиЭлементов[ИмяИсточника] Тогда
		
		ОплатыПоставщикам = Новый ТаблицаЗначений;
		ОплатыПоставщикам.Колонки.Добавить("СчетФактура");
		ОплатыПоставщикам.Колонки.Добавить("СФсформирован");
		ОплатыПоставщикам.Колонки.Добавить("СтавкаНДС");
		ОплатыПоставщикам.Колонки.Добавить("ВидАгентскогоДоговора");
		ОплатыПоставщикам.Колонки.Добавить("ЮрФизЛицо");
		ОплатыПоставщикам.Колонки.Добавить("СуммаНДС");
		ОплатыПоставщикам.Колонки.Добавить("Сумма");
		
		ОтборРасчетов = Документы.СчетФактураНалоговыйАгент.ОтборРасчетов();
		ОтборРасчетов.НачалоПериода = Параметры.НачалоПериода;
		ОтборРасчетов.КонецПериода = Параметры.КонецПериода;
		ОтборРасчетов.Организация = ?(ЗначениеЗаполнено(Параметры.Организация), Параметры.Организация, Неопределено);
		
		Документы.СчетФактураНалоговыйАгент.ЗаполнитьОплатыПоставщикам(ОтборРасчетов, ОплатыПоставщикам);
		
		КоличествоДокументов = ОплатыПоставщикам.НайтиСтроки(Новый Структура("СФсформирован", Ложь)).Количество();
	Иначе
		КоличествоДокументов = 0;
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КоличествоКОформлению", Формат(КоличествоДокументов, "ЧН=; ЧГ=0"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяИсточника", """" + ИмяИсточника + """");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаСчетФактураКомитента(СтруктураВидимостиЭлементов, Параметры)
	
	ИмяИсточника = "СчетФактураКомитента";
	
	ТекстЗапроса = РазделительЗапросов() +
	"ВЫБРАТЬ
	|	&ИмяИсточника КАК Документ,
	|	0 КАК КоличествоКОформлению,
	|	КОЛИЧЕСТВО(СчетФактураКомитента.Ссылка) КАК КоличествоОформленных
	|ИЗ
	|	Документ.СчетФактураКомитента КАК СчетФактураКомитента
	|ГДЕ
	|	НЕ СчетФактураКомитента.ПометкаУдаления
	|	И (&ПоВсемОрганизациям ИЛИ СчетФактураКомитента.Организация = &Организация)
	|	И СчетФактураКомитента.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И СчетФактураКомитента.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|";
	
	Если СтруктураВидимостиЭлементов[ИмяИсточника] Тогда
		
		ТекстЗапроса = РазделительЗапросов() +
		"ВЫБРАТЬ
		|	&ИмяИсточника КАК Документ,
		|	СУММА(Подзапрос.КоличествоКОформлению),
		|	СУММА(Подзапрос.КоличествоОформленных)
		|ИЗ
		|	(ВЫБРАТЬ
		|		КОЛИЧЕСТВО(КРегистрации.СчетФактураВыданный) КАК КоличествоКОформлению,
		|		0 КАК КоличествоОформленных
		|	ИЗ
		|		РегистрСведений.СчетаФактурыКомитентовКРегистрации КАК КРегистрации
		|	ГДЕ
		|		КРегистрации.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|		И КРегистрации.Организация = &Организация
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КОЛИЧЕСТВО(КРегистрации.СчетФактураВыданный) КАК КоличествоКОформлению,
		|		0 КАК КоличествоОформленных
		|	ИЗ
		|		РегистрСведений.СчетаФактурыКомитентовКРегистрации КАК КРегистрации
		|	ГДЕ
		|		&ПоВсемОрганизациям
		|		И КРегистрации.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|		И КРегистрации.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		0,
		|		КОЛИЧЕСТВО(СчетФактураКомитента.Ссылка)
		|	ИЗ
		|		Документ.СчетФактураКомитента КАК СчетФактураКомитента
		|	ГДЕ
		|		НЕ СчетФактураКомитента.ПометкаУдаления
		|		И СчетФактураКомитента.Организация = &Организация
		|		И СчетФактураКомитента.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		0,
		|		КОЛИЧЕСТВО(СчетФактураКомитента.Ссылка)
		|	ИЗ
		|		Документ.СчетФактураКомитента КАК СчетФактураКомитента
		|	ГДЕ
		|		&ПоВсемОрганизациям
		|		И НЕ СчетФактураКомитента.ПометкаУдаления
		|		И СчетФактураКомитента.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|		И СчетФактураКомитента.Дата МЕЖДУ &НачалоПериода И &КонецПериода) КАК Подзапрос";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяИсточника", """" + ИмяИсточника + """");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаСчетФактураКомиссионеру(СтруктураВидимостиЭлементов, Параметры)
	
	ИмяИсточника = "СчетФактураКомиссионеру";
	
	ТекстЗапроса = РазделительЗапросов() +
	"ВЫБРАТЬ
	|	&ИмяИсточника КАК Документ,
	|	0 КАК КоличествоКОформлению,
	|	КОЛИЧЕСТВО(СчетФактураКомиссионеру.Ссылка) КАК КоличествоОформленных
	|ИЗ
	|	Документ.СчетФактураКомиссионеру КАК СчетФактураКомиссионеру
	|ГДЕ
	|	НЕ СчетФактураКомиссионеру.ПометкаУдаления
	|	И (&ПоВсемОрганизациям ИЛИ СчетФактураКомиссионеру.Организация = &Организация)
	|	И СчетФактураКомиссионеру.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И СчетФактураКомиссионеру.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|";
	
	Если СтруктураВидимостиЭлементов[ИмяИсточника] Тогда
		
		ТекстЗапроса = РазделительЗапросов() +
		"ВЫБРАТЬ
		|	&ИмяИсточника КАК Документ,
		|	СУММА(Подзапрос.КоличествоКОформлению),
		|	СУММА(Подзапрос.КоличествоОформленных)
		|ИЗ
		|	(ВЫБРАТЬ
		|		КОЛИЧЕСТВО(КОформлению.ОтчетКомиссионера) КАК КоличествоКОформлению,
		|		0 КАК КоличествоОформленных
		|	ИЗ
		|		РегистрСведений.СчетаФактурыКомиссионерамКОформлению КАК КОформлению
		|	ГДЕ
		|		КОформлению.Организация = &Организация 
		|		И КОформлению.ДатаСчетаФактуры  МЕЖДУ &НачалоПериода И &КонецПериода
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КОЛИЧЕСТВО(КОформлению.ОтчетКомиссионера) КАК КоличествоКОформлению,
		|		0 КАК КоличествоОформленных
		|	ИЗ
		|		РегистрСведений.СчетаФактурыКомиссионерамКОформлению КАК КОформлению
		|	ГДЕ
		|		&ПоВсемОрганизациям
		|		И КОформлению.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|		И КОформлению.ДатаСчетаФактуры  МЕЖДУ &НачалоПериода И &КонецПериода
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		0,
		|		КОЛИЧЕСТВО(СчетФактураКомиссионеру.Ссылка)
		|	ИЗ
		|		Документ.СчетФактураКомиссионеру КАК СчетФактураКомиссионеру
		|	ГДЕ
		|		НЕ СчетФактураКомиссионеру.ПометкаУдаления
		|		И СчетФактураКомиссионеру.Организация = &Организация
		|		И СчетФактураКомиссионеру.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		0,
		|		КОЛИЧЕСТВО(СчетФактураКомиссионеру.Ссылка)
		|	ИЗ
		|		Документ.СчетФактураКомиссионеру КАК СчетФактураКомиссионеру
		|	ГДЕ
		|		&ПоВсемОрганизациям
		|		И НЕ СчетФактураКомиссионеру.ПометкаУдаления
		|		И СчетФактураКомиссионеру.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|		И СчетФактураКомиссионеру.Дата МЕЖДУ &НачалоПериода И &КонецПериода) КАК Подзапрос";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяИсточника", """" + ИмяИсточника + """");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаЗаявлениеОВвозеТоваров(СтруктураВидимостиЭлементов, Параметры)
	
	ИмяИсточника = "ЗаявлениеОВвозеТоваров";
	
	ТекстЗапроса = РазделительЗапросов() +
	"ВЫБРАТЬ
	|	&ИмяИсточника КАК Документ,
	|	0 КАК КоличествоКОформлению,
	|	КОЛИЧЕСТВО(ЗаявлениеОВвозеТоваров.Ссылка) КАК КоличествоОформленных
	|ИЗ
	|	Документ.ЗаявлениеОВвозеТоваров КАК ЗаявлениеОВвозеТоваров
	|ГДЕ
	|	НЕ ЗаявлениеОВвозеТоваров.ПометкаУдаления
	|	И (&ПоВсемОрганизациям ИЛИ ЗаявлениеОВвозеТоваров.Организация = &Организация)
	|	И ЗаявлениеОВвозеТоваров.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)	
	|	И ЗаявлениеОВвозеТоваров.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|";
	
	Если СтруктураВидимостиЭлементов[ИмяИсточника] Тогда
		
		ТекстЗапроса = РазделительЗапросов() +
		"ВЫБРАТЬ
		|	&ИмяИсточника КАК Документ,
		|	СУММА(Подзапрос.КоличествоКОформлению),
		|	СУММА(Подзапрос.КоличествоОформленных)
		|ИЗ
		|	(ВЫБРАТЬ
		|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДокументПоступлениеТоваровУслуг.Ссылка) КАК КоличествоКОформлению,
		|		0 КАК КоличествоОформленных
		|	ИЗ
		|		Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслуг
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОформлениюЗаявленийОВвозе.Остатки КАК ТоварыКОформлениюЗаявленийОВвозеОстатки
		|			ПО ДокументПоступлениеТоваровУслуг.Ссылка = ТоварыКОформлениюЗаявленийОВвозеОстатки.ДокументПоступления
		|	ГДЕ
		|		ДокументПоступлениеТоваровУслуг.Организация = &Организация 
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДокументПоступлениеТоваровУслуг.Ссылка) КАК КоличествоКОформлению,
		|		0 КАК КоличествоОформленных
		|	ИЗ
		|		Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслуг
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОформлениюЗаявленийОВвозе.Остатки КАК ТоварыКОформлениюЗаявленийОВвозеОстатки
		|			ПО ДокументПоступлениеТоваровУслуг.Ссылка = ТоварыКОформлениюЗаявленийОВвозеОстатки.ДокументПоступления
		|	ГДЕ
		|		&ПоВсемОрганизациям
		|		И ДокументПоступлениеТоваровУслуг.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		0,
		|		КОЛИЧЕСТВО(ЗаявлениеОВвозеТоваров.Ссылка)
		|	ИЗ
		|		Документ.ЗаявлениеОВвозеТоваров КАК ЗаявлениеОВвозеТоваров
		|	ГДЕ
		|		НЕ ЗаявлениеОВвозеТоваров.ПометкаУдаления
		|		И ЗаявлениеОВвозеТоваров.Организация = &Организация
		|		И ЗаявлениеОВвозеТоваров.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		0,
		|		КОЛИЧЕСТВО(ЗаявлениеОВвозеТоваров.Ссылка)
		|	ИЗ
		|		Документ.ЗаявлениеОВвозеТоваров КАК ЗаявлениеОВвозеТоваров
		|	ГДЕ
		|		&ПоВсемОрганизациям
		|		И НЕ ЗаявлениеОВвозеТоваров.ПометкаУдаления
		|		И ЗаявлениеОВвозеТоваров.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|		И ЗаявлениеОВвозеТоваров.Дата МЕЖДУ &НачалоПериода И &КонецПериода) КАК Подзапрос";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяИсточника", """" + ИмяИсточника + """");
	
	Возврат ТекстЗапроса;

КонецФункции

//++ НЕ УТ
Функция ТекстЗапросаТаможеннаяДекларацияЭкспорт(СтруктураВидимостиЭлементов, ПараметрыЗапроса)
	
	ИмяИсточника = "ТаможеннаяДекларацияЭкспорт";
	
	ТекстЗапроса = РазделительЗапросов() +
	"ВЫБРАТЬ
	|	&ИмяИсточника КАК НаименованиеИсточника,
	|	0 КАК КоличествоКОформлению,
	|	КОЛИЧЕСТВО(ТаможеннаяДекларацияЭкспорт.Ссылка) КАК КоличествоОформленных
	|ИЗ
	|	Документ.ТаможеннаяДекларацияЭкспорт КАК ТаможеннаяДекларацияЭкспорт
	|ГДЕ
	|	(&ПоВсемОрганизациям И ТаможеннаяДекларацияЭкспорт.Организация = &Организация) 
	|	И ТаможеннаяДекларацияЭкспорт.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И ТаможеннаяДекларацияЭкспорт.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ТаможеннаяДекларацияЭкспорт.Проведен
	|
	|";
	
	Если СтруктураВидимостиЭлементов[ИмяИсточника] Тогда
		
		ТекстЗапроса = РазделительЗапросов() +
		"ВЫБРАТЬ
		|	&ИмяИсточника КАК Документ,
		|	СУММА(Подзапрос.КоличествоКОформлению),
		|	СУММА(Подзапрос.КоличествоОформленных)
		|ИЗ
		|	(ВЫБРАТЬ
		|		КОЛИЧЕСТВО(КРегистрации.РеализацияЭкспорт) КАК КоличествоКОформлению,
		|		0 КАК КоличествоОформленных
		|	ИЗ
		|		РегистрСведений.ТаможенныеДекларацииЭкспортКРегистрации КАК КРегистрации
		|	ГДЕ
		|		КРегистрации.Организация = &Организация
		|		И КРегистрации.ДатаРеализации МЕЖДУ &НачалоПериода И &КонецПериода
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		КОЛИЧЕСТВО(КРегистрации.РеализацияЭкспорт) КАК КоличествоКОформлению,
		|		0 КАК КоличествоОформленных
		|	ИЗ
		|		РегистрСведений.ТаможенныеДекларацииЭкспортКРегистрации КАК КРегистрации
		|	ГДЕ
		|		&ПоВсемОрганизациям
		|		И КРегистрации.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|		И КРегистрации.ДатаРеализации МЕЖДУ &НачалоПериода И &КонецПериода
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		0,
		|		КОЛИЧЕСТВО(ТаможеннаяДекларацияЭкспорт.Ссылка)
		|	ИЗ
		|		Документ.ТаможеннаяДекларацияЭкспорт КАК ТаможеннаяДекларацияЭкспорт
		|	ГДЕ
		|		ТаможеннаяДекларацияЭкспорт.Организация = &Организация 
		|		И ТаможеннаяДекларацияЭкспорт.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|		И ТаможеннаяДекларацияЭкспорт.Проведен
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		0,
		|		КОЛИЧЕСТВО(ТаможеннаяДекларацияЭкспорт.Ссылка)
		|	ИЗ
		|		Документ.ТаможеннаяДекларацияЭкспорт КАК ТаможеннаяДекларацияЭкспорт
		|	ГДЕ
		|		&ПоВсемОрганизациям
		|		И ТаможеннаяДекларацияЭкспорт.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|		И ТаможеннаяДекларацияЭкспорт.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|		И ТаможеннаяДекларацияЭкспорт.Проведен) КАК Подзапрос";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяИсточника", """" + ИмяИсточника + """");
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- НЕ УТ

Функция ТекстЗапросаНДССостояниеРеализации0(СтруктураВидимостиЭлементов, Параметры)
	
	ИмяИсточника = "НДССостояниеРеализации0";
	
	ТекстЗапроса = РазделительЗапросов() +
	"ВЫБРАТЬ
	|	&ИмяИсточника КАК НаименованиеИсточника,
	|	0 КАК КоличествоКОформлению,
	|	КОЛИЧЕСТВО(НДССостояниеРеализации0.ДокументРеализации) КАК КоличествоОформленных
	|ИЗ
	|	РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|ГДЕ
	|	(&ПоВсемОрганизациям ИЛИ НДССостояниеРеализации0.Организация = &Организация)
	|	И НДССостояниеРеализации0.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НДССостояниеРеализации0.ДатаРеализации МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|";
	
	Если СтруктураВидимостиЭлементов[ИмяИсточника] Тогда
		
		ТекстЗапроса = РазделительЗапросов() +
		"ВЫБРАТЬ
		|	&ИмяИсточника КАК НаименованиеИсточника,
		|	СУММА(Подзапрос.КоличествоКОформлению),
		|	СУММА(Подзапрос.КоличествоОформленных)
		|ИЗ
		|	(ВЫБРАТЬ
		|		КОЛИЧЕСТВО(НДССостояниеРеализации0.ДокументРеализации) КАК КоличествоКОформлению,
		|		0 КАК КоличествоОформленных
		|	ИЗ
		|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
		|	ГДЕ
		|		(&ПоВсемОрганизациям ИЛИ НДССостояниеРеализации0.Организация = &Организация)
		|		И НДССостояниеРеализации0.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|		И НДССостояниеРеализации0.ДатаРеализации <= &КонецПериода
		|		И НДССостояниеРеализации0.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ОжидаетсяПодтверждение)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		КОЛИЧЕСТВО(НДССостояниеРеализации0.ДокументРеализации) КАК КоличествоКОформлению,
		|		0 КАК КоличествоОформленных
		|	ИЗ
		|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
		|	ГДЕ
		|		(&ПоВсемОрганизациям ИЛИ НДССостояниеРеализации0.Организация = &Организация)
		|		И НДССостояниеРеализации0.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|		И НДССостояниеРеализации0.ДатаРеализации <= &КонецПериода
		|		И НДССостояниеРеализации0.ДатаПодтверждения > &КонецПериода
		|		И НДССостояниеРеализации0.Состояние В (
		|			ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0),
		|			ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0))
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		0 КАК КоличествоКОформлению,
		|		КОЛИЧЕСТВО(НДССостояниеРеализации0.ДокументРеализации) КАК КоличествоОформленных
		|	ИЗ
		|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
		|	ГДЕ
		|		(&ПоВсемОрганизациям ИЛИ НДССостояниеРеализации0.Организация = &Организация)
		|		И НДССостояниеРеализации0.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|		И НДССостояниеРеализации0.ДатаПодтверждения МЕЖДУ &НачалоПериода И &КонецПериода
		|		И НДССостояниеРеализации0.Состояние В (
		|			ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0),
		|			ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0))
		|	) КАК Подзапрос";
	
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяИсточника", """" + ИмяИсточника + """");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция РазделительЗапросов()
	Возврат 
		"
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|";
КонецФункции

#КонецОбласти
	
#Область Прочее

Функция ПолучитьСтруктуруВидимостиЭлементов(Организация, Период) Экспорт
	
	ПрименяетсяУСН = УчетнаяПолитика.ПрименяетсяУСН(Организация, Период);
	
	СтруктураВидимостиЭлементов = Новый Структура;
	СтруктураВидимостиЭлементов.Вставить("СчетФактураВыданный",			Истина);
	СтруктураВидимостиЭлементов.Вставить("СчетФактураПолученный",		Истина);
	СтруктураВидимостиЭлементов.Вставить("СчетФактураВыданныйАванс",	Не ПрименяетсяУСН);
	СтруктураВидимостиЭлементов.Вставить("СчетФактураПолученныйАванс",	НЕ ПрименяетсяУСН);
	СтруктураВидимостиЭлементов.Вставить("СчетФактураНалоговыйАгент",	Истина);
	СтруктураВидимостиЭлементов.Вставить("СчетФактураКомитента",		ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриЗакупках"));
	СтруктураВидимостиЭлементов.Вставить("СчетФактураКомиссионеру",		ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах"));
	СтруктураВидимостиЭлементов.Вставить("ЗаявлениеОВвозеТоваров",		ПолучитьФункциональнуюОпцию("ИспользоватьИмпортныеЗакупки"));
	
	Если ПолучитьФункциональнуюОпцию("УправлениеТорговлей") Тогда
		СтруктураВидимостиЭлементов.Вставить("ТаможеннаяДекларацияЭкспорт", Ложь);
	//++ НЕ УТ
	Иначе
		СтруктураВидимостиЭлементов.Вставить("ТаможеннаяДекларацияЭкспорт", ПолучитьФункциональнуюОпцию("ВестиУчетТаможенныхДекларацийНаЭкспорт"));
	//-- НЕ УТ
	КонецЕсли;
	
	СтруктураВидимостиЭлементов.Вставить("НДССостояниеРеализации0",		ПолучитьФункциональнуюОпцию("ИспользоватьНДС0"));
	
	Возврат СтруктураВидимостиЭлементов;
	
КонецФункции

#КонецОбласти

#КонецЕсли