&НаКлиенте
Перем КэшированныеЗначения;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ТолькоНеСопоставленнаяНоменклатура = Истина;
	ТолькоНеСопоставленныеОрганизации  = Истина;
	
	УстановитьОтборТовары();
	УстановитьОтборОрганизации();
	
	Если Параметры.ТоварноТранспортныеНакладные <> Неопределено Тогда
		
		ТоварноТранспортныеНакладные.ЗагрузитьЗначения(Параметры.ТоварноТранспортныеНакладные);
		
		ЗаполнитьТаблицыДляСопоставления();
		
		ДанныеДляСопоставления = ЕстьДанныеДляСопоставления();
		
		Если НЕ ДанныеДляСопоставления.ЕстьНесопоставленныеОрганизации
			 И НЕ ДанныеДляСопоставления.ЕстьНесопоставленныеТовары Тогда
			
			Отказ = Истина;
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нет данных для сопоставления.",,,,Отказ);
			
		ИначеЕсли НЕ ДанныеДляСопоставления.ЕстьНесопоставленныеОрганизации 
			И ДанныеДляСопоставления.ЕстьНесопоставленныеТовары Тогда
			
			Элементы.СтраницыКлассификаторы.ТекущаяСтраница = Элементы.СтраницаКлассификаторАлкогольнойПродукцииЕГАИС;
			
		КонецЕсли;
		
	ИначеЕсли ЭтоАдресВременногоХранилища(Параметры.НеСопоставленныеТовары) Тогда
		
		ЗаполнитьТаблицыДляСопоставленияПоТоварам(ПолучитьИзВременногоХранилища(Параметры.НеСопоставленныеТовары));
		
		Элементы.СтраницыКлассификаторы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Элементы.СтраницыКлассификаторы.ТекущаяСтраница = Элементы.СтраницаКлассификаторАлкогольнойПродукцииЕГАИС;
		
	Иначе
		
		ВызватьИсключение НСтр("ru='Обработка предназначена только для контекстного открытия из форм конфигурации.'");
		
	КонецЕсли;
	
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка) 
	
	Если НЕ ПринудительноЗакрытьФорму И Модифицированность Тогда
		
		Отказ = Истина;
		
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.Да, "Сохранить");
		СписокКнопок.Добавить(КодВозвратаДиалога.Нет, "Не сохранять");
		СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, "Отмена");
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПередЗакрытиемВопросЗавершение", ЭтотОбъект),
			НСтр("ru = 'Введенные данные не сохранены, сохранить?'"),
			СписокКнопок);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемВопросЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		
		Если ПроверитьЗаполнение() Тогда
			
			Отказ = Ложь;
			Если ПроверитьЗаполнение() Тогда
				ПроверитьЗаписатьДанные(Отказ);
				Если Не Отказ Тогда
					ПринудительноЗакрытьФорму = Истина;
					Закрыть();
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
		
		ПринудительноЗакрытьФорму = Истина;
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ШаблонСообщения = НСтр("ru='Не заполнена колонка ""Характеристика"" в строке %НомерСтроки% списка ""Товары"".'");
	
	ТекНомерСтроки = 1;
	Для Каждого ТекСтрока Из Товары Цикл
		Если ЗначениеЗаполнено(ТекСтрока.Номенклатура) И ТекСтрока.ХарактеристикиИспользуются И Не ЗначениеЗаполнено(ТекСтрока.Характеристика) Тогда
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НомерСтроки%", ТекНомерСтроки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", ТекНомерСтроки, "Характеристика"),
				,
				Отказ);
		КонецЕсли;
		ТекНомерСтроки = ТекНомерСтроки + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_КлассификаторОрганизацийЕГАИС" Тогда
		Если ЗначениеЗаполнено(Параметр) И ТипЗнч(Параметр) = Тип("СправочникСсылка.КлассификаторОрганизацийЕГАИС") Тогда
			
			ОбновитьДанныеОрганизации(Параметр);
			
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_КлассификаторАлкогольнойПродукцииЕГАИС"  Тогда
		Если ЗначениеЗаполнено(Параметр) И ТипЗнч(Параметр) = Тип("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС") Тогда
			
			ОбновитьДанныеПродукции(Параметр);
			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекущиеДанные.Характеристика);
	СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", ТекущиеДанные.Упаковка);
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущиеДанные, СтруктураДействий, КэшированныеЗначения);
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) 
		И ((ТекущиеДанные.ХарактеристикиИспользуются И ЗначениеЗаполнено(ТекущиеДанные.Характеристика))
			ИЛИ НЕ ТекущиеДанные.ХарактеристикиИспользуются) Тогда
		ТекущиеДанные.Сопоставлено = Истина;
	Иначе
		ТекущиеДанные.Сопоставлено = Ложь;
	КонецЕсли;
	
	ТекущиеДанные.ЕстьИзменения = Истина;
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииЯчейки(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	Если Элемент.ТекущийЭлемент.Имя = "ТоварыНоменклатура" И ТекущаяСтрока <> Неопределено Тогда 
		
		ЗаполнитьСпискиВыбораНоменклатуры(ТекущаяСтрока);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент.Имя = "ТоварыНоменклатураЕГАИС" Тогда
		
		ПараметрыФормы = Новый Структура("Ключ", Элементы.Товары.ТекущиеДанные.НоменклатураЕГАИС);
		ОткрытьФорму("Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ФормаОбъекта", ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыХарактеристикаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) 
		И ((ТекущиеДанные.ХарактеристикиИспользуются И ЗначениеЗаполнено(ТекущиеДанные.Характеристика))
			ИЛИ НЕ ТекущиеДанные.ХарактеристикиИспользуются) Тогда
		ТекущиеДанные.Сопоставлено = Истина;
	Иначе
		ТекущиеДанные.Сопоставлено = Ложь;
	КонецЕсли;
	
	ТекущиеДанные.ЕстьИзменения = Истина;
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииКонтрагентПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Организации.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(ТекущиеДанные.Контрагент) Тогда
			ЗаполнитьПартнераПоКонтрагенту(ТекущиеДанные.ПолучитьИдентификатор());
			ТекущиеДанные.Сопоставлено = ЗначениеЗаполнено(ТекущиеДанные.Партнер);
		Иначе
			ТекущиеДанные.Партнер = ПредопределенноеЗначение("Справочник.Партнеры.ПустаяСсылка");
			ТекущиеДанные.Сопоставлено = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущиеДанные.ЕстьИзменения = Истина;
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элементы.Организации.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено 
		И Элемент.ТекущийЭлемент <> Неопределено Тогда 
		
		ЗаполнитьСпискиВыбораОрганизации(ТекущаяСтрока);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент.Имя = "ОрганизацииОрганизацияЕГАИС" Тогда
		ПараметрыФормы = Новый Структура("Ключ", Элементы.Организации.ТекущиеДанные.ОрганизацияЕГАИС);
		ОткрытьФорму("Справочник.КлассификаторОрганизацийЕГАИС.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацииПартнерПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Организации.ТекущиеДанные;
	
	Если ТекущиеДанные<>Неопределено Тогда 
		Если ЗначениеЗаполнено(ТекущиеДанные.Партнер) Тогда
			ТекущиеДанные.Контрагент = ПолучитьКонтрагентаПартнераПоУмолчанию(ТекущиеДанные.Партнер);
			ТекущиеДанные.Сопоставлено = ЗначениеЗаполнено(ТекущиеДанные.Контрагент);
		Иначе
			ТекущиеДанные.Контрагент = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
			ТекущиеДанные.Сопоставлено = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ТекущиеДанные.ЕстьИзменения = Истина;
	ОбновитьЗаголовкиСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура ФлагТолькоНеСопоставленныеОрганизацииПриИзменении(Элемент)
	
	УстановитьОтборОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура ФлагТолькоНеСопоставленныеТоварыПриИзменении(Элемент)
	
	УстановитьОтборТовары();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Отмена(Команда)
	
	ПринудительноЗакрытьФорму = Истина;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		
		Отказ = Ложь;
		ПроверитьЗаписатьДанные(Отказ);
		
		Если Не Отказ Тогда
			ПринудительноЗакрытьФорму = Истина;
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ПроверитьЗаписатьДанные();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ЕстьДанныеДляСопоставления()
	
	СтруктураПоиска = Новый Структура("Сопоставлено", Ложь);
	
	СтрокиНеСопоставленныхОрганизаций = Организации.НайтиСтроки(СтруктураПоиска);

	СтрокиНеСопоставленныхТоваров = Товары.НайтиСтроки(СтруктураПоиска);

	Результат = Новый Структура;
	
	Результат.Вставить("ЕстьНесопоставленныеОрганизации", СтрокиНеСопоставленныхОрганизаций.Количество() > 0);
	
	Результат.Вставить("ЕстьНесопоставленныеТовары", СтрокиНеСопоставленныхТоваров.Количество() > 0);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();

	//

	НоменклатураСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтаФорма, , "Товары.ХарактеристикиИспользуются");
	
	//Контрагент
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОрганизацииКонтрагент.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организации.Контрагент");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Черный);
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОрганизацииКонтрагент.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организации.Контрагент");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаПроблемаЕГАИС);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", "<не сопоставлено>");

	//Партнер
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОрганизацииПартнер.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организации.Партнер");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Черный);
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОрганизацииПартнер.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организации.Партнер");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаПроблемаЕГАИС);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", "<не сопоставлено>");

	//Номенклатура
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыНоменклатура.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Товары.Номенклатура");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Черный);
	
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыНоменклатура.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Товары.Номенклатура");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаПроблемаЕГАИС);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", "<не сопоставлено>");
	
	//
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТоварыЕдиницаИзмерения.Имя);
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Товары.Упаковка");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Отображать", Ложь);	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыДляСопоставления()

#Область Организации

	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.ОрганизацияЕГАИС                КАК ОрганизацияЕГАИС,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.ИНН            КАК ИНН,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.КПП            КАК КПП,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.Наименование   КАК Наименование,
	|	ПОДСТРОКА(ВложенныйЗапрос.ОрганизацияЕГАИС.НаименованиеПолное,1,255) КАК НаименованиеПолное,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.ТорговыйОбъект КАК Партнер,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.Контрагент     КАК Контрагент,
	|	ВложенныйЗапрос.ОрганизацияЕГАИС.Сопоставлено   КАК Сопоставлено
	|ПОМЕСТИТЬ ВтОрганизацииЕГАИС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТТНВходящаяЕГАИС.Грузоотправитель КАК ОрганизацияЕГАИС
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|	ГДЕ
	|		ТТНВходящаяЕГАИС.Ссылка В(&СписокТТН)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТТНВходящаяЕГАИС.Грузополучатель
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|	ГДЕ
	|		ТТНВходящаяЕГАИС.Ссылка В(&СписокТТН)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТТНВходящаяЕГАИС.Поставщик
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|	ГДЕ
	|		ТТНВходящаяЕГАИС.Ссылка В(&СписокТТН)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция.Импортер = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|				ТОГДА ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция.Производитель
	|			ИНАЧЕ ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция.Импортер
	|		КОНЕЦ
	|	ИЗ
	|		Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|	ГДЕ
	|		ТТНВходящаяЕГАИСТовары.Ссылка В(&СписокТТН)) КАК ВложенныйЗапрос
	|ГДЕ
	|	НЕ (ВложенныйЗапрос.ОрганизацияЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка))
	|	И НЕ (ВложенныйЗапрос.ОрганизацияЕГАИС.СоответствуетОрганизации)
	|;
	|ВЫБРАТЬ
	|	ВтОрганизацииЕГАИС.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ВтОрганизацииЕГАИС.Наименование     КАК НаименованиеЕГАИС,
	|	Контрагенты.Ссылка                  КАК Контрагент1,
	|	Контрагенты.Партнер                 КАК Партнер1,
	|	Контрагенты1.Ссылка                 КАК Контрагент2,
	|	Контрагенты1.Партнер                КАК Партнер2
	|	
	|ПОМЕСТИТЬ ВтСопоставления
	|	
	|ИЗ
	|	ВтОрганизацииЕГАИС КАК ВтОрганизацииЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ВтОрганизацииЕГАИС.ИНН = Контрагенты.ИНН
	|			И ВтОрганизацииЕГАИС.КПП = Контрагенты.КПП
	|			И (НЕ Контрагенты.ИНН = """")
	|			И (НЕ Контрагенты.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты1
	|		ПО ВтОрганизацииЕГАИС.ИНН = Контрагенты1.ИНН
	|			И (НЕ Контрагенты1.ИНН = """")
	|			И (НЕ Контрагенты1.ПометкаУдаления)
	|ГДЕ
	|	НЕ ВтОрганизацииЕГАИС.Сопоставлено
	|;
	|ВЫБРАТЬ
	|	ОрганизацииЕГАИС.ОрганизацияЕГАИС КАК ОрганизацияЕГАИС,
	|	ОрганизацииЕГАИС.Наименование     КАК Наименование,
	|	ОрганизацииЕГАИС.Партнер 	      КАК Партнер,
	|	ОрганизацииЕГАИС.Контрагент       КАК Контрагент,
	|	ОрганизацииЕГАИС.Сопоставлено     КАК Сопоставлено,
	|	ОрганизацииЕГАИС.ИНН              КАК ИНН,
	|	ОрганизацииЕГАИС.КПП              КАК КПП,
	|	ОрганизацииЕГАИС.НаименованиеПолное КАК НаименованиеПолное
	|ИЗ 
	|	ВтОрганизацииЕГАИС КАК ОрганизацииЕГАИС
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сопоставления.ОрганизацияЕГАИС                                КАК ОрганизацияЕГАИС,
	|	ЕстьNULL(Сопоставления.Контрагент1,Сопоставления.Контрагент2) КАК Контрагент,
	|	ЕстьNULL(Сопоставления.Партнер1,Сопоставления.Партнер2)       КАК Партнер
	|ИЗ 
	|	ВтСопоставления КАК Сопоставления
	|ГДЕ
	|	Сопоставления.Контрагент1 ЕСТЬ НЕ NULL
	|		ИЛИ Сопоставления.Контрагент2  ЕСТЬ НЕ NULL
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Сопоставления.ОрганизацияЕГАИС  КАК ОрганизацияЕГАИС,
	|	Сопоставления.НаименованиеЕГАИС КАК НаименованиеЕГАИС
	|ИЗ 
	|	ВтСопоставления КАК Сопоставления
	|ГДЕ
	|	Сопоставления.Контрагент1 ЕСТЬ NULL
	|		И Сопоставления.Контрагент2  ЕСТЬ NULL 
	|";
	Запрос.УстановитьПараметр("СписокТТН", ТоварноТранспортныеНакладные);
	Результат = Запрос.ВыполнитьПакет();
	
	КоличествоЗапросов = Результат.ВГраница();
	
	ТаблицаОрганизаций = Результат[КоличествоЗапросов-2].Выгрузить();
	Организации.Загрузить(ТаблицаОрганизаций);
	
	МассивНенайденных = Новый Массив;
	
	ТаблицаНайденных = Результат[КоличествоЗапросов-1].Выгрузить();
	ТаблицаНеНайденных = Результат[КоличествоЗапросов].Выгрузить();
	
	Для Каждого Стр из ТаблицаНеНайденных Цикл
		
		НайденныйКонтрагент = Справочники.Контрагенты.НайтиПоНаименованию(Стр.НаименованиеЕГАИС, Ложь);
		
		Если НЕ НайденныйКонтрагент.Пустая() Тогда
			НоваяСтрока = ТаблицаНайденных.Добавить();
			НоваяСтрока.ОрганизацияЕГАИС = Стр.ОрганизацияЕГАИС;
			НоваяСтрока.Контрагент = НайденныйКонтрагент;
			НоваяСтрока.Партнер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НайденныйКонтрагент, "Партнер");
		Иначе
			
			УпрощенноеНаименование = СтрЗаменить(Стр.НаименованиеЕГАИС,"""","");
	
			Если Лев(УпрощенноеНаименование,2) = "АО" ИЛИ Лев(УпрощенноеНаименование,2) = "СП" ИЛИ Лев(УпрощенноеНаименование,2) = "НП" Тогда	
				УпрощенноеНаименование = Прав(УпрощенноеНаименование,СтрДлина(УпрощенноеНаименование)-3);
			ИначеЕсли Лев(УпрощенноеНаименование,3) = "ОАО" ИЛИ Лев(УпрощенноеНаименование,3) = "ЗАО" ИЛИ Лев(УпрощенноеНаименование,3) = "ООО" Тогда
				УпрощенноеНаименование = Прав(УпрощенноеНаименование,СтрДлина(УпрощенноеНаименование)-4);
			КонецЕсли;
			
			НайденныйКонтрагент = Справочники.Контрагенты.НайтиПоНаименованию(УпрощенноеНаименование, Ложь);
			
			Если НЕ НайденныйКонтрагент.Пустая() Тогда
				НоваяСтрока = ТаблицаНайденных.Добавить();
				НоваяСтрока.ОрганизацияЕГАИС = Стр.ОрганизацияЕГАИС;
				НоваяСтрока.Контрагент = НайденныйКонтрагент;
				НоваяСтрока.Партнер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НайденныйКонтрагент, "Партнер");
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ОрганизацииДляВыбора.Загрузить(ТаблицаНайденных);
#КонецОбласти

#Область Номенклатура
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ 
	|	Товары.АлкогольнаяПродукция                          КАК ТоварТТН,
	|	Товары.АлкогольнаяПродукция.Объем                    КАК Объем,
	|	Товары.АлкогольнаяПродукция.Крепость                 КАК Крепость,
	|	Товары.АлкогольнаяПродукция.Наименование             КАК Наименование,
	|	ПОДСТРОКА(Товары.АлкогольнаяПродукция.НаименованиеПолное, 1, 255) КАК НаименованиеПолное,
	|	Товары.АлкогольнаяПродукция.ВидПродукции             КАК ВидПродукции,
	|	Товары.АлкогольнаяПродукция.Производитель.Контрагент КАК ПроизводительИБ,
	|	Товары.АлкогольнаяПродукция.Импортер.Контрагент      КАК ИмпортерИБ,
	|	Товары.АлкогольнаяПродукция.Производитель            КАК Производитель,
	|	Товары.АлкогольнаяПродукция.Импортер                 КАК Импортер,
	|	Товары.АлкогольнаяПродукция.Сопоставлено             КАК Сопоставлено,
	|	Товары.ИдентификаторУпаковки                         КАК ИдентификаторУпаковки,
	|	Товары.АлкогольнаяПродукция.Номенклатура             КАК Номенклатура,
	|	Товары.АлкогольнаяПродукция.Характеристика           КАК Характеристика
	|ПОМЕСТИТЬ ВтДанныеТТН
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В (&СписокТТН)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка                                 КАК Номенклатура,
	|	СправочникНоменклатура.Наименование                           КАК Наименование,
	|	СправочникНоменклатура.ВидАлкогольнойПродукции                КАК ВидАлкогольнойПродукции,
	|	СправочникНоменклатура.ПроизводительИмпортерДляДекларацийАлко КАК ПроизводительИмпортер,
	|	СправочникНоменклатура.ОбъемДАЛ                               КАК ОбъемДАЛ,
	|	СправочникНоменклатура.Крепость                               КАК Крепость
	|ПОМЕСТИТЬ ВтНоменклатура
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ГДЕ
	|	СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ СправочникНоменклатура.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДанныеТТН.ТоварТТН КАК ТоварТТН,
	|	ВтДанныеТТН.Наименование КАК Наименование
	|ИЗ
	|	ВтДанныеТТН КАК ВтДанныеТТН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтНоменклатура.Номенклатура КАК Номенклатура,
	|	ВтНоменклатура.Наименование КАК Наименование
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|";
	
	Запрос.УстановитьПараметр("СписокТТН", ТоварноТранспортныеНакладные);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ОбработатьРезультатЗапросаПоТоварам(Результат, МенеджерВременныхТаблиц);
	
#КонецОбласти
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыДляСопоставленияПоТоварам(Таблица)
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|ПОМЕСТИТЬ втТаблица
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.АлкогольнаяПродукция                          КАК ТоварТТН,
	|	Товары.АлкогольнаяПродукция.Объем                    КАК Объем,
	|	Товары.АлкогольнаяПродукция.Крепость                 КАК Крепость,
	|	Товары.АлкогольнаяПродукция.Наименование             КАК Наименование,
	|	ПОДСТРОКА(Товары.АлкогольнаяПродукция.НаименованиеПолное, 1, 255) КАК НаименованиеПолное,
	|	Товары.АлкогольнаяПродукция.ВидПродукции             КАК ВидПродукции,
	|	Товары.АлкогольнаяПродукция.Производитель.Контрагент КАК ПроизводительИБ,
	|	Товары.АлкогольнаяПродукция.Импортер.Контрагент      КАК ИмпортерИБ,
	|	Товары.АлкогольнаяПродукция.Производитель            КАК Производитель,
	|	Товары.АлкогольнаяПродукция.Импортер                 КАК Импортер,
	|	Товары.АлкогольнаяПродукция.Сопоставлено             КАК Сопоставлено,
	|	""""                                                 КАК ИдентификаторУпаковки,
	|	Товары.АлкогольнаяПродукция.Номенклатура             КАК Номенклатура,
	|	Товары.АлкогольнаяПродукция.Характеристика           КАК Характеристика
	|ПОМЕСТИТЬ ВтДанныеТТН
	|ИЗ
	|	втТаблица КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка                                 КАК Номенклатура,
	|	СправочникНоменклатура.Наименование                           КАК Наименование,
	|	СправочникНоменклатура.ВидАлкогольнойПродукции                КАК ВидАлкогольнойПродукции,
	|	СправочникНоменклатура.ПроизводительИмпортерДляДекларацийАлко КАК ПроизводительИмпортер,
	|	СправочникНоменклатура.ОбъемДАЛ                               КАК ОбъемДАЛ,
	|	СправочникНоменклатура.Крепость                               КАК Крепость
	|ПОМЕСТИТЬ ВтНоменклатура
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ГДЕ
	|	СправочникНоменклатура.АлкогольнаяПродукция
	|	И НЕ СправочникНоменклатура.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДанныеТТН.ТоварТТН КАК ТоварТТН,
	|	ВтДанныеТТН.Наименование КАК Наименование
	|ИЗ
	|	ВтДанныеТТН КАК ВтДанныеТТН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтНоменклатура.Номенклатура КАК Номенклатура,
	|	ВтНоменклатура.Наименование КАК Наименование
	|ИЗ
	|	ВтНоменклатура КАК ВтНоменклатура
	|");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Товары", Таблица);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ОбработатьРезультатЗапросаПоТоварам(Результат, МенеджерВременныхТаблиц);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьРезультатЗапросаПоТоварам(Результат, МенеджерВременныхТаблиц)
	
	КоличествоЗапросов = Результат.ВГраница();
	
	// Обработка наименований ТТН
	ТаблицаТоваровТТН = Результат[КоличествоЗапросов-1].Выгрузить();
	МассивНаименованийТТН = ТаблицаТоваровТТН.ВыгрузитьКолонку("Наименование");
	
	СтрокаНаименований = ЗначениеВСтрокуВнутр(МассивНаименованийТТН);
	СтрокаНаименований = СтрЗаменить(СтрокаНаименований," ","");
	СтрокаНаименований = ВРег(СтрокаНаименований);
	
	МассивПреобразованныхНаименованийТТН = ЗначениеИзСтрокиВнутр(СтрокаНаименований);
	
	ТаблицаТоваровТТН.ЗагрузитьКолонку(МассивПреобразованныхНаименованийТТН, "Наименование");
	
	// Обработка наименований номенклатуры
	ТаблицаНоменклатуры = Результат[КоличествоЗапросов].Выгрузить();

	МассивНаименований = ТаблицаНоменклатуры.ВыгрузитьКолонку("Наименование");
	
	СтрокаНаименований = ЗначениеВСтрокуВнутр(МассивНаименований);
	СтрокаНаименований = СтрЗаменить(СтрокаНаименований," ","");
	СтрокаНаименований = ВРег(СтрокаНаименований);
	
	МассивПреобразованныхНаименованийТТН = ЗначениеИзСтрокиВнутр(СтрокаНаименований);
	
	ТаблицаНоменклатуры.ЗагрузитьКолонку(МассивПреобразованныхНаименованийТТН, "Наименование");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ *
	|ПОМЕСТИТЬ ВТОбработанныеТоварыТТН
	|ИЗ &ТоварыТТН КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ *
	|ПОМЕСТИТЬ ВТОбработаннаяНоменклатура
	|ИЗ &Номенклатура КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	ВТОбработанныеТоварыТТН.ТоварТТН		КАК ТоварТТН,
	|	ВТОбработаннаяНоменклатура.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТСоответствияПоНаименованию
	|ИЗ
	|	ВТОбработанныеТоварыТТН
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОбработаннаяНоменклатура КАК ВТОбработаннаяНоменклатура
	|		ПО ВТОбработанныеТоварыТТН.Наименование = ВТОбработаннаяНоменклатура.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСоответствияПоНаименованию.ТоварТТН		КАК ТоварТТН,
	|	ВтНоменклатура.Номенклатура					КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ ВтДанныеТТН.ВидПродукции = ЗНАЧЕНИЕ(Справочник.ВидыАлкогольнойПродукции.ПустаяСсылка) 
	|				И ВтДанныеТТН.ВидПродукции = ВтНоменклатура.ВидАлкогольнойПродукции
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ +
	|	ВЫБОР
	|		КОГДА НЕ ВтДанныеТТН.ПроизводительИБ = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И ВтДанныеТТН.ПроизводительИБ = ВтНоменклатура.ПроизводительИмпортер
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ +
	|	ВЫБОР
	|		КОГДА НЕ ВтДанныеТТН.ИмпортерИБ = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) 
	|				И ВтДанныеТТН.ИмпортерИБ = ВтНоменклатура.ПроизводительИмпортер
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ +
	|	ВЫБОР
	|		КОГДА НЕ ВтДанныеТТН.Объем = 0 И (ВтДанныеТТН.Объем / 10) = ВтНоменклатура.ОбъемДАЛ
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ +
	|	ВЫБОР
	|		КОГДА НЕ ВтДанныеТТН.Крепость = 0 И ВтДанныеТТН.Крепость = ВтНоменклатура.Крепость
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Коэффициент
	|ПОМЕСТИТЬ ВтКоэффициентыСоответствия
	|ИЗ
	|	ВТСоответствияПоНаименованию КАК ВТСоответствияПоНаименованию
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеТТН КАК ВтДанныеТТН
	|		ПО ВтДанныеТТН.ТоварТТН = ВТСоответствияПоНаименованию.ТоварТТН
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтНоменклатура КАК ВтНоменклатура
	|		ПО ИСТИНА
	|		
	|ГДЕ
	|	ВТСоответствияПоНаименованию.Номенклатура ЕСТЬ NULL
	|	И ВЫБОР
	|		КОГДА НЕ ВтДанныеТТН.ВидПродукции = ЗНАЧЕНИЕ(Справочник.ВидыАлкогольнойПродукции.ПустаяСсылка) 
	|				И ВтДанныеТТН.ВидПродукции = ВтНоменклатура.ВидАлкогольнойПродукции
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	 КОНЕЦ +
	|	 ВЫБОР
	|		КОГДА НЕ ВтДанныеТТН.ПроизводительИБ = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|				И ВтДанныеТТН.ПроизводительИБ = ВтНоменклатура.ПроизводительИмпортер
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	 КОНЕЦ +
	|	 ВЫБОР
	|		КОГДА НЕ ВтДанныеТТН.ИмпортерИБ = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) 
	|				И ВтДанныеТТН.ИмпортерИБ = ВтНоменклатура.ПроизводительИмпортер
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	 КОНЕЦ +
	|	 ВЫБОР
	|		КОГДА НЕ ВтДанныеТТН.Объем = 0 И ВтДанныеТТН.Объем = ВтНоменклатура.ОбъемДАЛ
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	 КОНЕЦ +
	|	 ВЫБОР
	|		КОГДА НЕ ВтДанныеТТН.Крепость = 0 И ВтДанныеТТН.Крепость = ВтНоменклатура.Крепость
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	 КОНЕЦ > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТДанныеТТН.ТоварТТН              КАК НоменклатураЕГАИС,
	|	ВТДанныеТТН.Сопоставлено          КАК Сопоставлено,
	|	ВТДанныеТТН.ИдентификаторУпаковки КАК ИдентификаторУпаковки,
	|	ВТДанныеТТН.Номенклатура          КАК Номенклатура,
	|	ВТДанныеТТН.Характеристика        КАК Характеристика,
	|	УпаковкиЕГАИС.Упаковка            КАК Упаковка,
	|	ВтДанныеТТН.Наименование          КАК Наименование,
	|	ВтДанныеТТН.НаименованиеПолное    КАК ПолноеНаименование,
	|	ВтДанныеТТН.Объем                 КАК Объем,
	|	ВтДанныеТТН.Крепость              КАК Крепость,
	|	ВтДанныеТТН.Производитель         КАК Производитель,
	|	ВтДанныеТТН.Импортер              КАК Импортер,
	|	ВтДанныеТТН.ПроизводительИБ       КАК ПроизводительИБ,
	|	ВтДанныеТТН.ИмпортерИБ            КАК ИмпортерИБ,
	|	ВтДанныеТТН.ВидПродукции          КАК ВидАлкогольнойПродукции
	|ИЗ 
	|	ВТДанныеТТН КАК ВТДанныеТТН
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.Упаковки КАК УпаковкиЕГАИС
	|		ПО ВТДанныеТТН.ТоварТТН = УпаковкиЕГАИС.Ссылка
	|		 И ВТДанныеТТН.ИдентификаторУпаковки = УпаковкиЕГАИС.ИдентификаторУпаковки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	НоменклатураПоКоэффициентам.НоменклатураЕГАИС КАК НоменклатураЕГАИС,
	|	НоменклатураПоКоэффициентам.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(НоменклатураПоКоэффициентам.Коэффициент) КАК Коэффициент
	|ИЗ (ВЫБРАТЬ
	|		ВТСоответствияПоНаименованию.ТоварТТН     КАК НоменклатураЕГАИС,
	|		ВТСоответствияПоНаименованию.Номенклатура КАК Номенклатура,
	|		0                                         КАК Коэффициент
	|	ИЗ
	|		ВТСоответствияПоНаименованию КАК ВТСоответствияПоНаименованию
	|	ГДЕ
	|		ВТСоответствияПоНаименованию.Номенклатура ЕСТЬ НЕ NULL
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ВтКоэффициентыСоответствия.ТоварТТН     КАК НоменклатураЕГАИС,
	|		ВтКоэффициентыСоответствия.Номенклатура КАК Номенклатура,
	|		ВтКоэффициентыСоответствия.Коэффициент  КАК Коэффициент
	|	ИЗ
	|		ВтКоэффициентыСоответствия КАК ВтКоэффициентыСоответствия) КАК НоменклатураПоКоэффициентам
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураПоКоэффициентам.НоменклатураЕГАИС,
	|	НоменклатураПоКоэффициентам.Номенклатура
	|УПОРЯДОЧИТЬ ПО
	|	МАКСИМУМ(НоменклатураПоКоэффициентам.Коэффициент) УБЫВ
	|");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТоварыТТН", ТаблицаТоваровТТН);
	Запрос.УстановитьПараметр("Номенклатура", ТаблицаНоменклатуры);
	
	Результат = Запрос.ВыполнитьПакет();
	
	КоличествоЗапросов = Результат.ВГраница();
	
	ТаблицаТоваров = Результат[КоличествоЗапросов-1].Выгрузить();
	
	ТаблицаТоваров.Колонки.Добавить("НомерСтроки", ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15, 0));
	
	КоличествоСтрок = ТаблицаТоваров.Количество();
	Для НомерСтроки = 1 По КоличествоСтрок Цикл
		ТаблицаТоваров[НомерСтроки-1].НомерСтроки = НомерСтроки;
	КонецЦикла;
	
	Товары.Загрузить(ТаблицаТоваров);
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Товары,
		Новый Структура("ЗаполнитьПризнакХарактеристикиИспользуются",
		Новый Структура("Номенклатура", "ХарактеристикиИспользуются")));
	
	ТаблицаНайденных = Результат[КоличествоЗапросов].Выгрузить();
	
	НоменклатураДляВыбора.Загрузить(ТаблицаНайденных);
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьСпискиВыбораОрганизации(ТекущаяСтрока)
	
	СписокВыбораКонтрагент = Элементы.ОрганизацииКонтрагент.СписокВыбора;
	СписокВыбораКонтрагент.Очистить();
	
	СписокВыбораПартнер = Элементы.ОрганизацииПартнер.СписокВыбора;
	СписокВыбораПартнер.Очистить();
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ОрганизацияЕГАИС", ТекущаяСтрока.ОрганизацияЕГАИС);
	Если ЗначениеЗаполнено(ТекущаяСтрока.Партнер) Тогда
		СтруктураОтбора.Вставить("Партнер", ТекущаяСтрока.Партнер);
	КонецЕсли;
	
	НайденныеСтроки = ОрганизацииДляВыбора.НайтиСтроки(СтруктураОтбора);

	Для Каждого ТекСтрока Из НайденныеСтроки Цикл
		СписокВыбораКонтрагент.Добавить(ТекСтрока.Контрагент);
		
		Если СписокВыбораПартнер.НайтиПоЗначению(ТекСтрока.Партнер) = Неопределено Тогда
			СписокВыбораПартнер.Добавить(ТекСтрока.Партнер);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСпискиВыбораНоменклатуры(ТекущаяСтрока)
	
	СписокВыбораНоменклатура = Элементы.ТоварыНоменклатура.СписокВыбора;
	СписокВыбораНоменклатура.Очистить();
	
	ТекущаяНоменклатураЕГАИС = ТекущаяСтрока.НоменклатураЕГАИС;
	НайденныеСтроки = НоменклатураДляВыбора.НайтиСтроки(Новый Структура("НоменклатураЕГАИС", ТекущаяНоменклатураЕГАИС));
	Для Каждого ТекСтрока Из НайденныеСтроки Цикл
		СписокВыбораНоменклатура.Добавить(ТекСтрока.Номенклатура);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовкиСтраниц()
	
	СтруктураПоиска 	= Новый Структура("Контрагент", Справочники.Контрагенты.ПустаяСсылка());
	СтрокБезКонтрагента = Организации.НайтиСтроки(СтруктураПоиска).Количество();
	ВсегоСтрок 			= Организации.Количество();
	Заполнено			= ВсегоСтрок - СтрокБезКонтрагента;
	
	Элементы.СтраницаКлассификаторОрганизацийЕГАИС.Заголовок = "Организации ("+Строка(Заполнено)+" из "+Строка(ВсегоСтрок)+")";
	
	СтруктураПоиска 	= Новый Структура("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
	СтрокБезКонтрагента = Товары.НайтиСтроки(СтруктураПоиска).Количество();
	ВсегоСтрок 			= Товары.Количество();
	Заполнено			= ВсегоСтрок - СтрокБезКонтрагента;

	Элементы.СтраницаКлассификаторАлкогольнойПродукцииЕГАИС.Заголовок = "Алкогольная продукция ("+Строка(Заполнено)+" из "+Строка(ВсегоСтрок)+")";
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьОрганизацию(Идентификатор, Отказ)
	
	Строка = Организации.НайтиПоИдентификатору(Идентификатор);
	
	ОрганизацияЕГАИС = Строка.ОрганизацияЕГАИС.ПолучитьОбъект();
	ОрганизацияЕГАИС.Контрагент = Строка.Контрагент;
	ОрганизацияЕГАИС.ТорговыйОбъект = Строка.Партнер;
	
	Попытка 
		ОрганизацияЕГАИС.Записать();
	Исключение
		ТекстОшибки = НСтр("ru = 'Не удалось сопоставить организацию %1'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%1", ОрганизацияЕГАИС.Наименование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки + Символы.ПС + ОписаниеОшибки(),);
				
		Отказ = Истина;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьПродукцию(Идентификатор, Отказ)
	
	Строка = Товары.НайтиПоИдентификатору(Идентификатор);
		
	НоменклатураЕГАИС = Строка.НоменклатураЕГАИС.ПолучитьОбъект();
	НоменклатураЕГАИС.Номенклатура = Строка.Номенклатура;
	НоменклатураЕГАИС.Характеристика = Строка.Характеристика;
	
	Если НоменклатураЕГАИС.Упаковки.Количество() = 0 Тогда
		НоменклатураЕГАИС.Упаковки.Добавить();
	КонецЕсли;
	
	ЕдиницаИзмеренияНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.Номенклатура,"ЕдиницаИзмерения");
	
	СтруктураУпаковки = Новый Структура("ИдентификаторУпаковки", Строка.ИдентификаторУпаковки);
	СтрокиУпаковки = НоменклатураЕГАИС.Упаковки.НайтиСтроки(СтруктураУпаковки);
	Если СтрокиУпаковки.Количество() > 0 Тогда
		Для Каждого СтрокаУпаковки Из СтрокиУпаковки ЦИкл
			Если ЗначениеЗаполнено(Строка.Упаковка) Тогда
				СтрокаУпаковки.Упаковка = Строка.Упаковка;
			Иначе
				СтрокаУпаковки.Упаковка = ЕдиницаИзмеренияНоменклатуры;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Попытка 
		НоменклатураЕГАИС.Записать();
	Исключение
		ТекстОшибки = НСтр("ru = 'Не удалось сопоставить номенклатуру %1'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%1", НоменклатураЕГАИС.Наименование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки + Символы.ПС + ОписаниеОшибки(),);
				
		Отказ = Истина;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗаписатьДанные(Отказ = Ложь)
	
	НеСопоставленныеСтроки = Организации.НайтиСтроки(Новый Структура("ЕстьИзменения",Истина));
	
	Для Каждого Стр Из НеСопоставленныеСтроки Цикл
		
		Если ЗначениеЗаполнено(Стр.Партнер) И ЗначениеЗаполнено(Стр.Контрагент) Тогда
			
			ЗаписатьОрганизацию(Стр.ПолучитьИдентификатор(), Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	НеСопоставленныеСтроки = Товары.НайтиСтроки(Новый Структура("ЕстьИзменения",Истина));
	
	Для Каждого Стр Из НеСопоставленныеСтроки Цикл
		
		Если ЗначениеЗаполнено(Стр.Номенклатура)Тогда
			
			ЗаписатьПродукцию(Стр.ПолучитьИдентификатор(), Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаполнитьТаблицыДляСопоставления();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПартнераПоКонтрагенту(Идентификатор)
	
	Строка = Организации.НайтиПоИдентификатору(Идентификатор);
	
	Если ЗначениеЗаполнено(Строка.Контрагент) Тогда
		Строка.Партнер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.Контрагент, "Партнер");
	Иначе
		Строка.Партнер = Справочники.Партнеры.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборТовары()
	
	Если ТолькоНеСопоставленнаяНоменклатура Тогда
		Элементы.Товары.ОтборСтрок = Новый ФиксированнаяСтруктура("Сопоставлено", Ложь);
	Иначе
		Элементы.Товары.ОтборСтрок = Неопределено;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьОтборОрганизации()
	
	Если ТолькоНеСопоставленныеОрганизации Тогда
		Элементы.Организации.ОтборСтрок = Новый ФиксированнаяСтруктура("Сопоставлено", Ложь);
	Иначе
		Элементы.Организации.ОтборСтрок = Неопределено;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьКонтрагентаПартнераПоУмолчанию(Партнер)
	
	Возврат ПартнерыИКонтрагенты.ПолучитьКонтрагентаПартнераПоУмолчанию(Партнер);
	
КонецФункции

&НаСервере
Процедура ОбновитьДанныеОрганизации(ОрганизацияЕГАИС)
	
	СтрокиТЧ = Организации.НайтиСтроки(Новый Структура("ОрганизацияЕГАИС",ОрганизацияЕГАИС));
	
	РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОрганизацияЕГАИС,"Партнер, Контрагент");
	
	Для Каждого СтрокаОрганизаций Из СтрокиТЧ Цикл
		СтрокаОрганизаций.Партнер = РеквизитыОрганизации.Партнер;
		СтрокаОрганизаций.Контрагент = РеквизитыОрганизации.Контрагент;
		Если ЗначениеЗаполнено(СтрокаОрганизаций.Партнер) И ЗначениеЗаполнено(СтрокаОрганизаций.Контрагент) Тогда
			СтрокаОрганизаций.Сопоставлено = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеПродукции(НоменклатураЕГАИС)
	
	СтрокиТЧ = Товары.НайтиСтроки(Новый Структура("НоменклатураЕГАИС",НоменклатураЕГАИС));
	
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НоменклатураЕГАИС,"Номенклатура, Характеристика, Упаковки");
	
	УпаковкиНоменклатуры = РеквизитыНоменклатуры.Упаковки.Выгрузить();
	
	Для Каждого СтрокаТоваров Из СтрокиТЧ Цикл
		
		СтрокаТоваров.Номенклатура = РеквизитыНоменклатуры.Номенклатура;
		СтрокаТоваров.Характеристика = РеквизитыНоменклатуры.Характеристика;
		
		СтрокиУпаковки = УпаковкиНоменклатуры.НайтиСтроки(Новый Структура("ИдентификаторУпаковки",СтрокаТоваров.ИдентификаторУпаковки));
		
		Если СтрокиУпаковки.Количество() > 0 Тогда
			СтрокаТоваров.Упаковка = СтрокиУпаковки[0].Упаковка;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТоваров.Номенклатура) И ЗначениеЗаполнено(СтрокаТоваров.Характеристика) Тогда
			СтрокаТоваров.Сопоставлено = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
