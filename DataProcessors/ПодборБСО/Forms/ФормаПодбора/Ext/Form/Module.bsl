
&НаСервере
Процедура ЗаполнитьТаблицуБСО()
	Объект.ТаблицаБСО.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза", ОтборДата);
	Запрос.УстановитьПараметр("Склад", ОтборПоСкладу);
	Запрос.УстановитьПараметр("ФизическоеЛицо", ОтборФизическоеЛицо);
	Запрос.УстановитьПараметр("Тип", ОтборПоТипу);
	Запрос.УстановитьПараметр("Серия", ОтборСерия);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	БланкиСтрогойОтчетностиОстатки.Склад КАК Склад,
	|	БланкиСтрогойОтчетностиОстатки.ФизическоеЛицо КАК ФизическоеЛицо,
	|	БланкиСтрогойОтчетностиОстатки.Номенклатура КАК Номенклатура,
	|	БланкиСтрогойОтчетностиОстатки.Характеристика КАК Характеристика,
	|	БланкиСтрогойОтчетностиОстатки.Тип КАК Тип,
	|	БланкиСтрогойОтчетностиОстатки.Серия КАК Серия,
	|	БланкиСтрогойОтчетностиОстатки.КоличествоОстаток КАК Количество,
	|	БланкиСтрогойОтчетностиОстатки.СуммаОстаток КАК Сумма,
	|	БланкиСтрогойОтчетностиОстатки.Номер КАК НачальныйНомерБСО,
	|	БланкиСтрогойОтчетностиОстатки.Номер КАК КонечныйНомерБСО
	|ИЗ
	|	РегистрНакопления.БланкиСтрогойОтчетности.Остатки(
	|			&ДатаСреза,
	|			ИСТИНА
	|				И Склад = &Склад
	|				И ФизическоеЛицо = &ФизическоеЛицо
	|				И Тип = &Тип
	|				И Серия = &Серия
	|				И Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				И ФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК БланкиСтрогойОтчетностиОстатки";
	
	Если Не ЗначениеЗаполнено(ОтборПоСкладу) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Склад = &Склад", "");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОтборФизическоеЛицо) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ФизическоеЛицо = &ФизическоеЛицо", "");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОтборПоТипу) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Тип = &Тип", "");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОтборСерия) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Серия = &Серия", "");
	КонецЕсли;
	
	Если Не НеИспользоватьПустойСклад Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)", "");
	КонецЕсли;
	
	Если Не НеИспользоватьПустоеФизическоеЛицо Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)", "");
	КонецЕсли;
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Если ТЗ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТЗ = УчетБланковСтрогойОтчетностиСервер.СвернутьТаблицуБСО(ТЗ);
	
	Объект.ТаблицаБСО.Загрузить(ТЗ);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Параметры.Свойство("ТекущийРегистратор") Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Заголовок = ?(Параметры.Свойство("ТекущийРегистратор"), Строка(Параметры.ТекущийРегистратор), "");
	
	ИспользоватьСклад = Параметры.Свойство("ИспользоватьСклад") И Параметры.ИспользоватьСклад;
	Элементы.ОтборПоСкладу.Видимость = ИспользоватьСклад;
	Элементы.ТаблицаБСОСклад.Видимость = ИспользоватьСклад;
	Элементы.КорзинаСклад.Видимость = ИспользоватьСклад;
	
	ИспользоватьФизическоеЛицо = Параметры.Свойство("ИспользоватьФизическоеЛицо") И Параметры.ИспользоватьФизическоеЛицо;
	Элементы.ОтборФизическоеЛицо.Видимость = ИспользоватьФизическоеЛицо;
	Элементы.ТаблицаБСОФизическоеЛицо.Видимость = ИспользоватьФизическоеЛицо;
	Элементы.КорзинаФизическоеЛицо.Видимость = ИспользоватьФизическоеЛицо;
	
	Если Параметры.Свойство("Дата") Тогда
		Если Не НачалоДня(Параметры.Дата) = Параметры.Дата Или Параметры.Дата = '00010101' Тогда
			ОтборДата = Параметры.Дата;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("Склад") И ЗначениеЗаполнено(Параметры.Склад) Тогда
		ОтборПоСкладу = Параметры.Склад;
	КонецЕсли;
	
	Если Параметры.Свойство("ИспользоватьПустойСклад") И Не Параметры.ИспользоватьПустойСклад Тогда
		НеИспользоватьПустойСклад = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ФизическоеЛицо") И ЗначениеЗаполнено(Параметры.ФизическоеЛицо) Тогда
		ОтборФизическоеЛицо = Параметры.ФизическоеЛицо;
	КонецЕсли;
	
	Если Параметры.Свойство("ИспользоватьПустоеФизическоеЛицо") И Не Параметры.ИспользоватьПустоеФизическоеЛицо Тогда
		НеИспользоватьПустоеФизическоеЛицо = Истина;
	КонецЕсли;
	
	ЗаполнитьТаблицуБСО();
КонецПроцедуры

&НаСервере
Функция ЗаписатьПодборВХранилище(УникальныйИдентификаторВладельца)
	ТЗ = УчетБланковСтрогойОтчетностиСервер.СтруктураСлужебнойТаблицыБСО();
	
	Для каждого Стр Из Объект.Корзина Цикл
		НоваяСтрока = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
		НоваяСтрока.КоличествоУпаковок = Стр.Количество;
	КонецЦикла;
	
	ТЗ.ЗаполнитьЗначения(Справочники.Склады.ПустаяСсылка(), "Склад");
	
	Адрес = ПоместитьВоВременноеХранилище(ТЗ, УникальныйИдентификаторВладельца);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Адрес", Адрес);
	ДопПараметры.Вставить("УникальныйИдентификаторБСО", УникальныйИдентификаторВладельца);
	
	Возврат ДопПараметры;
КонецФункции

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	Закрыть();
	Если ТипЗнч(ВладелецФормы) = Тип("УправляемаяФорма") Тогда
		ОповеститьОВыборе(ЗаписатьПодборВХранилище(ВладелецФормы.УникальныйИдентификатор));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтборДатаПриИзменении(Элемент)
	ЗаполнитьТаблицуБСО();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоСкладуПриИзменении(Элемент)
	ЗаполнитьТаблицуБСО();
КонецПроцедуры

&НаКлиенте
Процедура ОтборФизическоеЛицоПриИзменении(Элемент)
	ЗаполнитьТаблицуБСО();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоТипуПриИзменении(Элемент)
	ЗаполнитьТаблицуБСО();
КонецПроцедуры

&НаКлиенте
Процедура ОтборСерияПриИзменении(Элемент)
	ЗаполнитьТаблицуБСО();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаБСОВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущаяСтрока = Элемент.ТекущиеДанные;
	ДобавитьСтрокуВКорзину(ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтрокуВКорзину(ТекущаяСтрока)
	Отбор = Новый Структура;
	Отбор.Вставить("ФизическоеЛицо", ТекущаяСтрока.ФизическоеЛицо);
	Отбор.Вставить("Номенклатура", ТекущаяСтрока.Номенклатура);
	Отбор.Вставить("Характеристика", ТекущаяСтрока.Характеристика);
	Отбор.Вставить("Тип", ТекущаяСтрока.Тип);
	Отбор.Вставить("Серия", ТекущаяСтрока.Серия);
	Отбор.Вставить("НачальныйНомерБСО", ТекущаяСтрока.НачальныйНомерБСО);
	Отбор.Вставить("КонечныйНомерБСО", ТекущаяСтрока.КонечныйНомерБСО);
	
	Строки = Объект.Корзина.НайтиСтроки(Отбор);
	Если Строки.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = Объект.Корзина.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура КорзинаПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	МассивИндексов = ПараметрыПеретаскивания.Значение;
	Для каждого Стр Из МассивИндексов Цикл
		Элементы.Список.ТекущаяСтрока = Стр;
		ТекущаяСтрока = Элементы.Список.ТекущиеДанные;
		ДобавитьСтрокуВКорзину(ТекущаяСтрока);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КорзинаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура БСОНачальныйКонечныйНомерКоличествоПриИзменении123(Элементы, Путь1, Путь2, ИмяТЧ = "Корзина") Экспорт
	ТекущиеДанные = Элементы[ИмяТЧ].ТекущиеДанные;
	ДлинаСтр = Макс(СтрДлина(ТекущиеДанные.НачальныйНомерБСО), СтрДлина(ТекущиеДанные.КонечныйНомерБСО));
	
	НачальныйНомер = ?(ПустаяСтрока(ТекущиеДанные.НачальныйНомерБСО), 1, Число(ТекущиеДанные.НачальныйНомерБСО));
	КонечныйНомер = ?(ПустаяСтрока(ТекущиеДанные.КонечныйНомерБСО), 1, Число(ТекущиеДанные.КонечныйНомерБСО));
	Количество = КонечныйНомер - НачальныйНомер + 1;
	
	Если Количество <= 0 Тогда
		ТекущиеДанные[Путь1] = ТекущиеДанные[Путь2];
		НачальныйНомер = ?(ПустаяСтрока(ТекущиеДанные.НачальныйНомерБСО), 1, Число(ТекущиеДанные.НачальныйНомерБСО));
		КонечныйНомер = ?(ПустаяСтрока(ТекущиеДанные.КонечныйНомерБСО), 1, Число(ТекущиеДанные.КонечныйНомерБСО));
		Количество = КонечныйНомер - НачальныйНомер + 1;
	КонецЕсли;
	
	ТекущиеДанные.Количество = Количество;
	
	Если НачальныйНомер > 0 Тогда
		ТекущиеДанные.НачальныйНомерБСО = УчетБланковСтрогойОтчетностиКлиентСервер.ОтформатироватьНомерБланка(НачальныйНомер, ДлинаСтр);
	Иначе
		ТекущиеДанные.НачальныйНомерБСО = "";
	КонецЕсли;
	
	Если КонечныйНомер > 0 Тогда
		ТекущиеДанные.КонечныйНомерБСО = УчетБланковСтрогойОтчетностиКлиентСервер.ОтформатироватьНомерБланка(КонечныйНомер, ДлинаСтр);
	Иначе
		ТекущиеДанные.КонечныйНомерБСО = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КорзинаКоличествоПриИзменении(Элемент)
	УчетБланковСтрогойОтчетностиКлиент.ПересчитатьНачальныйКонечныйНомерПриИзменении(Элементы, "Корзина", "НачальныйНомерБСО", "КонечныйНомерБСО", "Количество", "НачальныйНомерБСОПриИзменении");
КонецПроцедуры

&НаКлиенте
Процедура КорзинаНачальныйНомерБСОПриИзменении(Элемент)
	УчетБланковСтрогойОтчетностиКлиент.ПересчитатьНачальныйКонечныйНомерПриИзменении(Элементы, "Корзина", "НачальныйНомерБСО", "КонечныйНомерБСО", "Количество", "НачальныйНомерБСОПриИзменении");
КонецПроцедуры

&НаКлиенте
Процедура КорзинаКонечныйНомерБСОПриИзменении(Элемент)
	УчетБланковСтрогойОтчетностиКлиент.ПересчитатьНачальныйКонечныйНомерПриИзменении(Элементы, "Корзина", "НачальныйНомерБСО", "КонечныйНомерБСО", "Количество", "КонечныйНомерБСОПриИзменении");
КонецПроцедуры