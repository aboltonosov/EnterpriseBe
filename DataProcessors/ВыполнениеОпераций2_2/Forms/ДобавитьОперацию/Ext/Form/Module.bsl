
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗаполнитьРеквизитыФормыПоПараметрам() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	НастроитьЭлементыФормы();
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "Количество");
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьСообщениеОбОшибкеНажатие(Элемент)
	
	Элементы.ГруппаСообщениеОбОшибке.Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСообщениеОбОшибкеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗначенияЗаполнения = ЗначенияЗаполненияОперации(ЭтаФорма);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ПараметрыФормы.Вставить("ПроверитьПриОткрытии", Истина);
	
	ОткрытьФорму("Документ.ПроизводственнаяОперация2_2.ФормаОбъекта",
		ПараметрыФормы,
		ЭтотОбъект,
		,
		,
		,
		,
		РежимОткрытияОкнаФормы.Независимый);
		
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ТребуетсяРучноеЗаполнение = Ложь;
	
	Если Не ЗаписатьДанные(ТребуетсяРучноеЗаполнение) Тогда
		
		ОчиститьСообщения();
		
		ТекстСообщения = НСтр("ru='Ошибка создания производственной операции!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		Элементы.ГруппаСообщениеОбОшибке.Видимость = ТребуетсяРучноеЗаполнение;
		
		Возврат;
		
	КонецЕсли;
	
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ОчередьПроизводственныхОпераций"));
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбслуживаниеФормы

&НаСервере
Процедура НастроитьЭлементыФормы()
	
	// Связи параметров выбора рабочего центра
	#Область РабочийЦентр 
	
	МассивПараметров = Новый Массив;
	
	Если ВидРабочегоЦентра.Пустая() Тогда
		МассивПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.Подразделение", "Подразделение"));
	Иначе
		МассивПараметров.Добавить(Новый СвязьПараметраВыбора("Отбор.ВидРабочегоЦентра", "ВидРабочегоЦентра"));
	КонецЕсли;
	
	Элементы.РабочийЦентр.СвязиПараметровВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
	#КонецОбласти
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма);
	
	УстановитьЗаголовкиЭлементовФормы();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормы(Форма, СписокРеквизитов = "")

	Элементы = Форма.Элементы;
	
	Инициализация = ПустаяСтрока(СписокРеквизитов);
	СтруктураРеквизитов = Новый Структура(СписокРеквизитов);
	
	// Настройка элемента Количество
	Если Инициализация
		Или СтруктураРеквизитов.Свойство("КоличествоДоступно") Тогда
		
		Если Форма.РежимРаботы <> РежимРаботыОтметитьВыполнение() Тогда
			Элементы.Количество.МаксимальноеЗначение = Форма.КоличествоДоступно;
		Иначе
			Элементы.Количество.МаксимальноеЗначение = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
	// Настройка элемента ЕдиницаИзмеренияПредставление
	Если Инициализация
		Или СтруктураРеквизитов.Свойство("Количество") Тогда
		
		Форма.ЕдиницаИзмеренияПредставление = УправлениеПроизводствомКлиентСервер.ПредставлениеЕдиницыИзмеренияОперации(
			Форма.ЕдиницаИзмерения,
			Форма.Количество);
		
	КонецЕсли;
	
	// Настройка элемента ЕдиницаИзмеренияЗапланированоПредставление
	Если Инициализация
		Или СтруктураРеквизитов.Свойство("КоличествоЗапланировано") Тогда
			
		Форма.ЕдиницаИзмеренияЗапланированоПредставление = УправлениеПроизводствомКлиентСервер.ПредставлениеЕдиницыИзмеренияОперации(
			Форма.ЕдиницаИзмерения,
			Форма.КоличествоЗапланировано);
			
	КонецЕсли;
	
	// Настройка элемента ЕдиницаИзмеренияДоступноПредставление
	Если Инициализация
		Или СтруктураРеквизитов.Свойство("КоличествоДоступно") Тогда
		
		Форма.ЕдиницаИзмеренияДоступноПредставление = УправлениеПроизводствомКлиентСервер.ПредставлениеЕдиницыИзмеренияОперации(
			Форма.ЕдиницаИзмерения,
			Форма.КоличествоДоступно);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовкиЭлементовФормы()
	
	// Установка заголовка формы
	#Область ЗаголовокФормы
	
	Если РежимРаботы = РежимРаботыСоздать() Тогда
		ТекстЗаголовок = НСтр("ru = 'Создать операцию'");
	ИначеЕсли РежимРаботы = РежимРаботыПринятьВРаботу() Тогда
		ТекстЗаголовок = НСтр("ru = 'Принять в работу операцию'");
	ИначеЕсли РежимРаботы = РежимРаботыОтметитьВыполнение() Тогда
		ТекстЗаголовок = НСтр("ru = 'Отметить выполнение операции'");
	КонецЕсли;
	
	РеквизитыЭтапа = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Этап, "Номер,НаименованиеЭтапа"); 
	ПредставлениеЭтапа = Документы.ЭтапПроизводства2_2.ПредставлениеЭтапа(РеквизитыЭтапа);
	
	ТекстЗаголовок = ТекстЗаголовок + " (" + ПредставлениеЭтапа + ", " + Операция + ")";
	
	ЭтаФорма.АвтоЗаголовок = Ложь;
	ЭтаФорма.Заголовок = ТекстЗаголовок;
	
	#КонецОбласти
	
	// Установка заголовка поля "Количество доступно"
	#Область КоличествоДоступно
	
	Если РежимРаботы = РежимРаботыСоздать() Тогда
		ТекстЗаголовок = НСтр("ru = 'Ожидает создания'");
	Иначе
		ТекстЗаголовок = НСтр("ru = 'Можно выполнять'");
	КонецЕсли;
	
	Элементы.КоличествоДоступно.Заголовок = ТекстЗаголовок;
	
	#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#Область ДобавлениеОперации

&НаСервере
Функция ЗаписатьДанные(ТребуетсяРучноеЗаполнение = Ложь)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЗначенияЗаполнения = ЗначенияЗаполненияОперации(ЭтаФорма);
	
	НачатьТранзакцию();
	Попытка
		
		ЗаблокироватьОчередь(ЗначенияЗаполнения);
		
		Если Не ВыполнитьКонтрольОстатков(ЗначенияЗаполнения) Тогда
			
			ЗафиксироватьТранзакцию();
			
			ЗаполнитьРеквизитыФормыПоДаннымОперации();
			Возврат Ложь;
			
		КонецЕсли;
		
		ОперацияОбъект = СоздатьНовуюОперацию(ЗначенияЗаполнения);
		
		Если Не ОперацияОбъект.ПроверитьЗаполнение() Тогда
			
			ЗафиксироватьТранзакцию();
			
			ТребуетсяРучноеЗаполнение = Истина;
			Возврат Ложь;
			
		КонецЕсли;
		
		ОперацияОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru = 'Выполнение операции'",
				ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		Возврат Ложь;
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЗначенияЗаполненияОперации(Форма)
	
	СпособЗаполнения = "ЗаполнитьПоОперации";
	СтатусОперации = СтатусОперацииПоРежимуРаботы(Форма.РежимРаботы);
	
	ДанныеЗаполнения = Новый Структура;
	
	ДанныеЗаполнения.Вставить("СпособЗаполнения", СпособЗаполнения);
	ДанныеЗаполнения.Вставить("Статус", СтатусОперации);
	
	ДанныеЗаполнения.Вставить("Подразделение", Форма.Подразделение);
	ДанныеЗаполнения.Вставить("КлючОперации", Форма.Параметры.КлючОперации);
	
	ДанныеЗаполнения.Вставить("Исполнитель", Форма.Исполнитель);
	ДанныеЗаполнения.Вставить("ВидРабочегоЦентра", Форма.ВидРабочегоЦентра);
	ДанныеЗаполнения.Вставить("РабочийЦентр", Форма.РабочийЦентр);
	
	ДанныеЗаполнения.Вставить("Количество", Форма.Количество);

	Возврат ДанныеЗаполнения;

КонецФункции

&НаСервереБезКонтекста
Процедура ЗаблокироватьОчередь(ДанныеЗаполнения)
	
	РегистрыСведений.ОчередьПроизводственныхОпераций.ЗаблокироватьОчередьДляЗаписиПоКлючу(ДанныеЗаполнения.КлючОперации);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполнитьКонтрольОстатков(ДанныеЗаполнения)
	
	ДанныеОперации = ДанныеОперацииИзОчереди(ДанныеЗаполнения.КлючОперации);
	Если ДанныеОперации = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ДанныеЗаполнения.Статус = Перечисления.СтатусыПроизводственныхОпераций.Создана
			И ДанныеЗаполнения.Количество > ДанныеОперации.ОжиданиеСоздания
		ИЛИ ДанныеЗаполнения.Статус = Перечисления.СтатусыПроизводственныхОпераций.Выполняется
			И ДанныеЗаполнения.Количество > ДанныеОперации.МожноВыполнять Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьНовуюОперацию(ДанныеЗаполнения)
	
	Объект = Документы.ПроизводственнаяОперация2_2.СоздатьДокумент();
	
	Объект.Заполнить(ДанныеЗаполнения);
	
	Возврат Объект;
	
КонецФункции

#КонецОбласти

#Область Прочее

&НаКлиентеНаСервереБезКонтекста
Функция РежимРаботыСоздать()
	
	Возврат "Создать";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РежимРаботыПринятьВРаботу()
	
	Возврат "ПринятьВРаботу";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РежимРаботыОтметитьВыполнение()
	
	Возврат "ОтметитьВыполнение";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтатусОперацииПоРежимуРаботы(РежимРаботы)
	
	Если РежимРаботы = РежимРаботыСоздать() Тогда
		
		Возврат ПредопределенноеЗначение("Перечисление.СтатусыПроизводственныхОпераций.Создана");
		
	ИначеЕсли РежимРаботы = РежимРаботыПринятьВРаботу() Тогда
		
		Возврат ПредопределенноеЗначение("Перечисление.СтатусыПроизводственныхОпераций.Выполняется");
		
	ИначеЕсли РежимРаботы = РежимРаботыОтметитьВыполнение() Тогда
		
		Возврат ПредопределенноеЗначение("Перечисление.СтатусыПроизводственныхОпераций.Выполнена");
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ЗаполнитьРеквизитыФормыПоПараметрам()
	
	Этап     = Параметры.КлючОперации.Этап; 
	Операция = Параметры.КлючОперации.Операция;
	
	Если Этап.Пустая() Или Операция.Пустая() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не Параметры.Свойство("РежимРаботы", РежимРаботы) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Параметры.Свойство("РабочийЦентр") Тогда
		РабочийЦентр = Параметры.РабочийЦентр;
	КонецЕсли;
	
	ЗаполнитьРеквизитыФормыПоДаннымОперации();
	Если КоличествоДоступно = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Количество = КоличествоДоступно;
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма, "Количество");
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьРеквизитыФормыПоДаннымОперации()
	
	ДанныеОперации = ДанныеОперацииИзОчереди(Параметры.КлючОперации);
	Если ДанныеОперации = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(
		ЭтаФорма, 
		ДанныеОперации,
		"Подразделение,
		|МаршрутнаяКарта,
		|ВидРабочегоЦентра,
		|ЕдиницаИзмерения");
		
	Если РабочийЦентр.Пустая() Тогда
		РабочийЦентр = ДанныеОперации.РабочийЦентр;
	КонецЕсли;
	
	КоличествоЗапланировано = ДанныеОперации.Запланировано;
	
	Если РежимРаботы = РежимРаботыСоздать() Тогда
		КоличествоДоступно = ДанныеОперации.ОжиданиеСоздания;
	Иначе
		КоличествоДоступно = ДанныеОперации.МожноВыполнять;
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеОперацииИзОчереди(КлючОперации)
	
	Возврат РегистрыСведений.ОчередьПроизводственныхОпераций.ДанныеОперацииИзОчереди(КлючОперации);
	
КонецФункции

#КонецОбласти

#КонецОбласти
