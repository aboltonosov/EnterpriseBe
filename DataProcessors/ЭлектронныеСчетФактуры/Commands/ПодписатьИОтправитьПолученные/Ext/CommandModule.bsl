
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Обработчик = Новый ОписаниеОповещения("ПодписатьИОтправить", ЭтотОбъект);
	ЭлектронноеВзаимодействиеКлиентПереопределяемый.ВыполнитьПроверкуПроведенияДокументов(
		ПараметрКоманды, Обработчик, ПараметрыВыполненияКоманды.Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьИОтправить(МассивДокументов, ДополнительныеПараметры = Неопределено) Экспорт
	
	Попытка
		
		ТаблицаДанных = ПолучитьТаблицуЭД(МассивДокументов);
		
		Если ТаблицаДанных = Неопределено Тогда
			ШаблонСообщения = НСтр("ru='Отсутствуют сформированные электронные документы для отправки: %1'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, ОписаниеОшибки());
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;	
		
		EVatService = ЭлектронныеСчетаФактурыКлиент.ПодключитьEVatService();
		
		Если EVatService = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		Для Каждого ТекущаяСтрока Из ТаблицаДанных Цикл
			SignAndUpload(EVatService, ТекущаяСтрока);
		КонецЦикла;

		ШаблонСообщения = НСтр("ru='Обработано %1 документа(ов)'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, МассивДокументов.Количество());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		ЭлектронныеСчетаФактурыКлиент.ОтключитьEVatService(EVatService);
		
	Исключение
		ШаблонСообщения = НСтр("ru='Ошибка подписи и отправки документа с номером %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, ОписаниеОшибки());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецПопытки;
	
КонецПроцедуры	

&НаКлиенте
Процедура SignAndUpload(EVatService, ТекущаяСтрока)
	
	//Попытка
		
		ИмяФайлаXML = ПолучитьИмяВременногоФайла("xml");
		ДанныеЭД = ПолучитьИзВременногоХранилища(ПолучитьАдресДанныхЭД(ТекущаяСтрока));
		ДанныеЭД.Записать(ИмяФайлаXML);
		
		СтруктураЭД = Новый Структура;
		СтруктураЭД.Вставить("НомерЭД",     ТекущаяСтрока.НомерЭД);
		СтруктураЭД.Вставить("ИмяФайлаXML", ИмяФайлаXML);
		
		SignSendFile(EVatService, СтруктураЭД);			
	
		УдалитьФайлы(ИмяФайлаXML);	
		
	//Исключение
	//	
	//	ШаблонСообщения = НСтр("ru='Ошибка подписи и отправки документа с номером %1'");
	//	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, ОписаниеОшибки());
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	//	
	//КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура SignSendFile(EVatService, СтруктураЭД)
	
	InvVatXml = EVatService.GetEDoc(СтруктураЭД.НомерЭД); 
	Если InvVatXml = Неопределено Тогда
		ШаблонСообщения = НСтр("ru='Ошибка получения электронного документа по номеру %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, СтруктураЭД.НомерЭД);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;	
	
	VerifyAllSigns(InvVatXml, СтруктураЭД);
	
	res = InvVatXml.Sign(0);
	if res <> 0 then
		ШаблонСообщения = НСтр("ru='Ошибка выработки электронной подписи: %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, EVatService.LastError);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	endif;
	
	res = EVatService.SendEDoc(InvVatXml);
	if res = 0 then
		ШаблонСообщения = НСтр("ru='Электронный документ %1 отправлен на портал vat.gov.by'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, СтруктураЭД.НомерЭД);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	else 
		ШаблонСообщения = НСтр("ru='Ошибка отправки электронного документа %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, EVatService.LastError);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	endif;
	
	InvVatTicket = EVatService.Ticket;
	if InvVatTicket.Accepted <> 0 then
		ШаблонСообщения = НСтр("ru='Электронный документ %1 не принят порталом'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, EVatService.LastError);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;		
	endIf;
	
КонецПроцедуры	

&НаКлиенте
Процедура VerifyAllSigns(InvVatXml, СтруктураЭД)
	
	signCount = InvVatXml.GetSignCount;
	if signCount = 0 then
		
		ШаблонСообщения = НСтр("ru='В электронного документе %1 не содержится ЭЦП'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, СтруктураЭД.НомерЭД);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	else	
		
		For i = 0 to signCount - 1  Do
			
			oid = "2.5.4.3" ; //(commonName)
			str = InvVatXml.GetSignProperty(i, oid, 0);
			
			res = InvVatXml.VerifySign(i, 0);
			if res <> 0 then
				ШаблонСообщения = НСтр("ru='Ошибка проверки подписи электронного документа %1'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, СтруктураЭД.НомерЭД);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				Возврат;
			else
				СтруктураЭД.Вставить("ДатаПодписи", InvVatXml.GetSignProperty(i, "SIGNDATE", 0));
			endif;
			
		EndDo;
		
	endif;

КонецПроцедуры	

#Область Служебные

&НаСервере
Функция ПолучитьТаблицуЭД(Знач МассивДокументов)
	
	Возврат ЭлектронныеСчетаФактурыВызовСервера.ПолучитьТаблицуЭД(МассивДокументов);
	
КонецФункции

&НаСервере
Функция ПолучитьАдресДанныхЭД(Знач ТекущаяСтрока)
	
	ЭД = ЭлектронныеСчетаФактуры.ПолучитьЭДПоВладельцу(ТекущаяСтрока.СсылкаНаОбъект);
	ИмяФайла = ЭлектронныеСчетаФактуры.ПолучитьИмяФайлаДанныхЭД(ЭД);
	Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяФайла));
	
	Возврат Адрес; 
	
КонецФункции

#КонецОбласти