
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Обработчик = Новый ОписаниеОповещения("ПодписатьИОтправить", ЭтотОбъект);
	ЭлектронноеВзаимодействиеКлиентПереопределяемый.ВыполнитьПроверкуПроведенияДокументов(
		ПараметрКоманды, Обработчик, ПараметрыВыполненияКоманды.Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьИОтправить(МассивДокументов, ДополнительныеПараметры = Неопределено) Экспорт
	
	Попытка
		
		СоответствиеМакетовXSD = Новый Соответствие;
		ТаблицаДанных = ПолучитьТаблицуЭД(МассивДокументов, СоответствиеМакетовXSD);
		
		Если ТаблицаДанных = Неопределено Тогда
			ШаблонСообщения = НСтр("ru='Отсутсвуют сформированные документы для отправки: %1'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, ОписаниеОшибки());
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;	
		
		Для Каждого МакетXSD Из СоответствиеМакетовXSD Цикл
			ИмяФайлаСхемы =  ПолучитьИмяВременногоФайла("xsd");
			МакетXSD.Значение.Записать(ИмяФайлаСхемы);
			СоответствиеМакетовXSD[МакетXSD.Ключ] =  ИмяФайлаСхемы;
		КонецЦикла; 
		
		EVatService = ЭлектронныеСчетаФактурыКлиент.ПодключитьEVatService();
		
		Если EVatService = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		Для Каждого ТекущаяСтрока Из ТаблицаДанных Цикл
			SignAndUpload(EVatService, ТекущаяСтрока, СоответствиеМакетовXSD);
		КонецЦикла;

		ШаблонСообщения = НСтр("ru='Обработано %1 документа(ов)'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, МассивДокументов.Количество());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		ЭлектронныеСчетаФактурыКлиент.ОтключитьEVatService(EVatService);
		
	Исключение
		ШаблонСообщения = НСтр("ru='Ошибка подписи и отправки документа с номером %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, ОписаниеОшибки());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецПопытки;
	
КонецПроцедуры	

&НаКлиенте
Процедура SignAndUpload(EVatService, ТекущаяСтрока, СоответствиеМакетовXSD)
	
	Попытка
		
		ИмяФайлаXML = ПолучитьИмяВременногоФайла("xml");
		ДанныеЭД = ПолучитьИзВременногоХранилища(ПолучитьАдресДанныхЭД(ТекущаяСтрока));
		ДанныеЭД.Записать(ИмяФайлаXML);

		ИмяФайлаXSD  = СоответствиеМакетовXSD.Получить(ТекущаяСтрока.Схема);
		
		СтруктураЭД = Новый Структура;
		СтруктураЭД.Вставить("НомерЭД",             ТекущаяСтрока.НомерЭД);
		СтруктураЭД.Вставить("ИмяФайлаСхемы",       ИмяФайлаXSD);
		СтруктураЭД.Вставить("ИмяФайлаXML",         ИмяФайлаXML);
		
		SignSendFile(EVatService, СтруктураЭД);			
	
		УдалитьФайлы(ИмяФайлаXML);	
		
	Исключение
		
		ШаблонСообщения = НСтр("ru='Ошибка подписи и отправки документа с номером %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, ОписаниеОшибки());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура SignSendFile(EVatService, СтруктураЭД) Экспорт
	
	//EDocStatusInfo = EVatService.GetStatus(СтруктураЭД.НомерЭД);
	//Если EDocStatusInfo <> Неопределено Тогда
	//	ШаблонСообщения = НСтр("ru='Документ с номером %1 уже существует на портале vat.gov.by'");
	//	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, СтруктураЭД.НомерЭД);
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	//	Возврат;
	//КонецЕсли;	 
	
	InvVatXml = EVatService.CreateEDoc;
	res = InvVatXml.Document.LoadFromFile(СтруктураЭД.ИмяФайлаXML);
	if res <> 0 then
		ШаблонСообщения = НСтр("ru='Ошибка чтения электронного документа %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, EVatService.LastError);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	endif;
	
	res = InvVatXml.Document.ValidateXML(СтруктураЭД.ИмяФайлаСхемы, 0);
	if res <> 0 then
		ШаблонСообщения = НСтр("ru='Не соответствует требуемой схеме электронного документа: %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, EVatService.LastError);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	endif;
	
	res = InvVatXml.Sign(0);
	if res <> 0 then
		ШаблонСообщения = НСтр("ru='Ошибка выработки электронной подписи: %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, EVatService.LastError);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	endif;
	
	res = EVatService.SendEDoc(InvVatXml);
	if res = 0 then
		ТекстСообщения = НСтр("ru='Документ отправлен на портал vat.gov.by'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	else	
		ШаблонСообщения = НСтр("ru='Ошибка отправки подписанного документа: %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, EVatService.LastError);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	endif;
	
	InvVatTicket = EVatService.Ticket;
	if InvVatTicket.Accepted <> 0 then
		ШаблонСообщения = НСтр("ru='Документ не принят порталом: %1'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, InvVatTicket.Message);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	endif;  
		
КонецПроцедуры	

#Область Служебные

&НаСервере
Функция ПолучитьТаблицуЭД(Знач МассивДокументов, СоответствиеМакетовXSD)
	
	Возврат ЭлектронныеСчетаФактурыВызовСервера.ПолучитьТаблицуЭД(МассивДокументов, СоответствиеМакетовXSD);
	
КонецФункции

&НаСервере
Функция ПолучитьАдресДанныхЭД(Знач ТекущаяСтрока)
	
	ЭД = ЭлектронныеСчетаФактуры.ПолучитьЭДПоВладельцу(ТекущаяСтрока.СсылкаНаОбъект);
	ИмяФайла = ЭлектронныеСчетаФактуры.ПолучитьИмяФайлаДанныхЭД(ЭД);
	Адрес = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяФайла));
	
	Возврат Адрес; 
	
КонецФункции

#КонецОбласти

