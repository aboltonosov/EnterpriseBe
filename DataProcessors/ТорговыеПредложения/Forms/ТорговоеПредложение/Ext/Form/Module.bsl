
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УникальныйИдентификаторКорзины = Параметры.УникальныйИдентификаторКорзины;
	Параметры.Свойство("ПредложениеИдентификатор", ПредложениеИдентификатор);
	Параметры.Свойство("Номенклатура", ИсточникНоменклатура); 
	Параметры.Свойство("Характеристика", ИсточникХарактеристика);
	ПрочитатьТорговоеПредложение();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьВКорзину(Команда)
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("УникальныйИдентификаторКорзины", УникальныйИдентификаторКорзины);
	ПараметрыОповещения.Вставить("ПредложениеИдентификатор", ПредложениеИдентификатор);
	ПараметрыОповещения.Вставить("ПоставщикИдентификатор", ПоставщикИдентификатор);
	Если ЗначениеЗаполнено(ИсточникНоменклатура) Тогда
		ПараметрыОповещения.Вставить("Номенклатура", ИсточникНоменклатура);
	КонецЕсли;
	Если ЗначениеЗаполнено(ИсточникХарактеристика) Тогда
		ПараметрыОповещения.Вставить("Характеристика", ИсточникХарактеристика);
	КонецЕсли;
	Оповестить("ТорговыеПредложения_ИзменитьКоличествоВКорзине", ПараметрыОповещения);
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрочитатьТорговоеПредложение()
	
	Отказ = Ложь;
	ПараметрыЗапроса = Новый Структура("Характеристики");
	ТорговоеПредложение = ТорговыеПредложения.ПрочитатьТорговоеПредложение(ПредложениеИдентификатор, ПараметрыЗапроса, Отказ);
	
	Если Отказ ИЛИ ТорговоеПредложение = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка получения карточки торгового предложения из сервиса 1С:Бизнес-сеть.'");
	КонецЕсли;
	
	Наименование = ТорговоеПредложение.name;
	Описание = ТорговоеПредложение.description;
	Цена = ТорговоеПредложение.price/100;
	
	ТорговоеПредложение.Свойство("feature", Характеристика);
	ТорговоеПредложение.Свойство("categoryID", ИдентификаторКатегории);
	
	Если ТорговоеПредложение.Свойство("vendor") 
		И Не ТорговоеПредложение.campaign = Неопределено Тогда
		ТорговоеПредложение.vendor.Свойство("inn", КонтрагентИНН);
		ТорговоеПредложение.vendor.Свойство("kpp", КонтрагентКПП);
		Если КонтрагентКПП = "0" Тогда
			КонтрагентКПП = "";
		КонецЕсли;
		ТорговоеПредложение.vendor.Свойство("title", Поставщик);
		ПоставщикИдентификатор = КонтрагентИНН + ?(ЗначениеЗаполнено(КонтрагентКПП), "_" + КонтрагентКПП, "");
	КонецЕсли;
	
	Заголовок = СтрШаблон(НСтр("ru = '%1, %2 (Торговое предложение)'"),
		Наименование,
		Поставщик);
	
	Если ТорговоеПредложение.Свойство("campaign") 
		И Не ТорговоеПредложение.campaign = Неопределено Тогда 
		Если ТорговоеПредложение.campaign.Свойство("contactInfo")
			И Не ТорговоеПредложение.campaign.contactInfo = Неопределено Тогда 
			Если ТорговоеПредложение.campaign.contactInfo.Свойство("organization")
				И Не ТорговоеПредложение.campaign.contactInfo.organization = Неопределено Тогда 
				ТорговоеПредложение.campaign.contactInfo.organization.Свойство("phone", КонтрагентТелефон);
				ТорговоеПредложение.campaign.contactInfo.organization.Свойство("email", КонтрагентПочта);
			КонецЕсли;
			Если ТорговоеПредложение.campaign.contactInfo.Свойство("person")
				И Не ТорговоеПредложение.campaign.contactInfo.person = Неопределено Тогда 
				ТорговоеПредложение.campaign.contactInfo.person.Свойство("name", КонтрагентКонтактноеЛицо);
				ТорговоеПредложение.campaign.contactInfo.person.Свойство("phone", КонтрагентКонтактноеЛицоТелефон);
				ТорговоеПредложение.campaign.contactInfo.person.Свойство("email", КонтрагентКонтактноеЛицоПочта);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ТорговоеПредложение.Свойство("Характеристики") Тогда 
		Характеристики.Загрузить(ТорговоеПредложение.Характеристики);
	КонецЕсли;
	
	Если ТорговоеПредложение.Свойство("vendorCode")
		И Не ТорговоеПредложение.vendorCode = Неопределено Тогда
		Артикул = ТорговоеПредложение.vendorCode;
	КонецЕсли;
	
	Если ТорговоеПредложение.Свойство("barcodes")
		И Не ТорговоеПредложение.barcodes = Неопределено Тогда
		Для Каждого ШтрихКод Из ТорговоеПредложение.barcodes Цикл
			ШтрихКоды.Добавить(ШтрихКод);
		КонецЦикла;
	КонецЕсли;
	
	ТорговоеПредложение.Свойство("deliveryTime", Поставка);
	ТорговоеПредложение.Свойство("unit", ЕдиницаИзмерения);
	КодВалюты = "";
	ТорговоеПредложение.Свойство("currency", КодВалюты);
	
	УстановитьПривилегированныйРежим(Истина);
	ВалютаСКодом = СтрШаблон(НСтр("ru = 'Валюта <%1>'"), КодВалюты);
	Валюта = Справочники.Валюты.НайтиПоКоду(Формат(КодВалюты,"ЧГ="));
	Валюта = ?(Валюта.Пустая(), ВалютаСКодом, Валюта);
	УстановитьПривилегированныйРежим(Ложь);
	
	// Получение списка групп номенклатуры
	Если Не ПустаяСтрока(ИдентификаторКатегории) Тогда
		
		Результат = Неопределено;
		ПараметрыКоманды = Новый Структура;
		ПараметрыКоманды.Вставить("ИдентификаторыКатегории", "[" + ИдентификаторКатегории + "]");
		ТорговыеПредложения.ВыполнитьКомандуРубрикатора("ПолучитьЦепочкуКатегорийДоКорневой", ПараметрыКоманды, Результат, Отказ);
		
		Если Отказ ИЛИ Результат = Неопределено ИЛИ Результат.КодСостояния <> 200 Тогда
			Возврат;
		КонецЕсли;
		
		Индекс = 0;
		Для Каждого Значение Из Результат.Данные[0] Цикл
			ГруппаТоваров = Значение.title + ?(ПустаяСтрока(ГруппаТоваров), "", " \ ") + ГруппаТоваров;
		КонецЦикла;
		
	КонецЕсли;
	
	ЗаполнитьМакет();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМакет()
	
	Макет = Обработки.ТорговыеПредложения.ПолучитьМакет("ПФ_MXL_КарточкаТорговогоПредложения");
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьЗначенияСвойств(Шапка.Параметры, ЭтотОбъект);
	Шапка.Параметры.Поставка = ?(Поставка = "0", НСтр("ru = 'В наличии'"), Поставка + " " + НСтр("ru = 'дн.'")); // Дней.
	Карточка.Вывести(Шапка);
	
	Если Характеристики.Количество() Тогда
		Карточка.Вывести(Макет.ПолучитьОбласть("СвойстваШапка"));
		Для Каждого Свойство Из Характеристики Цикл 
			СвойстваСтрока = Макет.ПолучитьОбласть("СвойстваСтрока");
			ЗаполнитьЗначенияСвойств(СвойстваСтрока.Параметры, Свойство);
			Карточка.Вывести(СвойстваСтрока);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КарточкаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если Элемент.ТекущаяОбласть.Имя = "Поставщик" Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьПрофильПоставщика();
	ИначеЕсли Элемент.ТекущаяОбласть.Имя = "ГруппаТоваров" Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФормуПоиска();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПрофильПоставщика()
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ИНН", КонтрагентИНН);
	ПараметрыОткрытия.Вставить("КПП", КонтрагентКПП);
	БизнесСетьКлиент.ОткрытьПрофильУчастника(ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуПоиска()
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ИдентификаторКатегории", ИдентификаторКатегории);
	ПараметрыОткрытия.Вставить("СтрокаПоиска", Наименование);
	ОткрытьФорму("Обработка.ТорговыеПредложения.Форма.ПоискПредложенийПоСтроке", ПараметрыОткрытия);
	
	// Дополнительно оповестим формы, если форма поиска ранее была открыта.
	Оповестить("ОбновитьСписокТорговыхПредложенийПоПараметрам", ПараметрыОткрытия, ЭтаФорма);

КонецПроцедуры

#КонецОбласти