
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст
//                           ошибки).
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя
//                           области в которой был выведен объект).
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПриказОбОрганизацииВоинскогоУчета") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"ПФ_MXL_ПриказОбОрганизацииВоинскогоУчета", НСтр("ru = 'Приказ об организации воинского учета'"),
						ПечатнаяФормаПриказаОбОрганизацииВоинскогоУчета(МассивОбъектов, ОбъектыПечати), ,
						"Обработка.ПечатьФормВоинскогоУчета.ПФ_MXL_ПриказОбОрганизацииВоинскогоУчета");
	КонецЕсли;
						
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПФ_MXL_ПланРаботыПоОсуществлениюВоинскогоУчета") Тогда 
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм,
						"ПФ_MXL_ПланРаботыПоОсуществлениюВоинскогоУчета", НСтр("ru = 'План работы по осуществлению воинского учета'"),
						ПечатнаяФормаПланаРаботыПоОсуществлениюВоинскогоУчета(МассивОбъектов, ОбъектыПечати), ,
						"Обработка.ПечатьФормВоинскогоУчета.ПФ_MXL_ПланРаботыПоОсуществлениюВоинскогоУчета");
	КонецЕсли;
	
КонецПроцедуры

Функция ПустаяСтруктураДанныхДляПечатиСреднегоДенежногоДовольствия() Экспорт
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("РеквизитыДокумента", ПустаяСтруктураРеквизитовДокументаДляПечатиСреднегоДенежногоДовольствия());
	СтруктураДанных.Вставить("КадровыеДанныеСотрудника", ПустаяСтруктураКадровыхДанныхСотрудникаДляПечатиСреднегоДенежногоДовольствия());
	СтруктураДанных.Вставить("ПараметрыРасчета", Новый Структура);
	СтруктураДанных.Вставить("ДанныеРасчетаСреднего", Новый Структура);
	
	Возврат СтруктураДанных;
	
КонецФункции

Функция ПустаяСтруктураРеквизитовДокументаДляПечатиСреднегоДенежногоДовольствия()
	
	СтруктураДанных = Новый Структура;
	
	СтруктураДанных.Вставить("Ссылка");
	СтруктураДанных.Вставить("Сотрудник");
	СтруктураДанных.Вставить("НомерДокумента");
	СтруктураДанных.Вставить("ДатаДокумента");
	СтруктураДанных.Вставить("ДатаНачалаОтсутствия");
	СтруктураДанных.Вставить("ДатаОкончанияОтсутствия");
	СтруктураДанных.Вставить("ПолноеНаименованиеОрганизации");
	СтруктураДанных.Вставить("НаименованиеОрганизации");
	
	Возврат СтруктураДанных;

КонецФункции

Функция ПустаяСтруктураКадровыхДанныхСотрудникаДляПечатиСреднегоДенежногоДовольствия()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ФизическоеЛицо");
	СтруктураДанных.Вставить("ФИОПолные");
	СтруктураДанных.Вставить("ТабельныйНомер");
	СтруктураДанных.Вставить("Подразделение");
	СтруктураДанных.Вставить("Должность");
	СтруктураДанных.Вставить("ВидЗанятости");
	
	Возврат СтруктураДанных;

КонецФункции


Функция ТабличныйДокументРасчетаСреднегоЗаработка(ДанныеДокументов, ОбъектыПечати, ВыводитьЗаголовок = Истина) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасчетСреднегоДенежногоДовольствия";
	
	Для каждого ДанныеДокумента Из ДанныеДокументов Цикл
				
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВывестиТабличныйДокументРасчетаСреднегоЗаработка(ДанныеДокумента, ОбъектыПечати, ТабличныйДокумент, ВыводитьЗаголовок);
		
		Обработки.ПечатьРасчетаСреднегоЗаработка.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеДокумента.РеквизитыДокумента.Ссылка, ДанныеДокумента.РеквизитыДокумента.Сотрудник);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции 

Процедура ВывестиТабличныйДокументРасчетаСреднегоЗаработка(ДанныеДокумента, ОбъектыПечати, ТабличныйДокумент, ВыводитьЗаголовок)
	
	ОбластиМакета = ОбластиМакетаСреднегоЗаработка();
	
	ДанныеОЗаработке = ПреобразоватьДанныеОЗаработкеВТаблицыЗначений(ДанныеДокумента.ДанныеРасчетаСреднего.Заработок);	
	ОтработанноеВремя = ПреобразоватьДанныеОВремениВТаблицуЗначений(ДанныеДокумента.ДанныеРасчетаСреднего.ОтработанноеВремя);

	Если ВыводитьЗаголовок Тогда
		ВывестиШапку(ТабличныйДокумент, ОбластиМакета.Шапка, ДанныеДокумента.РеквизитыДокумента, ДанныеДокумента.КадровыеДанныеСотрудника, ДанныеДокумента.ПараметрыРасчета);
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(ОбластиМакета.ЗаголовокНачислений);
	
	ВывестиРабочееМесто(ТабличныйДокумент, ОбластиМакета.ОбластьРабочееМесто, ДанныеДокумента.КадровыеДанныеСотрудника);
	
	ВывестиЗаработокЗаРасчетныйПериод(ТабличныйДокумент, ОбластиМакета.ОбластьШапкаЗаработка, ОбластиМакета.ОбластьСтрокаЗаработка, ОбластиМакета.ОбластьПодвалЗаработка, ДанныеОЗаработке);
	
	ВывестиОтработанноеВремя(ТабличныйДокумент, ОбластиМакета.ОбластьШапкаОтработанногоВремени, ОбластиМакета.ОбластьСтрокаОтработанногоВремени, ОбластиМакета.ОбластьПодвалОтработанногоВремени, ОтработанноеВремя);
	
	ВывестиРасчетСреднегоЗаработка(ТабличныйДокумент, ОбластиМакета.ОбластьРасчетСреднегоЗаработка, ДанныеДокумента.ДанныеРасчетаСреднего);

	
КонецПроцедуры

Процедура ВывестиШапку(ТабличныйДокумент, ОбластьШапка, РеквизитыДокумента, КадровыеДанныеСотрудника, ПараметрыРасчета)
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("СинонимДокумента", 			РеквизитыДокумента.Ссылка.Метаданные().Синоним);
	ЗначенияПараметров.Вставить("НомерДокумента", 				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.НомерДокумента, Истина, Истина));
	ЗначенияПараметров.Вставить("ДатаДокумента", 				Формат(РеквизитыДокумента.ДатаДокумента, "ДЛФ=DD"));
	ЗначенияПараметров.Вставить("ДатаНачалаОтсутствия", 		Формат(РеквизитыДокумента.ДатаНачалаОтсутствия, "ДЛФ=D"));
	ЗначенияПараметров.Вставить("ДатаОкончанияОтсутствия", 		Формат(РеквизитыДокумента.ДатаОкончанияОтсутствия,"ДЛФ=D"));
	ЗначенияПараметров.Вставить("НаименованиеОрганизации", 		?(ЗначениеЗаполнено(РеквизитыДокумента.ПолноеНаименованиеОрганизации), РеквизитыДокумента.ПолноеНаименованиеОрганизации, РеквизитыДокумента.НаименованиеОрганизации)); 		
	ЗначенияПараметров.Вставить("ФИОРаботника", 				КадровыеДанныеСотрудника.ФИОПолные);
	ЗначенияПараметров.Вставить("ТабельныйНомер", 				ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(КадровыеДанныеСотрудника.ТабельныйНомер, Истина, Истина));
	
	ЗначенияПараметров.Вставить("ДатаНачалаРасчетногоПериода", 		Формат(ПараметрыРасчета.ПериодРасчетаСреднегоЗаработкаНачало,"ДЛФ=D"));
	ЗначенияПараметров.Вставить("ДатаОкончанияРасчетногоПериода", 	Формат(ПараметрыРасчета.ПериодРасчетаСреднегоЗаработкаОкончание,"ДЛФ=D"));
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ЗначенияПараметров);
	ТабличныйДокумент.Вывести(ОбластьШапка);
КонецПроцедуры

Процедура ВывестиРабочееМесто(ТабличныйДокумент, ОбластьРабочееМесто, КадровыеДанныеСотрудника)
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ВидЗанятости", 	КадровыеДанныеСотрудника.ВидЗанятости);
	ЗначенияПараметров.Вставить("Подразделение", 	КадровыеДанныеСотрудника.Подразделение);
	ЗначенияПараметров.Вставить("Должность", 		КадровыеДанныеСотрудника.Должность);
	
	ЗаполнитьЗначенияСвойств(ОбластьРабочееМесто.Параметры, ЗначенияПараметров);
	ТабличныйДокумент.Вывести(ОбластьРабочееМесто);
КонецПроцедуры

Процедура ВывестиЗаработокЗаРасчетныйПериод(ТабличныйДокумент, ОбластьШапкаЗаработка, ОбластьСтрокаЗаработка, ОбластьПодвалЗаработка, ДанныеОЗаработке)
	
	ЗначенияПараметров = Новый Структура;	
	Для каждого СтрокаЗаработка Из ДанныеОЗаработке Цикл
				
		ОбластьШапкаЗаработка.Параметры.ВидЗаработка = Метаданные.Перечисления.ПорядокВхожденияВРасчетПособияПоУходуЗаРебенкомВоеннослужащим.ЗначенияПеречисления[СтрокаЗаработка.Ключ].Синоним;		
		ТабличныйДокумент.Вывести(ОбластьШапкаЗаработка);
	
		Для Каждого СтрокаМесяцаЗаработка Из СтрокаЗаработка.Значение Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрокаЗаработка.Параметры, СтрокаМесяцаЗаработка);			
			ЗначенияПараметров.Очистить();
			ЗначенияПараметров.Вставить("Месяц", Формат(СтрокаМесяцаЗаработка.Месяц, "ДФ='MMMM yyyy'"));
			ЗаполнитьЗначенияСвойств(ОбластьСтрокаЗаработка.Параметры, ЗначенияПараметров);
			ТабличныйДокумент.Вывести(ОбластьСтрокаЗаработка);
		КонецЦикла;
		
		ЗначенияПараметров.Очистить();
		ЗначенияПараметров.Вставить("Учтено", УчетСреднегоЗаработкаКлиентСервер.ИтогиПоПолю(СтрокаЗаработка.Значение, "Учтено"));
		ЗаполнитьЗначенияСвойств(ОбластьПодвалЗаработка.Параметры, ЗначенияПараметров);
		ТабличныйДокумент.Вывести(ОбластьПодвалЗаработка);
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ВывестиОтработанноеВремя(ТабличныйДокумент, ОбластьШапкаОтработанногоВремени, ОбластьСтрокаОтработанногоВремени, ОбластьПодвалОтработанногоВремени, ОтработанноеВремя)
	ЗначенияПараметров = Новый Структура;
	
	ТабличныйДокумент.Вывести(ОбластьШапкаОтработанногоВремени);
	
	Для каждого СтрокаОтработанноеВремя Из ОтработанноеВремя Цикл
		ЗаполнитьЗначенияСвойств(ОбластьСтрокаОтработанногоВремени.Параметры, СтрокаОтработанноеВремя);
		ЗначенияПараметров.Очистить();
		ЗначенияПараметров.Вставить("Месяц", Формат(СтрокаОтработанноеВремя.Месяц, "ДФ='MMMM yyyy'"));
		ЗаполнитьЗначенияСвойств(ОбластьСтрокаОтработанногоВремени.Параметры, ЗначенияПараметров);
		ТабличныйДокумент.Вывести(ОбластьСтрокаОтработанногоВремени);
	КонецЦикла;
	
	ЗначенияПараметров.Очистить();
	ЗначенияПараметров.Вставить("ОтработаноДнейКалендарных",	УчетСреднегоЗаработкаКлиентСервер.ИтогиПоПолю(ОтработанноеВремя, "ОтработаноДнейКалендарных"));
	ЗначенияПараметров.Вставить("Учтено", 						УчетСреднегоЗаработкаКлиентСервер.ИтогиПоПолю(ОтработанноеВремя, "Учтено"));
	ЗаполнитьЗначенияСвойств(ОбластьПодвалОтработанногоВремени.Параметры, ЗначенияПараметров);
	ТабличныйДокумент.Вывести(ОбластьПодвалОтработанногоВремени);
	
КонецПроцедуры

Процедура ВывестиРасчетСреднегоЗаработка(ТабличныйДокумент, ОбластьРасчетСреднегоЗаработка, ДанныеРасчетаСреднего)
		
	ЗначенияПараметров = Новый Структура;
	
	ЗначенияПараметров.Вставить("УчтеноВремени", 	УчетСреднегоЗаработкаКлиентСервер.ИтогиПоПолю(ДанныеРасчетаСреднего.ОтработанноеВремя, "Учтено")); 
	ЗначенияПараметров.Вставить("УчтеноЗаработок", 	УчетСреднегоЗаработкаКлиентСервер.ИтогиПоПолю(ДанныеРасчетаСреднего.Заработок, "Учтено"));
	ЗначенияПараметров.Вставить("СреднедневнойЗаработок", УчетСреднегоЗаработкаКлиентСервер.СреднийЗаработок(ЗначенияПараметров.УчтеноЗаработок, ЗначенияПараметров.УчтеноВремени)); 
	
	ЗаполнитьЗначенияСвойств(ОбластьРасчетСреднегоЗаработка.Параметры, ЗначенияПараметров);
	ТабличныйДокумент.Вывести(ОбластьРасчетСреднегоЗаработка);
	
КонецПроцедуры

Функция ОбластиМакетаСреднегоЗаработка()
	
	ОбластиМакета = Новый Структура;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьФормВоинскогоУчета.ПФ_MXL_РасчетСреднегоДенежногоДовольствияПособий");
	
	ОбластиМакета.Вставить("Шапка", 							Макет.ПолучитьОбласть("Заголовок")); 
	ОбластиМакета.Вставить("ЗаголовокНачислений", 				Макет.ПолучитьОбласть("ЗаголовокНачислений")); 
	ОбластиМакета.Вставить("ОбластьРасчетСреднегоЗаработка", 	Макет.ПолучитьОбласть("РасчетСреднегоЗаработка"));
	ОбластиМакета.Вставить("ОбластьШапкаЗаработка",  			Макет.ПолучитьОбласть("ЗаработокШапка"));
	ОбластиМакета.Вставить("ОбластьСтрокаЗаработка",  			Макет.ПолучитьОбласть("ЗаработокСтрока"));
	ОбластиМакета.Вставить("ОбластьПодвалЗаработка",  			Макет.ПолучитьОбласть("ЗаработокПодвал"));
	ОбластиМакета.Вставить("ОбластьРабочееМесто",  				Макет.ПолучитьОбласть("РабочееМесто"));
	
	ОбластиМакета.Вставить("ОбластьШапкаОтработанногоВремени",  Макет.ПолучитьОбласть("ОтработанноеВремяШапка"));
	ОбластиМакета.Вставить("ОбластьСтрокаОтработанногоВремени", Макет.ПолучитьОбласть("ОтработанноеВремяСтрока"));
	ОбластиМакета.Вставить("ОбластьПодвалОтработанногоВремени", Макет.ПолучитьОбласть("ОтработанноеВремяПодвал"));
	
	Возврат ОбластиМакета;
	
КонецФункции

Функция МассивСтруктурВТаблицуЗначений(МассивСтруктур)
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	
	Если МассивСтруктур.Количество() = 0 Тогда
		Возврат ТаблицаЗначений;
	КонецЕсли;
	
	Для каждого Свойство Из МассивСтруктур[0] Цикл
		ТаблицаЗначений.Колонки.Добавить(Свойство.Ключ);
	КонецЦикла;
	
	Для каждого Элемент Из МассивСтруктур Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаЗначений.Добавить(), Элемент);
	КонецЦикла;
	
	Возврат ТаблицаЗначений;
	
КонецФункции

Функция ПреобразоватьДанныеОЗаработкеВТаблицыЗначений(ДанныеОЗаработке)
	
	ЗаработокСРазбивкой = Новый Соответствие();
	Для Каждого ПорядокВхожденияВРасчетСреднегоДенежногоДовольствия Из Перечисления.ПорядокВхожденияВРасчетПособияПоУходуЗаРебенкомВоеннослужащим Цикл
		ЗаработокСРазбивкой.Вставить(ПорядокВхожденияВРасчетСреднегоДенежногоДовольствия, Новый Массив);	
	КонецЦикла;
	
	Для каждого СтрокаЗаработка Из ДанныеОЗаработке Цикл
		ЗаработокСРазбивкой[СтрокаЗаработка.СоставнаяЧасть].Добавить(СтрокаЗаработка);
	КонецЦикла;		
	
	СтруктураРезультат = Новый Структура;
	
	Для Каждого ЭлементЗаработка ИЗ ЗаработокСРазбивкой Цикл
		ТаблицаЗаработка = МассивСтруктурВТаблицуЗначений(ЭлементЗаработка.Значение);		
		Если ТаблицаЗаработка.Количество() > 0 Тогда
			ТаблицаЗаработка.Сортировать("Месяц");	
			СтруктураРезультат.Вставить(ОбщегоНазначения.ИмяЗначенияПеречисления(ЭлементЗаработка.Ключ),ТаблицаЗаработка);	
		КонецЕсли;		
	КонецЦикла;
	
	Возврат СтруктураРезультат;
	
КонецФункции

Функция ПреобразоватьДанныеОВремениВТаблицуЗначений(ОтработанноеВремя)
	
	ОтработанноеВремя = МассивСтруктурВТаблицуЗначений(ОтработанноеВремя);  	
	Если ОтработанноеВремя.Количество() > 0 Тогда
		ОтработанноеВремя.Сортировать("Месяц");		
	КонецЕсли;
	
	Возврат ОтработанноеВремя;	
	
КонецФункции


#Область ПроцедурыФункцииПечатиБланковВоинскогоУчета

Функция ПечатнаяФормаПриказаОбОрганизацииВоинскогоУчета(МассивОрганизаций, ОбъектыПечати)

	Если Не ЗначениеЗаполнено(МассивОрганизаций) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПриказОбОрганизацииВоинскогоУчета";
	ТабДокумент.Защита = Ложь;
	
	Для Каждого Организация Из МассивОрганизаций Цикл 
		
		ПараметрыЗаполненияПодписантов = ПараметрыПодписантов(Организация);
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьФормВоинскогоУчета.ПФ_MXL_ПриказОбОрганизацииВоинскогоУчета");
		
		ОбластьМакета = Макет.ПолучитьОбласть("Приказ");
		РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "Наименование, НаименованиеПолное");
		ОбластьМакета.Параметры.ПолноеНаименованиеОрганизации = ?(ЗначениеЗаполнено(РеквизитыОрганизации.НаименованиеПолное), РеквизитыОрганизации.НаименованиеПолное, РеквизитыОрганизации.Наименование);
		
		ОбластьМакета.Параметры.Заполнить(ПараметрыЗаполненияПодписантов);
		ТабДокумент.Вывести(ОбластьМакета);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Организация);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатнаяФормаПланаРаботыПоОсуществлениюВоинскогоУчета(МассивОрганизаций, ОбъектыПечати) 

	Если Не ЗначениеЗаполнено(МассивОрганизаций) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПланРаботыПоОсуществлениюВоинскогоУчета";
	ТабДокумент.Защита = Ложь;
	
	Для Каждого Организация Из МассивОрганизаций Цикл 
		
		ПараметрыЗаполненияПодписантов = ПараметрыПодписантов(Организация);
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьФормВоинскогоУчета.ПФ_MXL_ПланРаботыПоОсуществлениюВоинскогоУчета");
		
		Страница1 = Макет.ПолучитьОбласть("Страница1");
		Страница2 = Макет.ПолучитьОбласть("Страница2");
		
		РеквизитыОрганизации = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "Наименование, НаименованиеПолное");
		Страница1.Параметры.ПолноеНаименованиеОрганизации = ?(ЗначениеЗаполнено(РеквизитыОрганизации.НаименованиеПолное), РеквизитыОрганизации.НаименованиеПолное, РеквизитыОрганизации.Наименование);
		
		Страница1.Параметры.Заполнить(ПараметрыЗаполненияПодписантов);
		ТабДокумент.Вывести(Страница1);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		Страница2.Параметры.Заполнить(ПараметрыЗаполненияПодписантов);
		ТабДокумент.Вывести(Страница2);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Организация);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПараметрыПодписантов(Организация)
	
	ПараметрыЗаполнения = Новый Структура("Организация", Организация);
	ПараметрыЗаполнения.Вставить("Руководитель");
	ПараметрыЗаполнения.Вставить("РуководительКадровойСлужбы");
	ПараметрыЗаполнения.Вставить("ДолжностьРуководителяКадровойСлужбыСтрокой");
	ПараметрыЗаполнения.Вставить("ОтветственныйЗаВУР");
	ПараметрыЗаполнения.Вставить("ДолжностьОтветственногоЗаВУРСтрокой");
	
	ЗарплатаКадры.ПолучитьЗначенияПоУмолчанию(ПараметрыЗаполнения, ТекущаяДатаСеанса());
	
	МассивОтветственных = Новый Массив;
	
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Руководитель) Тогда
		МассивОтветственных.Добавить(ПараметрыЗаполнения.Руководитель);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.РуководительКадровойСлужбы) Тогда
		МассивОтветственных.Добавить(ПараметрыЗаполнения.РуководительКадровойСлужбы);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.ОтветственныйЗаВУР) Тогда
		МассивОтветственных.Добавить(ПараметрыЗаполнения.ОтветственныйЗаВУР);
	КонецЕсли;
	
	Если МассивОтветственных.Количество() > 0 Тогда
		
		ФИОФизЛиц = ЗарплатаКадры.СоответствиеФИОФизЛицСсылкам(ТекущаяДатаСеанса(), МассивОтветственных);
		
		Если ЗначениеЗаполнено(ПараметрыЗаполнения.Руководитель) Тогда
			ПараметрыЗаполнения.Вставить("РуководительРасшифровкаПодписи",
				ФизическиеЛицаЗарплатаКадры.РасшифровкаПодписи(ФИОФизЛиц[ПараметрыЗаполнения.Руководитель]));
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ПараметрыЗаполнения.РуководительКадровойСлужбы) Тогда
			
			ФИО = ФИОФизЛиц[ПараметрыЗаполнения.РуководительКадровойСлужбы];
			
			ПараметрыЗаполнения.Вставить("РуководительКадровойСлужбыРасшифровкаПодписи",
				ФизическиеЛицаЗарплатаКадры.РасшифровкаПодписи(ФИО));
				
			ФИОПолные = ФИО.Фамилия + " " + ФИО.Имя + " " + ФИО.Отчество;
			ФИОПросклоненные = "";
			Если ФизическиеЛицаЗарплатаКадры.Просклонять(Строка(ФИОПолные), 3, ФИОПросклоненные) Тогда
				ФИОПолные = ФИОПросклоненные;
			КонецЕсли;
			
			ПараметрыЗаполнения.Вставить("ФИОРуководительКадровойСлужбы",
				ФИОПолные);
			
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ПараметрыЗаполнения.ОтветственныйЗаВУР) Тогда
			
			ФИО = ФИОФизЛиц[ПараметрыЗаполнения.ОтветственныйЗаВУР];
			
			ПараметрыЗаполнения.Вставить("ОтветственныйЗаВУРРасшифровкаПодписи",
				ФизическиеЛицаЗарплатаКадры.РасшифровкаПодписи(ФИО));
				
			ФИОПолные = ФИО.Фамилия + " " + ФИО.Имя + " " + ФИО.Отчество;
			ФИОПросклоненные = "";
			Если ФизическиеЛицаЗарплатаКадры.Просклонять(Строка(ФИОПолные), 2, ФИОПросклоненные) Тогда
				ФИОПолные = ФИОПросклоненные;
			КонецЕсли;
			
			ПараметрыЗаполнения.Вставить("ФИООтветственныйЗаВУР",
				ФИОПолные);
			
		КонецЕсли; 
		
	КонецЕсли; 
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли