
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураБыстрогоОтбора = Неопределено;
	Параметры.Свойство("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
	
	Если СтруктураБыстрогоОтбора <> Неопределено Тогда
		СтруктураБыстрогоОтбора.Свойство("Организация", Организация);
		СтруктураБыстрогоОтбора.Свойство("НМА", НМА);
		СтруктураБыстрогоОтбора.Свойство("Тип", Тип);
	КонецЕсли;
	
	ОтборыСписковКлиентСервер.ОтборПоЗначениюСпискаПриСозданииНаСервере(
		Список,
		"Организация",
		Организация,
		СтруктураБыстрогоОтбора);
		
	ОтборыСписковКлиентСервер.ОтборПоЗначениюСпискаПриСозданииНаСервере(
		Список,
		"Тип",
		Тип,
		СтруктураБыстрогоОтбора,
		Тип.Количество() > 0,
		ВидСравненияКомпоновкиДанных.ВСписке);
	
	Список.Параметры.УстановитьЗначениеПараметра("НМА", НМА);
	Список.Параметры.УстановитьЗначениеПараметра("ЗаданНМА", ЗначениеЗаполнено(НМА));
	
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеОтчетыИОбработкиКлиентСервер.ТипФормыСписка());
	
	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список.Дата", Элементы.Дата.Имя);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОтборыСписковКлиентСервер.ОтборПоЗначениюСпискаПриЗагрузкеИзНастроек(
		Список,
		"Организация",
		Организация,
		СтруктураБыстрогоОтбора,
		Настройки);
	
	Если Настройки["Тип"] <> Неопределено Тогда
		ИспользованиеЭлементаОтбора = Настройки["Тип"].Количество() > 0;
	КонецЕсли;
	
	ОтборыСписковКлиентСервер.ОтборПоЗначениюСпискаПриЗагрузкеИзНастроек(
		Список,
		"Тип",
		Тип,
		СтруктураБыстрогоОтбора,
		Настройки,
		ИспользованиеЭлементаОтбора,
		ВидСравненияКомпоновкиДанных.ВСписке);
	
	Список.Параметры.УстановитьЗначениеПараметра("НМА", НМА);
	Список.Параметры.УстановитьЗначениеПараметра("ЗаданНМА", ЗначениеЗаполнено(НМА));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "ОбщаяФорма.ФормаОтметкиЭлементов" Тогда
		ВыполнитьПослеЗакрытияСпискаВыбора(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		Организация = ОбщегоНазначенияБПКлиент.ИзменитьОтборПоОсновнойОрганизации(Список, ,Параметр);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Организация", Организация, ЗначениеЗаполнено(Организация));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНМАПриИзменении(Элемент)
	
	Список.Параметры.УстановитьЗначениеПараметра("НМА", НМА);
	Список.Параметры.УстановитьЗначениеПараметра("ЗаданНМА", ЗначениеЗаполнено(НМА));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоТипуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = ПолучитьЗначенияСписка();
	
	Для каждого Элемент Из Тип Цикл
		ЭлементСписка = СписокВыбора.НайтиПоЗначению(Элемент.Значение);
		Если ЭлементСписка <> Неопределено Тогда
			ЭлементСписка.Пометка = Элемент.Пометка;
		КонецЕсли;
	КонецЦикла;
	
	СписокВыбора.СортироватьПоПредставлению();
	
	ОткрытьФорму("ОбщаяФорма.ФормаОтметкиЭлементов",Новый Структура("СписокЗначений", СписокВыбора),ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоТипуОчистка(Элемент, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Тип",
		Тип,
		ВидСравненияКомпоновкиДанных.ВСписке,,
		Ложь);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьВнутреннееПотребление(Команда)
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ХозяйственнаяОперация", ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию"));
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Документ.ВнутреннееПотреблениеТоваров.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоступлениеУслугПрочихАктивов(Команда)
	
	ОткрытьФорму("Документ.ПоступлениеУслугПрочихАктивов.ФормаОбъекта");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПринятиеКУчету(Команда)
	
	ОткрытьФорму("Документ.ПринятиеКУчетуНМА.ФормаОбъекта");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьИзменениеПараметров(Команда)
	ОткрытьФорму("Документ.ИзменениеПараметровНМА.ФормаОбъекта");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВыработку(Команда)
	ОткрытьФорму("Документ.ВыработкаНМА.ФормаОбъекта");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПодготовкуКПередаче(Команда)
	ОткрытьФорму("Документ.ПодготовкаКПередачеНМА.ФормаОбъекта");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРеализациюУслугПрочихАктивов(Команда)
	ОткрытьФорму("Документ.РеализацияУслугПрочихАктивов.ФормаОбъекта");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСписание(Команда)
	ОткрытьФорму("Документ.СписаниеНМА.ФормаОбъекта");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПереоценку(Команда)
	ОткрытьФорму("Документ.ПереоценкаНМА.ФормаОбъекта");
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияМФУ(Команда)
	
	//++ НЕ УТКА
	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	
	ПараметрыОтбора = Новый Структура("Регистратор", ТекущаяСтрока);
	ПараметрыФормы = Новый Структура("Отбор", ПараметрыОтбора);
	ОткрытьФорму("РегистрБухгалтерии.Международный.Форма.ПроводкиМеждународногоУчета", ПараметрыФормы, ЭтаФорма, ЭтаФорма);
	
	//-- НЕ УТКА
	
	Возврат; // Пустой обработчик для УТ и КА
	
КонецПроцедуры

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец МенюОтчеты

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыполнитьПослеЗакрытияСпискаВыбора(СписокВыбора)

	Если СписокВыбора <> Неопределено Тогда
		
		Для каждого ЭлементСписка Из СписокВыбора Цикл
			
			НайденноеЗначение = Тип.НайтиПоЗначению(ЭлементСписка.Значение);
			
			Если ЭлементСписка.Пометка и НайденноеЗначение = Неопределено Тогда
				НайденноеЗначение = Тип.Добавить();
				ЗаполнитьЗначенияСвойств(НайденноеЗначение,ЭлементСписка);
			КонецЕсли;
			
			Если Не ЭлементСписка.Пометка и НайденноеЗначение <> Неопределено Тогда
				Тип.Удалить(НайденноеЗначение);
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Тип",
		Тип,
		ВидСравненияКомпоновкиДанных.ВСписке,,
		Тип.Количество() > 0);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначенияСписка()
	
	СписокВыбора = Новый СписокЗначений();
	
	Для Каждого ОписаниеМетаданныхДокумента Из Метаданные.ЖурналыДокументов.ДокументыПоНМА.РегистрируемыеДокументы Цикл
		СписокВыбора.Добавить(Тип("ДокументСсылка." + ОписаниеМетаданныхДокумента.Имя), ОписаниеМетаданныхДокумента.Синоним);
	КонецЦикла;
	
	Возврат СписокВыбора;

КонецФункции

#КонецОбласти

