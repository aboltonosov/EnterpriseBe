
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураБыстрогоОтбора = Неопределено;
	Параметры.Свойство("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
	
	Если СтруктураБыстрогоОтбора <> Неопределено Тогда
		СтруктураБыстрогоОтбора.Свойство("Организация", ОтборОрганизация);
		СтруктураБыстрогоОтбора.Свойство("Подразделение", ОтборПодразделение);
		СтруктураБыстрогоОтбора.Свойство("Ответственный", ОтборОтветственный);
		СтруктураБыстрогоОтбора.Свойство("Операции", ОтборОперации);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Организация", ОтборОрганизация,,, ЗначениеЗаполнено(ОтборОрганизация));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Подразделение", ОтборПодразделение,,, ЗначениеЗаполнено(ОтборПодразделение));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Ответственный", ОтборОтветственный,,, ЗначениеЗаполнено(ОтборОтветственный));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Операции", ОтборОперации, ВидСравненияКомпоновкиДанных.ВСписке,, ОтборОперации.Количество()<>0);
	
	ОперацииЖурнала.Очистить();
	ОперацииЖурнала.Добавить(Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление"), НСтр("ru='Заказ на передачу в эксплуатацию'"));
	ОперацииЖурнала.Добавить(Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров"), НСтр("ru='Передача в эксплуатацию'"));
	ОперацииЖурнала.Добавить(Тип("ДокументСсылка.ПеремещениеВЭксплуатации"), НСтр("ru='Перемещение в эксплуатации'"));
	ОперацииЖурнала.Добавить(Тип("ДокументСсылка.СписаниеИзЭксплуатации"), НСтр("ru='Списание из эксплуатации'"));
	ОперацииЖурнала.Добавить(Тип("ДокументСсылка.РегистрацияНаработокТМЦВЭксплуатации"), НСтр("ru='Регистрация наработок'"));
	ОперацииЖурнала.Добавить(Тип("ДокументСсылка.ПрочееОприходованиеТоваров"), НСтр("ru='Возврат из эксплуатации'"));
	
	ЕстьПравоСоздатьЗаказ = ПравоДоступа("Добавление", Метаданные.Документы.ЗаказНаВнутреннееПотребление);
	ЕстьПравоСоздатьПередачу = ПравоДоступа("Добавление", Метаданные.Документы.ВнутреннееПотреблениеТоваров);
	ЕстьПравоСоздатьПеремещение = ПравоДоступа("Добавление", Метаданные.Документы.ПеремещениеВЭксплуатации);
	ЕстьПравоСоздатьСписание = ПравоДоступа("Добавление", Метаданные.Документы.СписаниеИзЭксплуатации);
	ЕстьПравоСоздатьВозврат = ПравоДоступа("Добавление", Метаданные.Документы.ПрочееОприходованиеТоваров);
	ЕстьПравоСоздатьРегистрациюНаработок = ПравоДоступа("Добавление", Метаданные.Документы.РегистрацияНаработокТМЦВЭксплуатации);
	
	Элементы.СоздатьЗаказ.Видимость = ЕстьПравоСоздатьЗаказ;
	Элементы.СоздатьПередачу.Видимость = ЕстьПравоСоздатьПередачу;
	Элементы.СоздатьПеремещение.Видимость = ЕстьПравоСоздатьПеремещение;
	Элементы.СоздатьСписание.Видимость = ЕстьПравоСоздатьСписание;
	Элементы.СоздатьВозврат.Видимость = ЕстьПравоСоздатьВозврат;
	Элементы.СоздатьРегистрациюНаработок.Видимость = ЕстьПравоСоздатьРегистрациюНаработок;
	
	Элементы.Скопировать.Видимость = ЕстьПравоСоздатьЗаказ Или ЕстьПравоСоздатьПередачу
		Или ЕстьПравоСоздатьПеремещение Или ЕстьПравоСоздатьСписание
		Или ЕстьПравоСоздатьВозврат Или ЕстьПравоСоздатьРегистрациюНаработок;
		
	ИспользоватьНесколькоОрганизаций = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	Элементы.Организация.Видимость = ИспользоватьНесколькоОрганизаций;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	ОтборОрганизация = Настройки.Получить("ОтборОрганизация");
	Настройки.Удалить("ОтборОрганизация");
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Организация", ОтборОрганизация,,, ЗначениеЗаполнено(ОтборОрганизация));
	
	ОтборПодразделение = Настройки.Получить("ОтборПодразделение");
	Настройки.Удалить("ОтборПодразделение");
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Подразделение", ОтборПодразделение,,, ЗначениеЗаполнено(ОтборПодразделение));
	
	ОтборОтветственный = Настройки.Получить("ОтборОтветственный");
	Настройки.Удалить("ОтборОтветственный");
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Ответственный", ОтборОтветственный,,, ЗначениеЗаполнено(ОтборОтветственный));
	
	ОтборОперации = Настройки.Получить("ОтборОперации");
	Настройки.Удалить("ОтборОперации");
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Тип", ОтборОперации, ВидСравненияКомпоновкиДанных.ВСписке,, ОтборОперации.Количество()<>0);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Организация", ОтборОрганизация,,, ЗначениеЗаполнено(ОтборОрганизация));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Подразделение", ОтборПодразделение,,, ЗначениеЗаполнено(ОтборПодразделение));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОтветственныйПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Ответственный", ОтборОтветственный,,, ЗначениеЗаполнено(ОтборОтветственный));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОперацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Для каждого Элемент Из ОперацииЖурнала Цикл
		НайденныйЭлементВОтборе = ОтборОперации.НайтиПоЗначению(Элемент.Значение);
		Элемент.Пометка = (НайденныйЭлементВОтборе <> Неопределено);
	КонецЦикла;
	
	ОперацииЖурнала.ПоказатьОтметкуЭлементов(
		Новый ОписаниеОповещения("ПоказатьОтметкуЭлементовЗавершение", ЭтаФорма),
		НСтр("ru='Выберите операции'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтметкуЭлементовЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ОтборОперации.Очистить();
		Для Каждого ЭлементСписка Из Результат Цикл
			Если ЭлементСписка.Пометка Тогда
				ОтборОперации.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
			КонецЕсли;
		КонецЦикла;
		ОтборОперацииПриИзменении();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОперацииОчистка(Элемент, СтандартнаяОбработка)
	
	ОтборОперации.Очистить();
	
	ОтборОперацииПриИзменении();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьЗаказ(Команда)
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ХозяйственнаяОперация", ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию"));
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Документ.ЗаказНаВнутреннееПотребление.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПередачу(Команда)
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ХозяйственнаяОперация", ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию"));
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Документ.ВнутреннееПотреблениеТоваров.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПеремещение(Команда)
	
	ОткрытьФорму("Документ.ПеремещениеВЭксплуатации.ФормаОбъекта");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСписание(Команда)
	
	ОткрытьФорму("Документ.СписаниеИзЭксплуатации.ФормаОбъекта");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВозврат(Команда)
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("ХозяйственнаяОперация", ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратИзЭксплуатации"));
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Документ.ПрочееОприходованиеТоваров.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРегистрациюНаработок(Команда)
	
	ОткрытьФорму("Документ.РегистрацияНаработокТМЦВЭксплуатации.ФормаОбъекта");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	Документы.ВнутреннееПотреблениеТоваров.УстановитьУсловноеОформлениеСписка(Список);
	Документы.ПрочееОприходованиеТоваров.УстановитьУсловноеОформлениеСписка(Список);
	Документы.РегистрацияНаработокТМЦВЭксплуатации.УстановитьУсловноеОформлениеСписка(Список);
	
	СтандартныеПодсистемыСервер.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список.Дата", Элементы.Дата.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОперацииПриИзменении()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Тип",
		ОтборОперации,
		ВидСравненияКомпоновкиДанных.ВСписке,,
		ОтборОперации.Количество() > 0);
	
КонецПроцедуры

#КонецОбласти


